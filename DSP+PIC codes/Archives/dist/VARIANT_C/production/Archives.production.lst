

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sat Apr 13 17:14:18 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og9 
     1                           	processor	16F15345
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,noexec
    11                           	psect	cinit,global,class=CODE,merge=1,delta=2
    12                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    18                           	psect	inittext,global,class=CODE,delta=2
    19                           	psect	clrtext,global,class=CODE,delta=2
    20                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    21                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    23                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    24                           	psect	text1,local,class=CODE,merge=1,delta=2
    25                           	psect	text2,local,class=CODE,merge=1,delta=2
    26                           	psect	text3,local,class=CODE,merge=1,delta=2
    27                           	psect	text4,local,class=CODE,merge=1,delta=2
    28                           	psect	text5,local,class=CODE,merge=1,delta=2
    29                           	psect	text6,local,class=CODE,merge=1,delta=2
    30                           	psect	text7,local,class=CODE,merge=1,delta=2
    31                           	psect	text8,local,class=CODE,merge=1,delta=2
    32                           	psect	text9,local,class=CODE,merge=1,delta=2
    33                           	psect	text10,local,class=CODE,merge=1,delta=2
    34                           	psect	text11,local,class=CODE,merge=1,delta=2
    35                           	psect	text12,local,class=CODE,merge=1,delta=2
    36                           	psect	text13,local,class=CODE,merge=1,delta=2
    37                           	psect	text14,local,class=CODE,merge=1,delta=2
    38                           	psect	text15,local,class=CODE,merge=1,delta=2
    39                           	psect	text16,local,class=CODE,merge=1,delta=2
    40                           	psect	text17,local,class=CODE,merge=1,delta=2
    41                           	psect	text18,local,class=CODE,merge=1,delta=2
    42                           	psect	text19,local,class=CODE,merge=1,delta=2
    43                           	psect	text20,local,class=CODE,merge=1,delta=2
    44                           	psect	text21,local,class=CODE,merge=1,delta=2
    45                           	psect	text22,local,class=CODE,merge=1,delta=2
    46                           	psect	text23,local,class=CODE,merge=1,delta=2
    47                           	psect	text24,local,class=CODE,merge=1,delta=2
    48                           	psect	text25,local,class=CODE,merge=1,delta=2
    49                           	psect	text26,local,class=CODE,merge=1,delta=2
    50                           	psect	text27,local,class=CODE,merge=1,delta=2
    51                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    52                           	psect	text29,local,class=CODE,merge=1,delta=2
    53                           	psect	text30,local,class=CODE,merge=1,delta=2
    54                           	psect	text31,local,class=CODE,merge=1,delta=2
    55                           	psect	text32,local,class=CODE,merge=1,delta=2
    56                           	psect	text33,local,class=CODE,merge=1,delta=2
    57                           	psect	text34,local,class=CODE,merge=1,delta=2
    58                           	psect	text35,local,class=CODE,merge=1,delta=2,group=2
    59                           	psect	text36,local,class=CODE,merge=1,delta=2
    60                           	psect	text37,local,class=CODE,merge=1,delta=2
    61                           	psect	text38,local,class=CODE,merge=1,delta=2
    62                           	psect	text39,local,class=CODE,merge=1,delta=2
    63                           	psect	text40,local,class=CODE,merge=1,delta=2
    64                           	psect	text41,local,class=CODE,merge=1,delta=2
    65                           	psect	text42,local,class=CODE,merge=1,delta=2
    66                           	psect	text43,local,class=CODE,merge=1,delta=2
    67                           	psect	text44,local,class=CODE,merge=1,delta=2
    68                           	psect	text45,local,class=CODE,merge=1,delta=2
    69                           	psect	text46,local,class=CODE,merge=1,delta=2
    70                           	psect	text47,local,class=CODE,merge=1,delta=2
    71                           	psect	text48,local,class=CODE,merge=1,delta=2
    72                           	psect	text49,local,class=CODE,merge=1,delta=2
    73                           	psect	text50,local,class=CODE,merge=1,delta=2
    74                           	psect	text51,local,class=CODE,merge=1,delta=2,group=1
    75                           	psect	text52,local,class=CODE,merge=1,delta=2,group=1
    76                           	psect	text53,local,class=CODE,merge=1,delta=2,group=1
    77                           	psect	text54,local,class=CODE,merge=1,delta=2
    78                           	psect	text55,local,class=CODE,merge=1,delta=2
    79                           	psect	text56,local,class=CODE,merge=1,delta=2
    80                           	psect	text57,local,class=CODE,merge=1,delta=2
    81                           	psect	text58,local,class=CODE,merge=1,delta=2
    82                           	psect	text59,local,class=CODE,merge=1,delta=2
    83                           	psect	text60,local,class=CODE,merge=1,delta=2
    84                           	psect	text61,local,class=CODE,merge=1,delta=2
    85                           	psect	intentry,global,class=CODE,delta=2
    86                           	psect	text63,local,class=CODE,merge=1,delta=2
    87                           	psect	text64,local,class=CODE,merge=1,delta=2
    88                           	psect	text65,local,class=CODE,merge=1,delta=2
    89                           	psect	text66,local,class=CODE,merge=1,delta=2
    90                           	psect	text67,local,class=CODE,merge=1,delta=2
    91                           	psect	text68,local,class=CODE,merge=1,delta=2
    92                           	psect	text69,local,class=CODE,merge=1,delta=2
    93                           	psect	text70,local,class=CODE,merge=1,delta=2
    94                           	psect	text71,local,class=CODE,merge=1,delta=2
    95                           	psect	text72,local,class=CODE,merge=1,delta=2
    96                           	psect	text73,local,class=CODE,merge=1,delta=2
    97                           	psect	text74,local,class=CODE,merge=1,delta=2
    98                           	psect	text75,local,class=CODE,merge=1,delta=2
    99                           	psect	text76,local,class=CODE,merge=1,delta=2
   100                           	psect	text77,local,class=CODE,merge=1,delta=2
   101                           	psect	text78,local,class=CODE,merge=1,delta=2
   102                           	psect	text79,local,class=CODE,merge=1,delta=2
   103                           	psect	text80,local,class=CODE,merge=1,delta=2
   104                           	psect	text81,local,class=CODE,merge=1,delta=2
   105                           	psect	text82,local,class=CODE,merge=1,delta=2
   106                           	psect	text83,local,class=CODE,merge=1,delta=2
   107                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
   108                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   109                           	dabs	1,0x7E,2
   110     0000                     
   111                           ; Version 2.35
   112                           ; Generated 01/06/2021 GMT
   113                           ; 
   114                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   115                           ; All rights reserved.
   116                           ; 
   117                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   118                           ; 
   119                           ; Redistribution and use in source and binary forms, with or without modification, are
   120                           ; permitted provided that the following conditions are met:
   121                           ; 
   122                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   123                           ;        conditions and the following disclaimer.
   124                           ; 
   125                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   126                           ;        of conditions and the following disclaimer in the documentation and/or other
   127                           ;        materials provided with the distribution. Publication is not required when
   128                           ;        this file is used in an embedded application.
   129                           ; 
   130                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   131                           ;        software without specific prior written permission.
   132                           ; 
   133                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   134                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   135                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   136                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   137                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   138                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   139                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   140                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   141                           ; 
   142                           ; 
   143                           ; Code-generator required, PIC16F15345 Definitions
   144                           ; 
   145                           ; SFR Addresses
   146     0000                     	;# 
   147     0001                     	;# 
   148     0002                     	;# 
   149     0003                     	;# 
   150     0004                     	;# 
   151     0005                     	;# 
   152     0006                     	;# 
   153     0007                     	;# 
   154     0008                     	;# 
   155     0009                     	;# 
   156     000A                     	;# 
   157     000B                     	;# 
   158     000C                     	;# 
   159     000D                     	;# 
   160     000E                     	;# 
   161     0012                     	;# 
   162     0013                     	;# 
   163     0014                     	;# 
   164     0018                     	;# 
   165     0019                     	;# 
   166     001A                     	;# 
   167     009B                     	;# 
   168     009B                     	;# 
   169     009C                     	;# 
   170     009D                     	;# 
   171     009E                     	;# 
   172     009F                     	;# 
   173     0119                     	;# 
   174     0119                     	;# 
   175     0119                     	;# 
   176     011A                     	;# 
   177     011A                     	;# 
   178     011A                     	;# 
   179     011B                     	;# 
   180     011B                     	;# 
   181     011B                     	;# 
   182     011B                     	;# 
   183     011B                     	;# 
   184     011C                     	;# 
   185     011C                     	;# 
   186     011C                     	;# 
   187     011D                     	;# 
   188     011D                     	;# 
   189     011D                     	;# 
   190     011E                     	;# 
   191     011E                     	;# 
   192     011E                     	;# 
   193     011F                     	;# 
   194     011F                     	;# 
   195     011F                     	;# 
   196     011F                     	;# 
   197     011F                     	;# 
   198     018C                     	;# 
   199     018D                     	;# 
   200     018E                     	;# 
   201     018F                     	;# 
   202     0190                     	;# 
   203     0191                     	;# 
   204     0192                     	;# 
   205     020C                     	;# 
   206     020C                     	;# 
   207     020D                     	;# 
   208     020E                     	;# 
   209     020F                     	;# 
   210     020F                     	;# 
   211     0210                     	;# 
   212     0210                     	;# 
   213     0211                     	;# 
   214     0211                     	;# 
   215     028C                     	;# 
   216     028C                     	;# 
   217     028D                     	;# 
   218     028D                     	;# 
   219     028E                     	;# 
   220     028F                     	;# 
   221     0290                     	;# 
   222     0291                     	;# 
   223     030C                     	;# 
   224     030C                     	;# 
   225     030D                     	;# 
   226     030E                     	;# 
   227     030F                     	;# 
   228     0310                     	;# 
   229     0310                     	;# 
   230     0311                     	;# 
   231     0312                     	;# 
   232     0313                     	;# 
   233     0314                     	;# 
   234     0314                     	;# 
   235     0315                     	;# 
   236     0316                     	;# 
   237     0318                     	;# 
   238     0318                     	;# 
   239     0319                     	;# 
   240     031A                     	;# 
   241     031C                     	;# 
   242     031C                     	;# 
   243     031D                     	;# 
   244     031E                     	;# 
   245     038C                     	;# 
   246     038C                     	;# 
   247     038D                     	;# 
   248     038E                     	;# 
   249     058C                     	;# 
   250     058C                     	;# 
   251     058D                     	;# 
   252     058E                     	;# 
   253     058F                     	;# 
   254     058F                     	;# 
   255     0590                     	;# 
   256     0591                     	;# 
   257     0592                     	;# 
   258     0593                     	;# 
   259     059C                     	;# 
   260     059C                     	;# 
   261     059D                     	;# 
   262     059D                     	;# 
   263     059E                     	;# 
   264     059F                     	;# 
   265     060C                     	;# 
   266     060D                     	;# 
   267     060E                     	;# 
   268     060F                     	;# 
   269     0610                     	;# 
   270     0611                     	;# 
   271     0612                     	;# 
   272     0613                     	;# 
   273     0614                     	;# 
   274     070C                     	;# 
   275     070D                     	;# 
   276     070E                     	;# 
   277     070F                     	;# 
   278     0710                     	;# 
   279     0711                     	;# 
   280     0712                     	;# 
   281     0713                     	;# 
   282     0716                     	;# 
   283     0717                     	;# 
   284     0718                     	;# 
   285     0719                     	;# 
   286     071A                     	;# 
   287     071B                     	;# 
   288     071C                     	;# 
   289     071D                     	;# 
   290     0796                     	;# 
   291     0797                     	;# 
   292     0798                     	;# 
   293     0799                     	;# 
   294     079A                     	;# 
   295     079B                     	;# 
   296     080C                     	;# 
   297     080D                     	;# 
   298     080E                     	;# 
   299     080F                     	;# 
   300     0810                     	;# 
   301     0811                     	;# 
   302     0812                     	;# 
   303     0813                     	;# 
   304     0814                     	;# 
   305     081A                     	;# 
   306     081A                     	;# 
   307     081B                     	;# 
   308     081C                     	;# 
   309     081C                     	;# 
   310     081D                     	;# 
   311     081E                     	;# 
   312     081F                     	;# 
   313     088C                     	;# 
   314     088D                     	;# 
   315     088E                     	;# 
   316     088F                     	;# 
   317     0890                     	;# 
   318     0891                     	;# 
   319     0892                     	;# 
   320     0893                     	;# 
   321     0895                     	;# 
   322     0896                     	;# 
   323     090C                     	;# 
   324     090E                     	;# 
   325     090F                     	;# 
   326     091F                     	;# 
   327     098F                     	;# 
   328     098F                     	;# 
   329     0990                     	;# 
   330     0991                     	;# 
   331     0992                     	;# 
   332     0993                     	;# 
   333     0994                     	;# 
   334     0995                     	;# 
   335     0996                     	;# 
   336     0997                     	;# 
   337     0A19                     	;# 
   338     0A19                     	;# 
   339     0A1A                     	;# 
   340     0A1A                     	;# 
   341     0A1B                     	;# 
   342     0A1B                     	;# 
   343     0A1B                     	;# 
   344     0A1C                     	;# 
   345     0A1C                     	;# 
   346     0A1D                     	;# 
   347     0A1D                     	;# 
   348     0A1E                     	;# 
   349     0A1E                     	;# 
   350     0A1F                     	;# 
   351     0A1F                     	;# 
   352     0A1F                     	;# 
   353     1E0F                     	;# 
   354     1E10                     	;# 
   355     1E11                     	;# 
   356     1E12                     	;# 
   357     1E13                     	;# 
   358     1E14                     	;# 
   359     1E15                     	;# 
   360     1E16                     	;# 
   361     1E17                     	;# 
   362     1E18                     	;# 
   363     1E19                     	;# 
   364     1E1A                     	;# 
   365     1E1B                     	;# 
   366     1E1C                     	;# 
   367     1E1D                     	;# 
   368     1E1E                     	;# 
   369     1E1F                     	;# 
   370     1E20                     	;# 
   371     1E21                     	;# 
   372     1E22                     	;# 
   373     1E23                     	;# 
   374     1E24                     	;# 
   375     1E25                     	;# 
   376     1E26                     	;# 
   377     1E27                     	;# 
   378     1E28                     	;# 
   379     1E29                     	;# 
   380     1E2A                     	;# 
   381     1E2B                     	;# 
   382     1E2C                     	;# 
   383     1E2D                     	;# 
   384     1E2E                     	;# 
   385     1E2F                     	;# 
   386     1E30                     	;# 
   387     1E31                     	;# 
   388     1E32                     	;# 
   389     1E33                     	;# 
   390     1E34                     	;# 
   391     1E35                     	;# 
   392     1E36                     	;# 
   393     1E37                     	;# 
   394     1E8F                     	;# 
   395     1E90                     	;# 
   396     1E91                     	;# 
   397     1E92                     	;# 
   398     1E93                     	;# 
   399     1E9C                     	;# 
   400     1EA1                     	;# 
   401     1EA2                     	;# 
   402     1EB1                     	;# 
   403     1EBB                     	;# 
   404     1EBC                     	;# 
   405     1EBD                     	;# 
   406     1EBE                     	;# 
   407     1EC3                     	;# 
   408     1EC5                     	;# 
   409     1EC6                     	;# 
   410     1EC7                     	;# 
   411     1ECB                     	;# 
   412     1ECC                     	;# 
   413     1ECD                     	;# 
   414     1ECE                     	;# 
   415     1F10                     	;# 
   416     1F11                     	;# 
   417     1F12                     	;# 
   418     1F13                     	;# 
   419     1F14                     	;# 
   420     1F15                     	;# 
   421     1F1C                     	;# 
   422     1F1D                     	;# 
   423     1F1E                     	;# 
   424     1F1F                     	;# 
   425     1F20                     	;# 
   426     1F21                     	;# 
   427     1F22                     	;# 
   428     1F23                     	;# 
   429     1F24                     	;# 
   430     1F25                     	;# 
   431     1F26                     	;# 
   432     1F27                     	;# 
   433     1F38                     	;# 
   434     1F39                     	;# 
   435     1F3A                     	;# 
   436     1F3B                     	;# 
   437     1F3C                     	;# 
   438     1F3D                     	;# 
   439     1F3E                     	;# 
   440     1F3F                     	;# 
   441     1F43                     	;# 
   442     1F44                     	;# 
   443     1F45                     	;# 
   444     1F46                     	;# 
   445     1F47                     	;# 
   446     1F48                     	;# 
   447     1F49                     	;# 
   448     1F4A                     	;# 
   449     1F4E                     	;# 
   450     1F4F                     	;# 
   451     1F50                     	;# 
   452     1F51                     	;# 
   453     1F52                     	;# 
   454     1F53                     	;# 
   455     1F54                     	;# 
   456     1F55                     	;# 
   457     1FE4                     	;# 
   458     1FE5                     	;# 
   459     1FE6                     	;# 
   460     1FE7                     	;# 
   461     1FE8                     	;# 
   462     1FE8                     	;# 
   463     1FE9                     	;# 
   464     1FEA                     	;# 
   465     1FEA                     	;# 
   466     1FEB                     	;# 
   467     1FED                     	;# 
   468     1FEE                     	;# 
   469     1FEF                     	;# 
   470     0000                     	;# 
   471     0001                     	;# 
   472     0002                     	;# 
   473     0003                     	;# 
   474     0004                     	;# 
   475     0005                     	;# 
   476     0006                     	;# 
   477     0007                     	;# 
   478     0008                     	;# 
   479     0009                     	;# 
   480     000A                     	;# 
   481     000B                     	;# 
   482     000C                     	;# 
   483     000D                     	;# 
   484     000E                     	;# 
   485     0012                     	;# 
   486     0013                     	;# 
   487     0014                     	;# 
   488     0018                     	;# 
   489     0019                     	;# 
   490     001A                     	;# 
   491     009B                     	;# 
   492     009B                     	;# 
   493     009C                     	;# 
   494     009D                     	;# 
   495     009E                     	;# 
   496     009F                     	;# 
   497     0119                     	;# 
   498     0119                     	;# 
   499     0119                     	;# 
   500     011A                     	;# 
   501     011A                     	;# 
   502     011A                     	;# 
   503     011B                     	;# 
   504     011B                     	;# 
   505     011B                     	;# 
   506     011B                     	;# 
   507     011B                     	;# 
   508     011C                     	;# 
   509     011C                     	;# 
   510     011C                     	;# 
   511     011D                     	;# 
   512     011D                     	;# 
   513     011D                     	;# 
   514     011E                     	;# 
   515     011E                     	;# 
   516     011E                     	;# 
   517     011F                     	;# 
   518     011F                     	;# 
   519     011F                     	;# 
   520     011F                     	;# 
   521     011F                     	;# 
   522     018C                     	;# 
   523     018D                     	;# 
   524     018E                     	;# 
   525     018F                     	;# 
   526     0190                     	;# 
   527     0191                     	;# 
   528     0192                     	;# 
   529     020C                     	;# 
   530     020C                     	;# 
   531     020D                     	;# 
   532     020E                     	;# 
   533     020F                     	;# 
   534     020F                     	;# 
   535     0210                     	;# 
   536     0210                     	;# 
   537     0211                     	;# 
   538     0211                     	;# 
   539     028C                     	;# 
   540     028C                     	;# 
   541     028D                     	;# 
   542     028D                     	;# 
   543     028E                     	;# 
   544     028F                     	;# 
   545     0290                     	;# 
   546     0291                     	;# 
   547     030C                     	;# 
   548     030C                     	;# 
   549     030D                     	;# 
   550     030E                     	;# 
   551     030F                     	;# 
   552     0310                     	;# 
   553     0310                     	;# 
   554     0311                     	;# 
   555     0312                     	;# 
   556     0313                     	;# 
   557     0314                     	;# 
   558     0314                     	;# 
   559     0315                     	;# 
   560     0316                     	;# 
   561     0318                     	;# 
   562     0318                     	;# 
   563     0319                     	;# 
   564     031A                     	;# 
   565     031C                     	;# 
   566     031C                     	;# 
   567     031D                     	;# 
   568     031E                     	;# 
   569     038C                     	;# 
   570     038C                     	;# 
   571     038D                     	;# 
   572     038E                     	;# 
   573     058C                     	;# 
   574     058C                     	;# 
   575     058D                     	;# 
   576     058E                     	;# 
   577     058F                     	;# 
   578     058F                     	;# 
   579     0590                     	;# 
   580     0591                     	;# 
   581     0592                     	;# 
   582     0593                     	;# 
   583     059C                     	;# 
   584     059C                     	;# 
   585     059D                     	;# 
   586     059D                     	;# 
   587     059E                     	;# 
   588     059F                     	;# 
   589     060C                     	;# 
   590     060D                     	;# 
   591     060E                     	;# 
   592     060F                     	;# 
   593     0610                     	;# 
   594     0611                     	;# 
   595     0612                     	;# 
   596     0613                     	;# 
   597     0614                     	;# 
   598     070C                     	;# 
   599     070D                     	;# 
   600     070E                     	;# 
   601     070F                     	;# 
   602     0710                     	;# 
   603     0711                     	;# 
   604     0712                     	;# 
   605     0713                     	;# 
   606     0716                     	;# 
   607     0717                     	;# 
   608     0718                     	;# 
   609     0719                     	;# 
   610     071A                     	;# 
   611     071B                     	;# 
   612     071C                     	;# 
   613     071D                     	;# 
   614     0796                     	;# 
   615     0797                     	;# 
   616     0798                     	;# 
   617     0799                     	;# 
   618     079A                     	;# 
   619     079B                     	;# 
   620     080C                     	;# 
   621     080D                     	;# 
   622     080E                     	;# 
   623     080F                     	;# 
   624     0810                     	;# 
   625     0811                     	;# 
   626     0812                     	;# 
   627     0813                     	;# 
   628     0814                     	;# 
   629     081A                     	;# 
   630     081A                     	;# 
   631     081B                     	;# 
   632     081C                     	;# 
   633     081C                     	;# 
   634     081D                     	;# 
   635     081E                     	;# 
   636     081F                     	;# 
   637     088C                     	;# 
   638     088D                     	;# 
   639     088E                     	;# 
   640     088F                     	;# 
   641     0890                     	;# 
   642     0891                     	;# 
   643     0892                     	;# 
   644     0893                     	;# 
   645     0895                     	;# 
   646     0896                     	;# 
   647     090C                     	;# 
   648     090E                     	;# 
   649     090F                     	;# 
   650     091F                     	;# 
   651     098F                     	;# 
   652     098F                     	;# 
   653     0990                     	;# 
   654     0991                     	;# 
   655     0992                     	;# 
   656     0993                     	;# 
   657     0994                     	;# 
   658     0995                     	;# 
   659     0996                     	;# 
   660     0997                     	;# 
   661     0A19                     	;# 
   662     0A19                     	;# 
   663     0A1A                     	;# 
   664     0A1A                     	;# 
   665     0A1B                     	;# 
   666     0A1B                     	;# 
   667     0A1B                     	;# 
   668     0A1C                     	;# 
   669     0A1C                     	;# 
   670     0A1D                     	;# 
   671     0A1D                     	;# 
   672     0A1E                     	;# 
   673     0A1E                     	;# 
   674     0A1F                     	;# 
   675     0A1F                     	;# 
   676     0A1F                     	;# 
   677     1E0F                     	;# 
   678     1E10                     	;# 
   679     1E11                     	;# 
   680     1E12                     	;# 
   681     1E13                     	;# 
   682     1E14                     	;# 
   683     1E15                     	;# 
   684     1E16                     	;# 
   685     1E17                     	;# 
   686     1E18                     	;# 
   687     1E19                     	;# 
   688     1E1A                     	;# 
   689     1E1B                     	;# 
   690     1E1C                     	;# 
   691     1E1D                     	;# 
   692     1E1E                     	;# 
   693     1E1F                     	;# 
   694     1E20                     	;# 
   695     1E21                     	;# 
   696     1E22                     	;# 
   697     1E23                     	;# 
   698     1E24                     	;# 
   699     1E25                     	;# 
   700     1E26                     	;# 
   701     1E27                     	;# 
   702     1E28                     	;# 
   703     1E29                     	;# 
   704     1E2A                     	;# 
   705     1E2B                     	;# 
   706     1E2C                     	;# 
   707     1E2D                     	;# 
   708     1E2E                     	;# 
   709     1E2F                     	;# 
   710     1E30                     	;# 
   711     1E31                     	;# 
   712     1E32                     	;# 
   713     1E33                     	;# 
   714     1E34                     	;# 
   715     1E35                     	;# 
   716     1E36                     	;# 
   717     1E37                     	;# 
   718     1E8F                     	;# 
   719     1E90                     	;# 
   720     1E91                     	;# 
   721     1E92                     	;# 
   722     1E93                     	;# 
   723     1E9C                     	;# 
   724     1EA1                     	;# 
   725     1EA2                     	;# 
   726     1EB1                     	;# 
   727     1EBB                     	;# 
   728     1EBC                     	;# 
   729     1EBD                     	;# 
   730     1EBE                     	;# 
   731     1EC3                     	;# 
   732     1EC5                     	;# 
   733     1EC6                     	;# 
   734     1EC7                     	;# 
   735     1ECB                     	;# 
   736     1ECC                     	;# 
   737     1ECD                     	;# 
   738     1ECE                     	;# 
   739     1F10                     	;# 
   740     1F11                     	;# 
   741     1F12                     	;# 
   742     1F13                     	;# 
   743     1F14                     	;# 
   744     1F15                     	;# 
   745     1F1C                     	;# 
   746     1F1D                     	;# 
   747     1F1E                     	;# 
   748     1F1F                     	;# 
   749     1F20                     	;# 
   750     1F21                     	;# 
   751     1F22                     	;# 
   752     1F23                     	;# 
   753     1F24                     	;# 
   754     1F25                     	;# 
   755     1F26                     	;# 
   756     1F27                     	;# 
   757     1F38                     	;# 
   758     1F39                     	;# 
   759     1F3A                     	;# 
   760     1F3B                     	;# 
   761     1F3C                     	;# 
   762     1F3D                     	;# 
   763     1F3E                     	;# 
   764     1F3F                     	;# 
   765     1F43                     	;# 
   766     1F44                     	;# 
   767     1F45                     	;# 
   768     1F46                     	;# 
   769     1F47                     	;# 
   770     1F48                     	;# 
   771     1F49                     	;# 
   772     1F4A                     	;# 
   773     1F4E                     	;# 
   774     1F4F                     	;# 
   775     1F50                     	;# 
   776     1F51                     	;# 
   777     1F52                     	;# 
   778     1F53                     	;# 
   779     1F54                     	;# 
   780     1F55                     	;# 
   781     1FE4                     	;# 
   782     1FE5                     	;# 
   783     1FE6                     	;# 
   784     1FE7                     	;# 
   785     1FE8                     	;# 
   786     1FE8                     	;# 
   787     1FE9                     	;# 
   788     1FEA                     	;# 
   789     1FEA                     	;# 
   790     1FEB                     	;# 
   791     1FED                     	;# 
   792     1FEE                     	;# 
   793     1FEF                     	;# 
   794     0000                     	;# 
   795     0001                     	;# 
   796     0002                     	;# 
   797     0003                     	;# 
   798     0004                     	;# 
   799     0005                     	;# 
   800     0006                     	;# 
   801     0007                     	;# 
   802     0008                     	;# 
   803     0009                     	;# 
   804     000A                     	;# 
   805     000B                     	;# 
   806     000C                     	;# 
   807     000D                     	;# 
   808     000E                     	;# 
   809     0012                     	;# 
   810     0013                     	;# 
   811     0014                     	;# 
   812     0018                     	;# 
   813     0019                     	;# 
   814     001A                     	;# 
   815     009B                     	;# 
   816     009B                     	;# 
   817     009C                     	;# 
   818     009D                     	;# 
   819     009E                     	;# 
   820     009F                     	;# 
   821     0119                     	;# 
   822     0119                     	;# 
   823     0119                     	;# 
   824     011A                     	;# 
   825     011A                     	;# 
   826     011A                     	;# 
   827     011B                     	;# 
   828     011B                     	;# 
   829     011B                     	;# 
   830     011B                     	;# 
   831     011B                     	;# 
   832     011C                     	;# 
   833     011C                     	;# 
   834     011C                     	;# 
   835     011D                     	;# 
   836     011D                     	;# 
   837     011D                     	;# 
   838     011E                     	;# 
   839     011E                     	;# 
   840     011E                     	;# 
   841     011F                     	;# 
   842     011F                     	;# 
   843     011F                     	;# 
   844     011F                     	;# 
   845     011F                     	;# 
   846     018C                     	;# 
   847     018D                     	;# 
   848     018E                     	;# 
   849     018F                     	;# 
   850     0190                     	;# 
   851     0191                     	;# 
   852     0192                     	;# 
   853     020C                     	;# 
   854     020C                     	;# 
   855     020D                     	;# 
   856     020E                     	;# 
   857     020F                     	;# 
   858     020F                     	;# 
   859     0210                     	;# 
   860     0210                     	;# 
   861     0211                     	;# 
   862     0211                     	;# 
   863     028C                     	;# 
   864     028C                     	;# 
   865     028D                     	;# 
   866     028D                     	;# 
   867     028E                     	;# 
   868     028F                     	;# 
   869     0290                     	;# 
   870     0291                     	;# 
   871     030C                     	;# 
   872     030C                     	;# 
   873     030D                     	;# 
   874     030E                     	;# 
   875     030F                     	;# 
   876     0310                     	;# 
   877     0310                     	;# 
   878     0311                     	;# 
   879     0312                     	;# 
   880     0313                     	;# 
   881     0314                     	;# 
   882     0314                     	;# 
   883     0315                     	;# 
   884     0316                     	;# 
   885     0318                     	;# 
   886     0318                     	;# 
   887     0319                     	;# 
   888     031A                     	;# 
   889     031C                     	;# 
   890     031C                     	;# 
   891     031D                     	;# 
   892     031E                     	;# 
   893     038C                     	;# 
   894     038C                     	;# 
   895     038D                     	;# 
   896     038E                     	;# 
   897     058C                     	;# 
   898     058C                     	;# 
   899     058D                     	;# 
   900     058E                     	;# 
   901     058F                     	;# 
   902     058F                     	;# 
   903     0590                     	;# 
   904     0591                     	;# 
   905     0592                     	;# 
   906     0593                     	;# 
   907     059C                     	;# 
   908     059C                     	;# 
   909     059D                     	;# 
   910     059D                     	;# 
   911     059E                     	;# 
   912     059F                     	;# 
   913     060C                     	;# 
   914     060D                     	;# 
   915     060E                     	;# 
   916     060F                     	;# 
   917     0610                     	;# 
   918     0611                     	;# 
   919     0612                     	;# 
   920     0613                     	;# 
   921     0614                     	;# 
   922     070C                     	;# 
   923     070D                     	;# 
   924     070E                     	;# 
   925     070F                     	;# 
   926     0710                     	;# 
   927     0711                     	;# 
   928     0712                     	;# 
   929     0713                     	;# 
   930     0716                     	;# 
   931     0717                     	;# 
   932     0718                     	;# 
   933     0719                     	;# 
   934     071A                     	;# 
   935     071B                     	;# 
   936     071C                     	;# 
   937     071D                     	;# 
   938     0796                     	;# 
   939     0797                     	;# 
   940     0798                     	;# 
   941     0799                     	;# 
   942     079A                     	;# 
   943     079B                     	;# 
   944     080C                     	;# 
   945     080D                     	;# 
   946     080E                     	;# 
   947     080F                     	;# 
   948     0810                     	;# 
   949     0811                     	;# 
   950     0812                     	;# 
   951     0813                     	;# 
   952     0814                     	;# 
   953     081A                     	;# 
   954     081A                     	;# 
   955     081B                     	;# 
   956     081C                     	;# 
   957     081C                     	;# 
   958     081D                     	;# 
   959     081E                     	;# 
   960     081F                     	;# 
   961     088C                     	;# 
   962     088D                     	;# 
   963     088E                     	;# 
   964     088F                     	;# 
   965     0890                     	;# 
   966     0891                     	;# 
   967     0892                     	;# 
   968     0893                     	;# 
   969     0895                     	;# 
   970     0896                     	;# 
   971     090C                     	;# 
   972     090E                     	;# 
   973     090F                     	;# 
   974     091F                     	;# 
   975     098F                     	;# 
   976     098F                     	;# 
   977     0990                     	;# 
   978     0991                     	;# 
   979     0992                     	;# 
   980     0993                     	;# 
   981     0994                     	;# 
   982     0995                     	;# 
   983     0996                     	;# 
   984     0997                     	;# 
   985     0A19                     	;# 
   986     0A19                     	;# 
   987     0A1A                     	;# 
   988     0A1A                     	;# 
   989     0A1B                     	;# 
   990     0A1B                     	;# 
   991     0A1B                     	;# 
   992     0A1C                     	;# 
   993     0A1C                     	;# 
   994     0A1D                     	;# 
   995     0A1D                     	;# 
   996     0A1E                     	;# 
   997     0A1E                     	;# 
   998     0A1F                     	;# 
   999     0A1F                     	;# 
  1000     0A1F                     	;# 
  1001     1E0F                     	;# 
  1002     1E10                     	;# 
  1003     1E11                     	;# 
  1004     1E12                     	;# 
  1005     1E13                     	;# 
  1006     1E14                     	;# 
  1007     1E15                     	;# 
  1008     1E16                     	;# 
  1009     1E17                     	;# 
  1010     1E18                     	;# 
  1011     1E19                     	;# 
  1012     1E1A                     	;# 
  1013     1E1B                     	;# 
  1014     1E1C                     	;# 
  1015     1E1D                     	;# 
  1016     1E1E                     	;# 
  1017     1E1F                     	;# 
  1018     1E20                     	;# 
  1019     1E21                     	;# 
  1020     1E22                     	;# 
  1021     1E23                     	;# 
  1022     1E24                     	;# 
  1023     1E25                     	;# 
  1024     1E26                     	;# 
  1025     1E27                     	;# 
  1026     1E28                     	;# 
  1027     1E29                     	;# 
  1028     1E2A                     	;# 
  1029     1E2B                     	;# 
  1030     1E2C                     	;# 
  1031     1E2D                     	;# 
  1032     1E2E                     	;# 
  1033     1E2F                     	;# 
  1034     1E30                     	;# 
  1035     1E31                     	;# 
  1036     1E32                     	;# 
  1037     1E33                     	;# 
  1038     1E34                     	;# 
  1039     1E35                     	;# 
  1040     1E36                     	;# 
  1041     1E37                     	;# 
  1042     1E8F                     	;# 
  1043     1E90                     	;# 
  1044     1E91                     	;# 
  1045     1E92                     	;# 
  1046     1E93                     	;# 
  1047     1E9C                     	;# 
  1048     1EA1                     	;# 
  1049     1EA2                     	;# 
  1050     1EB1                     	;# 
  1051     1EBB                     	;# 
  1052     1EBC                     	;# 
  1053     1EBD                     	;# 
  1054     1EBE                     	;# 
  1055     1EC3                     	;# 
  1056     1EC5                     	;# 
  1057     1EC6                     	;# 
  1058     1EC7                     	;# 
  1059     1ECB                     	;# 
  1060     1ECC                     	;# 
  1061     1ECD                     	;# 
  1062     1ECE                     	;# 
  1063     1F10                     	;# 
  1064     1F11                     	;# 
  1065     1F12                     	;# 
  1066     1F13                     	;# 
  1067     1F14                     	;# 
  1068     1F15                     	;# 
  1069     1F1C                     	;# 
  1070     1F1D                     	;# 
  1071     1F1E                     	;# 
  1072     1F1F                     	;# 
  1073     1F20                     	;# 
  1074     1F21                     	;# 
  1075     1F22                     	;# 
  1076     1F23                     	;# 
  1077     1F24                     	;# 
  1078     1F25                     	;# 
  1079     1F26                     	;# 
  1080     1F27                     	;# 
  1081     1F38                     	;# 
  1082     1F39                     	;# 
  1083     1F3A                     	;# 
  1084     1F3B                     	;# 
  1085     1F3C                     	;# 
  1086     1F3D                     	;# 
  1087     1F3E                     	;# 
  1088     1F3F                     	;# 
  1089     1F43                     	;# 
  1090     1F44                     	;# 
  1091     1F45                     	;# 
  1092     1F46                     	;# 
  1093     1F47                     	;# 
  1094     1F48                     	;# 
  1095     1F49                     	;# 
  1096     1F4A                     	;# 
  1097     1F4E                     	;# 
  1098     1F4F                     	;# 
  1099     1F50                     	;# 
  1100     1F51                     	;# 
  1101     1F52                     	;# 
  1102     1F53                     	;# 
  1103     1F54                     	;# 
  1104     1F55                     	;# 
  1105     1FE4                     	;# 
  1106     1FE5                     	;# 
  1107     1FE6                     	;# 
  1108     1FE7                     	;# 
  1109     1FE8                     	;# 
  1110     1FE8                     	;# 
  1111     1FE9                     	;# 
  1112     1FEA                     	;# 
  1113     1FEA                     	;# 
  1114     1FEB                     	;# 
  1115     1FED                     	;# 
  1116     1FEE                     	;# 
  1117     1FEF                     	;# 
  1118     0000                     	;# 
  1119     0001                     	;# 
  1120     0002                     	;# 
  1121     0003                     	;# 
  1122     0004                     	;# 
  1123     0005                     	;# 
  1124     0006                     	;# 
  1125     0007                     	;# 
  1126     0008                     	;# 
  1127     0009                     	;# 
  1128     000A                     	;# 
  1129     000B                     	;# 
  1130     000C                     	;# 
  1131     000D                     	;# 
  1132     000E                     	;# 
  1133     0012                     	;# 
  1134     0013                     	;# 
  1135     0014                     	;# 
  1136     0018                     	;# 
  1137     0019                     	;# 
  1138     001A                     	;# 
  1139     009B                     	;# 
  1140     009B                     	;# 
  1141     009C                     	;# 
  1142     009D                     	;# 
  1143     009E                     	;# 
  1144     009F                     	;# 
  1145     0119                     	;# 
  1146     0119                     	;# 
  1147     0119                     	;# 
  1148     011A                     	;# 
  1149     011A                     	;# 
  1150     011A                     	;# 
  1151     011B                     	;# 
  1152     011B                     	;# 
  1153     011B                     	;# 
  1154     011B                     	;# 
  1155     011B                     	;# 
  1156     011C                     	;# 
  1157     011C                     	;# 
  1158     011C                     	;# 
  1159     011D                     	;# 
  1160     011D                     	;# 
  1161     011D                     	;# 
  1162     011E                     	;# 
  1163     011E                     	;# 
  1164     011E                     	;# 
  1165     011F                     	;# 
  1166     011F                     	;# 
  1167     011F                     	;# 
  1168     011F                     	;# 
  1169     011F                     	;# 
  1170     018C                     	;# 
  1171     018D                     	;# 
  1172     018E                     	;# 
  1173     018F                     	;# 
  1174     0190                     	;# 
  1175     0191                     	;# 
  1176     0192                     	;# 
  1177     020C                     	;# 
  1178     020C                     	;# 
  1179     020D                     	;# 
  1180     020E                     	;# 
  1181     020F                     	;# 
  1182     020F                     	;# 
  1183     0210                     	;# 
  1184     0210                     	;# 
  1185     0211                     	;# 
  1186     0211                     	;# 
  1187     028C                     	;# 
  1188     028C                     	;# 
  1189     028D                     	;# 
  1190     028D                     	;# 
  1191     028E                     	;# 
  1192     028F                     	;# 
  1193     0290                     	;# 
  1194     0291                     	;# 
  1195     030C                     	;# 
  1196     030C                     	;# 
  1197     030D                     	;# 
  1198     030E                     	;# 
  1199     030F                     	;# 
  1200     0310                     	;# 
  1201     0310                     	;# 
  1202     0311                     	;# 
  1203     0312                     	;# 
  1204     0313                     	;# 
  1205     0314                     	;# 
  1206     0314                     	;# 
  1207     0315                     	;# 
  1208     0316                     	;# 
  1209     0318                     	;# 
  1210     0318                     	;# 
  1211     0319                     	;# 
  1212     031A                     	;# 
  1213     031C                     	;# 
  1214     031C                     	;# 
  1215     031D                     	;# 
  1216     031E                     	;# 
  1217     038C                     	;# 
  1218     038C                     	;# 
  1219     038D                     	;# 
  1220     038E                     	;# 
  1221     058C                     	;# 
  1222     058C                     	;# 
  1223     058D                     	;# 
  1224     058E                     	;# 
  1225     058F                     	;# 
  1226     058F                     	;# 
  1227     0590                     	;# 
  1228     0591                     	;# 
  1229     0592                     	;# 
  1230     0593                     	;# 
  1231     059C                     	;# 
  1232     059C                     	;# 
  1233     059D                     	;# 
  1234     059D                     	;# 
  1235     059E                     	;# 
  1236     059F                     	;# 
  1237     060C                     	;# 
  1238     060D                     	;# 
  1239     060E                     	;# 
  1240     060F                     	;# 
  1241     0610                     	;# 
  1242     0611                     	;# 
  1243     0612                     	;# 
  1244     0613                     	;# 
  1245     0614                     	;# 
  1246     070C                     	;# 
  1247     070D                     	;# 
  1248     070E                     	;# 
  1249     070F                     	;# 
  1250     0710                     	;# 
  1251     0711                     	;# 
  1252     0712                     	;# 
  1253     0713                     	;# 
  1254     0716                     	;# 
  1255     0717                     	;# 
  1256     0718                     	;# 
  1257     0719                     	;# 
  1258     071A                     	;# 
  1259     071B                     	;# 
  1260     071C                     	;# 
  1261     071D                     	;# 
  1262     0796                     	;# 
  1263     0797                     	;# 
  1264     0798                     	;# 
  1265     0799                     	;# 
  1266     079A                     	;# 
  1267     079B                     	;# 
  1268     080C                     	;# 
  1269     080D                     	;# 
  1270     080E                     	;# 
  1271     080F                     	;# 
  1272     0810                     	;# 
  1273     0811                     	;# 
  1274     0812                     	;# 
  1275     0813                     	;# 
  1276     0814                     	;# 
  1277     081A                     	;# 
  1278     081A                     	;# 
  1279     081B                     	;# 
  1280     081C                     	;# 
  1281     081C                     	;# 
  1282     081D                     	;# 
  1283     081E                     	;# 
  1284     081F                     	;# 
  1285     088C                     	;# 
  1286     088D                     	;# 
  1287     088E                     	;# 
  1288     088F                     	;# 
  1289     0890                     	;# 
  1290     0891                     	;# 
  1291     0892                     	;# 
  1292     0893                     	;# 
  1293     0895                     	;# 
  1294     0896                     	;# 
  1295     090C                     	;# 
  1296     090E                     	;# 
  1297     090F                     	;# 
  1298     091F                     	;# 
  1299     098F                     	;# 
  1300     098F                     	;# 
  1301     0990                     	;# 
  1302     0991                     	;# 
  1303     0992                     	;# 
  1304     0993                     	;# 
  1305     0994                     	;# 
  1306     0995                     	;# 
  1307     0996                     	;# 
  1308     0997                     	;# 
  1309     0A19                     	;# 
  1310     0A19                     	;# 
  1311     0A1A                     	;# 
  1312     0A1A                     	;# 
  1313     0A1B                     	;# 
  1314     0A1B                     	;# 
  1315     0A1B                     	;# 
  1316     0A1C                     	;# 
  1317     0A1C                     	;# 
  1318     0A1D                     	;# 
  1319     0A1D                     	;# 
  1320     0A1E                     	;# 
  1321     0A1E                     	;# 
  1322     0A1F                     	;# 
  1323     0A1F                     	;# 
  1324     0A1F                     	;# 
  1325     1E0F                     	;# 
  1326     1E10                     	;# 
  1327     1E11                     	;# 
  1328     1E12                     	;# 
  1329     1E13                     	;# 
  1330     1E14                     	;# 
  1331     1E15                     	;# 
  1332     1E16                     	;# 
  1333     1E17                     	;# 
  1334     1E18                     	;# 
  1335     1E19                     	;# 
  1336     1E1A                     	;# 
  1337     1E1B                     	;# 
  1338     1E1C                     	;# 
  1339     1E1D                     	;# 
  1340     1E1E                     	;# 
  1341     1E1F                     	;# 
  1342     1E20                     	;# 
  1343     1E21                     	;# 
  1344     1E22                     	;# 
  1345     1E23                     	;# 
  1346     1E24                     	;# 
  1347     1E25                     	;# 
  1348     1E26                     	;# 
  1349     1E27                     	;# 
  1350     1E28                     	;# 
  1351     1E29                     	;# 
  1352     1E2A                     	;# 
  1353     1E2B                     	;# 
  1354     1E2C                     	;# 
  1355     1E2D                     	;# 
  1356     1E2E                     	;# 
  1357     1E2F                     	;# 
  1358     1E30                     	;# 
  1359     1E31                     	;# 
  1360     1E32                     	;# 
  1361     1E33                     	;# 
  1362     1E34                     	;# 
  1363     1E35                     	;# 
  1364     1E36                     	;# 
  1365     1E37                     	;# 
  1366     1E8F                     	;# 
  1367     1E90                     	;# 
  1368     1E91                     	;# 
  1369     1E92                     	;# 
  1370     1E93                     	;# 
  1371     1E9C                     	;# 
  1372     1EA1                     	;# 
  1373     1EA2                     	;# 
  1374     1EB1                     	;# 
  1375     1EBB                     	;# 
  1376     1EBC                     	;# 
  1377     1EBD                     	;# 
  1378     1EBE                     	;# 
  1379     1EC3                     	;# 
  1380     1EC5                     	;# 
  1381     1EC6                     	;# 
  1382     1EC7                     	;# 
  1383     1ECB                     	;# 
  1384     1ECC                     	;# 
  1385     1ECD                     	;# 
  1386     1ECE                     	;# 
  1387     1F10                     	;# 
  1388     1F11                     	;# 
  1389     1F12                     	;# 
  1390     1F13                     	;# 
  1391     1F14                     	;# 
  1392     1F15                     	;# 
  1393     1F1C                     	;# 
  1394     1F1D                     	;# 
  1395     1F1E                     	;# 
  1396     1F1F                     	;# 
  1397     1F20                     	;# 
  1398     1F21                     	;# 
  1399     1F22                     	;# 
  1400     1F23                     	;# 
  1401     1F24                     	;# 
  1402     1F25                     	;# 
  1403     1F26                     	;# 
  1404     1F27                     	;# 
  1405     1F38                     	;# 
  1406     1F39                     	;# 
  1407     1F3A                     	;# 
  1408     1F3B                     	;# 
  1409     1F3C                     	;# 
  1410     1F3D                     	;# 
  1411     1F3E                     	;# 
  1412     1F3F                     	;# 
  1413     1F43                     	;# 
  1414     1F44                     	;# 
  1415     1F45                     	;# 
  1416     1F46                     	;# 
  1417     1F47                     	;# 
  1418     1F48                     	;# 
  1419     1F49                     	;# 
  1420     1F4A                     	;# 
  1421     1F4E                     	;# 
  1422     1F4F                     	;# 
  1423     1F50                     	;# 
  1424     1F51                     	;# 
  1425     1F52                     	;# 
  1426     1F53                     	;# 
  1427     1F54                     	;# 
  1428     1F55                     	;# 
  1429     1FE4                     	;# 
  1430     1FE5                     	;# 
  1431     1FE6                     	;# 
  1432     1FE7                     	;# 
  1433     1FE8                     	;# 
  1434     1FE8                     	;# 
  1435     1FE9                     	;# 
  1436     1FEA                     	;# 
  1437     1FEA                     	;# 
  1438     1FEB                     	;# 
  1439     1FED                     	;# 
  1440     1FEE                     	;# 
  1441     1FEF                     	;# 
  1442     0000                     	;# 
  1443     0001                     	;# 
  1444     0002                     	;# 
  1445     0003                     	;# 
  1446     0004                     	;# 
  1447     0005                     	;# 
  1448     0006                     	;# 
  1449     0007                     	;# 
  1450     0008                     	;# 
  1451     0009                     	;# 
  1452     000A                     	;# 
  1453     000B                     	;# 
  1454     000C                     	;# 
  1455     000D                     	;# 
  1456     000E                     	;# 
  1457     0012                     	;# 
  1458     0013                     	;# 
  1459     0014                     	;# 
  1460     0018                     	;# 
  1461     0019                     	;# 
  1462     001A                     	;# 
  1463     009B                     	;# 
  1464     009B                     	;# 
  1465     009C                     	;# 
  1466     009D                     	;# 
  1467     009E                     	;# 
  1468     009F                     	;# 
  1469     0119                     	;# 
  1470     0119                     	;# 
  1471     0119                     	;# 
  1472     011A                     	;# 
  1473     011A                     	;# 
  1474     011A                     	;# 
  1475     011B                     	;# 
  1476     011B                     	;# 
  1477     011B                     	;# 
  1478     011B                     	;# 
  1479     011B                     	;# 
  1480     011C                     	;# 
  1481     011C                     	;# 
  1482     011C                     	;# 
  1483     011D                     	;# 
  1484     011D                     	;# 
  1485     011D                     	;# 
  1486     011E                     	;# 
  1487     011E                     	;# 
  1488     011E                     	;# 
  1489     011F                     	;# 
  1490     011F                     	;# 
  1491     011F                     	;# 
  1492     011F                     	;# 
  1493     011F                     	;# 
  1494     018C                     	;# 
  1495     018D                     	;# 
  1496     018E                     	;# 
  1497     018F                     	;# 
  1498     0190                     	;# 
  1499     0191                     	;# 
  1500     0192                     	;# 
  1501     020C                     	;# 
  1502     020C                     	;# 
  1503     020D                     	;# 
  1504     020E                     	;# 
  1505     020F                     	;# 
  1506     020F                     	;# 
  1507     0210                     	;# 
  1508     0210                     	;# 
  1509     0211                     	;# 
  1510     0211                     	;# 
  1511     028C                     	;# 
  1512     028C                     	;# 
  1513     028D                     	;# 
  1514     028D                     	;# 
  1515     028E                     	;# 
  1516     028F                     	;# 
  1517     0290                     	;# 
  1518     0291                     	;# 
  1519     030C                     	;# 
  1520     030C                     	;# 
  1521     030D                     	;# 
  1522     030E                     	;# 
  1523     030F                     	;# 
  1524     0310                     	;# 
  1525     0310                     	;# 
  1526     0311                     	;# 
  1527     0312                     	;# 
  1528     0313                     	;# 
  1529     0314                     	;# 
  1530     0314                     	;# 
  1531     0315                     	;# 
  1532     0316                     	;# 
  1533     0318                     	;# 
  1534     0318                     	;# 
  1535     0319                     	;# 
  1536     031A                     	;# 
  1537     031C                     	;# 
  1538     031C                     	;# 
  1539     031D                     	;# 
  1540     031E                     	;# 
  1541     038C                     	;# 
  1542     038C                     	;# 
  1543     038D                     	;# 
  1544     038E                     	;# 
  1545     058C                     	;# 
  1546     058C                     	;# 
  1547     058D                     	;# 
  1548     058E                     	;# 
  1549     058F                     	;# 
  1550     058F                     	;# 
  1551     0590                     	;# 
  1552     0591                     	;# 
  1553     0592                     	;# 
  1554     0593                     	;# 
  1555     059C                     	;# 
  1556     059C                     	;# 
  1557     059D                     	;# 
  1558     059D                     	;# 
  1559     059E                     	;# 
  1560     059F                     	;# 
  1561     060C                     	;# 
  1562     060D                     	;# 
  1563     060E                     	;# 
  1564     060F                     	;# 
  1565     0610                     	;# 
  1566     0611                     	;# 
  1567     0612                     	;# 
  1568     0613                     	;# 
  1569     0614                     	;# 
  1570     070C                     	;# 
  1571     070D                     	;# 
  1572     070E                     	;# 
  1573     070F                     	;# 
  1574     0710                     	;# 
  1575     0711                     	;# 
  1576     0712                     	;# 
  1577     0713                     	;# 
  1578     0716                     	;# 
  1579     0717                     	;# 
  1580     0718                     	;# 
  1581     0719                     	;# 
  1582     071A                     	;# 
  1583     071B                     	;# 
  1584     071C                     	;# 
  1585     071D                     	;# 
  1586     0796                     	;# 
  1587     0797                     	;# 
  1588     0798                     	;# 
  1589     0799                     	;# 
  1590     079A                     	;# 
  1591     079B                     	;# 
  1592     080C                     	;# 
  1593     080D                     	;# 
  1594     080E                     	;# 
  1595     080F                     	;# 
  1596     0810                     	;# 
  1597     0811                     	;# 
  1598     0812                     	;# 
  1599     0813                     	;# 
  1600     0814                     	;# 
  1601     081A                     	;# 
  1602     081A                     	;# 
  1603     081B                     	;# 
  1604     081C                     	;# 
  1605     081C                     	;# 
  1606     081D                     	;# 
  1607     081E                     	;# 
  1608     081F                     	;# 
  1609     088C                     	;# 
  1610     088D                     	;# 
  1611     088E                     	;# 
  1612     088F                     	;# 
  1613     0890                     	;# 
  1614     0891                     	;# 
  1615     0892                     	;# 
  1616     0893                     	;# 
  1617     0895                     	;# 
  1618     0896                     	;# 
  1619     090C                     	;# 
  1620     090E                     	;# 
  1621     090F                     	;# 
  1622     091F                     	;# 
  1623     098F                     	;# 
  1624     098F                     	;# 
  1625     0990                     	;# 
  1626     0991                     	;# 
  1627     0992                     	;# 
  1628     0993                     	;# 
  1629     0994                     	;# 
  1630     0995                     	;# 
  1631     0996                     	;# 
  1632     0997                     	;# 
  1633     0A19                     	;# 
  1634     0A19                     	;# 
  1635     0A1A                     	;# 
  1636     0A1A                     	;# 
  1637     0A1B                     	;# 
  1638     0A1B                     	;# 
  1639     0A1B                     	;# 
  1640     0A1C                     	;# 
  1641     0A1C                     	;# 
  1642     0A1D                     	;# 
  1643     0A1D                     	;# 
  1644     0A1E                     	;# 
  1645     0A1E                     	;# 
  1646     0A1F                     	;# 
  1647     0A1F                     	;# 
  1648     0A1F                     	;# 
  1649     1E0F                     	;# 
  1650     1E10                     	;# 
  1651     1E11                     	;# 
  1652     1E12                     	;# 
  1653     1E13                     	;# 
  1654     1E14                     	;# 
  1655     1E15                     	;# 
  1656     1E16                     	;# 
  1657     1E17                     	;# 
  1658     1E18                     	;# 
  1659     1E19                     	;# 
  1660     1E1A                     	;# 
  1661     1E1B                     	;# 
  1662     1E1C                     	;# 
  1663     1E1D                     	;# 
  1664     1E1E                     	;# 
  1665     1E1F                     	;# 
  1666     1E20                     	;# 
  1667     1E21                     	;# 
  1668     1E22                     	;# 
  1669     1E23                     	;# 
  1670     1E24                     	;# 
  1671     1E25                     	;# 
  1672     1E26                     	;# 
  1673     1E27                     	;# 
  1674     1E28                     	;# 
  1675     1E29                     	;# 
  1676     1E2A                     	;# 
  1677     1E2B                     	;# 
  1678     1E2C                     	;# 
  1679     1E2D                     	;# 
  1680     1E2E                     	;# 
  1681     1E2F                     	;# 
  1682     1E30                     	;# 
  1683     1E31                     	;# 
  1684     1E32                     	;# 
  1685     1E33                     	;# 
  1686     1E34                     	;# 
  1687     1E35                     	;# 
  1688     1E36                     	;# 
  1689     1E37                     	;# 
  1690     1E8F                     	;# 
  1691     1E90                     	;# 
  1692     1E91                     	;# 
  1693     1E92                     	;# 
  1694     1E93                     	;# 
  1695     1E9C                     	;# 
  1696     1EA1                     	;# 
  1697     1EA2                     	;# 
  1698     1EB1                     	;# 
  1699     1EBB                     	;# 
  1700     1EBC                     	;# 
  1701     1EBD                     	;# 
  1702     1EBE                     	;# 
  1703     1EC3                     	;# 
  1704     1EC5                     	;# 
  1705     1EC6                     	;# 
  1706     1EC7                     	;# 
  1707     1ECB                     	;# 
  1708     1ECC                     	;# 
  1709     1ECD                     	;# 
  1710     1ECE                     	;# 
  1711     1F10                     	;# 
  1712     1F11                     	;# 
  1713     1F12                     	;# 
  1714     1F13                     	;# 
  1715     1F14                     	;# 
  1716     1F15                     	;# 
  1717     1F1C                     	;# 
  1718     1F1D                     	;# 
  1719     1F1E                     	;# 
  1720     1F1F                     	;# 
  1721     1F20                     	;# 
  1722     1F21                     	;# 
  1723     1F22                     	;# 
  1724     1F23                     	;# 
  1725     1F24                     	;# 
  1726     1F25                     	;# 
  1727     1F26                     	;# 
  1728     1F27                     	;# 
  1729     1F38                     	;# 
  1730     1F39                     	;# 
  1731     1F3A                     	;# 
  1732     1F3B                     	;# 
  1733     1F3C                     	;# 
  1734     1F3D                     	;# 
  1735     1F3E                     	;# 
  1736     1F3F                     	;# 
  1737     1F43                     	;# 
  1738     1F44                     	;# 
  1739     1F45                     	;# 
  1740     1F46                     	;# 
  1741     1F47                     	;# 
  1742     1F48                     	;# 
  1743     1F49                     	;# 
  1744     1F4A                     	;# 
  1745     1F4E                     	;# 
  1746     1F4F                     	;# 
  1747     1F50                     	;# 
  1748     1F51                     	;# 
  1749     1F52                     	;# 
  1750     1F53                     	;# 
  1751     1F54                     	;# 
  1752     1F55                     	;# 
  1753     1FE4                     	;# 
  1754     1FE5                     	;# 
  1755     1FE6                     	;# 
  1756     1FE7                     	;# 
  1757     1FE8                     	;# 
  1758     1FE8                     	;# 
  1759     1FE9                     	;# 
  1760     1FEA                     	;# 
  1761     1FEA                     	;# 
  1762     1FEB                     	;# 
  1763     1FED                     	;# 
  1764     1FEE                     	;# 
  1765     1FEF                     	;# 
  1766     0000                     	;# 
  1767     0001                     	;# 
  1768     0002                     	;# 
  1769     0003                     	;# 
  1770     0004                     	;# 
  1771     0005                     	;# 
  1772     0006                     	;# 
  1773     0007                     	;# 
  1774     0008                     	;# 
  1775     0009                     	;# 
  1776     000A                     	;# 
  1777     000B                     	;# 
  1778     000C                     	;# 
  1779     000D                     	;# 
  1780     000E                     	;# 
  1781     0012                     	;# 
  1782     0013                     	;# 
  1783     0014                     	;# 
  1784     0018                     	;# 
  1785     0019                     	;# 
  1786     001A                     	;# 
  1787     009B                     	;# 
  1788     009B                     	;# 
  1789     009C                     	;# 
  1790     009D                     	;# 
  1791     009E                     	;# 
  1792     009F                     	;# 
  1793     0119                     	;# 
  1794     0119                     	;# 
  1795     0119                     	;# 
  1796     011A                     	;# 
  1797     011A                     	;# 
  1798     011A                     	;# 
  1799     011B                     	;# 
  1800     011B                     	;# 
  1801     011B                     	;# 
  1802     011B                     	;# 
  1803     011B                     	;# 
  1804     011C                     	;# 
  1805     011C                     	;# 
  1806     011C                     	;# 
  1807     011D                     	;# 
  1808     011D                     	;# 
  1809     011D                     	;# 
  1810     011E                     	;# 
  1811     011E                     	;# 
  1812     011E                     	;# 
  1813     011F                     	;# 
  1814     011F                     	;# 
  1815     011F                     	;# 
  1816     011F                     	;# 
  1817     011F                     	;# 
  1818     018C                     	;# 
  1819     018D                     	;# 
  1820     018E                     	;# 
  1821     018F                     	;# 
  1822     0190                     	;# 
  1823     0191                     	;# 
  1824     0192                     	;# 
  1825     020C                     	;# 
  1826     020C                     	;# 
  1827     020D                     	;# 
  1828     020E                     	;# 
  1829     020F                     	;# 
  1830     020F                     	;# 
  1831     0210                     	;# 
  1832     0210                     	;# 
  1833     0211                     	;# 
  1834     0211                     	;# 
  1835     028C                     	;# 
  1836     028C                     	;# 
  1837     028D                     	;# 
  1838     028D                     	;# 
  1839     028E                     	;# 
  1840     028F                     	;# 
  1841     0290                     	;# 
  1842     0291                     	;# 
  1843     030C                     	;# 
  1844     030C                     	;# 
  1845     030D                     	;# 
  1846     030E                     	;# 
  1847     030F                     	;# 
  1848     0310                     	;# 
  1849     0310                     	;# 
  1850     0311                     	;# 
  1851     0312                     	;# 
  1852     0313                     	;# 
  1853     0314                     	;# 
  1854     0314                     	;# 
  1855     0315                     	;# 
  1856     0316                     	;# 
  1857     0318                     	;# 
  1858     0318                     	;# 
  1859     0319                     	;# 
  1860     031A                     	;# 
  1861     031C                     	;# 
  1862     031C                     	;# 
  1863     031D                     	;# 
  1864     031E                     	;# 
  1865     038C                     	;# 
  1866     038C                     	;# 
  1867     038D                     	;# 
  1868     038E                     	;# 
  1869     058C                     	;# 
  1870     058C                     	;# 
  1871     058D                     	;# 
  1872     058E                     	;# 
  1873     058F                     	;# 
  1874     058F                     	;# 
  1875     0590                     	;# 
  1876     0591                     	;# 
  1877     0592                     	;# 
  1878     0593                     	;# 
  1879     059C                     	;# 
  1880     059C                     	;# 
  1881     059D                     	;# 
  1882     059D                     	;# 
  1883     059E                     	;# 
  1884     059F                     	;# 
  1885     060C                     	;# 
  1886     060D                     	;# 
  1887     060E                     	;# 
  1888     060F                     	;# 
  1889     0610                     	;# 
  1890     0611                     	;# 
  1891     0612                     	;# 
  1892     0613                     	;# 
  1893     0614                     	;# 
  1894     070C                     	;# 
  1895     070D                     	;# 
  1896     070E                     	;# 
  1897     070F                     	;# 
  1898     0710                     	;# 
  1899     0711                     	;# 
  1900     0712                     	;# 
  1901     0713                     	;# 
  1902     0716                     	;# 
  1903     0717                     	;# 
  1904     0718                     	;# 
  1905     0719                     	;# 
  1906     071A                     	;# 
  1907     071B                     	;# 
  1908     071C                     	;# 
  1909     071D                     	;# 
  1910     0796                     	;# 
  1911     0797                     	;# 
  1912     0798                     	;# 
  1913     0799                     	;# 
  1914     079A                     	;# 
  1915     079B                     	;# 
  1916     080C                     	;# 
  1917     080D                     	;# 
  1918     080E                     	;# 
  1919     080F                     	;# 
  1920     0810                     	;# 
  1921     0811                     	;# 
  1922     0812                     	;# 
  1923     0813                     	;# 
  1924     0814                     	;# 
  1925     081A                     	;# 
  1926     081A                     	;# 
  1927     081B                     	;# 
  1928     081C                     	;# 
  1929     081C                     	;# 
  1930     081D                     	;# 
  1931     081E                     	;# 
  1932     081F                     	;# 
  1933     088C                     	;# 
  1934     088D                     	;# 
  1935     088E                     	;# 
  1936     088F                     	;# 
  1937     0890                     	;# 
  1938     0891                     	;# 
  1939     0892                     	;# 
  1940     0893                     	;# 
  1941     0895                     	;# 
  1942     0896                     	;# 
  1943     090C                     	;# 
  1944     090E                     	;# 
  1945     090F                     	;# 
  1946     091F                     	;# 
  1947     098F                     	;# 
  1948     098F                     	;# 
  1949     0990                     	;# 
  1950     0991                     	;# 
  1951     0992                     	;# 
  1952     0993                     	;# 
  1953     0994                     	;# 
  1954     0995                     	;# 
  1955     0996                     	;# 
  1956     0997                     	;# 
  1957     0A19                     	;# 
  1958     0A19                     	;# 
  1959     0A1A                     	;# 
  1960     0A1A                     	;# 
  1961     0A1B                     	;# 
  1962     0A1B                     	;# 
  1963     0A1B                     	;# 
  1964     0A1C                     	;# 
  1965     0A1C                     	;# 
  1966     0A1D                     	;# 
  1967     0A1D                     	;# 
  1968     0A1E                     	;# 
  1969     0A1E                     	;# 
  1970     0A1F                     	;# 
  1971     0A1F                     	;# 
  1972     0A1F                     	;# 
  1973     1E0F                     	;# 
  1974     1E10                     	;# 
  1975     1E11                     	;# 
  1976     1E12                     	;# 
  1977     1E13                     	;# 
  1978     1E14                     	;# 
  1979     1E15                     	;# 
  1980     1E16                     	;# 
  1981     1E17                     	;# 
  1982     1E18                     	;# 
  1983     1E19                     	;# 
  1984     1E1A                     	;# 
  1985     1E1B                     	;# 
  1986     1E1C                     	;# 
  1987     1E1D                     	;# 
  1988     1E1E                     	;# 
  1989     1E1F                     	;# 
  1990     1E20                     	;# 
  1991     1E21                     	;# 
  1992     1E22                     	;# 
  1993     1E23                     	;# 
  1994     1E24                     	;# 
  1995     1E25                     	;# 
  1996     1E26                     	;# 
  1997     1E27                     	;# 
  1998     1E28                     	;# 
  1999     1E29                     	;# 
  2000     1E2A                     	;# 
  2001     1E2B                     	;# 
  2002     1E2C                     	;# 
  2003     1E2D                     	;# 
  2004     1E2E                     	;# 
  2005     1E2F                     	;# 
  2006     1E30                     	;# 
  2007     1E31                     	;# 
  2008     1E32                     	;# 
  2009     1E33                     	;# 
  2010     1E34                     	;# 
  2011     1E35                     	;# 
  2012     1E36                     	;# 
  2013     1E37                     	;# 
  2014     1E8F                     	;# 
  2015     1E90                     	;# 
  2016     1E91                     	;# 
  2017     1E92                     	;# 
  2018     1E93                     	;# 
  2019     1E9C                     	;# 
  2020     1EA1                     	;# 
  2021     1EA2                     	;# 
  2022     1EB1                     	;# 
  2023     1EBB                     	;# 
  2024     1EBC                     	;# 
  2025     1EBD                     	;# 
  2026     1EBE                     	;# 
  2027     1EC3                     	;# 
  2028     1EC5                     	;# 
  2029     1EC6                     	;# 
  2030     1EC7                     	;# 
  2031     1ECB                     	;# 
  2032     1ECC                     	;# 
  2033     1ECD                     	;# 
  2034     1ECE                     	;# 
  2035     1F10                     	;# 
  2036     1F11                     	;# 
  2037     1F12                     	;# 
  2038     1F13                     	;# 
  2039     1F14                     	;# 
  2040     1F15                     	;# 
  2041     1F1C                     	;# 
  2042     1F1D                     	;# 
  2043     1F1E                     	;# 
  2044     1F1F                     	;# 
  2045     1F20                     	;# 
  2046     1F21                     	;# 
  2047     1F22                     	;# 
  2048     1F23                     	;# 
  2049     1F24                     	;# 
  2050     1F25                     	;# 
  2051     1F26                     	;# 
  2052     1F27                     	;# 
  2053     1F38                     	;# 
  2054     1F39                     	;# 
  2055     1F3A                     	;# 
  2056     1F3B                     	;# 
  2057     1F3C                     	;# 
  2058     1F3D                     	;# 
  2059     1F3E                     	;# 
  2060     1F3F                     	;# 
  2061     1F43                     	;# 
  2062     1F44                     	;# 
  2063     1F45                     	;# 
  2064     1F46                     	;# 
  2065     1F47                     	;# 
  2066     1F48                     	;# 
  2067     1F49                     	;# 
  2068     1F4A                     	;# 
  2069     1F4E                     	;# 
  2070     1F4F                     	;# 
  2071     1F50                     	;# 
  2072     1F51                     	;# 
  2073     1F52                     	;# 
  2074     1F53                     	;# 
  2075     1F54                     	;# 
  2076     1F55                     	;# 
  2077     1FE4                     	;# 
  2078     1FE5                     	;# 
  2079     1FE6                     	;# 
  2080     1FE7                     	;# 
  2081     1FE8                     	;# 
  2082     1FE8                     	;# 
  2083     1FE9                     	;# 
  2084     1FEA                     	;# 
  2085     1FEA                     	;# 
  2086     1FEB                     	;# 
  2087     1FED                     	;# 
  2088     1FEE                     	;# 
  2089     1FEF                     	;# 
  2090     0000                     	;# 
  2091     0001                     	;# 
  2092     0002                     	;# 
  2093     0003                     	;# 
  2094     0004                     	;# 
  2095     0005                     	;# 
  2096     0006                     	;# 
  2097     0007                     	;# 
  2098     0008                     	;# 
  2099     0009                     	;# 
  2100     000A                     	;# 
  2101     000B                     	;# 
  2102     000C                     	;# 
  2103     000D                     	;# 
  2104     000E                     	;# 
  2105     0012                     	;# 
  2106     0013                     	;# 
  2107     0014                     	;# 
  2108     0018                     	;# 
  2109     0019                     	;# 
  2110     001A                     	;# 
  2111     009B                     	;# 
  2112     009B                     	;# 
  2113     009C                     	;# 
  2114     009D                     	;# 
  2115     009E                     	;# 
  2116     009F                     	;# 
  2117     0119                     	;# 
  2118     0119                     	;# 
  2119     0119                     	;# 
  2120     011A                     	;# 
  2121     011A                     	;# 
  2122     011A                     	;# 
  2123     011B                     	;# 
  2124     011B                     	;# 
  2125     011B                     	;# 
  2126     011B                     	;# 
  2127     011B                     	;# 
  2128     011C                     	;# 
  2129     011C                     	;# 
  2130     011C                     	;# 
  2131     011D                     	;# 
  2132     011D                     	;# 
  2133     011D                     	;# 
  2134     011E                     	;# 
  2135     011E                     	;# 
  2136     011E                     	;# 
  2137     011F                     	;# 
  2138     011F                     	;# 
  2139     011F                     	;# 
  2140     011F                     	;# 
  2141     011F                     	;# 
  2142     018C                     	;# 
  2143     018D                     	;# 
  2144     018E                     	;# 
  2145     018F                     	;# 
  2146     0190                     	;# 
  2147     0191                     	;# 
  2148     0192                     	;# 
  2149     020C                     	;# 
  2150     020C                     	;# 
  2151     020D                     	;# 
  2152     020E                     	;# 
  2153     020F                     	;# 
  2154     020F                     	;# 
  2155     0210                     	;# 
  2156     0210                     	;# 
  2157     0211                     	;# 
  2158     0211                     	;# 
  2159     028C                     	;# 
  2160     028C                     	;# 
  2161     028D                     	;# 
  2162     028D                     	;# 
  2163     028E                     	;# 
  2164     028F                     	;# 
  2165     0290                     	;# 
  2166     0291                     	;# 
  2167     030C                     	;# 
  2168     030C                     	;# 
  2169     030D                     	;# 
  2170     030E                     	;# 
  2171     030F                     	;# 
  2172     0310                     	;# 
  2173     0310                     	;# 
  2174     0311                     	;# 
  2175     0312                     	;# 
  2176     0313                     	;# 
  2177     0314                     	;# 
  2178     0314                     	;# 
  2179     0315                     	;# 
  2180     0316                     	;# 
  2181     0318                     	;# 
  2182     0318                     	;# 
  2183     0319                     	;# 
  2184     031A                     	;# 
  2185     031C                     	;# 
  2186     031C                     	;# 
  2187     031D                     	;# 
  2188     031E                     	;# 
  2189     038C                     	;# 
  2190     038C                     	;# 
  2191     038D                     	;# 
  2192     038E                     	;# 
  2193     058C                     	;# 
  2194     058C                     	;# 
  2195     058D                     	;# 
  2196     058E                     	;# 
  2197     058F                     	;# 
  2198     058F                     	;# 
  2199     0590                     	;# 
  2200     0591                     	;# 
  2201     0592                     	;# 
  2202     0593                     	;# 
  2203     059C                     	;# 
  2204     059C                     	;# 
  2205     059D                     	;# 
  2206     059D                     	;# 
  2207     059E                     	;# 
  2208     059F                     	;# 
  2209     060C                     	;# 
  2210     060D                     	;# 
  2211     060E                     	;# 
  2212     060F                     	;# 
  2213     0610                     	;# 
  2214     0611                     	;# 
  2215     0612                     	;# 
  2216     0613                     	;# 
  2217     0614                     	;# 
  2218     070C                     	;# 
  2219     070D                     	;# 
  2220     070E                     	;# 
  2221     070F                     	;# 
  2222     0710                     	;# 
  2223     0711                     	;# 
  2224     0712                     	;# 
  2225     0713                     	;# 
  2226     0716                     	;# 
  2227     0717                     	;# 
  2228     0718                     	;# 
  2229     0719                     	;# 
  2230     071A                     	;# 
  2231     071B                     	;# 
  2232     071C                     	;# 
  2233     071D                     	;# 
  2234     0796                     	;# 
  2235     0797                     	;# 
  2236     0798                     	;# 
  2237     0799                     	;# 
  2238     079A                     	;# 
  2239     079B                     	;# 
  2240     080C                     	;# 
  2241     080D                     	;# 
  2242     080E                     	;# 
  2243     080F                     	;# 
  2244     0810                     	;# 
  2245     0811                     	;# 
  2246     0812                     	;# 
  2247     0813                     	;# 
  2248     0814                     	;# 
  2249     081A                     	;# 
  2250     081A                     	;# 
  2251     081B                     	;# 
  2252     081C                     	;# 
  2253     081C                     	;# 
  2254     081D                     	;# 
  2255     081E                     	;# 
  2256     081F                     	;# 
  2257     088C                     	;# 
  2258     088D                     	;# 
  2259     088E                     	;# 
  2260     088F                     	;# 
  2261     0890                     	;# 
  2262     0891                     	;# 
  2263     0892                     	;# 
  2264     0893                     	;# 
  2265     0895                     	;# 
  2266     0896                     	;# 
  2267     090C                     	;# 
  2268     090E                     	;# 
  2269     090F                     	;# 
  2270     091F                     	;# 
  2271     098F                     	;# 
  2272     098F                     	;# 
  2273     0990                     	;# 
  2274     0991                     	;# 
  2275     0992                     	;# 
  2276     0993                     	;# 
  2277     0994                     	;# 
  2278     0995                     	;# 
  2279     0996                     	;# 
  2280     0997                     	;# 
  2281     0A19                     	;# 
  2282     0A19                     	;# 
  2283     0A1A                     	;# 
  2284     0A1A                     	;# 
  2285     0A1B                     	;# 
  2286     0A1B                     	;# 
  2287     0A1B                     	;# 
  2288     0A1C                     	;# 
  2289     0A1C                     	;# 
  2290     0A1D                     	;# 
  2291     0A1D                     	;# 
  2292     0A1E                     	;# 
  2293     0A1E                     	;# 
  2294     0A1F                     	;# 
  2295     0A1F                     	;# 
  2296     0A1F                     	;# 
  2297     1E0F                     	;# 
  2298     1E10                     	;# 
  2299     1E11                     	;# 
  2300     1E12                     	;# 
  2301     1E13                     	;# 
  2302     1E14                     	;# 
  2303     1E15                     	;# 
  2304     1E16                     	;# 
  2305     1E17                     	;# 
  2306     1E18                     	;# 
  2307     1E19                     	;# 
  2308     1E1A                     	;# 
  2309     1E1B                     	;# 
  2310     1E1C                     	;# 
  2311     1E1D                     	;# 
  2312     1E1E                     	;# 
  2313     1E1F                     	;# 
  2314     1E20                     	;# 
  2315     1E21                     	;# 
  2316     1E22                     	;# 
  2317     1E23                     	;# 
  2318     1E24                     	;# 
  2319     1E25                     	;# 
  2320     1E26                     	;# 
  2321     1E27                     	;# 
  2322     1E28                     	;# 
  2323     1E29                     	;# 
  2324     1E2A                     	;# 
  2325     1E2B                     	;# 
  2326     1E2C                     	;# 
  2327     1E2D                     	;# 
  2328     1E2E                     	;# 
  2329     1E2F                     	;# 
  2330     1E30                     	;# 
  2331     1E31                     	;# 
  2332     1E32                     	;# 
  2333     1E33                     	;# 
  2334     1E34                     	;# 
  2335     1E35                     	;# 
  2336     1E36                     	;# 
  2337     1E37                     	;# 
  2338     1E8F                     	;# 
  2339     1E90                     	;# 
  2340     1E91                     	;# 
  2341     1E92                     	;# 
  2342     1E93                     	;# 
  2343     1E9C                     	;# 
  2344     1EA1                     	;# 
  2345     1EA2                     	;# 
  2346     1EB1                     	;# 
  2347     1EBB                     	;# 
  2348     1EBC                     	;# 
  2349     1EBD                     	;# 
  2350     1EBE                     	;# 
  2351     1EC3                     	;# 
  2352     1EC5                     	;# 
  2353     1EC6                     	;# 
  2354     1EC7                     	;# 
  2355     1ECB                     	;# 
  2356     1ECC                     	;# 
  2357     1ECD                     	;# 
  2358     1ECE                     	;# 
  2359     1F10                     	;# 
  2360     1F11                     	;# 
  2361     1F12                     	;# 
  2362     1F13                     	;# 
  2363     1F14                     	;# 
  2364     1F15                     	;# 
  2365     1F1C                     	;# 
  2366     1F1D                     	;# 
  2367     1F1E                     	;# 
  2368     1F1F                     	;# 
  2369     1F20                     	;# 
  2370     1F21                     	;# 
  2371     1F22                     	;# 
  2372     1F23                     	;# 
  2373     1F24                     	;# 
  2374     1F25                     	;# 
  2375     1F26                     	;# 
  2376     1F27                     	;# 
  2377     1F38                     	;# 
  2378     1F39                     	;# 
  2379     1F3A                     	;# 
  2380     1F3B                     	;# 
  2381     1F3C                     	;# 
  2382     1F3D                     	;# 
  2383     1F3E                     	;# 
  2384     1F3F                     	;# 
  2385     1F43                     	;# 
  2386     1F44                     	;# 
  2387     1F45                     	;# 
  2388     1F46                     	;# 
  2389     1F47                     	;# 
  2390     1F48                     	;# 
  2391     1F49                     	;# 
  2392     1F4A                     	;# 
  2393     1F4E                     	;# 
  2394     1F4F                     	;# 
  2395     1F50                     	;# 
  2396     1F51                     	;# 
  2397     1F52                     	;# 
  2398     1F53                     	;# 
  2399     1F54                     	;# 
  2400     1F55                     	;# 
  2401     1FE4                     	;# 
  2402     1FE5                     	;# 
  2403     1FE6                     	;# 
  2404     1FE7                     	;# 
  2405     1FE8                     	;# 
  2406     1FE8                     	;# 
  2407     1FE9                     	;# 
  2408     1FEA                     	;# 
  2409     1FEA                     	;# 
  2410     1FEB                     	;# 
  2411     1FED                     	;# 
  2412     1FEE                     	;# 
  2413     1FEF                     	;# 
  2414     0000                     	;# 
  2415     0001                     	;# 
  2416     0002                     	;# 
  2417     0003                     	;# 
  2418     0004                     	;# 
  2419     0005                     	;# 
  2420     0006                     	;# 
  2421     0007                     	;# 
  2422     0008                     	;# 
  2423     0009                     	;# 
  2424     000A                     	;# 
  2425     000B                     	;# 
  2426     000C                     	;# 
  2427     000D                     	;# 
  2428     000E                     	;# 
  2429     0012                     	;# 
  2430     0013                     	;# 
  2431     0014                     	;# 
  2432     0018                     	;# 
  2433     0019                     	;# 
  2434     001A                     	;# 
  2435     009B                     	;# 
  2436     009B                     	;# 
  2437     009C                     	;# 
  2438     009D                     	;# 
  2439     009E                     	;# 
  2440     009F                     	;# 
  2441     0119                     	;# 
  2442     0119                     	;# 
  2443     0119                     	;# 
  2444     011A                     	;# 
  2445     011A                     	;# 
  2446     011A                     	;# 
  2447     011B                     	;# 
  2448     011B                     	;# 
  2449     011B                     	;# 
  2450     011B                     	;# 
  2451     011B                     	;# 
  2452     011C                     	;# 
  2453     011C                     	;# 
  2454     011C                     	;# 
  2455     011D                     	;# 
  2456     011D                     	;# 
  2457     011D                     	;# 
  2458     011E                     	;# 
  2459     011E                     	;# 
  2460     011E                     	;# 
  2461     011F                     	;# 
  2462     011F                     	;# 
  2463     011F                     	;# 
  2464     011F                     	;# 
  2465     011F                     	;# 
  2466     018C                     	;# 
  2467     018D                     	;# 
  2468     018E                     	;# 
  2469     018F                     	;# 
  2470     0190                     	;# 
  2471     0191                     	;# 
  2472     0192                     	;# 
  2473     020C                     	;# 
  2474     020C                     	;# 
  2475     020D                     	;# 
  2476     020E                     	;# 
  2477     020F                     	;# 
  2478     020F                     	;# 
  2479     0210                     	;# 
  2480     0210                     	;# 
  2481     0211                     	;# 
  2482     0211                     	;# 
  2483     028C                     	;# 
  2484     028C                     	;# 
  2485     028D                     	;# 
  2486     028D                     	;# 
  2487     028E                     	;# 
  2488     028F                     	;# 
  2489     0290                     	;# 
  2490     0291                     	;# 
  2491     030C                     	;# 
  2492     030C                     	;# 
  2493     030D                     	;# 
  2494     030E                     	;# 
  2495     030F                     	;# 
  2496     0310                     	;# 
  2497     0310                     	;# 
  2498     0311                     	;# 
  2499     0312                     	;# 
  2500     0313                     	;# 
  2501     0314                     	;# 
  2502     0314                     	;# 
  2503     0315                     	;# 
  2504     0316                     	;# 
  2505     0318                     	;# 
  2506     0318                     	;# 
  2507     0319                     	;# 
  2508     031A                     	;# 
  2509     031C                     	;# 
  2510     031C                     	;# 
  2511     031D                     	;# 
  2512     031E                     	;# 
  2513     038C                     	;# 
  2514     038C                     	;# 
  2515     038D                     	;# 
  2516     038E                     	;# 
  2517     058C                     	;# 
  2518     058C                     	;# 
  2519     058D                     	;# 
  2520     058E                     	;# 
  2521     058F                     	;# 
  2522     058F                     	;# 
  2523     0590                     	;# 
  2524     0591                     	;# 
  2525     0592                     	;# 
  2526     0593                     	;# 
  2527     059C                     	;# 
  2528     059C                     	;# 
  2529     059D                     	;# 
  2530     059D                     	;# 
  2531     059E                     	;# 
  2532     059F                     	;# 
  2533     060C                     	;# 
  2534     060D                     	;# 
  2535     060E                     	;# 
  2536     060F                     	;# 
  2537     0610                     	;# 
  2538     0611                     	;# 
  2539     0612                     	;# 
  2540     0613                     	;# 
  2541     0614                     	;# 
  2542     070C                     	;# 
  2543     070D                     	;# 
  2544     070E                     	;# 
  2545     070F                     	;# 
  2546     0710                     	;# 
  2547     0711                     	;# 
  2548     0712                     	;# 
  2549     0713                     	;# 
  2550     0716                     	;# 
  2551     0717                     	;# 
  2552     0718                     	;# 
  2553     0719                     	;# 
  2554     071A                     	;# 
  2555     071B                     	;# 
  2556     071C                     	;# 
  2557     071D                     	;# 
  2558     0796                     	;# 
  2559     0797                     	;# 
  2560     0798                     	;# 
  2561     0799                     	;# 
  2562     079A                     	;# 
  2563     079B                     	;# 
  2564     080C                     	;# 
  2565     080D                     	;# 
  2566     080E                     	;# 
  2567     080F                     	;# 
  2568     0810                     	;# 
  2569     0811                     	;# 
  2570     0812                     	;# 
  2571     0813                     	;# 
  2572     0814                     	;# 
  2573     081A                     	;# 
  2574     081A                     	;# 
  2575     081B                     	;# 
  2576     081C                     	;# 
  2577     081C                     	;# 
  2578     081D                     	;# 
  2579     081E                     	;# 
  2580     081F                     	;# 
  2581     088C                     	;# 
  2582     088D                     	;# 
  2583     088E                     	;# 
  2584     088F                     	;# 
  2585     0890                     	;# 
  2586     0891                     	;# 
  2587     0892                     	;# 
  2588     0893                     	;# 
  2589     0895                     	;# 
  2590     0896                     	;# 
  2591     090C                     	;# 
  2592     090E                     	;# 
  2593     090F                     	;# 
  2594     091F                     	;# 
  2595     098F                     	;# 
  2596     098F                     	;# 
  2597     0990                     	;# 
  2598     0991                     	;# 
  2599     0992                     	;# 
  2600     0993                     	;# 
  2601     0994                     	;# 
  2602     0995                     	;# 
  2603     0996                     	;# 
  2604     0997                     	;# 
  2605     0A19                     	;# 
  2606     0A19                     	;# 
  2607     0A1A                     	;# 
  2608     0A1A                     	;# 
  2609     0A1B                     	;# 
  2610     0A1B                     	;# 
  2611     0A1B                     	;# 
  2612     0A1C                     	;# 
  2613     0A1C                     	;# 
  2614     0A1D                     	;# 
  2615     0A1D                     	;# 
  2616     0A1E                     	;# 
  2617     0A1E                     	;# 
  2618     0A1F                     	;# 
  2619     0A1F                     	;# 
  2620     0A1F                     	;# 
  2621     1E0F                     	;# 
  2622     1E10                     	;# 
  2623     1E11                     	;# 
  2624     1E12                     	;# 
  2625     1E13                     	;# 
  2626     1E14                     	;# 
  2627     1E15                     	;# 
  2628     1E16                     	;# 
  2629     1E17                     	;# 
  2630     1E18                     	;# 
  2631     1E19                     	;# 
  2632     1E1A                     	;# 
  2633     1E1B                     	;# 
  2634     1E1C                     	;# 
  2635     1E1D                     	;# 
  2636     1E1E                     	;# 
  2637     1E1F                     	;# 
  2638     1E20                     	;# 
  2639     1E21                     	;# 
  2640     1E22                     	;# 
  2641     1E23                     	;# 
  2642     1E24                     	;# 
  2643     1E25                     	;# 
  2644     1E26                     	;# 
  2645     1E27                     	;# 
  2646     1E28                     	;# 
  2647     1E29                     	;# 
  2648     1E2A                     	;# 
  2649     1E2B                     	;# 
  2650     1E2C                     	;# 
  2651     1E2D                     	;# 
  2652     1E2E                     	;# 
  2653     1E2F                     	;# 
  2654     1E30                     	;# 
  2655     1E31                     	;# 
  2656     1E32                     	;# 
  2657     1E33                     	;# 
  2658     1E34                     	;# 
  2659     1E35                     	;# 
  2660     1E36                     	;# 
  2661     1E37                     	;# 
  2662     1E8F                     	;# 
  2663     1E90                     	;# 
  2664     1E91                     	;# 
  2665     1E92                     	;# 
  2666     1E93                     	;# 
  2667     1E9C                     	;# 
  2668     1EA1                     	;# 
  2669     1EA2                     	;# 
  2670     1EB1                     	;# 
  2671     1EBB                     	;# 
  2672     1EBC                     	;# 
  2673     1EBD                     	;# 
  2674     1EBE                     	;# 
  2675     1EC3                     	;# 
  2676     1EC5                     	;# 
  2677     1EC6                     	;# 
  2678     1EC7                     	;# 
  2679     1ECB                     	;# 
  2680     1ECC                     	;# 
  2681     1ECD                     	;# 
  2682     1ECE                     	;# 
  2683     1F10                     	;# 
  2684     1F11                     	;# 
  2685     1F12                     	;# 
  2686     1F13                     	;# 
  2687     1F14                     	;# 
  2688     1F15                     	;# 
  2689     1F1C                     	;# 
  2690     1F1D                     	;# 
  2691     1F1E                     	;# 
  2692     1F1F                     	;# 
  2693     1F20                     	;# 
  2694     1F21                     	;# 
  2695     1F22                     	;# 
  2696     1F23                     	;# 
  2697     1F24                     	;# 
  2698     1F25                     	;# 
  2699     1F26                     	;# 
  2700     1F27                     	;# 
  2701     1F38                     	;# 
  2702     1F39                     	;# 
  2703     1F3A                     	;# 
  2704     1F3B                     	;# 
  2705     1F3C                     	;# 
  2706     1F3D                     	;# 
  2707     1F3E                     	;# 
  2708     1F3F                     	;# 
  2709     1F43                     	;# 
  2710     1F44                     	;# 
  2711     1F45                     	;# 
  2712     1F46                     	;# 
  2713     1F47                     	;# 
  2714     1F48                     	;# 
  2715     1F49                     	;# 
  2716     1F4A                     	;# 
  2717     1F4E                     	;# 
  2718     1F4F                     	;# 
  2719     1F50                     	;# 
  2720     1F51                     	;# 
  2721     1F52                     	;# 
  2722     1F53                     	;# 
  2723     1F54                     	;# 
  2724     1F55                     	;# 
  2725     1FE4                     	;# 
  2726     1FE5                     	;# 
  2727     1FE6                     	;# 
  2728     1FE7                     	;# 
  2729     1FE8                     	;# 
  2730     1FE8                     	;# 
  2731     1FE9                     	;# 
  2732     1FEA                     	;# 
  2733     1FEA                     	;# 
  2734     1FEB                     	;# 
  2735     1FED                     	;# 
  2736     1FEE                     	;# 
  2737     1FEF                     	;# 
  2738     0000                     	;# 
  2739     0001                     	;# 
  2740     0002                     	;# 
  2741     0003                     	;# 
  2742     0004                     	;# 
  2743     0005                     	;# 
  2744     0006                     	;# 
  2745     0007                     	;# 
  2746     0008                     	;# 
  2747     0009                     	;# 
  2748     000A                     	;# 
  2749     000B                     	;# 
  2750     000C                     	;# 
  2751     000D                     	;# 
  2752     000E                     	;# 
  2753     0012                     	;# 
  2754     0013                     	;# 
  2755     0014                     	;# 
  2756     0018                     	;# 
  2757     0019                     	;# 
  2758     001A                     	;# 
  2759     009B                     	;# 
  2760     009B                     	;# 
  2761     009C                     	;# 
  2762     009D                     	;# 
  2763     009E                     	;# 
  2764     009F                     	;# 
  2765     0119                     	;# 
  2766     0119                     	;# 
  2767     0119                     	;# 
  2768     011A                     	;# 
  2769     011A                     	;# 
  2770     011A                     	;# 
  2771     011B                     	;# 
  2772     011B                     	;# 
  2773     011B                     	;# 
  2774     011B                     	;# 
  2775     011B                     	;# 
  2776     011C                     	;# 
  2777     011C                     	;# 
  2778     011C                     	;# 
  2779     011D                     	;# 
  2780     011D                     	;# 
  2781     011D                     	;# 
  2782     011E                     	;# 
  2783     011E                     	;# 
  2784     011E                     	;# 
  2785     011F                     	;# 
  2786     011F                     	;# 
  2787     011F                     	;# 
  2788     011F                     	;# 
  2789     011F                     	;# 
  2790     018C                     	;# 
  2791     018D                     	;# 
  2792     018E                     	;# 
  2793     018F                     	;# 
  2794     0190                     	;# 
  2795     0191                     	;# 
  2796     0192                     	;# 
  2797     020C                     	;# 
  2798     020C                     	;# 
  2799     020D                     	;# 
  2800     020E                     	;# 
  2801     020F                     	;# 
  2802     020F                     	;# 
  2803     0210                     	;# 
  2804     0210                     	;# 
  2805     0211                     	;# 
  2806     0211                     	;# 
  2807     028C                     	;# 
  2808     028C                     	;# 
  2809     028D                     	;# 
  2810     028D                     	;# 
  2811     028E                     	;# 
  2812     028F                     	;# 
  2813     0290                     	;# 
  2814     0291                     	;# 
  2815     030C                     	;# 
  2816     030C                     	;# 
  2817     030D                     	;# 
  2818     030E                     	;# 
  2819     030F                     	;# 
  2820     0310                     	;# 
  2821     0310                     	;# 
  2822     0311                     	;# 
  2823     0312                     	;# 
  2824     0313                     	;# 
  2825     0314                     	;# 
  2826     0314                     	;# 
  2827     0315                     	;# 
  2828     0316                     	;# 
  2829     0318                     	;# 
  2830     0318                     	;# 
  2831     0319                     	;# 
  2832     031A                     	;# 
  2833     031C                     	;# 
  2834     031C                     	;# 
  2835     031D                     	;# 
  2836     031E                     	;# 
  2837     038C                     	;# 
  2838     038C                     	;# 
  2839     038D                     	;# 
  2840     038E                     	;# 
  2841     058C                     	;# 
  2842     058C                     	;# 
  2843     058D                     	;# 
  2844     058E                     	;# 
  2845     058F                     	;# 
  2846     058F                     	;# 
  2847     0590                     	;# 
  2848     0591                     	;# 
  2849     0592                     	;# 
  2850     0593                     	;# 
  2851     059C                     	;# 
  2852     059C                     	;# 
  2853     059D                     	;# 
  2854     059D                     	;# 
  2855     059E                     	;# 
  2856     059F                     	;# 
  2857     060C                     	;# 
  2858     060D                     	;# 
  2859     060E                     	;# 
  2860     060F                     	;# 
  2861     0610                     	;# 
  2862     0611                     	;# 
  2863     0612                     	;# 
  2864     0613                     	;# 
  2865     0614                     	;# 
  2866     070C                     	;# 
  2867     070D                     	;# 
  2868     070E                     	;# 
  2869     070F                     	;# 
  2870     0710                     	;# 
  2871     0711                     	;# 
  2872     0712                     	;# 
  2873     0713                     	;# 
  2874     0716                     	;# 
  2875     0717                     	;# 
  2876     0718                     	;# 
  2877     0719                     	;# 
  2878     071A                     	;# 
  2879     071B                     	;# 
  2880     071C                     	;# 
  2881     071D                     	;# 
  2882     0796                     	;# 
  2883     0797                     	;# 
  2884     0798                     	;# 
  2885     0799                     	;# 
  2886     079A                     	;# 
  2887     079B                     	;# 
  2888     080C                     	;# 
  2889     080D                     	;# 
  2890     080E                     	;# 
  2891     080F                     	;# 
  2892     0810                     	;# 
  2893     0811                     	;# 
  2894     0812                     	;# 
  2895     0813                     	;# 
  2896     0814                     	;# 
  2897     081A                     	;# 
  2898     081A                     	;# 
  2899     081B                     	;# 
  2900     081C                     	;# 
  2901     081C                     	;# 
  2902     081D                     	;# 
  2903     081E                     	;# 
  2904     081F                     	;# 
  2905     088C                     	;# 
  2906     088D                     	;# 
  2907     088E                     	;# 
  2908     088F                     	;# 
  2909     0890                     	;# 
  2910     0891                     	;# 
  2911     0892                     	;# 
  2912     0893                     	;# 
  2913     0895                     	;# 
  2914     0896                     	;# 
  2915     090C                     	;# 
  2916     090E                     	;# 
  2917     090F                     	;# 
  2918     091F                     	;# 
  2919     098F                     	;# 
  2920     098F                     	;# 
  2921     0990                     	;# 
  2922     0991                     	;# 
  2923     0992                     	;# 
  2924     0993                     	;# 
  2925     0994                     	;# 
  2926     0995                     	;# 
  2927     0996                     	;# 
  2928     0997                     	;# 
  2929     0A19                     	;# 
  2930     0A19                     	;# 
  2931     0A1A                     	;# 
  2932     0A1A                     	;# 
  2933     0A1B                     	;# 
  2934     0A1B                     	;# 
  2935     0A1B                     	;# 
  2936     0A1C                     	;# 
  2937     0A1C                     	;# 
  2938     0A1D                     	;# 
  2939     0A1D                     	;# 
  2940     0A1E                     	;# 
  2941     0A1E                     	;# 
  2942     0A1F                     	;# 
  2943     0A1F                     	;# 
  2944     0A1F                     	;# 
  2945     1E0F                     	;# 
  2946     1E10                     	;# 
  2947     1E11                     	;# 
  2948     1E12                     	;# 
  2949     1E13                     	;# 
  2950     1E14                     	;# 
  2951     1E15                     	;# 
  2952     1E16                     	;# 
  2953     1E17                     	;# 
  2954     1E18                     	;# 
  2955     1E19                     	;# 
  2956     1E1A                     	;# 
  2957     1E1B                     	;# 
  2958     1E1C                     	;# 
  2959     1E1D                     	;# 
  2960     1E1E                     	;# 
  2961     1E1F                     	;# 
  2962     1E20                     	;# 
  2963     1E21                     	;# 
  2964     1E22                     	;# 
  2965     1E23                     	;# 
  2966     1E24                     	;# 
  2967     1E25                     	;# 
  2968     1E26                     	;# 
  2969     1E27                     	;# 
  2970     1E28                     	;# 
  2971     1E29                     	;# 
  2972     1E2A                     	;# 
  2973     1E2B                     	;# 
  2974     1E2C                     	;# 
  2975     1E2D                     	;# 
  2976     1E2E                     	;# 
  2977     1E2F                     	;# 
  2978     1E30                     	;# 
  2979     1E31                     	;# 
  2980     1E32                     	;# 
  2981     1E33                     	;# 
  2982     1E34                     	;# 
  2983     1E35                     	;# 
  2984     1E36                     	;# 
  2985     1E37                     	;# 
  2986     1E8F                     	;# 
  2987     1E90                     	;# 
  2988     1E91                     	;# 
  2989     1E92                     	;# 
  2990     1E93                     	;# 
  2991     1E9C                     	;# 
  2992     1EA1                     	;# 
  2993     1EA2                     	;# 
  2994     1EB1                     	;# 
  2995     1EBB                     	;# 
  2996     1EBC                     	;# 
  2997     1EBD                     	;# 
  2998     1EBE                     	;# 
  2999     1EC3                     	;# 
  3000     1EC5                     	;# 
  3001     1EC6                     	;# 
  3002     1EC7                     	;# 
  3003     1ECB                     	;# 
  3004     1ECC                     	;# 
  3005     1ECD                     	;# 
  3006     1ECE                     	;# 
  3007     1F10                     	;# 
  3008     1F11                     	;# 
  3009     1F12                     	;# 
  3010     1F13                     	;# 
  3011     1F14                     	;# 
  3012     1F15                     	;# 
  3013     1F1C                     	;# 
  3014     1F1D                     	;# 
  3015     1F1E                     	;# 
  3016     1F1F                     	;# 
  3017     1F20                     	;# 
  3018     1F21                     	;# 
  3019     1F22                     	;# 
  3020     1F23                     	;# 
  3021     1F24                     	;# 
  3022     1F25                     	;# 
  3023     1F26                     	;# 
  3024     1F27                     	;# 
  3025     1F38                     	;# 
  3026     1F39                     	;# 
  3027     1F3A                     	;# 
  3028     1F3B                     	;# 
  3029     1F3C                     	;# 
  3030     1F3D                     	;# 
  3031     1F3E                     	;# 
  3032     1F3F                     	;# 
  3033     1F43                     	;# 
  3034     1F44                     	;# 
  3035     1F45                     	;# 
  3036     1F46                     	;# 
  3037     1F47                     	;# 
  3038     1F48                     	;# 
  3039     1F49                     	;# 
  3040     1F4A                     	;# 
  3041     1F4E                     	;# 
  3042     1F4F                     	;# 
  3043     1F50                     	;# 
  3044     1F51                     	;# 
  3045     1F52                     	;# 
  3046     1F53                     	;# 
  3047     1F54                     	;# 
  3048     1F55                     	;# 
  3049     1FE4                     	;# 
  3050     1FE5                     	;# 
  3051     1FE6                     	;# 
  3052     1FE7                     	;# 
  3053     1FE8                     	;# 
  3054     1FE8                     	;# 
  3055     1FE9                     	;# 
  3056     1FEA                     	;# 
  3057     1FEA                     	;# 
  3058     1FEB                     	;# 
  3059     1FED                     	;# 
  3060     1FEE                     	;# 
  3061     1FEF                     	;# 
  3062     0000                     	;# 
  3063     0001                     	;# 
  3064     0002                     	;# 
  3065     0003                     	;# 
  3066     0004                     	;# 
  3067     0005                     	;# 
  3068     0006                     	;# 
  3069     0007                     	;# 
  3070     0008                     	;# 
  3071     0009                     	;# 
  3072     000A                     	;# 
  3073     000B                     	;# 
  3074     000C                     	;# 
  3075     000D                     	;# 
  3076     000E                     	;# 
  3077     0012                     	;# 
  3078     0013                     	;# 
  3079     0014                     	;# 
  3080     0018                     	;# 
  3081     0019                     	;# 
  3082     001A                     	;# 
  3083     009B                     	;# 
  3084     009B                     	;# 
  3085     009C                     	;# 
  3086     009D                     	;# 
  3087     009E                     	;# 
  3088     009F                     	;# 
  3089     0119                     	;# 
  3090     0119                     	;# 
  3091     0119                     	;# 
  3092     011A                     	;# 
  3093     011A                     	;# 
  3094     011A                     	;# 
  3095     011B                     	;# 
  3096     011B                     	;# 
  3097     011B                     	;# 
  3098     011B                     	;# 
  3099     011B                     	;# 
  3100     011C                     	;# 
  3101     011C                     	;# 
  3102     011C                     	;# 
  3103     011D                     	;# 
  3104     011D                     	;# 
  3105     011D                     	;# 
  3106     011E                     	;# 
  3107     011E                     	;# 
  3108     011E                     	;# 
  3109     011F                     	;# 
  3110     011F                     	;# 
  3111     011F                     	;# 
  3112     011F                     	;# 
  3113     011F                     	;# 
  3114     018C                     	;# 
  3115     018D                     	;# 
  3116     018E                     	;# 
  3117     018F                     	;# 
  3118     0190                     	;# 
  3119     0191                     	;# 
  3120     0192                     	;# 
  3121     020C                     	;# 
  3122     020C                     	;# 
  3123     020D                     	;# 
  3124     020E                     	;# 
  3125     020F                     	;# 
  3126     020F                     	;# 
  3127     0210                     	;# 
  3128     0210                     	;# 
  3129     0211                     	;# 
  3130     0211                     	;# 
  3131     028C                     	;# 
  3132     028C                     	;# 
  3133     028D                     	;# 
  3134     028D                     	;# 
  3135     028E                     	;# 
  3136     028F                     	;# 
  3137     0290                     	;# 
  3138     0291                     	;# 
  3139     030C                     	;# 
  3140     030C                     	;# 
  3141     030D                     	;# 
  3142     030E                     	;# 
  3143     030F                     	;# 
  3144     0310                     	;# 
  3145     0310                     	;# 
  3146     0311                     	;# 
  3147     0312                     	;# 
  3148     0313                     	;# 
  3149     0314                     	;# 
  3150     0314                     	;# 
  3151     0315                     	;# 
  3152     0316                     	;# 
  3153     0318                     	;# 
  3154     0318                     	;# 
  3155     0319                     	;# 
  3156     031A                     	;# 
  3157     031C                     	;# 
  3158     031C                     	;# 
  3159     031D                     	;# 
  3160     031E                     	;# 
  3161     038C                     	;# 
  3162     038C                     	;# 
  3163     038D                     	;# 
  3164     038E                     	;# 
  3165     058C                     	;# 
  3166     058C                     	;# 
  3167     058D                     	;# 
  3168     058E                     	;# 
  3169     058F                     	;# 
  3170     058F                     	;# 
  3171     0590                     	;# 
  3172     0591                     	;# 
  3173     0592                     	;# 
  3174     0593                     	;# 
  3175     059C                     	;# 
  3176     059C                     	;# 
  3177     059D                     	;# 
  3178     059D                     	;# 
  3179     059E                     	;# 
  3180     059F                     	;# 
  3181     060C                     	;# 
  3182     060D                     	;# 
  3183     060E                     	;# 
  3184     060F                     	;# 
  3185     0610                     	;# 
  3186     0611                     	;# 
  3187     0612                     	;# 
  3188     0613                     	;# 
  3189     0614                     	;# 
  3190     070C                     	;# 
  3191     070D                     	;# 
  3192     070E                     	;# 
  3193     070F                     	;# 
  3194     0710                     	;# 
  3195     0711                     	;# 
  3196     0712                     	;# 
  3197     0713                     	;# 
  3198     0716                     	;# 
  3199     0717                     	;# 
  3200     0718                     	;# 
  3201     0719                     	;# 
  3202     071A                     	;# 
  3203     071B                     	;# 
  3204     071C                     	;# 
  3205     071D                     	;# 
  3206     0796                     	;# 
  3207     0797                     	;# 
  3208     0798                     	;# 
  3209     0799                     	;# 
  3210     079A                     	;# 
  3211     079B                     	;# 
  3212     080C                     	;# 
  3213     080D                     	;# 
  3214     080E                     	;# 
  3215     080F                     	;# 
  3216     0810                     	;# 
  3217     0811                     	;# 
  3218     0812                     	;# 
  3219     0813                     	;# 
  3220     0814                     	;# 
  3221     081A                     	;# 
  3222     081A                     	;# 
  3223     081B                     	;# 
  3224     081C                     	;# 
  3225     081C                     	;# 
  3226     081D                     	;# 
  3227     081E                     	;# 
  3228     081F                     	;# 
  3229     088C                     	;# 
  3230     088D                     	;# 
  3231     088E                     	;# 
  3232     088F                     	;# 
  3233     0890                     	;# 
  3234     0891                     	;# 
  3235     0892                     	;# 
  3236     0893                     	;# 
  3237     0895                     	;# 
  3238     0896                     	;# 
  3239     090C                     	;# 
  3240     090E                     	;# 
  3241     090F                     	;# 
  3242     091F                     	;# 
  3243     098F                     	;# 
  3244     098F                     	;# 
  3245     0990                     	;# 
  3246     0991                     	;# 
  3247     0992                     	;# 
  3248     0993                     	;# 
  3249     0994                     	;# 
  3250     0995                     	;# 
  3251     0996                     	;# 
  3252     0997                     	;# 
  3253     0A19                     	;# 
  3254     0A19                     	;# 
  3255     0A1A                     	;# 
  3256     0A1A                     	;# 
  3257     0A1B                     	;# 
  3258     0A1B                     	;# 
  3259     0A1B                     	;# 
  3260     0A1C                     	;# 
  3261     0A1C                     	;# 
  3262     0A1D                     	;# 
  3263     0A1D                     	;# 
  3264     0A1E                     	;# 
  3265     0A1E                     	;# 
  3266     0A1F                     	;# 
  3267     0A1F                     	;# 
  3268     0A1F                     	;# 
  3269     1E0F                     	;# 
  3270     1E10                     	;# 
  3271     1E11                     	;# 
  3272     1E12                     	;# 
  3273     1E13                     	;# 
  3274     1E14                     	;# 
  3275     1E15                     	;# 
  3276     1E16                     	;# 
  3277     1E17                     	;# 
  3278     1E18                     	;# 
  3279     1E19                     	;# 
  3280     1E1A                     	;# 
  3281     1E1B                     	;# 
  3282     1E1C                     	;# 
  3283     1E1D                     	;# 
  3284     1E1E                     	;# 
  3285     1E1F                     	;# 
  3286     1E20                     	;# 
  3287     1E21                     	;# 
  3288     1E22                     	;# 
  3289     1E23                     	;# 
  3290     1E24                     	;# 
  3291     1E25                     	;# 
  3292     1E26                     	;# 
  3293     1E27                     	;# 
  3294     1E28                     	;# 
  3295     1E29                     	;# 
  3296     1E2A                     	;# 
  3297     1E2B                     	;# 
  3298     1E2C                     	;# 
  3299     1E2D                     	;# 
  3300     1E2E                     	;# 
  3301     1E2F                     	;# 
  3302     1E30                     	;# 
  3303     1E31                     	;# 
  3304     1E32                     	;# 
  3305     1E33                     	;# 
  3306     1E34                     	;# 
  3307     1E35                     	;# 
  3308     1E36                     	;# 
  3309     1E37                     	;# 
  3310     1E8F                     	;# 
  3311     1E90                     	;# 
  3312     1E91                     	;# 
  3313     1E92                     	;# 
  3314     1E93                     	;# 
  3315     1E9C                     	;# 
  3316     1EA1                     	;# 
  3317     1EA2                     	;# 
  3318     1EB1                     	;# 
  3319     1EBB                     	;# 
  3320     1EBC                     	;# 
  3321     1EBD                     	;# 
  3322     1EBE                     	;# 
  3323     1EC3                     	;# 
  3324     1EC5                     	;# 
  3325     1EC6                     	;# 
  3326     1EC7                     	;# 
  3327     1ECB                     	;# 
  3328     1ECC                     	;# 
  3329     1ECD                     	;# 
  3330     1ECE                     	;# 
  3331     1F10                     	;# 
  3332     1F11                     	;# 
  3333     1F12                     	;# 
  3334     1F13                     	;# 
  3335     1F14                     	;# 
  3336     1F15                     	;# 
  3337     1F1C                     	;# 
  3338     1F1D                     	;# 
  3339     1F1E                     	;# 
  3340     1F1F                     	;# 
  3341     1F20                     	;# 
  3342     1F21                     	;# 
  3343     1F22                     	;# 
  3344     1F23                     	;# 
  3345     1F24                     	;# 
  3346     1F25                     	;# 
  3347     1F26                     	;# 
  3348     1F27                     	;# 
  3349     1F38                     	;# 
  3350     1F39                     	;# 
  3351     1F3A                     	;# 
  3352     1F3B                     	;# 
  3353     1F3C                     	;# 
  3354     1F3D                     	;# 
  3355     1F3E                     	;# 
  3356     1F3F                     	;# 
  3357     1F43                     	;# 
  3358     1F44                     	;# 
  3359     1F45                     	;# 
  3360     1F46                     	;# 
  3361     1F47                     	;# 
  3362     1F48                     	;# 
  3363     1F49                     	;# 
  3364     1F4A                     	;# 
  3365     1F4E                     	;# 
  3366     1F4F                     	;# 
  3367     1F50                     	;# 
  3368     1F51                     	;# 
  3369     1F52                     	;# 
  3370     1F53                     	;# 
  3371     1F54                     	;# 
  3372     1F55                     	;# 
  3373     1FE4                     	;# 
  3374     1FE5                     	;# 
  3375     1FE6                     	;# 
  3376     1FE7                     	;# 
  3377     1FE8                     	;# 
  3378     1FE8                     	;# 
  3379     1FE9                     	;# 
  3380     1FEA                     	;# 
  3381     1FEA                     	;# 
  3382     1FEB                     	;# 
  3383     1FED                     	;# 
  3384     1FEE                     	;# 
  3385     1FEF                     	;# 
  3386     0000                     	;# 
  3387     0001                     	;# 
  3388     0002                     	;# 
  3389     0003                     	;# 
  3390     0004                     	;# 
  3391     0005                     	;# 
  3392     0006                     	;# 
  3393     0007                     	;# 
  3394     0008                     	;# 
  3395     0009                     	;# 
  3396     000A                     	;# 
  3397     000B                     	;# 
  3398     000C                     	;# 
  3399     000D                     	;# 
  3400     000E                     	;# 
  3401     0012                     	;# 
  3402     0013                     	;# 
  3403     0014                     	;# 
  3404     0018                     	;# 
  3405     0019                     	;# 
  3406     001A                     	;# 
  3407     009B                     	;# 
  3408     009B                     	;# 
  3409     009C                     	;# 
  3410     009D                     	;# 
  3411     009E                     	;# 
  3412     009F                     	;# 
  3413     0119                     	;# 
  3414     0119                     	;# 
  3415     0119                     	;# 
  3416     011A                     	;# 
  3417     011A                     	;# 
  3418     011A                     	;# 
  3419     011B                     	;# 
  3420     011B                     	;# 
  3421     011B                     	;# 
  3422     011B                     	;# 
  3423     011B                     	;# 
  3424     011C                     	;# 
  3425     011C                     	;# 
  3426     011C                     	;# 
  3427     011D                     	;# 
  3428     011D                     	;# 
  3429     011D                     	;# 
  3430     011E                     	;# 
  3431     011E                     	;# 
  3432     011E                     	;# 
  3433     011F                     	;# 
  3434     011F                     	;# 
  3435     011F                     	;# 
  3436     011F                     	;# 
  3437     011F                     	;# 
  3438     018C                     	;# 
  3439     018D                     	;# 
  3440     018E                     	;# 
  3441     018F                     	;# 
  3442     0190                     	;# 
  3443     0191                     	;# 
  3444     0192                     	;# 
  3445     020C                     	;# 
  3446     020C                     	;# 
  3447     020D                     	;# 
  3448     020E                     	;# 
  3449     020F                     	;# 
  3450     020F                     	;# 
  3451     0210                     	;# 
  3452     0210                     	;# 
  3453     0211                     	;# 
  3454     0211                     	;# 
  3455     028C                     	;# 
  3456     028C                     	;# 
  3457     028D                     	;# 
  3458     028D                     	;# 
  3459     028E                     	;# 
  3460     028F                     	;# 
  3461     0290                     	;# 
  3462     0291                     	;# 
  3463     030C                     	;# 
  3464     030C                     	;# 
  3465     030D                     	;# 
  3466     030E                     	;# 
  3467     030F                     	;# 
  3468     0310                     	;# 
  3469     0310                     	;# 
  3470     0311                     	;# 
  3471     0312                     	;# 
  3472     0313                     	;# 
  3473     0314                     	;# 
  3474     0314                     	;# 
  3475     0315                     	;# 
  3476     0316                     	;# 
  3477     0318                     	;# 
  3478     0318                     	;# 
  3479     0319                     	;# 
  3480     031A                     	;# 
  3481     031C                     	;# 
  3482     031C                     	;# 
  3483     031D                     	;# 
  3484     031E                     	;# 
  3485     038C                     	;# 
  3486     038C                     	;# 
  3487     038D                     	;# 
  3488     038E                     	;# 
  3489     058C                     	;# 
  3490     058C                     	;# 
  3491     058D                     	;# 
  3492     058E                     	;# 
  3493     058F                     	;# 
  3494     058F                     	;# 
  3495     0590                     	;# 
  3496     0591                     	;# 
  3497     0592                     	;# 
  3498     0593                     	;# 
  3499     059C                     	;# 
  3500     059C                     	;# 
  3501     059D                     	;# 
  3502     059D                     	;# 
  3503     059E                     	;# 
  3504     059F                     	;# 
  3505     060C                     	;# 
  3506     060D                     	;# 
  3507     060E                     	;# 
  3508     060F                     	;# 
  3509     0610                     	;# 
  3510     0611                     	;# 
  3511     0612                     	;# 
  3512     0613                     	;# 
  3513     0614                     	;# 
  3514     070C                     	;# 
  3515     070D                     	;# 
  3516     070E                     	;# 
  3517     070F                     	;# 
  3518     0710                     	;# 
  3519     0711                     	;# 
  3520     0712                     	;# 
  3521     0713                     	;# 
  3522     0716                     	;# 
  3523     0717                     	;# 
  3524     0718                     	;# 
  3525     0719                     	;# 
  3526     071A                     	;# 
  3527     071B                     	;# 
  3528     071C                     	;# 
  3529     071D                     	;# 
  3530     0796                     	;# 
  3531     0797                     	;# 
  3532     0798                     	;# 
  3533     0799                     	;# 
  3534     079A                     	;# 
  3535     079B                     	;# 
  3536     080C                     	;# 
  3537     080D                     	;# 
  3538     080E                     	;# 
  3539     080F                     	;# 
  3540     0810                     	;# 
  3541     0811                     	;# 
  3542     0812                     	;# 
  3543     0813                     	;# 
  3544     0814                     	;# 
  3545     081A                     	;# 
  3546     081A                     	;# 
  3547     081B                     	;# 
  3548     081C                     	;# 
  3549     081C                     	;# 
  3550     081D                     	;# 
  3551     081E                     	;# 
  3552     081F                     	;# 
  3553     088C                     	;# 
  3554     088D                     	;# 
  3555     088E                     	;# 
  3556     088F                     	;# 
  3557     0890                     	;# 
  3558     0891                     	;# 
  3559     0892                     	;# 
  3560     0893                     	;# 
  3561     0895                     	;# 
  3562     0896                     	;# 
  3563     090C                     	;# 
  3564     090E                     	;# 
  3565     090F                     	;# 
  3566     091F                     	;# 
  3567     098F                     	;# 
  3568     098F                     	;# 
  3569     0990                     	;# 
  3570     0991                     	;# 
  3571     0992                     	;# 
  3572     0993                     	;# 
  3573     0994                     	;# 
  3574     0995                     	;# 
  3575     0996                     	;# 
  3576     0997                     	;# 
  3577     0A19                     	;# 
  3578     0A19                     	;# 
  3579     0A1A                     	;# 
  3580     0A1A                     	;# 
  3581     0A1B                     	;# 
  3582     0A1B                     	;# 
  3583     0A1B                     	;# 
  3584     0A1C                     	;# 
  3585     0A1C                     	;# 
  3586     0A1D                     	;# 
  3587     0A1D                     	;# 
  3588     0A1E                     	;# 
  3589     0A1E                     	;# 
  3590     0A1F                     	;# 
  3591     0A1F                     	;# 
  3592     0A1F                     	;# 
  3593     1E0F                     	;# 
  3594     1E10                     	;# 
  3595     1E11                     	;# 
  3596     1E12                     	;# 
  3597     1E13                     	;# 
  3598     1E14                     	;# 
  3599     1E15                     	;# 
  3600     1E16                     	;# 
  3601     1E17                     	;# 
  3602     1E18                     	;# 
  3603     1E19                     	;# 
  3604     1E1A                     	;# 
  3605     1E1B                     	;# 
  3606     1E1C                     	;# 
  3607     1E1D                     	;# 
  3608     1E1E                     	;# 
  3609     1E1F                     	;# 
  3610     1E20                     	;# 
  3611     1E21                     	;# 
  3612     1E22                     	;# 
  3613     1E23                     	;# 
  3614     1E24                     	;# 
  3615     1E25                     	;# 
  3616     1E26                     	;# 
  3617     1E27                     	;# 
  3618     1E28                     	;# 
  3619     1E29                     	;# 
  3620     1E2A                     	;# 
  3621     1E2B                     	;# 
  3622     1E2C                     	;# 
  3623     1E2D                     	;# 
  3624     1E2E                     	;# 
  3625     1E2F                     	;# 
  3626     1E30                     	;# 
  3627     1E31                     	;# 
  3628     1E32                     	;# 
  3629     1E33                     	;# 
  3630     1E34                     	;# 
  3631     1E35                     	;# 
  3632     1E36                     	;# 
  3633     1E37                     	;# 
  3634     1E8F                     	;# 
  3635     1E90                     	;# 
  3636     1E91                     	;# 
  3637     1E92                     	;# 
  3638     1E93                     	;# 
  3639     1E9C                     	;# 
  3640     1EA1                     	;# 
  3641     1EA2                     	;# 
  3642     1EB1                     	;# 
  3643     1EBB                     	;# 
  3644     1EBC                     	;# 
  3645     1EBD                     	;# 
  3646     1EBE                     	;# 
  3647     1EC3                     	;# 
  3648     1EC5                     	;# 
  3649     1EC6                     	;# 
  3650     1EC7                     	;# 
  3651     1ECB                     	;# 
  3652     1ECC                     	;# 
  3653     1ECD                     	;# 
  3654     1ECE                     	;# 
  3655     1F10                     	;# 
  3656     1F11                     	;# 
  3657     1F12                     	;# 
  3658     1F13                     	;# 
  3659     1F14                     	;# 
  3660     1F15                     	;# 
  3661     1F1C                     	;# 
  3662     1F1D                     	;# 
  3663     1F1E                     	;# 
  3664     1F1F                     	;# 
  3665     1F20                     	;# 
  3666     1F21                     	;# 
  3667     1F22                     	;# 
  3668     1F23                     	;# 
  3669     1F24                     	;# 
  3670     1F25                     	;# 
  3671     1F26                     	;# 
  3672     1F27                     	;# 
  3673     1F38                     	;# 
  3674     1F39                     	;# 
  3675     1F3A                     	;# 
  3676     1F3B                     	;# 
  3677     1F3C                     	;# 
  3678     1F3D                     	;# 
  3679     1F3E                     	;# 
  3680     1F3F                     	;# 
  3681     1F43                     	;# 
  3682     1F44                     	;# 
  3683     1F45                     	;# 
  3684     1F46                     	;# 
  3685     1F47                     	;# 
  3686     1F48                     	;# 
  3687     1F49                     	;# 
  3688     1F4A                     	;# 
  3689     1F4E                     	;# 
  3690     1F4F                     	;# 
  3691     1F50                     	;# 
  3692     1F51                     	;# 
  3693     1F52                     	;# 
  3694     1F53                     	;# 
  3695     1F54                     	;# 
  3696     1F55                     	;# 
  3697     1FE4                     	;# 
  3698     1FE5                     	;# 
  3699     1FE6                     	;# 
  3700     1FE7                     	;# 
  3701     1FE8                     	;# 
  3702     1FE8                     	;# 
  3703     1FE9                     	;# 
  3704     1FEA                     	;# 
  3705     1FEA                     	;# 
  3706     1FEB                     	;# 
  3707     1FED                     	;# 
  3708     1FEE                     	;# 
  3709     1FEF                     	;# 
  3710     0000                     	;# 
  3711     0001                     	;# 
  3712     0002                     	;# 
  3713     0003                     	;# 
  3714     0004                     	;# 
  3715     0005                     	;# 
  3716     0006                     	;# 
  3717     0007                     	;# 
  3718     0008                     	;# 
  3719     0009                     	;# 
  3720     000A                     	;# 
  3721     000B                     	;# 
  3722     000C                     	;# 
  3723     000D                     	;# 
  3724     000E                     	;# 
  3725     0012                     	;# 
  3726     0013                     	;# 
  3727     0014                     	;# 
  3728     0018                     	;# 
  3729     0019                     	;# 
  3730     001A                     	;# 
  3731     009B                     	;# 
  3732     009B                     	;# 
  3733     009C                     	;# 
  3734     009D                     	;# 
  3735     009E                     	;# 
  3736     009F                     	;# 
  3737     0119                     	;# 
  3738     0119                     	;# 
  3739     0119                     	;# 
  3740     011A                     	;# 
  3741     011A                     	;# 
  3742     011A                     	;# 
  3743     011B                     	;# 
  3744     011B                     	;# 
  3745     011B                     	;# 
  3746     011B                     	;# 
  3747     011B                     	;# 
  3748     011C                     	;# 
  3749     011C                     	;# 
  3750     011C                     	;# 
  3751     011D                     	;# 
  3752     011D                     	;# 
  3753     011D                     	;# 
  3754     011E                     	;# 
  3755     011E                     	;# 
  3756     011E                     	;# 
  3757     011F                     	;# 
  3758     011F                     	;# 
  3759     011F                     	;# 
  3760     011F                     	;# 
  3761     011F                     	;# 
  3762     018C                     	;# 
  3763     018D                     	;# 
  3764     018E                     	;# 
  3765     018F                     	;# 
  3766     0190                     	;# 
  3767     0191                     	;# 
  3768     0192                     	;# 
  3769     020C                     	;# 
  3770     020C                     	;# 
  3771     020D                     	;# 
  3772     020E                     	;# 
  3773     020F                     	;# 
  3774     020F                     	;# 
  3775     0210                     	;# 
  3776     0210                     	;# 
  3777     0211                     	;# 
  3778     0211                     	;# 
  3779     028C                     	;# 
  3780     028C                     	;# 
  3781     028D                     	;# 
  3782     028D                     	;# 
  3783     028E                     	;# 
  3784     028F                     	;# 
  3785     0290                     	;# 
  3786     0291                     	;# 
  3787     030C                     	;# 
  3788     030C                     	;# 
  3789     030D                     	;# 
  3790     030E                     	;# 
  3791     030F                     	;# 
  3792     0310                     	;# 
  3793     0310                     	;# 
  3794     0311                     	;# 
  3795     0312                     	;# 
  3796     0313                     	;# 
  3797     0314                     	;# 
  3798     0314                     	;# 
  3799     0315                     	;# 
  3800     0316                     	;# 
  3801     0318                     	;# 
  3802     0318                     	;# 
  3803     0319                     	;# 
  3804     031A                     	;# 
  3805     031C                     	;# 
  3806     031C                     	;# 
  3807     031D                     	;# 
  3808     031E                     	;# 
  3809     038C                     	;# 
  3810     038C                     	;# 
  3811     038D                     	;# 
  3812     038E                     	;# 
  3813     058C                     	;# 
  3814     058C                     	;# 
  3815     058D                     	;# 
  3816     058E                     	;# 
  3817     058F                     	;# 
  3818     058F                     	;# 
  3819     0590                     	;# 
  3820     0591                     	;# 
  3821     0592                     	;# 
  3822     0593                     	;# 
  3823     059C                     	;# 
  3824     059C                     	;# 
  3825     059D                     	;# 
  3826     059D                     	;# 
  3827     059E                     	;# 
  3828     059F                     	;# 
  3829     060C                     	;# 
  3830     060D                     	;# 
  3831     060E                     	;# 
  3832     060F                     	;# 
  3833     0610                     	;# 
  3834     0611                     	;# 
  3835     0612                     	;# 
  3836     0613                     	;# 
  3837     0614                     	;# 
  3838     070C                     	;# 
  3839     070D                     	;# 
  3840     070E                     	;# 
  3841     070F                     	;# 
  3842     0710                     	;# 
  3843     0711                     	;# 
  3844     0712                     	;# 
  3845     0713                     	;# 
  3846     0716                     	;# 
  3847     0717                     	;# 
  3848     0718                     	;# 
  3849     0719                     	;# 
  3850     071A                     	;# 
  3851     071B                     	;# 
  3852     071C                     	;# 
  3853     071D                     	;# 
  3854     0796                     	;# 
  3855     0797                     	;# 
  3856     0798                     	;# 
  3857     0799                     	;# 
  3858     079A                     	;# 
  3859     079B                     	;# 
  3860     080C                     	;# 
  3861     080D                     	;# 
  3862     080E                     	;# 
  3863     080F                     	;# 
  3864     0810                     	;# 
  3865     0811                     	;# 
  3866     0812                     	;# 
  3867     0813                     	;# 
  3868     0814                     	;# 
  3869     081A                     	;# 
  3870     081A                     	;# 
  3871     081B                     	;# 
  3872     081C                     	;# 
  3873     081C                     	;# 
  3874     081D                     	;# 
  3875     081E                     	;# 
  3876     081F                     	;# 
  3877     088C                     	;# 
  3878     088D                     	;# 
  3879     088E                     	;# 
  3880     088F                     	;# 
  3881     0890                     	;# 
  3882     0891                     	;# 
  3883     0892                     	;# 
  3884     0893                     	;# 
  3885     0895                     	;# 
  3886     0896                     	;# 
  3887     090C                     	;# 
  3888     090E                     	;# 
  3889     090F                     	;# 
  3890     091F                     	;# 
  3891     098F                     	;# 
  3892     098F                     	;# 
  3893     0990                     	;# 
  3894     0991                     	;# 
  3895     0992                     	;# 
  3896     0993                     	;# 
  3897     0994                     	;# 
  3898     0995                     	;# 
  3899     0996                     	;# 
  3900     0997                     	;# 
  3901     0A19                     	;# 
  3902     0A19                     	;# 
  3903     0A1A                     	;# 
  3904     0A1A                     	;# 
  3905     0A1B                     	;# 
  3906     0A1B                     	;# 
  3907     0A1B                     	;# 
  3908     0A1C                     	;# 
  3909     0A1C                     	;# 
  3910     0A1D                     	;# 
  3911     0A1D                     	;# 
  3912     0A1E                     	;# 
  3913     0A1E                     	;# 
  3914     0A1F                     	;# 
  3915     0A1F                     	;# 
  3916     0A1F                     	;# 
  3917     1E0F                     	;# 
  3918     1E10                     	;# 
  3919     1E11                     	;# 
  3920     1E12                     	;# 
  3921     1E13                     	;# 
  3922     1E14                     	;# 
  3923     1E15                     	;# 
  3924     1E16                     	;# 
  3925     1E17                     	;# 
  3926     1E18                     	;# 
  3927     1E19                     	;# 
  3928     1E1A                     	;# 
  3929     1E1B                     	;# 
  3930     1E1C                     	;# 
  3931     1E1D                     	;# 
  3932     1E1E                     	;# 
  3933     1E1F                     	;# 
  3934     1E20                     	;# 
  3935     1E21                     	;# 
  3936     1E22                     	;# 
  3937     1E23                     	;# 
  3938     1E24                     	;# 
  3939     1E25                     	;# 
  3940     1E26                     	;# 
  3941     1E27                     	;# 
  3942     1E28                     	;# 
  3943     1E29                     	;# 
  3944     1E2A                     	;# 
  3945     1E2B                     	;# 
  3946     1E2C                     	;# 
  3947     1E2D                     	;# 
  3948     1E2E                     	;# 
  3949     1E2F                     	;# 
  3950     1E30                     	;# 
  3951     1E31                     	;# 
  3952     1E32                     	;# 
  3953     1E33                     	;# 
  3954     1E34                     	;# 
  3955     1E35                     	;# 
  3956     1E36                     	;# 
  3957     1E37                     	;# 
  3958     1E8F                     	;# 
  3959     1E90                     	;# 
  3960     1E91                     	;# 
  3961     1E92                     	;# 
  3962     1E93                     	;# 
  3963     1E9C                     	;# 
  3964     1EA1                     	;# 
  3965     1EA2                     	;# 
  3966     1EB1                     	;# 
  3967     1EBB                     	;# 
  3968     1EBC                     	;# 
  3969     1EBD                     	;# 
  3970     1EBE                     	;# 
  3971     1EC3                     	;# 
  3972     1EC5                     	;# 
  3973     1EC6                     	;# 
  3974     1EC7                     	;# 
  3975     1ECB                     	;# 
  3976     1ECC                     	;# 
  3977     1ECD                     	;# 
  3978     1ECE                     	;# 
  3979     1F10                     	;# 
  3980     1F11                     	;# 
  3981     1F12                     	;# 
  3982     1F13                     	;# 
  3983     1F14                     	;# 
  3984     1F15                     	;# 
  3985     1F1C                     	;# 
  3986     1F1D                     	;# 
  3987     1F1E                     	;# 
  3988     1F1F                     	;# 
  3989     1F20                     	;# 
  3990     1F21                     	;# 
  3991     1F22                     	;# 
  3992     1F23                     	;# 
  3993     1F24                     	;# 
  3994     1F25                     	;# 
  3995     1F26                     	;# 
  3996     1F27                     	;# 
  3997     1F38                     	;# 
  3998     1F39                     	;# 
  3999     1F3A                     	;# 
  4000     1F3B                     	;# 
  4001     1F3C                     	;# 
  4002     1F3D                     	;# 
  4003     1F3E                     	;# 
  4004     1F3F                     	;# 
  4005     1F43                     	;# 
  4006     1F44                     	;# 
  4007     1F45                     	;# 
  4008     1F46                     	;# 
  4009     1F47                     	;# 
  4010     1F48                     	;# 
  4011     1F49                     	;# 
  4012     1F4A                     	;# 
  4013     1F4E                     	;# 
  4014     1F4F                     	;# 
  4015     1F50                     	;# 
  4016     1F51                     	;# 
  4017     1F52                     	;# 
  4018     1F53                     	;# 
  4019     1F54                     	;# 
  4020     1F55                     	;# 
  4021     1FE4                     	;# 
  4022     1FE5                     	;# 
  4023     1FE6                     	;# 
  4024     1FE7                     	;# 
  4025     1FE8                     	;# 
  4026     1FE8                     	;# 
  4027     1FE9                     	;# 
  4028     1FEA                     	;# 
  4029     1FEA                     	;# 
  4030     1FEB                     	;# 
  4031     1FED                     	;# 
  4032     1FEE                     	;# 
  4033     1FEF                     	;# 
  4034     0000                     	;# 
  4035     0001                     	;# 
  4036     0002                     	;# 
  4037     0003                     	;# 
  4038     0004                     	;# 
  4039     0005                     	;# 
  4040     0006                     	;# 
  4041     0007                     	;# 
  4042     0008                     	;# 
  4043     0009                     	;# 
  4044     000A                     	;# 
  4045     000B                     	;# 
  4046     000C                     	;# 
  4047     000D                     	;# 
  4048     000E                     	;# 
  4049     0012                     	;# 
  4050     0013                     	;# 
  4051     0014                     	;# 
  4052     0018                     	;# 
  4053     0019                     	;# 
  4054     001A                     	;# 
  4055     009B                     	;# 
  4056     009B                     	;# 
  4057     009C                     	;# 
  4058     009D                     	;# 
  4059     009E                     	;# 
  4060     009F                     	;# 
  4061     0119                     	;# 
  4062     0119                     	;# 
  4063     0119                     	;# 
  4064     011A                     	;# 
  4065     011A                     	;# 
  4066     011A                     	;# 
  4067     011B                     	;# 
  4068     011B                     	;# 
  4069     011B                     	;# 
  4070     011B                     	;# 
  4071     011B                     	;# 
  4072     011C                     	;# 
  4073     011C                     	;# 
  4074     011C                     	;# 
  4075     011D                     	;# 
  4076     011D                     	;# 
  4077     011D                     	;# 
  4078     011E                     	;# 
  4079     011E                     	;# 
  4080     011E                     	;# 
  4081     011F                     	;# 
  4082     011F                     	;# 
  4083     011F                     	;# 
  4084     011F                     	;# 
  4085     011F                     	;# 
  4086     018C                     	;# 
  4087     018D                     	;# 
  4088     018E                     	;# 
  4089     018F                     	;# 
  4090     0190                     	;# 
  4091     0191                     	;# 
  4092     0192                     	;# 
  4093     020C                     	;# 
  4094     020C                     	;# 
  4095     020D                     	;# 
  4096     020E                     	;# 
  4097     020F                     	;# 
  4098     020F                     	;# 
  4099     0210                     	;# 
  4100     0210                     	;# 
  4101     0211                     	;# 
  4102     0211                     	;# 
  4103     028C                     	;# 
  4104     028C                     	;# 
  4105     028D                     	;# 
  4106     028D                     	;# 
  4107     028E                     	;# 
  4108     028F                     	;# 
  4109     0290                     	;# 
  4110     0291                     	;# 
  4111     030C                     	;# 
  4112     030C                     	;# 
  4113     030D                     	;# 
  4114     030E                     	;# 
  4115     030F                     	;# 
  4116     0310                     	;# 
  4117     0310                     	;# 
  4118     0311                     	;# 
  4119     0312                     	;# 
  4120     0313                     	;# 
  4121     0314                     	;# 
  4122     0314                     	;# 
  4123     0315                     	;# 
  4124     0316                     	;# 
  4125     0318                     	;# 
  4126     0318                     	;# 
  4127     0319                     	;# 
  4128     031A                     	;# 
  4129     031C                     	;# 
  4130     031C                     	;# 
  4131     031D                     	;# 
  4132     031E                     	;# 
  4133     038C                     	;# 
  4134     038C                     	;# 
  4135     038D                     	;# 
  4136     038E                     	;# 
  4137     058C                     	;# 
  4138     058C                     	;# 
  4139     058D                     	;# 
  4140     058E                     	;# 
  4141     058F                     	;# 
  4142     058F                     	;# 
  4143     0590                     	;# 
  4144     0591                     	;# 
  4145     0592                     	;# 
  4146     0593                     	;# 
  4147     059C                     	;# 
  4148     059C                     	;# 
  4149     059D                     	;# 
  4150     059D                     	;# 
  4151     059E                     	;# 
  4152     059F                     	;# 
  4153     060C                     	;# 
  4154     060D                     	;# 
  4155     060E                     	;# 
  4156     060F                     	;# 
  4157     0610                     	;# 
  4158     0611                     	;# 
  4159     0612                     	;# 
  4160     0613                     	;# 
  4161     0614                     	;# 
  4162     070C                     	;# 
  4163     070D                     	;# 
  4164     070E                     	;# 
  4165     070F                     	;# 
  4166     0710                     	;# 
  4167     0711                     	;# 
  4168     0712                     	;# 
  4169     0713                     	;# 
  4170     0716                     	;# 
  4171     0717                     	;# 
  4172     0718                     	;# 
  4173     0719                     	;# 
  4174     071A                     	;# 
  4175     071B                     	;# 
  4176     071C                     	;# 
  4177     071D                     	;# 
  4178     0796                     	;# 
  4179     0797                     	;# 
  4180     0798                     	;# 
  4181     0799                     	;# 
  4182     079A                     	;# 
  4183     079B                     	;# 
  4184     080C                     	;# 
  4185     080D                     	;# 
  4186     080E                     	;# 
  4187     080F                     	;# 
  4188     0810                     	;# 
  4189     0811                     	;# 
  4190     0812                     	;# 
  4191     0813                     	;# 
  4192     0814                     	;# 
  4193     081A                     	;# 
  4194     081A                     	;# 
  4195     081B                     	;# 
  4196     081C                     	;# 
  4197     081C                     	;# 
  4198     081D                     	;# 
  4199     081E                     	;# 
  4200     081F                     	;# 
  4201     088C                     	;# 
  4202     088D                     	;# 
  4203     088E                     	;# 
  4204     088F                     	;# 
  4205     0890                     	;# 
  4206     0891                     	;# 
  4207     0892                     	;# 
  4208     0893                     	;# 
  4209     0895                     	;# 
  4210     0896                     	;# 
  4211     090C                     	;# 
  4212     090E                     	;# 
  4213     090F                     	;# 
  4214     091F                     	;# 
  4215     098F                     	;# 
  4216     098F                     	;# 
  4217     0990                     	;# 
  4218     0991                     	;# 
  4219     0992                     	;# 
  4220     0993                     	;# 
  4221     0994                     	;# 
  4222     0995                     	;# 
  4223     0996                     	;# 
  4224     0997                     	;# 
  4225     0A19                     	;# 
  4226     0A19                     	;# 
  4227     0A1A                     	;# 
  4228     0A1A                     	;# 
  4229     0A1B                     	;# 
  4230     0A1B                     	;# 
  4231     0A1B                     	;# 
  4232     0A1C                     	;# 
  4233     0A1C                     	;# 
  4234     0A1D                     	;# 
  4235     0A1D                     	;# 
  4236     0A1E                     	;# 
  4237     0A1E                     	;# 
  4238     0A1F                     	;# 
  4239     0A1F                     	;# 
  4240     0A1F                     	;# 
  4241     1E0F                     	;# 
  4242     1E10                     	;# 
  4243     1E11                     	;# 
  4244     1E12                     	;# 
  4245     1E13                     	;# 
  4246     1E14                     	;# 
  4247     1E15                     	;# 
  4248     1E16                     	;# 
  4249     1E17                     	;# 
  4250     1E18                     	;# 
  4251     1E19                     	;# 
  4252     1E1A                     	;# 
  4253     1E1B                     	;# 
  4254     1E1C                     	;# 
  4255     1E1D                     	;# 
  4256     1E1E                     	;# 
  4257     1E1F                     	;# 
  4258     1E20                     	;# 
  4259     1E21                     	;# 
  4260     1E22                     	;# 
  4261     1E23                     	;# 
  4262     1E24                     	;# 
  4263     1E25                     	;# 
  4264     1E26                     	;# 
  4265     1E27                     	;# 
  4266     1E28                     	;# 
  4267     1E29                     	;# 
  4268     1E2A                     	;# 
  4269     1E2B                     	;# 
  4270     1E2C                     	;# 
  4271     1E2D                     	;# 
  4272     1E2E                     	;# 
  4273     1E2F                     	;# 
  4274     1E30                     	;# 
  4275     1E31                     	;# 
  4276     1E32                     	;# 
  4277     1E33                     	;# 
  4278     1E34                     	;# 
  4279     1E35                     	;# 
  4280     1E36                     	;# 
  4281     1E37                     	;# 
  4282     1E8F                     	;# 
  4283     1E90                     	;# 
  4284     1E91                     	;# 
  4285     1E92                     	;# 
  4286     1E93                     	;# 
  4287     1E9C                     	;# 
  4288     1EA1                     	;# 
  4289     1EA2                     	;# 
  4290     1EB1                     	;# 
  4291     1EBB                     	;# 
  4292     1EBC                     	;# 
  4293     1EBD                     	;# 
  4294     1EBE                     	;# 
  4295     1EC3                     	;# 
  4296     1EC5                     	;# 
  4297     1EC6                     	;# 
  4298     1EC7                     	;# 
  4299     1ECB                     	;# 
  4300     1ECC                     	;# 
  4301     1ECD                     	;# 
  4302     1ECE                     	;# 
  4303     1F10                     	;# 
  4304     1F11                     	;# 
  4305     1F12                     	;# 
  4306     1F13                     	;# 
  4307     1F14                     	;# 
  4308     1F15                     	;# 
  4309     1F1C                     	;# 
  4310     1F1D                     	;# 
  4311     1F1E                     	;# 
  4312     1F1F                     	;# 
  4313     1F20                     	;# 
  4314     1F21                     	;# 
  4315     1F22                     	;# 
  4316     1F23                     	;# 
  4317     1F24                     	;# 
  4318     1F25                     	;# 
  4319     1F26                     	;# 
  4320     1F27                     	;# 
  4321     1F38                     	;# 
  4322     1F39                     	;# 
  4323     1F3A                     	;# 
  4324     1F3B                     	;# 
  4325     1F3C                     	;# 
  4326     1F3D                     	;# 
  4327     1F3E                     	;# 
  4328     1F3F                     	;# 
  4329     1F43                     	;# 
  4330     1F44                     	;# 
  4331     1F45                     	;# 
  4332     1F46                     	;# 
  4333     1F47                     	;# 
  4334     1F48                     	;# 
  4335     1F49                     	;# 
  4336     1F4A                     	;# 
  4337     1F4E                     	;# 
  4338     1F4F                     	;# 
  4339     1F50                     	;# 
  4340     1F51                     	;# 
  4341     1F52                     	;# 
  4342     1F53                     	;# 
  4343     1F54                     	;# 
  4344     1F55                     	;# 
  4345     1FE4                     	;# 
  4346     1FE5                     	;# 
  4347     1FE6                     	;# 
  4348     1FE7                     	;# 
  4349     1FE8                     	;# 
  4350     1FE8                     	;# 
  4351     1FE9                     	;# 
  4352     1FEA                     	;# 
  4353     1FEA                     	;# 
  4354     1FEB                     	;# 
  4355     1FED                     	;# 
  4356     1FEE                     	;# 
  4357     1FEF                     	;# 
  4358     0000                     	;# 
  4359     0001                     	;# 
  4360     0002                     	;# 
  4361     0003                     	;# 
  4362     0004                     	;# 
  4363     0005                     	;# 
  4364     0006                     	;# 
  4365     0007                     	;# 
  4366     0008                     	;# 
  4367     0009                     	;# 
  4368     000A                     	;# 
  4369     000B                     	;# 
  4370     000C                     	;# 
  4371     000D                     	;# 
  4372     000E                     	;# 
  4373     0012                     	;# 
  4374     0013                     	;# 
  4375     0014                     	;# 
  4376     0018                     	;# 
  4377     0019                     	;# 
  4378     001A                     	;# 
  4379     009B                     	;# 
  4380     009B                     	;# 
  4381     009C                     	;# 
  4382     009D                     	;# 
  4383     009E                     	;# 
  4384     009F                     	;# 
  4385     0119                     	;# 
  4386     0119                     	;# 
  4387     0119                     	;# 
  4388     011A                     	;# 
  4389     011A                     	;# 
  4390     011A                     	;# 
  4391     011B                     	;# 
  4392     011B                     	;# 
  4393     011B                     	;# 
  4394     011B                     	;# 
  4395     011B                     	;# 
  4396     011C                     	;# 
  4397     011C                     	;# 
  4398     011C                     	;# 
  4399     011D                     	;# 
  4400     011D                     	;# 
  4401     011D                     	;# 
  4402     011E                     	;# 
  4403     011E                     	;# 
  4404     011E                     	;# 
  4405     011F                     	;# 
  4406     011F                     	;# 
  4407     011F                     	;# 
  4408     011F                     	;# 
  4409     011F                     	;# 
  4410     018C                     	;# 
  4411     018D                     	;# 
  4412     018E                     	;# 
  4413     018F                     	;# 
  4414     0190                     	;# 
  4415     0191                     	;# 
  4416     0192                     	;# 
  4417     020C                     	;# 
  4418     020C                     	;# 
  4419     020D                     	;# 
  4420     020E                     	;# 
  4421     020F                     	;# 
  4422     020F                     	;# 
  4423     0210                     	;# 
  4424     0210                     	;# 
  4425     0211                     	;# 
  4426     0211                     	;# 
  4427     028C                     	;# 
  4428     028C                     	;# 
  4429     028D                     	;# 
  4430     028D                     	;# 
  4431     028E                     	;# 
  4432     028F                     	;# 
  4433     0290                     	;# 
  4434     0291                     	;# 
  4435     030C                     	;# 
  4436     030C                     	;# 
  4437     030D                     	;# 
  4438     030E                     	;# 
  4439     030F                     	;# 
  4440     0310                     	;# 
  4441     0310                     	;# 
  4442     0311                     	;# 
  4443     0312                     	;# 
  4444     0313                     	;# 
  4445     0314                     	;# 
  4446     0314                     	;# 
  4447     0315                     	;# 
  4448     0316                     	;# 
  4449     0318                     	;# 
  4450     0318                     	;# 
  4451     0319                     	;# 
  4452     031A                     	;# 
  4453     031C                     	;# 
  4454     031C                     	;# 
  4455     031D                     	;# 
  4456     031E                     	;# 
  4457     038C                     	;# 
  4458     038C                     	;# 
  4459     038D                     	;# 
  4460     038E                     	;# 
  4461     058C                     	;# 
  4462     058C                     	;# 
  4463     058D                     	;# 
  4464     058E                     	;# 
  4465     058F                     	;# 
  4466     058F                     	;# 
  4467     0590                     	;# 
  4468     0591                     	;# 
  4469     0592                     	;# 
  4470     0593                     	;# 
  4471     059C                     	;# 
  4472     059C                     	;# 
  4473     059D                     	;# 
  4474     059D                     	;# 
  4475     059E                     	;# 
  4476     059F                     	;# 
  4477     060C                     	;# 
  4478     060D                     	;# 
  4479     060E                     	;# 
  4480     060F                     	;# 
  4481     0610                     	;# 
  4482     0611                     	;# 
  4483     0612                     	;# 
  4484     0613                     	;# 
  4485     0614                     	;# 
  4486     070C                     	;# 
  4487     070D                     	;# 
  4488     070E                     	;# 
  4489     070F                     	;# 
  4490     0710                     	;# 
  4491     0711                     	;# 
  4492     0712                     	;# 
  4493     0713                     	;# 
  4494     0716                     	;# 
  4495     0717                     	;# 
  4496     0718                     	;# 
  4497     0719                     	;# 
  4498     071A                     	;# 
  4499     071B                     	;# 
  4500     071C                     	;# 
  4501     071D                     	;# 
  4502     0796                     	;# 
  4503     0797                     	;# 
  4504     0798                     	;# 
  4505     0799                     	;# 
  4506     079A                     	;# 
  4507     079B                     	;# 
  4508     080C                     	;# 
  4509     080D                     	;# 
  4510     080E                     	;# 
  4511     080F                     	;# 
  4512     0810                     	;# 
  4513     0811                     	;# 
  4514     0812                     	;# 
  4515     0813                     	;# 
  4516     0814                     	;# 
  4517     081A                     	;# 
  4518     081A                     	;# 
  4519     081B                     	;# 
  4520     081C                     	;# 
  4521     081C                     	;# 
  4522     081D                     	;# 
  4523     081E                     	;# 
  4524     081F                     	;# 
  4525     088C                     	;# 
  4526     088D                     	;# 
  4527     088E                     	;# 
  4528     088F                     	;# 
  4529     0890                     	;# 
  4530     0891                     	;# 
  4531     0892                     	;# 
  4532     0893                     	;# 
  4533     0895                     	;# 
  4534     0896                     	;# 
  4535     090C                     	;# 
  4536     090E                     	;# 
  4537     090F                     	;# 
  4538     091F                     	;# 
  4539     098F                     	;# 
  4540     098F                     	;# 
  4541     0990                     	;# 
  4542     0991                     	;# 
  4543     0992                     	;# 
  4544     0993                     	;# 
  4545     0994                     	;# 
  4546     0995                     	;# 
  4547     0996                     	;# 
  4548     0997                     	;# 
  4549     0A19                     	;# 
  4550     0A19                     	;# 
  4551     0A1A                     	;# 
  4552     0A1A                     	;# 
  4553     0A1B                     	;# 
  4554     0A1B                     	;# 
  4555     0A1B                     	;# 
  4556     0A1C                     	;# 
  4557     0A1C                     	;# 
  4558     0A1D                     	;# 
  4559     0A1D                     	;# 
  4560     0A1E                     	;# 
  4561     0A1E                     	;# 
  4562     0A1F                     	;# 
  4563     0A1F                     	;# 
  4564     0A1F                     	;# 
  4565     1E0F                     	;# 
  4566     1E10                     	;# 
  4567     1E11                     	;# 
  4568     1E12                     	;# 
  4569     1E13                     	;# 
  4570     1E14                     	;# 
  4571     1E15                     	;# 
  4572     1E16                     	;# 
  4573     1E17                     	;# 
  4574     1E18                     	;# 
  4575     1E19                     	;# 
  4576     1E1A                     	;# 
  4577     1E1B                     	;# 
  4578     1E1C                     	;# 
  4579     1E1D                     	;# 
  4580     1E1E                     	;# 
  4581     1E1F                     	;# 
  4582     1E20                     	;# 
  4583     1E21                     	;# 
  4584     1E22                     	;# 
  4585     1E23                     	;# 
  4586     1E24                     	;# 
  4587     1E25                     	;# 
  4588     1E26                     	;# 
  4589     1E27                     	;# 
  4590     1E28                     	;# 
  4591     1E29                     	;# 
  4592     1E2A                     	;# 
  4593     1E2B                     	;# 
  4594     1E2C                     	;# 
  4595     1E2D                     	;# 
  4596     1E2E                     	;# 
  4597     1E2F                     	;# 
  4598     1E30                     	;# 
  4599     1E31                     	;# 
  4600     1E32                     	;# 
  4601     1E33                     	;# 
  4602     1E34                     	;# 
  4603     1E35                     	;# 
  4604     1E36                     	;# 
  4605     1E37                     	;# 
  4606     1E8F                     	;# 
  4607     1E90                     	;# 
  4608     1E91                     	;# 
  4609     1E92                     	;# 
  4610     1E93                     	;# 
  4611     1E9C                     	;# 
  4612     1EA1                     	;# 
  4613     1EA2                     	;# 
  4614     1EB1                     	;# 
  4615     1EBB                     	;# 
  4616     1EBC                     	;# 
  4617     1EBD                     	;# 
  4618     1EBE                     	;# 
  4619     1EC3                     	;# 
  4620     1EC5                     	;# 
  4621     1EC6                     	;# 
  4622     1EC7                     	;# 
  4623     1ECB                     	;# 
  4624     1ECC                     	;# 
  4625     1ECD                     	;# 
  4626     1ECE                     	;# 
  4627     1F10                     	;# 
  4628     1F11                     	;# 
  4629     1F12                     	;# 
  4630     1F13                     	;# 
  4631     1F14                     	;# 
  4632     1F15                     	;# 
  4633     1F1C                     	;# 
  4634     1F1D                     	;# 
  4635     1F1E                     	;# 
  4636     1F1F                     	;# 
  4637     1F20                     	;# 
  4638     1F21                     	;# 
  4639     1F22                     	;# 
  4640     1F23                     	;# 
  4641     1F24                     	;# 
  4642     1F25                     	;# 
  4643     1F26                     	;# 
  4644     1F27                     	;# 
  4645     1F38                     	;# 
  4646     1F39                     	;# 
  4647     1F3A                     	;# 
  4648     1F3B                     	;# 
  4649     1F3C                     	;# 
  4650     1F3D                     	;# 
  4651     1F3E                     	;# 
  4652     1F3F                     	;# 
  4653     1F43                     	;# 
  4654     1F44                     	;# 
  4655     1F45                     	;# 
  4656     1F46                     	;# 
  4657     1F47                     	;# 
  4658     1F48                     	;# 
  4659     1F49                     	;# 
  4660     1F4A                     	;# 
  4661     1F4E                     	;# 
  4662     1F4F                     	;# 
  4663     1F50                     	;# 
  4664     1F51                     	;# 
  4665     1F52                     	;# 
  4666     1F53                     	;# 
  4667     1F54                     	;# 
  4668     1F55                     	;# 
  4669     1FE4                     	;# 
  4670     1FE5                     	;# 
  4671     1FE6                     	;# 
  4672     1FE7                     	;# 
  4673     1FE8                     	;# 
  4674     1FE8                     	;# 
  4675     1FE9                     	;# 
  4676     1FEA                     	;# 
  4677     1FEA                     	;# 
  4678     1FEB                     	;# 
  4679     1FED                     	;# 
  4680     1FEE                     	;# 
  4681     1FEF                     	;# 
  4682     0000                     	;# 
  4683     0001                     	;# 
  4684     0002                     	;# 
  4685     0003                     	;# 
  4686     0004                     	;# 
  4687     0005                     	;# 
  4688     0006                     	;# 
  4689     0007                     	;# 
  4690     0008                     	;# 
  4691     0009                     	;# 
  4692     000A                     	;# 
  4693     000B                     	;# 
  4694     000C                     	;# 
  4695     000D                     	;# 
  4696     000E                     	;# 
  4697     0012                     	;# 
  4698     0013                     	;# 
  4699     0014                     	;# 
  4700     0018                     	;# 
  4701     0019                     	;# 
  4702     001A                     	;# 
  4703     009B                     	;# 
  4704     009B                     	;# 
  4705     009C                     	;# 
  4706     009D                     	;# 
  4707     009E                     	;# 
  4708     009F                     	;# 
  4709     0119                     	;# 
  4710     0119                     	;# 
  4711     0119                     	;# 
  4712     011A                     	;# 
  4713     011A                     	;# 
  4714     011A                     	;# 
  4715     011B                     	;# 
  4716     011B                     	;# 
  4717     011B                     	;# 
  4718     011B                     	;# 
  4719     011B                     	;# 
  4720     011C                     	;# 
  4721     011C                     	;# 
  4722     011C                     	;# 
  4723     011D                     	;# 
  4724     011D                     	;# 
  4725     011D                     	;# 
  4726     011E                     	;# 
  4727     011E                     	;# 
  4728     011E                     	;# 
  4729     011F                     	;# 
  4730     011F                     	;# 
  4731     011F                     	;# 
  4732     011F                     	;# 
  4733     011F                     	;# 
  4734     018C                     	;# 
  4735     018D                     	;# 
  4736     018E                     	;# 
  4737     018F                     	;# 
  4738     0190                     	;# 
  4739     0191                     	;# 
  4740     0192                     	;# 
  4741     020C                     	;# 
  4742     020C                     	;# 
  4743     020D                     	;# 
  4744     020E                     	;# 
  4745     020F                     	;# 
  4746     020F                     	;# 
  4747     0210                     	;# 
  4748     0210                     	;# 
  4749     0211                     	;# 
  4750     0211                     	;# 
  4751     028C                     	;# 
  4752     028C                     	;# 
  4753     028D                     	;# 
  4754     028D                     	;# 
  4755     028E                     	;# 
  4756     028F                     	;# 
  4757     0290                     	;# 
  4758     0291                     	;# 
  4759     030C                     	;# 
  4760     030C                     	;# 
  4761     030D                     	;# 
  4762     030E                     	;# 
  4763     030F                     	;# 
  4764     0310                     	;# 
  4765     0310                     	;# 
  4766     0311                     	;# 
  4767     0312                     	;# 
  4768     0313                     	;# 
  4769     0314                     	;# 
  4770     0314                     	;# 
  4771     0315                     	;# 
  4772     0316                     	;# 
  4773     0318                     	;# 
  4774     0318                     	;# 
  4775     0319                     	;# 
  4776     031A                     	;# 
  4777     031C                     	;# 
  4778     031C                     	;# 
  4779     031D                     	;# 
  4780     031E                     	;# 
  4781     038C                     	;# 
  4782     038C                     	;# 
  4783     038D                     	;# 
  4784     038E                     	;# 
  4785     058C                     	;# 
  4786     058C                     	;# 
  4787     058D                     	;# 
  4788     058E                     	;# 
  4789     058F                     	;# 
  4790     058F                     	;# 
  4791     0590                     	;# 
  4792     0591                     	;# 
  4793     0592                     	;# 
  4794     0593                     	;# 
  4795     059C                     	;# 
  4796     059C                     	;# 
  4797     059D                     	;# 
  4798     059D                     	;# 
  4799     059E                     	;# 
  4800     059F                     	;# 
  4801     060C                     	;# 
  4802     060D                     	;# 
  4803     060E                     	;# 
  4804     060F                     	;# 
  4805     0610                     	;# 
  4806     0611                     	;# 
  4807     0612                     	;# 
  4808     0613                     	;# 
  4809     0614                     	;# 
  4810     070C                     	;# 
  4811     070D                     	;# 
  4812     070E                     	;# 
  4813     070F                     	;# 
  4814     0710                     	;# 
  4815     0711                     	;# 
  4816     0712                     	;# 
  4817     0713                     	;# 
  4818     0716                     	;# 
  4819     0717                     	;# 
  4820     0718                     	;# 
  4821     0719                     	;# 
  4822     071A                     	;# 
  4823     071B                     	;# 
  4824     071C                     	;# 
  4825     071D                     	;# 
  4826     0796                     	;# 
  4827     0797                     	;# 
  4828     0798                     	;# 
  4829     0799                     	;# 
  4830     079A                     	;# 
  4831     079B                     	;# 
  4832     080C                     	;# 
  4833     080D                     	;# 
  4834     080E                     	;# 
  4835     080F                     	;# 
  4836     0810                     	;# 
  4837     0811                     	;# 
  4838     0812                     	;# 
  4839     0813                     	;# 
  4840     0814                     	;# 
  4841     081A                     	;# 
  4842     081A                     	;# 
  4843     081B                     	;# 
  4844     081C                     	;# 
  4845     081C                     	;# 
  4846     081D                     	;# 
  4847     081E                     	;# 
  4848     081F                     	;# 
  4849     088C                     	;# 
  4850     088D                     	;# 
  4851     088E                     	;# 
  4852     088F                     	;# 
  4853     0890                     	;# 
  4854     0891                     	;# 
  4855     0892                     	;# 
  4856     0893                     	;# 
  4857     0895                     	;# 
  4858     0896                     	;# 
  4859     090C                     	;# 
  4860     090E                     	;# 
  4861     090F                     	;# 
  4862     091F                     	;# 
  4863     098F                     	;# 
  4864     098F                     	;# 
  4865     0990                     	;# 
  4866     0991                     	;# 
  4867     0992                     	;# 
  4868     0993                     	;# 
  4869     0994                     	;# 
  4870     0995                     	;# 
  4871     0996                     	;# 
  4872     0997                     	;# 
  4873     0A19                     	;# 
  4874     0A19                     	;# 
  4875     0A1A                     	;# 
  4876     0A1A                     	;# 
  4877     0A1B                     	;# 
  4878     0A1B                     	;# 
  4879     0A1B                     	;# 
  4880     0A1C                     	;# 
  4881     0A1C                     	;# 
  4882     0A1D                     	;# 
  4883     0A1D                     	;# 
  4884     0A1E                     	;# 
  4885     0A1E                     	;# 
  4886     0A1F                     	;# 
  4887     0A1F                     	;# 
  4888     0A1F                     	;# 
  4889     1E0F                     	;# 
  4890     1E10                     	;# 
  4891     1E11                     	;# 
  4892     1E12                     	;# 
  4893     1E13                     	;# 
  4894     1E14                     	;# 
  4895     1E15                     	;# 
  4896     1E16                     	;# 
  4897     1E17                     	;# 
  4898     1E18                     	;# 
  4899     1E19                     	;# 
  4900     1E1A                     	;# 
  4901     1E1B                     	;# 
  4902     1E1C                     	;# 
  4903     1E1D                     	;# 
  4904     1E1E                     	;# 
  4905     1E1F                     	;# 
  4906     1E20                     	;# 
  4907     1E21                     	;# 
  4908     1E22                     	;# 
  4909     1E23                     	;# 
  4910     1E24                     	;# 
  4911     1E25                     	;# 
  4912     1E26                     	;# 
  4913     1E27                     	;# 
  4914     1E28                     	;# 
  4915     1E29                     	;# 
  4916     1E2A                     	;# 
  4917     1E2B                     	;# 
  4918     1E2C                     	;# 
  4919     1E2D                     	;# 
  4920     1E2E                     	;# 
  4921     1E2F                     	;# 
  4922     1E30                     	;# 
  4923     1E31                     	;# 
  4924     1E32                     	;# 
  4925     1E33                     	;# 
  4926     1E34                     	;# 
  4927     1E35                     	;# 
  4928     1E36                     	;# 
  4929     1E37                     	;# 
  4930     1E8F                     	;# 
  4931     1E90                     	;# 
  4932     1E91                     	;# 
  4933     1E92                     	;# 
  4934     1E93                     	;# 
  4935     1E9C                     	;# 
  4936     1EA1                     	;# 
  4937     1EA2                     	;# 
  4938     1EB1                     	;# 
  4939     1EBB                     	;# 
  4940     1EBC                     	;# 
  4941     1EBD                     	;# 
  4942     1EBE                     	;# 
  4943     1EC3                     	;# 
  4944     1EC5                     	;# 
  4945     1EC6                     	;# 
  4946     1EC7                     	;# 
  4947     1ECB                     	;# 
  4948     1ECC                     	;# 
  4949     1ECD                     	;# 
  4950     1ECE                     	;# 
  4951     1F10                     	;# 
  4952     1F11                     	;# 
  4953     1F12                     	;# 
  4954     1F13                     	;# 
  4955     1F14                     	;# 
  4956     1F15                     	;# 
  4957     1F1C                     	;# 
  4958     1F1D                     	;# 
  4959     1F1E                     	;# 
  4960     1F1F                     	;# 
  4961     1F20                     	;# 
  4962     1F21                     	;# 
  4963     1F22                     	;# 
  4964     1F23                     	;# 
  4965     1F24                     	;# 
  4966     1F25                     	;# 
  4967     1F26                     	;# 
  4968     1F27                     	;# 
  4969     1F38                     	;# 
  4970     1F39                     	;# 
  4971     1F3A                     	;# 
  4972     1F3B                     	;# 
  4973     1F3C                     	;# 
  4974     1F3D                     	;# 
  4975     1F3E                     	;# 
  4976     1F3F                     	;# 
  4977     1F43                     	;# 
  4978     1F44                     	;# 
  4979     1F45                     	;# 
  4980     1F46                     	;# 
  4981     1F47                     	;# 
  4982     1F48                     	;# 
  4983     1F49                     	;# 
  4984     1F4A                     	;# 
  4985     1F4E                     	;# 
  4986     1F4F                     	;# 
  4987     1F50                     	;# 
  4988     1F51                     	;# 
  4989     1F52                     	;# 
  4990     1F53                     	;# 
  4991     1F54                     	;# 
  4992     1F55                     	;# 
  4993     1FE4                     	;# 
  4994     1FE5                     	;# 
  4995     1FE6                     	;# 
  4996     1FE7                     	;# 
  4997     1FE8                     	;# 
  4998     1FE8                     	;# 
  4999     1FE9                     	;# 
  5000     1FEA                     	;# 
  5001     1FEA                     	;# 
  5002     1FEB                     	;# 
  5003     1FED                     	;# 
  5004     1FEE                     	;# 
  5005     1FEF                     	;# 
  5006     0000                     	;# 
  5007     0001                     	;# 
  5008     0002                     	;# 
  5009     0003                     	;# 
  5010     0004                     	;# 
  5011     0005                     	;# 
  5012     0006                     	;# 
  5013     0007                     	;# 
  5014     0008                     	;# 
  5015     0009                     	;# 
  5016     000A                     	;# 
  5017     000B                     	;# 
  5018     000C                     	;# 
  5019     000D                     	;# 
  5020     000E                     	;# 
  5021     0012                     	;# 
  5022     0013                     	;# 
  5023     0014                     	;# 
  5024     0018                     	;# 
  5025     0019                     	;# 
  5026     001A                     	;# 
  5027     009B                     	;# 
  5028     009B                     	;# 
  5029     009C                     	;# 
  5030     009D                     	;# 
  5031     009E                     	;# 
  5032     009F                     	;# 
  5033     0119                     	;# 
  5034     0119                     	;# 
  5035     0119                     	;# 
  5036     011A                     	;# 
  5037     011A                     	;# 
  5038     011A                     	;# 
  5039     011B                     	;# 
  5040     011B                     	;# 
  5041     011B                     	;# 
  5042     011B                     	;# 
  5043     011B                     	;# 
  5044     011C                     	;# 
  5045     011C                     	;# 
  5046     011C                     	;# 
  5047     011D                     	;# 
  5048     011D                     	;# 
  5049     011D                     	;# 
  5050     011E                     	;# 
  5051     011E                     	;# 
  5052     011E                     	;# 
  5053     011F                     	;# 
  5054     011F                     	;# 
  5055     011F                     	;# 
  5056     011F                     	;# 
  5057     011F                     	;# 
  5058     018C                     	;# 
  5059     018D                     	;# 
  5060     018E                     	;# 
  5061     018F                     	;# 
  5062     0190                     	;# 
  5063     0191                     	;# 
  5064     0192                     	;# 
  5065     020C                     	;# 
  5066     020C                     	;# 
  5067     020D                     	;# 
  5068     020E                     	;# 
  5069     020F                     	;# 
  5070     020F                     	;# 
  5071     0210                     	;# 
  5072     0210                     	;# 
  5073     0211                     	;# 
  5074     0211                     	;# 
  5075     028C                     	;# 
  5076     028C                     	;# 
  5077     028D                     	;# 
  5078     028D                     	;# 
  5079     028E                     	;# 
  5080     028F                     	;# 
  5081     0290                     	;# 
  5082     0291                     	;# 
  5083     030C                     	;# 
  5084     030C                     	;# 
  5085     030D                     	;# 
  5086     030E                     	;# 
  5087     030F                     	;# 
  5088     0310                     	;# 
  5089     0310                     	;# 
  5090     0311                     	;# 
  5091     0312                     	;# 
  5092     0313                     	;# 
  5093     0314                     	;# 
  5094     0314                     	;# 
  5095     0315                     	;# 
  5096     0316                     	;# 
  5097     0318                     	;# 
  5098     0318                     	;# 
  5099     0319                     	;# 
  5100     031A                     	;# 
  5101     031C                     	;# 
  5102     031C                     	;# 
  5103     031D                     	;# 
  5104     031E                     	;# 
  5105     038C                     	;# 
  5106     038C                     	;# 
  5107     038D                     	;# 
  5108     038E                     	;# 
  5109     058C                     	;# 
  5110     058C                     	;# 
  5111     058D                     	;# 
  5112     058E                     	;# 
  5113     058F                     	;# 
  5114     058F                     	;# 
  5115     0590                     	;# 
  5116     0591                     	;# 
  5117     0592                     	;# 
  5118     0593                     	;# 
  5119     059C                     	;# 
  5120     059C                     	;# 
  5121     059D                     	;# 
  5122     059D                     	;# 
  5123     059E                     	;# 
  5124     059F                     	;# 
  5125     060C                     	;# 
  5126     060D                     	;# 
  5127     060E                     	;# 
  5128     060F                     	;# 
  5129     0610                     	;# 
  5130     0611                     	;# 
  5131     0612                     	;# 
  5132     0613                     	;# 
  5133     0614                     	;# 
  5134     070C                     	;# 
  5135     070D                     	;# 
  5136     070E                     	;# 
  5137     070F                     	;# 
  5138     0710                     	;# 
  5139     0711                     	;# 
  5140     0712                     	;# 
  5141     0713                     	;# 
  5142     0716                     	;# 
  5143     0717                     	;# 
  5144     0718                     	;# 
  5145     0719                     	;# 
  5146     071A                     	;# 
  5147     071B                     	;# 
  5148     071C                     	;# 
  5149     071D                     	;# 
  5150     0796                     	;# 
  5151     0797                     	;# 
  5152     0798                     	;# 
  5153     0799                     	;# 
  5154     079A                     	;# 
  5155     079B                     	;# 
  5156     080C                     	;# 
  5157     080D                     	;# 
  5158     080E                     	;# 
  5159     080F                     	;# 
  5160     0810                     	;# 
  5161     0811                     	;# 
  5162     0812                     	;# 
  5163     0813                     	;# 
  5164     0814                     	;# 
  5165     081A                     	;# 
  5166     081A                     	;# 
  5167     081B                     	;# 
  5168     081C                     	;# 
  5169     081C                     	;# 
  5170     081D                     	;# 
  5171     081E                     	;# 
  5172     081F                     	;# 
  5173     088C                     	;# 
  5174     088D                     	;# 
  5175     088E                     	;# 
  5176     088F                     	;# 
  5177     0890                     	;# 
  5178     0891                     	;# 
  5179     0892                     	;# 
  5180     0893                     	;# 
  5181     0895                     	;# 
  5182     0896                     	;# 
  5183     090C                     	;# 
  5184     090E                     	;# 
  5185     090F                     	;# 
  5186     091F                     	;# 
  5187     098F                     	;# 
  5188     098F                     	;# 
  5189     0990                     	;# 
  5190     0991                     	;# 
  5191     0992                     	;# 
  5192     0993                     	;# 
  5193     0994                     	;# 
  5194     0995                     	;# 
  5195     0996                     	;# 
  5196     0997                     	;# 
  5197     0A19                     	;# 
  5198     0A19                     	;# 
  5199     0A1A                     	;# 
  5200     0A1A                     	;# 
  5201     0A1B                     	;# 
  5202     0A1B                     	;# 
  5203     0A1B                     	;# 
  5204     0A1C                     	;# 
  5205     0A1C                     	;# 
  5206     0A1D                     	;# 
  5207     0A1D                     	;# 
  5208     0A1E                     	;# 
  5209     0A1E                     	;# 
  5210     0A1F                     	;# 
  5211     0A1F                     	;# 
  5212     0A1F                     	;# 
  5213     1E0F                     	;# 
  5214     1E10                     	;# 
  5215     1E11                     	;# 
  5216     1E12                     	;# 
  5217     1E13                     	;# 
  5218     1E14                     	;# 
  5219     1E15                     	;# 
  5220     1E16                     	;# 
  5221     1E17                     	;# 
  5222     1E18                     	;# 
  5223     1E19                     	;# 
  5224     1E1A                     	;# 
  5225     1E1B                     	;# 
  5226     1E1C                     	;# 
  5227     1E1D                     	;# 
  5228     1E1E                     	;# 
  5229     1E1F                     	;# 
  5230     1E20                     	;# 
  5231     1E21                     	;# 
  5232     1E22                     	;# 
  5233     1E23                     	;# 
  5234     1E24                     	;# 
  5235     1E25                     	;# 
  5236     1E26                     	;# 
  5237     1E27                     	;# 
  5238     1E28                     	;# 
  5239     1E29                     	;# 
  5240     1E2A                     	;# 
  5241     1E2B                     	;# 
  5242     1E2C                     	;# 
  5243     1E2D                     	;# 
  5244     1E2E                     	;# 
  5245     1E2F                     	;# 
  5246     1E30                     	;# 
  5247     1E31                     	;# 
  5248     1E32                     	;# 
  5249     1E33                     	;# 
  5250     1E34                     	;# 
  5251     1E35                     	;# 
  5252     1E36                     	;# 
  5253     1E37                     	;# 
  5254     1E8F                     	;# 
  5255     1E90                     	;# 
  5256     1E91                     	;# 
  5257     1E92                     	;# 
  5258     1E93                     	;# 
  5259     1E9C                     	;# 
  5260     1EA1                     	;# 
  5261     1EA2                     	;# 
  5262     1EB1                     	;# 
  5263     1EBB                     	;# 
  5264     1EBC                     	;# 
  5265     1EBD                     	;# 
  5266     1EBE                     	;# 
  5267     1EC3                     	;# 
  5268     1EC5                     	;# 
  5269     1EC6                     	;# 
  5270     1EC7                     	;# 
  5271     1ECB                     	;# 
  5272     1ECC                     	;# 
  5273     1ECD                     	;# 
  5274     1ECE                     	;# 
  5275     1F10                     	;# 
  5276     1F11                     	;# 
  5277     1F12                     	;# 
  5278     1F13                     	;# 
  5279     1F14                     	;# 
  5280     1F15                     	;# 
  5281     1F1C                     	;# 
  5282     1F1D                     	;# 
  5283     1F1E                     	;# 
  5284     1F1F                     	;# 
  5285     1F20                     	;# 
  5286     1F21                     	;# 
  5287     1F22                     	;# 
  5288     1F23                     	;# 
  5289     1F24                     	;# 
  5290     1F25                     	;# 
  5291     1F26                     	;# 
  5292     1F27                     	;# 
  5293     1F38                     	;# 
  5294     1F39                     	;# 
  5295     1F3A                     	;# 
  5296     1F3B                     	;# 
  5297     1F3C                     	;# 
  5298     1F3D                     	;# 
  5299     1F3E                     	;# 
  5300     1F3F                     	;# 
  5301     1F43                     	;# 
  5302     1F44                     	;# 
  5303     1F45                     	;# 
  5304     1F46                     	;# 
  5305     1F47                     	;# 
  5306     1F48                     	;# 
  5307     1F49                     	;# 
  5308     1F4A                     	;# 
  5309     1F4E                     	;# 
  5310     1F4F                     	;# 
  5311     1F50                     	;# 
  5312     1F51                     	;# 
  5313     1F52                     	;# 
  5314     1F53                     	;# 
  5315     1F54                     	;# 
  5316     1F55                     	;# 
  5317     1FE4                     	;# 
  5318     1FE5                     	;# 
  5319     1FE6                     	;# 
  5320     1FE7                     	;# 
  5321     1FE8                     	;# 
  5322     1FE8                     	;# 
  5323     1FE9                     	;# 
  5324     1FEA                     	;# 
  5325     1FEA                     	;# 
  5326     1FEB                     	;# 
  5327     1FED                     	;# 
  5328     1FEE                     	;# 
  5329     1FEF                     	;# 
  5330     0000                     	;# 
  5331     0001                     	;# 
  5332     0002                     	;# 
  5333     0003                     	;# 
  5334     0004                     	;# 
  5335     0005                     	;# 
  5336     0006                     	;# 
  5337     0007                     	;# 
  5338     0008                     	;# 
  5339     0009                     	;# 
  5340     000A                     	;# 
  5341     000B                     	;# 
  5342     000C                     	;# 
  5343     000D                     	;# 
  5344     000E                     	;# 
  5345     0012                     	;# 
  5346     0013                     	;# 
  5347     0014                     	;# 
  5348     0018                     	;# 
  5349     0019                     	;# 
  5350     001A                     	;# 
  5351     009B                     	;# 
  5352     009B                     	;# 
  5353     009C                     	;# 
  5354     009D                     	;# 
  5355     009E                     	;# 
  5356     009F                     	;# 
  5357     0119                     	;# 
  5358     0119                     	;# 
  5359     0119                     	;# 
  5360     011A                     	;# 
  5361     011A                     	;# 
  5362     011A                     	;# 
  5363     011B                     	;# 
  5364     011B                     	;# 
  5365     011B                     	;# 
  5366     011B                     	;# 
  5367     011B                     	;# 
  5368     011C                     	;# 
  5369     011C                     	;# 
  5370     011C                     	;# 
  5371     011D                     	;# 
  5372     011D                     	;# 
  5373     011D                     	;# 
  5374     011E                     	;# 
  5375     011E                     	;# 
  5376     011E                     	;# 
  5377     011F                     	;# 
  5378     011F                     	;# 
  5379     011F                     	;# 
  5380     011F                     	;# 
  5381     011F                     	;# 
  5382     018C                     	;# 
  5383     018D                     	;# 
  5384     018E                     	;# 
  5385     018F                     	;# 
  5386     0190                     	;# 
  5387     0191                     	;# 
  5388     0192                     	;# 
  5389     020C                     	;# 
  5390     020C                     	;# 
  5391     020D                     	;# 
  5392     020E                     	;# 
  5393     020F                     	;# 
  5394     020F                     	;# 
  5395     0210                     	;# 
  5396     0210                     	;# 
  5397     0211                     	;# 
  5398     0211                     	;# 
  5399     028C                     	;# 
  5400     028C                     	;# 
  5401     028D                     	;# 
  5402     028D                     	;# 
  5403     028E                     	;# 
  5404     028F                     	;# 
  5405     0290                     	;# 
  5406     0291                     	;# 
  5407     030C                     	;# 
  5408     030C                     	;# 
  5409     030D                     	;# 
  5410     030E                     	;# 
  5411     030F                     	;# 
  5412     0310                     	;# 
  5413     0310                     	;# 
  5414     0311                     	;# 
  5415     0312                     	;# 
  5416     0313                     	;# 
  5417     0314                     	;# 
  5418     0314                     	;# 
  5419     0315                     	;# 
  5420     0316                     	;# 
  5421     0318                     	;# 
  5422     0318                     	;# 
  5423     0319                     	;# 
  5424     031A                     	;# 
  5425     031C                     	;# 
  5426     031C                     	;# 
  5427     031D                     	;# 
  5428     031E                     	;# 
  5429     038C                     	;# 
  5430     038C                     	;# 
  5431     038D                     	;# 
  5432     038E                     	;# 
  5433     058C                     	;# 
  5434     058C                     	;# 
  5435     058D                     	;# 
  5436     058E                     	;# 
  5437     058F                     	;# 
  5438     058F                     	;# 
  5439     0590                     	;# 
  5440     0591                     	;# 
  5441     0592                     	;# 
  5442     0593                     	;# 
  5443     059C                     	;# 
  5444     059C                     	;# 
  5445     059D                     	;# 
  5446     059D                     	;# 
  5447     059E                     	;# 
  5448     059F                     	;# 
  5449     060C                     	;# 
  5450     060D                     	;# 
  5451     060E                     	;# 
  5452     060F                     	;# 
  5453     0610                     	;# 
  5454     0611                     	;# 
  5455     0612                     	;# 
  5456     0613                     	;# 
  5457     0614                     	;# 
  5458     070C                     	;# 
  5459     070D                     	;# 
  5460     070E                     	;# 
  5461     070F                     	;# 
  5462     0710                     	;# 
  5463     0711                     	;# 
  5464     0712                     	;# 
  5465     0713                     	;# 
  5466     0716                     	;# 
  5467     0717                     	;# 
  5468     0718                     	;# 
  5469     0719                     	;# 
  5470     071A                     	;# 
  5471     071B                     	;# 
  5472     071C                     	;# 
  5473     071D                     	;# 
  5474     0796                     	;# 
  5475     0797                     	;# 
  5476     0798                     	;# 
  5477     0799                     	;# 
  5478     079A                     	;# 
  5479     079B                     	;# 
  5480     080C                     	;# 
  5481     080D                     	;# 
  5482     080E                     	;# 
  5483     080F                     	;# 
  5484     0810                     	;# 
  5485     0811                     	;# 
  5486     0812                     	;# 
  5487     0813                     	;# 
  5488     0814                     	;# 
  5489     081A                     	;# 
  5490     081A                     	;# 
  5491     081B                     	;# 
  5492     081C                     	;# 
  5493     081C                     	;# 
  5494     081D                     	;# 
  5495     081E                     	;# 
  5496     081F                     	;# 
  5497     088C                     	;# 
  5498     088D                     	;# 
  5499     088E                     	;# 
  5500     088F                     	;# 
  5501     0890                     	;# 
  5502     0891                     	;# 
  5503     0892                     	;# 
  5504     0893                     	;# 
  5505     0895                     	;# 
  5506     0896                     	;# 
  5507     090C                     	;# 
  5508     090E                     	;# 
  5509     090F                     	;# 
  5510     091F                     	;# 
  5511     098F                     	;# 
  5512     098F                     	;# 
  5513     0990                     	;# 
  5514     0991                     	;# 
  5515     0992                     	;# 
  5516     0993                     	;# 
  5517     0994                     	;# 
  5518     0995                     	;# 
  5519     0996                     	;# 
  5520     0997                     	;# 
  5521     0A19                     	;# 
  5522     0A19                     	;# 
  5523     0A1A                     	;# 
  5524     0A1A                     	;# 
  5525     0A1B                     	;# 
  5526     0A1B                     	;# 
  5527     0A1B                     	;# 
  5528     0A1C                     	;# 
  5529     0A1C                     	;# 
  5530     0A1D                     	;# 
  5531     0A1D                     	;# 
  5532     0A1E                     	;# 
  5533     0A1E                     	;# 
  5534     0A1F                     	;# 
  5535     0A1F                     	;# 
  5536     0A1F                     	;# 
  5537     1E0F                     	;# 
  5538     1E10                     	;# 
  5539     1E11                     	;# 
  5540     1E12                     	;# 
  5541     1E13                     	;# 
  5542     1E14                     	;# 
  5543     1E15                     	;# 
  5544     1E16                     	;# 
  5545     1E17                     	;# 
  5546     1E18                     	;# 
  5547     1E19                     	;# 
  5548     1E1A                     	;# 
  5549     1E1B                     	;# 
  5550     1E1C                     	;# 
  5551     1E1D                     	;# 
  5552     1E1E                     	;# 
  5553     1E1F                     	;# 
  5554     1E20                     	;# 
  5555     1E21                     	;# 
  5556     1E22                     	;# 
  5557     1E23                     	;# 
  5558     1E24                     	;# 
  5559     1E25                     	;# 
  5560     1E26                     	;# 
  5561     1E27                     	;# 
  5562     1E28                     	;# 
  5563     1E29                     	;# 
  5564     1E2A                     	;# 
  5565     1E2B                     	;# 
  5566     1E2C                     	;# 
  5567     1E2D                     	;# 
  5568     1E2E                     	;# 
  5569     1E2F                     	;# 
  5570     1E30                     	;# 
  5571     1E31                     	;# 
  5572     1E32                     	;# 
  5573     1E33                     	;# 
  5574     1E34                     	;# 
  5575     1E35                     	;# 
  5576     1E36                     	;# 
  5577     1E37                     	;# 
  5578     1E8F                     	;# 
  5579     1E90                     	;# 
  5580     1E91                     	;# 
  5581     1E92                     	;# 
  5582     1E93                     	;# 
  5583     1E9C                     	;# 
  5584     1EA1                     	;# 
  5585     1EA2                     	;# 
  5586     1EB1                     	;# 
  5587     1EBB                     	;# 
  5588     1EBC                     	;# 
  5589     1EBD                     	;# 
  5590     1EBE                     	;# 
  5591     1EC3                     	;# 
  5592     1EC5                     	;# 
  5593     1EC6                     	;# 
  5594     1EC7                     	;# 
  5595     1ECB                     	;# 
  5596     1ECC                     	;# 
  5597     1ECD                     	;# 
  5598     1ECE                     	;# 
  5599     1F10                     	;# 
  5600     1F11                     	;# 
  5601     1F12                     	;# 
  5602     1F13                     	;# 
  5603     1F14                     	;# 
  5604     1F15                     	;# 
  5605     1F1C                     	;# 
  5606     1F1D                     	;# 
  5607     1F1E                     	;# 
  5608     1F1F                     	;# 
  5609     1F20                     	;# 
  5610     1F21                     	;# 
  5611     1F22                     	;# 
  5612     1F23                     	;# 
  5613     1F24                     	;# 
  5614     1F25                     	;# 
  5615     1F26                     	;# 
  5616     1F27                     	;# 
  5617     1F38                     	;# 
  5618     1F39                     	;# 
  5619     1F3A                     	;# 
  5620     1F3B                     	;# 
  5621     1F3C                     	;# 
  5622     1F3D                     	;# 
  5623     1F3E                     	;# 
  5624     1F3F                     	;# 
  5625     1F43                     	;# 
  5626     1F44                     	;# 
  5627     1F45                     	;# 
  5628     1F46                     	;# 
  5629     1F47                     	;# 
  5630     1F48                     	;# 
  5631     1F49                     	;# 
  5632     1F4A                     	;# 
  5633     1F4E                     	;# 
  5634     1F4F                     	;# 
  5635     1F50                     	;# 
  5636     1F51                     	;# 
  5637     1F52                     	;# 
  5638     1F53                     	;# 
  5639     1F54                     	;# 
  5640     1F55                     	;# 
  5641     1FE4                     	;# 
  5642     1FE5                     	;# 
  5643     1FE6                     	;# 
  5644     1FE7                     	;# 
  5645     1FE8                     	;# 
  5646     1FE8                     	;# 
  5647     1FE9                     	;# 
  5648     1FEA                     	;# 
  5649     1FEA                     	;# 
  5650     1FEB                     	;# 
  5651     1FED                     	;# 
  5652     1FEE                     	;# 
  5653     1FEF                     	;# 
  5654     0000                     	;# 
  5655     0001                     	;# 
  5656     0002                     	;# 
  5657     0003                     	;# 
  5658     0004                     	;# 
  5659     0005                     	;# 
  5660     0006                     	;# 
  5661     0007                     	;# 
  5662     0008                     	;# 
  5663     0009                     	;# 
  5664     000A                     	;# 
  5665     000B                     	;# 
  5666     000C                     	;# 
  5667     000D                     	;# 
  5668     000E                     	;# 
  5669     0012                     	;# 
  5670     0013                     	;# 
  5671     0014                     	;# 
  5672     0018                     	;# 
  5673     0019                     	;# 
  5674     001A                     	;# 
  5675     009B                     	;# 
  5676     009B                     	;# 
  5677     009C                     	;# 
  5678     009D                     	;# 
  5679     009E                     	;# 
  5680     009F                     	;# 
  5681     0119                     	;# 
  5682     0119                     	;# 
  5683     0119                     	;# 
  5684     011A                     	;# 
  5685     011A                     	;# 
  5686     011A                     	;# 
  5687     011B                     	;# 
  5688     011B                     	;# 
  5689     011B                     	;# 
  5690     011B                     	;# 
  5691     011B                     	;# 
  5692     011C                     	;# 
  5693     011C                     	;# 
  5694     011C                     	;# 
  5695     011D                     	;# 
  5696     011D                     	;# 
  5697     011D                     	;# 
  5698     011E                     	;# 
  5699     011E                     	;# 
  5700     011E                     	;# 
  5701     011F                     	;# 
  5702     011F                     	;# 
  5703     011F                     	;# 
  5704     011F                     	;# 
  5705     011F                     	;# 
  5706     018C                     	;# 
  5707     018D                     	;# 
  5708     018E                     	;# 
  5709     018F                     	;# 
  5710     0190                     	;# 
  5711     0191                     	;# 
  5712     0192                     	;# 
  5713     020C                     	;# 
  5714     020C                     	;# 
  5715     020D                     	;# 
  5716     020E                     	;# 
  5717     020F                     	;# 
  5718     020F                     	;# 
  5719     0210                     	;# 
  5720     0210                     	;# 
  5721     0211                     	;# 
  5722     0211                     	;# 
  5723     028C                     	;# 
  5724     028C                     	;# 
  5725     028D                     	;# 
  5726     028D                     	;# 
  5727     028E                     	;# 
  5728     028F                     	;# 
  5729     0290                     	;# 
  5730     0291                     	;# 
  5731     030C                     	;# 
  5732     030C                     	;# 
  5733     030D                     	;# 
  5734     030E                     	;# 
  5735     030F                     	;# 
  5736     0310                     	;# 
  5737     0310                     	;# 
  5738     0311                     	;# 
  5739     0312                     	;# 
  5740     0313                     	;# 
  5741     0314                     	;# 
  5742     0314                     	;# 
  5743     0315                     	;# 
  5744     0316                     	;# 
  5745     0318                     	;# 
  5746     0318                     	;# 
  5747     0319                     	;# 
  5748     031A                     	;# 
  5749     031C                     	;# 
  5750     031C                     	;# 
  5751     031D                     	;# 
  5752     031E                     	;# 
  5753     038C                     	;# 
  5754     038C                     	;# 
  5755     038D                     	;# 
  5756     038E                     	;# 
  5757     058C                     	;# 
  5758     058C                     	;# 
  5759     058D                     	;# 
  5760     058E                     	;# 
  5761     058F                     	;# 
  5762     058F                     	;# 
  5763     0590                     	;# 
  5764     0591                     	;# 
  5765     0592                     	;# 
  5766     0593                     	;# 
  5767     059C                     	;# 
  5768     059C                     	;# 
  5769     059D                     	;# 
  5770     059D                     	;# 
  5771     059E                     	;# 
  5772     059F                     	;# 
  5773     060C                     	;# 
  5774     060D                     	;# 
  5775     060E                     	;# 
  5776     060F                     	;# 
  5777     0610                     	;# 
  5778     0611                     	;# 
  5779     0612                     	;# 
  5780     0613                     	;# 
  5781     0614                     	;# 
  5782     070C                     	;# 
  5783     070D                     	;# 
  5784     070E                     	;# 
  5785     070F                     	;# 
  5786     0710                     	;# 
  5787     0711                     	;# 
  5788     0712                     	;# 
  5789     0713                     	;# 
  5790     0716                     	;# 
  5791     0717                     	;# 
  5792     0718                     	;# 
  5793     0719                     	;# 
  5794     071A                     	;# 
  5795     071B                     	;# 
  5796     071C                     	;# 
  5797     071D                     	;# 
  5798     0796                     	;# 
  5799     0797                     	;# 
  5800     0798                     	;# 
  5801     0799                     	;# 
  5802     079A                     	;# 
  5803     079B                     	;# 
  5804     080C                     	;# 
  5805     080D                     	;# 
  5806     080E                     	;# 
  5807     080F                     	;# 
  5808     0810                     	;# 
  5809     0811                     	;# 
  5810     0812                     	;# 
  5811     0813                     	;# 
  5812     0814                     	;# 
  5813     081A                     	;# 
  5814     081A                     	;# 
  5815     081B                     	;# 
  5816     081C                     	;# 
  5817     081C                     	;# 
  5818     081D                     	;# 
  5819     081E                     	;# 
  5820     081F                     	;# 
  5821     088C                     	;# 
  5822     088D                     	;# 
  5823     088E                     	;# 
  5824     088F                     	;# 
  5825     0890                     	;# 
  5826     0891                     	;# 
  5827     0892                     	;# 
  5828     0893                     	;# 
  5829     0895                     	;# 
  5830     0896                     	;# 
  5831     090C                     	;# 
  5832     090E                     	;# 
  5833     090F                     	;# 
  5834     091F                     	;# 
  5835     098F                     	;# 
  5836     098F                     	;# 
  5837     0990                     	;# 
  5838     0991                     	;# 
  5839     0992                     	;# 
  5840     0993                     	;# 
  5841     0994                     	;# 
  5842     0995                     	;# 
  5843     0996                     	;# 
  5844     0997                     	;# 
  5845     0A19                     	;# 
  5846     0A19                     	;# 
  5847     0A1A                     	;# 
  5848     0A1A                     	;# 
  5849     0A1B                     	;# 
  5850     0A1B                     	;# 
  5851     0A1B                     	;# 
  5852     0A1C                     	;# 
  5853     0A1C                     	;# 
  5854     0A1D                     	;# 
  5855     0A1D                     	;# 
  5856     0A1E                     	;# 
  5857     0A1E                     	;# 
  5858     0A1F                     	;# 
  5859     0A1F                     	;# 
  5860     0A1F                     	;# 
  5861     1E0F                     	;# 
  5862     1E10                     	;# 
  5863     1E11                     	;# 
  5864     1E12                     	;# 
  5865     1E13                     	;# 
  5866     1E14                     	;# 
  5867     1E15                     	;# 
  5868     1E16                     	;# 
  5869     1E17                     	;# 
  5870     1E18                     	;# 
  5871     1E19                     	;# 
  5872     1E1A                     	;# 
  5873     1E1B                     	;# 
  5874     1E1C                     	;# 
  5875     1E1D                     	;# 
  5876     1E1E                     	;# 
  5877     1E1F                     	;# 
  5878     1E20                     	;# 
  5879     1E21                     	;# 
  5880     1E22                     	;# 
  5881     1E23                     	;# 
  5882     1E24                     	;# 
  5883     1E25                     	;# 
  5884     1E26                     	;# 
  5885     1E27                     	;# 
  5886     1E28                     	;# 
  5887     1E29                     	;# 
  5888     1E2A                     	;# 
  5889     1E2B                     	;# 
  5890     1E2C                     	;# 
  5891     1E2D                     	;# 
  5892     1E2E                     	;# 
  5893     1E2F                     	;# 
  5894     1E30                     	;# 
  5895     1E31                     	;# 
  5896     1E32                     	;# 
  5897     1E33                     	;# 
  5898     1E34                     	;# 
  5899     1E35                     	;# 
  5900     1E36                     	;# 
  5901     1E37                     	;# 
  5902     1E8F                     	;# 
  5903     1E90                     	;# 
  5904     1E91                     	;# 
  5905     1E92                     	;# 
  5906     1E93                     	;# 
  5907     1E9C                     	;# 
  5908     1EA1                     	;# 
  5909     1EA2                     	;# 
  5910     1EB1                     	;# 
  5911     1EBB                     	;# 
  5912     1EBC                     	;# 
  5913     1EBD                     	;# 
  5914     1EBE                     	;# 
  5915     1EC3                     	;# 
  5916     1EC5                     	;# 
  5917     1EC6                     	;# 
  5918     1EC7                     	;# 
  5919     1ECB                     	;# 
  5920     1ECC                     	;# 
  5921     1ECD                     	;# 
  5922     1ECE                     	;# 
  5923     1F10                     	;# 
  5924     1F11                     	;# 
  5925     1F12                     	;# 
  5926     1F13                     	;# 
  5927     1F14                     	;# 
  5928     1F15                     	;# 
  5929     1F1C                     	;# 
  5930     1F1D                     	;# 
  5931     1F1E                     	;# 
  5932     1F1F                     	;# 
  5933     1F20                     	;# 
  5934     1F21                     	;# 
  5935     1F22                     	;# 
  5936     1F23                     	;# 
  5937     1F24                     	;# 
  5938     1F25                     	;# 
  5939     1F26                     	;# 
  5940     1F27                     	;# 
  5941     1F38                     	;# 
  5942     1F39                     	;# 
  5943     1F3A                     	;# 
  5944     1F3B                     	;# 
  5945     1F3C                     	;# 
  5946     1F3D                     	;# 
  5947     1F3E                     	;# 
  5948     1F3F                     	;# 
  5949     1F43                     	;# 
  5950     1F44                     	;# 
  5951     1F45                     	;# 
  5952     1F46                     	;# 
  5953     1F47                     	;# 
  5954     1F48                     	;# 
  5955     1F49                     	;# 
  5956     1F4A                     	;# 
  5957     1F4E                     	;# 
  5958     1F4F                     	;# 
  5959     1F50                     	;# 
  5960     1F51                     	;# 
  5961     1F52                     	;# 
  5962     1F53                     	;# 
  5963     1F54                     	;# 
  5964     1F55                     	;# 
  5965     1FE4                     	;# 
  5966     1FE5                     	;# 
  5967     1FE6                     	;# 
  5968     1FE7                     	;# 
  5969     1FE8                     	;# 
  5970     1FE8                     	;# 
  5971     1FE9                     	;# 
  5972     1FEA                     	;# 
  5973     1FEA                     	;# 
  5974     1FEB                     	;# 
  5975     1FED                     	;# 
  5976     1FEE                     	;# 
  5977     1FEF                     	;# 
  5978     0000                     	;# 
  5979     0001                     	;# 
  5980     0002                     	;# 
  5981     0003                     	;# 
  5982     0004                     	;# 
  5983     0005                     	;# 
  5984     0006                     	;# 
  5985     0007                     	;# 
  5986     0008                     	;# 
  5987     0009                     	;# 
  5988     000A                     	;# 
  5989     000B                     	;# 
  5990     000C                     	;# 
  5991     000D                     	;# 
  5992     000E                     	;# 
  5993     0012                     	;# 
  5994     0013                     	;# 
  5995     0014                     	;# 
  5996     0018                     	;# 
  5997     0019                     	;# 
  5998     001A                     	;# 
  5999     009B                     	;# 
  6000     009B                     	;# 
  6001     009C                     	;# 
  6002     009D                     	;# 
  6003     009E                     	;# 
  6004     009F                     	;# 
  6005     0119                     	;# 
  6006     0119                     	;# 
  6007     0119                     	;# 
  6008     011A                     	;# 
  6009     011A                     	;# 
  6010     011A                     	;# 
  6011     011B                     	;# 
  6012     011B                     	;# 
  6013     011B                     	;# 
  6014     011B                     	;# 
  6015     011B                     	;# 
  6016     011C                     	;# 
  6017     011C                     	;# 
  6018     011C                     	;# 
  6019     011D                     	;# 
  6020     011D                     	;# 
  6021     011D                     	;# 
  6022     011E                     	;# 
  6023     011E                     	;# 
  6024     011E                     	;# 
  6025     011F                     	;# 
  6026     011F                     	;# 
  6027     011F                     	;# 
  6028     011F                     	;# 
  6029     011F                     	;# 
  6030     018C                     	;# 
  6031     018D                     	;# 
  6032     018E                     	;# 
  6033     018F                     	;# 
  6034     0190                     	;# 
  6035     0191                     	;# 
  6036     0192                     	;# 
  6037     020C                     	;# 
  6038     020C                     	;# 
  6039     020D                     	;# 
  6040     020E                     	;# 
  6041     020F                     	;# 
  6042     020F                     	;# 
  6043     0210                     	;# 
  6044     0210                     	;# 
  6045     0211                     	;# 
  6046     0211                     	;# 
  6047     028C                     	;# 
  6048     028C                     	;# 
  6049     028D                     	;# 
  6050     028D                     	;# 
  6051     028E                     	;# 
  6052     028F                     	;# 
  6053     0290                     	;# 
  6054     0291                     	;# 
  6055     030C                     	;# 
  6056     030C                     	;# 
  6057     030D                     	;# 
  6058     030E                     	;# 
  6059     030F                     	;# 
  6060     0310                     	;# 
  6061     0310                     	;# 
  6062     0311                     	;# 
  6063     0312                     	;# 
  6064     0313                     	;# 
  6065     0314                     	;# 
  6066     0314                     	;# 
  6067     0315                     	;# 
  6068     0316                     	;# 
  6069     0318                     	;# 
  6070     0318                     	;# 
  6071     0319                     	;# 
  6072     031A                     	;# 
  6073     031C                     	;# 
  6074     031C                     	;# 
  6075     031D                     	;# 
  6076     031E                     	;# 
  6077     038C                     	;# 
  6078     038C                     	;# 
  6079     038D                     	;# 
  6080     038E                     	;# 
  6081     058C                     	;# 
  6082     058C                     	;# 
  6083     058D                     	;# 
  6084     058E                     	;# 
  6085     058F                     	;# 
  6086     058F                     	;# 
  6087     0590                     	;# 
  6088     0591                     	;# 
  6089     0592                     	;# 
  6090     0593                     	;# 
  6091     059C                     	;# 
  6092     059C                     	;# 
  6093     059D                     	;# 
  6094     059D                     	;# 
  6095     059E                     	;# 
  6096     059F                     	;# 
  6097     060C                     	;# 
  6098     060D                     	;# 
  6099     060E                     	;# 
  6100     060F                     	;# 
  6101     0610                     	;# 
  6102     0611                     	;# 
  6103     0612                     	;# 
  6104     0613                     	;# 
  6105     0614                     	;# 
  6106     070C                     	;# 
  6107     070D                     	;# 
  6108     070E                     	;# 
  6109     070F                     	;# 
  6110     0710                     	;# 
  6111     0711                     	;# 
  6112     0712                     	;# 
  6113     0713                     	;# 
  6114     0716                     	;# 
  6115     0717                     	;# 
  6116     0718                     	;# 
  6117     0719                     	;# 
  6118     071A                     	;# 
  6119     071B                     	;# 
  6120     071C                     	;# 
  6121     071D                     	;# 
  6122     0796                     	;# 
  6123     0797                     	;# 
  6124     0798                     	;# 
  6125     0799                     	;# 
  6126     079A                     	;# 
  6127     079B                     	;# 
  6128     080C                     	;# 
  6129     080D                     	;# 
  6130     080E                     	;# 
  6131     080F                     	;# 
  6132     0810                     	;# 
  6133     0811                     	;# 
  6134     0812                     	;# 
  6135     0813                     	;# 
  6136     0814                     	;# 
  6137     081A                     	;# 
  6138     081A                     	;# 
  6139     081B                     	;# 
  6140     081C                     	;# 
  6141     081C                     	;# 
  6142     081D                     	;# 
  6143     081E                     	;# 
  6144     081F                     	;# 
  6145     088C                     	;# 
  6146     088D                     	;# 
  6147     088E                     	;# 
  6148     088F                     	;# 
  6149     0890                     	;# 
  6150     0891                     	;# 
  6151     0892                     	;# 
  6152     0893                     	;# 
  6153     0895                     	;# 
  6154     0896                     	;# 
  6155     090C                     	;# 
  6156     090E                     	;# 
  6157     090F                     	;# 
  6158     091F                     	;# 
  6159     098F                     	;# 
  6160     098F                     	;# 
  6161     0990                     	;# 
  6162     0991                     	;# 
  6163     0992                     	;# 
  6164     0993                     	;# 
  6165     0994                     	;# 
  6166     0995                     	;# 
  6167     0996                     	;# 
  6168     0997                     	;# 
  6169     0A19                     	;# 
  6170     0A19                     	;# 
  6171     0A1A                     	;# 
  6172     0A1A                     	;# 
  6173     0A1B                     	;# 
  6174     0A1B                     	;# 
  6175     0A1B                     	;# 
  6176     0A1C                     	;# 
  6177     0A1C                     	;# 
  6178     0A1D                     	;# 
  6179     0A1D                     	;# 
  6180     0A1E                     	;# 
  6181     0A1E                     	;# 
  6182     0A1F                     	;# 
  6183     0A1F                     	;# 
  6184     0A1F                     	;# 
  6185     1E0F                     	;# 
  6186     1E10                     	;# 
  6187     1E11                     	;# 
  6188     1E12                     	;# 
  6189     1E13                     	;# 
  6190     1E14                     	;# 
  6191     1E15                     	;# 
  6192     1E16                     	;# 
  6193     1E17                     	;# 
  6194     1E18                     	;# 
  6195     1E19                     	;# 
  6196     1E1A                     	;# 
  6197     1E1B                     	;# 
  6198     1E1C                     	;# 
  6199     1E1D                     	;# 
  6200     1E1E                     	;# 
  6201     1E1F                     	;# 
  6202     1E20                     	;# 
  6203     1E21                     	;# 
  6204     1E22                     	;# 
  6205     1E23                     	;# 
  6206     1E24                     	;# 
  6207     1E25                     	;# 
  6208     1E26                     	;# 
  6209     1E27                     	;# 
  6210     1E28                     	;# 
  6211     1E29                     	;# 
  6212     1E2A                     	;# 
  6213     1E2B                     	;# 
  6214     1E2C                     	;# 
  6215     1E2D                     	;# 
  6216     1E2E                     	;# 
  6217     1E2F                     	;# 
  6218     1E30                     	;# 
  6219     1E31                     	;# 
  6220     1E32                     	;# 
  6221     1E33                     	;# 
  6222     1E34                     	;# 
  6223     1E35                     	;# 
  6224     1E36                     	;# 
  6225     1E37                     	;# 
  6226     1E8F                     	;# 
  6227     1E90                     	;# 
  6228     1E91                     	;# 
  6229     1E92                     	;# 
  6230     1E93                     	;# 
  6231     1E9C                     	;# 
  6232     1EA1                     	;# 
  6233     1EA2                     	;# 
  6234     1EB1                     	;# 
  6235     1EBB                     	;# 
  6236     1EBC                     	;# 
  6237     1EBD                     	;# 
  6238     1EBE                     	;# 
  6239     1EC3                     	;# 
  6240     1EC5                     	;# 
  6241     1EC6                     	;# 
  6242     1EC7                     	;# 
  6243     1ECB                     	;# 
  6244     1ECC                     	;# 
  6245     1ECD                     	;# 
  6246     1ECE                     	;# 
  6247     1F10                     	;# 
  6248     1F11                     	;# 
  6249     1F12                     	;# 
  6250     1F13                     	;# 
  6251     1F14                     	;# 
  6252     1F15                     	;# 
  6253     1F1C                     	;# 
  6254     1F1D                     	;# 
  6255     1F1E                     	;# 
  6256     1F1F                     	;# 
  6257     1F20                     	;# 
  6258     1F21                     	;# 
  6259     1F22                     	;# 
  6260     1F23                     	;# 
  6261     1F24                     	;# 
  6262     1F25                     	;# 
  6263     1F26                     	;# 
  6264     1F27                     	;# 
  6265     1F38                     	;# 
  6266     1F39                     	;# 
  6267     1F3A                     	;# 
  6268     1F3B                     	;# 
  6269     1F3C                     	;# 
  6270     1F3D                     	;# 
  6271     1F3E                     	;# 
  6272     1F3F                     	;# 
  6273     1F43                     	;# 
  6274     1F44                     	;# 
  6275     1F45                     	;# 
  6276     1F46                     	;# 
  6277     1F47                     	;# 
  6278     1F48                     	;# 
  6279     1F49                     	;# 
  6280     1F4A                     	;# 
  6281     1F4E                     	;# 
  6282     1F4F                     	;# 
  6283     1F50                     	;# 
  6284     1F51                     	;# 
  6285     1F52                     	;# 
  6286     1F53                     	;# 
  6287     1F54                     	;# 
  6288     1F55                     	;# 
  6289     1FE4                     	;# 
  6290     1FE5                     	;# 
  6291     1FE6                     	;# 
  6292     1FE7                     	;# 
  6293     1FE8                     	;# 
  6294     1FE8                     	;# 
  6295     1FE9                     	;# 
  6296     1FEA                     	;# 
  6297     1FEA                     	;# 
  6298     1FEB                     	;# 
  6299     1FED                     	;# 
  6300     1FEE                     	;# 
  6301     1FEF                     	;# 
  6302                           
  6303                           	psect	idataBANK0
  6304     0920                     __pidataBANK0:
  6305                           
  6306                           ;initializer for _isense_max
  6307     0920  342C               	retlw	44
  6308     0921  3400               	retlw	0
  6309                           
  6310                           ;initializer for _current2counts_squared
  6311     0922  349E               	retlw	158
  6312     0923  3402               	retlw	2
  6313                           
  6314                           ;initializer for _LIN_timeout
  6315     0924  340A               	retlw	10
  6316                           
  6317                           ;initializer for _b1_coef
  6318     0925  3469               	retlw	105
  6319                           
  6320                           ;initializer for _dac_i_hw_trip
  6321     0926  3401               	retlw	1
  6322                           
  6323                           ;initializer for _tj_limit
  6324     0927  34AF               	retlw	175
  6325                           
  6326                           ;initializer for _Tambient
  6327     0928  3455               	retlw	85
  6328     0929  3400               	retlw	0
  6329                           
  6330                           	psect	idataBANK1
  6331     0904                     __pidataBANK1:
  6332                           
  6333                           ;initializer for _tcc_sample_time
  6334     0904  34E8               	retlw	232
  6335     0905  3403               	retlw	3
  6336                           
  6337                           ;initializer for _a1_coef
  6338     0906  342E               	retlw	46
  6339     0907  34FF               	retlw	255
  6340                           
  6341                           ;initializer for _factor_rdson_rthsa
  6342     0908  340A               	retlw	10
  6343     0909  3403               	retlw	3
  6344                           
  6345                           ;initializer for _factor_rdson_rthjs
  6346     090A  34A5               	retlw	165
  6347     090B  3401               	retlw	1
  6348                           
  6349                           	psect	stringtext1
  6350     024D                     __pstringtext1:
  6351     024D                     _temperatureLUT:
  6352     024D  3468               	retlw	104
  6353     024E  3400               	retlw	0
  6354     024F  346A               	retlw	106
  6355     0250  3400               	retlw	0
  6356     0251  346C               	retlw	108
  6357     0252  3400               	retlw	0
  6358     0253  346F               	retlw	111
  6359     0254  3400               	retlw	0
  6360     0255  3471               	retlw	113
  6361     0256  3400               	retlw	0
  6362     0257  3473               	retlw	115
  6363     0258  3400               	retlw	0
  6364     0259  3476               	retlw	118
  6365     025A  3400               	retlw	0
  6366     025B  3478               	retlw	120
  6367     025C  3400               	retlw	0
  6368     025D  347B               	retlw	123
  6369     025E  3400               	retlw	0
  6370     025F  347D               	retlw	125
  6371     0260  3400               	retlw	0
  6372     0261  3480               	retlw	128
  6373     0262  3400               	retlw	0
  6374     0263  3483               	retlw	131
  6375     0264  3400               	retlw	0
  6376     0265  3485               	retlw	133
  6377     0266  3400               	retlw	0
  6378     0267  3488               	retlw	136
  6379     0268  3400               	retlw	0
  6380     0269  348B               	retlw	139
  6381     026A  3400               	retlw	0
  6382     026B  348E               	retlw	142
  6383     026C  3400               	retlw	0
  6384     026D  3491               	retlw	145
  6385     026E  3400               	retlw	0
  6386     026F  3494               	retlw	148
  6387     0270  3400               	retlw	0
  6388     0271  3497               	retlw	151
  6389     0272  3400               	retlw	0
  6390     0273  349B               	retlw	155
  6391     0274  3400               	retlw	0
  6392     0275  349E               	retlw	158
  6393     0276  3400               	retlw	0
  6394     0277  34A1               	retlw	161
  6395     0278  3400               	retlw	0
  6396     0279  34A5               	retlw	165
  6397     027A  3400               	retlw	0
  6398     027B  34A8               	retlw	168
  6399     027C  3400               	retlw	0
  6400     027D  34AC               	retlw	172
  6401     027E  3400               	retlw	0
  6402     027F  34B0               	retlw	176
  6403     0280  3400               	retlw	0
  6404     0281  34B3               	retlw	179
  6405     0282  3400               	retlw	0
  6406     0283  34B7               	retlw	183
  6407     0284  3400               	retlw	0
  6408     0285  34BB               	retlw	187
  6409     0286  3400               	retlw	0
  6410     0287  34BF               	retlw	191
  6411     0288  3400               	retlw	0
  6412     0289  34C3               	retlw	195
  6413     028A  3400               	retlw	0
  6414     028B  34C8               	retlw	200
  6415     028C  3400               	retlw	0
  6416     028D  34CC               	retlw	204
  6417     028E  3400               	retlw	0
  6418     028F  34D0               	retlw	208
  6419     0290  3400               	retlw	0
  6420     0291  34D5               	retlw	213
  6421     0292  3400               	retlw	0
  6422     0293  34D9               	retlw	217
  6423     0294  3400               	retlw	0
  6424     0295  34DE               	retlw	222
  6425     0296  3400               	retlw	0
  6426     0297  34E3               	retlw	227
  6427     0298  3400               	retlw	0
  6428     0299  34E8               	retlw	232
  6429     029A  3400               	retlw	0
  6430     029B  34EC               	retlw	236
  6431     029C  3400               	retlw	0
  6432     029D  34F1               	retlw	241
  6433     029E  3400               	retlw	0
  6434     029F  34F7               	retlw	247
  6435     02A0  3400               	retlw	0
  6436     02A1  34FC               	retlw	252
  6437     02A2  3400               	retlw	0
  6438     02A3  3401               	retlw	1
  6439     02A4  3401               	retlw	1
  6440     02A5  3407               	retlw	7
  6441     02A6  3401               	retlw	1
  6442     02A7  340C               	retlw	12
  6443     02A8  3401               	retlw	1
  6444     02A9  3412               	retlw	18
  6445     02AA  3401               	retlw	1
  6446     02AB  3417               	retlw	23
  6447     02AC  3401               	retlw	1
  6448     02AD  341D               	retlw	29
  6449     02AE  3401               	retlw	1
  6450     02AF  3423               	retlw	35
  6451     02B0  3401               	retlw	1
  6452     02B1  3429               	retlw	41
  6453     02B2  3401               	retlw	1
  6454     02B3  342F               	retlw	47
  6455     02B4  3401               	retlw	1
  6456     02B5  3436               	retlw	54
  6457     02B6  3401               	retlw	1
  6458     02B7  343C               	retlw	60
  6459     02B8  3401               	retlw	1
  6460     02B9  3442               	retlw	66
  6461     02BA  3401               	retlw	1
  6462     02BB  3449               	retlw	73
  6463     02BC  3401               	retlw	1
  6464     02BD  3450               	retlw	80
  6465     02BE  3401               	retlw	1
  6466     02BF  3456               	retlw	86
  6467     02C0  3401               	retlw	1
  6468     02C1  345D               	retlw	93
  6469     02C2  3401               	retlw	1
  6470     02C3  3464               	retlw	100
  6471     02C4  3401               	retlw	1
  6472     02C5  346B               	retlw	107
  6473     02C6  3401               	retlw	1
  6474     02C7  3472               	retlw	114
  6475     02C8  3401               	retlw	1
  6476     02C9  3479               	retlw	121
  6477     02CA  3401               	retlw	1
  6478     02CB  3481               	retlw	129
  6479     02CC  3401               	retlw	1
  6480     02CD  3488               	retlw	136
  6481     02CE  3401               	retlw	1
  6482     02CF  3490               	retlw	144
  6483     02D0  3401               	retlw	1
  6484     02D1  3497               	retlw	151
  6485     02D2  3401               	retlw	1
  6486     02D3  349F               	retlw	159
  6487     02D4  3401               	retlw	1
  6488     02D5  34A7               	retlw	167
  6489     02D6  3401               	retlw	1
  6490     02D7  34AF               	retlw	175
  6491     02D8  3401               	retlw	1
  6492     02D9  34B7               	retlw	183
  6493     02DA  3401               	retlw	1
  6494     02DB  34BF               	retlw	191
  6495     02DC  3401               	retlw	1
  6496     02DD  34C7               	retlw	199
  6497     02DE  3401               	retlw	1
  6498     02DF  34D0               	retlw	208
  6499     02E0  3401               	retlw	1
  6500     02E1  34D8               	retlw	216
  6501     02E2  3401               	retlw	1
  6502     02E3  34E0               	retlw	224
  6503     02E4  3401               	retlw	1
  6504     02E5  34E9               	retlw	233
  6505     02E6  3401               	retlw	1
  6506     02E7  34F1               	retlw	241
  6507     02E8  3401               	retlw	1
  6508     02E9  34FA               	retlw	250
  6509     02EA  3401               	retlw	1
  6510     02EB  3402               	retlw	2
  6511     02EC  3402               	retlw	2
  6512     02ED  340B               	retlw	11
  6513     02EE  3402               	retlw	2
  6514     02EF  3414               	retlw	20
  6515     02F0  3402               	retlw	2
  6516     02F1  341C               	retlw	28
  6517     02F2  3402               	retlw	2
  6518     02F3  3425               	retlw	37
  6519     02F4  3402               	retlw	2
  6520     02F5  342E               	retlw	46
  6521     02F6  3402               	retlw	2
  6522     02F7  3437               	retlw	55
  6523     02F8  3402               	retlw	2
  6524     02F9  343F               	retlw	63
  6525     02FA  3402               	retlw	2
  6526     02FB  3448               	retlw	72
  6527     02FC  3402               	retlw	2
  6528     02FD  3451               	retlw	81
  6529     02FE  3402               	retlw	2
  6530     02FF  3459               	retlw	89
  6531     0300  3402               	retlw	2
  6532     0301  3462               	retlw	98
  6533     0302  3402               	retlw	2
  6534     0303  346B               	retlw	107
  6535     0304  3402               	retlw	2
  6536     0305  3474               	retlw	116
  6537     0306  3402               	retlw	2
  6538     0307  347C               	retlw	124
  6539     0308  3402               	retlw	2
  6540     0309  3485               	retlw	133
  6541     030A  3402               	retlw	2
  6542     030B  348E               	retlw	142
  6543     030C  3402               	retlw	2
  6544     030D  3496               	retlw	150
  6545     030E  3402               	retlw	2
  6546     030F  349F               	retlw	159
  6547     0310  3402               	retlw	2
  6548     0311  34A7               	retlw	167
  6549     0312  3402               	retlw	2
  6550     0313  34B0               	retlw	176
  6551     0314  3402               	retlw	2
  6552     0315  34B8               	retlw	184
  6553     0316  3402               	retlw	2
  6554     0317  34C0               	retlw	192
  6555     0318  3402               	retlw	2
  6556     0319  34C8               	retlw	200
  6557     031A  3402               	retlw	2
  6558     031B  34D1               	retlw	209
  6559     031C  3402               	retlw	2
  6560     031D  34D9               	retlw	217
  6561     031E  3402               	retlw	2
  6562     031F  34E0               	retlw	224
  6563     0320  3402               	retlw	2
  6564     0321  34E8               	retlw	232
  6565     0322  3402               	retlw	2
  6566     0323  34F0               	retlw	240
  6567     0324  3402               	retlw	2
  6568     0325  34F8               	retlw	248
  6569     0326  3402               	retlw	2
  6570     0327  34FF               	retlw	255
  6571     0328  3402               	retlw	2
  6572     0329  3407               	retlw	7
  6573     032A  3403               	retlw	3
  6574     032B  340E               	retlw	14
  6575     032C  3403               	retlw	3
  6576     032D  3415               	retlw	21
  6577     032E  3403               	retlw	3
  6578     032F  341D               	retlw	29
  6579     0330  3403               	retlw	3
  6580     0331  3424               	retlw	36
  6581     0332  3403               	retlw	3
  6582     0333  342A               	retlw	42
  6583     0334  3403               	retlw	3
  6584     0335  3431               	retlw	49
  6585     0336  3403               	retlw	3
  6586     0337  3438               	retlw	56
  6587     0338  3403               	retlw	3
  6588     0339  343E               	retlw	62
  6589     033A  3403               	retlw	3
  6590     033B  3445               	retlw	69
  6591     033C  3403               	retlw	3
  6592     033D  344B               	retlw	75
  6593     033E  3403               	retlw	3
  6594     033F  3451               	retlw	81
  6595     0340  3403               	retlw	3
  6596     0341  3457               	retlw	87
  6597     0342  3403               	retlw	3
  6598     0343  345D               	retlw	93
  6599     0344  3403               	retlw	3
  6600     0345  3463               	retlw	99
  6601     0346  3403               	retlw	3
  6602     0347  3468               	retlw	104
  6603     0348  3403               	retlw	3
  6604     0349  346E               	retlw	110
  6605     034A  3403               	retlw	3
  6606     034B  3473               	retlw	115
  6607     034C  3403               	retlw	3
  6608     034D  3478               	retlw	120
  6609     034E  3403               	retlw	3
  6610     034F  347D               	retlw	125
  6611     0350  3403               	retlw	3
  6612     0351  3482               	retlw	130
  6613     0352  3403               	retlw	3
  6614     0353  3487               	retlw	135
  6615     0354  3403               	retlw	3
  6616     0355  348C               	retlw	140
  6617     0356  3403               	retlw	3
  6618     0357  3490               	retlw	144
  6619     0358  3403               	retlw	3
  6620     0359  3495               	retlw	149
  6621     035A  3403               	retlw	3
  6622     035B  3499               	retlw	153
  6623     035C  3403               	retlw	3
  6624     035D  349D               	retlw	157
  6625     035E  3403               	retlw	3
  6626     035F  34A1               	retlw	161
  6627     0360  3403               	retlw	3
  6628     0361  34A5               	retlw	165
  6629     0362  3403               	retlw	3
  6630     0363  34A9               	retlw	169
  6631     0364  3403               	retlw	3
  6632     0365  34AD               	retlw	173
  6633     0366  3403               	retlw	3
  6634     0367  34B0               	retlw	176
  6635     0368  3403               	retlw	3
  6636     0369  34B4               	retlw	180
  6637     036A  3403               	retlw	3
  6638     036B  34B7               	retlw	183
  6639     036C  3403               	retlw	3
  6640     036D  34BA               	retlw	186
  6641     036E  3403               	retlw	3
  6642     036F  34BD               	retlw	189
  6643     0370  3403               	retlw	3
  6644     0371  34C0               	retlw	192
  6645     0372  3403               	retlw	3
  6646     0373  34C3               	retlw	195
  6647     0374  3403               	retlw	3
  6648     0375  34C6               	retlw	198
  6649     0376  3403               	retlw	3
  6650     0377  34C8               	retlw	200
  6651     0378  3403               	retlw	3
  6652     0379  34CB               	retlw	203
  6653     037A  3403               	retlw	3
  6654     037B  34CD               	retlw	205
  6655     037C  3403               	retlw	3
  6656     037D  34D0               	retlw	208
  6657     037E  3403               	retlw	3
  6658     037F  34D2               	retlw	210
  6659     0380  3403               	retlw	3
  6660     0381  34D4               	retlw	212
  6661     0382  3403               	retlw	3
  6662     0383  34D6               	retlw	214
  6663     0384  3403               	retlw	3
  6664     0385  34D8               	retlw	216
  6665     0386  3403               	retlw	3
  6666     0387  34DA               	retlw	218
  6667     0388  3403               	retlw	3
  6668     0389  34DC               	retlw	220
  6669     038A  3403               	retlw	3
  6670     038B  34DE               	retlw	222
  6671     038C  3403               	retlw	3
  6672     038D  34E0               	retlw	224
  6673     038E  3403               	retlw	3
  6674     038F  34E1               	retlw	225
  6675     0390  3403               	retlw	3
  6676     0391  34E3               	retlw	227
  6677     0392  3403               	retlw	3
  6678     0393  34E4               	retlw	228
  6679     0394  3403               	retlw	3
  6680     0395  34E6               	retlw	230
  6681     0396  3403               	retlw	3
  6682     0397  34E7               	retlw	231
  6683     0398  3403               	retlw	3
  6684     0399                     __end_of_temperatureLUT:
  6685                           
  6686                           	psect	stringtext2
  6687     0643                     __pstringtext2:
  6688     0643                     _scheduleTable:
  6689     0643  3400               	retlw	0
  6690     0644  3401               	retlw	1
  6691     0645  3401               	retlw	1
  6692     0646  344D               	retlw	low (_LIN_COMMAND_Data| 0)
  6693     0647  3400               	retlw	high (_LIN_COMMAND_Data| 0)
  6694     0648  3401               	retlw	1
  6695     0649  3401               	retlw	1
  6696     064A  3401               	retlw	1
  6697     064B  344C               	retlw	low (_LIN_TRIGGER_TYPE_Data| 0)
  6698     064C  3400               	retlw	high (_LIN_TRIGGER_TYPE_Data| 0)
  6699     064D  3402               	retlw	2
  6700     064E  3401               	retlw	1
  6701     064F  3401               	retlw	1
  6702     0650  344B               	retlw	low (_LIN_ENTER_SLEEP_MODE_Data| 0)
  6703     0651  3400               	retlw	high (_LIN_ENTER_SLEEP_MODE_Data| 0)
  6704     0652  3410               	retlw	16
  6705     0653  3401               	retlw	1
  6706     0654  3401               	retlw	1
  6707     0655  344A               	retlw	low (_LIN_TJ_LIMIT_Data| 0)
  6708     0656  3400               	retlw	high (_LIN_TJ_LIMIT_Data| 0)
  6709     0657  3411               	retlw	17
  6710     0658  3401               	retlw	1
  6711     0659  3402               	retlw	2
  6712     065A  34E1               	retlw	low (_LIN_FACTOR_RDSON_RTHJS_Data| 0)
  6713     065B  3400               	retlw	high (_LIN_FACTOR_RDSON_RTHJS_Data| 0)
  6714     065C  3412               	retlw	18
  6715     065D  3401               	retlw	1
  6716     065E  3402               	retlw	2
  6717     065F  34DF               	retlw	low (_LIN_FACTOR_RDSON_RTHSA_Data| 0)
  6718     0660  3400               	retlw	high (_LIN_FACTOR_RDSON_RTHSA_Data| 0)
  6719     0661  3413               	retlw	19
  6720     0662  3401               	retlw	1
  6721     0663  3402               	retlw	2
  6722     0664  34DD               	retlw	low (_LIN_CURRENT2COUNTS_SQUARED_Data| 0)
  6723     0665  3400               	retlw	high (_LIN_CURRENT2COUNTS_SQUARED_Data| 0)
  6724     0666  3414               	retlw	20
  6725     0667  3401               	retlw	1
  6726     0668  3402               	retlw	2
  6727     0669  34DB               	retlw	low (_LIN_ISENSE_MAX_Data| 0)
  6728     066A  3400               	retlw	high (_LIN_ISENSE_MAX_Data| 0)
  6729     066B  3415               	retlw	21
  6730     066C  3401               	retlw	1
  6731     066D  3401               	retlw	1
  6732     066E  3449               	retlw	low (_LIN_DAC_I_HW_TRIP_Data| 0)
  6733     066F  3400               	retlw	high (_LIN_DAC_I_HW_TRIP_Data| 0)
  6734     0670  3416               	retlw	22
  6735     0671  3401               	retlw	1
  6736     0672  3401               	retlw	1
  6737     0673  3448               	retlw	low (_LIN_B1_COEF_Data| 0)
  6738     0674  3400               	retlw	high (_LIN_B1_COEF_Data| 0)
  6739     0675  3417               	retlw	23
  6740     0676  3401               	retlw	1
  6741     0677  3401               	retlw	1
  6742     0678  3447               	retlw	low (_LIN_REDUCED_DRIVE_TIME_Data| 0)
  6743     0679  3400               	retlw	high (_LIN_REDUCED_DRIVE_TIME_Data| 0)
  6744     067A  3418               	retlw	24
  6745     067B  3401               	retlw	1
  6746     067C  3402               	retlw	2
  6747     067D  34D9               	retlw	low (_LIN_TCC_SAMPLE_TIME_Data| 0)
  6748     067E  3400               	retlw	high (_LIN_TCC_SAMPLE_TIME_Data| 0)
  6749     067F  3420               	retlw	32
  6750     0680  3400               	retlw	0
  6751     0681  3401               	retlw	1
  6752     0682  3446               	retlw	low (_LIN_OUTPUT_STATE_Data| 0)
  6753     0683  3400               	retlw	high (_LIN_OUTPUT_STATE_Data| 0)
  6754     0684  3421               	retlw	33
  6755     0685  3400               	retlw	0
  6756     0686  3401               	retlw	1
  6757     0687  3445               	retlw	low (_LIN_GET_TRIGGER_TYPE_Data| 0)
  6758     0688  3400               	retlw	high (_LIN_GET_TRIGGER_TYPE_Data| 0)
  6759     0689  3422               	retlw	34
  6760     068A  3400               	retlw	0
  6761     068B  3401               	retlw	1
  6762     068C  3444               	retlw	low (_LIN_OVER_CURRENT_FAULT_Data| 0)
  6763     068D  3400               	retlw	high (_LIN_OVER_CURRENT_FAULT_Data| 0)
  6764     068E  3423               	retlw	35
  6765     068F  3400               	retlw	0
  6766     0690  3401               	retlw	1
  6767     0691  3443               	retlw	low (_LIN_UVLO_FAULT_Data| 0)
  6768     0692  3400               	retlw	high (_LIN_UVLO_FAULT_Data| 0)
  6769     0693  3424               	retlw	36
  6770     0694  3400               	retlw	0
  6771     0695  3401               	retlw	1
  6772     0696  3442               	retlw	low (_LIN_OVER_TEMP_FAULT_Data| 0)
  6773     0697  3400               	retlw	high (_LIN_OVER_TEMP_FAULT_Data| 0)
  6774     0698  3425               	retlw	37
  6775     0699  3400               	retlw	0
  6776     069A  3402               	retlw	2
  6777     069B  34D7               	retlw	low (_LIN_ADC_VCC_SENSE_Data| 0)
  6778     069C  3400               	retlw	high (_LIN_ADC_VCC_SENSE_Data| 0)
  6779     069D  3426               	retlw	38
  6780     069E  3400               	retlw	0
  6781     069F  3402               	retlw	2
  6782     06A0  34D5               	retlw	low (_LIN_ADC_CURRENT_SENSE_UNCORRECTED_Data| 0)
  6783     06A1  3400               	retlw	high (_LIN_ADC_CURRENT_SENSE_UNCORRECTED_Data| 0)
  6784     06A2  3427               	retlw	39
  6785     06A3  3400               	retlw	0
  6786     06A4  3402               	retlw	2
  6787     06A5  34D3               	retlw	low (_LIN_ADC_TEMP_SENSE_Data| 0)
  6788     06A6  3400               	retlw	high (_LIN_ADC_TEMP_SENSE_Data| 0)
  6789     06A7  3428               	retlw	40
  6790     06A8  3400               	retlw	0
  6791     06A9  3402               	retlw	2
  6792     06AA  34D1               	retlw	low (_LIN_ADC_CURRENT_SENSE_CORRECTED_Data| 0)
  6793     06AB  3400               	retlw	high (_LIN_ADC_CURRENT_SENSE_CORRECTED_Data| 0)
  6794     06AC  3429               	retlw	41
  6795     06AD  3400               	retlw	0
  6796     06AE  3402               	retlw	2
  6797     06AF  34CF               	retlw	low (_LIN_CURRENT_SENSE_OFFSET_Data| 0)
  6798     06B0  3400               	retlw	high (_LIN_CURRENT_SENSE_OFFSET_Data| 0)
  6799     06B1  342A               	retlw	42
  6800     06B2  3400               	retlw	0
  6801     06B3  3402               	retlw	2
  6802     06B4  34CD               	retlw	low (_LIN_AMBIENT_TEMPERATURE_Data| 0)
  6803     06B5  3400               	retlw	high (_LIN_AMBIENT_TEMPERATURE_Data| 0)
  6804     06B6  342B               	retlw	43
  6805     06B7  3400               	retlw	0
  6806     06B8  3402               	retlw	2
  6807     06B9  34CB               	retlw	low (_LIN_HEATSINK_TEMPERATURE_Data| 0)
  6808     06BA  3400               	retlw	high (_LIN_HEATSINK_TEMPERATURE_Data| 0)
  6809     06BB  342C               	retlw	44
  6810     06BC  3400               	retlw	0
  6811     06BD  3402               	retlw	2
  6812     06BE  34C9               	retlw	low (_LIN_JUNCTION_TEMPERATURE_Data| 0)
  6813     06BF  3400               	retlw	high (_LIN_JUNCTION_TEMPERATURE_Data| 0)
  6814     06C0  342D               	retlw	45
  6815     06C1  3400               	retlw	0
  6816     06C2  3402               	retlw	2
  6817     06C3  34C7               	retlw	low (_LIN_TEMPERATURE_RISE_JS_Data| 0)
  6818     06C4  3400               	retlw	high (_LIN_TEMPERATURE_RISE_JS_Data| 0)
  6819     06C5  342E               	retlw	46
  6820     06C6  3400               	retlw	0
  6821     06C7  3402               	retlw	2
  6822     06C8  34C5               	retlw	low (_LIN_TEMPERATURE_RISE_SA_Data| 0)
  6823     06C9  3400               	retlw	high (_LIN_TEMPERATURE_RISE_SA_Data| 0)
  6824     06CA  342F               	retlw	47
  6825     06CB  3400               	retlw	0
  6826     06CC  3408               	retlw	8
  6827     06CD  345A               	retlw	low (_LIN_DIAGNOSTIC_Data| (0+256))
  6828     06CE  3401               	retlw	high (_LIN_DIAGNOSTIC_Data| (0+256))
  6829     06CF                     __end_of_scheduleTable:
  6830                           
  6831                           	psect	nvBANK0
  6832     006F                     __pnvBANK0:
  6833     006F                     _LIN_rxCommandLength:
  6834     006F                     	ds	1
  6835                           
  6836                           	psect	nvBANK1
  6837     00EB                     __pnvBANK1:
  6838     00EB                     _TMR0_InterruptHandler:
  6839     00EB                     	ds	2
  6840     00ED                     _LIN_rxCommand:
  6841     00ED                     	ds	2
  6842                           
  6843                           	psect	nvBANK2
  6844     0162                     __pnvBANK2:
  6845     0162                     _EUSART1_ErrorHandler:
  6846     0162                     	ds	2
  6847     0164                     _EUSART1_OverrunErrorHandler:
  6848     0164                     	ds	2
  6849     0166                     _EUSART1_FramingErrorHandler:
  6850     0166                     	ds	2
  6851     0168                     _EUSART1_RxDefaultInterruptHandler:
  6852     0168                     	ds	2
  6853     016A                     _EUSART1_TxDefaultInterruptHandler:
  6854     016A                     	ds	2
  6855     016C                     _LIN_processData:
  6856     016C                     	ds	2
  6857     0014                     _TRISCbits	set	20
  6858     0014                     _TRISC	set	20
  6859     0013                     _TRISB	set	19
  6860     0012                     _TRISA	set	18
  6861     001A                     _LATC	set	26
  6862     0019                     _LATB	set	25
  6863     0018                     _LATA	set	24
  6864     000B                     _INTCONbits	set	11
  6865     0019                     _LATBbits	set	25
  6866     009D                     _ADCON0bits	set	157
  6867     009D                     _ADCON0	set	157
  6868     009C                     _ADRESH	set	156
  6869     009B                     _ADRESL	set	155
  6870     009E                     _ADCON1	set	158
  6871     0119                     _RC1REG	set	281
  6872     011A                     _TX1REG	set	282
  6873     011C                     _SP1BRGH	set	284
  6874     011B                     _SP1BRGL	set	283
  6875     011E                     _TX1STA	set	286
  6876     011D                     _RC1STA	set	285
  6877     011F                     _BAUD1CON	set	287
  6878     011D                     _RC1STAbits	set	285
  6879     011E                     _TX1STAbits	set	286
  6880     020E                     _T1CONbits	set	526
  6881     020E                     _T1CON	set	526
  6882     020C                     _TMR1L	set	524
  6883     020D                     _TMR1H	set	525
  6884     0211                     _T1CLK	set	529
  6885     0210                     _T1GATE	set	528
  6886     020F                     _T1GCON	set	527
  6887     028E                     _T2CONbits	set	654
  6888     028E                     _T2CON	set	654
  6889     028C                     _T2TMR	set	652
  6890     028D                     _T2PR	set	653
  6891     0291                     _T2RST	set	657
  6892     028F                     _T2HLT	set	655
  6893     0290                     _T2CLKCON	set	656
  6894     059E                     _T0CON0	set	1438
  6895     059C                     _TMR0L	set	1436
  6896     059D                     _TMR0H	set	1437
  6897     059F                     _T0CON1	set	1439
  6898     070E                     _PIR2bits	set	1806
  6899     070F                     _PIR3bits	set	1807
  6900     0710                     _PIR4bits	set	1808
  6901     0716                     _PIE0bits	set	1814
  6902     070C                     _PIR0bits	set	1804
  6903     071B                     _PIE5bits	set	1819
  6904     0711                     _PIR5bits	set	1809
  6905     0719                     _PIE3bits	set	1817
  6906     079B                     _PMD5	set	1947
  6907     079A                     _PMD4	set	1946
  6908     0799                     _PMD3	set	1945
  6909     0798                     _PMD2	set	1944
  6910     0797                     _PMD1	set	1943
  6911     0796                     _PMD0	set	1942
  6912     0892                     _OSCTUNE	set	2194
  6913     0890                     _OSCSTAT	set	2192
  6914     0893                     _OSCFRQ	set	2195
  6915     0891                     _OSCEN	set	2193
  6916     088F                     _OSCCON3	set	2191
  6917     088D                     _OSCCON1	set	2189
  6918     090F                     _DAC1CON1bits	set	2319
  6919     090C                     _FVRCON	set	2316
  6920     090F                     _DAC1CON1	set	2319
  6921     090E                     _DAC1CON0	set	2318
  6922     0994                     _CM2CON0bits	set	2452
  6923     0997                     _CM2PCH	set	2455
  6924     0996                     _CM2NCH	set	2454
  6925     0995                     _CM2CON1	set	2453
  6926     0994                     _CM2CON0	set	2452
  6927     1E1B                     _CLC2POLbits	set	7707
  6928     1E19                     _CLC1GLS3bits	set	7705
  6929     1E11                     _CLC1POLbits	set	7697
  6930     1E0F                     _CLCDATAbits	set	7695
  6931     1E17                     _CLC1GLS1bits	set	7703
  6932     1E10                     _CLC1CONbits	set	7696
  6933     1E10                     _CLC1CON	set	7696
  6934     1E19                     _CLC1GLS3	set	7705
  6935     1E18                     _CLC1GLS2	set	7704
  6936     1E17                     _CLC1GLS1	set	7703
  6937     1E16                     _CLC1GLS0	set	7702
  6938     1E15                     _CLC1SEL3	set	7701
  6939     1E14                     _CLC1SEL2	set	7700
  6940     1E13                     _CLC1SEL1	set	7699
  6941     1E12                     _CLC1SEL0	set	7698
  6942     1E11                     _CLC1POL	set	7697
  6943     1E24                     _CLC3CONbits	set	7716
  6944     1E24                     _CLC3CON	set	7716
  6945     1E2D                     _CLC3GLS3	set	7725
  6946     1E2C                     _CLC3GLS2	set	7724
  6947     1E2B                     _CLC3GLS1	set	7723
  6948     1E2A                     _CLC3GLS0	set	7722
  6949     1E29                     _CLC3SEL3	set	7721
  6950     1E28                     _CLC3SEL2	set	7720
  6951     1E27                     _CLC3SEL1	set	7719
  6952     1E26                     _CLC3SEL0	set	7718
  6953     1E25                     _CLC3POL	set	7717
  6954     1E1A                     _CLC2CON	set	7706
  6955     1E23                     _CLC2GLS3	set	7715
  6956     1E22                     _CLC2GLS2	set	7714
  6957     1E21                     _CLC2GLS1	set	7713
  6958     1E20                     _CLC2GLS0	set	7712
  6959     1E1F                     _CLC2SEL3	set	7711
  6960     1E1E                     _CLC2SEL2	set	7710
  6961     1E1D                     _CLC2SEL1	set	7709
  6962     1E1C                     _CLC2SEL0	set	7708
  6963     1E1B                     _CLC2POL	set	7707
  6964     1E2E                     _CLC4CON	set	7726
  6965     1E37                     _CLC4GLS3	set	7735
  6966     1E36                     _CLC4GLS2	set	7734
  6967     1E35                     _CLC4GLS1	set	7733
  6968     1E34                     _CLC4GLS0	set	7732
  6969     1E33                     _CLC4SEL3	set	7731
  6970     1E32                     _CLC4SEL2	set	7730
  6971     1E31                     _CLC4SEL1	set	7729
  6972     1E30                     _CLC4SEL0	set	7728
  6973     1E2F                     _CLC4POL	set	7727
  6974     1ECB                     _RX1DTPPS	set	7883
  6975     1EBB                     _CLCIN0PPS	set	7867
  6976     1F27                     _RC7PPS	set	7975
  6977     1F26                     _RC6PPS	set	7974
  6978     1F1F                     _RB7PPS	set	7967
  6979     1F52                     _INLVLC	set	8018
  6980     1F47                     _INLVLB	set	8007
  6981     1F3C                     _INLVLA	set	7996
  6982     1F51                     _SLRCONC	set	8017
  6983     1F46                     _SLRCONB	set	8006
  6984     1F3B                     _SLRCONA	set	7995
  6985     1F50                     _ODCONC	set	8016
  6986     1F45                     _ODCONB	set	8005
  6987     1F3A                     _ODCONA	set	7994
  6988     1F4F                     _WPUC	set	8015
  6989     1F39                     _WPUA	set	7993
  6990     1F44                     _WPUB	set	8004
  6991     1F38                     _ANSELA	set	7992
  6992     1F43                     _ANSELB	set	8003
  6993     1F4E                     _ANSELC	set	8014
  6994                           
  6995                           	psect	cinit
  6996     002E                     start_initialization:	
  6997                           ; #config settings
  6998                           
  6999     002E                     __initialization:
  7000                           
  7001                           ; Initialize objects allocated to BANK0
  7002     002E  3020               	movlw	low __pidataBANK0
  7003     002F  0084               	movwf	4
  7004     0030  3089               	movlw	(high __pidataBANK0)| (0+128)
  7005     0031  0085               	movwf	5
  7006     0032  3065               	movlw	low __pdataBANK0
  7007     0033  0086               	movwf	6
  7008     0034  3000               	movlw	high __pdataBANK0
  7009     0035  0087               	movwf	7
  7010     0036  300A               	movlw	10
  7011     0037  3188  20A6  3180   	fcall	init_ram
  7012                           
  7013                           ; Initialize objects allocated to BANK1
  7014     003A  3004               	movlw	low __pidataBANK1
  7015     003B  0084               	movwf	4
  7016     003C  3089               	movlw	(high __pidataBANK1)| (0+128)
  7017     003D  0085               	movwf	5
  7018     003E  30E3               	movlw	low __pdataBANK1
  7019     003F  0086               	movwf	6
  7020     0040  3000               	movlw	high __pdataBANK1
  7021     0041  0087               	movwf	7
  7022     0042  3008               	movlw	8
  7023     0043  3188  20A6  3180   	fcall	init_ram
  7024                           
  7025                           ; Clear objects allocated to COMMON
  7026     0046  01F0               	clrf	__pbssCOMMON& (0+127)
  7027     0047  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  7028     0048  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  7029     0049  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  7030     004A  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  7031     004B  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  7032                           
  7033                           ; Clear objects allocated to BANK0
  7034     004C  3020               	movlw	low __pbssBANK0
  7035     004D  0084               	movwf	4
  7036     004E  3000               	movlw	high __pbssBANK0
  7037     004F  0085               	movwf	5
  7038     0050  302E               	movlw	46
  7039     0051  3188  20A0  3180   	fcall	clear_ram0
  7040                           
  7041                           ; Clear objects allocated to BANK1
  7042     0054  30A0               	movlw	low __pbssBANK1
  7043     0055  0084               	movwf	4
  7044     0056  3000               	movlw	high __pbssBANK1
  7045     0057  0085               	movwf	5
  7046     0058  3043               	movlw	67
  7047     0059  3188  20A0  3180   	fcall	clear_ram0
  7048                           
  7049                           ; Clear objects allocated to BANK2
  7050     005C  3042               	movlw	low __pbssBANK2
  7051     005D  0084               	movwf	4
  7052     005E  3001               	movlw	high __pbssBANK2
  7053     005F  0085               	movwf	5
  7054     0060  3020               	movlw	32
  7055     0061  3188  20A0         	fcall	clear_ram0
  7056     0063                     end_of_initialization:	
  7057                           ;End of C runtime variable initialization code
  7058                           
  7059     0063                     __end_of__initialization:
  7060     0063  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  7061     0064  0140               	movlb	0
  7062     0065  3187  2FD2         	ljmp	_main	;jump to C main() function
  7063                           
  7064                           	psect	bssCOMMON
  7065     0070                     __pbssCOMMON:
  7066     0070                     _timer0ReloadVal16bit:
  7067     0070                     	ds	2
  7068     0072                     _eusart1RxTail:
  7069     0072                     	ds	1
  7070     0073                     _eusart1RxHead:
  7071     0073                     	ds	1
  7072     0074                     _adcTSense_curr:
  7073     0074                     	ds	2
  7074                           
  7075                           	psect	bssBANK0
  7076     0020                     __pbssBANK0:
  7077     0020                     _adcTSense_prev:
  7078     0020                     	ds	2
  7079     0022                     _eusart1RxLastError:
  7080     0022                     	ds	1
  7081     0023                     _eusart1RxCount:
  7082     0023                     	ds	1
  7083     0024                     _eusart1TxBufferRemaining:
  7084     0024                     	ds	1
  7085     0025                     _eusart1TxTail:
  7086     0025                     	ds	1
  7087     0026                     _eusart1TxHead:
  7088     0026                     	ds	1
  7089     0027                     LIN_handler@rxDataIndex:
  7090     0027                     	ds	1
  7091     0028                     LIN_handler@LIN_rxState:
  7092     0028                     	ds	1
  7093     0029                     _CountCallBack:
  7094     0029                     	ds	1
  7095     002A                     _LIN_timerRunning:
  7096     002A                     	ds	1
  7097     002B                     _LIN_rxInProgress:
  7098     002B                     	ds	1
  7099     002C                     _overTempFault:
  7100     002C                     	ds	1
  7101     002D                     _uvloFault:
  7102     002D                     	ds	1
  7103     002E                     _overCurrentFault:
  7104     002E                     	ds	1
  7105     002F                     _outputState:
  7106     002F                     	ds	1
  7107     0030                     _reduced_drive_time:
  7108     0030                     	ds	1
  7109     0031                     _triggerType:
  7110     0031                     	ds	1
  7111     0032                     _Trise_sa:
  7112     0032                     	ds	2
  7113     0034                     _Trise_js:
  7114     0034                     	ds	2
  7115     0036                     _Tjunction:
  7116     0036                     	ds	2
  7117     0038                     _Tsink:
  7118     0038                     	ds	2
  7119     003A                     _iSenseOffset:
  7120     003A                     	ds	2
  7121     003C                     _adcISense_corr:
  7122     003C                     	ds	2
  7123     003E                     _adcISense_curr:
  7124     003E                     	ds	2
  7125     0040                     _adcVccSense_curr:
  7126     0040                     	ds	2
  7127     0042                     _LIN_OVER_TEMP_FAULT_Data:
  7128     0042                     	ds	1
  7129     0043                     _LIN_UVLO_FAULT_Data:
  7130     0043                     	ds	1
  7131     0044                     _LIN_OVER_CURRENT_FAULT_Data:
  7132     0044                     	ds	1
  7133     0045                     _LIN_GET_TRIGGER_TYPE_Data:
  7134     0045                     	ds	1
  7135     0046                     _LIN_OUTPUT_STATE_Data:
  7136     0046                     	ds	1
  7137     0047                     _LIN_REDUCED_DRIVE_TIME_Data:
  7138     0047                     	ds	1
  7139     0048                     _LIN_B1_COEF_Data:
  7140     0048                     	ds	1
  7141     0049                     _LIN_DAC_I_HW_TRIP_Data:
  7142     0049                     	ds	1
  7143     004A                     _LIN_TJ_LIMIT_Data:
  7144     004A                     	ds	1
  7145     004B                     _LIN_ENTER_SLEEP_MODE_Data:
  7146     004B                     	ds	1
  7147     004C                     _LIN_TRIGGER_TYPE_Data:
  7148     004C                     	ds	1
  7149     004D                     _LIN_COMMAND_Data:
  7150     004D                     	ds	1
  7151                           
  7152                           	psect	dataBANK0
  7153     0065                     __pdataBANK0:
  7154     0065                     _isense_max:
  7155     0065                     	ds	2
  7156     0067                     _current2counts_squared:
  7157     0067                     	ds	2
  7158     0069                     _LIN_timeout:
  7159     0069                     	ds	1
  7160     006A                     _b1_coef:
  7161     006A                     	ds	1
  7162     006B                     _dac_i_hw_trip:
  7163     006B                     	ds	1
  7164     006C                     _tj_limit:
  7165     006C                     	ds	1
  7166     006D                     _Tambient:
  7167     006D                     	ds	2
  7168                           
  7169                           	psect	bssBANK1
  7170     00A0                     __pbssBANK1:
  7171     00A0                     _Trise_raw_prev:
  7172     00A0                     	ds	4
  7173     00A4                     _Trise_raw_curr:
  7174     00A4                     	ds	4
  7175     00A8                     _Trise_filtered:
  7176     00A8                     	ds	4
  7177     00AC                     _adcISense_prev:
  7178     00AC                     	ds	2
  7179     00AE                     _adcISense_OneMOSFET:
  7180     00AE                     	ds	2
  7181     00B0                     _adcVccSense_prev:
  7182     00B0                     	ds	2
  7183     00B2                     _ADC_InterruptHandler:
  7184     00B2                     	ds	2
  7185     00B4                     _timer1ReloadVal:
  7186     00B4                     	ds	2
  7187     00B6                     _ticks_1ms:
  7188     00B6                     	ds	2
  7189     00B8                     _LIN_packet:
  7190     00B8                     	ds	13
  7191     00C5                     _LIN_TEMPERATURE_RISE_SA_Data:
  7192     00C5                     	ds	2
  7193     00C7                     _LIN_TEMPERATURE_RISE_JS_Data:
  7194     00C7                     	ds	2
  7195     00C9                     _LIN_JUNCTION_TEMPERATURE_Data:
  7196     00C9                     	ds	2
  7197     00CB                     _LIN_HEATSINK_TEMPERATURE_Data:
  7198     00CB                     	ds	2
  7199     00CD                     _LIN_AMBIENT_TEMPERATURE_Data:
  7200     00CD                     	ds	2
  7201     00CF                     _LIN_CURRENT_SENSE_OFFSET_Data:
  7202     00CF                     	ds	2
  7203     00D1                     _LIN_ADC_CURRENT_SENSE_CORRECTED_Data:
  7204     00D1                     	ds	2
  7205     00D3                     _LIN_ADC_TEMP_SENSE_Data:
  7206     00D3                     	ds	2
  7207     00D5                     _LIN_ADC_CURRENT_SENSE_UNCORRECTED_Data:
  7208     00D5                     	ds	2
  7209     00D7                     _LIN_ADC_VCC_SENSE_Data:
  7210     00D7                     	ds	2
  7211     00D9                     _LIN_TCC_SAMPLE_TIME_Data:
  7212     00D9                     	ds	2
  7213     00DB                     _LIN_ISENSE_MAX_Data:
  7214     00DB                     	ds	2
  7215     00DD                     _LIN_CURRENT2COUNTS_SQUARED_Data:
  7216     00DD                     	ds	2
  7217     00DF                     _LIN_FACTOR_RDSON_RTHSA_Data:
  7218     00DF                     	ds	2
  7219     00E1                     _LIN_FACTOR_RDSON_RTHJS_Data:
  7220     00E1                     	ds	2
  7221                           
  7222                           	psect	dataBANK1
  7223     00E3                     __pdataBANK1:
  7224     00E3                     _tcc_sample_time:
  7225     00E3                     	ds	2
  7226     00E5                     _a1_coef:
  7227     00E5                     	ds	2
  7228     00E7                     _factor_rdson_rthsa:
  7229     00E7                     	ds	2
  7230     00E9                     _factor_rdson_rthjs:
  7231     00E9                     	ds	2
  7232                           
  7233                           	psect	bssBANK2
  7234     0142                     __pbssBANK2:
  7235     0142                     _eusart1RxStatusBuffer:
  7236     0142                     	ds	8
  7237     014A                     _eusart1RxBuffer:
  7238     014A                     	ds	8
  7239     0152                     _eusart1TxBuffer:
  7240     0152                     	ds	8
  7241     015A                     _LIN_DIAGNOSTIC_Data:
  7242     015A                     	ds	8
  7243                           
  7244                           	psect	inittext
  7245     08A6                     init_ram:
  7246     08A6  00FE               	movwf	126
  7247     08A7                     initloop:
  7248     08A7  0012               	moviw fsr0++
  7249     08A8  001E               	movwi fsr1++
  7250     08A9  0BFE               	decfsz	126,f
  7251     08AA  28A7               	goto	initloop
  7252     08AB  3400               	retlw	0
  7253                           
  7254                           	psect	clrtext
  7255     08A0                     clear_ram0:	
  7256                           ;	Called with FSR0 containing the base address, and
  7257                           ;	WREG with the size to clear
  7258                           
  7259     08A0  0064               	clrwdt	;clear the watchdog before getting into this loop
  7260     08A1                     clrloop0:
  7261     08A1  0180               	clrf	0	;clear RAM location pointed to by FSR
  7262     08A2  3101               	addfsr 0,1
  7263     08A3  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  7264     08A4  28A1               	goto	clrloop0	;have we reached the end yet?
  7265     08A5  3400               	retlw	0	;all done for this memory range, return
  7266                           
  7267                           	psect	cstackBANK2
  7268     0120                     __pcstackBANK2:
  7269     0120                     processLIN@cmd:
  7270     0120                     ___lldiv@quotient:	
  7271                           ; 1 bytes @ 0x0
  7272                           
  7273     0120                     ___omul@product:	
  7274                           ; 4 bytes @ 0x0
  7275                           
  7276                           
  7277                           ; 8 bytes @ 0x0
  7278     0120                     	ds	1
  7279     0121                     processLIN@tempRxData:
  7280                           
  7281                           ; 8 bytes @ 0x1
  7282     0121                     	ds	3
  7283     0124                     ___lldiv@counter:
  7284                           
  7285                           ; 1 bytes @ 0x4
  7286     0124                     	ds	4
  7287     0128                     ??_TCC_Curve:
  7288                           
  7289                           ; 1 bytes @ 0x8
  7290     0128                     	ds	12
  7291     0134                     _TCC_Curve$3309:
  7292                           
  7293                           ; 8 bytes @ 0x14
  7294     0134                     	ds	8
  7295     013C                     _TCC_Curve$3310:
  7296                           
  7297                           ; 4 bytes @ 0x1C
  7298     013C                     	ds	4
  7299     0140                     ??_main:
  7300                           
  7301                           ; 1 bytes @ 0x20
  7302     0140                     	ds	2
  7303                           
  7304                           	psect	cstackCOMMON
  7305     0076                     __pcstackCOMMON:
  7306     0076                     ?_processLIN:
  7307     0076                     ?_LIN_getPacket:	
  7308                           ; 1 bytes @ 0x0
  7309                           
  7310     0076                     ?_CmdOutput:	
  7311                           ; 1 bytes @ 0x0
  7312                           
  7313     0076                     ?_EFuseInit:	
  7314                           ; 1 bytes @ 0x0
  7315                           
  7316     0076                     ?_LIN_stopTimer:	
  7317                           ; 1 bytes @ 0x0
  7318                           
  7319     0076                     ?_LIN_enableRx:	
  7320                           ; 1 bytes @ 0x0
  7321                           
  7322     0076                     ?_LIN_setTimerHandler:	
  7323                           ; 1 bytes @ 0x0
  7324                           
  7325     0076                     ?_EUSART1_is_rx_ready:	
  7326                           ; 1 bytes @ 0x0
  7327                           
  7328     0076                     ?_LIN_startTimer:	
  7329                           ; 1 bytes @ 0x0
  7330                           
  7331     0076                     ?_LIN_breakCheck:	
  7332                           ; 1 bytes @ 0x0
  7333                           
  7334     0076                     ?_EUSART1_Read:	
  7335                           ; 1 bytes @ 0x0
  7336                           
  7337     0076                     ?_LIN_checkPID:	
  7338                           ; 1 bytes @ 0x0
  7339                           
  7340     0076                     ?_LIN_disableRx:	
  7341                           ; 1 bytes @ 0x0
  7342                           
  7343     0076                     ?_EUSART1_Write:	
  7344                           ; 1 bytes @ 0x0
  7345                           
  7346     0076                     ?_LIN_calcParity:	
  7347                           ; 1 bytes @ 0x0
  7348                           
  7349     0076                     ?_EUSART1_get_last_status:	
  7350                           ; 1 bytes @ 0x0
  7351                           
  7352     0076                     ?_PMD_Initialize:	
  7353                           ; 1 bytes @ 0x0
  7354                           
  7355     0076                     ?_PIN_MANAGER_Initialize:	
  7356                           ; 1 bytes @ 0x0
  7357                           
  7358     0076                     ?_OSCILLATOR_Initialize:	
  7359                           ; 1 bytes @ 0x0
  7360                           
  7361     0076                     ?_FVR_Initialize:	
  7362                           ; 1 bytes @ 0x0
  7363                           
  7364     0076                     ?_TMR2_Initialize:	
  7365                           ; 1 bytes @ 0x0
  7366                           
  7367     0076                     ?_TMR0_Initialize:	
  7368                           ; 1 bytes @ 0x0
  7369                           
  7370     0076                     ?_CLC1_Initialize:	
  7371                           ; 1 bytes @ 0x0
  7372                           
  7373     0076                     ?_ADC_Initialize:	
  7374                           ; 1 bytes @ 0x0
  7375                           
  7376     0076                     ?_CLC3_Initialize:	
  7377                           ; 1 bytes @ 0x0
  7378                           
  7379     0076                     ?_DAC1_Initialize:	
  7380                           ; 1 bytes @ 0x0
  7381                           
  7382     0076                     ?_TMR1_Initialize:	
  7383                           ; 1 bytes @ 0x0
  7384                           
  7385     0076                     ?_EUSART1_Initialize:	
  7386                           ; 1 bytes @ 0x0
  7387                           
  7388     0076                     ?_EUSART1_Receive_ISR:	
  7389                           ; 1 bytes @ 0x0
  7390                           
  7391     0076                     ?_EUSART1_Transmit_ISR:	
  7392                           ; 1 bytes @ 0x0
  7393                           
  7394     0076                     ??_EUSART1_Transmit_ISR:	
  7395                           ; 1 bytes @ 0x0
  7396                           
  7397     0076                     ?_EUSART1_DefaultFramingErrorHandler:	
  7398                           ; 1 bytes @ 0x0
  7399                           
  7400     0076                     ??_EUSART1_DefaultFramingErrorHandler:	
  7401                           ; 1 bytes @ 0x0
  7402                           
  7403     0076                     ?_EUSART1_DefaultOverrunErrorHandler:	
  7404                           ; 1 bytes @ 0x0
  7405                           
  7406     0076                     ??_EUSART1_DefaultOverrunErrorHandler:	
  7407                           ; 1 bytes @ 0x0
  7408                           
  7409     0076                     ?_EUSART1_DefaultErrorHandler:	
  7410                           ; 1 bytes @ 0x0
  7411                           
  7412     0076                     ?_EUSART1_RxDataHandler:	
  7413                           ; 1 bytes @ 0x0
  7414                           
  7415     0076                     ??_EUSART1_RxDataHandler:	
  7416                           ; 1 bytes @ 0x0
  7417                           
  7418     0076                     ?_TMR0_DefaultInterruptHandler:	
  7419                           ; 1 bytes @ 0x0
  7420                           
  7421     0076                     ??_TMR0_DefaultInterruptHandler:	
  7422                           ; 1 bytes @ 0x0
  7423                           
  7424     0076                     ?_ProcessAnalogInputs:	
  7425                           ; 1 bytes @ 0x0
  7426                           
  7427     0076                     ?_EFuse:	
  7428                           ; 1 bytes @ 0x0
  7429                           
  7430     0076                     ?_TCC_Curve:	
  7431                           ; 1 bytes @ 0x0
  7432                           
  7433     0076                     ?_LIN_Slave_Initialize:	
  7434                           ; 1 bytes @ 0x0
  7435                           
  7436     0076                     ?_Update_LIN_Data:	
  7437                           ; 1 bytes @ 0x0
  7438                           
  7439     0076                     ?_LIN_queuePacket:	
  7440                           ; 1 bytes @ 0x0
  7441                           
  7442     0076                     ?_LIN_handler:	
  7443                           ; 1 bytes @ 0x0
  7444                           
  7445     0076                     ?_LIN_timerHandler:	
  7446                           ; 1 bytes @ 0x0
  7447                           
  7448     0076                     ??_LIN_timerHandler:	
  7449                           ; 1 bytes @ 0x0
  7450                           
  7451     0076                     ?_CLC4_Initialize:	
  7452                           ; 1 bytes @ 0x0
  7453                           
  7454     0076                     ?_CMP2_Initialize:	
  7455                           ; 1 bytes @ 0x0
  7456                           
  7457     0076                     ?_CLC2_Initialize:	
  7458                           ; 1 bytes @ 0x0
  7459                           
  7460     0076                     ?_CLC2_ISR:	
  7461                           ; 1 bytes @ 0x0
  7462                           
  7463     0076                     ??_CLC2_ISR:	
  7464                           ; 1 bytes @ 0x0
  7465                           
  7466     0076                     ?_SYSTEM_Initialize:	
  7467                           ; 1 bytes @ 0x0
  7468                           
  7469     0076                     ?_TMR0_Reload:	
  7470                           ; 1 bytes @ 0x0
  7471                           
  7472     0076                     ?_TMR0_ISR:	
  7473                           ; 1 bytes @ 0x0
  7474                           
  7475     0076                     ?_TMR2_Start:	
  7476                           ; 1 bytes @ 0x0
  7477                           
  7478     0076                     ?_TMR2_Stop:	
  7479                           ; 1 bytes @ 0x0
  7480                           
  7481     0076                     ?_TMR1_StartTimer:	
  7482                           ; 1 bytes @ 0x0
  7483                           
  7484     0076                     ?_TMR1_StopTimer:	
  7485                           ; 1 bytes @ 0x0
  7486                           
  7487     0076                     ?_INTERRUPT_InterruptManager:	
  7488                           ; 1 bytes @ 0x0
  7489                           
  7490     0076                     ?_ADC_SelectChannel:	
  7491                           ; 1 bytes @ 0x0
  7492                           
  7493     0076                     ??_ADC_SelectChannel:	
  7494                           ; 1 bytes @ 0x0
  7495                           
  7496     0076                     ?_main:	
  7497                           ; 1 bytes @ 0x0
  7498                           
  7499     0076                     ?i1_LIN_stopTimer:	
  7500                           ; 1 bytes @ 0x0
  7501                           
  7502     0076                     ??i1_LIN_stopTimer:	
  7503                           ; 1 bytes @ 0x0
  7504                           
  7505     0076                     ?i1_TMR2_Initialize:	
  7506                           ; 1 bytes @ 0x0
  7507                           
  7508     0076                     ??i1_TMR2_Initialize:	
  7509                           ; 1 bytes @ 0x0
  7510                           
  7511     0076                     ?i1_TMR2_Start:	
  7512                           ; 1 bytes @ 0x0
  7513                           
  7514     0076                     ??i1_TMR2_Start:	
  7515                           ; 1 bytes @ 0x0
  7516                           
  7517     0076                     ?i1_TMR2_Stop:	
  7518                           ; 1 bytes @ 0x0
  7519                           
  7520     0076                     ??i1_TMR2_Stop:	
  7521                           ; 1 bytes @ 0x0
  7522                           
  7523     0076                     ?i1_TMR1_StartTimer:	
  7524                           ; 1 bytes @ 0x0
  7525                           
  7526     0076                     ??i1_TMR1_StartTimer:	
  7527                           ; 1 bytes @ 0x0
  7528                           
  7529     0076                     ?i1_TMR1_StopTimer:	
  7530                           ; 1 bytes @ 0x0
  7531                           
  7532     0076                     ??i1_TMR1_StopTimer:	
  7533                           ; 1 bytes @ 0x0
  7534                           
  7535     0076                     ?i1_TMR1_WriteTimer:	
  7536                           ; 1 bytes @ 0x0
  7537                           
  7538     0076                     ?i1_CmdOutput:	
  7539                           ; 1 bytes @ 0x0
  7540                           
  7541     0076                     ?_ADC_GetConversion:	
  7542                           ; 1 bytes @ 0x0
  7543                           
  7544     0076                     i1TMR1_WriteTimer@timerVal:	
  7545                           ; 2 bytes @ 0x0
  7546                           
  7547                           
  7548                           ; 2 bytes @ 0x0
  7549     0076                     	ds	1
  7550     0077                     ??_EUSART1_Receive_ISR:
  7551     0077                     ??_EUSART1_DefaultErrorHandler:	
  7552                           ; 1 bytes @ 0x1
  7553                           
  7554     0077                     ADC_SelectChannel@channel:	
  7555                           ; 1 bytes @ 0x1
  7556                           
  7557                           
  7558                           ; 1 bytes @ 0x1
  7559     0077                     	ds	1
  7560     0078                     ??_ADC_GetConversion:
  7561     0078                     ??i1_TMR1_WriteTimer:	
  7562                           ; 1 bytes @ 0x2
  7563                           
  7564     0078                     ??i1_CmdOutput:	
  7565                           ; 1 bytes @ 0x2
  7566                           
  7567                           
  7568                           ; 1 bytes @ 0x2
  7569     0078                     	ds	1
  7570     0079                     ADC_GetConversion@channel:
  7571                           
  7572                           ; 1 bytes @ 0x3
  7573     0079                     	ds	1
  7574     007A                     i1CmdOutput@enable:
  7575                           
  7576                           ; 1 bytes @ 0x4
  7577     007A                     	ds	1
  7578     007B                     ??_ProcessAnalogInputs:
  7579     007B                     ??_TMR0_ISR:	
  7580                           ; 1 bytes @ 0x5
  7581                           
  7582     007B                     ??_INTERRUPT_InterruptManager:	
  7583                           ; 1 bytes @ 0x5
  7584                           
  7585                           
  7586                           	psect	cstackBANK0
  7587     004E                     __pcstackBANK0:	
  7588                           ; 1 bytes @ 0x5
  7589                           
  7590     004E                     ??_LIN_stopTimer:
  7591     004E                     ??_LIN_enableRx:	
  7592                           ; 1 bytes @ 0x0
  7593                           
  7594     004E                     ?_LIN_getChecksum:	
  7595                           ; 1 bytes @ 0x0
  7596                           
  7597     004E                     ??_EUSART1_is_rx_ready:	
  7598                           ; 1 bytes @ 0x0
  7599                           
  7600     004E                     ??_EUSART1_Read:	
  7601                           ; 1 bytes @ 0x0
  7602                           
  7603     004E                     ?_LIN_getFromTable:	
  7604                           ; 1 bytes @ 0x0
  7605                           
  7606     004E                     ??_LIN_disableRx:	
  7607                           ; 1 bytes @ 0x0
  7608                           
  7609     004E                     ?_memset:	
  7610                           ; 1 bytes @ 0x0
  7611                           
  7612     004E                     ??_EUSART1_Write:	
  7613                           ; 1 bytes @ 0x0
  7614                           
  7615     004E                     ??_LIN_calcParity:	
  7616                           ; 1 bytes @ 0x0
  7617                           
  7618     004E                     ?_TMR0_WriteTimer:	
  7619                           ; 1 bytes @ 0x0
  7620                           
  7621     004E                     ?_TMR0_SetInterruptHandler:	
  7622                           ; 1 bytes @ 0x0
  7623                           
  7624     004E                     ??_EUSART1_get_last_status:	
  7625                           ; 1 bytes @ 0x0
  7626                           
  7627     004E                     ??_PMD_Initialize:	
  7628                           ; 1 bytes @ 0x0
  7629                           
  7630     004E                     ??_PIN_MANAGER_Initialize:	
  7631                           ; 1 bytes @ 0x0
  7632                           
  7633     004E                     ??_OSCILLATOR_Initialize:	
  7634                           ; 1 bytes @ 0x0
  7635                           
  7636     004E                     ??_FVR_Initialize:	
  7637                           ; 1 bytes @ 0x0
  7638                           
  7639     004E                     ??_TMR2_Initialize:	
  7640                           ; 1 bytes @ 0x0
  7641                           
  7642     004E                     ??_CLC1_Initialize:	
  7643                           ; 1 bytes @ 0x0
  7644                           
  7645     004E                     ??_ADC_Initialize:	
  7646                           ; 1 bytes @ 0x0
  7647                           
  7648     004E                     ??_CLC3_Initialize:	
  7649                           ; 1 bytes @ 0x0
  7650                           
  7651     004E                     ??_DAC1_Initialize:	
  7652                           ; 1 bytes @ 0x0
  7653                           
  7654     004E                     ??_TMR1_Initialize:	
  7655                           ; 1 bytes @ 0x0
  7656                           
  7657     004E                     ?_EUSART1_SetRxInterruptHandler:	
  7658                           ; 1 bytes @ 0x0
  7659                           
  7660     004E                     ?_EUSART1_SetTxInterruptHandler:	
  7661                           ; 1 bytes @ 0x0
  7662                           
  7663     004E                     ?_EUSART1_SetFramingErrorHandler:	
  7664                           ; 1 bytes @ 0x0
  7665                           
  7666     004E                     ?_EUSART1_SetOverrunErrorHandler:	
  7667                           ; 1 bytes @ 0x0
  7668                           
  7669     004E                     ?_EUSART1_SetErrorHandler:	
  7670                           ; 1 bytes @ 0x0
  7671                           
  7672     004E                     ??_Update_LIN_Data:	
  7673                           ; 1 bytes @ 0x0
  7674                           
  7675     004E                     ??_CLC4_Initialize:	
  7676                           ; 1 bytes @ 0x0
  7677                           
  7678     004E                     ??_CMP2_Initialize:	
  7679                           ; 1 bytes @ 0x0
  7680                           
  7681     004E                     ??_CLC2_Initialize:	
  7682                           ; 1 bytes @ 0x0
  7683                           
  7684     004E                     ??_TMR0_Reload:	
  7685                           ; 1 bytes @ 0x0
  7686                           
  7687     004E                     ??_TMR2_Start:	
  7688                           ; 1 bytes @ 0x0
  7689                           
  7690     004E                     ??_TMR2_Stop:	
  7691                           ; 1 bytes @ 0x0
  7692                           
  7693     004E                     ??_TMR1_StartTimer:	
  7694                           ; 1 bytes @ 0x0
  7695                           
  7696     004E                     ??_TMR1_StopTimer:	
  7697                           ; 1 bytes @ 0x0
  7698                           
  7699     004E                     ?_TMR1_WriteTimer:	
  7700                           ; 1 bytes @ 0x0
  7701                           
  7702     004E                     ?_memcpy:	
  7703                           ; 1 bytes @ 0x0
  7704                           
  7705     004E                     ?_GetAmbientTemperature:	
  7706                           ; 2 bytes @ 0x0
  7707                           
  7708     004E                     ?___lmul:	
  7709                           ; 2 bytes @ 0x0
  7710                           
  7711     004E                     ?___omul:	
  7712                           ; 4 bytes @ 0x0
  7713                           
  7714     004E                     LIN_getFromTable@param:	
  7715                           ; 8 bytes @ 0x0
  7716                           
  7717     004E                     LIN_getChecksum@pid:	
  7718                           ; 1 bytes @ 0x0
  7719                           
  7720     004E                     EUSART1_SetFramingErrorHandler@interruptHandler:	
  7721                           ; 1 bytes @ 0x0
  7722                           
  7723     004E                     EUSART1_SetOverrunErrorHandler@interruptHandler:	
  7724                           ; 2 bytes @ 0x0
  7725                           
  7726     004E                     EUSART1_SetErrorHandler@interruptHandler:	
  7727                           ; 2 bytes @ 0x0
  7728                           
  7729     004E                     EUSART1_SetTxInterruptHandler@interruptHandler:	
  7730                           ; 2 bytes @ 0x0
  7731                           
  7732     004E                     EUSART1_SetRxInterruptHandler@interruptHandler:	
  7733                           ; 2 bytes @ 0x0
  7734                           
  7735     004E                     TMR0_WriteTimer@timerVal:	
  7736                           ; 2 bytes @ 0x0
  7737                           
  7738     004E                     TMR0_SetInterruptHandler@InterruptHandler:	
  7739                           ; 2 bytes @ 0x0
  7740                           
  7741     004E                     TMR1_WriteTimer@timerVal:	
  7742                           ; 2 bytes @ 0x0
  7743                           
  7744     004E                     memcpy@d1:	
  7745                           ; 2 bytes @ 0x0
  7746                           
  7747     004E                     memset@c:	
  7748                           ; 2 bytes @ 0x0
  7749                           
  7750     004E                     ___lmul@multiplier:	
  7751                           ; 2 bytes @ 0x0
  7752                           
  7753     004E                     ___omul@multiplier:	
  7754                           ; 4 bytes @ 0x0
  7755                           
  7756                           
  7757                           ; 8 bytes @ 0x0
  7758     004E                     	ds	1
  7759     004F                     ??_LIN_getFromTable:
  7760     004F                     LIN_calcParity@CMD:	
  7761                           ; 1 bytes @ 0x1
  7762                           
  7763     004F                     LIN_getChecksum@data:	
  7764                           ; 1 bytes @ 0x1
  7765                           
  7766     004F                     EUSART1_Read@readValue:	
  7767                           ; 1 bytes @ 0x1
  7768                           
  7769     004F                     EUSART1_Write@txData:	
  7770                           ; 1 bytes @ 0x1
  7771                           
  7772                           
  7773                           ; 1 bytes @ 0x1
  7774     004F                     	ds	1
  7775     0050                     ?_LIN_init:
  7776     0050                     ??_CmdOutput:	
  7777                           ; 1 bytes @ 0x2
  7778                           
  7779     0050                     ??_LIN_setTimerHandler:	
  7780                           ; 1 bytes @ 0x2
  7781                           
  7782     0050                     ??_LIN_getChecksum:	
  7783                           ; 1 bytes @ 0x2
  7784                           
  7785     0050                     ??_LIN_startTimer:	
  7786                           ; 1 bytes @ 0x2
  7787                           
  7788     0050                     ??_LIN_breakCheck:	
  7789                           ; 1 bytes @ 0x2
  7790                           
  7791     0050                     ??_TMR0_WriteTimer:	
  7792                           ; 1 bytes @ 0x2
  7793                           
  7794     0050                     ??_TMR0_SetInterruptHandler:	
  7795                           ; 1 bytes @ 0x2
  7796                           
  7797     0050                     ??_TMR0_Initialize:	
  7798                           ; 1 bytes @ 0x2
  7799                           
  7800     0050                     ??_EUSART1_Initialize:	
  7801                           ; 1 bytes @ 0x2
  7802                           
  7803     0050                     ??_EUSART1_SetRxInterruptHandler:	
  7804                           ; 1 bytes @ 0x2
  7805                           
  7806     0050                     ??_EUSART1_SetTxInterruptHandler:	
  7807                           ; 1 bytes @ 0x2
  7808                           
  7809     0050                     ??_EUSART1_SetFramingErrorHandler:	
  7810                           ; 1 bytes @ 0x2
  7811                           
  7812     0050                     ??_EUSART1_SetOverrunErrorHandler:	
  7813                           ; 1 bytes @ 0x2
  7814                           
  7815     0050                     ??_EUSART1_SetErrorHandler:	
  7816                           ; 1 bytes @ 0x2
  7817                           
  7818     0050                     ??_GetAmbientTemperature:	
  7819                           ; 1 bytes @ 0x2
  7820                           
  7821     0050                     ??_TMR1_WriteTimer:	
  7822                           ; 1 bytes @ 0x2
  7823                           
  7824     0050                     LIN_calcParity@PID:	
  7825                           ; 1 bytes @ 0x2
  7826                           
  7827     0050                     LIN_startTimer@timeout:	
  7828                           ; 1 bytes @ 0x2
  7829                           
  7830     0050                     LIN_init@command:	
  7831                           ; 1 bytes @ 0x2
  7832                           
  7833     0050                     memcpy@s1:	
  7834                           ; 2 bytes @ 0x2
  7835                           
  7836     0050                     memset@n:	
  7837                           ; 2 bytes @ 0x2
  7838                           
  7839                           
  7840                           ; 2 bytes @ 0x2
  7841     0050                     	ds	1
  7842     0051                     LIN_getFromTable@cmd:
  7843                           
  7844                           ; 1 bytes @ 0x3
  7845     0051                     	ds	1
  7846     0052                     ??_memset:
  7847     0052                     LIN_getFromTable@length:	
  7848                           ; 1 bytes @ 0x4
  7849                           
  7850     0052                     LIN_getChecksum@length:	
  7851                           ; 1 bytes @ 0x4
  7852                           
  7853     0052                     CmdOutput@enable:	
  7854                           ; 1 bytes @ 0x4
  7855                           
  7856     0052                     LIN_init@processData:	
  7857                           ; 1 bytes @ 0x4
  7858                           
  7859     0052                     memcpy@n:	
  7860                           ; 2 bytes @ 0x4
  7861                           
  7862     0052                     ___lmul@multiplicand:	
  7863                           ; 2 bytes @ 0x4
  7864                           
  7865                           
  7866                           ; 4 bytes @ 0x4
  7867     0052                     	ds	1
  7868     0053                     ??_EFuseInit:
  7869     0053                     LIN_getChecksum@i:	
  7870                           ; 1 bytes @ 0x5
  7871                           
  7872     0053                     memset@p:	
  7873                           ; 1 bytes @ 0x5
  7874                           
  7875     0053                     LIN_getFromTable@rxCommand:	
  7876                           ; 1 bytes @ 0x5
  7877                           
  7878                           
  7879                           ; 2 bytes @ 0x5
  7880     0053                     	ds	1
  7881     0054                     ??_LIN_init:
  7882     0054                     ??_memcpy:	
  7883                           ; 1 bytes @ 0x6
  7884                           
  7885     0054                     LIN_init@tableLength:	
  7886                           ; 1 bytes @ 0x6
  7887                           
  7888     0054                     memcpy@tmp:	
  7889                           ; 1 bytes @ 0x6
  7890                           
  7891     0054                     memset@dest:	
  7892                           ; 1 bytes @ 0x6
  7893                           
  7894     0054                     LIN_getChecksum@checksum:	
  7895                           ; 1 bytes @ 0x6
  7896                           
  7897     0054                     GetAmbientTemperature@adcTemp:	
  7898                           ; 2 bytes @ 0x6
  7899                           
  7900                           
  7901                           ; 2 bytes @ 0x6
  7902     0054                     	ds	1
  7903     0055                     ??_LIN_checkPID:
  7904     0055                     ??_LIN_Slave_Initialize:	
  7905                           ; 1 bytes @ 0x7
  7906                           
  7907     0055                     ??_SYSTEM_Initialize:	
  7908                           ; 1 bytes @ 0x7
  7909                           
  7910     0055                     LIN_checkPID@pid:	
  7911                           ; 1 bytes @ 0x7
  7912                           
  7913     0055                     memcpy@d:	
  7914                           ; 1 bytes @ 0x7
  7915                           
  7916                           
  7917                           ; 2 bytes @ 0x7
  7918     0055                     	ds	1
  7919     0056                     ?_LIN_sendPacket:
  7920     0056                     ??___lmul:	
  7921                           ; 1 bytes @ 0x8
  7922                           
  7923     0056                     LIN_sendPacket@pid:	
  7924                           ; 1 bytes @ 0x8
  7925                           
  7926     0056                     GetAmbientTemperature@i:	
  7927                           ; 1 bytes @ 0x8
  7928                           
  7929     0056                     ___lmul@product:	
  7930                           ; 1 bytes @ 0x8
  7931                           
  7932     0056                     ___omul@multiplicand:	
  7933                           ; 4 bytes @ 0x8
  7934                           
  7935                           
  7936                           ; 8 bytes @ 0x8
  7937     0056                     	ds	1
  7938     0057                     LIN_sendPacket@data:
  7939     0057                     GetAmbientTemperature@temperature:	
  7940                           ; 1 bytes @ 0x9
  7941                           
  7942     0057                     memcpy@s:	
  7943                           ; 2 bytes @ 0x9
  7944                           
  7945                           
  7946                           ; 2 bytes @ 0x9
  7947     0057                     	ds	1
  7948     0058                     ??_LIN_sendPacket:
  7949                           
  7950                           ; 1 bytes @ 0xA
  7951     0058                     	ds	1
  7952     0059                     ??_LIN_getPacket:
  7953     0059                     LIN_sendPacket@length:	
  7954                           ; 1 bytes @ 0xB
  7955                           
  7956     0059                     LIN_getPacket@data:	
  7957                           ; 1 bytes @ 0xB
  7958                           
  7959                           
  7960                           ; 1 bytes @ 0xB
  7961     0059                     	ds	1
  7962     005A                     ?___lldiv:
  7963     005A                     LIN_sendPacket@i:	
  7964                           ; 4 bytes @ 0xC
  7965                           
  7966     005A                     LIN_getPacket@cmd:	
  7967                           ; 1 bytes @ 0xC
  7968                           
  7969     005A                     ___lldiv@divisor:	
  7970                           ; 1 bytes @ 0xC
  7971                           
  7972                           
  7973                           ; 4 bytes @ 0xC
  7974     005A                     	ds	1
  7975     005B                     ??_processLIN:
  7976     005B                     ??_LIN_queuePacket:	
  7977                           ; 1 bytes @ 0xD
  7978                           
  7979                           
  7980                           ; 1 bytes @ 0xD
  7981     005B                     	ds	3
  7982     005E                     ??___omul:
  7983     005E                     LIN_queuePacket@cmd:	
  7984                           ; 1 bytes @ 0x10
  7985                           
  7986     005E                     ___lldiv@dividend:	
  7987                           ; 1 bytes @ 0x10
  7988                           
  7989                           
  7990                           ; 4 bytes @ 0x10
  7991     005E                     	ds	1
  7992     005F                     LIN_queuePacket@i:
  7993                           
  7994                           ; 1 bytes @ 0x11
  7995     005F                     	ds	1
  7996     0060                     LIN_queuePacket@tempSchedule:
  7997                           
  7998                           ; 2 bytes @ 0x12
  7999     0060                     	ds	2
  8000     0062                     ??_LIN_handler:
  8001     0062                     ??___lldiv:	
  8002                           ; 1 bytes @ 0x14
  8003                           
  8004                           
  8005                           ; 1 bytes @ 0x14
  8006     0062                     	ds	1
  8007     0063                     ??_EFuse:
  8008                           
  8009                           ; 1 bytes @ 0x15
  8010     0063                     	ds	2
  8011                           
  8012                           	psect	maintext
  8013     07D2                     __pmaintext:	
  8014 ;;
  8015 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  8016 ;;
  8017 ;; *************** function _main *****************
  8018 ;; Defined at:
  8019 ;;		line 55 in file "main.c"
  8020 ;; Parameters:    Size  Location     Type
  8021 ;;		None
  8022 ;; Auto vars:     Size  Location     Type
  8023 ;;		None
  8024 ;; Return value:  Size  Location     Type
  8025 ;;                  1    wreg      void 
  8026 ;; Registers used:
  8027 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8028 ;; Tracked objects:
  8029 ;;		On entry : B3F/0
  8030 ;;		On exit  : 3C/0
  8031 ;;		Unchanged: 0/0
  8032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8035 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  8036 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  8037 ;;Total ram usage:        2 bytes
  8038 ;; Hardware stack levels required when called: 10
  8039 ;; This function calls:
  8040 ;;		_CmdOutput
  8041 ;;		_EFuse
  8042 ;;		_EFuseInit
  8043 ;;		_LIN_handler
  8044 ;;		_SYSTEM_Initialize
  8045 ;; This function is called by:
  8046 ;;		Startup code after reset
  8047 ;; This function uses a non-reentrant model
  8048 ;;
  8049                           
  8050     07D2                     _main:	
  8051                           ;psect for function _main
  8052                           
  8053                           
  8054                           ;main.c: 57:     SYSTEM_Initialize();
  8055                           
  8056                           ;incstack = 0
  8057                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8058     07D2  318C  2436  3187   	fcall	_SYSTEM_Initialize
  8059                           
  8060                           ;main.c: 59:     EFuseInit();
  8061     07D5  318B  235F  3187   	fcall	_EFuseInit
  8062     07D8  1719               	bsf	25,6	;volatile
  8063                           
  8064                           ;main.c: 61:     _delay((unsigned long)((1000)*(32000000/4000.0)));
  8065     07D9  3029               	movlw	41
  8066     07DA  0142               	movlb	2	; select bank2
  8067     07DB  00C1               	movwf	(??_main^(0+256)+1)
  8068     07DC  3096               	movlw	150
  8069     07DD  00C0               	movwf	??_main^(0+256)
  8070     07DE  307F               	movlw	127
  8071     07DF                     u3477:
  8072     07DF  0B89               	decfsz	9,f
  8073     07E0  2FDF               	goto	u3477
  8074     07E1  0BC0               	decfsz	??_main^(0+256),f
  8075     07E2  2FDF               	goto	u3477
  8076     07E3  0BC1               	decfsz	(??_main^(0+256)+1),f
  8077     07E4  2FDF               	goto	u3477
  8078                           
  8079                           ;main.c: 63:     (INTCONbits.GIE = 1);
  8080     07E5  178B               	bsf	11,7	;volatile
  8081                           
  8082                           ;main.c: 64:     (INTCONbits.PEIE = 1);
  8083     07E6  170B               	bsf	11,6	;volatile
  8084                           
  8085                           ;main.c: 66:     _delay((unsigned long)((100)*(32000000/4000.0)));
  8086     07E7  3005               	movlw	5
  8087     07E8  0142               	movlb	2	; select bank2
  8088     07E9  00C1               	movwf	(??_main^(0+256)+1)
  8089     07EA  300F               	movlw	15
  8090     07EB  00C0               	movwf	??_main^(0+256)
  8091     07EC  30F1               	movlw	241
  8092     07ED                     u3487:
  8093     07ED  0B89               	decfsz	9,f
  8094     07EE  2FED               	goto	u3487
  8095     07EF  0BC0               	decfsz	??_main^(0+256),f
  8096     07F0  2FED               	goto	u3487
  8097     07F1  0BC1               	decfsz	(??_main^(0+256)+1),f
  8098     07F2  2FED               	goto	u3487
  8099                           
  8100                           ;main.c: 67:     CmdOutput(OUTPUT_ON);
  8101     07F3  3001               	movlw	1
  8102     07F4  318D  2585  3187   	fcall	_CmdOutput
  8103     07F7                     l5424:
  8104                           
  8105                           ;main.c: 70:     {;main.c: 71:         LIN_handler();
  8106     07F7  3183  2399  3187   	fcall	_LIN_handler
  8107                           
  8108                           ;main.c: 72:         EFuse();
  8109     07FA  3186  26CF  3187   	fcall	_EFuse
  8110     07FD  2FF7               	goto	l5424
  8111     07FE                     __end_of_main:
  8112                           
  8113                           	psect	text1
  8114     0C36                     __ptext1:	
  8115 ;; *************** function _SYSTEM_Initialize *****************
  8116 ;; Defined at:
  8117 ;;		line 50 in file "mcc_generated_files/mcc.c"
  8118 ;; Parameters:    Size  Location     Type
  8119 ;;		None
  8120 ;; Auto vars:     Size  Location     Type
  8121 ;;		None
  8122 ;; Return value:  Size  Location     Type
  8123 ;;                  1    wreg      void 
  8124 ;; Registers used:
  8125 ;;		wreg, status,2, status,0, pclath, cstack
  8126 ;; Tracked objects:
  8127 ;;		On entry : B3F/0
  8128 ;;		On exit  : 3F/1
  8129 ;;		Unchanged: 0/0
  8130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8134 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8135 ;;Total ram usage:        0 bytes
  8136 ;; Hardware stack levels used: 1
  8137 ;; Hardware stack levels required when called: 9
  8138 ;; This function calls:
  8139 ;;		_ADC_Initialize
  8140 ;;		_CLC1_Initialize
  8141 ;;		_CLC2_Initialize
  8142 ;;		_CLC3_Initialize
  8143 ;;		_CLC4_Initialize
  8144 ;;		_CMP2_Initialize
  8145 ;;		_DAC1_Initialize
  8146 ;;		_EUSART1_Initialize
  8147 ;;		_FVR_Initialize
  8148 ;;		_LIN_Slave_Initialize
  8149 ;;		_OSCILLATOR_Initialize
  8150 ;;		_PIN_MANAGER_Initialize
  8151 ;;		_PMD_Initialize
  8152 ;;		_TMR0_Initialize
  8153 ;;		_TMR1_Initialize
  8154 ;;		_TMR2_Initialize
  8155 ;; This function is called by:
  8156 ;;		_main
  8157 ;; This function uses a non-reentrant model
  8158 ;;
  8159                           
  8160     0C36                     _SYSTEM_Initialize:	
  8161                           ;psect for function _SYSTEM_Initialize
  8162                           
  8163                           
  8164                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
  8165                           
  8166                           ;incstack = 0
  8167                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8168     0C36  3188  20FC  318C   	fcall	_PMD_Initialize
  8169                           
  8170                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  8171     0C39  318B  23D7  318C   	fcall	_PIN_MANAGER_Initialize
  8172                           
  8173                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  8174     0C3C  3189  2116  318C   	fcall	_OSCILLATOR_Initialize
  8175                           
  8176                           ;mcc_generated_files/mcc.c: 55:     CMP2_Initialize();
  8177     0C3F  3189  210C  318C   	fcall	_CMP2_Initialize
  8178                           
  8179                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
  8180     0C42  3188  207C  318C   	fcall	_FVR_Initialize
  8181                           
  8182                           ;mcc_generated_files/mcc.c: 57:     CLC2_Initialize();
  8183     0C45  3189  21CB  318C   	fcall	_CLC2_Initialize
  8184                           
  8185                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
  8186     0C48  3189  216B  318C   	fcall	_TMR2_Initialize
  8187                           
  8188                           ;mcc_generated_files/mcc.c: 59:     TMR0_Initialize();
  8189     0C4B  318A  226B  318C   	fcall	_TMR0_Initialize
  8190                           
  8191                           ;mcc_generated_files/mcc.c: 60:     CLC1_Initialize();
  8192     0C4E  3189  21B7  318C   	fcall	_CLC1_Initialize
  8193                           
  8194                           ;mcc_generated_files/mcc.c: 61:     CLC4_Initialize();
  8195     0C51  3189  2197  318C   	fcall	_CLC4_Initialize
  8196                           
  8197                           ;mcc_generated_files/mcc.c: 62:     ADC_Initialize();
  8198     0C54  3188  20BC  318C   	fcall	_ADC_Initialize
  8199                           
  8200                           ;mcc_generated_files/mcc.c: 63:     CLC3_Initialize();
  8201     0C57  3189  21A6  318C   	fcall	_CLC3_Initialize
  8202                           
  8203                           ;mcc_generated_files/mcc.c: 64:     DAC1_Initialize();
  8204     0C5A  3188  209A  318C   	fcall	_DAC1_Initialize
  8205                           
  8206                           ;mcc_generated_files/mcc.c: 65:     TMR1_Initialize();
  8207     0C5D  318A  2284  318C   	fcall	_TMR1_Initialize
  8208                           
  8209                           ;mcc_generated_files/mcc.c: 66:     EUSART1_Initialize();
  8210     0C60  318C  2499  318C   	fcall	_EUSART1_Initialize
  8211                           
  8212                           ;mcc_generated_files/mcc.c: 67:     LIN_Slave_Initialize();
  8213     0C63  3189  2150         	fcall	_LIN_Slave_Initialize
  8214     0C65  0008               	return
  8215     0C66                     __end_of_SYSTEM_Initialize:
  8216                           
  8217                           	psect	text2
  8218     0A84                     __ptext2:	
  8219 ;; *************** function _TMR1_Initialize *****************
  8220 ;; Defined at:
  8221 ;;		line 63 in file "mcc_generated_files/tmr1.c"
  8222 ;; Parameters:    Size  Location     Type
  8223 ;;		None
  8224 ;; Auto vars:     Size  Location     Type
  8225 ;;		None
  8226 ;; Return value:  Size  Location     Type
  8227 ;;                  1    wreg      void 
  8228 ;; Registers used:
  8229 ;;		wreg
  8230 ;; Tracked objects:
  8231 ;;		On entry : 3F/12
  8232 ;;		On exit  : 3F/4
  8233 ;;		Unchanged: 0/0
  8234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8238 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8239 ;;Total ram usage:        0 bytes
  8240 ;; Hardware stack levels used: 1
  8241 ;; Hardware stack levels required when called: 5
  8242 ;; This function calls:
  8243 ;;		Nothing
  8244 ;; This function is called by:
  8245 ;;		_SYSTEM_Initialize
  8246 ;; This function uses a non-reentrant model
  8247 ;;
  8248                           
  8249     0A84                     _TMR1_Initialize:	
  8250                           ;psect for function _TMR1_Initialize
  8251                           
  8252                           
  8253                           ;mcc_generated_files/tmr1.c: 68:     T1GCON = 0x80;
  8254                           
  8255                           ;incstack = 0
  8256                           ; Regs used in _TMR1_Initialize: [wreg]
  8257     0A84  3080               	movlw	128
  8258     0A85  0144               	movlb	4	; select bank4
  8259     0A86  008F               	movwf	15	;volatile
  8260                           
  8261                           ;mcc_generated_files/tmr1.c: 71:     T1GATE = 0x0D;
  8262     0A87  300D               	movlw	13
  8263     0A88  0090               	movwf	16	;volatile
  8264                           
  8265                           ;mcc_generated_files/tmr1.c: 74:     T1CLK = 0x03;
  8266     0A89  3003               	movlw	3
  8267     0A8A  0091               	movwf	17	;volatile
  8268                           
  8269                           ;mcc_generated_files/tmr1.c: 77:     TMR1H = 0xFF;
  8270     0A8B  30FF               	movlw	255
  8271     0A8C  008D               	movwf	13	;volatile
  8272                           
  8273                           ;mcc_generated_files/tmr1.c: 80:     TMR1L = 0xD8;
  8274     0A8D  30D8               	movlw	216
  8275     0A8E  008C               	movwf	12	;volatile
  8276                           
  8277                           ;mcc_generated_files/tmr1.c: 83:     PIR4bits.TMR1IF = 0;
  8278     0A8F  014E               	movlb	14	; select bank14
  8279     0A90  1010               	bcf	16,0	;volatile
  8280                           
  8281                           ;mcc_generated_files/tmr1.c: 86:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  8282     0A91  0144               	movlb	4	; select bank4
  8283     0A92  080D               	movf	13,w	;volatile
  8284     0A93  0141               	movlb	1	; select bank1
  8285     0A94  00B5               	movwf	(_timer1ReloadVal+1)^(0+128)	;volatile
  8286     0A95  0144               	movlb	4	; select bank4
  8287     0A96  080C               	movf	12,w	;volatile
  8288     0A97  0141               	movlb	1	; select bank1
  8289     0A98  00B4               	movwf	_timer1ReloadVal^(0+128)	;volatile
  8290                           
  8291                           ;mcc_generated_files/tmr1.c: 89:     T1CON = 0x35;
  8292     0A99  3035               	movlw	53
  8293     0A9A  0144               	movlb	4	; select bank4
  8294     0A9B  008E               	movwf	14	;volatile
  8295     0A9C  0008               	return
  8296     0A9D                     __end_of_TMR1_Initialize:
  8297                           
  8298                           	psect	text3
  8299     0A6B                     __ptext3:	
  8300 ;; *************** function _TMR0_Initialize *****************
  8301 ;; Defined at:
  8302 ;;		line 68 in file "mcc_generated_files/tmr0.c"
  8303 ;; Parameters:    Size  Location     Type
  8304 ;;		None
  8305 ;; Auto vars:     Size  Location     Type
  8306 ;;		None
  8307 ;; Return value:  Size  Location     Type
  8308 ;;                  1    wreg      void 
  8309 ;; Registers used:
  8310 ;;		wreg, status,2, status,0, pclath, cstack
  8311 ;; Tracked objects:
  8312 ;;		On entry : 3F/5
  8313 ;;		On exit  : 3F/B
  8314 ;;		Unchanged: 0/0
  8315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8319 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8320 ;;Total ram usage:        0 bytes
  8321 ;; Hardware stack levels used: 1
  8322 ;; Hardware stack levels required when called: 6
  8323 ;; This function calls:
  8324 ;;		_TMR0_SetInterruptHandler
  8325 ;; This function is called by:
  8326 ;;		_SYSTEM_Initialize
  8327 ;; This function uses a non-reentrant model
  8328 ;;
  8329                           
  8330     0A6B                     _TMR0_Initialize:	
  8331                           ;psect for function _TMR0_Initialize
  8332                           
  8333                           
  8334                           ;mcc_generated_files/tmr0.c: 73:     T0CON1 = 0x56;
  8335                           
  8336                           ;incstack = 0
  8337                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8338     0A6B  3056               	movlw	86
  8339     0A6C  014B               	movlb	11	; select bank11
  8340     0A6D  009F               	movwf	31	;volatile
  8341                           
  8342                           ;mcc_generated_files/tmr0.c: 76:     TMR0H = 0xFF;
  8343     0A6E  30FF               	movlw	255
  8344     0A6F  009D               	movwf	29	;volatile
  8345                           
  8346                           ;mcc_generated_files/tmr0.c: 79:     TMR0L = 0x83;
  8347     0A70  3083               	movlw	131
  8348     0A71  009C               	movwf	28	;volatile
  8349                           
  8350                           ;mcc_generated_files/tmr0.c: 82:     timer0ReloadVal16bit = (uint16_t) (TMR0H << 8) | TM
      +                          R0L;
  8351     0A72  081D               	movf	29,w	;volatile
  8352     0A73  00F1               	movwf	_timer0ReloadVal16bit+1	;volatile
  8353     0A74  081C               	movf	28,w	;volatile
  8354     0A75  00F0               	movwf	_timer0ReloadVal16bit	;volatile
  8355                           
  8356                           ;mcc_generated_files/tmr0.c: 85:     PIR0bits.TMR0IF = 0;
  8357     0A76  014E               	movlb	14	; select bank14
  8358     0A77  128C               	bcf	12,5	;volatile
  8359                           
  8360                           ;mcc_generated_files/tmr0.c: 88:     PIE0bits.TMR0IE = 1;
  8361     0A78  1696               	bsf	22,5	;volatile
  8362                           
  8363                           ;mcc_generated_files/tmr0.c: 91:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  8364     0A79  305F               	movlw	low _TMR0_DefaultInterruptHandler
  8365     0A7A  0140               	movlb	0	; select bank0
  8366     0A7B  00CE               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  8367     0A7C  3008               	movlw	high _TMR0_DefaultInterruptHandler
  8368     0A7D  00CF               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  8369     0A7E  3188  20EC         	fcall	_TMR0_SetInterruptHandler
  8370                           
  8371                           ;mcc_generated_files/tmr0.c: 94:     T0CON0 = 0x90;
  8372     0A80  3090               	movlw	144
  8373     0A81  014B               	movlb	11	; select bank11
  8374     0A82  009E               	movwf	30	;volatile
  8375     0A83  0008               	return
  8376     0A84                     __end_of_TMR0_Initialize:
  8377                           
  8378                           	psect	text4
  8379     08FC                     __ptext4:	
  8380 ;; *************** function _PMD_Initialize *****************
  8381 ;; Defined at:
  8382 ;;		line 86 in file "mcc_generated_files/mcc.c"
  8383 ;; Parameters:    Size  Location     Type
  8384 ;;		None
  8385 ;; Auto vars:     Size  Location     Type
  8386 ;;		None
  8387 ;; Return value:  Size  Location     Type
  8388 ;;                  1    wreg      void 
  8389 ;; Registers used:
  8390 ;;		status,2
  8391 ;; Tracked objects:
  8392 ;;		On entry : B3F/0
  8393 ;;		On exit  : B3F/F
  8394 ;;		Unchanged: B00/0
  8395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8399 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8400 ;;Total ram usage:        0 bytes
  8401 ;; Hardware stack levels used: 1
  8402 ;; Hardware stack levels required when called: 5
  8403 ;; This function calls:
  8404 ;;		Nothing
  8405 ;; This function is called by:
  8406 ;;		_SYSTEM_Initialize
  8407 ;; This function uses a non-reentrant model
  8408 ;;
  8409                           
  8410     08FC                     _PMD_Initialize:	
  8411                           ;psect for function _PMD_Initialize
  8412                           
  8413                           
  8414                           ;mcc_generated_files/mcc.c: 89:     PMD0 = 0x00;
  8415                           
  8416                           ;incstack = 0
  8417                           ; Regs used in _PMD_Initialize: [status,2]
  8418     08FC  014F               	movlb	15	; select bank15
  8419     08FD  0196               	clrf	22	;volatile
  8420                           
  8421                           ;mcc_generated_files/mcc.c: 91:     PMD1 = 0x00;
  8422     08FE  0197               	clrf	23	;volatile
  8423                           
  8424                           ;mcc_generated_files/mcc.c: 93:     PMD2 = 0x00;
  8425     08FF  0198               	clrf	24	;volatile
  8426                           
  8427                           ;mcc_generated_files/mcc.c: 95:     PMD3 = 0x00;
  8428     0900  0199               	clrf	25	;volatile
  8429                           
  8430                           ;mcc_generated_files/mcc.c: 97:     PMD4 = 0x00;
  8431     0901  019A               	clrf	26	;volatile
  8432                           
  8433                           ;mcc_generated_files/mcc.c: 99:     PMD5 = 0x00;
  8434     0902  019B               	clrf	27	;volatile
  8435     0903  0008               	return
  8436     0904                     __end_of_PMD_Initialize:
  8437                           
  8438                           	psect	text5
  8439     0BD7                     __ptext5:	
  8440 ;; *************** function _PIN_MANAGER_Initialize *****************
  8441 ;; Defined at:
  8442 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  8443 ;; Parameters:    Size  Location     Type
  8444 ;;		None
  8445 ;; Auto vars:     Size  Location     Type
  8446 ;;		None
  8447 ;; Return value:  Size  Location     Type
  8448 ;;                  1    wreg      void 
  8449 ;; Registers used:
  8450 ;;		wreg, status,2
  8451 ;; Tracked objects:
  8452 ;;		On entry : B3F/F
  8453 ;;		On exit  : B3F/3D
  8454 ;;		Unchanged: B00/0
  8455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8459 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8460 ;;Total ram usage:        0 bytes
  8461 ;; Hardware stack levels used: 1
  8462 ;; Hardware stack levels required when called: 5
  8463 ;; This function calls:
  8464 ;;		Nothing
  8465 ;; This function is called by:
  8466 ;;		_SYSTEM_Initialize
  8467 ;; This function uses a non-reentrant model
  8468 ;;
  8469                           
  8470     0BD7                     _PIN_MANAGER_Initialize:	
  8471                           ;psect for function _PIN_MANAGER_Initialize
  8472                           
  8473                           
  8474                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  8475                           
  8476                           ;incstack = 0
  8477                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  8478     0BD7  0140               	movlb	0	; select bank0
  8479     0BD8  0198               	clrf	24	;volatile
  8480                           
  8481                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  8482     0BD9  0199               	clrf	25	;volatile
  8483                           
  8484                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  8485     0BDA  019A               	clrf	26	;volatile
  8486                           
  8487                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x37;
  8488     0BDB  3037               	movlw	55
  8489     0BDC  0092               	movwf	18	;volatile
  8490                           
  8491                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0x30;
  8492     0BDD  3030               	movlw	48
  8493     0BDE  0093               	movwf	19	;volatile
  8494                           
  8495                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xBF;
  8496     0BDF  30BF               	movlw	191
  8497     0BE0  0094               	movwf	20	;volatile
  8498                           
  8499                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x1F;
  8500     0BE1  301F               	movlw	31
  8501     0BE2  017E               	movlb	62	; select bank62
  8502     0BE3  00CE               	movwf	78	;volatile
  8503                           
  8504                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x10;
  8505     0BE4  3010               	movlw	16
  8506     0BE5  00C3               	movwf	67	;volatile
  8507                           
  8508                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x07;
  8509     0BE6  3007               	movlw	7
  8510     0BE7  00B8               	movwf	56	;volatile
  8511                           
  8512                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  8513     0BE8  01C4               	clrf	68	;volatile
  8514                           
  8515                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
  8516     0BE9  01B9               	clrf	57	;volatile
  8517                           
  8518                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x00;
  8519     0BEA  01CF               	clrf	79	;volatile
  8520                           
  8521                           ;mcc_generated_files/pin_manager.c: 88:     ODCONA = 0x00;
  8522     0BEB  01BA               	clrf	58	;volatile
  8523                           
  8524                           ;mcc_generated_files/pin_manager.c: 89:     ODCONB = 0x00;
  8525     0BEC  01C5               	clrf	69	;volatile
  8526                           
  8527                           ;mcc_generated_files/pin_manager.c: 90:     ODCONC = 0x00;
  8528     0BED  01D0               	clrf	80	;volatile
  8529                           
  8530                           ;mcc_generated_files/pin_manager.c: 95:     SLRCONA = 0x1F;
  8531     0BEE  301F               	movlw	31
  8532     0BEF  00BB               	movwf	59	;volatile
  8533                           
  8534                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONB = 0x00;
  8535     0BF0  01C6               	clrf	70	;volatile
  8536                           
  8537                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONC = 0x3F;
  8538     0BF1  303F               	movlw	63
  8539     0BF2  00D1               	movwf	81	;volatile
  8540                           
  8541                           ;mcc_generated_files/pin_manager.c: 102:     INLVLA = 0x3F;
  8542     0BF3  303F               	movlw	63
  8543     0BF4  00BC               	movwf	60	;volatile
  8544                           
  8545                           ;mcc_generated_files/pin_manager.c: 103:     INLVLB = 0x00;
  8546     0BF5  01C7               	clrf	71	;volatile
  8547                           
  8548                           ;mcc_generated_files/pin_manager.c: 104:     INLVLC = 0x3F;
  8549     0BF6  303F               	movlw	63
  8550     0BF7  00D2               	movwf	82	;volatile
  8551                           
  8552                           ;mcc_generated_files/pin_manager.c: 113:     CLCIN0PPS = 0x17;
  8553     0BF8  3017               	movlw	23
  8554     0BF9  017D               	movlb	61	; select bank61
  8555     0BFA  00BB               	movwf	59	;volatile
  8556                           
  8557                           ;mcc_generated_files/pin_manager.c: 114:     RB7PPS = 0x0F;
  8558     0BFB  300F               	movlw	15
  8559     0BFC  017E               	movlb	62	; select bank62
  8560     0BFD  009F               	movwf	31	;volatile
  8561                           
  8562                           ;mcc_generated_files/pin_manager.c: 115:     RC6PPS = 0x02;
  8563     0BFE  3002               	movlw	2
  8564     0BFF  00A6               	movwf	38	;volatile
  8565                           
  8566                           ;mcc_generated_files/pin_manager.c: 116:     RC7PPS = 0x01;
  8567     0C00  3001               	movlw	1
  8568     0C01  00A7               	movwf	39	;volatile
  8569                           
  8570                           ;mcc_generated_files/pin_manager.c: 117:     RX1DTPPS = 0x0D;
  8571     0C02  300D               	movlw	13
  8572     0C03  017D               	movlb	61	; select bank61
  8573     0C04  00CB               	movwf	75	;volatile
  8574     0C05  0008               	return
  8575     0C06                     __end_of_PIN_MANAGER_Initialize:
  8576                           
  8577                           	psect	text6
  8578     0916                     __ptext6:	
  8579 ;; *************** function _OSCILLATOR_Initialize *****************
  8580 ;; Defined at:
  8581 ;;		line 70 in file "mcc_generated_files/mcc.c"
  8582 ;; Parameters:    Size  Location     Type
  8583 ;;		None
  8584 ;; Auto vars:     Size  Location     Type
  8585 ;;		None
  8586 ;; Return value:  Size  Location     Type
  8587 ;;                  1    wreg      void 
  8588 ;; Registers used:
  8589 ;;		wreg, status,2
  8590 ;; Tracked objects:
  8591 ;;		On entry : B3F/3D
  8592 ;;		On exit  : B3F/11
  8593 ;;		Unchanged: B00/0
  8594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8598 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8599 ;;Total ram usage:        0 bytes
  8600 ;; Hardware stack levels used: 1
  8601 ;; Hardware stack levels required when called: 5
  8602 ;; This function calls:
  8603 ;;		Nothing
  8604 ;; This function is called by:
  8605 ;;		_SYSTEM_Initialize
  8606 ;; This function uses a non-reentrant model
  8607 ;;
  8608                           
  8609     0916                     _OSCILLATOR_Initialize:	
  8610                           ;psect for function _OSCILLATOR_Initialize
  8611                           
  8612                           
  8613                           ;mcc_generated_files/mcc.c: 73:     OSCCON1 = 0x60;
  8614                           
  8615                           ;incstack = 0
  8616                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  8617     0916  3060               	movlw	96
  8618     0917  0151               	movlb	17	; select bank17
  8619     0918  008D               	movwf	13	;volatile
  8620                           
  8621                           ;mcc_generated_files/mcc.c: 75:     OSCCON3 = 0x00;
  8622     0919  018F               	clrf	15	;volatile
  8623                           
  8624                           ;mcc_generated_files/mcc.c: 77:     OSCEN = 0x00;
  8625     091A  0191               	clrf	17	;volatile
  8626                           
  8627                           ;mcc_generated_files/mcc.c: 79:     OSCFRQ = 0x06;
  8628     091B  3006               	movlw	6
  8629     091C  0093               	movwf	19	;volatile
  8630                           
  8631                           ;mcc_generated_files/mcc.c: 81:     OSCSTAT = 0x00;
  8632     091D  0190               	clrf	16	;volatile
  8633                           
  8634                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
  8635     091E  0192               	clrf	18	;volatile
  8636     091F  0008               	return
  8637     0920                     __end_of_OSCILLATOR_Initialize:
  8638                           
  8639                           	psect	text7
  8640     0950                     __ptext7:	
  8641 ;; *************** function _LIN_Slave_Initialize *****************
  8642 ;; Defined at:
  8643 ;;		line 45 in file "mcc_generated_files/LINDrivers/lin_app.c"
  8644 ;; Parameters:    Size  Location     Type
  8645 ;;		None
  8646 ;; Auto vars:     Size  Location     Type
  8647 ;;		None
  8648 ;; Return value:  Size  Location     Type
  8649 ;;                  1    wreg      void 
  8650 ;; Registers used:
  8651 ;;		wreg, status,2, status,0, pclath, cstack
  8652 ;; Tracked objects:
  8653 ;;		On entry : 3F/E
  8654 ;;		On exit  : 3F/1
  8655 ;;		Unchanged: 0/0
  8656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8661 ;;Total ram usage:        0 bytes
  8662 ;; Hardware stack levels used: 1
  8663 ;; Hardware stack levels required when called: 8
  8664 ;; This function calls:
  8665 ;;		_LIN_init
  8666 ;; This function is called by:
  8667 ;;		_SYSTEM_Initialize
  8668 ;; This function uses a non-reentrant model
  8669 ;;
  8670                           
  8671     0950                     _LIN_Slave_Initialize:	
  8672                           ;psect for function _LIN_Slave_Initialize
  8673                           
  8674                           
  8675                           ;mcc_generated_files/LINDrivers/lin_app.c: 47:     LIN_init((sizeof(scheduleTable)/sizeo
      +                          f(lin_rx_cmd_t)), scheduleTable, processLIN);
  8676                           
  8677                           ;incstack = 0
  8678                           ; Regs used in _LIN_Slave_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8679     0950  3043               	movlw	low (_scheduleTable| (0+32768))
  8680     0951  0140               	movlb	0	; select bank0
  8681     0952  00D0               	movwf	LIN_init@command
  8682     0953  3086               	movlw	high (_scheduleTable| (0+32768))
  8683     0954  00D1               	movwf	LIN_init@command+1
  8684     0955  309D               	movlw	low _processLIN
  8685     0956  00D2               	movwf	LIN_init@processData
  8686     0957  3004               	movlw	high _processLIN
  8687     0958  00D3               	movwf	LIN_init@processData+1
  8688     0959  301C               	movlw	28
  8689     095A  318A  229D         	fcall	_LIN_init
  8690     095C  0008               	return
  8691     095D                     __end_of_LIN_Slave_Initialize:
  8692                           
  8693                           	psect	text8
  8694     0A9D                     __ptext8:	
  8695 ;; *************** function _LIN_init *****************
  8696 ;; Defined at:
  8697 ;;		line 57 in file "mcc_generated_files/LINDrivers/lin_slave.c"
  8698 ;; Parameters:    Size  Location     Type
  8699 ;;  tableLength     1    wreg     unsigned char 
  8700 ;;  command         2    2[BANK0 ] const PTR const struct .
  8701 ;;		 -> scheduleTable(140), 
  8702 ;;  processData     2    4[BANK0 ] PTR FTN()void 
  8703 ;;		 -> processLIN(1), 
  8704 ;; Auto vars:     Size  Location     Type
  8705 ;;  tableLength     1    6[BANK0 ] unsigned char 
  8706 ;; Return value:  Size  Location     Type
  8707 ;;                  1    wreg      void 
  8708 ;; Registers used:
  8709 ;;		wreg, status,2, status,0, pclath, cstack
  8710 ;; Tracked objects:
  8711 ;;		On entry : 3F/0
  8712 ;;		On exit  : 3F/1
  8713 ;;		Unchanged: 0/0
  8714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8715 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8716 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8718 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8719 ;;Total ram usage:        5 bytes
  8720 ;; Hardware stack levels used: 1
  8721 ;; Hardware stack levels required when called: 7
  8722 ;; This function calls:
  8723 ;;		_LIN_enableRx
  8724 ;;		_LIN_setTimerHandler
  8725 ;;		_LIN_stopTimer
  8726 ;; This function is called by:
  8727 ;;		_LIN_Slave_Initialize
  8728 ;; This function uses a non-reentrant model
  8729 ;;
  8730                           
  8731     0A9D                     _LIN_init:	
  8732                           ;psect for function _LIN_init
  8733                           
  8734                           
  8735                           ;incstack = 0
  8736                           ; Regs used in _LIN_init: [wreg+status,2+status,0+pclath+cstack]
  8737                           ;LIN_init@tableLength stored from wreg
  8738     0A9D  00D4               	movwf	LIN_init@tableLength
  8739                           
  8740                           ;mcc_generated_files/LINDrivers/lin_slave.c: 58:     LIN_rxCommand = command;
  8741     0A9E  0851               	movf	LIN_init@command+1,w
  8742     0A9F  0141               	movlb	1	; select bank1
  8743     0AA0  00EE               	movwf	(_LIN_rxCommand+1)^(0+128)
  8744     0AA1  0140               	movlb	0	; select bank0
  8745     0AA2  0850               	movf	LIN_init@command,w
  8746     0AA3  0141               	movlb	1	; select bank1
  8747     0AA4  00ED               	movwf	_LIN_rxCommand^(0+128)
  8748                           
  8749                           ;mcc_generated_files/LINDrivers/lin_slave.c: 59:     LIN_rxCommandLength = tableLength;
  8750     0AA5  0140               	movlb	0	; select bank0
  8751     0AA6  0854               	movf	LIN_init@tableLength,w
  8752     0AA7  00EF               	movwf	_LIN_rxCommandLength
  8753                           
  8754                           ;mcc_generated_files/LINDrivers/lin_slave.c: 60:     LIN_processData = processData;
  8755     0AA8  0853               	movf	LIN_init@processData+1,w
  8756     0AA9  0142               	movlb	2	; select bank2
  8757     0AAA  00ED               	movwf	(_LIN_processData+1)^(0+256)
  8758     0AAB  0140               	movlb	0	; select bank0
  8759     0AAC  0852               	movf	LIN_init@processData,w
  8760     0AAD  0142               	movlb	2	; select bank2
  8761     0AAE  00EC               	movwf	_LIN_processData^(0+256)
  8762                           
  8763                           ;mcc_generated_files/LINDrivers/lin_slave.c: 61:     LIN_stopTimer();
  8764     0AAF  3188  208F  318A   	fcall	_LIN_stopTimer
  8765                           
  8766                           ;mcc_generated_files/LINDrivers/lin_slave.c: 62:     LIN_enableRx();
  8767     0AB2  3188  208A  318A   	fcall	_LIN_enableRx
  8768                           
  8769                           ;mcc_generated_files/LINDrivers/lin_slave.c: 63:     LIN_setTimerHandler();
  8770     0AB5  3188  20F4         	fcall	_LIN_setTimerHandler
  8771     0AB7  0008               	return
  8772     0AB8                     __end_of_LIN_init:
  8773                           
  8774                           	psect	text9
  8775     08F4                     __ptext9:	
  8776 ;; *************** function _LIN_setTimerHandler *****************
  8777 ;; Defined at:
  8778 ;;		line 300 in file "mcc_generated_files/LINDrivers/lin_slave.c"
  8779 ;; Parameters:    Size  Location     Type
  8780 ;;		None
  8781 ;; Auto vars:     Size  Location     Type
  8782 ;;		None
  8783 ;; Return value:  Size  Location     Type
  8784 ;;                  1    wreg      void 
  8785 ;; Registers used:
  8786 ;;		wreg, status,2, status,0, pclath, cstack
  8787 ;; Tracked objects:
  8788 ;;		On entry : 3F/E
  8789 ;;		On exit  : 3F/1
  8790 ;;		Unchanged: 0/0
  8791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8795 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8796 ;;Total ram usage:        0 bytes
  8797 ;; Hardware stack levels used: 1
  8798 ;; Hardware stack levels required when called: 6
  8799 ;; This function calls:
  8800 ;;		_TMR0_SetInterruptHandler
  8801 ;; This function is called by:
  8802 ;;		_LIN_init
  8803 ;; This function uses a non-reentrant model
  8804 ;;
  8805                           
  8806     08F4                     _LIN_setTimerHandler:	
  8807                           ;psect for function _LIN_setTimerHandler
  8808                           
  8809                           
  8810                           ;mcc_generated_files/LINDrivers/lin_slave.c: 301:     TMR0_SetInterruptHandler(LIN_timer
      +                          Handler);
  8811                           
  8812                           ;incstack = 0
  8813                           ; Regs used in _LIN_setTimerHandler: [wreg+status,2+status,0+pclath+cstack]
  8814     08F4  302A               	movlw	low _LIN_timerHandler
  8815     08F5  0140               	movlb	0	; select bank0
  8816     08F6  00CE               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  8817     08F7  3009               	movlw	high _LIN_timerHandler
  8818     08F8  00CF               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  8819     08F9  3188  20EC         	fcall	_TMR0_SetInterruptHandler
  8820     08FB  0008               	return
  8821     08FC                     __end_of_LIN_setTimerHandler:
  8822                           
  8823                           	psect	text10
  8824     08EC                     __ptext10:	
  8825 ;; *************** function _TMR0_SetInterruptHandler *****************
  8826 ;; Defined at:
  8827 ;;		line 155 in file "mcc_generated_files/tmr0.c"
  8828 ;; Parameters:    Size  Location     Type
  8829 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  8830 ;;		 -> TMR0_DefaultInterruptHandler(1), LIN_timerHandler(1), 
  8831 ;; Auto vars:     Size  Location     Type
  8832 ;;		None
  8833 ;; Return value:  Size  Location     Type
  8834 ;;                  1    wreg      void 
  8835 ;; Registers used:
  8836 ;;		wreg
  8837 ;; Tracked objects:
  8838 ;;		On entry : 3F/0
  8839 ;;		On exit  : 3F/1
  8840 ;;		Unchanged: 0/0
  8841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8842 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8845 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8846 ;;Total ram usage:        2 bytes
  8847 ;; Hardware stack levels used: 1
  8848 ;; Hardware stack levels required when called: 5
  8849 ;; This function calls:
  8850 ;;		Nothing
  8851 ;; This function is called by:
  8852 ;;		_LIN_setTimerHandler
  8853 ;;		_TMR0_Initialize
  8854 ;; This function uses a non-reentrant model
  8855 ;;
  8856                           
  8857     08EC                     _TMR0_SetInterruptHandler:	
  8858                           ;psect for function _TMR0_SetInterruptHandler
  8859                           
  8860                           
  8861                           ;mcc_generated_files/tmr0.c: 156:     TMR0_InterruptHandler = InterruptHandler;
  8862                           
  8863                           ;incstack = 0
  8864                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  8865     08EC  084F               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  8866     08ED  0141               	movlb	1	; select bank1
  8867     08EE  00EC               	movwf	(_TMR0_InterruptHandler+1)^(0+128)
  8868     08EF  0140               	movlb	0	; select bank0
  8869     08F0  084E               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  8870     08F1  0141               	movlb	1	; select bank1
  8871     08F2  00EB               	movwf	_TMR0_InterruptHandler^(0+128)
  8872     08F3  0008               	return
  8873     08F4                     __end_of_TMR0_SetInterruptHandler:
  8874                           
  8875                           	psect	text11
  8876     087C                     __ptext11:	
  8877 ;; *************** function _FVR_Initialize *****************
  8878 ;; Defined at:
  8879 ;;		line 58 in file "mcc_generated_files/fvr.c"
  8880 ;; Parameters:    Size  Location     Type
  8881 ;;		None
  8882 ;; Auto vars:     Size  Location     Type
  8883 ;;		None
  8884 ;; Return value:  Size  Location     Type
  8885 ;;                  1    wreg      void 
  8886 ;; Registers used:
  8887 ;;		wreg
  8888 ;; Tracked objects:
  8889 ;;		On entry : B3F/13
  8890 ;;		On exit  : B3F/12
  8891 ;;		Unchanged: B00/0
  8892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8896 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8897 ;;Total ram usage:        0 bytes
  8898 ;; Hardware stack levels used: 1
  8899 ;; Hardware stack levels required when called: 5
  8900 ;; This function calls:
  8901 ;;		Nothing
  8902 ;; This function is called by:
  8903 ;;		_SYSTEM_Initialize
  8904 ;; This function uses a non-reentrant model
  8905 ;;
  8906                           
  8907     087C                     _FVR_Initialize:	
  8908                           ;psect for function _FVR_Initialize
  8909                           
  8910                           
  8911                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0x84;
  8912                           
  8913                           ;incstack = 0
  8914                           ; Regs used in _FVR_Initialize: [wreg]
  8915     087C  3084               	movlw	132
  8916     087D  0152               	movlb	18	; select bank18
  8917     087E  008C               	movwf	12	;volatile
  8918     087F  0008               	return
  8919     0880                     __end_of_FVR_Initialize:
  8920                           
  8921                           	psect	text12
  8922     0C99                     __ptext12:	
  8923 ;; *************** function _EUSART1_Initialize *****************
  8924 ;; Defined at:
  8925 ;;		line 88 in file "mcc_generated_files/eusart1.c"
  8926 ;; Parameters:    Size  Location     Type
  8927 ;;		None
  8928 ;; Auto vars:     Size  Location     Type
  8929 ;;		None
  8930 ;; Return value:  Size  Location     Type
  8931 ;;                  1    wreg      void 
  8932 ;; Registers used:
  8933 ;;		wreg, status,2, status,0, pclath, cstack
  8934 ;; Tracked objects:
  8935 ;;		On entry : 3F/4
  8936 ;;		On exit  : 3F/E
  8937 ;;		Unchanged: 0/0
  8938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8942 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8943 ;;Total ram usage:        0 bytes
  8944 ;; Hardware stack levels used: 1
  8945 ;; Hardware stack levels required when called: 6
  8946 ;; This function calls:
  8947 ;;		_EUSART1_SetErrorHandler
  8948 ;;		_EUSART1_SetFramingErrorHandler
  8949 ;;		_EUSART1_SetOverrunErrorHandler
  8950 ;;		_EUSART1_SetRxInterruptHandler
  8951 ;;		_EUSART1_SetTxInterruptHandler
  8952 ;; This function is called by:
  8953 ;;		_SYSTEM_Initialize
  8954 ;; This function uses a non-reentrant model
  8955 ;;
  8956                           
  8957     0C99                     _EUSART1_Initialize:	
  8958                           ;psect for function _EUSART1_Initialize
  8959                           
  8960                           
  8961                           ;mcc_generated_files/eusart1.c: 91:     PIE3bits.RC1IE = 0;
  8962                           
  8963                           ;incstack = 0
  8964                           ; Regs used in _EUSART1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8965     0C99  014E               	movlb	14	; select bank14
  8966     0C9A  1299               	bcf	25,5	;volatile
  8967                           
  8968                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
  8969     0C9B  3066               	movlw	low _EUSART1_Receive_ISR
  8970     0C9C  0140               	movlb	0	; select bank0
  8971     0C9D  00CE               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
  8972     0C9E  300C               	movlw	high _EUSART1_Receive_ISR
  8973     0C9F  00CF               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
  8974     0CA0  3188  20DC  318C   	fcall	_EUSART1_SetRxInterruptHandler
  8975                           
  8976                           ;mcc_generated_files/eusart1.c: 93:     PIE3bits.TX1IE = 0;
  8977     0CA3  014E               	movlb	14	; select bank14
  8978     0CA4  1219               	bcf	25,4	;volatile
  8979                           
  8980                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
  8981     0CA5  30B8               	movlw	low _EUSART1_Transmit_ISR
  8982     0CA6  0140               	movlb	0	; select bank0
  8983     0CA7  00CE               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler
  8984     0CA8  300A               	movlw	high _EUSART1_Transmit_ISR
  8985     0CA9  00CF               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler+1
  8986     0CAA  3188  20E4  318C   	fcall	_EUSART1_SetTxInterruptHandler
  8987                           
  8988                           ;mcc_generated_files/eusart1.c: 98:     BAUD1CON = 0x08;
  8989     0CAD  3008               	movlw	8
  8990     0CAE  009F               	movwf	31	;volatile
  8991                           
  8992                           ;mcc_generated_files/eusart1.c: 101:     RC1STA = 0x90;
  8993     0CAF  3090               	movlw	144
  8994     0CB0  009D               	movwf	29	;volatile
  8995                           
  8996                           ;mcc_generated_files/eusart1.c: 104:     TX1STA = 0x24;
  8997     0CB1  3024               	movlw	36
  8998     0CB2  009E               	movwf	30	;volatile
  8999                           
  9000                           ;mcc_generated_files/eusart1.c: 107:     SP1BRGL = 0xA0;
  9001     0CB3  30A0               	movlw	160
  9002     0CB4  009B               	movwf	27	;volatile
  9003                           
  9004                           ;mcc_generated_files/eusart1.c: 110:     SP1BRGH = 0x01;
  9005     0CB5  3001               	movlw	1
  9006     0CB6  009C               	movwf	28	;volatile
  9007                           
  9008                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
  9009     0CB7  305E               	movlw	low _EUSART1_DefaultFramingErrorHandler
  9010     0CB8  0140               	movlb	0	; select bank0
  9011     0CB9  00CE               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler
  9012     0CBA  3008               	movlw	high _EUSART1_DefaultFramingErrorHandler
  9013     0CBB  00CF               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1
  9014     0CBC  3188  20CC  318C   	fcall	_EUSART1_SetFramingErrorHandler
  9015                           
  9016                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
  9017     0CBF  3067               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  9018     0CC0  0140               	movlb	0	; select bank0
  9019     0CC1  00CE               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler
  9020     0CC2  3008               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  9021     0CC3  00CF               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1
  9022     0CC4  3188  20D4  318C   	fcall	_EUSART1_SetOverrunErrorHandler
  9023                           
  9024                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
  9025     0CC7  3064               	movlw	low _EUSART1_DefaultErrorHandler
  9026     0CC8  0140               	movlb	0	; select bank0
  9027     0CC9  00CE               	movwf	EUSART1_SetErrorHandler@interruptHandler
  9028     0CCA  3008               	movlw	high _EUSART1_DefaultErrorHandler
  9029     0CCB  00CF               	movwf	EUSART1_SetErrorHandler@interruptHandler+1
  9030     0CCC  3188  20C4         	fcall	_EUSART1_SetErrorHandler
  9031                           
  9032                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
  9033     0CCE  0140               	movlb	0	; select bank0
  9034     0CCF  01A2               	clrf	_eusart1RxLastError	;volatile
  9035                           
  9036                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
  9037     0CD0  01A6               	clrf	_eusart1TxHead	;volatile
  9038                           
  9039                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
  9040     0CD1  01A5               	clrf	_eusart1TxTail	;volatile
  9041                           
  9042                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
  9043     0CD2  3008               	movlw	8
  9044     0CD3  00A4               	movwf	_eusart1TxBufferRemaining	;volatile
  9045                           
  9046                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
  9047     0CD4  01F3               	clrf	_eusart1RxHead	;volatile
  9048                           
  9049                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
  9050     0CD5  01F2               	clrf	_eusart1RxTail	;volatile
  9051                           
  9052                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
  9053     0CD6  01A3               	clrf	_eusart1RxCount	;volatile
  9054                           
  9055                           ;mcc_generated_files/eusart1.c: 129:     PIE3bits.RC1IE = 1;
  9056     0CD7  014E               	movlb	14	; select bank14
  9057     0CD8  1699               	bsf	25,5	;volatile
  9058     0CD9  0008               	return
  9059     0CDA                     __end_of_EUSART1_Initialize:
  9060                           
  9061                           	psect	text13
  9062     08E4                     __ptext13:	
  9063 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  9064 ;; Defined at:
  9065 ;;		line 276 in file "mcc_generated_files/eusart1.c"
  9066 ;; Parameters:    Size  Location     Type
  9067 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9068 ;;		 -> EUSART1_Transmit_ISR(1), 
  9069 ;; Auto vars:     Size  Location     Type
  9070 ;;		None
  9071 ;; Return value:  Size  Location     Type
  9072 ;;                  1    wreg      void 
  9073 ;; Registers used:
  9074 ;;		wreg
  9075 ;; Tracked objects:
  9076 ;;		On entry : 3F/0
  9077 ;;		On exit  : 3F/2
  9078 ;;		Unchanged: 0/0
  9079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9080 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9083 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9084 ;;Total ram usage:        2 bytes
  9085 ;; Hardware stack levels used: 1
  9086 ;; Hardware stack levels required when called: 5
  9087 ;; This function calls:
  9088 ;;		Nothing
  9089 ;; This function is called by:
  9090 ;;		_EUSART1_Initialize
  9091 ;; This function uses a non-reentrant model
  9092 ;;
  9093                           
  9094     08E4                     _EUSART1_SetTxInterruptHandler:	
  9095                           ;psect for function _EUSART1_SetTxInterruptHandler
  9096                           
  9097                           
  9098                           ;mcc_generated_files/eusart1.c: 277:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  9099                           
  9100                           ;incstack = 0
  9101                           ; Regs used in _EUSART1_SetTxInterruptHandler: [wreg]
  9102     08E4  084F               	movf	EUSART1_SetTxInterruptHandler@interruptHandler+1,w
  9103     08E5  0142               	movlb	2	; select bank2
  9104     08E6  00EB               	movwf	(_EUSART1_TxDefaultInterruptHandler+1)^(0+256)
  9105     08E7  0140               	movlb	0	; select bank0
  9106     08E8  084E               	movf	EUSART1_SetTxInterruptHandler@interruptHandler,w
  9107     08E9  0142               	movlb	2	; select bank2
  9108     08EA  00EA               	movwf	_EUSART1_TxDefaultInterruptHandler^(0+256)
  9109     08EB  0008               	return
  9110     08EC                     __end_of_EUSART1_SetTxInterruptHandler:
  9111                           
  9112                           	psect	text14
  9113     08DC                     __ptext14:	
  9114 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  9115 ;; Defined at:
  9116 ;;		line 280 in file "mcc_generated_files/eusart1.c"
  9117 ;; Parameters:    Size  Location     Type
  9118 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9119 ;;		 -> EUSART1_Receive_ISR(1), 
  9120 ;; Auto vars:     Size  Location     Type
  9121 ;;		None
  9122 ;; Return value:  Size  Location     Type
  9123 ;;                  1    wreg      void 
  9124 ;; Registers used:
  9125 ;;		wreg
  9126 ;; Tracked objects:
  9127 ;;		On entry : 3F/0
  9128 ;;		On exit  : 3F/2
  9129 ;;		Unchanged: 0/0
  9130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9131 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9134 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9135 ;;Total ram usage:        2 bytes
  9136 ;; Hardware stack levels used: 1
  9137 ;; Hardware stack levels required when called: 5
  9138 ;; This function calls:
  9139 ;;		Nothing
  9140 ;; This function is called by:
  9141 ;;		_EUSART1_Initialize
  9142 ;; This function uses a non-reentrant model
  9143 ;;
  9144                           
  9145     08DC                     _EUSART1_SetRxInterruptHandler:	
  9146                           ;psect for function _EUSART1_SetRxInterruptHandler
  9147                           
  9148                           
  9149                           ;mcc_generated_files/eusart1.c: 281:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  9150                           
  9151                           ;incstack = 0
  9152                           ; Regs used in _EUSART1_SetRxInterruptHandler: [wreg]
  9153     08DC  084F               	movf	EUSART1_SetRxInterruptHandler@interruptHandler+1,w
  9154     08DD  0142               	movlb	2	; select bank2
  9155     08DE  00E9               	movwf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+256)
  9156     08DF  0140               	movlb	0	; select bank0
  9157     08E0  084E               	movf	EUSART1_SetRxInterruptHandler@interruptHandler,w
  9158     08E1  0142               	movlb	2	; select bank2
  9159     08E2  00E8               	movwf	_EUSART1_RxDefaultInterruptHandler^(0+256)
  9160     08E3  0008               	return
  9161     08E4                     __end_of_EUSART1_SetRxInterruptHandler:
  9162                           
  9163                           	psect	text15
  9164     08D4                     __ptext15:	
  9165 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  9166 ;; Defined at:
  9167 ;;		line 268 in file "mcc_generated_files/eusart1.c"
  9168 ;; Parameters:    Size  Location     Type
  9169 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9170 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  9171 ;; Auto vars:     Size  Location     Type
  9172 ;;		None
  9173 ;; Return value:  Size  Location     Type
  9174 ;;                  1    wreg      void 
  9175 ;; Registers used:
  9176 ;;		wreg
  9177 ;; Tracked objects:
  9178 ;;		On entry : 3F/0
  9179 ;;		On exit  : 3F/2
  9180 ;;		Unchanged: 0/0
  9181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9182 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9185 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9186 ;;Total ram usage:        2 bytes
  9187 ;; Hardware stack levels used: 1
  9188 ;; Hardware stack levels required when called: 5
  9189 ;; This function calls:
  9190 ;;		Nothing
  9191 ;; This function is called by:
  9192 ;;		_EUSART1_Initialize
  9193 ;; This function uses a non-reentrant model
  9194 ;;
  9195                           
  9196     08D4                     _EUSART1_SetOverrunErrorHandler:	
  9197                           ;psect for function _EUSART1_SetOverrunErrorHandler
  9198                           
  9199                           
  9200                           ;mcc_generated_files/eusart1.c: 269:     EUSART1_OverrunErrorHandler = interruptHandler;
  9201                           
  9202                           ;incstack = 0
  9203                           ; Regs used in _EUSART1_SetOverrunErrorHandler: [wreg]
  9204     08D4  084F               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,w
  9205     08D5  0142               	movlb	2	; select bank2
  9206     08D6  00E5               	movwf	(_EUSART1_OverrunErrorHandler+1)^(0+256)
  9207     08D7  0140               	movlb	0	; select bank0
  9208     08D8  084E               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler,w
  9209     08D9  0142               	movlb	2	; select bank2
  9210     08DA  00E4               	movwf	_EUSART1_OverrunErrorHandler^(0+256)
  9211     08DB  0008               	return
  9212     08DC                     __end_of_EUSART1_SetOverrunErrorHandler:
  9213                           
  9214                           	psect	text16
  9215     08CC                     __ptext16:	
  9216 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  9217 ;; Defined at:
  9218 ;;		line 264 in file "mcc_generated_files/eusart1.c"
  9219 ;; Parameters:    Size  Location     Type
  9220 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9221 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  9222 ;; Auto vars:     Size  Location     Type
  9223 ;;		None
  9224 ;; Return value:  Size  Location     Type
  9225 ;;                  1    wreg      void 
  9226 ;; Registers used:
  9227 ;;		wreg
  9228 ;; Tracked objects:
  9229 ;;		On entry : 3F/0
  9230 ;;		On exit  : 3F/2
  9231 ;;		Unchanged: 0/0
  9232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9233 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9236 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9237 ;;Total ram usage:        2 bytes
  9238 ;; Hardware stack levels used: 1
  9239 ;; Hardware stack levels required when called: 5
  9240 ;; This function calls:
  9241 ;;		Nothing
  9242 ;; This function is called by:
  9243 ;;		_EUSART1_Initialize
  9244 ;; This function uses a non-reentrant model
  9245 ;;
  9246                           
  9247     08CC                     _EUSART1_SetFramingErrorHandler:	
  9248                           ;psect for function _EUSART1_SetFramingErrorHandler
  9249                           
  9250                           
  9251                           ;mcc_generated_files/eusart1.c: 265:     EUSART1_FramingErrorHandler = interruptHandler;
  9252                           
  9253                           ;incstack = 0
  9254                           ; Regs used in _EUSART1_SetFramingErrorHandler: [wreg]
  9255     08CC  084F               	movf	EUSART1_SetFramingErrorHandler@interruptHandler+1,w
  9256     08CD  0142               	movlb	2	; select bank2
  9257     08CE  00E7               	movwf	(_EUSART1_FramingErrorHandler+1)^(0+256)
  9258     08CF  0140               	movlb	0	; select bank0
  9259     08D0  084E               	movf	EUSART1_SetFramingErrorHandler@interruptHandler,w
  9260     08D1  0142               	movlb	2	; select bank2
  9261     08D2  00E6               	movwf	_EUSART1_FramingErrorHandler^(0+256)
  9262     08D3  0008               	return
  9263     08D4                     __end_of_EUSART1_SetFramingErrorHandler:
  9264                           
  9265                           	psect	text17
  9266     08C4                     __ptext17:	
  9267 ;; *************** function _EUSART1_SetErrorHandler *****************
  9268 ;; Defined at:
  9269 ;;		line 272 in file "mcc_generated_files/eusart1.c"
  9270 ;; Parameters:    Size  Location     Type
  9271 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9272 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  9273 ;; Auto vars:     Size  Location     Type
  9274 ;;		None
  9275 ;; Return value:  Size  Location     Type
  9276 ;;                  1    wreg      void 
  9277 ;; Registers used:
  9278 ;;		wreg
  9279 ;; Tracked objects:
  9280 ;;		On entry : 3F/0
  9281 ;;		On exit  : 3F/2
  9282 ;;		Unchanged: 0/0
  9283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9284 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9287 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9288 ;;Total ram usage:        2 bytes
  9289 ;; Hardware stack levels used: 1
  9290 ;; Hardware stack levels required when called: 5
  9291 ;; This function calls:
  9292 ;;		Nothing
  9293 ;; This function is called by:
  9294 ;;		_EUSART1_Initialize
  9295 ;; This function uses a non-reentrant model
  9296 ;;
  9297                           
  9298     08C4                     _EUSART1_SetErrorHandler:	
  9299                           ;psect for function _EUSART1_SetErrorHandler
  9300                           
  9301                           
  9302                           ;mcc_generated_files/eusart1.c: 273:     EUSART1_ErrorHandler = interruptHandler;
  9303                           
  9304                           ;incstack = 0
  9305                           ; Regs used in _EUSART1_SetErrorHandler: [wreg]
  9306     08C4  084F               	movf	EUSART1_SetErrorHandler@interruptHandler+1,w
  9307     08C5  0142               	movlb	2	; select bank2
  9308     08C6  00E3               	movwf	(_EUSART1_ErrorHandler+1)^(0+256)
  9309     08C7  0140               	movlb	0	; select bank0
  9310     08C8  084E               	movf	EUSART1_SetErrorHandler@interruptHandler,w
  9311     08C9  0142               	movlb	2	; select bank2
  9312     08CA  00E2               	movwf	_EUSART1_ErrorHandler^(0+256)
  9313     08CB  0008               	return
  9314     08CC                     __end_of_EUSART1_SetErrorHandler:
  9315                           
  9316                           	psect	text18
  9317     089A                     __ptext18:	
  9318 ;; *************** function _DAC1_Initialize *****************
  9319 ;; Defined at:
  9320 ;;		line 58 in file "mcc_generated_files/dac1.c"
  9321 ;; Parameters:    Size  Location     Type
  9322 ;;		None
  9323 ;; Auto vars:     Size  Location     Type
  9324 ;;		None
  9325 ;; Return value:  Size  Location     Type
  9326 ;;                  1    wreg      void 
  9327 ;; Registers used:
  9328 ;;		wreg
  9329 ;; Tracked objects:
  9330 ;;		On entry : 3F/3C
  9331 ;;		On exit  : 3F/12
  9332 ;;		Unchanged: 0/0
  9333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9337 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9338 ;;Total ram usage:        0 bytes
  9339 ;; Hardware stack levels used: 1
  9340 ;; Hardware stack levels required when called: 5
  9341 ;; This function calls:
  9342 ;;		Nothing
  9343 ;; This function is called by:
  9344 ;;		_SYSTEM_Initialize
  9345 ;; This function uses a non-reentrant model
  9346 ;;
  9347                           
  9348     089A                     _DAC1_Initialize:	
  9349                           ;psect for function _DAC1_Initialize
  9350                           
  9351                           
  9352                           ;mcc_generated_files/dac1.c: 61:     DAC1CON0 = 0x88;
  9353                           
  9354                           ;incstack = 0
  9355                           ; Regs used in _DAC1_Initialize: [wreg]
  9356     089A  3088               	movlw	136
  9357     089B  0152               	movlb	18	; select bank18
  9358     089C  008E               	movwf	14	;volatile
  9359                           
  9360                           ;mcc_generated_files/dac1.c: 63:     DAC1CON1 = 0x02;
  9361     089D  3002               	movlw	2
  9362     089E  008F               	movwf	15	;volatile
  9363     089F  0008               	return
  9364     08A0                     __end_of_DAC1_Initialize:
  9365                           
  9366                           	psect	text19
  9367     090C                     __ptext19:	
  9368 ;; *************** function _CMP2_Initialize *****************
  9369 ;; Defined at:
  9370 ;;		line 58 in file "mcc_generated_files/cmp2.c"
  9371 ;; Parameters:    Size  Location     Type
  9372 ;;		None
  9373 ;; Auto vars:     Size  Location     Type
  9374 ;;		None
  9375 ;; Return value:  Size  Location     Type
  9376 ;;                  1    wreg      void 
  9377 ;; Registers used:
  9378 ;;		wreg
  9379 ;; Tracked objects:
  9380 ;;		On entry : B3F/11
  9381 ;;		On exit  : B3F/13
  9382 ;;		Unchanged: B00/0
  9383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9387 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9388 ;;Total ram usage:        0 bytes
  9389 ;; Hardware stack levels used: 1
  9390 ;; Hardware stack levels required when called: 5
  9391 ;; This function calls:
  9392 ;;		Nothing
  9393 ;; This function is called by:
  9394 ;;		_SYSTEM_Initialize
  9395 ;; This function uses a non-reentrant model
  9396 ;;
  9397                           
  9398     090C                     _CMP2_Initialize:	
  9399                           ;psect for function _CMP2_Initialize
  9400                           
  9401                           
  9402                           ;mcc_generated_files/cmp2.c: 62:     CM2CON0 = 0x90;
  9403                           
  9404                           ;incstack = 0
  9405                           ; Regs used in _CMP2_Initialize: [wreg]
  9406     090C  3090               	movlw	144
  9407     090D  0153               	movlb	19	; select bank19
  9408     090E  0094               	movwf	20	;volatile
  9409                           
  9410                           ;mcc_generated_files/cmp2.c: 65:     CM2CON1 = 0x02;
  9411     090F  3002               	movlw	2
  9412     0910  0095               	movwf	21	;volatile
  9413                           
  9414                           ;mcc_generated_files/cmp2.c: 68:     CM2NCH = 0x03;
  9415     0911  3003               	movlw	3
  9416     0912  0096               	movwf	22	;volatile
  9417                           
  9418                           ;mcc_generated_files/cmp2.c: 71:     CM2PCH = 0x05;
  9419     0913  3005               	movlw	5
  9420     0914  0097               	movwf	23	;volatile
  9421     0915  0008               	return
  9422     0916                     __end_of_CMP2_Initialize:
  9423                           
  9424                           	psect	text20
  9425     0997                     __ptext20:	
  9426 ;; *************** function _CLC4_Initialize *****************
  9427 ;; Defined at:
  9428 ;;		line 58 in file "mcc_generated_files/clc4.c"
  9429 ;; Parameters:    Size  Location     Type
  9430 ;;		None
  9431 ;; Auto vars:     Size  Location     Type
  9432 ;;		None
  9433 ;; Return value:  Size  Location     Type
  9434 ;;                  1    wreg      void 
  9435 ;; Registers used:
  9436 ;;		wreg, status,2
  9437 ;; Tracked objects:
  9438 ;;		On entry : 3F/3C
  9439 ;;		On exit  : 3F/3C
  9440 ;;		Unchanged: 0/0
  9441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9445 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9446 ;;Total ram usage:        0 bytes
  9447 ;; Hardware stack levels used: 1
  9448 ;; Hardware stack levels required when called: 5
  9449 ;; This function calls:
  9450 ;;		Nothing
  9451 ;; This function is called by:
  9452 ;;		_SYSTEM_Initialize
  9453 ;; This function uses a non-reentrant model
  9454 ;;
  9455                           
  9456     0997                     _CLC4_Initialize:	
  9457                           ;psect for function _CLC4_Initialize
  9458                           
  9459                           
  9460                           ;mcc_generated_files/clc4.c: 63:     CLC4POL = 0x00;
  9461                           
  9462                           ;incstack = 0
  9463                           ; Regs used in _CLC4_Initialize: [wreg+status,2]
  9464     0997  01AF               	clrf	47	;volatile
  9465                           
  9466                           ;mcc_generated_files/clc4.c: 65:     CLC4SEL0 = 0x0E;
  9467     0998  300E               	movlw	14
  9468     0999  00B0               	movwf	48	;volatile
  9469                           
  9470                           ;mcc_generated_files/clc4.c: 67:     CLC4SEL1 = 0x00;
  9471     099A  01B1               	clrf	49	;volatile
  9472                           
  9473                           ;mcc_generated_files/clc4.c: 69:     CLC4SEL2 = 0x00;
  9474     099B  01B2               	clrf	50	;volatile
  9475                           
  9476                           ;mcc_generated_files/clc4.c: 71:     CLC4SEL3 = 0x00;
  9477     099C  01B3               	clrf	51	;volatile
  9478                           
  9479                           ;mcc_generated_files/clc4.c: 73:     CLC4GLS0 = 0x02;
  9480     099D  3002               	movlw	2
  9481     099E  00B4               	movwf	52	;volatile
  9482                           
  9483                           ;mcc_generated_files/clc4.c: 75:     CLC4GLS1 = 0x02;
  9484     099F  3002               	movlw	2
  9485     09A0  00B5               	movwf	53	;volatile
  9486                           
  9487                           ;mcc_generated_files/clc4.c: 77:     CLC4GLS2 = 0x00;
  9488     09A1  01B6               	clrf	54	;volatile
  9489                           
  9490                           ;mcc_generated_files/clc4.c: 79:     CLC4GLS3 = 0x00;
  9491     09A2  01B7               	clrf	55	;volatile
  9492                           
  9493                           ;mcc_generated_files/clc4.c: 81:     CLC4CON = 0x80;
  9494     09A3  3080               	movlw	128
  9495     09A4  00AE               	movwf	46	;volatile
  9496     09A5  0008               	return
  9497     09A6                     __end_of_CLC4_Initialize:
  9498                           
  9499                           	psect	text21
  9500     09A6                     __ptext21:	
  9501 ;; *************** function _CLC3_Initialize *****************
  9502 ;; Defined at:
  9503 ;;		line 58 in file "mcc_generated_files/clc3.c"
  9504 ;; Parameters:    Size  Location     Type
  9505 ;;		None
  9506 ;; Auto vars:     Size  Location     Type
  9507 ;;		None
  9508 ;; Return value:  Size  Location     Type
  9509 ;;                  1    wreg      void 
  9510 ;; Registers used:
  9511 ;;		wreg, status,2
  9512 ;; Tracked objects:
  9513 ;;		On entry : 3F/1
  9514 ;;		On exit  : 3F/3C
  9515 ;;		Unchanged: 0/0
  9516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9521 ;;Total ram usage:        0 bytes
  9522 ;; Hardware stack levels used: 1
  9523 ;; Hardware stack levels required when called: 5
  9524 ;; This function calls:
  9525 ;;		Nothing
  9526 ;; This function is called by:
  9527 ;;		_SYSTEM_Initialize
  9528 ;; This function uses a non-reentrant model
  9529 ;;
  9530                           
  9531     09A6                     _CLC3_Initialize:	
  9532                           ;psect for function _CLC3_Initialize
  9533                           
  9534                           
  9535                           ;mcc_generated_files/clc3.c: 63:     CLC3POL = 0x00;
  9536                           
  9537                           ;incstack = 0
  9538                           ; Regs used in _CLC3_Initialize: [wreg+status,2]
  9539     09A6  017C               	movlb	60	; select bank60
  9540     09A7  01A5               	clrf	37	;volatile
  9541                           
  9542                           ;mcc_generated_files/clc3.c: 65:     CLC3SEL0 = 0x1A;
  9543     09A8  301A               	movlw	26
  9544     09A9  00A6               	movwf	38	;volatile
  9545                           
  9546                           ;mcc_generated_files/clc3.c: 67:     CLC3SEL1 = 0x05;
  9547     09AA  3005               	movlw	5
  9548     09AB  00A7               	movwf	39	;volatile
  9549                           
  9550                           ;mcc_generated_files/clc3.c: 69:     CLC3SEL2 = 0x00;
  9551     09AC  01A8               	clrf	40	;volatile
  9552                           
  9553                           ;mcc_generated_files/clc3.c: 71:     CLC3SEL3 = 0x00;
  9554     09AD  01A9               	clrf	41	;volatile
  9555                           
  9556                           ;mcc_generated_files/clc3.c: 73:     CLC3GLS0 = 0x01;
  9557     09AE  3001               	movlw	1
  9558     09AF  00AA               	movwf	42	;volatile
  9559                           
  9560                           ;mcc_generated_files/clc3.c: 75:     CLC3GLS1 = 0x08;
  9561     09B0  3008               	movlw	8
  9562     09B1  00AB               	movwf	43	;volatile
  9563                           
  9564                           ;mcc_generated_files/clc3.c: 77:     CLC3GLS2 = 0x00;
  9565     09B2  01AC               	clrf	44	;volatile
  9566                           
  9567                           ;mcc_generated_files/clc3.c: 79:     CLC3GLS3 = 0x00;
  9568     09B3  01AD               	clrf	45	;volatile
  9569                           
  9570                           ;mcc_generated_files/clc3.c: 81:     CLC3CON = 0x80;
  9571     09B4  3080               	movlw	128
  9572     09B5  00A4               	movwf	36	;volatile
  9573     09B6  0008               	return
  9574     09B7                     __end_of_CLC3_Initialize:
  9575                           
  9576                           	psect	text22
  9577     09CB                     __ptext22:	
  9578 ;; *************** function _CLC2_Initialize *****************
  9579 ;; Defined at:
  9580 ;;		line 58 in file "mcc_generated_files/clc2.c"
  9581 ;; Parameters:    Size  Location     Type
  9582 ;;		None
  9583 ;; Auto vars:     Size  Location     Type
  9584 ;;		None
  9585 ;; Return value:  Size  Location     Type
  9586 ;;                  1    wreg      void 
  9587 ;; Registers used:
  9588 ;;		wreg, status,2
  9589 ;; Tracked objects:
  9590 ;;		On entry : B3F/12
  9591 ;;		On exit  : B3F/E
  9592 ;;		Unchanged: B00/0
  9593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9597 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9598 ;;Total ram usage:        0 bytes
  9599 ;; Hardware stack levels used: 1
  9600 ;; Hardware stack levels required when called: 5
  9601 ;; This function calls:
  9602 ;;		Nothing
  9603 ;; This function is called by:
  9604 ;;		_SYSTEM_Initialize
  9605 ;; This function uses a non-reentrant model
  9606 ;;
  9607                           
  9608     09CB                     _CLC2_Initialize:	
  9609                           ;psect for function _CLC2_Initialize
  9610                           
  9611                           
  9612                           ;mcc_generated_files/clc2.c: 63:     CLC2POL = 0x00;
  9613                           
  9614                           ;incstack = 0
  9615                           ; Regs used in _CLC2_Initialize: [wreg+status,2]
  9616     09CB  017C               	movlb	60	; select bank60
  9617     09CC  019B               	clrf	27	;volatile
  9618                           
  9619                           ;mcc_generated_files/clc2.c: 65:     CLC2SEL0 = 0x0D;
  9620     09CD  300D               	movlw	13
  9621     09CE  009C               	movwf	28	;volatile
  9622                           
  9623                           ;mcc_generated_files/clc2.c: 67:     CLC2SEL1 = 0x0D;
  9624     09CF  300D               	movlw	13
  9625     09D0  009D               	movwf	29	;volatile
  9626                           
  9627                           ;mcc_generated_files/clc2.c: 69:     CLC2SEL2 = 0x0D;
  9628     09D1  300D               	movlw	13
  9629     09D2  009E               	movwf	30	;volatile
  9630                           
  9631                           ;mcc_generated_files/clc2.c: 71:     CLC2SEL3 = 0x0D;
  9632     09D3  300D               	movlw	13
  9633     09D4  009F               	movwf	31	;volatile
  9634                           
  9635                           ;mcc_generated_files/clc2.c: 73:     CLC2GLS0 = 0x02;
  9636     09D5  3002               	movlw	2
  9637     09D6  00A0               	movwf	32	;volatile
  9638                           
  9639                           ;mcc_generated_files/clc2.c: 75:     CLC2GLS1 = 0x00;
  9640     09D7  01A1               	clrf	33	;volatile
  9641                           
  9642                           ;mcc_generated_files/clc2.c: 77:     CLC2GLS2 = 0x00;
  9643     09D8  01A2               	clrf	34	;volatile
  9644                           
  9645                           ;mcc_generated_files/clc2.c: 79:     CLC2GLS3 = 0x00;
  9646     09D9  01A3               	clrf	35	;volatile
  9647                           
  9648                           ;mcc_generated_files/clc2.c: 81:     CLC2CON = 0x83;
  9649     09DA  3083               	movlw	131
  9650     09DB  009A               	movwf	26	;volatile
  9651                           
  9652                           ;mcc_generated_files/clc2.c: 84:     PIR5bits.CLC2IF = 0;
  9653     09DC  014E               	movlb	14	; select bank14
  9654     09DD  1291               	bcf	17,5	;volatile
  9655                           
  9656                           ;mcc_generated_files/clc2.c: 86:     PIE5bits.CLC2IE = 1;
  9657     09DE  169B               	bsf	27,5	;volatile
  9658     09DF  0008               	return
  9659     09E0                     __end_of_CLC2_Initialize:
  9660                           
  9661                           	psect	text23
  9662     09B7                     __ptext23:	
  9663 ;; *************** function _CLC1_Initialize *****************
  9664 ;; Defined at:
  9665 ;;		line 58 in file "mcc_generated_files/clc1.c"
  9666 ;; Parameters:    Size  Location     Type
  9667 ;;		None
  9668 ;; Auto vars:     Size  Location     Type
  9669 ;;		None
  9670 ;; Return value:  Size  Location     Type
  9671 ;;                  1    wreg      void 
  9672 ;; Registers used:
  9673 ;;		wreg, status,2
  9674 ;; Tracked objects:
  9675 ;;		On entry : 3F/B
  9676 ;;		On exit  : 3F/3C
  9677 ;;		Unchanged: 0/0
  9678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9682 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9683 ;;Total ram usage:        0 bytes
  9684 ;; Hardware stack levels used: 1
  9685 ;; Hardware stack levels required when called: 5
  9686 ;; This function calls:
  9687 ;;		Nothing
  9688 ;; This function is called by:
  9689 ;;		_SYSTEM_Initialize
  9690 ;; This function uses a non-reentrant model
  9691 ;;
  9692                           
  9693     09B7                     _CLC1_Initialize:	
  9694                           ;psect for function _CLC1_Initialize
  9695                           
  9696                           
  9697                           ;mcc_generated_files/clc1.c: 63:     CLC1POL = 0x88;
  9698                           
  9699                           ;incstack = 0
  9700                           ; Regs used in _CLC1_Initialize: [wreg+status,2]
  9701     09B7  3088               	movlw	136
  9702     09B8  017C               	movlb	60	; select bank60
  9703     09B9  0091               	movwf	17	;volatile
  9704                           
  9705                           ;mcc_generated_files/clc1.c: 65:     CLC1SEL0 = 0x17;
  9706     09BA  3017               	movlw	23
  9707     09BB  0092               	movwf	18	;volatile
  9708                           
  9709                           ;mcc_generated_files/clc1.c: 67:     CLC1SEL1 = 0x17;
  9710     09BC  3017               	movlw	23
  9711     09BD  0093               	movwf	19	;volatile
  9712                           
  9713                           ;mcc_generated_files/clc1.c: 69:     CLC1SEL2 = 0x0E;
  9714     09BE  300E               	movlw	14
  9715     09BF  0094               	movwf	20	;volatile
  9716                           
  9717                           ;mcc_generated_files/clc1.c: 71:     CLC1SEL3 = 0x1B;
  9718     09C0  301B               	movlw	27
  9719     09C1  0095               	movwf	21	;volatile
  9720                           
  9721                           ;mcc_generated_files/clc1.c: 73:     CLC1GLS0 = 0x02;
  9722     09C2  3002               	movlw	2
  9723     09C3  0096               	movwf	22	;volatile
  9724                           
  9725                           ;mcc_generated_files/clc1.c: 75:     CLC1GLS1 = 0x00;
  9726     09C4  0197               	clrf	23	;volatile
  9727                           
  9728                           ;mcc_generated_files/clc1.c: 77:     CLC1GLS2 = 0x00;
  9729     09C5  0198               	clrf	24	;volatile
  9730                           
  9731                           ;mcc_generated_files/clc1.c: 79:     CLC1GLS3 = 0x90;
  9732     09C6  3090               	movlw	144
  9733     09C7  0099               	movwf	25	;volatile
  9734                           
  9735                           ;mcc_generated_files/clc1.c: 81:     CLC1CON = 0x03;
  9736     09C8  3003               	movlw	3
  9737     09C9  0090               	movwf	16	;volatile
  9738     09CA  0008               	return
  9739     09CB                     __end_of_CLC1_Initialize:
  9740                           
  9741                           	psect	text24
  9742     08BC                     __ptext24:	
  9743 ;; *************** function _ADC_Initialize *****************
  9744 ;; Defined at:
  9745 ;;		line 67 in file "mcc_generated_files/adc.c"
  9746 ;; Parameters:    Size  Location     Type
  9747 ;;		None
  9748 ;; Auto vars:     Size  Location     Type
  9749 ;;		None
  9750 ;; Return value:  Size  Location     Type
  9751 ;;                  1    wreg      void 
  9752 ;; Registers used:
  9753 ;;		wreg, status,2
  9754 ;; Tracked objects:
  9755 ;;		On entry : 3F/3C
  9756 ;;		On exit  : 3F/1
  9757 ;;		Unchanged: 0/0
  9758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9762 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9763 ;;Total ram usage:        0 bytes
  9764 ;; Hardware stack levels used: 1
  9765 ;; Hardware stack levels required when called: 5
  9766 ;; This function calls:
  9767 ;;		Nothing
  9768 ;; This function is called by:
  9769 ;;		_SYSTEM_Initialize
  9770 ;; This function uses a non-reentrant model
  9771 ;;
  9772                           
  9773     08BC                     _ADC_Initialize:	
  9774                           ;psect for function _ADC_Initialize
  9775                           
  9776                           
  9777                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0xF0;
  9778                           
  9779                           ;incstack = 0
  9780                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  9781     08BC  30F0               	movlw	240
  9782     08BD  0141               	movlb	1	; select bank1
  9783     08BE  009E               	movwf	30	;volatile
  9784                           
  9785                           ;mcc_generated_files/adc.c: 75:     ADRESL = 0x00;
  9786     08BF  019B               	clrf	27	;volatile
  9787                           
  9788                           ;mcc_generated_files/adc.c: 78:     ADRESH = 0x00;
  9789     08C0  019C               	clrf	28	;volatile
  9790                           
  9791                           ;mcc_generated_files/adc.c: 81:     ADCON0 = 0x01;
  9792     08C1  3001               	movlw	1
  9793     08C2  009D               	movwf	29	;volatile
  9794     08C3  0008               	return
  9795     08C4                     __end_of_ADC_Initialize:
  9796                           
  9797                           	psect	text25
  9798     0399                     __ptext25:	
  9799 ;; *************** function _LIN_handler *****************
  9800 ;; Defined at:
  9801 ;;		line 91 in file "mcc_generated_files/LINDrivers/lin_slave.c"
  9802 ;; Parameters:    Size  Location     Type
  9803 ;;		None
  9804 ;; Auto vars:     Size  Location     Type
  9805 ;;		None
  9806 ;; Return value:  Size  Location     Type
  9807 ;;                  1    wreg      enum E204
  9808 ;; Registers used:
  9809 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9810 ;; Tracked objects:
  9811 ;;		On entry : 3C/0
  9812 ;;		On exit  : 0/0
  9813 ;;		Unchanged: 0/0
  9814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9817 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9818 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9819 ;;Total ram usage:        3 bytes
  9820 ;; Hardware stack levels used: 1
  9821 ;; Hardware stack levels required when called: 9
  9822 ;; This function calls:
  9823 ;;		NULL
  9824 ;;		_EUSART1_Read
  9825 ;;		_EUSART1_is_rx_ready
  9826 ;;		_LIN_breakCheck
  9827 ;;		_LIN_checkPID
  9828 ;;		_LIN_disableRx
  9829 ;;		_LIN_enableRx
  9830 ;;		_LIN_getChecksum
  9831 ;;		_LIN_getFromTable
  9832 ;;		_LIN_queuePacket
  9833 ;;		_LIN_startTimer
  9834 ;;		_LIN_stopTimer
  9835 ;;		_memset
  9836 ;;		_processLIN
  9837 ;; This function is called by:
  9838 ;;		_main
  9839 ;; This function uses a non-reentrant model
  9840 ;;
  9841                           
  9842     0399                     _LIN_handler:	
  9843                           ;psect for function _LIN_handler
  9844                           
  9845                           
  9846                           ;mcc_generated_files/LINDrivers/lin_slave.c: 92:     static lin_rx_state_t LIN_rxState =
      +                           LIN_RX_IDLE;;mcc_generated_files/LINDrivers/lin_slave.c: 93:     static uint8_t rxDataI
      +                          ndex = 0;;mcc_generated_files/LINDrivers/lin_slave.c: 95:     if(LIN_rxInProgress == 1){
  9847                           
  9848                           ;incstack = 0
  9849                           ; Regs used in _LIN_handler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9850     0399  0140               	movlb	0	; select bank0
  9851     039A  032B               	decf	_LIN_rxInProgress,w
  9852     039B  1D03               	btfss	3,2
  9853     039C  2C74               	goto	l5324
  9854                           
  9855                           ;mcc_generated_files/LINDrivers/lin_slave.c: 96:         if(LIN_timerRunning == 0){
  9856     039D  082A               	movf	_LIN_timerRunning,w
  9857     039E  1D03               	btfss	3,2
  9858     039F  2C74               	goto	l5324
  9859                           
  9860                           ;mcc_generated_files/LINDrivers/lin_slave.c: 98:             LIN_rxState = LIN_RX_ERROR;
  9861     03A0  3008               	movlw	8
  9862     03A1  00A8               	movwf	LIN_handler@LIN_rxState
  9863     03A2  2C74               	goto	l5324
  9864     03A3                     l5238:
  9865                           
  9866                           ;mcc_generated_files/LINDrivers/lin_slave.c: 104:             if(EUSART1_is_rx_ready() >
      +                           0){
  9867     03A3  3188  20AC  3183   	fcall	_EUSART1_is_rx_ready
  9868     03A6  3A00               	xorlw	0
  9869     03A7  1903               	skipnz
  9870     03A8  0008               	return
  9871                           
  9872                           ;mcc_generated_files/LINDrivers/lin_slave.c: 106:                 LIN_startTimer(15);
  9873     03A9  300F               	movlw	15
  9874     03AA  3189  2143         	fcall	_LIN_startTimer
  9875                           
  9876                           ;mcc_generated_files/LINDrivers/lin_slave.c: 107:                 LIN_rxInProgress = 1;
  9877     03AC  01AB               	clrf	_LIN_rxInProgress
  9878     03AD  0AAB               	incf	_LIN_rxInProgress,f
  9879                           
  9880                           ;mcc_generated_files/LINDrivers/lin_slave.c: 108:                 LIN_rxState = LIN_RX_B
      +                          REAK;
  9881     03AE  01A8               	clrf	LIN_handler@LIN_rxState
  9882     03AF  0AA8               	incf	LIN_handler@LIN_rxState,f
  9883     03B0  0008               	return
  9884     03B1                     l5246:
  9885                           
  9886                           ;mcc_generated_files/LINDrivers/lin_slave.c: 112:             if(EUSART1_is_rx_ready() >
      +                           0){
  9887     03B1  3188  20AC  3183   	fcall	_EUSART1_is_rx_ready
  9888     03B4  3A00               	xorlw	0
  9889     03B5  1903               	skipnz
  9890     03B6  0008               	return
  9891                           
  9892                           ;mcc_generated_files/LINDrivers/lin_slave.c: 113:                 if(LIN_breakCheck() ==
      +                           1){
  9893     03B7  3189  2188  3183   	fcall	_LIN_breakCheck
  9894     03BA  3A01               	xorlw	1
  9895     03BB  1D03               	skipz
  9896     03BC  2BC0               	goto	l5252
  9897                           
  9898                           ;mcc_generated_files/LINDrivers/lin_slave.c: 114:                     LIN_rxState = LIN_
      +                          RX_SYNC;
  9899     03BD  3002               	movlw	2
  9900     03BE  00A8               	movwf	LIN_handler@LIN_rxState
  9901                           
  9902                           ;mcc_generated_files/LINDrivers/lin_slave.c: 115:                 } else {
  9903     03BF  0008               	return
  9904     03C0                     l5252:
  9905                           
  9906                           ;mcc_generated_files/LINDrivers/lin_slave.c: 116:                     LIN_rxState = LIN_
      +                          RX_ERROR;
  9907     03C0  3008               	movlw	8
  9908     03C1  0140               	movlb	0	; select bank0
  9909     03C2  00A8               	movwf	LIN_handler@LIN_rxState
  9910     03C3  0008               	return
  9911     03C4                     l5254:
  9912                           
  9913                           ;mcc_generated_files/LINDrivers/lin_slave.c: 121:             if(EUSART1_is_rx_ready() >
      +                           0){
  9914     03C4  3188  20AC  3183   	fcall	_EUSART1_is_rx_ready
  9915     03C7  3A00               	xorlw	0
  9916     03C8  1903               	skipnz
  9917     03C9  0008               	return
  9918                           
  9919                           ;mcc_generated_files/LINDrivers/lin_slave.c: 122:                 if(EUSART1_Read() == 0
      +                          x55){
  9920     03CA  318B  233C  3183   	fcall	_EUSART1_Read
  9921     03CD  3A55               	xorlw	85
  9922     03CE  1D03               	skipz
  9923     03CF  2BC0               	goto	l5252
  9924                           
  9925                           ;mcc_generated_files/LINDrivers/lin_slave.c: 123:                     LIN_rxState = LIN_
      +                          RX_PID;
  9926     03D0  3003               	movlw	3
  9927     03D1  00A8               	movwf	LIN_handler@LIN_rxState
  9928                           
  9929                           ;mcc_generated_files/LINDrivers/lin_slave.c: 124:                 } else {
  9930     03D2  0008               	return
  9931     03D3                     l5262:
  9932                           
  9933                           ;mcc_generated_files/LINDrivers/lin_slave.c: 130:             if(EUSART1_is_rx_ready() >
      +                           0){
  9934     03D3  3188  20AC  3183   	fcall	_EUSART1_is_rx_ready
  9935     03D6  3A00               	xorlw	0
  9936     03D7  1903               	skipnz
  9937     03D8  0008               	return
  9938                           
  9939                           ;mcc_generated_files/LINDrivers/lin_slave.c: 131:                 LIN_packet.PID = EUSAR
      +                          T1_Read();
  9940     03D9  318B  233C  3183   	fcall	_EUSART1_Read
  9941     03DC  0141               	movlb	1	; select bank1
  9942     03DD  00B8               	movwf	_LIN_packet^(0+128)
  9943                           
  9944                           ;mcc_generated_files/LINDrivers/lin_slave.c: 134:                 if(LIN_checkPID(LIN_pa
      +                          cket.PID) == 0){
  9945     03DE  0838               	movf	_LIN_packet^(0+128),w
  9946     03DF  318A  2223  3183   	fcall	_LIN_checkPID
  9947     03E2  3A00               	xorlw	0
  9948     03E3  1903               	btfsc	3,2
  9949     03E4  2BC0               	goto	l5252
  9950                           
  9951                           ;mcc_generated_files/LINDrivers/lin_slave.c: 138:                 LIN_packet.type = LIN_
      +                          getFromTable(LIN_packet.PID, TYPE);
  9952     03E5  01CE               	clrf	LIN_getFromTable@param
  9953     03E6  0ACE               	incf	LIN_getFromTable@param,f
  9954     03E7  0141               	movlb	1	; select bank1
  9955     03E8  0838               	movf	_LIN_packet^(0+128),w
  9956     03E9  318E  2646  3183   	fcall	_LIN_getFromTable
  9957     03EC  0141               	movlb	1	; select bank1
  9958     03ED  00C2               	movwf	(_LIN_packet^(0+128)+10)
  9959                           
  9960                           ;mcc_generated_files/LINDrivers/lin_slave.c: 139:                 if(LIN_packet.type == 
      +                          RECEIVE){
  9961     03EE  0342               	decf	(_LIN_packet^(0+128)+10),w
  9962     03EF  1D03               	btfss	3,2
  9963     03F0  2BFE               	goto	l5278
  9964                           
  9965                           ;mcc_generated_files/LINDrivers/lin_slave.c: 140:                     LIN_packet.length 
      +                          = LIN_getFromTable(LIN_packet.PID, LENGTH);
  9966     03F1  3002               	movlw	2
  9967     03F2  0140               	movlb	0	; select bank0
  9968     03F3  00CE               	movwf	LIN_getFromTable@param
  9969     03F4  0141               	movlb	1	; select bank1
  9970     03F5  0838               	movf	_LIN_packet^(0+128),w
  9971     03F6  318E  2646         	fcall	_LIN_getFromTable
  9972     03F8  0141               	movlb	1	; select bank1
  9973     03F9  00C3               	movwf	(_LIN_packet^(0+128)+11)
  9974                           
  9975                           ;mcc_generated_files/LINDrivers/lin_slave.c: 141:                     LIN_rxState = LIN_
      +                          RX_DATA;
  9976     03FA  3004               	movlw	4
  9977     03FB  0140               	movlb	0	; select bank0
  9978     03FC  00A8               	movwf	LIN_handler@LIN_rxState
  9979                           
  9980                           ;mcc_generated_files/LINDrivers/lin_slave.c: 142:                 }
  9981     03FD  0008               	return
  9982     03FE                     l5278:
  9983                           
  9984                           ;mcc_generated_files/LINDrivers/lin_slave.c: 144:                     LIN_disableRx();
  9985     03FE  3188  2085         	fcall	_LIN_disableRx
  9986                           
  9987                           ;mcc_generated_files/LINDrivers/lin_slave.c: 145:                     LIN_rxState = LIN_
      +                          RX_TX_DATA;
  9988     0400  3006               	movlw	6
  9989     0401  0140               	movlb	0	; select bank0
  9990     0402  00A8               	movwf	LIN_handler@LIN_rxState
  9991     0403  0008               	return
  9992     0404                     l5282:
  9993                           
  9994                           ;mcc_generated_files/LINDrivers/lin_slave.c: 150:             if(EUSART1_is_rx_ready() >
      +                           0){
  9995     0404  3188  20AC  3183   	fcall	_EUSART1_is_rx_ready
  9996     0407  3A00               	xorlw	0
  9997     0408  1903               	skipnz
  9998     0409  0008               	return
  9999                           
 10000                           ;mcc_generated_files/LINDrivers/lin_slave.c: 151:                 LIN_packet.data[rxData
      +                          Index] = EUSART1_Read();
 10001     040A  318B  233C  3183   	fcall	_EUSART1_Read
 10002     040D  00E2               	movwf	??_LIN_handler
 10003     040E  0827               	movf	LIN_handler@rxDataIndex,w
 10004     040F  3EB9               	addlw	(low ((_LIN_packet| 0+1)))& (0+255)
 10005     0410  0086               	movwf	6
 10006     0411  0187               	clrf	7
 10007     0412  0862               	movf	??_LIN_handler,w
 10008     0413  0081               	movwf	1
 10009                           
 10010                           ;mcc_generated_files/LINDrivers/lin_slave.c: 152:                 if(++rxDataIndex >= LI
      +                          N_packet.length){
 10011     0414  0141               	movlb	1	; select bank1
 10012     0415  0843               	movf	(_LIN_packet^(0+128)+11),w
 10013     0416  0140               	movlb	0	; select bank0
 10014     0417  00E2               	movwf	??_LIN_handler
 10015     0418  01E3               	clrf	??_LIN_handler+1
 10016     0419  1BE2               	btfsc	??_LIN_handler,7
 10017     041A  03E3               	decf	??_LIN_handler+1,f
 10018     041B  3001               	movlw	1
 10019     041C  00E4               	movwf	??_LIN_handler+2
 10020     041D  0864               	movf	??_LIN_handler+2,w
 10021     041E  07A7               	addwf	LIN_handler@rxDataIndex,f
 10022     041F  0863               	movf	??_LIN_handler+1,w
 10023     0420  3A80               	xorlw	128
 10024     0421  3C80               	sublw	128
 10025     0422  1D03               	skipz
 10026     0423  2C26               	goto	u3345
 10027     0424  0862               	movf	??_LIN_handler,w
 10028     0425  0227               	subwf	LIN_handler@rxDataIndex,w
 10029     0426                     u3345:
 10030     0426  1C03               	skipc
 10031     0427  0008               	return
 10032                           
 10033                           ;mcc_generated_files/LINDrivers/lin_slave.c: 154:                     rxDataIndex = 0;
 10034     0428  0140               	movlb	0	; select bank0
 10035     0429  01A7               	clrf	LIN_handler@rxDataIndex
 10036                           
 10037                           ;mcc_generated_files/LINDrivers/lin_slave.c: 155:                     LIN_rxState = LIN_
      +                          RX_CHECKSUM;
 10038     042A  3005               	movlw	5
 10039     042B  00A8               	movwf	LIN_handler@LIN_rxState
 10040     042C  0008               	return
 10041     042D                     l5292:
 10042                           
 10043                           ;mcc_generated_files/LINDrivers/lin_slave.c: 160:             if(EUSART1_is_rx_ready() >
      +                           0){
 10044     042D  3188  20AC  3183   	fcall	_EUSART1_is_rx_ready
 10045     0430  3A00               	xorlw	0
 10046     0431  1903               	skipnz
 10047     0432  0008               	return
 10048                           
 10049                           ;mcc_generated_files/LINDrivers/lin_slave.c: 161:                 LIN_packet.checksum = 
      +                          EUSART1_Read();
 10050     0433  318B  233C  3183   	fcall	_EUSART1_Read
 10051     0436  0141               	movlb	1	; select bank1
 10052     0437  00C1               	movwf	(_LIN_packet^(0+128)+9)
 10053                           
 10054                           ;mcc_generated_files/LINDrivers/lin_slave.c: 162:                 if(LIN_packet.checksum
      +                           != LIN_getChecksum(LIN_packet.length, LIN_packet.PID, LIN_packet.data)) {
 10055     0438  0838               	movf	_LIN_packet^(0+128),w
 10056     0439  0140               	movlb	0	; select bank0
 10057     043A  00CE               	movwf	LIN_getChecksum@pid
 10058     043B  30B9               	movlw	(low ((_LIN_packet| 0+1)))& (0+255)
 10059     043C  00CF               	movwf	LIN_getChecksum@data
 10060     043D  0141               	movlb	1	; select bank1
 10061     043E  0843               	movf	(_LIN_packet^(0+128)+11),w
 10062     043F  318C  2406  3183   	fcall	_LIN_getChecksum
 10063     0442  0141               	movlb	1	; select bank1
 10064     0443  0641               	xorwf	(_LIN_packet^(0+128)+9),w
 10065     0444  1D03               	btfss	3,2
 10066     0445  2BC0               	goto	l5252
 10067                           
 10068                           ;mcc_generated_files/LINDrivers/lin_slave.c: 166:                     LIN_rxState = LIN_
      +                          RX_RDY;
 10069     0446  3007               	movlw	7
 10070     0447  0140               	movlb	0	; select bank0
 10071     0448  00A8               	movwf	LIN_handler@LIN_rxState
 10072     0449  0008               	return
 10073     044A                     l5300:
 10074                           
 10075                           ;mcc_generated_files/LINDrivers/lin_slave.c: 171:             LIN_queuePacket(LIN_packet
      +                          .PID);
 10076     044A  0141               	movlb	1	; select bank1
 10077     044B  0838               	movf	_LIN_packet^(0+128),w
 10078     044C  318F  2713  3183   	fcall	_LIN_queuePacket
 10079                           
 10080                           ;mcc_generated_files/LINDrivers/lin_slave.c: 172:             LIN_rxState = LIN_RX_RDY;
 10081     044F  3007               	movlw	7
 10082     0450  0140               	movlb	0	; select bank0
 10083     0451  00A8               	movwf	LIN_handler@LIN_rxState
 10084     0452                     l5304:
 10085                           
 10086                           ;mcc_generated_files/LINDrivers/lin_slave.c: 174:             LIN_processData();
 10087     0452  0142               	movlb	2	; select bank2
 10088     0453  086D               	movf	(_LIN_processData+1)^(0+256),w
 10089     0454  008A               	movwf	10
 10090     0455  086C               	movf	_LIN_processData^(0+256),w
 10091     0456  000A               	callw
 10092     0457  3183               	pagesel	$
 10093     0458                     l5306:
 10094                           
 10095                           ;mcc_generated_files/LINDrivers/lin_slave.c: 176:             LIN_stopTimer();
 10096     0458  3188  208F  3183   	fcall	_LIN_stopTimer
 10097                           
 10098                           ;mcc_generated_files/LINDrivers/lin_slave.c: 177:             rxDataIndex = 0;
 10099     045B  01A7               	clrf	LIN_handler@rxDataIndex
 10100                           
 10101                           ;mcc_generated_files/LINDrivers/lin_slave.c: 178:             LIN_rxInProgress = 0;
 10102     045C  01AB               	clrf	_LIN_rxInProgress
 10103                           
 10104                           ;mcc_generated_files/LINDrivers/lin_slave.c: 179:             memset(LIN_packet.rawPacke
      +                          t, 0, sizeof(LIN_packet.rawPacket));
 10105     045D  3000               	movlw	0
 10106     045E  00CE               	movwf	memset@c
 10107     045F  00CF               	movwf	memset@c+1
 10108     0460  300D               	movlw	13
 10109     0461  00D0               	movwf	memset@n
 10110     0462  3000               	movlw	0
 10111     0463  00D1               	movwf	memset@n+1
 10112     0464  30B8               	movlw	(low (_LIN_packet| 0))& (0+255)
 10113     0465  3189  21F6  3183   	fcall	_memset
 10114     0468                     l5314:
 10115                           
 10116                           ;mcc_generated_files/LINDrivers/lin_slave.c: 181:             if(TX1STAbits.TRMT){
 10117     0468  0142               	movlb	2	; select bank2
 10118     0469  1C9E               	btfss	30,1	;volatile
 10119     046A  2C70               	goto	l5320
 10120                           
 10121                           ;mcc_generated_files/LINDrivers/lin_slave.c: 182:                 LIN_enableRx();
 10122     046B  3188  208A         	fcall	_LIN_enableRx
 10123                           
 10124                           ;mcc_generated_files/LINDrivers/lin_slave.c: 183:                 LIN_rxState = LIN_RX_I
      +                          DLE;
 10125     046D  0140               	movlb	0	; select bank0
 10126     046E  01A8               	clrf	LIN_handler@LIN_rxState
 10127                           
 10128                           ;mcc_generated_files/LINDrivers/lin_slave.c: 184:             } else {
 10129     046F  0008               	return
 10130     0470                     l5320:
 10131                           
 10132                           ;mcc_generated_files/LINDrivers/lin_slave.c: 185:                 LIN_rxState = LIN_RX_W
      +                          AIT;
 10133     0470  3009               	movlw	9
 10134     0471  0140               	movlb	0	; select bank0
 10135     0472  00A8               	movwf	LIN_handler@LIN_rxState
 10136     0473  0008               	return
 10137     0474                     l5324:
 10138     0474  0828               	movf	LIN_handler@LIN_rxState,w
 10139     0475  00E2               	movwf	??_LIN_handler
 10140     0476  01E3               	clrf	??_LIN_handler+1
 10141                           
 10142                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10143                           ; Switch size 1, requested type "simple"
 10144                           ; Number of cases is 1, Range of values is 0 to 0
 10145                           ; switch strategies available:
 10146                           ; Name         Instructions Cycles
 10147                           ; simple_byte            4     3 (average)
 10148                           ; direct_byte            8     6 (fixed)
 10149                           ; jumptable            260     6 (fixed)
 10150                           ;	Chosen strategy is simple_byte
 10151     0477  0863               	movf	??_LIN_handler+1,w
 10152     0478  3A00               	xorlw	0	; case 0
 10153     0479  1903               	skipnz
 10154     047A  2C7C               	goto	l5468
 10155     047B  2C9C               	goto	l273
 10156     047C                     l5468:
 10157                           
 10158                           ; Switch size 1, requested type "simple"
 10159                           ; Number of cases is 10, Range of values is 0 to 9
 10160                           ; switch strategies available:
 10161                           ; Name         Instructions Cycles
 10162                           ; direct_byte           26     6 (fixed)
 10163                           ; simple_byte           31    16 (average)
 10164                           ; jumptable            260     6 (fixed)
 10165                           ;	Chosen strategy is simple_byte
 10166     047C  0862               	movf	??_LIN_handler,w
 10167     047D  3A00               	xorlw	0	; case 0
 10168     047E  1903               	skipnz
 10169     047F  2BA3               	goto	l5238
 10170     0480  3A01               	xorlw	1	; case 1
 10171     0481  1903               	skipnz
 10172     0482  2BB1               	goto	l5246
 10173     0483  3A03               	xorlw	3	; case 2
 10174     0484  1903               	skipnz
 10175     0485  2BC4               	goto	l5254
 10176     0486  3A01               	xorlw	1	; case 3
 10177     0487  1903               	skipnz
 10178     0488  2BD3               	goto	l5262
 10179     0489  3A07               	xorlw	7	; case 4
 10180     048A  1903               	skipnz
 10181     048B  2C04               	goto	l5282
 10182     048C  3A01               	xorlw	1	; case 5
 10183     048D  1903               	skipnz
 10184     048E  2C2D               	goto	l5292
 10185     048F  3A03               	xorlw	3	; case 6
 10186     0490  1903               	skipnz
 10187     0491  2C4A               	goto	l5300
 10188     0492  3A01               	xorlw	1	; case 7
 10189     0493  1903               	skipnz
 10190     0494  2C52               	goto	l5304
 10191     0495  3A0F               	xorlw	15	; case 8
 10192     0496  1903               	skipnz
 10193     0497  2C58               	goto	l5306
 10194     0498  3A01               	xorlw	1	; case 9
 10195     0499  1903               	skipnz
 10196     049A  2C68               	goto	l5314
 10197     049B  2C9C               	goto	l273
 10198     049C                     l273:
 10199     049C  0008               	return
 10200     049D                     __end_of_LIN_handler:
 10201                           
 10202                           	psect	text26
 10203     049D                     __ptext26:	
 10204 ;; *************** function _processLIN *****************
 10205 ;; Defined at:
 10206 ;;		line 51 in file "mcc_generated_files/LINDrivers/lin_app.c"
 10207 ;; Parameters:    Size  Location     Type
 10208 ;;		None
 10209 ;; Auto vars:     Size  Location     Type
 10210 ;;  tempRxData      8    1[BANK2 ] unsigned char [8]
 10211 ;;  cmd             1    0[BANK2 ] unsigned char 
 10212 ;; Return value:  Size  Location     Type
 10213 ;;                  1    wreg      void 
 10214 ;; Registers used:
 10215 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10216 ;; Tracked objects:
 10217 ;;		On entry : 3F/2
 10218 ;;		On exit  : 3C/0
 10219 ;;		Unchanged: 0/0
 10220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10222 ;;      Locals:         0       0       0       9       0       0       0       0       0       0       0       0       
      +0       0
 10223 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10224 ;;      Totals:         0       5       0       9       0       0       0       0       0       0       0       0       
      +0       0
 10225 ;;Total ram usage:       14 bytes
 10226 ;; Hardware stack levels used: 1
 10227 ;; Hardware stack levels required when called: 8
 10228 ;; This function calls:
 10229 ;;		_CmdOutput
 10230 ;;		_EFuseInit
 10231 ;;		_LIN_getPacket
 10232 ;; This function is called by:
 10233 ;;		_LIN_Slave_Initialize
 10234 ;;		_LIN_handler
 10235 ;; This function uses a non-reentrant model
 10236 ;;
 10237                           
 10238     049D                     _processLIN:	
 10239                           ;psect for function _processLIN
 10240                           
 10241                           
 10242                           ;mcc_generated_files/LINDrivers/lin_app.c: 52:     uint8_t tempRxData[8];;mcc_generated_
      +                          files/LINDrivers/lin_app.c: 53:     uint8_t cmd;;mcc_generated_files/LINDrivers/lin_app.
      +                          c: 55:     cmd = LIN_getPacket(tempRxData);
 10243                           
 10244                           ;incstack = 0
 10245                           ; Regs used in _processLIN: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10246     049D  3021               	movlw	(low (processLIN@tempRxData| (0+256)))& (0+255)
 10247     049E  318B  231A  3184   	fcall	_LIN_getPacket
 10248     04A1  0142               	movlb	2	; select bank2
 10249     04A2  00A0               	movwf	processLIN@cmd^(0+256)
 10250                           
 10251                           ;mcc_generated_files/LINDrivers/lin_app.c: 56:     switch(cmd){
 10252     04A3  2D3C               	goto	l5188
 10253     04A4                     l5156:
 10254                           
 10255                           ;mcc_generated_files/LINDrivers/lin_app.c: 58:             CmdOutput(tempRxData[0]);
 10256     04A4  0821               	movf	processLIN@tempRxData^(0+256),w
 10257     04A5  318D  2585         	fcall	_CmdOutput
 10258                           
 10259                           ;mcc_generated_files/LINDrivers/lin_app.c: 59:             break;
 10260     04A7  0008               	return
 10261     04A8                     l5158:
 10262                           
 10263                           ;mcc_generated_files/LINDrivers/lin_app.c: 61:             triggerType = tempRxData[0];
 10264     04A8  0821               	movf	processLIN@tempRxData^(0+256),w
 10265     04A9  0140               	movlb	0	; select bank0
 10266     04AA  00B1               	movwf	_triggerType
 10267                           
 10268                           ;mcc_generated_files/LINDrivers/lin_app.c: 62:             break;
 10269     04AB  0008               	return
 10270     04AC                     l5160:
 10271                           
 10272                           ;mcc_generated_files/LINDrivers/lin_app.c: 64:             CmdOutput(0);
 10273     04AC  3000               	movlw	0
 10274     04AD  318D  2585         	fcall	_CmdOutput
 10275     04AF  1319               	bcf	25,6	;volatile
 10276     04B0  0008               	return
 10277     04B1                     l5164:
 10278                           
 10279                           ;mcc_generated_files/LINDrivers/lin_app.c: 68:             tj_limit = tempRxData[0];
 10280     04B1  0821               	movf	processLIN@tempRxData^(0+256),w
 10281     04B2  0140               	movlb	0	; select bank0
 10282     04B3  00EC               	movwf	_tj_limit
 10283                           
 10284                           ;mcc_generated_files/LINDrivers/lin_app.c: 69:             break;
 10285     04B4  0008               	return
 10286     04B5                     l5166:
 10287                           
 10288                           ;mcc_generated_files/LINDrivers/lin_app.c: 71:             factor_rdson_rthjs = (uint16_
      +                          t) (tempRxData[1] << 8) | tempRxData[0];
 10289     04B5  0821               	movf	processLIN@tempRxData^(0+256),w
 10290     04B6  0140               	movlb	0	; select bank0
 10291     04B7  00DB               	movwf	??_processLIN
 10292     04B8  01DC               	clrf	??_processLIN+1
 10293     04B9  0142               	movlb	2	; select bank2
 10294     04BA  0822               	movf	(processLIN@tempRxData^(0+256)+1),w
 10295     04BB  0140               	movlb	0	; select bank0
 10296     04BC  00DD               	movwf	??_processLIN+2
 10297     04BD  01DE               	clrf	??_processLIN+3
 10298     04BE  085D               	movf	??_processLIN+2,w
 10299     04BF  00DE               	movwf	??_processLIN+3
 10300     04C0  01DD               	clrf	??_processLIN+2
 10301     04C1  085B               	movf	??_processLIN,w
 10302     04C2  045D               	iorwf	??_processLIN+2,w
 10303     04C3  0141               	movlb	1	; select bank1
 10304     04C4  00E9               	movwf	_factor_rdson_rthjs^(0+128)
 10305     04C5  0140               	movlb	0	; select bank0
 10306     04C6  085C               	movf	??_processLIN+1,w
 10307     04C7  045E               	iorwf	??_processLIN+3,w
 10308     04C8  0141               	movlb	1	; select bank1
 10309     04C9  00EA               	movwf	(_factor_rdson_rthjs+1)^(0+128)
 10310                           
 10311                           ;mcc_generated_files/LINDrivers/lin_app.c: 72:             break;
 10312     04CA  0008               	return
 10313     04CB                     l5168:
 10314                           
 10315                           ;mcc_generated_files/LINDrivers/lin_app.c: 74:             factor_rdson_rthsa = (uint16_
      +                          t) (tempRxData[1] << 8) | tempRxData[0];
 10316     04CB  0821               	movf	processLIN@tempRxData^(0+256),w
 10317     04CC  0140               	movlb	0	; select bank0
 10318     04CD  00DB               	movwf	??_processLIN
 10319     04CE  01DC               	clrf	??_processLIN+1
 10320     04CF  0142               	movlb	2	; select bank2
 10321     04D0  0822               	movf	(processLIN@tempRxData^(0+256)+1),w
 10322     04D1  0140               	movlb	0	; select bank0
 10323     04D2  00DD               	movwf	??_processLIN+2
 10324     04D3  01DE               	clrf	??_processLIN+3
 10325     04D4  085D               	movf	??_processLIN+2,w
 10326     04D5  00DE               	movwf	??_processLIN+3
 10327     04D6  01DD               	clrf	??_processLIN+2
 10328     04D7  085B               	movf	??_processLIN,w
 10329     04D8  045D               	iorwf	??_processLIN+2,w
 10330     04D9  0141               	movlb	1	; select bank1
 10331     04DA  00E7               	movwf	_factor_rdson_rthsa^(0+128)
 10332     04DB  0140               	movlb	0	; select bank0
 10333     04DC  085C               	movf	??_processLIN+1,w
 10334     04DD  045E               	iorwf	??_processLIN+3,w
 10335     04DE  0141               	movlb	1	; select bank1
 10336     04DF  00E8               	movwf	(_factor_rdson_rthsa+1)^(0+128)
 10337                           
 10338                           ;mcc_generated_files/LINDrivers/lin_app.c: 75:             break;
 10339     04E0  0008               	return
 10340     04E1                     l5170:
 10341                           
 10342                           ;mcc_generated_files/LINDrivers/lin_app.c: 77:             current2counts_squared = (uin
      +                          t16_t) (tempRxData[1] << 8) | tempRxData[0];
 10343     04E1  0821               	movf	processLIN@tempRxData^(0+256),w
 10344     04E2  0140               	movlb	0	; select bank0
 10345     04E3  00DB               	movwf	??_processLIN
 10346     04E4  01DC               	clrf	??_processLIN+1
 10347     04E5  0142               	movlb	2	; select bank2
 10348     04E6  0822               	movf	(processLIN@tempRxData^(0+256)+1),w
 10349     04E7  0140               	movlb	0	; select bank0
 10350     04E8  00DD               	movwf	??_processLIN+2
 10351     04E9  01DE               	clrf	??_processLIN+3
 10352     04EA  085D               	movf	??_processLIN+2,w
 10353     04EB  00DE               	movwf	??_processLIN+3
 10354     04EC  01DD               	clrf	??_processLIN+2
 10355     04ED  085B               	movf	??_processLIN,w
 10356     04EE  045D               	iorwf	??_processLIN+2,w
 10357     04EF  00E7               	movwf	_current2counts_squared
 10358     04F0  085C               	movf	??_processLIN+1,w
 10359     04F1  045E               	iorwf	??_processLIN+3,w
 10360     04F2  00E8               	movwf	_current2counts_squared+1
 10361                           
 10362                           ;mcc_generated_files/LINDrivers/lin_app.c: 78:             break;
 10363     04F3  0008               	return
 10364     04F4                     l5172:
 10365                           
 10366                           ;mcc_generated_files/LINDrivers/lin_app.c: 80:             isense_max = (uint16_t) (temp
      +                          RxData[1] << 8) | tempRxData[0];
 10367     04F4  0821               	movf	processLIN@tempRxData^(0+256),w
 10368     04F5  0140               	movlb	0	; select bank0
 10369     04F6  00DB               	movwf	??_processLIN
 10370     04F7  01DC               	clrf	??_processLIN+1
 10371     04F8  0142               	movlb	2	; select bank2
 10372     04F9  0822               	movf	(processLIN@tempRxData^(0+256)+1),w
 10373     04FA  0140               	movlb	0	; select bank0
 10374     04FB  00DD               	movwf	??_processLIN+2
 10375     04FC  01DE               	clrf	??_processLIN+3
 10376     04FD  085D               	movf	??_processLIN+2,w
 10377     04FE  00DE               	movwf	??_processLIN+3
 10378     04FF  01DD               	clrf	??_processLIN+2
 10379     0500  085B               	movf	??_processLIN,w
 10380     0501  045D               	iorwf	??_processLIN+2,w
 10381     0502  00E5               	movwf	_isense_max
 10382     0503  085C               	movf	??_processLIN+1,w
 10383     0504  045E               	iorwf	??_processLIN+3,w
 10384     0505  00E6               	movwf	_isense_max+1
 10385                           
 10386                           ;mcc_generated_files/LINDrivers/lin_app.c: 81:             break;
 10387     0506  0008               	return
 10388     0507                     l5174:
 10389                           
 10390                           ;mcc_generated_files/LINDrivers/lin_app.c: 83:             dac_i_hw_trip = tempRxData[0]
      +                          ;
 10391     0507  0821               	movf	processLIN@tempRxData^(0+256),w
 10392     0508  0140               	movlb	0	; select bank0
 10393     0509  00EB               	movwf	_dac_i_hw_trip
 10394                           
 10395                           ;mcc_generated_files/LINDrivers/lin_app.c: 84:             EFuseInit();
 10396     050A  318B  235F         	fcall	_EFuseInit
 10397                           
 10398                           ;mcc_generated_files/LINDrivers/lin_app.c: 85:             break;
 10399     050C  0008               	return
 10400     050D                     l5178:
 10401                           
 10402                           ;mcc_generated_files/LINDrivers/lin_app.c: 87:             b1_coef = tempRxData[0];
 10403     050D  0821               	movf	processLIN@tempRxData^(0+256),w
 10404     050E  0140               	movlb	0	; select bank0
 10405     050F  00EA               	movwf	_b1_coef
 10406                           
 10407                           ;mcc_generated_files/LINDrivers/lin_app.c: 88:             a1_coef = 0xffff - (2 * b1_co
      +                          ef) + 1;
 10408     0510  086A               	movf	_b1_coef,w
 10409     0511  00DB               	movwf	??_processLIN
 10410     0512  01DC               	clrf	??_processLIN+1
 10411     0513  35DB               	lslf	??_processLIN,f
 10412     0514  0DDC               	rlf	??_processLIN+1,f
 10413     0515  09DB               	comf	??_processLIN,f
 10414     0516  09DC               	comf	??_processLIN+1,f
 10415     0517  0ADB               	incf	??_processLIN,f
 10416     0518  1903               	skipnz
 10417     0519  0ADC               	incf	??_processLIN+1,f
 10418     051A  085B               	movf	??_processLIN,w
 10419     051B  0141               	movlb	1	; select bank1
 10420     051C  00E5               	movwf	_a1_coef^(0+128)
 10421     051D  0140               	movlb	0	; select bank0
 10422     051E  085C               	movf	??_processLIN+1,w
 10423     051F  0141               	movlb	1	; select bank1
 10424     0520  00E6               	movwf	(_a1_coef+1)^(0+128)
 10425                           
 10426                           ;mcc_generated_files/LINDrivers/lin_app.c: 89:             break;
 10427     0521  0008               	return
 10428     0522                     l5182:
 10429                           
 10430                           ;mcc_generated_files/LINDrivers/lin_app.c: 91:             reduced_drive_time = tempRxDa
      +                          ta[0];
 10431     0522  0821               	movf	processLIN@tempRxData^(0+256),w
 10432     0523  0140               	movlb	0	; select bank0
 10433     0524  00B0               	movwf	_reduced_drive_time
 10434                           
 10435                           ;mcc_generated_files/LINDrivers/lin_app.c: 92:             break;
 10436     0525  0008               	return
 10437     0526                     l5184:
 10438                           
 10439                           ;mcc_generated_files/LINDrivers/lin_app.c: 94:             tcc_sample_time = (uint16_t) 
      +                          (tempRxData[1] << 8) | tempRxData[0];
 10440     0526  0821               	movf	processLIN@tempRxData^(0+256),w
 10441     0527  0140               	movlb	0	; select bank0
 10442     0528  00DB               	movwf	??_processLIN
 10443     0529  01DC               	clrf	??_processLIN+1
 10444     052A  0142               	movlb	2	; select bank2
 10445     052B  0822               	movf	(processLIN@tempRxData^(0+256)+1),w
 10446     052C  0140               	movlb	0	; select bank0
 10447     052D  00DD               	movwf	??_processLIN+2
 10448     052E  01DE               	clrf	??_processLIN+3
 10449     052F  085D               	movf	??_processLIN+2,w
 10450     0530  00DE               	movwf	??_processLIN+3
 10451     0531  01DD               	clrf	??_processLIN+2
 10452     0532  085B               	movf	??_processLIN,w
 10453     0533  045D               	iorwf	??_processLIN+2,w
 10454     0534  0141               	movlb	1	; select bank1
 10455     0535  00E3               	movwf	_tcc_sample_time^(0+128)
 10456     0536  0140               	movlb	0	; select bank0
 10457     0537  085C               	movf	??_processLIN+1,w
 10458     0538  045E               	iorwf	??_processLIN+3,w
 10459     0539  0141               	movlb	1	; select bank1
 10460     053A  00E4               	movwf	(_tcc_sample_time+1)^(0+128)
 10461                           
 10462                           ;mcc_generated_files/LINDrivers/lin_app.c: 95:             break;
 10463     053B  0008               	return
 10464     053C                     l5188:
 10465     053C  0820               	movf	processLIN@cmd^(0+256),w
 10466                           
 10467                           ; Switch size 1, requested type "simple"
 10468                           ; Number of cases is 28, Range of values is 0 to 47
 10469                           ; switch strategies available:
 10470                           ; Name         Instructions Cycles
 10471                           ; simple_byte           85    43 (average)
 10472                           ; direct_byte          102     6 (fixed)
 10473                           ; jumptable            260     6 (fixed)
 10474                           ;	Chosen strategy is simple_byte
 10475     053D  3A00               	xorlw	0	; case 0
 10476     053E  1903               	skipnz
 10477     053F  2CA4               	goto	l5156
 10478     0540  3A01               	xorlw	1	; case 1
 10479     0541  1903               	skipnz
 10480     0542  2CA8               	goto	l5158
 10481     0543  3A03               	xorlw	3	; case 2
 10482     0544  1903               	skipnz
 10483     0545  2CAC               	goto	l5160
 10484     0546  3A12               	xorlw	18	; case 16
 10485     0547  1903               	skipnz
 10486     0548  2CB1               	goto	l5164
 10487     0549  3A01               	xorlw	1	; case 17
 10488     054A  1903               	skipnz
 10489     054B  2CB5               	goto	l5166
 10490     054C  3A03               	xorlw	3	; case 18
 10491     054D  1903               	skipnz
 10492     054E  2CCB               	goto	l5168
 10493     054F  3A01               	xorlw	1	; case 19
 10494     0550  1903               	skipnz
 10495     0551  2CE1               	goto	l5170
 10496     0552  3A07               	xorlw	7	; case 20
 10497     0553  1903               	skipnz
 10498     0554  2CF4               	goto	l5172
 10499     0555  3A01               	xorlw	1	; case 21
 10500     0556  1903               	skipnz
 10501     0557  2D07               	goto	l5174
 10502     0558  3A03               	xorlw	3	; case 22
 10503     0559  1903               	skipnz
 10504     055A  2D0D               	goto	l5178
 10505     055B  3A01               	xorlw	1	; case 23
 10506     055C  1903               	skipnz
 10507     055D  2D22               	goto	l5182
 10508     055E  3A0F               	xorlw	15	; case 24
 10509     055F  1903               	skipnz
 10510     0560  2D26               	goto	l5184
 10511     0561  3A38               	xorlw	56	; case 32
 10512     0562  1903               	skipnz
 10513     0563  2D92               	goto	l159
 10514     0564  3A01               	xorlw	1	; case 33
 10515     0565  1903               	skipnz
 10516     0566  2D92               	goto	l159
 10517     0567  3A03               	xorlw	3	; case 34
 10518     0568  1903               	skipnz
 10519     0569  2D92               	goto	l159
 10520     056A  3A01               	xorlw	1	; case 35
 10521     056B  1903               	skipnz
 10522     056C  2D92               	goto	l159
 10523     056D  3A07               	xorlw	7	; case 36
 10524     056E  1903               	skipnz
 10525     056F  2D92               	goto	l159
 10526     0570  3A01               	xorlw	1	; case 37
 10527     0571  1903               	skipnz
 10528     0572  2D92               	goto	l159
 10529     0573  3A03               	xorlw	3	; case 38
 10530     0574  1903               	skipnz
 10531     0575  2D92               	goto	l159
 10532     0576  3A01               	xorlw	1	; case 39
 10533     0577  1903               	skipnz
 10534     0578  2D92               	goto	l159
 10535     0579  3A0F               	xorlw	15	; case 40
 10536     057A  1903               	skipnz
 10537     057B  2D92               	goto	l159
 10538     057C  3A01               	xorlw	1	; case 41
 10539     057D  1903               	skipnz
 10540     057E  2D92               	goto	l159
 10541     057F  3A03               	xorlw	3	; case 42
 10542     0580  1903               	skipnz
 10543     0581  2D92               	goto	l159
 10544     0582  3A01               	xorlw	1	; case 43
 10545     0583  1903               	skipnz
 10546     0584  2D92               	goto	l159
 10547     0585  3A07               	xorlw	7	; case 44
 10548     0586  1903               	skipnz
 10549     0587  2D92               	goto	l159
 10550     0588  3A01               	xorlw	1	; case 45
 10551     0589  1903               	skipnz
 10552     058A  2D92               	goto	l159
 10553     058B  3A03               	xorlw	3	; case 46
 10554     058C  1903               	skipnz
 10555     058D  2D92               	goto	l159
 10556     058E  3A01               	xorlw	1	; case 47
 10557     058F  1903               	skipnz
 10558     0590  2D92               	goto	l159
 10559     0591  2D92               	goto	l159
 10560     0592                     l159:
 10561     0592  0008               	return
 10562     0593                     __end_of_processLIN:
 10563                           
 10564                           	psect	text27
 10565     0B1A                     __ptext27:	
 10566 ;; *************** function _LIN_getPacket *****************
 10567 ;; Defined at:
 10568 ;;		line 202 in file "mcc_generated_files/LINDrivers/lin_slave.c"
 10569 ;; Parameters:    Size  Location     Type
 10570 ;;  data            1    wreg     PTR unsigned char 
 10571 ;;		 -> processLIN@tempRxData(8), 
 10572 ;; Auto vars:     Size  Location     Type
 10573 ;;  data            1   11[BANK0 ] PTR unsigned char 
 10574 ;;		 -> processLIN@tempRxData(8), 
 10575 ;;  cmd             1   12[BANK0 ] unsigned char 
 10576 ;; Return value:  Size  Location     Type
 10577 ;;                  1    wreg      unsigned char 
 10578 ;; Registers used:
 10579 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10580 ;; Tracked objects:
 10581 ;;		On entry : 3F/2
 10582 ;;		On exit  : 3F/0
 10583 ;;		Unchanged: 0/0
 10584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10586 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10588 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10589 ;;Total ram usage:        2 bytes
 10590 ;; Hardware stack levels used: 1
 10591 ;; Hardware stack levels required when called: 6
 10592 ;; This function calls:
 10593 ;;		_memcpy
 10594 ;;		_memset
 10595 ;; This function is called by:
 10596 ;;		_processLIN
 10597 ;; This function uses a non-reentrant model
 10598 ;;
 10599                           
 10600     0B1A                     _LIN_getPacket:	
 10601                           ;psect for function _LIN_getPacket
 10602                           
 10603                           
 10604                           ;incstack = 0
 10605                           ; Regs used in _LIN_getPacket: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10606                           ;LIN_getPacket@data stored from wreg
 10607     0B1A  0140               	movlb	0	; select bank0
 10608     0B1B  00D9               	movwf	LIN_getPacket@data
 10609                           
 10610                           ;mcc_generated_files/LINDrivers/lin_slave.c: 203:     uint8_t cmd = LIN_packet.PID & 0x3
      +                          F;
 10611     0B1C  0141               	movlb	1	; select bank1
 10612     0B1D  0838               	movf	_LIN_packet^(0+128),w
 10613     0B1E  393F               	andlw	63
 10614     0B1F  0140               	movlb	0	; select bank0
 10615     0B20  00DA               	movwf	LIN_getPacket@cmd
 10616                           
 10617                           ;mcc_generated_files/LINDrivers/lin_slave.c: 205:     memcpy(data, LIN_packet.data, size
      +                          of(LIN_packet.data));
 10618     0B21  0859               	movf	LIN_getPacket@data,w
 10619     0B22  00CE               	movwf	memcpy@d1
 10620     0B23  3001               	movlw	1
 10621     0B24  00CF               	movwf	memcpy@d1+1
 10622     0B25  30B9               	movlw	low (_LIN_packet+1)
 10623     0B26  00D0               	movwf	memcpy@s1
 10624     0B27  3000               	movlw	high (_LIN_packet+1)
 10625     0B28  00D1               	movwf	memcpy@s1+1
 10626     0B29  3008               	movlw	8
 10627     0B2A  00D2               	movwf	memcpy@n
 10628     0B2B  3000               	movlw	0
 10629     0B2C  00D3               	movwf	memcpy@n+1
 10630     0B2D  318B  2382  318B   	fcall	_memcpy
 10631                           
 10632                           ;mcc_generated_files/LINDrivers/lin_slave.c: 206:     memset(LIN_packet.rawPacket, 0, si
      +                          zeof(LIN_packet.rawPacket));
 10633     0B30  3000               	movlw	0
 10634     0B31  00CE               	movwf	memset@c
 10635     0B32  00CF               	movwf	memset@c+1
 10636     0B33  300D               	movlw	13
 10637     0B34  00D0               	movwf	memset@n
 10638     0B35  3000               	movlw	0
 10639     0B36  00D1               	movwf	memset@n+1
 10640     0B37  30B8               	movlw	(low (_LIN_packet| 0))& (0+255)
 10641     0B38  3189  21F6         	fcall	_memset
 10642                           
 10643                           ;mcc_generated_files/LINDrivers/lin_slave.c: 208:     return cmd;
 10644     0B3A  085A               	movf	LIN_getPacket@cmd,w
 10645     0B3B  0008               	return
 10646     0B3C                     __end_of_LIN_getPacket:
 10647                           
 10648                           	psect	text28
 10649     09F6                     __ptext28:	
 10650 ;; *************** function _memset *****************
 10651 ;; Defined at:
 10652 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\memset.c"
 10653 ;; Parameters:    Size  Location     Type
 10654 ;;  dest            1    wreg     PTR void 
 10655 ;;		 -> LIN_packet(13), 
 10656 ;;  c               2    0[BANK0 ] int 
 10657 ;;  n               2    2[BANK0 ] unsigned int 
 10658 ;; Auto vars:     Size  Location     Type
 10659 ;;  dest            1    6[BANK0 ] PTR void 
 10660 ;;		 -> LIN_packet(13), 
 10661 ;;  p               1    5[BANK0 ] PTR unsigned char 
 10662 ;;		 -> LIN_packet(13), 
 10663 ;; Return value:  Size  Location     Type
 10664 ;;                  1    wreg      PTR void 
 10665 ;; Registers used:
 10666 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10667 ;; Tracked objects:
 10668 ;;		On entry : 3F/0
 10669 ;;		On exit  : 3F/0
 10670 ;;		Unchanged: 0/0
 10671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10672 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10673 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10674 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10675 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10676 ;;Total ram usage:        7 bytes
 10677 ;; Hardware stack levels used: 1
 10678 ;; Hardware stack levels required when called: 5
 10679 ;; This function calls:
 10680 ;;		Nothing
 10681 ;; This function is called by:
 10682 ;;		_LIN_handler
 10683 ;;		_LIN_getPacket
 10684 ;; This function uses a non-reentrant model
 10685 ;;
 10686                           
 10687     09F6                     _memset:	
 10688                           ;psect for function _memset
 10689                           
 10690                           
 10691                           ;incstack = 0
 10692                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
 10693                           ;memset@dest stored from wreg
 10694     09F6  00D4               	movwf	memset@dest
 10695     09F7  0854               	movf	memset@dest,w
 10696     09F8  00D3               	movwf	memset@p
 10697     09F9                     l4318:
 10698     09F9  3001               	movlw	1
 10699     09FA  02D0               	subwf	memset@n,f
 10700     09FB  3000               	movlw	0
 10701     09FC  3BD1               	subwfb	memset@n+1,f
 10702     09FD  0A50               	incf	memset@n,w
 10703     09FE  1903               	btfsc	3,2
 10704     09FF  0A51               	incf	memset@n+1,w
 10705     0A00  1903               	btfsc	3,2
 10706     0A01  0008               	return
 10707     0A02  0853               	movf	memset@p,w
 10708     0A03  0086               	movwf	6
 10709     0A04  0187               	clrf	7
 10710     0A05  084E               	movf	memset@c,w
 10711     0A06  0081               	movwf	1
 10712     0A07  3001               	movlw	1
 10713     0A08  00D2               	movwf	??_memset
 10714     0A09  0852               	movf	??_memset,w
 10715     0A0A  07D3               	addwf	memset@p,f
 10716     0A0B  29F9               	goto	l4318
 10717     0A0C                     __end_of_memset:
 10718                           
 10719                           	psect	text29
 10720     0B5F                     __ptext29:	
 10721 ;; *************** function _EFuseInit *****************
 10722 ;; Defined at:
 10723 ;;		line 247 in file "efuse.c"
 10724 ;; Parameters:    Size  Location     Type
 10725 ;;		None
 10726 ;; Auto vars:     Size  Location     Type
 10727 ;;		None
 10728 ;; Return value:  Size  Location     Type
 10729 ;;                  1    wreg      void 
 10730 ;; Registers used:
 10731 ;;		wreg, status,2, status,0, pclath, cstack
 10732 ;; Tracked objects:
 10733 ;;		On entry : 3E/1
 10734 ;;		On exit  : 3F/0
 10735 ;;		Unchanged: 0/0
 10736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10740 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10741 ;;Total ram usage:        0 bytes
 10742 ;; Hardware stack levels used: 1
 10743 ;; Hardware stack levels required when called: 7
 10744 ;; This function calls:
 10745 ;;		_CmdOutput
 10746 ;;		_TMR0_Reload
 10747 ;; This function is called by:
 10748 ;;		_processLIN
 10749 ;;		_main
 10750 ;; This function uses a non-reentrant model
 10751 ;;
 10752                           
 10753     0B5F                     _EFuseInit:	
 10754                           ;psect for function _EFuseInit
 10755                           
 10756                           
 10757                           ;efuse.c: 249:     CmdOutput(OUTPUT_OFF);
 10758                           
 10759                           ;incstack = 0
 10760                           ; Regs used in _EFuseInit: [wreg+status,2+status,0+pclath+cstack]
 10761     0B5F  3000               	movlw	0
 10762     0B60  318D  2585  318B   	fcall	_CmdOutput
 10763                           
 10764                           ;efuse.c: 252:     CM2CON0bits.C2EN = 1;
 10765     0B63  0153               	movlb	19	; select bank19
 10766     0B64  1794               	bsf	20,7	;volatile
 10767                           
 10768                           ;efuse.c: 253:     CLC1GLS1bits.LC1G2D2T = 1;
 10769     0B65  017C               	movlb	60	; select bank60
 10770     0B66  1597               	bsf	23,3	;volatile
 10771                           
 10772                           ;efuse.c: 254:     PIR2bits.C2IF = 0;
 10773     0B67  014E               	movlb	14	; select bank14
 10774     0B68  108E               	bcf	14,1	;volatile
 10775                           
 10776                           ;efuse.c: 256:     DAC1CON1bits.DAC1R = dac_i_hw_trip;
 10777     0B69  0152               	movlb	18	; select bank18
 10778     0B6A  080F               	movf	15,w	;volatile
 10779     0B6B  0140               	movlb	0	; select bank0
 10780     0B6C  066B               	xorwf	_dac_i_hw_trip,w
 10781     0B6D  39E0               	andlw	-32
 10782     0B6E  066B               	xorwf	_dac_i_hw_trip,w
 10783     0B6F  0152               	movlb	18	; select bank18
 10784     0B70  008F               	movwf	15	;volatile
 10785                           
 10786                           ;efuse.c: 257:     _delay((unsigned long)((20)*(32000000/4000000.0)));
 10787     0B71  3035               	movlw	53
 10788     0B72                     u3497:
 10789     0B72  0B89               	decfsz	9,f
 10790     0B73  2B72               	goto	u3497
 10791     0B74  0000               	nop
 10792                           
 10793                           ;efuse.c: 260:     TMR0_Reload();
 10794     0B75  3188  2094         	fcall	_TMR0_Reload
 10795                           
 10796                           ;efuse.c: 261:     PIR0bits.TMR0IF = 0;
 10797     0B77  014E               	movlb	14	; select bank14
 10798     0B78  128C               	bcf	12,5	;volatile
 10799                           
 10800                           ;efuse.c: 262:     PIR5bits.CLC2IF = 0;
 10801     0B79  1291               	bcf	17,5	;volatile
 10802                           
 10803                           ;efuse.c: 263:     PIR2bits.C1IF = 0;
 10804     0B7A  100E               	bcf	14,0	;volatile
 10805                           
 10806                           ;efuse.c: 264:     PIR2bits.C2IF = 0;
 10807     0B7B  108E               	bcf	14,1	;volatile
 10808                           
 10809                           ;efuse.c: 266:     ticks_1ms = 0;
 10810     0B7C  0141               	movlb	1	; select bank1
 10811     0B7D  01B6               	clrf	_ticks_1ms^(0+128)
 10812     0B7E  01B7               	clrf	(_ticks_1ms+1)^(0+128)
 10813                           
 10814                           ;efuse.c: 268:     triggerType = TRIGGER_EDGE;
 10815     0B7F  0140               	movlb	0	; select bank0
 10816     0B80  01B1               	clrf	_triggerType
 10817     0B81  0008               	return
 10818     0B82                     __end_of_EFuseInit:
 10819                           
 10820                           	psect	text30
 10821     0894                     __ptext30:	
 10822 ;; *************** function _TMR0_Reload *****************
 10823 ;; Defined at:
 10824 ;;		line 129 in file "mcc_generated_files/tmr0.c"
 10825 ;; Parameters:    Size  Location     Type
 10826 ;;		None
 10827 ;; Auto vars:     Size  Location     Type
 10828 ;;		None
 10829 ;; Return value:  Size  Location     Type
 10830 ;;                  1    wreg      void 
 10831 ;; Registers used:
 10832 ;;		wreg
 10833 ;; Tracked objects:
 10834 ;;		On entry : 0/12
 10835 ;;		On exit  : 3F/B
 10836 ;;		Unchanged: 0/0
 10837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10841 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10842 ;;Total ram usage:        0 bytes
 10843 ;; Hardware stack levels used: 1
 10844 ;; Hardware stack levels required when called: 5
 10845 ;; This function calls:
 10846 ;;		Nothing
 10847 ;; This function is called by:
 10848 ;;		_EFuseInit
 10849 ;; This function uses a non-reentrant model
 10850 ;;
 10851                           
 10852     0894                     _TMR0_Reload:	
 10853                           ;psect for function _TMR0_Reload
 10854                           
 10855                           
 10856                           ;mcc_generated_files/tmr0.c: 132:     TMR0H = timer0ReloadVal16bit >> 8;
 10857                           
 10858                           ;incstack = 0
 10859                           ; Regs used in _TMR0_Reload: [wreg]
 10860     0894  0871               	movf	_timer0ReloadVal16bit+1,w	;volatile
 10861     0895  014B               	movlb	11	; select bank11
 10862     0896  009D               	movwf	29	;volatile
 10863                           
 10864                           ;mcc_generated_files/tmr0.c: 133:     TMR0L = (uint8_t) timer0ReloadVal16bit;
 10865     0897  0870               	movf	_timer0ReloadVal16bit,w	;volatile
 10866     0898  009C               	movwf	28	;volatile
 10867     0899  0008               	return
 10868     089A                     __end_of_TMR0_Reload:
 10869                           
 10870                           	psect	text31
 10871     088F                     __ptext31:	
 10872 ;; *************** function _LIN_stopTimer *****************
 10873 ;; Defined at:
 10874 ;;		line 304 in file "mcc_generated_files/LINDrivers/lin_slave.c"
 10875 ;; Parameters:    Size  Location     Type
 10876 ;;		None
 10877 ;; Auto vars:     Size  Location     Type
 10878 ;;		None
 10879 ;; Return value:  Size  Location     Type
 10880 ;;                  1    wreg      void 
 10881 ;; Registers used:
 10882 ;;		status,2
 10883 ;; Tracked objects:
 10884 ;;		On entry : 0/2
 10885 ;;		On exit  : 3F/0
 10886 ;;		Unchanged: 0/0
 10887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10891 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10892 ;;Total ram usage:        0 bytes
 10893 ;; Hardware stack levels used: 1
 10894 ;; Hardware stack levels required when called: 5
 10895 ;; This function calls:
 10896 ;;		Nothing
 10897 ;; This function is called by:
 10898 ;;		_LIN_init
 10899 ;;		_LIN_handler
 10900 ;; This function uses a non-reentrant model
 10901 ;;
 10902                           
 10903     088F                     _LIN_stopTimer:	
 10904                           ;psect for function _LIN_stopTimer
 10905                           
 10906                           
 10907                           ;mcc_generated_files/LINDrivers/lin_slave.c: 305:     __nop();
 10908                           
 10909                           ;incstack = 0
 10910                           ; Regs used in _LIN_stopTimer: [status,2]
 10911     088F  0000               	nop
 10912                           
 10913                           ;mcc_generated_files/LINDrivers/lin_slave.c: 307:     CountCallBack = 0;
 10914     0890  0140               	movlb	0	; select bank0
 10915     0891  01A9               	clrf	_CountCallBack	;volatile
 10916                           
 10917                           ;mcc_generated_files/LINDrivers/lin_slave.c: 308:     LIN_timerRunning = 0;
 10918     0892  01AA               	clrf	_LIN_timerRunning
 10919     0893  0008               	return
 10920     0894                     __end_of_LIN_stopTimer:
 10921                           
 10922                           	psect	text32
 10923     0943                     __ptext32:	
 10924 ;; *************** function _LIN_startTimer *****************
 10925 ;; Defined at:
 10926 ;;		line 283 in file "mcc_generated_files/LINDrivers/lin_slave.c"
 10927 ;; Parameters:    Size  Location     Type
 10928 ;;  timeout         1    wreg     unsigned char 
 10929 ;; Auto vars:     Size  Location     Type
 10930 ;;  timeout         1    2[BANK0 ] unsigned char 
 10931 ;; Return value:  Size  Location     Type
 10932 ;;                  1    wreg      void 
 10933 ;; Registers used:
 10934 ;;		wreg, status,2, status,0, pclath, cstack
 10935 ;; Tracked objects:
 10936 ;;		On entry : 3F/0
 10937 ;;		On exit  : 3F/0
 10938 ;;		Unchanged: 0/0
 10939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10941 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10943 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10944 ;;Total ram usage:        1 bytes
 10945 ;; Hardware stack levels used: 1
 10946 ;; Hardware stack levels required when called: 6
 10947 ;; This function calls:
 10948 ;;		_TMR0_WriteTimer
 10949 ;; This function is called by:
 10950 ;;		_LIN_handler
 10951 ;; This function uses a non-reentrant model
 10952 ;;
 10953                           
 10954     0943                     _LIN_startTimer:	
 10955                           ;psect for function _LIN_startTimer
 10956                           
 10957                           
 10958                           ;incstack = 0
 10959                           ; Regs used in _LIN_startTimer: [wreg+status,2+status,0+pclath+cstack]
 10960                           ;LIN_startTimer@timeout stored from wreg
 10961     0943  00D0               	movwf	LIN_startTimer@timeout
 10962                           
 10963                           ;mcc_generated_files/LINDrivers/lin_slave.c: 284:     LIN_timeout = timeout;
 10964     0944  0850               	movf	LIN_startTimer@timeout,w
 10965     0945  00E9               	movwf	_LIN_timeout
 10966                           
 10967                           ;mcc_generated_files/LINDrivers/lin_slave.c: 285:     TMR0_WriteTimer(0);
 10968     0946  3000               	movlw	0
 10969     0947  00CE               	movwf	TMR0_WriteTimer@timerVal
 10970     0948  00CF               	movwf	TMR0_WriteTimer@timerVal+1
 10971     0949  3188  20B4         	fcall	_TMR0_WriteTimer
 10972                           
 10973                           ;mcc_generated_files/LINDrivers/lin_slave.c: 286:     __nop();
 10974     094B  0000               	nop
 10975                           
 10976                           ;mcc_generated_files/LINDrivers/lin_slave.c: 287:     LIN_timerRunning = 1;
 10977     094C  0140               	movlb	0	; select bank0
 10978     094D  01AA               	clrf	_LIN_timerRunning
 10979     094E  0AAA               	incf	_LIN_timerRunning,f
 10980     094F  0008               	return
 10981     0950                     __end_of_LIN_startTimer:
 10982                           
 10983                           	psect	text33
 10984     08B4                     __ptext33:	
 10985 ;; *************** function _TMR0_WriteTimer *****************
 10986 ;; Defined at:
 10987 ;;		line 122 in file "mcc_generated_files/tmr0.c"
 10988 ;; Parameters:    Size  Location     Type
 10989 ;;  timerVal        2    0[BANK0 ] unsigned short 
 10990 ;; Auto vars:     Size  Location     Type
 10991 ;;		None
 10992 ;; Return value:  Size  Location     Type
 10993 ;;                  1    wreg      void 
 10994 ;; Registers used:
 10995 ;;		wreg
 10996 ;; Tracked objects:
 10997 ;;		On entry : 3F/0
 10998 ;;		On exit  : 3F/B
 10999 ;;		Unchanged: 0/0
 11000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11001 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11004 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11005 ;;Total ram usage:        2 bytes
 11006 ;; Hardware stack levels used: 1
 11007 ;; Hardware stack levels required when called: 5
 11008 ;; This function calls:
 11009 ;;		Nothing
 11010 ;; This function is called by:
 11011 ;;		_LIN_startTimer
 11012 ;; This function uses a non-reentrant model
 11013 ;;
 11014                           
 11015     08B4                     _TMR0_WriteTimer:	
 11016                           ;psect for function _TMR0_WriteTimer
 11017                           
 11018                           
 11019                           ;mcc_generated_files/tmr0.c: 122: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr0.c: 123: {;mcc_generated_files/tmr0.c: 125:     TMR0H = timerVal >> 8;
 11020                           
 11021                           ;incstack = 0
 11022                           ; Regs used in _TMR0_WriteTimer: [wreg]
 11023     08B4  084F               	movf	TMR0_WriteTimer@timerVal+1,w
 11024     08B5  014B               	movlb	11	; select bank11
 11025     08B6  009D               	movwf	29	;volatile
 11026                           
 11027                           ;mcc_generated_files/tmr0.c: 126:     TMR0L = (uint8_t) timerVal;
 11028     08B7  0140               	movlb	0	; select bank0
 11029     08B8  084E               	movf	TMR0_WriteTimer@timerVal,w
 11030     08B9  014B               	movlb	11	; select bank11
 11031     08BA  009C               	movwf	28	;volatile
 11032     08BB  0008               	return
 11033     08BC                     __end_of_TMR0_WriteTimer:
 11034                           
 11035                           	psect	text34
 11036     0F13                     __ptext34:	
 11037 ;; *************** function _LIN_queuePacket *****************
 11038 ;; Defined at:
 11039 ;;		line 66 in file "mcc_generated_files/LINDrivers/lin_slave.c"
 11040 ;; Parameters:    Size  Location     Type
 11041 ;;  cmd             1    wreg     unsigned char 
 11042 ;; Auto vars:     Size  Location     Type
 11043 ;;  cmd             1   16[BANK0 ] unsigned char 
 11044 ;;  i               1   17[BANK0 ] unsigned char 
 11045 ;;  tempSchedule    2   18[BANK0 ] PTR const struct .
 11046 ;;		 -> NULL(0), scheduleTable(140), 
 11047 ;; Return value:  Size  Location     Type
 11048 ;;                  1    wreg      void 
 11049 ;; Registers used:
 11050 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11051 ;; Tracked objects:
 11052 ;;		On entry : 3F/1
 11053 ;;		On exit  : 3F/E
 11054 ;;		Unchanged: 0/0
 11055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11057 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11058 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11059 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11060 ;;Total ram usage:        7 bytes
 11061 ;; Hardware stack levels used: 1
 11062 ;; Hardware stack levels required when called: 7
 11063 ;; This function calls:
 11064 ;;		_LIN_getChecksum
 11065 ;;		_LIN_sendPacket
 11066 ;;		_memcpy
 11067 ;; This function is called by:
 11068 ;;		_LIN_handler
 11069 ;; This function uses a non-reentrant model
 11070 ;;
 11071                           
 11072     0F13                     _LIN_queuePacket:	
 11073                           ;psect for function _LIN_queuePacket
 11074                           
 11075                           
 11076                           ;incstack = 0
 11077                           ; Regs used in _LIN_queuePacket: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11078                           ;LIN_queuePacket@cmd stored from wreg
 11079     0F13  0140               	movlb	0	; select bank0
 11080     0F14  00DE               	movwf	LIN_queuePacket@cmd
 11081                           
 11082                           ;mcc_generated_files/LINDrivers/lin_slave.c: 67:     const lin_rx_cmd_t* tempSchedule = 
      +                          LIN_rxCommand;
 11083     0F15  0141               	movlb	1	; select bank1
 11084     0F16  086E               	movf	(_LIN_rxCommand+1)^(0+128),w
 11085     0F17  0140               	movlb	0	; select bank0
 11086     0F18  00E1               	movwf	LIN_queuePacket@tempSchedule+1
 11087     0F19  0141               	movlb	1	; select bank1
 11088     0F1A  086D               	movf	_LIN_rxCommand^(0+128),w
 11089     0F1B  0140               	movlb	0	; select bank0
 11090     0F1C  00E0               	movwf	LIN_queuePacket@tempSchedule
 11091                           
 11092                           ;mcc_generated_files/LINDrivers/lin_slave.c: 69:     cmd &= 0x3F;
 11093     0F1D  303F               	movlw	63
 11094     0F1E  00DB               	movwf	??_LIN_queuePacket
 11095     0F1F  085B               	movf	??_LIN_queuePacket,w
 11096     0F20  05DE               	andwf	LIN_queuePacket@cmd,f
 11097                           
 11098                           ;mcc_generated_files/LINDrivers/lin_slave.c: 70:     for(uint8_t i = 0; i < LIN_rxComman
      +                          dLength; i++){
 11099     0F21  01DF               	clrf	LIN_queuePacket@i
 11100     0F22                     l5204:
 11101     0F22  086F               	movf	_LIN_rxCommandLength,w
 11102     0F23  025F               	subwf	LIN_queuePacket@i,w
 11103     0F24  1803               	btfsc	3,0
 11104     0F25  2F37               	goto	l5206
 11105                           
 11106                           ;mcc_generated_files/LINDrivers/lin_slave.c: 71:         if(cmd == tempSchedule->cmd){
 11107     0F26  0860               	movf	LIN_queuePacket@tempSchedule,w
 11108     0F27  0084               	movwf	4
 11109     0F28  0861               	movf	LIN_queuePacket@tempSchedule+1,w
 11110     0F29  0085               	movwf	5
 11111     0F2A  0800               	movf	0,w	;code access
 11112     0F2B  065E               	xorwf	LIN_queuePacket@cmd,w
 11113     0F2C  1903               	btfsc	3,2
 11114     0F2D  2F37               	goto	l5206
 11115                           
 11116                           ;mcc_generated_files/LINDrivers/lin_slave.c: 74:         tempSchedule++;
 11117     0F2E  3005               	movlw	5
 11118     0F2F  07E0               	addwf	LIN_queuePacket@tempSchedule,f
 11119     0F30  3000               	movlw	0
 11120     0F31  3DE1               	addwfc	LIN_queuePacket@tempSchedule+1,f
 11121                           
 11122                           ;mcc_generated_files/LINDrivers/lin_slave.c: 75:     }
 11123     0F32  3001               	movlw	1
 11124     0F33  00DB               	movwf	??_LIN_queuePacket
 11125     0F34  085B               	movf	??_LIN_queuePacket,w
 11126     0F35  07DF               	addwf	LIN_queuePacket@i,f
 11127     0F36  2F22               	goto	l5204
 11128     0F37                     l5206:
 11129                           
 11130                           ;mcc_generated_files/LINDrivers/lin_slave.c: 77:     LIN_packet.type = tempSchedule->typ
      +                          e;
 11131     0F37  0861               	movf	LIN_queuePacket@tempSchedule+1,w
 11132     0F38  00DC               	movwf	??_LIN_queuePacket+1
 11133     0F39  0860               	movf	LIN_queuePacket@tempSchedule,w
 11134     0F3A  00DB               	movwf	??_LIN_queuePacket
 11135     0F3B  3001               	movlw	1
 11136     0F3C  075B               	addwf	??_LIN_queuePacket,w
 11137     0F3D  0084               	movwf	4
 11138     0F3E  085C               	movf	??_LIN_queuePacket+1,w
 11139     0F3F  1803               	skipnc
 11140     0F40  0A5C               	incf	??_LIN_queuePacket+1,w
 11141     0F41  0085               	movwf	5
 11142     0F42  0800               	movf	0,w	;code access
 11143     0F43  0141               	movlb	1	; select bank1
 11144     0F44  00C2               	movwf	(_LIN_packet^(0+128)+10)
 11145                           
 11146                           ;mcc_generated_files/LINDrivers/lin_slave.c: 78:     LIN_packet.length = tempSchedule->l
      +                          ength;
 11147     0F45  0140               	movlb	0	; select bank0
 11148     0F46  0861               	movf	LIN_queuePacket@tempSchedule+1,w
 11149     0F47  00DC               	movwf	??_LIN_queuePacket+1
 11150     0F48  0860               	movf	LIN_queuePacket@tempSchedule,w
 11151     0F49  00DB               	movwf	??_LIN_queuePacket
 11152     0F4A  3002               	movlw	2
 11153     0F4B  075B               	addwf	??_LIN_queuePacket,w
 11154     0F4C  0084               	movwf	4
 11155     0F4D  085C               	movf	??_LIN_queuePacket+1,w
 11156     0F4E  1803               	skipnc
 11157     0F4F  0A5C               	incf	??_LIN_queuePacket+1,w
 11158     0F50  0085               	movwf	5
 11159     0F51  0800               	movf	0,w	;code access
 11160     0F52  0141               	movlb	1	; select bank1
 11161     0F53  00C3               	movwf	(_LIN_packet^(0+128)+11)
 11162                           
 11163                           ;mcc_generated_files/LINDrivers/lin_slave.c: 82:     memcpy(LIN_packet.data, tempSchedul
      +                          e->data, LIN_packet.length);
 11164     0F54  30B9               	movlw	low (_LIN_packet+1)
 11165     0F55  0140               	movlb	0	; select bank0
 11166     0F56  00CE               	movwf	memcpy@d1
 11167     0F57  3000               	movlw	high (_LIN_packet+1)
 11168     0F58  00CF               	movwf	memcpy@d1+1
 11169     0F59  0861               	movf	LIN_queuePacket@tempSchedule+1,w
 11170     0F5A  00DC               	movwf	??_LIN_queuePacket+1
 11171     0F5B  0860               	movf	LIN_queuePacket@tempSchedule,w
 11172     0F5C  00DB               	movwf	??_LIN_queuePacket
 11173     0F5D  3003               	movlw	3
 11174     0F5E  075B               	addwf	??_LIN_queuePacket,w
 11175     0F5F  0084               	movwf	4
 11176     0F60  085C               	movf	??_LIN_queuePacket+1,w
 11177     0F61  1803               	skipnc
 11178     0F62  0A5C               	incf	??_LIN_queuePacket+1,w
 11179     0F63  0085               	movwf	5
 11180     0F64  3F00               	moviw [0]fsr0
 11181     0F65  00D0               	movwf	memcpy@s1
 11182     0F66  3F01               	moviw [1]fsr0
 11183     0F67  00D1               	movwf	memcpy@s1+1
 11184     0F68  0141               	movlb	1	; select bank1
 11185     0F69  0843               	movf	(_LIN_packet^(0+128)+11),w
 11186     0F6A  0140               	movlb	0	; select bank0
 11187     0F6B  00D2               	movwf	memcpy@n
 11188     0F6C  01D3               	clrf	memcpy@n+1
 11189     0F6D  1BD2               	btfsc	memcpy@n,7
 11190     0F6E  03D3               	decf	memcpy@n+1,f
 11191     0F6F  318B  2382  318F   	fcall	_memcpy
 11192                           
 11193                           ;mcc_generated_files/LINDrivers/lin_slave.c: 85:     LIN_packet.checksum = LIN_getChecks
      +                          um(LIN_packet.length, LIN_packet.PID, LIN_packet.data);
 11194     0F72  0141               	movlb	1	; select bank1
 11195     0F73  0838               	movf	_LIN_packet^(0+128),w
 11196     0F74  0140               	movlb	0	; select bank0
 11197     0F75  00CE               	movwf	LIN_getChecksum@pid
 11198     0F76  30B9               	movlw	(low ((_LIN_packet| 0+1)))& (0+255)
 11199     0F77  00CF               	movwf	LIN_getChecksum@data
 11200     0F78  0141               	movlb	1	; select bank1
 11201     0F79  0843               	movf	(_LIN_packet^(0+128)+11),w
 11202     0F7A  318C  2406  318F   	fcall	_LIN_getChecksum
 11203     0F7D  0141               	movlb	1	; select bank1
 11204     0F7E  00C1               	movwf	(_LIN_packet^(0+128)+9)
 11205                           
 11206                           ;mcc_generated_files/LINDrivers/lin_slave.c: 86:     LIN_sendPacket(LIN_packet.length, L
      +                          IN_packet.PID, LIN_packet.data);
 11207     0F7F  0838               	movf	_LIN_packet^(0+128),w
 11208     0F80  0140               	movlb	0	; select bank0
 11209     0F81  00D6               	movwf	LIN_sendPacket@pid
 11210     0F82  30B9               	movlw	(low ((_LIN_packet| 0+1)))& (0+255)
 11211     0F83  00D7               	movwf	LIN_sendPacket@data
 11212     0F84  0141               	movlb	1	; select bank1
 11213     0F85  0843               	movf	(_LIN_packet^(0+128)+11),w
 11214     0F86  318A  22F8         	fcall	_LIN_sendPacket
 11215     0F88  0008               	return
 11216     0F89                     __end_of_LIN_queuePacket:
 11217                           
 11218                           	psect	text35
 11219     0B82                     __ptext35:	
 11220 ;; *************** function _memcpy *****************
 11221 ;; Defined at:
 11222 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\memcpy.c"
 11223 ;; Parameters:    Size  Location     Type
 11224 ;;  d1              2    0[BANK0 ] PTR void 
 11225 ;;		 -> LIN_packet(13), processLIN@tempRxData(8), 
 11226 ;;  s1              2    2[BANK0 ] PTR const void 
 11227 ;;		 -> LIN_packet$data(8), LIN_packet(13), LIN_DIAGNOSTIC_Data(8), LIN_TEMPERATURE_RISE_SA_Data(2), 
 11228 ;;		 -> LIN_TEMPERATURE_RISE_JS_Data(2), LIN_JUNCTION_TEMPERATURE_Data(2), LIN_HEATSINK_TEMPERATURE_Data(2), LIN_AMBIENT
      +_TEMPERATURE_Data(2), 
 11229 ;;		 -> LIN_CURRENT_SENSE_OFFSET_Data(2), LIN_ADC_CURRENT_SENSE_CORRECTED_Data(2), LIN_ADC_TEMP_SENSE_Data(2), LIN_ADC_C
      +URRENT_SENSE_UNCORRECTED_Data(2), 
 11230 ;;		 -> LIN_ADC_VCC_SENSE_Data(2), LIN_OVER_TEMP_FAULT_Data(1), LIN_UVLO_FAULT_Data(1), LIN_OVER_CURRENT_FAULT_Data(1), 
 11231 ;;		 -> LIN_GET_TRIGGER_TYPE_Data(1), LIN_OUTPUT_STATE_Data(1), LIN_TCC_SAMPLE_TIME_Data(2), LIN_REDUCED_DRIVE_TIME_Data
      +(1), 
 11232 ;;		 -> LIN_B1_COEF_Data(1), LIN_DAC_I_HW_TRIP_Data(1), LIN_ISENSE_MAX_Data(2), LIN_CURRENT2COUNTS_SQUARED_Data(2), 
 11233 ;;		 -> LIN_FACTOR_RDSON_RTHSA_Data(2), LIN_FACTOR_RDSON_RTHJS_Data(2), LIN_TJ_LIMIT_Data(1), LIN_ENTER_SLEEP_MODE_Data(
      +1), 
 11234 ;;		 -> LIN_TRIGGER_TYPE_Data(1), LIN_COMMAND_Data(1), 
 11235 ;;  n               2    4[BANK0 ] unsigned int 
 11236 ;; Auto vars:     Size  Location     Type
 11237 ;;  s               2    9[BANK0 ] PTR const unsigned char 
 11238 ;;		 -> LIN_packet$data(8), LIN_packet(13), LIN_DIAGNOSTIC_Data(8), LIN_TEMPERATURE_RISE_SA_Data(2), 
 11239 ;;		 -> LIN_TEMPERATURE_RISE_JS_Data(2), LIN_JUNCTION_TEMPERATURE_Data(2), LIN_HEATSINK_TEMPERATURE_Data(2), LIN_AMBIENT
      +_TEMPERATURE_Data(2), 
 11240 ;;		 -> LIN_CURRENT_SENSE_OFFSET_Data(2), LIN_ADC_CURRENT_SENSE_CORRECTED_Data(2), LIN_ADC_TEMP_SENSE_Data(2), LIN_ADC_C
      +URRENT_SENSE_UNCORRECTED_Data(2), 
 11241 ;;		 -> LIN_ADC_VCC_SENSE_Data(2), LIN_OVER_TEMP_FAULT_Data(1), LIN_UVLO_FAULT_Data(1), LIN_OVER_CURRENT_FAULT_Data(1), 
 11242 ;;		 -> LIN_GET_TRIGGER_TYPE_Data(1), LIN_OUTPUT_STATE_Data(1), LIN_TCC_SAMPLE_TIME_Data(2), LIN_REDUCED_DRIVE_TIME_Data
      +(1), 
 11243 ;;		 -> LIN_B1_COEF_Data(1), LIN_DAC_I_HW_TRIP_Data(1), LIN_ISENSE_MAX_Data(2), LIN_CURRENT2COUNTS_SQUARED_Data(2), 
 11244 ;;		 -> LIN_FACTOR_RDSON_RTHSA_Data(2), LIN_FACTOR_RDSON_RTHJS_Data(2), LIN_TJ_LIMIT_Data(1), LIN_ENTER_SLEEP_MODE_Data(
      +1), 
 11245 ;;		 -> LIN_TRIGGER_TYPE_Data(1), LIN_COMMAND_Data(1), 
 11246 ;;  d               2    7[BANK0 ] PTR unsigned char 
 11247 ;;		 -> LIN_packet(13), processLIN@tempRxData(8), 
 11248 ;;  tmp             1    6[BANK0 ] unsigned char 
 11249 ;; Return value:  Size  Location     Type
 11250 ;;                  2    0[BANK0 ] PTR void 
 11251 ;; Registers used:
 11252 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11253 ;; Tracked objects:
 11254 ;;		On entry : 3F/0
 11255 ;;		On exit  : 3F/0
 11256 ;;		Unchanged: 0/0
 11257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11258 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11259 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11261 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11262 ;;Total ram usage:       11 bytes
 11263 ;; Hardware stack levels used: 1
 11264 ;; Hardware stack levels required when called: 5
 11265 ;; This function calls:
 11266 ;;		Nothing
 11267 ;; This function is called by:
 11268 ;;		_LIN_queuePacket
 11269 ;;		_LIN_getPacket
 11270 ;; This function uses a non-reentrant model
 11271 ;;
 11272                           
 11273     0B82                     _memcpy:	
 11274                           ;psect for function _memcpy
 11275                           
 11276                           
 11277                           ;incstack = 0
 11278                           ; Regs used in _memcpy: [wreg+fsr1l+fsr1h+status,2+status,0]
 11279     0B82  0851               	movf	memcpy@s1+1,w
 11280     0B83  00D8               	movwf	memcpy@s+1
 11281     0B84  0850               	movf	memcpy@s1,w
 11282     0B85  00D7               	movwf	memcpy@s
 11283     0B86  084F               	movf	memcpy@d1+1,w
 11284     0B87  00D6               	movwf	memcpy@d+1
 11285     0B88  084E               	movf	memcpy@d1,w
 11286     0B89  00D5               	movwf	memcpy@d
 11287     0B8A                     l5106:
 11288     0B8A  3001               	movlw	1
 11289     0B8B  02D2               	subwf	memcpy@n,f
 11290     0B8C  3000               	movlw	0
 11291     0B8D  3BD3               	subwfb	memcpy@n+1,f
 11292     0B8E  0A52               	incf	memcpy@n,w
 11293     0B8F  1903               	btfsc	3,2
 11294     0B90  0A53               	incf	memcpy@n+1,w
 11295     0B91  1903               	btfsc	3,2
 11296     0B92  0008               	return
 11297     0B93  0857               	movf	memcpy@s,w
 11298     0B94  0086               	movwf	6
 11299     0B95  0858               	movf	memcpy@s+1,w
 11300     0B96  0087               	movwf	7
 11301     0B97  0801               	movf	1,w
 11302     0B98  00D4               	movwf	memcpy@tmp
 11303     0B99  3001               	movlw	1
 11304     0B9A  07D7               	addwf	memcpy@s,f
 11305     0B9B  3000               	movlw	0
 11306     0B9C  3DD8               	addwfc	memcpy@s+1,f
 11307     0B9D  0855               	movf	memcpy@d,w
 11308     0B9E  0086               	movwf	6
 11309     0B9F  0856               	movf	memcpy@d+1,w
 11310     0BA0  0087               	movwf	7
 11311     0BA1  0854               	movf	memcpy@tmp,w
 11312     0BA2  0081               	movwf	1
 11313     0BA3  3001               	movlw	1
 11314     0BA4  07D5               	addwf	memcpy@d,f
 11315     0BA5  3000               	movlw	0
 11316     0BA6  3DD6               	addwfc	memcpy@d+1,f
 11317     0BA7  2B8A               	goto	l5106
 11318     0BA8                     __end_of_memcpy:
 11319                           
 11320                           	psect	text36
 11321     0AF8                     __ptext36:	
 11322 ;; *************** function _LIN_sendPacket *****************
 11323 ;; Defined at:
 11324 ;;		line 192 in file "mcc_generated_files/LINDrivers/lin_slave.c"
 11325 ;; Parameters:    Size  Location     Type
 11326 ;;  length          1    wreg     unsigned char 
 11327 ;;  pid             1    8[BANK0 ] unsigned char 
 11328 ;;  data            1    9[BANK0 ] PTR unsigned char 
 11329 ;;		 -> LIN_packet(13), 
 11330 ;; Auto vars:     Size  Location     Type
 11331 ;;  length          1   11[BANK0 ] unsigned char 
 11332 ;;  i               1   12[BANK0 ] unsigned char 
 11333 ;; Return value:  Size  Location     Type
 11334 ;;                  1    wreg      void 
 11335 ;; Registers used:
 11336 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11337 ;; Tracked objects:
 11338 ;;		On entry : 3F/1
 11339 ;;		On exit  : 3F/E
 11340 ;;		Unchanged: 0/0
 11341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11342 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11343 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11344 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11345 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11346 ;;Total ram usage:        5 bytes
 11347 ;; Hardware stack levels used: 1
 11348 ;; Hardware stack levels required when called: 6
 11349 ;; This function calls:
 11350 ;;		_EUSART1_Write
 11351 ;;		_LIN_getChecksum
 11352 ;; This function is called by:
 11353 ;;		_LIN_queuePacket
 11354 ;; This function uses a non-reentrant model
 11355 ;;
 11356                           
 11357     0AF8                     _LIN_sendPacket:	
 11358                           ;psect for function _LIN_sendPacket
 11359                           
 11360                           
 11361                           ;incstack = 0
 11362                           ; Regs used in _LIN_sendPacket: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11363                           ;LIN_sendPacket@length stored from wreg
 11364     0AF8  0140               	movlb	0	; select bank0
 11365     0AF9  00D9               	movwf	LIN_sendPacket@length
 11366                           
 11367                           ;mcc_generated_files/LINDrivers/lin_slave.c: 195:     for(uint8_t i = 0; i < length; i++
      +                          ){
 11368     0AFA  01DA               	clrf	LIN_sendPacket@i
 11369     0AFB                     l4390:
 11370     0AFB  0859               	movf	LIN_sendPacket@length,w
 11371     0AFC  025A               	subwf	LIN_sendPacket@i,w
 11372     0AFD  1803               	btfsc	3,0
 11373     0AFE  2B0F               	goto	l4392
 11374                           
 11375                           ;mcc_generated_files/LINDrivers/lin_slave.c: 196:         EUSART1_Write(*(data + i));
 11376     0AFF  085A               	movf	LIN_sendPacket@i,w
 11377     0B00  0757               	addwf	LIN_sendPacket@data,w
 11378     0B01  00D8               	movwf	??_LIN_sendPacket
 11379     0B02  0858               	movf	??_LIN_sendPacket,w
 11380     0B03  0086               	movwf	6
 11381     0B04  0187               	clrf	7
 11382     0B05  0801               	movf	1,w
 11383     0B06  318A  22D6  318A   	fcall	_EUSART1_Write
 11384                           
 11385                           ;mcc_generated_files/LINDrivers/lin_slave.c: 197:     }
 11386     0B09  3001               	movlw	1
 11387     0B0A  0140               	movlb	0	; select bank0
 11388     0B0B  00D8               	movwf	??_LIN_sendPacket
 11389     0B0C  0858               	movf	??_LIN_sendPacket,w
 11390     0B0D  07DA               	addwf	LIN_sendPacket@i,f
 11391     0B0E  2AFB               	goto	l4390
 11392     0B0F                     l4392:
 11393                           
 11394                           ;mcc_generated_files/LINDrivers/lin_slave.c: 199:     EUSART1_Write(LIN_getChecksum(leng
      +                          th, pid, data));
 11395     0B0F  0856               	movf	LIN_sendPacket@pid,w
 11396     0B10  00CE               	movwf	LIN_getChecksum@pid
 11397     0B11  0857               	movf	LIN_sendPacket@data,w
 11398     0B12  00CF               	movwf	LIN_getChecksum@data
 11399     0B13  0859               	movf	LIN_sendPacket@length,w
 11400     0B14  318C  2406  318A   	fcall	_LIN_getChecksum
 11401     0B17  318A  22D6         	fcall	_EUSART1_Write
 11402     0B19  0008               	return
 11403     0B1A                     __end_of_LIN_sendPacket:
 11404                           
 11405                           	psect	text37
 11406     0C06                     __ptext37:	
 11407 ;; *************** function _LIN_getChecksum *****************
 11408 ;; Defined at:
 11409 ;;		line 270 in file "mcc_generated_files/LINDrivers/lin_slave.c"
 11410 ;; Parameters:    Size  Location     Type
 11411 ;;  length          1    wreg     unsigned char 
 11412 ;;  pid             1    0[BANK0 ] unsigned char 
 11413 ;;  data            1    1[BANK0 ] PTR unsigned char 
 11414 ;;		 -> LIN_packet(13), 
 11415 ;; Auto vars:     Size  Location     Type
 11416 ;;  length          1    4[BANK0 ] unsigned char 
 11417 ;;  i               1    5[BANK0 ] unsigned char 
 11418 ;;  checksum        2    6[BANK0 ] unsigned short 
 11419 ;; Return value:  Size  Location     Type
 11420 ;;                  1    wreg      unsigned char 
 11421 ;; Registers used:
 11422 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11423 ;; Tracked objects:
 11424 ;;		On entry : 3E/1
 11425 ;;		On exit  : 3F/0
 11426 ;;		Unchanged: 0/0
 11427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11428 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11429 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11430 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11431 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11432 ;;Total ram usage:        8 bytes
 11433 ;; Hardware stack levels used: 1
 11434 ;; Hardware stack levels required when called: 5
 11435 ;; This function calls:
 11436 ;;		Nothing
 11437 ;; This function is called by:
 11438 ;;		_LIN_queuePacket
 11439 ;;		_LIN_handler
 11440 ;;		_LIN_sendPacket
 11441 ;; This function uses a non-reentrant model
 11442 ;;
 11443                           
 11444     0C06                     _LIN_getChecksum:	
 11445                           ;psect for function _LIN_getChecksum
 11446                           
 11447                           
 11448                           ;incstack = 0
 11449                           ; Regs used in _LIN_getChecksum: [wreg+fsr1l+fsr1h+status,2+status,0]
 11450                           ;LIN_getChecksum@length stored from wreg
 11451     0C06  0140               	movlb	0	; select bank0
 11452     0C07  00D2               	movwf	LIN_getChecksum@length
 11453                           
 11454                           ;mcc_generated_files/LINDrivers/lin_slave.c: 271:     uint16_t checksum = pid;
 11455     0C08  084E               	movf	LIN_getChecksum@pid,w
 11456     0C09  00D0               	movwf	??_LIN_getChecksum
 11457     0C0A  01D1               	clrf	??_LIN_getChecksum+1
 11458     0C0B  0850               	movf	??_LIN_getChecksum,w
 11459     0C0C  00D4               	movwf	LIN_getChecksum@checksum
 11460     0C0D  0851               	movf	??_LIN_getChecksum+1,w
 11461     0C0E  00D5               	movwf	LIN_getChecksum@checksum+1
 11462                           
 11463                           ;mcc_generated_files/LINDrivers/lin_slave.c: 273:     for (uint8_t i = 0; i < length; i+
      +                          +){
 11464     0C0F  01D3               	clrf	LIN_getChecksum@i
 11465     0C10                     l4306:
 11466     0C10  0852               	movf	LIN_getChecksum@length,w
 11467     0C11  0253               	subwf	LIN_getChecksum@i,w
 11468     0C12  1803               	btfsc	3,0
 11469     0C13  2C32               	goto	l310
 11470                           
 11471                           ;mcc_generated_files/LINDrivers/lin_slave.c: 274:         checksum = checksum + *data++;
 11472     0C14  084F               	movf	LIN_getChecksum@data,w
 11473     0C15  0086               	movwf	6
 11474     0C16  0187               	clrf	7
 11475     0C17  0801               	movf	1,w
 11476     0C18  0754               	addwf	LIN_getChecksum@checksum,w
 11477     0C19  00D4               	movwf	LIN_getChecksum@checksum
 11478     0C1A  0855               	movf	LIN_getChecksum@checksum+1,w
 11479     0C1B  1803               	skipnc
 11480     0C1C  0A55               	incf	LIN_getChecksum@checksum+1,w
 11481     0C1D  00D5               	movwf	LIN_getChecksum@checksum+1
 11482     0C1E  3001               	movlw	1
 11483     0C1F  00D0               	movwf	??_LIN_getChecksum
 11484     0C20  0850               	movf	??_LIN_getChecksum,w
 11485     0C21  07CF               	addwf	LIN_getChecksum@data,f
 11486                           
 11487                           ;mcc_generated_files/LINDrivers/lin_slave.c: 275:         if(checksum > 0xFF)
 11488     0C22  3001               	movlw	1
 11489     0C23  0255               	subwf	LIN_getChecksum@checksum+1,w
 11490     0C24  3000               	movlw	0
 11491     0C25  1903               	skipnz
 11492     0C26  0254               	subwf	LIN_getChecksum@checksum,w
 11493     0C27  1C03               	skipc
 11494     0C28  2C2D               	goto	l4304
 11495                           
 11496                           ;mcc_generated_files/LINDrivers/lin_slave.c: 276:             checksum -= 0xFF;
 11497     0C29  30FF               	movlw	255
 11498     0C2A  02D4               	subwf	LIN_getChecksum@checksum,f
 11499     0C2B  3000               	movlw	0
 11500     0C2C  3BD5               	subwfb	LIN_getChecksum@checksum+1,f
 11501     0C2D                     l4304:
 11502                           
 11503                           ;mcc_generated_files/LINDrivers/lin_slave.c: 277:     }
 11504     0C2D  3001               	movlw	1
 11505     0C2E  00D0               	movwf	??_LIN_getChecksum
 11506     0C2F  0850               	movf	??_LIN_getChecksum,w
 11507     0C30  07D3               	addwf	LIN_getChecksum@i,f
 11508     0C31  2C10               	goto	l4306
 11509     0C32                     l310:
 11510                           
 11511                           ;mcc_generated_files/LINDrivers/lin_slave.c: 278:     checksum = ~checksum;
 11512     0C32  09D4               	comf	LIN_getChecksum@checksum,f
 11513     0C33  09D5               	comf	LIN_getChecksum@checksum+1,f
 11514                           
 11515                           ;mcc_generated_files/LINDrivers/lin_slave.c: 280:     return (uint8_t)checksum;
 11516     0C34  0854               	movf	LIN_getChecksum@checksum,w
 11517     0C35  0008               	return
 11518     0C36                     __end_of_LIN_getChecksum:
 11519                           
 11520                           	psect	text38
 11521     0AD6                     __ptext38:	
 11522 ;; *************** function _EUSART1_Write *****************
 11523 ;; Defined at:
 11524 ;;		line 173 in file "mcc_generated_files/eusart1.c"
 11525 ;; Parameters:    Size  Location     Type
 11526 ;;  txData          1    wreg     unsigned char 
 11527 ;; Auto vars:     Size  Location     Type
 11528 ;;  txData          1    1[BANK0 ] unsigned char 
 11529 ;; Return value:  Size  Location     Type
 11530 ;;                  1    wreg      void 
 11531 ;; Registers used:
 11532 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11533 ;; Tracked objects:
 11534 ;;		On entry : 3F/0
 11535 ;;		On exit  : 3F/E
 11536 ;;		Unchanged: 0/0
 11537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11539 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11540 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11541 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11542 ;;Total ram usage:        2 bytes
 11543 ;; Hardware stack levels used: 1
 11544 ;; Hardware stack levels required when called: 5
 11545 ;; This function calls:
 11546 ;;		Nothing
 11547 ;; This function is called by:
 11548 ;;		_LIN_sendPacket
 11549 ;; This function uses a non-reentrant model
 11550 ;;
 11551                           
 11552     0AD6                     _EUSART1_Write:	
 11553                           ;psect for function _EUSART1_Write
 11554                           
 11555                           
 11556                           ;incstack = 0
 11557                           ; Regs used in _EUSART1_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
 11558                           ;EUSART1_Write@txData stored from wreg
 11559     0AD6  00CF               	movwf	EUSART1_Write@txData
 11560     0AD7                     l4322:	
 11561                           ;mcc_generated_files/eusart1.c: 173: void EUSART1_Write(uint8_t txData);mcc_generated_fi
      +                          les/eusart1.c: 174: {;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBuffer
      +                          Remaining)
 11562                           
 11563                           
 11564                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
 11565     0AD7  0824               	movf	_eusart1TxBufferRemaining,w	;volatile
 11566     0AD8  1903               	btfsc	3,2
 11567     0AD9  2AD7               	goto	l4322
 11568                           
 11569                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE3bits.TX1IE)
 11570     0ADA  014E               	movlb	14	; select bank14
 11571     0ADB  1A19               	btfsc	25,4	;volatile
 11572     0ADC  2AE2               	goto	l705
 11573                           
 11574                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          X1REG = txData;
 11575     0ADD  0140               	movlb	0	; select bank0
 11576     0ADE  084F               	movf	EUSART1_Write@txData,w
 11577     0ADF  0142               	movlb	2	; select bank2
 11578     0AE0  009A               	movwf	26	;volatile
 11579                           
 11580                           ;mcc_generated_files/eusart1.c: 182:     }
 11581     0AE1  2AF5               	goto	l4336
 11582     0AE2                     l705:	
 11583                           ;mcc_generated_files/eusart1.c: 183:     else
 11584                           
 11585                           
 11586                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE3bits.TX1IE = 0;
 11587     0AE2  1219               	bcf	25,4	;volatile
 11588                           
 11589                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
 11590     0AE3  0140               	movlb	0	; select bank0
 11591     0AE4  0826               	movf	_eusart1TxHead,w
 11592     0AE5  3E52               	addlw	(low (_eusart1TxBuffer| (0+256)))& (0+255)
 11593     0AE6  0086               	movwf	6
 11594     0AE7  3001               	movlw	1	; select bank2/3
 11595     0AE8  0087               	movwf	7
 11596     0AE9  084F               	movf	EUSART1_Write@txData,w
 11597     0AEA  0081               	movwf	1
 11598     0AEB  3001               	movlw	1
 11599     0AEC  00CE               	movwf	??_EUSART1_Write
 11600     0AED  084E               	movf	??_EUSART1_Write,w
 11601     0AEE  07A6               	addwf	_eusart1TxHead,f	;volatile
 11602                           
 11603                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
 11604     0AEF  3008               	movlw	8
 11605     0AF0  0226               	subwf	_eusart1TxHead,w
 11606     0AF1  1803               	btfsc	3,0
 11607                           
 11608                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
 11609     0AF2  01A6               	clrf	_eusart1TxHead	;volatile
 11610                           
 11611                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
 11612     0AF3  3001               	movlw	1
 11613     0AF4  02A4               	subwf	_eusart1TxBufferRemaining,f	;volatile
 11614     0AF5                     l4336:
 11615                           
 11616                           ;mcc_generated_files/eusart1.c: 193:     PIE3bits.TX1IE = 1;
 11617     0AF5  014E               	movlb	14	; select bank14
 11618     0AF6  1619               	bsf	25,4	;volatile
 11619     0AF7  0008               	return
 11620     0AF8                     __end_of_EUSART1_Write:
 11621                           
 11622                           	psect	text39
 11623     088A                     __ptext39:	
 11624 ;; *************** function _LIN_enableRx *****************
 11625 ;; Defined at:
 11626 ;;		line 311 in file "mcc_generated_files/LINDrivers/lin_slave.c"
 11627 ;; Parameters:    Size  Location     Type
 11628 ;;		None
 11629 ;; Auto vars:     Size  Location     Type
 11630 ;;		None
 11631 ;; Return value:  Size  Location     Type
 11632 ;;                  1    wreg      void 
 11633 ;; Registers used:
 11634 ;;		None
 11635 ;; Tracked objects:
 11636 ;;		On entry : 3D/0
 11637 ;;		On exit  : 3F/E
 11638 ;;		Unchanged: 0/0
 11639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11643 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11644 ;;Total ram usage:        0 bytes
 11645 ;; Hardware stack levels used: 1
 11646 ;; Hardware stack levels required when called: 5
 11647 ;; This function calls:
 11648 ;;		Nothing
 11649 ;; This function is called by:
 11650 ;;		_LIN_init
 11651 ;;		_LIN_handler
 11652 ;; This function uses a non-reentrant model
 11653 ;;
 11654                           
 11655     088A                     _LIN_enableRx:	
 11656                           ;psect for function _LIN_enableRx
 11657                           
 11658                           
 11659                           ;mcc_generated_files/LINDrivers/lin_slave.c: 312:     RC1STAbits.CREN = 1;
 11660                           
 11661                           ;incstack = 0
 11662                           ; Regs used in _LIN_enableRx: []
 11663     088A  0142               	movlb	2	; select bank2
 11664     088B  161D               	bsf	29,4	;volatile
 11665                           
 11666                           ;mcc_generated_files/LINDrivers/lin_slave.c: 313:     PIE3bits.RC1IE = 1;
 11667     088C  014E               	movlb	14	; select bank14
 11668     088D  1699               	bsf	25,5	;volatile
 11669     088E  0008               	return
 11670     088F                     __end_of_LIN_enableRx:
 11671                           
 11672                           	psect	text40
 11673     0885                     __ptext40:	
 11674 ;; *************** function _LIN_disableRx *****************
 11675 ;; Defined at:
 11676 ;;		line 316 in file "mcc_generated_files/LINDrivers/lin_slave.c"
 11677 ;; Parameters:    Size  Location     Type
 11678 ;;		None
 11679 ;; Auto vars:     Size  Location     Type
 11680 ;;		None
 11681 ;; Return value:  Size  Location     Type
 11682 ;;                  1    wreg      void 
 11683 ;; Registers used:
 11684 ;;		None
 11685 ;; Tracked objects:
 11686 ;;		On entry : 3F/1
 11687 ;;		On exit  : 3F/E
 11688 ;;		Unchanged: 0/0
 11689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11694 ;;Total ram usage:        0 bytes
 11695 ;; Hardware stack levels used: 1
 11696 ;; Hardware stack levels required when called: 5
 11697 ;; This function calls:
 11698 ;;		Nothing
 11699 ;; This function is called by:
 11700 ;;		_LIN_handler
 11701 ;; This function uses a non-reentrant model
 11702 ;;
 11703                           
 11704     0885                     _LIN_disableRx:	
 11705                           ;psect for function _LIN_disableRx
 11706                           
 11707                           
 11708                           ;mcc_generated_files/LINDrivers/lin_slave.c: 317:     RC1STAbits.CREN = 0;
 11709                           
 11710                           ;incstack = 0
 11711                           ; Regs used in _LIN_disableRx: []
 11712     0885  0142               	movlb	2	; select bank2
 11713     0886  121D               	bcf	29,4	;volatile
 11714                           
 11715                           ;mcc_generated_files/LINDrivers/lin_slave.c: 318:     PIE3bits.RC1IE = 0;
 11716     0887  014E               	movlb	14	; select bank14
 11717     0888  1299               	bcf	25,5	;volatile
 11718     0889  0008               	return
 11719     088A                     __end_of_LIN_disableRx:
 11720                           
 11721                           	psect	text41
 11722     0A23                     __ptext41:	
 11723 ;; *************** function _LIN_checkPID *****************
 11724 ;; Defined at:
 11725 ;;		line 241 in file "mcc_generated_files/LINDrivers/lin_slave.c"
 11726 ;; Parameters:    Size  Location     Type
 11727 ;;  pid             1    wreg     unsigned char 
 11728 ;; Auto vars:     Size  Location     Type
 11729 ;;  pid             1    7[BANK0 ] unsigned char 
 11730 ;; Return value:  Size  Location     Type
 11731 ;;                  1    wreg      _Bool 
 11732 ;; Registers used:
 11733 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11734 ;; Tracked objects:
 11735 ;;		On entry : 3F/1
 11736 ;;		On exit  : 3F/0
 11737 ;;		Unchanged: 0/0
 11738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11740 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11742 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11743 ;;Total ram usage:        1 bytes
 11744 ;; Hardware stack levels used: 1
 11745 ;; Hardware stack levels required when called: 6
 11746 ;; This function calls:
 11747 ;;		_LIN_calcParity
 11748 ;;		_LIN_getFromTable
 11749 ;; This function is called by:
 11750 ;;		_LIN_handler
 11751 ;; This function uses a non-reentrant model
 11752 ;;
 11753                           
 11754     0A23                     _LIN_checkPID:	
 11755                           ;psect for function _LIN_checkPID
 11756                           
 11757                           
 11758                           ;incstack = 0
 11759                           ; Regs used in _LIN_checkPID: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11760                           ;LIN_checkPID@pid stored from wreg
 11761     0A23  0140               	movlb	0	; select bank0
 11762     0A24  00D5               	movwf	LIN_checkPID@pid
 11763                           
 11764                           ;mcc_generated_files/LINDrivers/lin_slave.c: 242:     if(LIN_getFromTable(pid, TYPE) == 
      +                          ERROR)
 11765     0A25  01CE               	clrf	LIN_getFromTable@param
 11766     0A26  0ACE               	incf	LIN_getFromTable@param,f
 11767     0A27  0855               	movf	LIN_checkPID@pid,w
 11768     0A28  318E  2646  318A   	fcall	_LIN_getFromTable
 11769     0A2B  3A02               	xorlw	2
 11770     0A2C  1D03               	skipz
 11771     0A2D  2A30               	goto	l4650
 11772     0A2E                     l4646:
 11773                           
 11774                           ;mcc_generated_files/LINDrivers/lin_slave.c: 243:         return 0;
 11775     0A2E  3000               	movlw	0
 11776     0A2F  0008               	return
 11777     0A30                     l4650:
 11778                           
 11779                           ;mcc_generated_files/LINDrivers/lin_slave.c: 245:     if(pid == LIN_calcParity(pid & 0x3
      +                          F))
 11780     0A30  0855               	movf	LIN_checkPID@pid,w
 11781     0A31  393F               	andlw	63
 11782     0A32  3187  2751  318A   	fcall	_LIN_calcParity
 11783     0A35  0655               	xorwf	LIN_checkPID@pid,w
 11784     0A36  1D03               	skipz
 11785     0A37  2A2E               	goto	l4646
 11786                           
 11787                           ;mcc_generated_files/LINDrivers/lin_slave.c: 246:         return 1;
 11788     0A38  3001               	movlw	1
 11789     0A39  0008               	return
 11790     0A3A                     __end_of_LIN_checkPID:
 11791                           
 11792                           	psect	text42
 11793     0E46                     __ptext42:	
 11794 ;; *************** function _LIN_getFromTable *****************
 11795 ;; Defined at:
 11796 ;;		line 211 in file "mcc_generated_files/LINDrivers/lin_slave.c"
 11797 ;; Parameters:    Size  Location     Type
 11798 ;;  cmd             1    wreg     unsigned char 
 11799 ;;  param           1    0[BANK0 ] enum E221
 11800 ;; Auto vars:     Size  Location     Type
 11801 ;;  cmd             1    3[BANK0 ] unsigned char 
 11802 ;;  length          1    4[BANK0 ] unsigned char 
 11803 ;;  rxCommand       2    5[BANK0 ] PTR const struct .
 11804 ;;		 -> NULL(0), scheduleTable(140), 
 11805 ;; Return value:  Size  Location     Type
 11806 ;;                  1    wreg      unsigned char 
 11807 ;; Registers used:
 11808 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
 11809 ;; Tracked objects:
 11810 ;;		On entry : 3E/1
 11811 ;;		On exit  : 3F/0
 11812 ;;		Unchanged: 0/0
 11813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11814 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11815 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11816 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11817 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11818 ;;Total ram usage:        7 bytes
 11819 ;; Hardware stack levels used: 1
 11820 ;; Hardware stack levels required when called: 5
 11821 ;; This function calls:
 11822 ;;		Nothing
 11823 ;; This function is called by:
 11824 ;;		_LIN_handler
 11825 ;;		_LIN_checkPID
 11826 ;; This function uses a non-reentrant model
 11827 ;;
 11828                           
 11829     0E46                     _LIN_getFromTable:	
 11830                           ;psect for function _LIN_getFromTable
 11831                           
 11832                           
 11833                           ;incstack = 0
 11834                           ; Regs used in _LIN_getFromTable: [wreg-fsr0h+status,2+status,0+pclath]
 11835                           ;LIN_getFromTable@cmd stored from wreg
 11836     0E46  0140               	movlb	0	; select bank0
 11837     0E47  00D1               	movwf	LIN_getFromTable@cmd
 11838                           
 11839                           ;mcc_generated_files/LINDrivers/lin_slave.c: 212:     const lin_rx_cmd_t* rxCommand = LI
      +                          N_rxCommand;
 11840     0E48  0141               	movlb	1	; select bank1
 11841     0E49  086E               	movf	(_LIN_rxCommand+1)^(0+128),w
 11842     0E4A  0140               	movlb	0	; select bank0
 11843     0E4B  00D4               	movwf	LIN_getFromTable@rxCommand+1
 11844     0E4C  0141               	movlb	1	; select bank1
 11845     0E4D  086D               	movf	_LIN_rxCommand^(0+128),w
 11846     0E4E  0140               	movlb	0	; select bank0
 11847     0E4F  00D3               	movwf	LIN_getFromTable@rxCommand
 11848                           
 11849                           ;mcc_generated_files/LINDrivers/lin_slave.c: 214:     cmd &= 0x3F;
 11850     0E50  303F               	movlw	63
 11851     0E51  00CF               	movwf	??_LIN_getFromTable
 11852     0E52  084F               	movf	??_LIN_getFromTable,w
 11853     0E53  05D1               	andwf	LIN_getFromTable@cmd,f
 11854                           
 11855                           ;mcc_generated_files/LINDrivers/lin_slave.c: 216:     for(uint8_t length = 0; length < L
      +                          IN_rxCommandLength; length++){
 11856     0E54  01D2               	clrf	LIN_getFromTable@length
 11857     0E55                     l4434:
 11858     0E55  086F               	movf	_LIN_rxCommandLength,w
 11859     0E56  0252               	subwf	LIN_getFromTable@length,w
 11860     0E57  1803               	btfsc	3,0
 11861     0E58  2E98               	goto	l4450
 11862                           
 11863                           ;mcc_generated_files/LINDrivers/lin_slave.c: 217:         if(cmd == rxCommand->cmd){
 11864     0E59  0853               	movf	LIN_getFromTable@rxCommand,w
 11865     0E5A  0084               	movwf	4
 11866     0E5B  0854               	movf	LIN_getFromTable@rxCommand+1,w
 11867     0E5C  0085               	movwf	5
 11868     0E5D  0800               	movf	0,w	;code access
 11869     0E5E  0651               	xorwf	LIN_getFromTable@cmd,w
 11870     0E5F  1903               	btfsc	3,2
 11871     0E60  2E98               	goto	l4450
 11872                           
 11873                           ;mcc_generated_files/LINDrivers/lin_slave.c: 220:         rxCommand++;
 11874     0E61  3005               	movlw	5
 11875     0E62  07D3               	addwf	LIN_getFromTable@rxCommand,f
 11876     0E63  3000               	movlw	0
 11877     0E64  3DD4               	addwfc	LIN_getFromTable@rxCommand+1,f
 11878                           
 11879                           ;mcc_generated_files/LINDrivers/lin_slave.c: 222:         if(length == (LIN_rxCommandLen
      +                          gth-1)){
 11880     0E65  086F               	movf	_LIN_rxCommandLength,w
 11881     0E66  3EFF               	addlw	255
 11882     0E67  00CF               	movwf	??_LIN_getFromTable
 11883     0E68  30FF               	movlw	255
 11884     0E69  1803               	skipnc
 11885     0E6A  3000               	movlw	0
 11886     0E6B  00D0               	movwf	??_LIN_getFromTable+1
 11887     0E6C  0852               	movf	LIN_getFromTable@length,w
 11888     0E6D  064F               	xorwf	??_LIN_getFromTable,w
 11889     0E6E  0450               	iorwf	??_LIN_getFromTable+1,w
 11890     0E6F  1D03               	skipz
 11891     0E70  2E73               	goto	l4432
 11892     0E71                     l4428:
 11893                           
 11894                           ;mcc_generated_files/LINDrivers/lin_slave.c: 223:             return ERROR;
 11895     0E71  3002               	movlw	2
 11896     0E72  0008               	return
 11897     0E73                     l4432:
 11898                           
 11899                           ;mcc_generated_files/LINDrivers/lin_slave.c: 225:     }
 11900     0E73  3001               	movlw	1
 11901     0E74  00CF               	movwf	??_LIN_getFromTable
 11902     0E75  084F               	movf	??_LIN_getFromTable,w
 11903     0E76  07D2               	addwf	LIN_getFromTable@length,f
 11904     0E77  2E55               	goto	l4434
 11905     0E78                     l4436:
 11906                           
 11907                           ;mcc_generated_files/LINDrivers/lin_slave.c: 229:             return rxCommand->cmd;
 11908     0E78  0853               	movf	LIN_getFromTable@rxCommand,w
 11909     0E79  0084               	movwf	4
 11910     0E7A  0854               	movf	LIN_getFromTable@rxCommand+1,w
 11911     0E7B  0085               	movwf	5
 11912     0E7C  0800               	movf	0,w	;code access
 11913     0E7D  0008               	return
 11914     0E7E                     l4440:
 11915                           
 11916                           ;mcc_generated_files/LINDrivers/lin_slave.c: 231:             return rxCommand->type;
 11917     0E7E  0854               	movf	LIN_getFromTable@rxCommand+1,w
 11918     0E7F  00D0               	movwf	??_LIN_getFromTable+1
 11919     0E80  0853               	movf	LIN_getFromTable@rxCommand,w
 11920     0E81  00CF               	movwf	??_LIN_getFromTable
 11921     0E82  3001               	movlw	1
 11922     0E83  074F               	addwf	??_LIN_getFromTable,w
 11923     0E84  0084               	movwf	4
 11924     0E85  0850               	movf	??_LIN_getFromTable+1,w
 11925     0E86  1803               	skipnc
 11926     0E87  0A50               	incf	??_LIN_getFromTable+1,w
 11927     0E88  0085               	movwf	5
 11928     0E89  0800               	movf	0,w	;code access
 11929     0E8A  0008               	return
 11930     0E8B                     l4444:
 11931                           
 11932                           ;mcc_generated_files/LINDrivers/lin_slave.c: 233:             return rxCommand->length;
 11933     0E8B  0854               	movf	LIN_getFromTable@rxCommand+1,w
 11934     0E8C  00D0               	movwf	??_LIN_getFromTable+1
 11935     0E8D  0853               	movf	LIN_getFromTable@rxCommand,w
 11936     0E8E  00CF               	movwf	??_LIN_getFromTable
 11937     0E8F  3002               	movlw	2
 11938     0E90  074F               	addwf	??_LIN_getFromTable,w
 11939     0E91  0084               	movwf	4
 11940     0E92  0850               	movf	??_LIN_getFromTable+1,w
 11941     0E93  1803               	skipnc
 11942     0E94  0A50               	incf	??_LIN_getFromTable+1,w
 11943     0E95  0085               	movwf	5
 11944     0E96  0800               	movf	0,w	;code access
 11945     0E97  0008               	return
 11946     0E98                     l4450:
 11947     0E98  084E               	movf	LIN_getFromTable@param,w
 11948     0E99  00CF               	movwf	??_LIN_getFromTable
 11949     0E9A  01D0               	clrf	??_LIN_getFromTable+1
 11950                           
 11951                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11952                           ; Switch size 1, requested type "simple"
 11953                           ; Number of cases is 1, Range of values is 0 to 0
 11954                           ; switch strategies available:
 11955                           ; Name         Instructions Cycles
 11956                           ; simple_byte            4     3 (average)
 11957                           ; direct_byte            8     6 (fixed)
 11958                           ; jumptable            260     6 (fixed)
 11959                           ;	Chosen strategy is simple_byte
 11960     0E9B  0850               	movf	??_LIN_getFromTable+1,w
 11961     0E9C  3A00               	xorlw	0	; case 0
 11962     0E9D  1903               	skipnz
 11963     0E9E  2EA0               	goto	l5470
 11964     0E9F  2E71               	goto	l4428
 11965     0EA0                     l5470:
 11966                           
 11967                           ; Switch size 1, requested type "simple"
 11968                           ; Number of cases is 3, Range of values is 0 to 2
 11969                           ; switch strategies available:
 11970                           ; Name         Instructions Cycles
 11971                           ; simple_byte           10     6 (average)
 11972                           ; direct_byte           12     6 (fixed)
 11973                           ; jumptable            260     6 (fixed)
 11974                           ;	Chosen strategy is simple_byte
 11975     0EA0  084F               	movf	??_LIN_getFromTable,w
 11976     0EA1  3A00               	xorlw	0	; case 0
 11977     0EA2  1903               	skipnz
 11978     0EA3  2E78               	goto	l4436
 11979     0EA4  3A01               	xorlw	1	; case 1
 11980     0EA5  1903               	skipnz
 11981     0EA6  2E7E               	goto	l4440
 11982     0EA7  3A03               	xorlw	3	; case 2
 11983     0EA8  1903               	skipnz
 11984     0EA9  2E8B               	goto	l4444
 11985     0EAA  2E71               	goto	l4428
 11986     0EAB  0008               	return
 11987     0EAC                     __end_of_LIN_getFromTable:
 11988                           
 11989                           	psect	text43
 11990     0751                     __ptext43:	
 11991 ;; *************** function _LIN_calcParity *****************
 11992 ;; Defined at:
 11993 ;;		line 252 in file "mcc_generated_files/LINDrivers/lin_slave.c"
 11994 ;; Parameters:    Size  Location     Type
 11995 ;;  CMD             1    wreg     unsigned char 
 11996 ;; Auto vars:     Size  Location     Type
 11997 ;;  CMD             1    1[BANK0 ] unsigned char 
 11998 ;;  PID             1    2[BANK0 ] struct .
 11999 ;; Return value:  Size  Location     Type
 12000 ;;                  1    wreg      unsigned char 
 12001 ;; Registers used:
 12002 ;;		wreg, status,0
 12003 ;; Tracked objects:
 12004 ;;		On entry : 3F/0
 12005 ;;		On exit  : 3F/0
 12006 ;;		Unchanged: 0/0
 12007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12009 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12010 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12011 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12012 ;;Total ram usage:        3 bytes
 12013 ;; Hardware stack levels used: 1
 12014 ;; Hardware stack levels required when called: 5
 12015 ;; This function calls:
 12016 ;;		Nothing
 12017 ;; This function is called by:
 12018 ;;		_LIN_checkPID
 12019 ;; This function uses a non-reentrant model
 12020 ;;
 12021                           
 12022     0751                     _LIN_calcParity:	
 12023                           ;psect for function _LIN_calcParity
 12024                           
 12025                           
 12026                           ;incstack = 0
 12027                           ; Regs used in _LIN_calcParity: [wreg+status,0]
 12028                           ;LIN_calcParity@CMD stored from wreg
 12029     0751  00CF               	movwf	LIN_calcParity@CMD
 12030                           
 12031                           ;mcc_generated_files/LINDrivers/lin_slave.c: 253:     lin_pid_t PID;;mcc_generated_files
      +                          /LINDrivers/lin_slave.c: 254:     PID.rawPID = CMD;
 12032     0752  084F               	movf	LIN_calcParity@CMD,w
 12033     0753  00D0               	movwf	LIN_calcParity@PID
 12034                           
 12035                           ;mcc_generated_files/LINDrivers/lin_slave.c: 259:     PID.P0 = PID.ID0 ^ PID.ID1;
 12036     0754  1CD0               	btfss	LIN_calcParity@PID,1
 12037     0755  2F58               	goto	u2290
 12038     0756  3001               	movlw	1
 12039     0757  2F59               	goto	u2292
 12040     0758                     u2290:
 12041     0758  3000               	movlw	0
 12042     0759                     u2292:
 12043     0759  00CE               	movwf	??_LIN_calcParity
 12044     075A  1C50               	btfss	LIN_calcParity@PID,0
 12045     075B  2F5E               	goto	u2300
 12046     075C  3001               	movlw	1
 12047     075D  2F5F               	goto	u2302
 12048     075E                     u2300:
 12049     075E  3000               	movlw	0
 12050     075F                     u2302:
 12051     075F  064E               	xorwf	??_LIN_calcParity,w
 12052     0760  1903               	btfsc	3,2
 12053     0761  2F65               	goto	u2310
 12054     0762  0140               	movlb	0	; select bank0
 12055     0763  1750               	bsf	LIN_calcParity@PID,6
 12056     0764  2F67               	goto	u2324
 12057     0765                     u2310:
 12058     0765  0140               	movlb	0	; select bank0
 12059     0766  1350               	bcf	LIN_calcParity@PID,6
 12060     0767                     u2324:
 12061                           
 12062                           ;mcc_generated_files/LINDrivers/lin_slave.c: 260:     PID.P0 = PID.P0 ^ PID.ID2;
 12063     0767  1D50               	btfss	LIN_calcParity@PID,2
 12064     0768  2F6B               	goto	u2330
 12065     0769  3001               	movlw	1
 12066     076A  2F6C               	goto	u2332
 12067     076B                     u2330:
 12068     076B  3000               	movlw	0
 12069     076C                     u2332:
 12070     076C  00CE               	movwf	??_LIN_calcParity
 12071     076D  1F50               	btfss	LIN_calcParity@PID,6
 12072     076E  2F71               	goto	u2340
 12073     076F  3001               	movlw	1
 12074     0770  2F72               	goto	u2342
 12075     0771                     u2340:
 12076     0771  3000               	movlw	0
 12077     0772                     u2342:
 12078     0772  064E               	xorwf	??_LIN_calcParity,w
 12079     0773  1903               	btfsc	3,2
 12080     0774  2F78               	goto	u2350
 12081     0775  0140               	movlb	0	; select bank0
 12082     0776  1750               	bsf	LIN_calcParity@PID,6
 12083     0777  2F7A               	goto	u2364
 12084     0778                     u2350:
 12085     0778  0140               	movlb	0	; select bank0
 12086     0779  1350               	bcf	LIN_calcParity@PID,6
 12087     077A                     u2364:
 12088                           
 12089                           ;mcc_generated_files/LINDrivers/lin_slave.c: 261:     PID.P0 = PID.P0 ^ PID.ID4;
 12090     077A  1E50               	btfss	LIN_calcParity@PID,4
 12091     077B  2F7E               	goto	u2370
 12092     077C  3001               	movlw	1
 12093     077D  2F7F               	goto	u2372
 12094     077E                     u2370:
 12095     077E  3000               	movlw	0
 12096     077F                     u2372:
 12097     077F  00CE               	movwf	??_LIN_calcParity
 12098     0780  1F50               	btfss	LIN_calcParity@PID,6
 12099     0781  2F84               	goto	u2380
 12100     0782  3001               	movlw	1
 12101     0783  2F85               	goto	u2382
 12102     0784                     u2380:
 12103     0784  3000               	movlw	0
 12104     0785                     u2382:
 12105     0785  064E               	xorwf	??_LIN_calcParity,w
 12106     0786  1903               	btfsc	3,2
 12107     0787  2F8B               	goto	u2390
 12108     0788  0140               	movlb	0	; select bank0
 12109     0789  1750               	bsf	LIN_calcParity@PID,6
 12110     078A  2F8D               	goto	u2404
 12111     078B                     u2390:
 12112     078B  0140               	movlb	0	; select bank0
 12113     078C  1350               	bcf	LIN_calcParity@PID,6
 12114     078D                     u2404:
 12115                           
 12116                           ;mcc_generated_files/LINDrivers/lin_slave.c: 262:     PID.P1 = PID.ID1 ^ PID.ID3;
 12117     078D  1DD0               	btfss	LIN_calcParity@PID,3
 12118     078E  2F91               	goto	u2410
 12119     078F  3001               	movlw	1
 12120     0790  2F92               	goto	u2412
 12121     0791                     u2410:
 12122     0791  3000               	movlw	0
 12123     0792                     u2412:
 12124     0792  00CE               	movwf	??_LIN_calcParity
 12125     0793  1CD0               	btfss	LIN_calcParity@PID,1
 12126     0794  2F97               	goto	u2420
 12127     0795  3001               	movlw	1
 12128     0796  2F98               	goto	u2422
 12129     0797                     u2420:
 12130     0797  3000               	movlw	0
 12131     0798                     u2422:
 12132     0798  064E               	xorwf	??_LIN_calcParity,w
 12133     0799  1903               	btfsc	3,2
 12134     079A  2F9E               	goto	u2430
 12135     079B  0140               	movlb	0	; select bank0
 12136     079C  17D0               	bsf	LIN_calcParity@PID,7
 12137     079D  2FA0               	goto	u2444
 12138     079E                     u2430:
 12139     079E  0140               	movlb	0	; select bank0
 12140     079F  13D0               	bcf	LIN_calcParity@PID,7
 12141     07A0                     u2444:
 12142                           
 12143                           ;mcc_generated_files/LINDrivers/lin_slave.c: 263:     PID.P1 = PID.P1 ^ PID.ID4;
 12144     07A0  1E50               	btfss	LIN_calcParity@PID,4
 12145     07A1  2FA4               	goto	u2450
 12146     07A2  3001               	movlw	1
 12147     07A3  2FA5               	goto	u2452
 12148     07A4                     u2450:
 12149     07A4  3000               	movlw	0
 12150     07A5                     u2452:
 12151     07A5  00CE               	movwf	??_LIN_calcParity
 12152     07A6  1FD0               	btfss	LIN_calcParity@PID,7
 12153     07A7  2FAA               	goto	u2460
 12154     07A8  3001               	movlw	1
 12155     07A9  2FAB               	goto	u2462
 12156     07AA                     u2460:
 12157     07AA  3000               	movlw	0
 12158     07AB                     u2462:
 12159     07AB  064E               	xorwf	??_LIN_calcParity,w
 12160     07AC  1903               	btfsc	3,2
 12161     07AD  2FB1               	goto	u2470
 12162     07AE  0140               	movlb	0	; select bank0
 12163     07AF  17D0               	bsf	LIN_calcParity@PID,7
 12164     07B0  2FB3               	goto	u2484
 12165     07B1                     u2470:
 12166     07B1  0140               	movlb	0	; select bank0
 12167     07B2  13D0               	bcf	LIN_calcParity@PID,7
 12168     07B3                     u2484:
 12169                           
 12170                           ;mcc_generated_files/LINDrivers/lin_slave.c: 264:     PID.P1 = PID.P1 ^ PID.ID5;
 12171     07B3  1ED0               	btfss	LIN_calcParity@PID,5
 12172     07B4  2FB7               	goto	u2490
 12173     07B5  3001               	movlw	1
 12174     07B6  2FB8               	goto	u2492
 12175     07B7                     u2490:
 12176     07B7  3000               	movlw	0
 12177     07B8                     u2492:
 12178     07B8  00CE               	movwf	??_LIN_calcParity
 12179     07B9  1FD0               	btfss	LIN_calcParity@PID,7
 12180     07BA  2FBD               	goto	u2500
 12181     07BB  3001               	movlw	1
 12182     07BC  2FBE               	goto	u2502
 12183     07BD                     u2500:
 12184     07BD  3000               	movlw	0
 12185     07BE                     u2502:
 12186     07BE  064E               	xorwf	??_LIN_calcParity,w
 12187     07BF  1903               	btfsc	3,2
 12188     07C0  2FC4               	goto	u2510
 12189     07C1  0140               	movlb	0	; select bank0
 12190     07C2  17D0               	bsf	LIN_calcParity@PID,7
 12191     07C3  2FC6               	goto	l4462
 12192     07C4                     u2510:
 12193     07C4  0140               	movlb	0	; select bank0
 12194     07C5  13D0               	bcf	LIN_calcParity@PID,7
 12195     07C6                     l4462:
 12196                           
 12197                           ;mcc_generated_files/LINDrivers/lin_slave.c: 265:     PID.P1 = ~PID.P1;
 12198     07C6  1003               	clrc
 12199     07C7  1FD0               	btfss	LIN_calcParity@PID,7
 12200     07C8  1403               	setc
 12201     07C9  1C03               	btfss	3,0
 12202     07CA  2FCE               	goto	u2530
 12203     07CB  0140               	movlb	0	; select bank0
 12204     07CC  17D0               	bsf	LIN_calcParity@PID,7
 12205     07CD  2FD0               	goto	l4464
 12206     07CE                     u2530:
 12207     07CE  0140               	movlb	0	; select bank0
 12208     07CF  13D0               	bcf	LIN_calcParity@PID,7
 12209     07D0                     l4464:
 12210                           
 12211                           ;mcc_generated_files/LINDrivers/lin_slave.c: 267:     return PID.rawPID;
 12212     07D0  0850               	movf	LIN_calcParity@PID,w
 12213     07D1  0008               	return
 12214     07D2                     __end_of_LIN_calcParity:
 12215                           
 12216                           	psect	text44
 12217     0988                     __ptext44:	
 12218 ;; *************** function _LIN_breakCheck *****************
 12219 ;; Defined at:
 12220 ;;		line 321 in file "mcc_generated_files/LINDrivers/lin_slave.c"
 12221 ;; Parameters:    Size  Location     Type
 12222 ;;		None
 12223 ;; Auto vars:     Size  Location     Type
 12224 ;;		None
 12225 ;; Return value:  Size  Location     Type
 12226 ;;                  1    wreg      _Bool 
 12227 ;; Registers used:
 12228 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12229 ;; Tracked objects:
 12230 ;;		On entry : 3F/0
 12231 ;;		On exit  : 3F/0
 12232 ;;		Unchanged: 0/0
 12233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12237 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12238 ;;Total ram usage:        0 bytes
 12239 ;; Hardware stack levels used: 1
 12240 ;; Hardware stack levels required when called: 6
 12241 ;; This function calls:
 12242 ;;		_EUSART1_Read
 12243 ;;		_EUSART1_get_last_status
 12244 ;; This function is called by:
 12245 ;;		_LIN_handler
 12246 ;; This function uses a non-reentrant model
 12247 ;;
 12248                           
 12249     0988                     _LIN_breakCheck:	
 12250                           ;psect for function _LIN_breakCheck
 12251                           
 12252                           
 12253                           ;mcc_generated_files/LINDrivers/lin_slave.c: 323:     if((EUSART1_Read() == 0x00) && (EU
      +                          SART1_get_last_status().ferr == 1)){
 12254                           
 12255                           ;incstack = 0
 12256                           ; Regs used in _LIN_breakCheck: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12257     0988  318B  233C  3189   	fcall	_EUSART1_Read
 12258     098B  3A00               	xorlw	0
 12259     098C  1D03               	skipz
 12260     098D  2995               	goto	l4640
 12261     098E  3187  27FE  3189   	fcall	_EUSART1_get_last_status
 12262     0991  1C89               	btfss	9,1
 12263     0992  2995               	goto	l4640
 12264                           
 12265                           ;mcc_generated_files/LINDrivers/lin_slave.c: 324:         return 1;
 12266     0993  3001               	movlw	1
 12267     0994  0008               	return
 12268     0995                     l4640:
 12269                           
 12270                           ;mcc_generated_files/LINDrivers/lin_slave.c: 327:     return 0;
 12271     0995  3000               	movlw	0
 12272     0996  0008               	return
 12273     0997                     __end_of_LIN_breakCheck:
 12274                           
 12275                           	psect	text45
 12276     07FE                     __ptext45:	
 12277 ;; *************** function _EUSART1_get_last_status *****************
 12278 ;; Defined at:
 12279 ;;		line 147 in file "mcc_generated_files/eusart1.c"
 12280 ;; Parameters:    Size  Location     Type
 12281 ;;		None
 12282 ;; Auto vars:     Size  Location     Type
 12283 ;;		None
 12284 ;; Return value:  Size  Location     Type
 12285 ;;                  1    wreg      struct .
 12286 ;; Registers used:
 12287 ;;		wreg
 12288 ;; Tracked objects:
 12289 ;;		On entry : 3F/0
 12290 ;;		On exit  : 3F/0
 12291 ;;		Unchanged: 0/0
 12292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12296 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12297 ;;Total ram usage:        0 bytes
 12298 ;; Hardware stack levels used: 1
 12299 ;; Hardware stack levels required when called: 5
 12300 ;; This function calls:
 12301 ;;		Nothing
 12302 ;; This function is called by:
 12303 ;;		_LIN_breakCheck
 12304 ;; This function uses a non-reentrant model
 12305 ;;
 12306                           
 12307     07FE                     _EUSART1_get_last_status:	
 12308                           ;psect for function _EUSART1_get_last_status
 12309                           
 12310                           
 12311                           ;mcc_generated_files/eusart1.c: 148:     return eusart1RxLastError;
 12312                           
 12313                           ;incstack = 0
 12314                           ; Regs used in _EUSART1_get_last_status: [wreg]
 12315     07FE  0822               	movf	_eusart1RxLastError,w	;volatile
 12316     07FF  0008               	return
 12317     0800                     __end_of_EUSART1_get_last_status:
 12318                           
 12319                           	psect	text46
 12320     0B3C                     __ptext46:	
 12321 ;; *************** function _EUSART1_Read *****************
 12322 ;; Defined at:
 12323 ;;		line 151 in file "mcc_generated_files/eusart1.c"
 12324 ;; Parameters:    Size  Location     Type
 12325 ;;		None
 12326 ;; Auto vars:     Size  Location     Type
 12327 ;;  readValue       1    1[BANK0 ] unsigned char 
 12328 ;; Return value:  Size  Location     Type
 12329 ;;                  1    wreg      unsigned char 
 12330 ;; Registers used:
 12331 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12332 ;; Tracked objects:
 12333 ;;		On entry : 3F/0
 12334 ;;		On exit  : 3F/0
 12335 ;;		Unchanged: 0/0
 12336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12338 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12339 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12340 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12341 ;;Total ram usage:        2 bytes
 12342 ;; Hardware stack levels used: 1
 12343 ;; Hardware stack levels required when called: 5
 12344 ;; This function calls:
 12345 ;;		Nothing
 12346 ;; This function is called by:
 12347 ;;		_LIN_handler
 12348 ;;		_LIN_breakCheck
 12349 ;; This function uses a non-reentrant model
 12350 ;;
 12351                           
 12352     0B3C                     _EUSART1_Read:	
 12353                           ;psect for function _EUSART1_Read
 12354                           
 12355     0B3C                     l4396:	
 12356                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
 12357                           
 12358                           ;incstack = 0
 12359                           ; Regs used in _EUSART1_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
 12360                           
 12361                           
 12362                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
 12363     0B3C  0823               	movf	_eusart1RxCount,w	;volatile
 12364     0B3D  1903               	btfsc	3,2
 12365     0B3E  2B3C               	goto	l4396
 12366                           
 12367                           ;mcc_generated_files/eusart1.c: 159:     eusart1RxLastError = eusart1RxStatusBuffer[eusa
      +                          rt1RxTail];
 12368     0B3F  0872               	movf	_eusart1RxTail,w	;volatile
 12369     0B40  3E42               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 12370     0B41  0086               	movwf	6
 12371     0B42  3001               	movlw	1	; select bank2/3
 12372     0B43  0087               	movwf	7
 12373     0B44  0801               	movf	1,w
 12374     0B45  00A2               	movwf	_eusart1RxLastError	;volatile
 12375                           
 12376                           ;mcc_generated_files/eusart1.c: 161:     readValue = eusart1RxBuffer[eusart1RxTail++];
 12377     0B46  0872               	movf	_eusart1RxTail,w
 12378     0B47  3E4A               	addlw	(low (_eusart1RxBuffer| (0+256)))& (0+255)
 12379     0B48  0086               	movwf	6
 12380     0B49  3001               	movlw	1	; select bank2/3
 12381     0B4A  0087               	movwf	7
 12382     0B4B  0801               	movf	1,w
 12383     0B4C  00CF               	movwf	EUSART1_Read@readValue
 12384     0B4D  3001               	movlw	1
 12385     0B4E  00CE               	movwf	??_EUSART1_Read
 12386     0B4F  084E               	movf	??_EUSART1_Read,w
 12387     0B50  07F2               	addwf	_eusart1RxTail,f	;volatile
 12388                           
 12389                           ;mcc_generated_files/eusart1.c: 162:     if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
 12390     0B51  3008               	movlw	8
 12391     0B52  0272               	subwf	_eusart1RxTail,w
 12392     0B53  1803               	btfsc	3,0
 12393                           
 12394                           ;mcc_generated_files/eusart1.c: 163:     {;mcc_generated_files/eusart1.c: 164:         e
      +                          usart1RxTail = 0;
 12395     0B54  01F2               	clrf	_eusart1RxTail	;volatile
 12396                           
 12397                           ;mcc_generated_files/eusart1.c: 166:     PIE3bits.RC1IE = 0;
 12398     0B55  014E               	movlb	14	; select bank14
 12399     0B56  1299               	bcf	25,5	;volatile
 12400                           
 12401                           ;mcc_generated_files/eusart1.c: 167:     eusart1RxCount--;
 12402     0B57  3001               	movlw	1
 12403     0B58  0140               	movlb	0	; select bank0
 12404     0B59  02A3               	subwf	_eusart1RxCount,f	;volatile
 12405                           
 12406                           ;mcc_generated_files/eusart1.c: 168:     PIE3bits.RC1IE = 1;
 12407     0B5A  014E               	movlb	14	; select bank14
 12408     0B5B  1699               	bsf	25,5	;volatile
 12409                           
 12410                           ;mcc_generated_files/eusart1.c: 170:     return readValue;
 12411     0B5C  0140               	movlb	0	; select bank0
 12412     0B5D  084F               	movf	EUSART1_Read@readValue,w
 12413     0B5E  0008               	return
 12414     0B5F                     __end_of_EUSART1_Read:
 12415                           
 12416                           	psect	text47
 12417     08AC                     __ptext47:	
 12418 ;; *************** function _EUSART1_is_rx_ready *****************
 12419 ;; Defined at:
 12420 ;;		line 137 in file "mcc_generated_files/eusart1.c"
 12421 ;; Parameters:    Size  Location     Type
 12422 ;;		None
 12423 ;; Auto vars:     Size  Location     Type
 12424 ;;		None
 12425 ;; Return value:  Size  Location     Type
 12426 ;;                  1    wreg      _Bool 
 12427 ;; Registers used:
 12428 ;;		wreg, status,2, status,0
 12429 ;; Tracked objects:
 12430 ;;		On entry : 3C/0
 12431 ;;		On exit  : 3F/0
 12432 ;;		Unchanged: 0/0
 12433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12437 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12438 ;;Total ram usage:        0 bytes
 12439 ;; Hardware stack levels used: 1
 12440 ;; Hardware stack levels required when called: 5
 12441 ;; This function calls:
 12442 ;;		Nothing
 12443 ;; This function is called by:
 12444 ;;		_LIN_handler
 12445 ;; This function uses a non-reentrant model
 12446 ;;
 12447                           
 12448     08AC                     _EUSART1_is_rx_ready:	
 12449                           ;psect for function _EUSART1_is_rx_ready
 12450                           
 12451                           
 12452                           ;mcc_generated_files/eusart1.c: 139:     return (eusart1RxCount ? 1 : 0);
 12453                           
 12454                           ;incstack = 0
 12455                           ; Regs used in _EUSART1_is_rx_ready: [wreg+status,2+status,0]
 12456     08AC  0140               	movlb	0	; select bank0
 12457     08AD  0823               	movf	_eusart1RxCount,w	;volatile
 12458     08AE  1903               	btfsc	3,2
 12459     08AF  28B2               	goto	u2710
 12460     08B0  3001               	movlw	1
 12461     08B1  0008               	return
 12462     08B2                     u2710:
 12463     08B2  3000               	movlw	0
 12464     08B3  0008               	return
 12465     08B4                     __end_of_EUSART1_is_rx_ready:
 12466                           
 12467                           	psect	text48
 12468     06CF                     __ptext48:	
 12469 ;; *************** function _EFuse *****************
 12470 ;; Defined at:
 12471 ;;		line 271 in file "efuse.c"
 12472 ;; Parameters:    Size  Location     Type
 12473 ;;		None
 12474 ;; Auto vars:     Size  Location     Type
 12475 ;;		None
 12476 ;; Return value:  Size  Location     Type
 12477 ;;                  1    wreg      void 
 12478 ;; Registers used:
 12479 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12480 ;; Tracked objects:
 12481 ;;		On entry : 0/0
 12482 ;;		On exit  : 3C/0
 12483 ;;		Unchanged: 0/0
 12484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12487 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12488 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12489 ;;Total ram usage:        2 bytes
 12490 ;; Hardware stack levels used: 1
 12491 ;; Hardware stack levels required when called: 7
 12492 ;; This function calls:
 12493 ;;		_CmdOutput
 12494 ;;		_GetAmbientTemperature
 12495 ;;		_TCC_Curve
 12496 ;;		_Update_LIN_Data
 12497 ;; This function is called by:
 12498 ;;		_main
 12499 ;; This function uses a non-reentrant model
 12500 ;;
 12501                           
 12502     06CF                     _EFuse:	
 12503                           ;psect for function _EFuse
 12504                           
 12505                           
 12506                           ;efuse.c: 274:     if(PIR4bits.TMR1IF && (outputState == OUTPUT_ON))
 12507                           
 12508                           ;incstack = 0
 12509                           ; Regs used in _EFuse: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12510     06CF  014E               	movlb	14	; select bank14
 12511     06D0  1C10               	btfss	16,0	;volatile
 12512     06D1  2EDE               	goto	l5372
 12513     06D2  0140               	movlb	0	; select bank0
 12514     06D3  032F               	decf	_outputState,w
 12515     06D4  1D03               	btfss	3,2
 12516     06D5  2EDE               	goto	l5372
 12517                           
 12518                           ;efuse.c: 275:     {;efuse.c: 276:        overCurrentFault = SHORT_CIRCUIT;
 12519     06D6  3003               	movlw	3
 12520     06D7  00AE               	movwf	_overCurrentFault
 12521                           
 12522                           ;efuse.c: 277:        CmdOutput(OUTPUT_OFF);
 12523     06D8  3000               	movlw	0
 12524     06D9  318D  2585  3186   	fcall	_CmdOutput
 12525                           
 12526                           ;efuse.c: 278:        PIR4bits.TMR1IF = 0;
 12527     06DC  014E               	movlb	14	; select bank14
 12528     06DD  1010               	bcf	16,0	;volatile
 12529     06DE                     l5372:
 12530                           
 12531                           ;efuse.c: 281:     if(ticks_1ms >= tcc_sample_time)
 12532     06DE  0141               	movlb	1	; select bank1
 12533     06DF  0864               	movf	(_tcc_sample_time+1)^(0+128),w
 12534     06E0  0237               	subwf	(_ticks_1ms+1)^(0+128),w
 12535     06E1  1D03               	skipz
 12536     06E2  2EE5               	goto	u3405
 12537     06E3  0863               	movf	_tcc_sample_time^(0+128),w
 12538     06E4  0236               	subwf	_ticks_1ms^(0+128),w
 12539     06E5                     u3405:
 12540     06E5  1C03               	skipc
 12541     06E6  0008               	return
 12542                           
 12543                           ;efuse.c: 282:     {;efuse.c: 283:         ticks_1ms = 0;
 12544     06E7  01B6               	clrf	_ticks_1ms^(0+128)
 12545     06E8  01B7               	clrf	(_ticks_1ms+1)^(0+128)
 12546                           
 12547                           ;efuse.c: 286:         if(CLCDATAbits.MLC4OUT && (outputState == OUTPUT_ON))
 12548     06E9  017C               	movlb	60	; select bank60
 12549     06EA  1D8F               	btfss	15,3	;volatile
 12550     06EB  2EFB               	goto	l5386
 12551     06EC  0140               	movlb	0	; select bank0
 12552     06ED  032F               	decf	_outputState,w
 12553     06EE  1D03               	btfss	3,2
 12554     06EF  2EFB               	goto	l5386
 12555                           
 12556                           ;efuse.c: 287:         {;efuse.c: 289:             CLC3GLS1 = 0x00;
 12557     06F0  017C               	movlb	60	; select bank60
 12558     06F1  01AB               	clrf	43	;volatile
 12559                           
 12560                           ;efuse.c: 290:             T2TMR = 0x00;
 12561     06F2  0145               	movlb	5	; select bank5
 12562     06F3  018C               	clrf	12	;volatile
 12563                           
 12564                           ;efuse.c: 291:             CLC3POL = 0x00;
 12565     06F4  017C               	movlb	60	; select bank60
 12566     06F5  01A5               	clrf	37	;volatile
 12567                           
 12568                           ;efuse.c: 292:             CLC3POL = 0x03;
 12569     06F6  3003               	movlw	3
 12570     06F7  00A5               	movwf	37	;volatile
 12571                           
 12572                           ;efuse.c: 293:             CLC3POL = 0x00;
 12573     06F8  01A5               	clrf	37	;volatile
 12574                           
 12575                           ;efuse.c: 294:             CLC3GLS1 = 0x08;
 12576     06F9  3008               	movlw	8
 12577     06FA  00AB               	movwf	43	;volatile
 12578     06FB                     l5386:
 12579                           
 12580                           ;efuse.c: 296:         Tambient=GetAmbientTemperature();
 12581     06FB  318C  24DA  3186   	fcall	_GetAmbientTemperature
 12582     06FE  084F               	movf	?_GetAmbientTemperature+1,w
 12583     06FF  00EE               	movwf	_Tambient+1
 12584     0700  084E               	movf	?_GetAmbientTemperature,w
 12585     0701  00ED               	movwf	_Tambient
 12586                           
 12587                           ;efuse.c: 297:         if(Tambient >= 115)
 12588     0702  086E               	movf	_Tambient+1,w
 12589     0703  3A80               	xorlw	128
 12590     0704  00E3               	movwf	??_EFuse
 12591     0705  3080               	movlw	128
 12592     0706  0263               	subwf	??_EFuse,w
 12593     0707  1D03               	skipz
 12594     0708  2F0B               	goto	u3435
 12595     0709  3073               	movlw	115
 12596     070A  026D               	subwf	_Tambient,w
 12597     070B                     u3435:
 12598     070B  1C03               	skipc
 12599     070C  2F15               	goto	l5394
 12600                           
 12601                           ;efuse.c: 298:         {;efuse.c: 299:             Tambient = 115;
 12602     070D  3073               	movlw	115
 12603     070E  0140               	movlb	0	; select bank0
 12604     070F  00ED               	movwf	_Tambient
 12605     0710  3000               	movlw	0
 12606     0711  00EE               	movwf	_Tambient+1
 12607                           
 12608                           ;efuse.c: 300:             overTempFault = TEMP_FAULT;
 12609     0712  01AC               	clrf	_overTempFault
 12610     0713  0AAC               	incf	_overTempFault,f
 12611                           
 12612                           ;efuse.c: 302:         }
 12613     0714  2F4E               	goto	l5410
 12614     0715                     l5394:
 12615                           
 12616                           ;efuse.c: 304:         {;efuse.c: 305:             if((adcISense_curr >= iSenseOffset) &
      +                          & (iSenseOffset < 10))
 12617     0715  0140               	movlb	0	; select bank0
 12618     0716  083B               	movf	_iSenseOffset+1,w
 12619     0717  023F               	subwf	_adcISense_curr+1,w
 12620     0718  1D03               	skipz
 12621     0719  2F1C               	goto	u3445
 12622     071A  083A               	movf	_iSenseOffset,w
 12623     071B  023E               	subwf	_adcISense_curr,w
 12624     071C                     u3445:
 12625     071C  1C03               	skipc
 12626     071D  2F2C               	goto	l5400
 12627     071E  3000               	movlw	0
 12628     071F  023B               	subwf	_iSenseOffset+1,w
 12629     0720  300A               	movlw	10
 12630     0721  1903               	skipnz
 12631     0722  023A               	subwf	_iSenseOffset,w
 12632     0723  1803               	skipnc
 12633     0724  2F2C               	goto	l5400
 12634                           
 12635                           ;efuse.c: 306:             {;efuse.c: 307:                 adcISense_corr = adcISense_cu
      +                          rr - iSenseOffset;
 12636     0725  083A               	movf	_iSenseOffset,w
 12637     0726  023E               	subwf	_adcISense_curr,w
 12638     0727  00BC               	movwf	_adcISense_corr
 12639     0728  083B               	movf	_iSenseOffset+1,w
 12640     0729  3B3F               	subwfb	_adcISense_curr+1,w
 12641     072A  00BD               	movwf	_adcISense_corr+1
 12642                           
 12643                           ;efuse.c: 308:             }
 12644     072B  2F30               	goto	l5402
 12645     072C                     l5400:
 12646                           
 12647                           ;efuse.c: 310:             {;efuse.c: 311:                 adcISense_corr = adcISense_cu
      +                          rr;
 12648     072C  083F               	movf	_adcISense_curr+1,w
 12649     072D  00BD               	movwf	_adcISense_corr+1
 12650     072E  083E               	movf	_adcISense_curr,w
 12651     072F  00BC               	movwf	_adcISense_corr
 12652     0730                     l5402:
 12653                           
 12654                           ;efuse.c: 313:             adcISense_OneMOSFET = adcISense_corr / 2;
 12655     0730  083D               	movf	_adcISense_corr+1,w
 12656     0731  00E4               	movwf	??_EFuse+1
 12657     0732  083C               	movf	_adcISense_corr,w
 12658     0733  00E3               	movwf	??_EFuse
 12659     0734  36E4               	lsrf	??_EFuse+1,f
 12660     0735  0CE3               	rrf	??_EFuse,f
 12661     0736  0863               	movf	??_EFuse,w
 12662     0737  0141               	movlb	1	; select bank1
 12663     0738  00AE               	movwf	_adcISense_OneMOSFET^(0+128)
 12664     0739  0140               	movlb	0	; select bank0
 12665     073A  0864               	movf	??_EFuse+1,w
 12666     073B  0141               	movlb	1	; select bank1
 12667     073C  00AF               	movwf	(_adcISense_OneMOSFET+1)^(0+128)
 12668                           
 12669                           ;efuse.c: 314:             TCC_Curve();
 12670     073D  3180  2067  3186   	fcall	_TCC_Curve
 12671                           
 12672                           ;efuse.c: 315:             if(Tjunction >= tj_limit)
 12673     0740  0837               	movf	_Tjunction+1,w
 12674     0741  3A80               	xorlw	128
 12675     0742  00E3               	movwf	??_EFuse
 12676     0743  3080               	movlw	128
 12677     0744  0263               	subwf	??_EFuse,w
 12678     0745  1D03               	skipz
 12679     0746  2F49               	goto	u3465
 12680     0747  086C               	movf	_tj_limit,w
 12681     0748  0236               	subwf	_Tjunction,w
 12682     0749                     u3465:
 12683     0749  1C03               	skipc
 12684     074A  2F4E               	goto	l5410
 12685                           
 12686                           ;efuse.c: 316:             {;efuse.c: 317:                 overCurrentFault = SLOW_OVER_
      +                          CURRENT_FAULT;
 12687     074B  0140               	movlb	0	; select bank0
 12688     074C  01AE               	clrf	_overCurrentFault
 12689     074D  0AAE               	incf	_overCurrentFault,f
 12690     074E                     l5410:
 12691                           
 12692                           ;efuse.c: 321:         Update_LIN_Data();
 12693     074E  318F  2789         	fcall	_Update_LIN_Data
 12694     0750  0008               	return
 12695     0751                     __end_of_EFuse:
 12696                           
 12697                           	psect	text49
 12698     0F89                     __ptext49:	
 12699 ;; *************** function _Update_LIN_Data *****************
 12700 ;; Defined at:
 12701 ;;		line 133 in file "mcc_generated_files/LINDrivers/lin_app.c"
 12702 ;; Parameters:    Size  Location     Type
 12703 ;;		None
 12704 ;; Auto vars:     Size  Location     Type
 12705 ;;		None
 12706 ;; Return value:  Size  Location     Type
 12707 ;;                  1    wreg      void 
 12708 ;; Registers used:
 12709 ;;		wreg, status,2
 12710 ;; Tracked objects:
 12711 ;;		On entry : 0/0
 12712 ;;		On exit  : 3F/2
 12713 ;;		Unchanged: 0/0
 12714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12719 ;;Total ram usage:        0 bytes
 12720 ;; Hardware stack levels used: 1
 12721 ;; Hardware stack levels required when called: 5
 12722 ;; This function calls:
 12723 ;;		Nothing
 12724 ;; This function is called by:
 12725 ;;		_EFuse
 12726 ;; This function uses a non-reentrant model
 12727 ;;
 12728                           
 12729     0F89                     _Update_LIN_Data:	
 12730                           ;psect for function _Update_LIN_Data
 12731                           
 12732                           
 12733                           ;mcc_generated_files/LINDrivers/lin_app.c: 135:             LIN_OUTPUT_STATE_Data[0] = o
      +                          utputState;
 12734                           
 12735                           ;incstack = 0
 12736                           ; Regs used in _Update_LIN_Data: [wreg+status,2]
 12737     0F89  0140               	movlb	0	; select bank0
 12738     0F8A  082F               	movf	_outputState,w
 12739     0F8B  00C6               	movwf	_LIN_OUTPUT_STATE_Data
 12740                           
 12741                           ;mcc_generated_files/LINDrivers/lin_app.c: 137:             LIN_GET_TRIGGER_TYPE_Data[0]
      +                           = triggerType;
 12742     0F8C  0831               	movf	_triggerType,w
 12743     0F8D  00C5               	movwf	_LIN_GET_TRIGGER_TYPE_Data
 12744                           
 12745                           ;mcc_generated_files/LINDrivers/lin_app.c: 139:             LIN_OVER_CURRENT_FAULT_Data[
      +                          0] = overCurrentFault;
 12746     0F8E  082E               	movf	_overCurrentFault,w
 12747     0F8F  00C4               	movwf	_LIN_OVER_CURRENT_FAULT_Data
 12748                           
 12749                           ;mcc_generated_files/LINDrivers/lin_app.c: 141:             LIN_UVLO_FAULT_Data[0] = uvl
      +                          oFault;
 12750     0F90  082D               	movf	_uvloFault,w
 12751     0F91  00C3               	movwf	_LIN_UVLO_FAULT_Data
 12752                           
 12753                           ;mcc_generated_files/LINDrivers/lin_app.c: 143:             LIN_OVER_TEMP_FAULT_Data[0] 
      +                          = overTempFault;
 12754     0F92  082C               	movf	_overTempFault,w
 12755     0F93  00C2               	movwf	_LIN_OVER_TEMP_FAULT_Data
 12756                           
 12757                           ;mcc_generated_files/LINDrivers/lin_app.c: 145:             LIN_ADC_VCC_SENSE_Data[0] = 
      +                          0xff & adcVccSense_curr;
 12758     0F94  0840               	movf	_adcVccSense_curr,w
 12759     0F95  0141               	movlb	1	; select bank1
 12760     0F96  00D7               	movwf	_LIN_ADC_VCC_SENSE_Data^(0+128)
 12761                           
 12762                           ;mcc_generated_files/LINDrivers/lin_app.c: 146:             LIN_ADC_VCC_SENSE_Data[1] = 
      +                          0xff & (adcVccSense_curr >> 8);
 12763     0F97  0140               	movlb	0	; select bank0
 12764     0F98  0841               	movf	_adcVccSense_curr+1,w
 12765     0F99  0141               	movlb	1	; select bank1
 12766     0F9A  00D8               	movwf	(_LIN_ADC_VCC_SENSE_Data^(0+128)+1)
 12767                           
 12768                           ;mcc_generated_files/LINDrivers/lin_app.c: 148:             LIN_ADC_CURRENT_SENSE_UNCORR
      +                          ECTED_Data[0] = 0xff & adcISense_curr;
 12769     0F9B  0140               	movlb	0	; select bank0
 12770     0F9C  083E               	movf	_adcISense_curr,w
 12771     0F9D  0141               	movlb	1	; select bank1
 12772     0F9E  00D5               	movwf	_LIN_ADC_CURRENT_SENSE_UNCORRECTED_Data^(0+128)
 12773                           
 12774                           ;mcc_generated_files/LINDrivers/lin_app.c: 149:             LIN_ADC_CURRENT_SENSE_UNCORR
      +                          ECTED_Data[1] = 0xff & (adcISense_curr >> 8);
 12775     0F9F  0140               	movlb	0	; select bank0
 12776     0FA0  083F               	movf	_adcISense_curr+1,w
 12777     0FA1  0141               	movlb	1	; select bank1
 12778     0FA2  00D6               	movwf	(_LIN_ADC_CURRENT_SENSE_UNCORRECTED_Data^(0+128)+1)
 12779                           
 12780                           ;mcc_generated_files/LINDrivers/lin_app.c: 151:             LIN_ADC_TEMP_SENSE_Data[0] =
      +                           0xff & adcTSense_curr;
 12781     0FA3  0874               	movf	_adcTSense_curr,w
 12782     0FA4  00D3               	movwf	_LIN_ADC_TEMP_SENSE_Data^(0+128)
 12783                           
 12784                           ;mcc_generated_files/LINDrivers/lin_app.c: 152:             LIN_ADC_TEMP_SENSE_Data[1] =
      +                           0xff & (adcTSense_curr >> 8);
 12785     0FA5  0875               	movf	_adcTSense_curr+1,w
 12786     0FA6  00D4               	movwf	(_LIN_ADC_TEMP_SENSE_Data^(0+128)+1)
 12787                           
 12788                           ;mcc_generated_files/LINDrivers/lin_app.c: 154:             LIN_ADC_CURRENT_SENSE_CORREC
      +                          TED_Data[0] = 0xff & adcISense_corr;
 12789     0FA7  0140               	movlb	0	; select bank0
 12790     0FA8  083C               	movf	_adcISense_corr,w
 12791     0FA9  0141               	movlb	1	; select bank1
 12792     0FAA  00D1               	movwf	_LIN_ADC_CURRENT_SENSE_CORRECTED_Data^(0+128)
 12793                           
 12794                           ;mcc_generated_files/LINDrivers/lin_app.c: 155:             LIN_ADC_CURRENT_SENSE_CORREC
      +                          TED_Data[1] = 0xff & (adcISense_corr >> 8);
 12795     0FAB  0140               	movlb	0	; select bank0
 12796     0FAC  083D               	movf	_adcISense_corr+1,w
 12797     0FAD  0141               	movlb	1	; select bank1
 12798     0FAE  00D2               	movwf	(_LIN_ADC_CURRENT_SENSE_CORRECTED_Data^(0+128)+1)
 12799                           
 12800                           ;mcc_generated_files/LINDrivers/lin_app.c: 157:             LIN_CURRENT_SENSE_OFFSET_Dat
      +                          a[0] = 0xff & iSenseOffset;
 12801     0FAF  0140               	movlb	0	; select bank0
 12802     0FB0  083A               	movf	_iSenseOffset,w
 12803     0FB1  0141               	movlb	1	; select bank1
 12804     0FB2  00CF               	movwf	_LIN_CURRENT_SENSE_OFFSET_Data^(0+128)
 12805                           
 12806                           ;mcc_generated_files/LINDrivers/lin_app.c: 158:             LIN_CURRENT_SENSE_OFFSET_Dat
      +                          a[1] = 0xff & (iSenseOffset >> 8);
 12807     0FB3  0140               	movlb	0	; select bank0
 12808     0FB4  083B               	movf	_iSenseOffset+1,w
 12809     0FB5  0141               	movlb	1	; select bank1
 12810     0FB6  00D0               	movwf	(_LIN_CURRENT_SENSE_OFFSET_Data^(0+128)+1)
 12811                           
 12812                           ;mcc_generated_files/LINDrivers/lin_app.c: 160:             LIN_AMBIENT_TEMPERATURE_Data
      +                          [0] = 0xff & Tambient;
 12813     0FB7  0140               	movlb	0	; select bank0
 12814     0FB8  086D               	movf	_Tambient,w
 12815     0FB9  0141               	movlb	1	; select bank1
 12816     0FBA  00CD               	movwf	_LIN_AMBIENT_TEMPERATURE_Data^(0+128)
 12817                           
 12818                           ;mcc_generated_files/LINDrivers/lin_app.c: 161:             LIN_AMBIENT_TEMPERATURE_Data
      +                          [1] = 0xff & (Tambient >> 8);
 12819     0FBB  0140               	movlb	0	; select bank0
 12820     0FBC  086E               	movf	_Tambient+1,w
 12821     0FBD  0141               	movlb	1	; select bank1
 12822     0FBE  00CE               	movwf	(_LIN_AMBIENT_TEMPERATURE_Data^(0+128)+1)
 12823                           
 12824                           ;mcc_generated_files/LINDrivers/lin_app.c: 163:             LIN_HEATSINK_TEMPERATURE_Dat
      +                          a[0] = 0xff & Tsink;
 12825     0FBF  0140               	movlb	0	; select bank0
 12826     0FC0  0838               	movf	_Tsink,w
 12827     0FC1  0141               	movlb	1	; select bank1
 12828     0FC2  00CB               	movwf	_LIN_HEATSINK_TEMPERATURE_Data^(0+128)
 12829                           
 12830                           ;mcc_generated_files/LINDrivers/lin_app.c: 164:             LIN_HEATSINK_TEMPERATURE_Dat
      +                          a[1] = 0xff & (Tsink >> 8);
 12831     0FC3  0140               	movlb	0	; select bank0
 12832     0FC4  0839               	movf	_Tsink+1,w
 12833     0FC5  0141               	movlb	1	; select bank1
 12834     0FC6  00CC               	movwf	(_LIN_HEATSINK_TEMPERATURE_Data^(0+128)+1)
 12835                           
 12836                           ;mcc_generated_files/LINDrivers/lin_app.c: 166:             LIN_JUNCTION_TEMPERATURE_Dat
      +                          a[0] = 0xff & Tjunction;
 12837     0FC7  0140               	movlb	0	; select bank0
 12838     0FC8  0836               	movf	_Tjunction,w
 12839     0FC9  0141               	movlb	1	; select bank1
 12840     0FCA  00C9               	movwf	_LIN_JUNCTION_TEMPERATURE_Data^(0+128)
 12841                           
 12842                           ;mcc_generated_files/LINDrivers/lin_app.c: 167:             LIN_JUNCTION_TEMPERATURE_Dat
      +                          a[1] = 0xff & (Tjunction >> 8);
 12843     0FCB  0140               	movlb	0	; select bank0
 12844     0FCC  0837               	movf	_Tjunction+1,w
 12845     0FCD  0141               	movlb	1	; select bank1
 12846     0FCE  00CA               	movwf	(_LIN_JUNCTION_TEMPERATURE_Data^(0+128)+1)
 12847                           
 12848                           ;mcc_generated_files/LINDrivers/lin_app.c: 169:             LIN_TEMPERATURE_RISE_JS_Data
      +                          [0] = 0xff & Trise_js;
 12849     0FCF  0140               	movlb	0	; select bank0
 12850     0FD0  0834               	movf	_Trise_js,w
 12851     0FD1  0141               	movlb	1	; select bank1
 12852     0FD2  00C7               	movwf	_LIN_TEMPERATURE_RISE_JS_Data^(0+128)
 12853                           
 12854                           ;mcc_generated_files/LINDrivers/lin_app.c: 170:             LIN_TEMPERATURE_RISE_JS_Data
      +                          [1] = 0xff & (Trise_js >> 8);
 12855     0FD3  0140               	movlb	0	; select bank0
 12856     0FD4  0835               	movf	_Trise_js+1,w
 12857     0FD5  0141               	movlb	1	; select bank1
 12858     0FD6  00C8               	movwf	(_LIN_TEMPERATURE_RISE_JS_Data^(0+128)+1)
 12859                           
 12860                           ;mcc_generated_files/LINDrivers/lin_app.c: 172:             LIN_TEMPERATURE_RISE_SA_Data
      +                          [0] = 0xff & Trise_sa;
 12861     0FD7  0140               	movlb	0	; select bank0
 12862     0FD8  0832               	movf	_Trise_sa,w
 12863     0FD9  0141               	movlb	1	; select bank1
 12864     0FDA  00C5               	movwf	_LIN_TEMPERATURE_RISE_SA_Data^(0+128)
 12865                           
 12866                           ;mcc_generated_files/LINDrivers/lin_app.c: 173:             LIN_TEMPERATURE_RISE_SA_Data
      +                          [1] = 0xff & (Trise_sa >> 8);
 12867     0FDB  0140               	movlb	0	; select bank0
 12868     0FDC  0833               	movf	_Trise_sa+1,w
 12869     0FDD  0141               	movlb	1	; select bank1
 12870     0FDE  00C6               	movwf	(_LIN_TEMPERATURE_RISE_SA_Data^(0+128)+1)
 12871                           
 12872                           ;mcc_generated_files/LINDrivers/lin_app.c: 175:             LIN_DIAGNOSTIC_Data[0] = 0xf
      +                          f & adcISense_corr;
 12873     0FDF  0140               	movlb	0	; select bank0
 12874     0FE0  083C               	movf	_adcISense_corr,w
 12875     0FE1  0142               	movlb	2	; select bank2
 12876     0FE2  00DA               	movwf	_LIN_DIAGNOSTIC_Data^(0+256)
 12877                           
 12878                           ;mcc_generated_files/LINDrivers/lin_app.c: 176:             LIN_DIAGNOSTIC_Data[1] = 0xf
      +                          f & (adcISense_corr >> 8);
 12879     0FE3  0140               	movlb	0	; select bank0
 12880     0FE4  083D               	movf	_adcISense_corr+1,w
 12881     0FE5  0142               	movlb	2	; select bank2
 12882     0FE6  00DB               	movwf	(_LIN_DIAGNOSTIC_Data^(0+256)+1)
 12883                           
 12884                           ;mcc_generated_files/LINDrivers/lin_app.c: 177:             LIN_DIAGNOSTIC_Data[2] = 0xf
      +                          f & Tambient;
 12885     0FE7  0140               	movlb	0	; select bank0
 12886     0FE8  086D               	movf	_Tambient,w
 12887     0FE9  0142               	movlb	2	; select bank2
 12888     0FEA  00DC               	movwf	(_LIN_DIAGNOSTIC_Data^(0+256)+2)
 12889                           
 12890                           ;mcc_generated_files/LINDrivers/lin_app.c: 178:             LIN_DIAGNOSTIC_Data[3] = 0xf
      +                          f & (Tambient >> 8);
 12891     0FEB  0140               	movlb	0	; select bank0
 12892     0FEC  086E               	movf	_Tambient+1,w
 12893     0FED  0142               	movlb	2	; select bank2
 12894     0FEE  00DD               	movwf	(_LIN_DIAGNOSTIC_Data^(0+256)+3)
 12895                           
 12896                           ;mcc_generated_files/LINDrivers/lin_app.c: 179:             LIN_DIAGNOSTIC_Data[4] = 0xf
      +                          f & Tsink;
 12897     0FEF  0140               	movlb	0	; select bank0
 12898     0FF0  0838               	movf	_Tsink,w
 12899     0FF1  0142               	movlb	2	; select bank2
 12900     0FF2  00DE               	movwf	(_LIN_DIAGNOSTIC_Data^(0+256)+4)
 12901                           
 12902                           ;mcc_generated_files/LINDrivers/lin_app.c: 180:             LIN_DIAGNOSTIC_Data[5] = 0xf
      +                          f & (Tsink >> 8);
 12903     0FF3  0140               	movlb	0	; select bank0
 12904     0FF4  0839               	movf	_Tsink+1,w
 12905     0FF5  0142               	movlb	2	; select bank2
 12906     0FF6  00DF               	movwf	(_LIN_DIAGNOSTIC_Data^(0+256)+5)
 12907                           
 12908                           ;mcc_generated_files/LINDrivers/lin_app.c: 181:             LIN_DIAGNOSTIC_Data[6] = 0xf
      +                          f & Tjunction;
 12909     0FF7  0140               	movlb	0	; select bank0
 12910     0FF8  0836               	movf	_Tjunction,w
 12911     0FF9  0142               	movlb	2	; select bank2
 12912     0FFA  00E0               	movwf	(_LIN_DIAGNOSTIC_Data^(0+256)+6)
 12913                           
 12914                           ;mcc_generated_files/LINDrivers/lin_app.c: 182:             LIN_DIAGNOSTIC_Data[7] = 0xf
      +                          f & (Tjunction >> 8);
 12915     0FFB  0140               	movlb	0	; select bank0
 12916     0FFC  0837               	movf	_Tjunction+1,w
 12917     0FFD  0142               	movlb	2	; select bank2
 12918     0FFE  00E1               	movwf	(_LIN_DIAGNOSTIC_Data^(0+256)+7)
 12919     0FFF  0008               	return
 12920     1000                     __end_of_Update_LIN_Data:
 12921                           
 12922                           	psect	text50
 12923     0067                     __ptext50:	
 12924 ;; *************** function _TCC_Curve *****************
 12925 ;; Defined at:
 12926 ;;		line 476 in file "efuse.c"
 12927 ;; Parameters:    Size  Location     Type
 12928 ;;		None
 12929 ;; Auto vars:     Size  Location     Type
 12930 ;;		None
 12931 ;; Return value:  Size  Location     Type
 12932 ;;                  1    wreg      void 
 12933 ;; Registers used:
 12934 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12935 ;; Tracked objects:
 12936 ;;		On entry : 3F/1
 12937 ;;		On exit  : 3F/0
 12938 ;;		Unchanged: 0/0
 12939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12941 ;;      Locals:         0       0       0      12       0       0       0       0       0       0       0       0       
      +0       0
 12942 ;;      Temps:          0       0       0      12       0       0       0       0       0       0       0       0       
      +0       0
 12943 ;;      Totals:         0       0       0      24       0       0       0       0       0       0       0       0       
      +0       0
 12944 ;;Total ram usage:       24 bytes
 12945 ;; Hardware stack levels used: 1
 12946 ;; Hardware stack levels required when called: 6
 12947 ;; This function calls:
 12948 ;;		___lldiv
 12949 ;;		___lmul
 12950 ;;		___omul
 12951 ;; This function is called by:
 12952 ;;		_EFuse
 12953 ;; This function uses a non-reentrant model
 12954 ;;
 12955                           
 12956     0067                     _TCC_Curve:	
 12957                           ;psect for function _TCC_Curve
 12958                           
 12959                           
 12960                           ;efuse.c: 478:     Trise_raw_prev = Trise_raw_curr;
 12961                           
 12962                           ;incstack = 0
 12963                           ; Regs used in _TCC_Curve: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12964     0067  0827               	movf	(_Trise_raw_curr+3)^(0+128),w
 12965     0068  00A3               	movwf	(_Trise_raw_prev+3)^(0+128)
 12966     0069  0826               	movf	(_Trise_raw_curr+2)^(0+128),w
 12967     006A  00A2               	movwf	(_Trise_raw_prev+2)^(0+128)
 12968     006B  0825               	movf	(_Trise_raw_curr+1)^(0+128),w
 12969     006C  00A1               	movwf	(_Trise_raw_prev+1)^(0+128)
 12970     006D  0824               	movf	_Trise_raw_curr^(0+128),w
 12971     006E  00A0               	movwf	_Trise_raw_prev^(0+128)
 12972                           
 12973                           ;efuse.c: 479:     Trise_raw_curr = (uint32_t) ((((uint64_t) adcISense_corr * (uint64_t)
      +                           adcISense_corr) * factor_rdson_rthsa) >> 10);
 12974     006F  0140               	movlb	0	; select bank0
 12975     0070  083D               	movf	_adcISense_corr+1,w
 12976     0071  0142               	movlb	2	; select bank2
 12977     0072  00A9               	movwf	(??_TCC_Curve^(0+256)+1)
 12978     0073  0140               	movlb	0	; select bank0
 12979     0074  083C               	movf	_adcISense_corr,w
 12980     0075  0142               	movlb	2	; select bank2
 12981     0076  00A8               	movwf	??_TCC_Curve^(0+256)
 12982     0077  0828               	movf	??_TCC_Curve^(0+256),w
 12983     0078  0140               	movlb	0	; select bank0
 12984     0079  00CE               	movwf	___omul@multiplier
 12985     007A  0142               	movlb	2	; select bank2
 12986     007B  0829               	movf	(??_TCC_Curve^(0+256)+1),w
 12987     007C  0140               	movlb	0	; select bank0
 12988     007D  00CF               	movwf	___omul@multiplier+1
 12989     007E  01D0               	clrf	___omul@multiplier+2
 12990     007F  01D1               	clrf	___omul@multiplier+3
 12991     0080  01D2               	clrf	___omul@multiplier+4
 12992     0081  01D3               	clrf	___omul@multiplier+5
 12993     0082  01D4               	clrf	___omul@multiplier+6
 12994     0083  01D5               	clrf	___omul@multiplier+7
 12995     0084  083D               	movf	_adcISense_corr+1,w
 12996     0085  0142               	movlb	2	; select bank2
 12997     0086  00AB               	movwf	((??_TCC_Curve+2)^(0+256)+1)
 12998     0087  0140               	movlb	0	; select bank0
 12999     0088  083C               	movf	_adcISense_corr,w
 13000     0089  0142               	movlb	2	; select bank2
 13001     008A  00AA               	movwf	(??_TCC_Curve+2)^(0+256)
 13002     008B  082A               	movf	(??_TCC_Curve+2)^(0+256),w
 13003     008C  0140               	movlb	0	; select bank0
 13004     008D  00D6               	movwf	___omul@multiplicand
 13005     008E  0142               	movlb	2	; select bank2
 13006     008F  082B               	movf	((??_TCC_Curve+2)^(0+256)+1),w
 13007     0090  0140               	movlb	0	; select bank0
 13008     0091  00D7               	movwf	___omul@multiplicand+1
 13009     0092  01D8               	clrf	___omul@multiplicand+2
 13010     0093  01D9               	clrf	___omul@multiplicand+3
 13011     0094  01DA               	clrf	___omul@multiplicand+4
 13012     0095  01DB               	clrf	___omul@multiplicand+5
 13013     0096  01DC               	clrf	___omul@multiplicand+6
 13014     0097  01DD               	clrf	___omul@multiplicand+7
 13015     0098  318E  26AC  3180   	fcall	___omul
 13016     009B  084E               	movf	?___omul,w
 13017     009C  0142               	movlb	2	; select bank2
 13018     009D  00B4               	movwf	_TCC_Curve$3309^(0+256)
 13019     009E  0140               	movlb	0	; select bank0
 13020     009F  084F               	movf	?___omul+1,w
 13021     00A0  0142               	movlb	2	; select bank2
 13022     00A1  00B5               	movwf	(_TCC_Curve$3309+1)^(0+256)
 13023     00A2  0140               	movlb	0	; select bank0
 13024     00A3  0850               	movf	?___omul+2,w
 13025     00A4  0142               	movlb	2	; select bank2
 13026     00A5  00B6               	movwf	(_TCC_Curve$3309+2)^(0+256)
 13027     00A6  0140               	movlb	0	; select bank0
 13028     00A7  0851               	movf	?___omul+3,w
 13029     00A8  0142               	movlb	2	; select bank2
 13030     00A9  00B7               	movwf	(_TCC_Curve$3309+3)^(0+256)
 13031     00AA  0140               	movlb	0	; select bank0
 13032     00AB  0852               	movf	?___omul+4,w
 13033     00AC  0142               	movlb	2	; select bank2
 13034     00AD  00B8               	movwf	(_TCC_Curve$3309+4)^(0+256)
 13035     00AE  0140               	movlb	0	; select bank0
 13036     00AF  0853               	movf	?___omul+5,w
 13037     00B0  0142               	movlb	2	; select bank2
 13038     00B1  00B9               	movwf	(_TCC_Curve$3309+5)^(0+256)
 13039     00B2  0140               	movlb	0	; select bank0
 13040     00B3  0854               	movf	?___omul+6,w
 13041     00B4  0142               	movlb	2	; select bank2
 13042     00B5  00BA               	movwf	(_TCC_Curve$3309+6)^(0+256)
 13043     00B6  0140               	movlb	0	; select bank0
 13044     00B7  0855               	movf	?___omul+7,w
 13045     00B8  0142               	movlb	2	; select bank2
 13046     00B9  00BB               	movwf	(_TCC_Curve$3309+7)^(0+256)
 13047                           
 13048                           ;efuse.c: 479:     Trise_raw_curr = (uint32_t) ((((uint64_t) adcISense_corr * (uint64_t)
      +                           adcISense_corr) * factor_rdson_rthsa) >> 10);
 13049     00BA  0834               	movf	_TCC_Curve$3309^(0+256),w
 13050     00BB  0140               	movlb	0	; select bank0
 13051     00BC  00CE               	movwf	___omul@multiplier
 13052     00BD  0142               	movlb	2	; select bank2
 13053     00BE  0835               	movf	(_TCC_Curve$3309+1)^(0+256),w
 13054     00BF  0140               	movlb	0	; select bank0
 13055     00C0  00CF               	movwf	___omul@multiplier+1
 13056     00C1  0142               	movlb	2	; select bank2
 13057     00C2  0836               	movf	(_TCC_Curve$3309+2)^(0+256),w
 13058     00C3  0140               	movlb	0	; select bank0
 13059     00C4  00D0               	movwf	___omul@multiplier+2
 13060     00C5  0142               	movlb	2	; select bank2
 13061     00C6  0837               	movf	(_TCC_Curve$3309+3)^(0+256),w
 13062     00C7  0140               	movlb	0	; select bank0
 13063     00C8  00D1               	movwf	___omul@multiplier+3
 13064     00C9  0142               	movlb	2	; select bank2
 13065     00CA  0838               	movf	(_TCC_Curve$3309+4)^(0+256),w
 13066     00CB  0140               	movlb	0	; select bank0
 13067     00CC  00D2               	movwf	___omul@multiplier+4
 13068     00CD  0142               	movlb	2	; select bank2
 13069     00CE  0839               	movf	(_TCC_Curve$3309+5)^(0+256),w
 13070     00CF  0140               	movlb	0	; select bank0
 13071     00D0  00D3               	movwf	___omul@multiplier+5
 13072     00D1  0142               	movlb	2	; select bank2
 13073     00D2  083A               	movf	(_TCC_Curve$3309+6)^(0+256),w
 13074     00D3  0140               	movlb	0	; select bank0
 13075     00D4  00D4               	movwf	___omul@multiplier+6
 13076     00D5  0142               	movlb	2	; select bank2
 13077     00D6  083B               	movf	(_TCC_Curve$3309+7)^(0+256),w
 13078     00D7  0140               	movlb	0	; select bank0
 13079     00D8  00D5               	movwf	___omul@multiplier+7
 13080     00D9  0141               	movlb	1	; select bank1
 13081     00DA  0868               	movf	(_factor_rdson_rthsa+1)^(0+128),w
 13082     00DB  0142               	movlb	2	; select bank2
 13083     00DC  00A9               	movwf	(??_TCC_Curve^(0+256)+1)
 13084     00DD  0141               	movlb	1	; select bank1
 13085     00DE  0867               	movf	_factor_rdson_rthsa^(0+128),w
 13086     00DF  0142               	movlb	2	; select bank2
 13087     00E0  00A8               	movwf	??_TCC_Curve^(0+256)
 13088     00E1  0828               	movf	??_TCC_Curve^(0+256),w
 13089     00E2  0140               	movlb	0	; select bank0
 13090     00E3  00D6               	movwf	___omul@multiplicand
 13091     00E4  0142               	movlb	2	; select bank2
 13092     00E5  0829               	movf	(??_TCC_Curve^(0+256)+1),w
 13093     00E6  0140               	movlb	0	; select bank0
 13094     00E7  00D7               	movwf	___omul@multiplicand+1
 13095     00E8  01D8               	clrf	___omul@multiplicand+2
 13096     00E9  01D9               	clrf	___omul@multiplicand+3
 13097     00EA  01DA               	clrf	___omul@multiplicand+4
 13098     00EB  01DB               	clrf	___omul@multiplicand+5
 13099     00EC  01DC               	clrf	___omul@multiplicand+6
 13100     00ED  01DD               	clrf	___omul@multiplicand+7
 13101     00EE  318E  26AC  3180   	fcall	___omul
 13102     00F1  304E               	movlw	low ?___omul
 13103     00F2  0086               	movwf	6
 13104     00F3  3000               	movlw	high ?___omul
 13105     00F4  0087               	movwf	7
 13106     00F5  3F40               	moviw [0]fsr1
 13107     00F6  0142               	movlb	2	; select bank2
 13108     00F7  00AA               	movwf	(??_TCC_Curve+2)^(0+256)
 13109     00F8  3F41               	moviw [1]fsr1
 13110     00F9  00AB               	movwf	((??_TCC_Curve+2)^(0+256)+1)
 13111     00FA  3F42               	moviw [2]fsr1
 13112     00FB  00AC               	movwf	((??_TCC_Curve+2)^(0+256)+2)
 13113     00FC  3F43               	moviw [3]fsr1
 13114     00FD  00AD               	movwf	((??_TCC_Curve+2)^(0+256)+3)
 13115     00FE  3F44               	moviw [4]fsr1
 13116     00FF  00AE               	movwf	((??_TCC_Curve+2)^(0+256)+4)
 13117     0100  3F45               	moviw [5]fsr1
 13118     0101  00AF               	movwf	((??_TCC_Curve+2)^(0+256)+5)
 13119     0102  3F46               	moviw [6]fsr1
 13120     0103  00B0               	movwf	((??_TCC_Curve+2)^(0+256)+6)
 13121     0104  3F47               	moviw [7]fsr1
 13122     0105  00B1               	movwf	((??_TCC_Curve+2)^(0+256)+7)
 13123     0106  300A               	movlw	10
 13124     0107                     u3205:
 13125     0107  0142               	movlb	2	; select bank2
 13126     0108  36B1               	lsrf	((??_TCC_Curve+2)^(0+256)+7),f
 13127     0109  0CB0               	rrf	((??_TCC_Curve+2)^(0+256)+6),f
 13128     010A  0CAF               	rrf	((??_TCC_Curve+2)^(0+256)+5),f
 13129     010B  0CAE               	rrf	((??_TCC_Curve+2)^(0+256)+4),f
 13130     010C  0CAD               	rrf	((??_TCC_Curve+2)^(0+256)+3),f
 13131     010D  0CAC               	rrf	((??_TCC_Curve+2)^(0+256)+2),f
 13132     010E  0CAB               	rrf	((??_TCC_Curve+2)^(0+256)+1),f
 13133     010F  0CAA               	rrf	(??_TCC_Curve+2)^(0+256),f
 13134     0110  0B89               	decfsz	9,f
 13135     0111  2907               	goto	u3205
 13136     0112  0142               	movlb	2	; select bank2
 13137     0113  082D               	movf	((??_TCC_Curve+2)^(0+256)+3),w
 13138     0114  0141               	movlb	1	; select bank1
 13139     0115  00A7               	movwf	(_Trise_raw_curr+3)^(0+128)
 13140     0116  0142               	movlb	2	; select bank2
 13141     0117  082C               	movf	((??_TCC_Curve+2)^(0+256)+2),w
 13142     0118  0141               	movlb	1	; select bank1
 13143     0119  00A6               	movwf	(_Trise_raw_curr+2)^(0+128)
 13144     011A  0142               	movlb	2	; select bank2
 13145     011B  082B               	movf	((??_TCC_Curve+2)^(0+256)+1),w
 13146     011C  0141               	movlb	1	; select bank1
 13147     011D  00A5               	movwf	(_Trise_raw_curr+1)^(0+128)
 13148     011E  0142               	movlb	2	; select bank2
 13149     011F  082A               	movf	(??_TCC_Curve+2)^(0+256),w
 13150     0120  0141               	movlb	1	; select bank1
 13151     0121  00A4               	movwf	_Trise_raw_curr^(0+128)
 13152                           
 13153                           ;efuse.c: 480:     Trise_filtered = (uint32_t) ((uint64_t) a1_coef * Trise_filtered + (u
      +                          int32_t) b1_coef * (Trise_raw_prev + Trise_raw_curr)) >> 16;
 13154     0122  0820               	movf	_Trise_raw_prev^(0+128),w
 13155     0123  0724               	addwf	_Trise_raw_curr^(0+128),w
 13156     0124  0142               	movlb	2	; select bank2
 13157     0125  00A8               	movwf	??_TCC_Curve^(0+256)
 13158     0126  0141               	movlb	1	; select bank1
 13159     0127  0821               	movf	(_Trise_raw_prev+1)^(0+128),w
 13160     0128  3D25               	addwfc	(_Trise_raw_curr+1)^(0+128),w
 13161     0129  0142               	movlb	2	; select bank2
 13162     012A  00A9               	movwf	(??_TCC_Curve^(0+256)+1)
 13163     012B  0141               	movlb	1	; select bank1
 13164     012C  0822               	movf	(_Trise_raw_prev+2)^(0+128),w
 13165     012D  3D26               	addwfc	(_Trise_raw_curr+2)^(0+128),w
 13166     012E  0142               	movlb	2	; select bank2
 13167     012F  00AA               	movwf	(??_TCC_Curve^(0+256)+2)
 13168     0130  0141               	movlb	1	; select bank1
 13169     0131  0823               	movf	(_Trise_raw_prev+3)^(0+128),w
 13170     0132  3D27               	addwfc	(_Trise_raw_curr+3)^(0+128),w
 13171     0133  0142               	movlb	2	; select bank2
 13172     0134  00AB               	movwf	(??_TCC_Curve^(0+256)+3)
 13173     0135  082B               	movf	(??_TCC_Curve+3)^(0+256),w
 13174     0136  0140               	movlb	0	; select bank0
 13175     0137  00D1               	movwf	___lmul@multiplier+3
 13176     0138  0142               	movlb	2	; select bank2
 13177     0139  082A               	movf	(??_TCC_Curve+2)^(0+256),w
 13178     013A  0140               	movlb	0	; select bank0
 13179     013B  00D0               	movwf	___lmul@multiplier+2
 13180     013C  0142               	movlb	2	; select bank2
 13181     013D  0829               	movf	(??_TCC_Curve+1)^(0+256),w
 13182     013E  0140               	movlb	0	; select bank0
 13183     013F  00CF               	movwf	___lmul@multiplier+1
 13184     0140  0142               	movlb	2	; select bank2
 13185     0141  0828               	movf	??_TCC_Curve^(0+256),w
 13186     0142  0140               	movlb	0	; select bank0
 13187     0143  00CE               	movwf	___lmul@multiplier
 13188     0144  086A               	movf	_b1_coef,w
 13189     0145  0142               	movlb	2	; select bank2
 13190     0146  00AC               	movwf	(??_TCC_Curve+4)^(0+256)
 13191     0147  01AD               	clrf	((??_TCC_Curve+4)^(0+256)+1)
 13192     0148  01AE               	clrf	((??_TCC_Curve+4)^(0+256)+2)
 13193     0149  01AF               	clrf	((??_TCC_Curve+4)^(0+256)+3)
 13194     014A  082F               	movf	(??_TCC_Curve+7)^(0+256),w
 13195     014B  0140               	movlb	0	; select bank0
 13196     014C  00D5               	movwf	___lmul@multiplicand+3
 13197     014D  0142               	movlb	2	; select bank2
 13198     014E  082E               	movf	(??_TCC_Curve+6)^(0+256),w
 13199     014F  0140               	movlb	0	; select bank0
 13200     0150  00D4               	movwf	___lmul@multiplicand+2
 13201     0151  0142               	movlb	2	; select bank2
 13202     0152  082D               	movf	(??_TCC_Curve+5)^(0+256),w
 13203     0153  0140               	movlb	0	; select bank0
 13204     0154  00D3               	movwf	___lmul@multiplicand+1
 13205     0155  0142               	movlb	2	; select bank2
 13206     0156  082C               	movf	(??_TCC_Curve+4)^(0+256),w
 13207     0157  0140               	movlb	0	; select bank0
 13208     0158  00D2               	movwf	___lmul@multiplicand
 13209     0159  318B  23A8  3180   	fcall	___lmul
 13210     015C  084E               	movf	?___lmul,w
 13211     015D  0142               	movlb	2	; select bank2
 13212     015E  00B0               	movwf	(??_TCC_Curve+8)^(0+256)
 13213     015F  0140               	movlb	0	; select bank0
 13214     0160  084F               	movf	?___lmul+1,w
 13215     0161  0142               	movlb	2	; select bank2
 13216     0162  00B1               	movwf	((??_TCC_Curve+8)^(0+256)+1)
 13217     0163  0140               	movlb	0	; select bank0
 13218     0164  0850               	movf	?___lmul+2,w
 13219     0165  0142               	movlb	2	; select bank2
 13220     0166  00B2               	movwf	((??_TCC_Curve+8)^(0+256)+2)
 13221     0167  0140               	movlb	0	; select bank0
 13222     0168  0851               	movf	?___lmul+3,w
 13223     0169  0142               	movlb	2	; select bank2
 13224     016A  00B3               	movwf	((??_TCC_Curve+8)^(0+256)+3)
 13225     016B  0141               	movlb	1	; select bank1
 13226     016C  0865               	movf	_a1_coef^(0+128),w
 13227     016D  0140               	movlb	0	; select bank0
 13228     016E  00CE               	movwf	___lmul@multiplier
 13229     016F  0141               	movlb	1	; select bank1
 13230     0170  0866               	movf	(_a1_coef+1)^(0+128),w
 13231     0171  0140               	movlb	0	; select bank0
 13232     0172  00CF               	movwf	___lmul@multiplier+1
 13233     0173  01D0               	clrf	___lmul@multiplier+2
 13234     0174  01D1               	clrf	___lmul@multiplier+3
 13235     0175  0141               	movlb	1	; select bank1
 13236     0176  082B               	movf	(_Trise_filtered+3)^(0+128),w
 13237     0177  0140               	movlb	0	; select bank0
 13238     0178  00D5               	movwf	___lmul@multiplicand+3
 13239     0179  0141               	movlb	1	; select bank1
 13240     017A  082A               	movf	(_Trise_filtered+2)^(0+128),w
 13241     017B  0140               	movlb	0	; select bank0
 13242     017C  00D4               	movwf	___lmul@multiplicand+2
 13243     017D  0141               	movlb	1	; select bank1
 13244     017E  0829               	movf	(_Trise_filtered+1)^(0+128),w
 13245     017F  0140               	movlb	0	; select bank0
 13246     0180  00D3               	movwf	___lmul@multiplicand+1
 13247     0181  0141               	movlb	1	; select bank1
 13248     0182  0828               	movf	_Trise_filtered^(0+128),w
 13249     0183  0140               	movlb	0	; select bank0
 13250     0184  00D2               	movwf	___lmul@multiplicand
 13251     0185  318B  23A8  3180   	fcall	___lmul
 13252     0188  084E               	movf	?___lmul,w
 13253     0189  0142               	movlb	2	; select bank2
 13254     018A  07B0               	addwf	(??_TCC_Curve+8)^(0+256),f
 13255     018B  0140               	movlb	0	; select bank0
 13256     018C  084F               	movf	?___lmul+1,w
 13257     018D  0142               	movlb	2	; select bank2
 13258     018E  3DB1               	addwfc	((??_TCC_Curve+8)^(0+256)+1),f
 13259     018F  0140               	movlb	0	; select bank0
 13260     0190  0850               	movf	?___lmul+2,w
 13261     0191  0142               	movlb	2	; select bank2
 13262     0192  3DB2               	addwfc	((??_TCC_Curve+8)^(0+256)+2),f
 13263     0193  0140               	movlb	0	; select bank0
 13264     0194  0851               	movf	?___lmul+3,w
 13265     0195  0142               	movlb	2	; select bank2
 13266     0196  3DB3               	addwfc	((??_TCC_Curve+8)^(0+256)+3),f
 13267     0197  3010               	movlw	16
 13268     0198                     u3215:
 13269     0198  36B3               	lsrf	((??_TCC_Curve+8)^(0+256)+3),f
 13270     0199  0CB2               	rrf	((??_TCC_Curve+8)^(0+256)+2),f
 13271     019A  0CB1               	rrf	((??_TCC_Curve+8)^(0+256)+1),f
 13272     019B  0CB0               	rrf	(??_TCC_Curve+8)^(0+256),f
 13273     019C  0B89               	decfsz	9,f
 13274     019D  2998               	goto	u3215
 13275     019E  0833               	movf	(??_TCC_Curve+11)^(0+256),w
 13276     019F  0141               	movlb	1	; select bank1
 13277     01A0  00AB               	movwf	(_Trise_filtered+3)^(0+128)
 13278     01A1  0142               	movlb	2	; select bank2
 13279     01A2  0832               	movf	(??_TCC_Curve+10)^(0+256),w
 13280     01A3  0141               	movlb	1	; select bank1
 13281     01A4  00AA               	movwf	(_Trise_filtered+2)^(0+128)
 13282     01A5  0142               	movlb	2	; select bank2
 13283     01A6  0831               	movf	(??_TCC_Curve+9)^(0+256),w
 13284     01A7  0141               	movlb	1	; select bank1
 13285     01A8  00A9               	movwf	(_Trise_filtered+1)^(0+128)
 13286     01A9  0142               	movlb	2	; select bank2
 13287     01AA  0830               	movf	(??_TCC_Curve+8)^(0+256),w
 13288     01AB  0141               	movlb	1	; select bank1
 13289     01AC  00A8               	movwf	_Trise_filtered^(0+128)
 13290                           
 13291                           ;efuse.c: 482:     Trise_sa = (int16_t) (Trise_filtered / current2counts_squared);
 13292     01AD  0140               	movlb	0	; select bank0
 13293     01AE  0867               	movf	_current2counts_squared,w
 13294     01AF  00DA               	movwf	___lldiv@divisor
 13295     01B0  0868               	movf	_current2counts_squared+1,w
 13296     01B1  00DB               	movwf	___lldiv@divisor+1
 13297     01B2  01DC               	clrf	___lldiv@divisor+2
 13298     01B3  01DD               	clrf	___lldiv@divisor+3
 13299     01B4  0141               	movlb	1	; select bank1
 13300     01B5  082B               	movf	(_Trise_filtered+3)^(0+128),w
 13301     01B6  0140               	movlb	0	; select bank0
 13302     01B7  00E1               	movwf	___lldiv@dividend+3
 13303     01B8  0141               	movlb	1	; select bank1
 13304     01B9  082A               	movf	(_Trise_filtered+2)^(0+128),w
 13305     01BA  0140               	movlb	0	; select bank0
 13306     01BB  00E0               	movwf	___lldiv@dividend+2
 13307     01BC  0141               	movlb	1	; select bank1
 13308     01BD  0829               	movf	(_Trise_filtered+1)^(0+128),w
 13309     01BE  0140               	movlb	0	; select bank0
 13310     01BF  00DF               	movwf	___lldiv@dividend+1
 13311     01C0  0141               	movlb	1	; select bank1
 13312     01C1  0828               	movf	_Trise_filtered^(0+128),w
 13313     01C2  0140               	movlb	0	; select bank0
 13314     01C3  00DE               	movwf	___lldiv@dividend
 13315     01C4  318D  25E2  3180   	fcall	___lldiv
 13316     01C7  085B               	movf	?___lldiv+1,w
 13317     01C8  00B3               	movwf	_Trise_sa+1
 13318     01C9  085A               	movf	?___lldiv,w
 13319     01CA  00B2               	movwf	_Trise_sa
 13320                           
 13321                           ;efuse.c: 483:     Tsink = Tambient + Trise_sa;
 13322     01CB  0832               	movf	_Trise_sa,w
 13323     01CC  076D               	addwf	_Tambient,w
 13324     01CD  00B8               	movwf	_Tsink
 13325     01CE  0833               	movf	_Trise_sa+1,w
 13326     01CF  3D6E               	addwfc	_Tambient+1,w
 13327     01D0  00B9               	movwf	_Tsink+1
 13328                           
 13329                           ;efuse.c: 485:     Trise_js = (int16_t) (((((uint32_t) adcISense_OneMOSFET * (uint32_t) 
      +                          adcISense_OneMOSFET) * factor_rdson_rthjs) >> 10) / current2counts_squared);
 13330     01D1  0141               	movlb	1	; select bank1
 13331     01D2  082E               	movf	_adcISense_OneMOSFET^(0+128),w
 13332     01D3  0140               	movlb	0	; select bank0
 13333     01D4  00D2               	movwf	___lmul@multiplicand
 13334     01D5  0141               	movlb	1	; select bank1
 13335     01D6  082F               	movf	(_adcISense_OneMOSFET+1)^(0+128),w
 13336     01D7  0140               	movlb	0	; select bank0
 13337     01D8  00D3               	movwf	___lmul@multiplicand+1
 13338     01D9  01D4               	clrf	___lmul@multiplicand+2
 13339     01DA  01D5               	clrf	___lmul@multiplicand+3
 13340     01DB  0141               	movlb	1	; select bank1
 13341     01DC  082E               	movf	_adcISense_OneMOSFET^(0+128),w
 13342     01DD  0140               	movlb	0	; select bank0
 13343     01DE  00CE               	movwf	___lmul@multiplier
 13344     01DF  0141               	movlb	1	; select bank1
 13345     01E0  082F               	movf	(_adcISense_OneMOSFET+1)^(0+128),w
 13346     01E1  0140               	movlb	0	; select bank0
 13347     01E2  00CF               	movwf	___lmul@multiplier+1
 13348     01E3  01D0               	clrf	___lmul@multiplier+2
 13349     01E4  01D1               	clrf	___lmul@multiplier+3
 13350     01E5  318B  23A8  3180   	fcall	___lmul
 13351     01E8  0851               	movf	?___lmul+3,w
 13352     01E9  0142               	movlb	2	; select bank2
 13353     01EA  00BF               	movwf	(_TCC_Curve$3310+3)^(0+256)
 13354     01EB  0140               	movlb	0	; select bank0
 13355     01EC  0850               	movf	?___lmul+2,w
 13356     01ED  0142               	movlb	2	; select bank2
 13357     01EE  00BE               	movwf	(_TCC_Curve$3310+2)^(0+256)
 13358     01EF  0140               	movlb	0	; select bank0
 13359     01F0  084F               	movf	?___lmul+1,w
 13360     01F1  0142               	movlb	2	; select bank2
 13361     01F2  00BD               	movwf	(_TCC_Curve$3310+1)^(0+256)
 13362     01F3  0140               	movlb	0	; select bank0
 13363     01F4  084E               	movf	?___lmul,w
 13364     01F5  0142               	movlb	2	; select bank2
 13365     01F6  00BC               	movwf	_TCC_Curve$3310^(0+256)
 13366                           
 13367                           ;efuse.c: 485:     Trise_js = (int16_t) (((((uint32_t) adcISense_OneMOSFET * (uint32_t) 
      +                          adcISense_OneMOSFET) * factor_rdson_rthjs) >> 10) / current2counts_squared);
 13368     01F7  0140               	movlb	0	; select bank0
 13369     01F8  0867               	movf	_current2counts_squared,w
 13370     01F9  00DA               	movwf	___lldiv@divisor
 13371     01FA  0868               	movf	_current2counts_squared+1,w
 13372     01FB  00DB               	movwf	___lldiv@divisor+1
 13373     01FC  01DC               	clrf	___lldiv@divisor+2
 13374     01FD  01DD               	clrf	___lldiv@divisor+3
 13375     01FE  0141               	movlb	1	; select bank1
 13376     01FF  0869               	movf	_factor_rdson_rthjs^(0+128),w
 13377     0200  0140               	movlb	0	; select bank0
 13378     0201  00D2               	movwf	___lmul@multiplicand
 13379     0202  0141               	movlb	1	; select bank1
 13380     0203  086A               	movf	(_factor_rdson_rthjs+1)^(0+128),w
 13381     0204  0140               	movlb	0	; select bank0
 13382     0205  00D3               	movwf	___lmul@multiplicand+1
 13383     0206  01D4               	clrf	___lmul@multiplicand+2
 13384     0207  01D5               	clrf	___lmul@multiplicand+3
 13385     0208  0142               	movlb	2	; select bank2
 13386     0209  083F               	movf	(_TCC_Curve$3310+3)^(0+256),w
 13387     020A  0140               	movlb	0	; select bank0
 13388     020B  00D1               	movwf	___lmul@multiplier+3
 13389     020C  0142               	movlb	2	; select bank2
 13390     020D  083E               	movf	(_TCC_Curve$3310+2)^(0+256),w
 13391     020E  0140               	movlb	0	; select bank0
 13392     020F  00D0               	movwf	___lmul@multiplier+2
 13393     0210  0142               	movlb	2	; select bank2
 13394     0211  083D               	movf	(_TCC_Curve$3310+1)^(0+256),w
 13395     0212  0140               	movlb	0	; select bank0
 13396     0213  00CF               	movwf	___lmul@multiplier+1
 13397     0214  0142               	movlb	2	; select bank2
 13398     0215  083C               	movf	_TCC_Curve$3310^(0+256),w
 13399     0216  0140               	movlb	0	; select bank0
 13400     0217  00CE               	movwf	___lmul@multiplier
 13401     0218  318B  23A8  3180   	fcall	___lmul
 13402     021B  084E               	movf	?___lmul,w
 13403     021C  0142               	movlb	2	; select bank2
 13404     021D  00A8               	movwf	??_TCC_Curve^(0+256)
 13405     021E  0140               	movlb	0	; select bank0
 13406     021F  084F               	movf	?___lmul+1,w
 13407     0220  0142               	movlb	2	; select bank2
 13408     0221  00A9               	movwf	(??_TCC_Curve^(0+256)+1)
 13409     0222  0140               	movlb	0	; select bank0
 13410     0223  0850               	movf	?___lmul+2,w
 13411     0224  0142               	movlb	2	; select bank2
 13412     0225  00AA               	movwf	(??_TCC_Curve^(0+256)+2)
 13413     0226  0140               	movlb	0	; select bank0
 13414     0227  0851               	movf	?___lmul+3,w
 13415     0228  0142               	movlb	2	; select bank2
 13416     0229  00AB               	movwf	(??_TCC_Curve^(0+256)+3)
 13417     022A  300A               	movlw	10
 13418     022B                     u3225:
 13419     022B  36AB               	lsrf	(??_TCC_Curve^(0+256)+3),f
 13420     022C  0CAA               	rrf	(??_TCC_Curve^(0+256)+2),f
 13421     022D  0CA9               	rrf	(??_TCC_Curve^(0+256)+1),f
 13422     022E  0CA8               	rrf	??_TCC_Curve^(0+256),f
 13423     022F  0B89               	decfsz	9,f
 13424     0230  2A2B               	goto	u3225
 13425     0231  082B               	movf	(??_TCC_Curve+3)^(0+256),w
 13426     0232  0140               	movlb	0	; select bank0
 13427     0233  00E1               	movwf	___lldiv@dividend+3
 13428     0234  0142               	movlb	2	; select bank2
 13429     0235  082A               	movf	(??_TCC_Curve+2)^(0+256),w
 13430     0236  0140               	movlb	0	; select bank0
 13431     0237  00E0               	movwf	___lldiv@dividend+2
 13432     0238  0142               	movlb	2	; select bank2
 13433     0239  0829               	movf	(??_TCC_Curve+1)^(0+256),w
 13434     023A  0140               	movlb	0	; select bank0
 13435     023B  00DF               	movwf	___lldiv@dividend+1
 13436     023C  0142               	movlb	2	; select bank2
 13437     023D  0828               	movf	??_TCC_Curve^(0+256),w
 13438     023E  0140               	movlb	0	; select bank0
 13439     023F  00DE               	movwf	___lldiv@dividend
 13440     0240  318D  25E2         	fcall	___lldiv
 13441     0242  085B               	movf	?___lldiv+1,w
 13442     0243  00B5               	movwf	_Trise_js+1
 13443     0244  085A               	movf	?___lldiv,w
 13444     0245  00B4               	movwf	_Trise_js
 13445                           
 13446                           ;efuse.c: 486:     Tjunction = Tsink + Trise_js;
 13447     0246  0834               	movf	_Trise_js,w
 13448     0247  0738               	addwf	_Tsink,w
 13449     0248  00B6               	movwf	_Tjunction
 13450     0249  0835               	movf	_Trise_js+1,w
 13451     024A  3D39               	addwfc	_Tsink+1,w
 13452     024B  00B7               	movwf	_Tjunction+1
 13453     024C  0008               	return
 13454     024D                     __end_of_TCC_Curve:
 13455                           
 13456                           	psect	text51
 13457     0EAC                     __ptext51:	
 13458 ;; *************** function ___omul *****************
 13459 ;; Defined at:
 13460 ;;		line 91 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul64.c"
 13461 ;; Parameters:    Size  Location     Type
 13462 ;;  multiplier      8    0[BANK0 ] unsigned long long 
 13463 ;;  multiplicand    8    8[BANK0 ] unsigned long long 
 13464 ;; Auto vars:     Size  Location     Type
 13465 ;;  product         8    0[BANK2 ] unsigned long long 
 13466 ;; Return value:  Size  Location     Type
 13467 ;;                  8    0[BANK0 ] unsigned long long 
 13468 ;; Registers used:
 13469 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13470 ;; Tracked objects:
 13471 ;;		On entry : 3F/0
 13472 ;;		On exit  : 3F/0
 13473 ;;		Unchanged: 0/0
 13474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13475 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13476 ;;      Locals:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0
 13477 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13478 ;;      Totals:         0      17       0       8       0       0       0       0       0       0       0       0       
      +0       0
 13479 ;;Total ram usage:       25 bytes
 13480 ;; Hardware stack levels used: 1
 13481 ;; Hardware stack levels required when called: 5
 13482 ;; This function calls:
 13483 ;;		Nothing
 13484 ;; This function is called by:
 13485 ;;		_TCC_Curve
 13486 ;; This function uses a non-reentrant model
 13487 ;;
 13488                           
 13489     0EAC                     ___omul:	
 13490                           ;psect for function ___omul
 13491                           
 13492                           
 13493                           ;incstack = 0
 13494                           ; Regs used in ___omul: [wreg+fsr1l+fsr1h+status,2+status,0]
 13495     0EAC  3020               	movlw	low ___omul@product
 13496     0EAD  0086               	movwf	6
 13497     0EAE  3001               	movlw	high ___omul@product
 13498     0EAF  0087               	movwf	7
 13499     0EB0  3008               	movlw	8
 13500     0EB1  00DE               	movwf	??___omul
 13501     0EB2  3000               	movlw	0
 13502     0EB3                     u3080:
 13503     0EB3  001E               	movwi fsr1++
 13504     0EB4  0BDE               	decfsz	??___omul,f
 13505     0EB5  2EB3               	goto	u3080
 13506     0EB6                     l5120:
 13507     0EB6  1C4E               	btfss	___omul@multiplier,0
 13508     0EB7  2ED7               	goto	l5124
 13509     0EB8  0856               	movf	___omul@multiplicand,w
 13510     0EB9  0142               	movlb	2	; select bank2
 13511     0EBA  07A0               	addwf	___omul@product^(0+256),f
 13512     0EBB  0140               	movlb	0	; select bank0
 13513     0EBC  0857               	movf	___omul@multiplicand+1,w
 13514     0EBD  0142               	movlb	2	; select bank2
 13515     0EBE  3DA1               	addwfc	(___omul@product+1)^(0+256),f
 13516     0EBF  0140               	movlb	0	; select bank0
 13517     0EC0  0858               	movf	___omul@multiplicand+2,w
 13518     0EC1  0142               	movlb	2	; select bank2
 13519     0EC2  3DA2               	addwfc	(___omul@product+2)^(0+256),f
 13520     0EC3  0140               	movlb	0	; select bank0
 13521     0EC4  0859               	movf	___omul@multiplicand+3,w
 13522     0EC5  0142               	movlb	2	; select bank2
 13523     0EC6  3DA3               	addwfc	(___omul@product+3)^(0+256),f
 13524     0EC7  0140               	movlb	0	; select bank0
 13525     0EC8  085A               	movf	___omul@multiplicand+4,w
 13526     0EC9  0142               	movlb	2	; select bank2
 13527     0ECA  3DA4               	addwfc	(___omul@product+4)^(0+256),f
 13528     0ECB  0140               	movlb	0	; select bank0
 13529     0ECC  085B               	movf	___omul@multiplicand+5,w
 13530     0ECD  0142               	movlb	2	; select bank2
 13531     0ECE  3DA5               	addwfc	(___omul@product+5)^(0+256),f
 13532     0ECF  0140               	movlb	0	; select bank0
 13533     0ED0  085C               	movf	___omul@multiplicand+6,w
 13534     0ED1  0142               	movlb	2	; select bank2
 13535     0ED2  3DA6               	addwfc	(___omul@product+6)^(0+256),f
 13536     0ED3  0140               	movlb	0	; select bank0
 13537     0ED4  085D               	movf	___omul@multiplicand+7,w
 13538     0ED5  0142               	movlb	2	; select bank2
 13539     0ED6  3DA7               	addwfc	(___omul@product+7)^(0+256),f
 13540     0ED7                     l5124:
 13541     0ED7  0140               	movlb	0	; select bank0
 13542     0ED8  35D6               	lslf	___omul@multiplicand,f
 13543     0ED9  0DD7               	rlf	___omul@multiplicand+1,f
 13544     0EDA  0DD8               	rlf	___omul@multiplicand+2,f
 13545     0EDB  0DD9               	rlf	___omul@multiplicand+3,f
 13546     0EDC  0DDA               	rlf	___omul@multiplicand+4,f
 13547     0EDD  0DDB               	rlf	___omul@multiplicand+5,f
 13548     0EDE  0DDC               	rlf	___omul@multiplicand+6,f
 13549     0EDF  0DDD               	rlf	___omul@multiplicand+7,f
 13550     0EE0  36D5               	lsrf	___omul@multiplier+7,f
 13551     0EE1  0CD4               	rrf	___omul@multiplier+6,f
 13552     0EE2  0CD3               	rrf	___omul@multiplier+5,f
 13553     0EE3  0CD2               	rrf	___omul@multiplier+4,f
 13554     0EE4  0CD1               	rrf	___omul@multiplier+3,f
 13555     0EE5  0CD0               	rrf	___omul@multiplier+2,f
 13556     0EE6  0CCF               	rrf	___omul@multiplier+1,f
 13557     0EE7  0CCE               	rrf	___omul@multiplier,f
 13558     0EE8  084E               	movf	___omul@multiplier,w
 13559     0EE9  044F               	iorwf	___omul@multiplier+1,w
 13560     0EEA  0450               	iorwf	___omul@multiplier+2,w
 13561     0EEB  0451               	iorwf	___omul@multiplier+3,w
 13562     0EEC  0452               	iorwf	___omul@multiplier+4,w
 13563     0EED  0453               	iorwf	___omul@multiplier+5,w
 13564     0EEE  0454               	iorwf	___omul@multiplier+6,w
 13565     0EEF  0455               	iorwf	___omul@multiplier+7,w
 13566     0EF0  1D03               	skipz
 13567     0EF1  2EB6               	goto	l5120
 13568     0EF2  0142               	movlb	2	; select bank2
 13569     0EF3  0820               	movf	___omul@product^(0+256),w
 13570     0EF4  0140               	movlb	0	; select bank0
 13571     0EF5  00CE               	movwf	?___omul
 13572     0EF6  0142               	movlb	2	; select bank2
 13573     0EF7  0821               	movf	(___omul@product+1)^(0+256),w
 13574     0EF8  0140               	movlb	0	; select bank0
 13575     0EF9  00CF               	movwf	?___omul+1
 13576     0EFA  0142               	movlb	2	; select bank2
 13577     0EFB  0822               	movf	(___omul@product+2)^(0+256),w
 13578     0EFC  0140               	movlb	0	; select bank0
 13579     0EFD  00D0               	movwf	?___omul+2
 13580     0EFE  0142               	movlb	2	; select bank2
 13581     0EFF  0823               	movf	(___omul@product+3)^(0+256),w
 13582     0F00  0140               	movlb	0	; select bank0
 13583     0F01  00D1               	movwf	?___omul+3
 13584     0F02  0142               	movlb	2	; select bank2
 13585     0F03  0824               	movf	(___omul@product+4)^(0+256),w
 13586     0F04  0140               	movlb	0	; select bank0
 13587     0F05  00D2               	movwf	?___omul+4
 13588     0F06  0142               	movlb	2	; select bank2
 13589     0F07  0825               	movf	(___omul@product+5)^(0+256),w
 13590     0F08  0140               	movlb	0	; select bank0
 13591     0F09  00D3               	movwf	?___omul+5
 13592     0F0A  0142               	movlb	2	; select bank2
 13593     0F0B  0826               	movf	(___omul@product+6)^(0+256),w
 13594     0F0C  0140               	movlb	0	; select bank0
 13595     0F0D  00D4               	movwf	?___omul+6
 13596     0F0E  0142               	movlb	2	; select bank2
 13597     0F0F  0827               	movf	(___omul@product+7)^(0+256),w
 13598     0F10  0140               	movlb	0	; select bank0
 13599     0F11  00D5               	movwf	?___omul+7
 13600     0F12  0008               	return
 13601     0F13                     __end_of___omul:
 13602                           
 13603                           	psect	text52
 13604     0BA8                     __ptext52:	
 13605 ;; *************** function ___lmul *****************
 13606 ;; Defined at:
 13607 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul32.c"
 13608 ;; Parameters:    Size  Location     Type
 13609 ;;  multiplier      4    0[BANK0 ] unsigned long 
 13610 ;;  multiplicand    4    4[BANK0 ] unsigned long 
 13611 ;; Auto vars:     Size  Location     Type
 13612 ;;  product         4    8[BANK0 ] unsigned long 
 13613 ;; Return value:  Size  Location     Type
 13614 ;;                  4    0[BANK0 ] unsigned long 
 13615 ;; Registers used:
 13616 ;;		wreg, status,2, status,0
 13617 ;; Tracked objects:
 13618 ;;		On entry : 3F/0
 13619 ;;		On exit  : 3F/0
 13620 ;;		Unchanged: 0/0
 13621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13622 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13623 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13625 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13626 ;;Total ram usage:       12 bytes
 13627 ;; Hardware stack levels used: 1
 13628 ;; Hardware stack levels required when called: 5
 13629 ;; This function calls:
 13630 ;;		Nothing
 13631 ;; This function is called by:
 13632 ;;		_TCC_Curve
 13633 ;; This function uses a non-reentrant model
 13634 ;;
 13635                           
 13636     0BA8                     ___lmul:	
 13637                           ;psect for function ___lmul
 13638                           
 13639                           
 13640                           ;incstack = 0
 13641                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 13642     0BA8  3000               	movlw	0
 13643     0BA9  00D9               	movwf	___lmul@product+3
 13644     0BAA  3000               	movlw	0
 13645     0BAB  00D8               	movwf	___lmul@product+2
 13646     0BAC  3000               	movlw	0
 13647     0BAD  00D7               	movwf	___lmul@product+1
 13648     0BAE  3000               	movlw	0
 13649     0BAF  00D6               	movwf	___lmul@product
 13650     0BB0                     l4486:
 13651     0BB0  1C4E               	btfss	___lmul@multiplier,0
 13652     0BB1  2BBA               	goto	l4490
 13653     0BB2  0852               	movf	___lmul@multiplicand,w
 13654     0BB3  07D6               	addwf	___lmul@product,f
 13655     0BB4  0853               	movf	___lmul@multiplicand+1,w
 13656     0BB5  3DD7               	addwfc	___lmul@product+1,f
 13657     0BB6  0854               	movf	___lmul@multiplicand+2,w
 13658     0BB7  3DD8               	addwfc	___lmul@product+2,f
 13659     0BB8  0855               	movf	___lmul@multiplicand+3,w
 13660     0BB9  3DD9               	addwfc	___lmul@product+3,f
 13661     0BBA                     l4490:
 13662     0BBA  3001               	movlw	1
 13663     0BBB                     u2565:
 13664     0BBB  35D2               	lslf	___lmul@multiplicand,f
 13665     0BBC  0DD3               	rlf	___lmul@multiplicand+1,f
 13666     0BBD  0DD4               	rlf	___lmul@multiplicand+2,f
 13667     0BBE  0DD5               	rlf	___lmul@multiplicand+3,f
 13668     0BBF  0B89               	decfsz	9,f
 13669     0BC0  2BBB               	goto	u2565
 13670     0BC1  3001               	movlw	1
 13671     0BC2                     u2575:
 13672     0BC2  36D1               	lsrf	___lmul@multiplier+3,f
 13673     0BC3  0CD0               	rrf	___lmul@multiplier+2,f
 13674     0BC4  0CCF               	rrf	___lmul@multiplier+1,f
 13675     0BC5  0CCE               	rrf	___lmul@multiplier,f
 13676     0BC6  0B89               	decfsz	9,f
 13677     0BC7  2BC2               	goto	u2575
 13678     0BC8  0851               	movf	___lmul@multiplier+3,w
 13679     0BC9  0450               	iorwf	___lmul@multiplier+2,w
 13680     0BCA  044F               	iorwf	___lmul@multiplier+1,w
 13681     0BCB  044E               	iorwf	___lmul@multiplier,w
 13682     0BCC  1D03               	skipz
 13683     0BCD  2BB0               	goto	l4486
 13684     0BCE  0859               	movf	___lmul@product+3,w
 13685     0BCF  00D1               	movwf	?___lmul+3
 13686     0BD0  0858               	movf	___lmul@product+2,w
 13687     0BD1  00D0               	movwf	?___lmul+2
 13688     0BD2  0857               	movf	___lmul@product+1,w
 13689     0BD3  00CF               	movwf	?___lmul+1
 13690     0BD4  0856               	movf	___lmul@product,w
 13691     0BD5  00CE               	movwf	?___lmul
 13692     0BD6  0008               	return
 13693     0BD7                     __end_of___lmul:
 13694                           
 13695                           	psect	text53
 13696     0DE2                     __ptext53:	
 13697 ;; *************** function ___lldiv *****************
 13698 ;; Defined at:
 13699 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\__lldiv.c"
 13700 ;; Parameters:    Size  Location     Type
 13701 ;;  divisor         4   12[BANK0 ] unsigned long 
 13702 ;;  dividend        4   16[BANK0 ] unsigned long 
 13703 ;; Auto vars:     Size  Location     Type
 13704 ;;  quotient        4    0[BANK2 ] unsigned long 
 13705 ;;  counter         1    4[BANK2 ] unsigned char 
 13706 ;; Return value:  Size  Location     Type
 13707 ;;                  4   12[BANK0 ] unsigned long 
 13708 ;; Registers used:
 13709 ;;		wreg, status,2, status,0
 13710 ;; Tracked objects:
 13711 ;;		On entry : 3F/0
 13712 ;;		On exit  : 3F/0
 13713 ;;		Unchanged: 0/0
 13714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13715 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13716 ;;      Locals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0
 13717 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13718 ;;      Totals:         0       9       0       5       0       0       0       0       0       0       0       0       
      +0       0
 13719 ;;Total ram usage:       14 bytes
 13720 ;; Hardware stack levels used: 1
 13721 ;; Hardware stack levels required when called: 5
 13722 ;; This function calls:
 13723 ;;		Nothing
 13724 ;; This function is called by:
 13725 ;;		_TCC_Curve
 13726 ;; This function uses a non-reentrant model
 13727 ;;
 13728                           
 13729     0DE2                     ___lldiv:	
 13730                           ;psect for function ___lldiv
 13731                           
 13732                           
 13733                           ;incstack = 0
 13734                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
 13735     0DE2  3000               	movlw	0
 13736     0DE3  0142               	movlb	2	; select bank2
 13737     0DE4  00A3               	movwf	(___lldiv@quotient+3)^(0+256)
 13738     0DE5  3000               	movlw	0
 13739     0DE6  00A2               	movwf	(___lldiv@quotient+2)^(0+256)
 13740     0DE7  3000               	movlw	0
 13741     0DE8  00A1               	movwf	(___lldiv@quotient+1)^(0+256)
 13742     0DE9  3000               	movlw	0
 13743     0DEA  00A0               	movwf	___lldiv@quotient^(0+256)
 13744     0DEB  0140               	movlb	0	; select bank0
 13745     0DEC  085D               	movf	___lldiv@divisor+3,w
 13746     0DED  045C               	iorwf	___lldiv@divisor+2,w
 13747     0DEE  045B               	iorwf	___lldiv@divisor+1,w
 13748     0DEF  045A               	iorwf	___lldiv@divisor,w
 13749     0DF0  1903               	skipnz
 13750     0DF1  2E35               	goto	l5148
 13751     0DF2  0142               	movlb	2	; select bank2
 13752     0DF3  01A4               	clrf	___lldiv@counter^(0+256)
 13753     0DF4  0AA4               	incf	___lldiv@counter^(0+256),f
 13754     0DF5                     l5134:
 13755     0DF5  0140               	movlb	0	; select bank0
 13756     0DF6  1BDD               	btfsc	___lldiv@divisor+3,7
 13757     0DF7  2E05               	goto	l5136
 13758     0DF8  3001               	movlw	1
 13759     0DF9                     u3125:
 13760     0DF9  35DA               	lslf	___lldiv@divisor,f
 13761     0DFA  0DDB               	rlf	___lldiv@divisor+1,f
 13762     0DFB  0DDC               	rlf	___lldiv@divisor+2,f
 13763     0DFC  0DDD               	rlf	___lldiv@divisor+3,f
 13764     0DFD  0B89               	decfsz	9,f
 13765     0DFE  2DF9               	goto	u3125
 13766     0DFF  3001               	movlw	1
 13767     0E00  00E2               	movwf	??___lldiv
 13768     0E01  0862               	movf	??___lldiv,w
 13769     0E02  0142               	movlb	2	; select bank2
 13770     0E03  07A4               	addwf	___lldiv@counter^(0+256),f
 13771     0E04  2DF5               	goto	l5134
 13772     0E05                     l5136:
 13773     0E05  3001               	movlw	1
 13774     0E06                     u3145:
 13775     0E06  0142               	movlb	2	; select bank2
 13776     0E07  35A0               	lslf	___lldiv@quotient^(0+256),f
 13777     0E08  0DA1               	rlf	(___lldiv@quotient+1)^(0+256),f
 13778     0E09  0DA2               	rlf	(___lldiv@quotient+2)^(0+256),f
 13779     0E0A  0DA3               	rlf	(___lldiv@quotient+3)^(0+256),f
 13780     0E0B  0B89               	decfsz	9,f
 13781     0E0C  2E06               	goto	u3145
 13782     0E0D  0140               	movlb	0	; select bank0
 13783     0E0E  085D               	movf	___lldiv@divisor+3,w
 13784     0E0F  0261               	subwf	___lldiv@dividend+3,w
 13785     0E10  1D03               	skipz
 13786     0E11  2E1C               	goto	u3155
 13787     0E12  085C               	movf	___lldiv@divisor+2,w
 13788     0E13  0260               	subwf	___lldiv@dividend+2,w
 13789     0E14  1D03               	skipz
 13790     0E15  2E1C               	goto	u3155
 13791     0E16  085B               	movf	___lldiv@divisor+1,w
 13792     0E17  025F               	subwf	___lldiv@dividend+1,w
 13793     0E18  1D03               	skipz
 13794     0E19  2E1C               	goto	u3155
 13795     0E1A  085A               	movf	___lldiv@divisor,w
 13796     0E1B  025E               	subwf	___lldiv@dividend,w
 13797     0E1C                     u3155:
 13798     0E1C  1C03               	skipc
 13799     0E1D  2E28               	goto	l5144
 13800     0E1E  085A               	movf	___lldiv@divisor,w
 13801     0E1F  02DE               	subwf	___lldiv@dividend,f
 13802     0E20  085B               	movf	___lldiv@divisor+1,w
 13803     0E21  3BDF               	subwfb	___lldiv@dividend+1,f
 13804     0E22  085C               	movf	___lldiv@divisor+2,w
 13805     0E23  3BE0               	subwfb	___lldiv@dividend+2,f
 13806     0E24  085D               	movf	___lldiv@divisor+3,w
 13807     0E25  3BE1               	subwfb	___lldiv@dividend+3,f
 13808     0E26  0142               	movlb	2	; select bank2
 13809     0E27  1420               	bsf	___lldiv@quotient^(0+256),0
 13810     0E28                     l5144:
 13811     0E28  3001               	movlw	1
 13812     0E29                     u3165:
 13813     0E29  0140               	movlb	0	; select bank0
 13814     0E2A  36DD               	lsrf	___lldiv@divisor+3,f
 13815     0E2B  0CDC               	rrf	___lldiv@divisor+2,f
 13816     0E2C  0CDB               	rrf	___lldiv@divisor+1,f
 13817     0E2D  0CDA               	rrf	___lldiv@divisor,f
 13818     0E2E  0B89               	decfsz	9,f
 13819     0E2F  2E29               	goto	u3165
 13820     0E30  3001               	movlw	1
 13821     0E31  0142               	movlb	2	; select bank2
 13822     0E32  02A4               	subwf	___lldiv@counter^(0+256),f
 13823     0E33  1D03               	btfss	3,2
 13824     0E34  2E05               	goto	l5136
 13825     0E35                     l5148:
 13826     0E35  0142               	movlb	2	; select bank2
 13827     0E36  0823               	movf	(___lldiv@quotient+3)^(0+256),w
 13828     0E37  0140               	movlb	0	; select bank0
 13829     0E38  00DD               	movwf	?___lldiv+3
 13830     0E39  0142               	movlb	2	; select bank2
 13831     0E3A  0822               	movf	(___lldiv@quotient+2)^(0+256),w
 13832     0E3B  0140               	movlb	0	; select bank0
 13833     0E3C  00DC               	movwf	?___lldiv+2
 13834     0E3D  0142               	movlb	2	; select bank2
 13835     0E3E  0821               	movf	(___lldiv@quotient+1)^(0+256),w
 13836     0E3F  0140               	movlb	0	; select bank0
 13837     0E40  00DB               	movwf	?___lldiv+1
 13838     0E41  0142               	movlb	2	; select bank2
 13839     0E42  0820               	movf	___lldiv@quotient^(0+256),w
 13840     0E43  0140               	movlb	0	; select bank0
 13841     0E44  00DA               	movwf	?___lldiv
 13842     0E45  0008               	return
 13843     0E46                     __end_of___lldiv:
 13844                           
 13845                           	psect	text54
 13846     0CDA                     __ptext54:	
 13847 ;; *************** function _GetAmbientTemperature *****************
 13848 ;; Defined at:
 13849 ;;		line 490 in file "efuse.c"
 13850 ;; Parameters:    Size  Location     Type
 13851 ;;		None
 13852 ;; Auto vars:     Size  Location     Type
 13853 ;;  temperature     2    9[BANK0 ] short 
 13854 ;;  adcTemp         2    6[BANK0 ] unsigned short 
 13855 ;;  i               1    8[BANK0 ] unsigned char 
 13856 ;; Return value:  Size  Location     Type
 13857 ;;                  2    0[BANK0 ] short 
 13858 ;; Registers used:
 13859 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
 13860 ;; Tracked objects:
 13861 ;;		On entry : 3/3C
 13862 ;;		On exit  : 3F/0
 13863 ;;		Unchanged: 0/0
 13864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13865 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13866 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13867 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13868 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13869 ;;Total ram usage:       11 bytes
 13870 ;; Hardware stack levels used: 1
 13871 ;; Hardware stack levels required when called: 5
 13872 ;; This function calls:
 13873 ;;		Nothing
 13874 ;; This function is called by:
 13875 ;;		_EFuse
 13876 ;; This function uses a non-reentrant model
 13877 ;;
 13878                           
 13879     0CDA                     _GetAmbientTemperature:	
 13880                           ;psect for function _GetAmbientTemperature
 13881                           
 13882                           
 13883                           ;efuse.c: 493:     uint16_t adcTemp = 0;
 13884                           
 13885                           ;incstack = 0
 13886                           ; Regs used in _GetAmbientTemperature: [wreg-fsr0h+status,2+status,0+pclath]
 13887     0CDA  0140               	movlb	0	; select bank0
 13888     0CDB  01D4               	clrf	GetAmbientTemperature@adcTemp
 13889     0CDC  01D5               	clrf	GetAmbientTemperature@adcTemp+1
 13890                           
 13891                           ;efuse.c: 494:     int16_t temperature = 0;
 13892     0CDD  01D7               	clrf	GetAmbientTemperature@temperature
 13893     0CDE  01D8               	clrf	GetAmbientTemperature@temperature+1
 13894                           
 13895                           ;efuse.c: 496:     adcTemp = adcTSense_prev;
 13896     0CDF  0821               	movf	_adcTSense_prev+1,w
 13897     0CE0  00D5               	movwf	GetAmbientTemperature@adcTemp+1
 13898     0CE1  0820               	movf	_adcTSense_prev,w
 13899     0CE2  00D4               	movwf	GetAmbientTemperature@adcTemp
 13900                           
 13901                           ;efuse.c: 497:     if (adcTSense_curr > adcTSense_prev)
 13902     0CE3  0875               	movf	_adcTSense_curr+1,w
 13903     0CE4  0221               	subwf	_adcTSense_prev+1,w
 13904     0CE5  1D03               	skipz
 13905     0CE6  2CE9               	goto	u2775
 13906     0CE7  0874               	movf	_adcTSense_curr,w
 13907     0CE8  0220               	subwf	_adcTSense_prev,w
 13908     0CE9                     u2775:
 13909     0CE9  1803               	skipnc
 13910     0CEA  2CEF               	goto	l1494
 13911                           
 13912                           ;efuse.c: 498:     {;efuse.c: 499:         adcTemp = adcTSense_curr;
 13913     0CEB  0875               	movf	_adcTSense_curr+1,w
 13914     0CEC  00D5               	movwf	GetAmbientTemperature@adcTemp+1
 13915     0CED  0874               	movf	_adcTSense_curr,w
 13916     0CEE  00D4               	movwf	GetAmbientTemperature@adcTemp
 13917     0CEF                     l1494:	
 13918                           ;efuse.c: 500:     }
 13919                           
 13920                           
 13921                           ;efuse.c: 502:     temperature = 125;
 13922     0CEF  307D               	movlw	125
 13923     0CF0  00D7               	movwf	GetAmbientTemperature@temperature
 13924     0CF1  3000               	movlw	0
 13925     0CF2  00D8               	movwf	GetAmbientTemperature@temperature+1
 13926                           
 13927                           ;efuse.c: 503:     i = 0;
 13928     0CF3  01D6               	clrf	GetAmbientTemperature@i
 13929     0CF4                     l4838:	
 13930                           ;efuse.c: 504:     while(temperature > -40)
 13931                           
 13932                           
 13933                           ;efuse.c: 504:     while(temperature > -40)
 13934     0CF4  0858               	movf	GetAmbientTemperature@temperature+1,w
 13935     0CF5  3A80               	xorlw	128
 13936     0CF6  00D0               	movwf	??_GetAmbientTemperature
 13937     0CF7  307F               	movlw	127
 13938     0CF8  0250               	subwf	??_GetAmbientTemperature,w
 13939     0CF9  1D03               	skipz
 13940     0CFA  2CFD               	goto	u2795
 13941     0CFB  30D9               	movlw	217
 13942     0CFC  0257               	subwf	GetAmbientTemperature@temperature,w
 13943     0CFD                     u2795:
 13944     0CFD  1C03               	btfss	3,0
 13945     0CFE  2D18               	goto	l4830
 13946                           
 13947                           ;efuse.c: 505:     {;efuse.c: 506:         if(adcTemp <= temperatureLUT[i])
 13948     0CFF  0140               	movlb	0	; select bank0
 13949     0D00  0856               	movf	GetAmbientTemperature@i,w
 13950     0D01  00D0               	movwf	??_GetAmbientTemperature
 13951     0D02  01D1               	clrf	??_GetAmbientTemperature+1
 13952     0D03  35D0               	lslf	??_GetAmbientTemperature,f
 13953     0D04  0DD1               	rlf	??_GetAmbientTemperature+1,f
 13954     0D05  304D               	movlw	low _temperatureLUT
 13955     0D06  0750               	addwf	??_GetAmbientTemperature,w
 13956     0D07  0084               	movwf	4
 13957     0D08  3002               	movlw	high _temperatureLUT
 13958     0D09  3D51               	addwfc	??_GetAmbientTemperature+1,w
 13959     0D0A  3880               	iorlw	128
 13960     0D0B  0085               	movwf	5
 13961     0D0C  3F00               	moviw [0]fsr0
 13962     0D0D  00D2               	movwf	??_GetAmbientTemperature+2
 13963     0D0E  3F01               	moviw [1]fsr0
 13964     0D0F  00D3               	movwf	??_GetAmbientTemperature+3
 13965     0D10  0855               	movf	GetAmbientTemperature@adcTemp+1,w
 13966     0D11  0253               	subwf	??_GetAmbientTemperature+3,w
 13967     0D12  1D03               	skipz
 13968     0D13  2D16               	goto	u2785
 13969     0D14  0854               	movf	GetAmbientTemperature@adcTemp,w
 13970     0D15  0252               	subwf	??_GetAmbientTemperature+2,w
 13971     0D16                     u2785:
 13972     0D16  1C03               	skipc
 13973     0D17  2D1E               	goto	l4836
 13974     0D18                     l4830:
 13975                           
 13976                           ;efuse.c: 507:         {;efuse.c: 508:             return temperature;
 13977     0D18  0140               	movlb	0	; select bank0
 13978     0D19  0858               	movf	GetAmbientTemperature@temperature+1,w
 13979     0D1A  00CF               	movwf	?_GetAmbientTemperature+1
 13980     0D1B  0857               	movf	GetAmbientTemperature@temperature,w
 13981     0D1C  00CE               	movwf	?_GetAmbientTemperature
 13982     0D1D  0008               	return
 13983     0D1E                     l4836:
 13984                           
 13985                           ;efuse.c: 511:         {;efuse.c: 512:             temperature = temperature + -1;
 13986     0D1E  0857               	movf	GetAmbientTemperature@temperature,w
 13987     0D1F  3EFF               	addlw	255
 13988     0D20  00D7               	movwf	GetAmbientTemperature@temperature
 13989     0D21  30FF               	movlw	255
 13990     0D22  3D58               	addwfc	GetAmbientTemperature@temperature+1,w
 13991     0D23  00D8               	movwf	GetAmbientTemperature@temperature+1
 13992                           
 13993                           ;efuse.c: 513:             i++;
 13994     0D24  3001               	movlw	1
 13995     0D25  00D0               	movwf	??_GetAmbientTemperature
 13996     0D26  0850               	movf	??_GetAmbientTemperature,w
 13997     0D27  07D6               	addwf	GetAmbientTemperature@i,f
 13998     0D28  2CF4               	goto	l4838
 13999     0D29                     __end_of_GetAmbientTemperature:
 14000                           
 14001                           	psect	text55
 14002     0D85                     __ptext55:	
 14003 ;; *************** function _CmdOutput *****************
 14004 ;; Defined at:
 14005 ;;		line 390 in file "efuse.c"
 14006 ;; Parameters:    Size  Location     Type
 14007 ;;  enable          1    wreg     unsigned char 
 14008 ;; Auto vars:     Size  Location     Type
 14009 ;;  enable          1    4[BANK0 ] unsigned char 
 14010 ;; Return value:  Size  Location     Type
 14011 ;;                  1    wreg      void 
 14012 ;; Registers used:
 14013 ;;		wreg, status,2, status,0, pclath, cstack
 14014 ;; Tracked objects:
 14015 ;;		On entry : 0/0
 14016 ;;		On exit  : 3F/0
 14017 ;;		Unchanged: 0/0
 14018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14020 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14021 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14022 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14023 ;;Total ram usage:        3 bytes
 14024 ;; Hardware stack levels used: 1
 14025 ;; Hardware stack levels required when called: 6
 14026 ;; This function calls:
 14027 ;;		_TMR1_StartTimer
 14028 ;;		_TMR1_StopTimer
 14029 ;;		_TMR1_WriteTimer
 14030 ;;		_TMR2_Initialize
 14031 ;;		_TMR2_Start
 14032 ;;		_TMR2_Stop
 14033 ;; This function is called by:
 14034 ;;		_processLIN
 14035 ;;		_main
 14036 ;;		_EFuseInit
 14037 ;;		_EFuse
 14038 ;; This function uses a non-reentrant model
 14039 ;;
 14040                           
 14041     0D85                     _CmdOutput:	
 14042                           ;psect for function _CmdOutput
 14043                           
 14044                           
 14045                           ;incstack = 0
 14046                           ; Regs used in _CmdOutput: [wreg+status,2+status,0+pclath+cstack]
 14047                           ;CmdOutput@enable stored from wreg
 14048     0D85  0140               	movlb	0	; select bank0
 14049     0D86  00D2               	movwf	CmdOutput@enable
 14050                           
 14051                           ;efuse.c: 390: void CmdOutput(uint8_t enable);efuse.c: 391: {;efuse.c: 392:     TMR2_Sto
      +                          p();
 14052     0D87  3188  2079  318D   	fcall	_TMR2_Stop
 14053                           
 14054                           ;efuse.c: 395:     CLC1POLbits.LC1G4POL = 0;
 14055     0D8A  017C               	movlb	60	; select bank60
 14056     0D8B  1191               	bcf	17,3	;volatile
 14057                           
 14058                           ;efuse.c: 396:     CLC1GLS3bits.LC1G4D3N = 0;
 14059     0D8C  1219               	bcf	25,4	;volatile
 14060                           
 14061                           ;efuse.c: 397:     CLC1GLS3bits.LC1G4D4T = 0;
 14062     0D8D  1399               	bcf	25,7	;volatile
 14063                           
 14064                           ;efuse.c: 401:     T1GCON = 0x80;
 14065     0D8E  3080               	movlw	128
 14066     0D8F  0144               	movlb	4	; select bank4
 14067     0D90  008F               	movwf	15	;volatile
 14068                           
 14069                           ;efuse.c: 404:     T1GATE = 0x0D;
 14070     0D91  300D               	movlw	13
 14071     0D92  0090               	movwf	16	;volatile
 14072                           
 14073                           ;efuse.c: 406:     CLC3CONbits.EN = 0;
 14074     0D93  017C               	movlb	60	; select bank60
 14075     0D94  13A4               	bcf	36,7	;volatile
 14076                           
 14077                           ;efuse.c: 409:     CLC1POLbits.LC1G2POL = 1;
 14078     0D95  1491               	bsf	17,1	;volatile
 14079                           
 14080                           ;efuse.c: 410:     CLC1POLbits.LC1G2POL = 0;
 14081     0D96  1091               	bcf	17,1	;volatile
 14082                           
 14083                           ;efuse.c: 412:     _delay((unsigned long)((1)*(32000000/4000000.0)));
 14084     0D97  3200               	nop2	;2 cycle nop
 14085     0D98  3200               	nop2	;2 cycle nop
 14086     0D99  3200               	nop2	;2 cycle nop
 14087     0D9A  3200               	nop2	;2 cycle nop
 14088                           
 14089                           ;efuse.c: 415:     CLC2POLbits.LC2G2POL = 1;
 14090     0D9B  017C               	movlb	60	; select bank60
 14091     0D9C  149B               	bsf	27,1	;volatile
 14092                           
 14093                           ;efuse.c: 416:     CLC2POLbits.LC2G2POL = 0;
 14094     0D9D  109B               	bcf	27,1	;volatile
 14095                           
 14096                           ;efuse.c: 418:     outputState = OUTPUT_OFF;
 14097     0D9E  0140               	movlb	0	; select bank0
 14098     0D9F  01AF               	clrf	_outputState
 14099                           
 14100                           ;efuse.c: 421:     if (enable)
 14101     0DA0  0852               	movf	CmdOutput@enable,w
 14102     0DA1  1903               	btfsc	3,2
 14103     0DA2  0008               	return
 14104                           
 14105                           ;efuse.c: 422:     {;efuse.c: 423:         overCurrentFault = NO_OVER_CURRENT_FAULT;
 14106     0DA3  01AE               	clrf	_overCurrentFault
 14107                           
 14108                           ;efuse.c: 424:         uvloFault = NO_UVLO_FAULT;
 14109     0DA4  01AD               	clrf	_uvloFault
 14110                           
 14111                           ;efuse.c: 425:         overTempFault = NO_TEMP_FAULT;
 14112     0DA5  01AC               	clrf	_overTempFault
 14113     0DA6  1794               	bsf	20,7	;volatile
 14114                           
 14115                           ;efuse.c: 430:         CLC1CONbits.LC1EN = 1;
 14116     0DA7  017C               	movlb	60	; select bank60
 14117     0DA8  1790               	bsf	16,7	;volatile
 14118                           
 14119                           ;efuse.c: 431:         CLC1POLbits.LC1G4POL = 0;
 14120     0DA9  1191               	bcf	17,3	;volatile
 14121                           
 14122                           ;efuse.c: 432:         CLC1POLbits.LC1G3POL = 0;
 14123     0DAA  1111               	bcf	17,2	;volatile
 14124                           
 14125                           ;efuse.c: 433:         CLC1POLbits.LC1G3POL = 1;
 14126     0DAB  1511               	bsf	17,2	;volatile
 14127                           
 14128                           ;efuse.c: 434:         CLC1POLbits.LC1G3POL = 0;
 14129     0DAC  1111               	bcf	17,2	;volatile
 14130                           
 14131                           ;efuse.c: 435:         CLC1POLbits.LC1POL = 1;
 14132     0DAD  1791               	bsf	17,7	;volatile
 14133                           
 14134                           ;efuse.c: 438:         CLC2POLbits.LC2G4POL = 0;
 14135     0DAE  119B               	bcf	27,3	;volatile
 14136                           
 14137                           ;efuse.c: 439:         CLC2POLbits.LC2G3POL = 0;
 14138     0DAF  111B               	bcf	27,2	;volatile
 14139                           
 14140                           ;efuse.c: 440:         CLC2POLbits.LC2G3POL = 1;
 14141     0DB0  151B               	bsf	27,2	;volatile
 14142                           
 14143                           ;efuse.c: 441:         CLC2POLbits.LC2G3POL = 0;
 14144     0DB1  111B               	bcf	27,2	;volatile
 14145                           
 14146                           ;efuse.c: 443:         if(triggerType == TRIGGER_TIMER_OVERFLOW)
 14147     0DB2  0140               	movlb	0	; select bank0
 14148     0DB3  0331               	decf	_triggerType,w
 14149     0DB4  1D03               	btfss	3,2
 14150     0DB5  2DC7               	goto	l1485
 14151                           
 14152                           ;efuse.c: 444:         {;efuse.c: 447:             CLC1POLbits.LC1G4POL = 1;
 14153     0DB6  017C               	movlb	60	; select bank60
 14154     0DB7  1591               	bsf	17,3	;volatile
 14155                           
 14156                           ;efuse.c: 448:             CLC1GLS3bits.LC1G4D3N = 1;
 14157     0DB8  1619               	bsf	25,4	;volatile
 14158                           
 14159                           ;efuse.c: 449:             CLC1GLS3bits.LC1G4D4T = 1;
 14160     0DB9  1799               	bsf	25,7	;volatile
 14161                           
 14162                           ;efuse.c: 452:             T1GCON = 0xC0;
 14163     0DBA  30C0               	movlw	192
 14164     0DBB  0144               	movlb	4	; select bank4
 14165     0DBC  008F               	movwf	15	;volatile
 14166                           
 14167                           ;efuse.c: 455:             T1GATE = 0x0B;
 14168     0DBD  300B               	movlw	11
 14169     0DBE  0090               	movwf	16	;volatile
 14170                           
 14171                           ;efuse.c: 457:             TMR2_Initialize();
 14172     0DBF  3189  216B  318D   	fcall	_TMR2_Initialize
 14173                           
 14174                           ;efuse.c: 458:             TMR2_Start();
 14175     0DC2  3180  2002  318D   	fcall	_TMR2_Start
 14176                           
 14177                           ;efuse.c: 460:             CLC3CONbits.EN = 1;
 14178     0DC5  017C               	movlb	60	; select bank60
 14179     0DC6  17A4               	bsf	36,7	;volatile
 14180     0DC7                     l1485:	
 14181                           ;efuse.c: 461:         }
 14182                           
 14183                           
 14184                           ;efuse.c: 464:         TMR1_StopTimer();
 14185     0DC7  3188  2076  318D   	fcall	_TMR1_StopTimer
 14186                           
 14187                           ;efuse.c: 465:         TMR1_WriteTimer( 0xffff - reduced_drive_time );
 14188     0DCA  0140               	movlb	0	; select bank0
 14189     0DCB  0830               	movf	_reduced_drive_time,w
 14190     0DCC  00D0               	movwf	??_CmdOutput
 14191     0DCD  01D1               	clrf	??_CmdOutput+1
 14192     0DCE  0950               	comf	??_CmdOutput,w
 14193     0DCF  00CE               	movwf	TMR1_WriteTimer@timerVal
 14194     0DD0  0951               	comf	??_CmdOutput+1,w
 14195     0DD1  00CF               	movwf	TMR1_WriteTimer@timerVal+1
 14196     0DD2  318A  220C  318D   	fcall	_TMR1_WriteTimer
 14197                           
 14198                           ;efuse.c: 466:         PIR4bits.TMR1IF = 0;
 14199     0DD5  014E               	movlb	14	; select bank14
 14200     0DD6  1010               	bcf	16,0	;volatile
 14201                           
 14202                           ;efuse.c: 467:         TMR1_StartTimer();
 14203     0DD7  3188  2073         	fcall	_TMR1_StartTimer
 14204                           
 14205                           ;efuse.c: 469:         iSenseOffset = adcISense_curr;
 14206     0DD9  0140               	movlb	0	; select bank0
 14207     0DDA  083F               	movf	_adcISense_curr+1,w
 14208     0DDB  00BB               	movwf	_iSenseOffset+1
 14209     0DDC  083E               	movf	_adcISense_curr,w
 14210     0DDD  00BA               	movwf	_iSenseOffset
 14211                           
 14212                           ;efuse.c: 470:         outputState = OUTPUT_ON;
 14213     0DDE  01AF               	clrf	_outputState
 14214     0DDF  0AAF               	incf	_outputState,f
 14215     0DE0  1394               	bcf	20,7	;volatile
 14216     0DE1  0008               	return
 14217     0DE2                     __end_of_CmdOutput:
 14218                           
 14219                           	psect	text56
 14220     0879                     __ptext56:	
 14221 ;; *************** function _TMR2_Stop *****************
 14222 ;; Defined at:
 14223 ;;		line 111 in file "mcc_generated_files/tmr2.c"
 14224 ;; Parameters:    Size  Location     Type
 14225 ;;		None
 14226 ;; Auto vars:     Size  Location     Type
 14227 ;;		None
 14228 ;; Return value:  Size  Location     Type
 14229 ;;                  1    wreg      void 
 14230 ;; Registers used:
 14231 ;;		None
 14232 ;; Tracked objects:
 14233 ;;		On entry : 3F/0
 14234 ;;		On exit  : 3F/5
 14235 ;;		Unchanged: 0/0
 14236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14240 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14241 ;;Total ram usage:        0 bytes
 14242 ;; Hardware stack levels used: 1
 14243 ;; Hardware stack levels required when called: 5
 14244 ;; This function calls:
 14245 ;;		Nothing
 14246 ;; This function is called by:
 14247 ;;		_CmdOutput
 14248 ;; This function uses a non-reentrant model
 14249 ;;
 14250                           
 14251     0879                     _TMR2_Stop:	
 14252                           ;psect for function _TMR2_Stop
 14253                           
 14254                           
 14255                           ;mcc_generated_files/tmr2.c: 114:     T2CONbits.TMR2ON = 0;
 14256                           
 14257                           ;incstack = 0
 14258                           ; Regs used in _TMR2_Stop: []
 14259     0879  0145               	movlb	5	; select bank5
 14260     087A  138E               	bcf	14,7	;volatile
 14261     087B  0008               	return
 14262     087C                     __end_of_TMR2_Stop:
 14263                           
 14264                           	psect	text57
 14265     0002                     __ptext57:	
 14266 ;; *************** function _TMR2_Start *****************
 14267 ;; Defined at:
 14268 ;;		line 100 in file "mcc_generated_files/tmr2.c"
 14269 ;; Parameters:    Size  Location     Type
 14270 ;;		None
 14271 ;; Auto vars:     Size  Location     Type
 14272 ;;		None
 14273 ;; Return value:  Size  Location     Type
 14274 ;;                  1    wreg      void 
 14275 ;; Registers used:
 14276 ;;		None
 14277 ;; Tracked objects:
 14278 ;;		On entry : 3F/5
 14279 ;;		On exit  : 3F/5
 14280 ;;		Unchanged: 0/0
 14281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14285 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14286 ;;Total ram usage:        0 bytes
 14287 ;; Hardware stack levels used: 1
 14288 ;; Hardware stack levels required when called: 5
 14289 ;; This function calls:
 14290 ;;		Nothing
 14291 ;; This function is called by:
 14292 ;;		_CmdOutput
 14293 ;; This function uses a non-reentrant model
 14294 ;;
 14295                           
 14296     0002                     _TMR2_Start:	
 14297                           ;psect for function _TMR2_Start
 14298                           
 14299                           
 14300                           ;mcc_generated_files/tmr2.c: 103:     T2CONbits.TMR2ON = 1;
 14301                           
 14302                           ;incstack = 0
 14303                           ; Regs used in _TMR2_Start: []
 14304     0002  178E               	bsf	14,7	;volatile
 14305     0003  0008               	return
 14306     0004                     __end_of_TMR2_Start:
 14307                           
 14308                           	psect	text58
 14309     096B                     __ptext58:	
 14310 ;; *************** function _TMR2_Initialize *****************
 14311 ;; Defined at:
 14312 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 14313 ;; Parameters:    Size  Location     Type
 14314 ;;		None
 14315 ;; Auto vars:     Size  Location     Type
 14316 ;;		None
 14317 ;; Return value:  Size  Location     Type
 14318 ;;                  1    wreg      void 
 14319 ;; Registers used:
 14320 ;;		wreg, status,2
 14321 ;; Tracked objects:
 14322 ;;		On entry : 35/E
 14323 ;;		On exit  : 3F/5
 14324 ;;		Unchanged: 0/0
 14325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14329 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14330 ;;Total ram usage:        0 bytes
 14331 ;; Hardware stack levels used: 1
 14332 ;; Hardware stack levels required when called: 5
 14333 ;; This function calls:
 14334 ;;		Nothing
 14335 ;; This function is called by:
 14336 ;;		_SYSTEM_Initialize
 14337 ;;		_CmdOutput
 14338 ;; This function uses a non-reentrant model
 14339 ;;
 14340                           
 14341     096B                     _TMR2_Initialize:	
 14342                           ;psect for function _TMR2_Initialize
 14343                           
 14344                           
 14345                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x0D;
 14346                           
 14347                           ;incstack = 0
 14348                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 14349     096B  300D               	movlw	13
 14350     096C  0145               	movlb	5	; select bank5
 14351     096D  0090               	movwf	16	;volatile
 14352                           
 14353                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 14354     096E  018F               	clrf	15	;volatile
 14355                           
 14356                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 14357     096F  0191               	clrf	17	;volatile
 14358                           
 14359                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x27;
 14360     0970  3027               	movlw	39
 14361     0971  008D               	movwf	13	;volatile
 14362                           
 14363                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 14364     0972  018C               	clrf	12	;volatile
 14365                           
 14366                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 14367     0973  014E               	movlb	14	; select bank14
 14368     0974  1090               	bcf	16,1	;volatile
 14369                           
 14370                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xB0;
 14371     0975  30B0               	movlw	176
 14372     0976  0145               	movlb	5	; select bank5
 14373     0977  008E               	movwf	14	;volatile
 14374     0978  0008               	return
 14375     0979                     __end_of_TMR2_Initialize:
 14376                           
 14377                           	psect	text59
 14378     0A0C                     __ptext59:	
 14379 ;; *************** function _TMR1_WriteTimer *****************
 14380 ;; Defined at:
 14381 ;;		line 120 in file "mcc_generated_files/tmr1.c"
 14382 ;; Parameters:    Size  Location     Type
 14383 ;;  timerVal        2    0[BANK0 ] unsigned short 
 14384 ;; Auto vars:     Size  Location     Type
 14385 ;;		None
 14386 ;; Return value:  Size  Location     Type
 14387 ;;                  1    wreg      void 
 14388 ;; Registers used:
 14389 ;;		wreg
 14390 ;; Tracked objects:
 14391 ;;		On entry : 3F/0
 14392 ;;		On exit  : 3F/4
 14393 ;;		Unchanged: 0/0
 14394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14395 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14398 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14399 ;;Total ram usage:        2 bytes
 14400 ;; Hardware stack levels used: 1
 14401 ;; Hardware stack levels required when called: 5
 14402 ;; This function calls:
 14403 ;;		Nothing
 14404 ;; This function is called by:
 14405 ;;		_CmdOutput
 14406 ;; This function uses a non-reentrant model
 14407 ;;
 14408                           
 14409     0A0C                     _TMR1_WriteTimer:	
 14410                           ;psect for function _TMR1_WriteTimer
 14411                           
 14412                           
 14413                           ;mcc_generated_files/tmr1.c: 120: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 121: {;mcc_generated_files/tmr1.c: 122:     if (T1CONbits.nT1SYNC == 1)
 14414                           
 14415                           ;incstack = 0
 14416                           ; Regs used in _TMR1_WriteTimer: [wreg]
 14417     0A0C  0144               	movlb	4	; select bank4
 14418     0A0D  1D0E               	btfss	14,2	;volatile
 14419     0A0E  2A1A               	goto	l4198
 14420                           
 14421                           ;mcc_generated_files/tmr1.c: 123:     {;mcc_generated_files/tmr1.c: 125:         T1CONbi
      +                          ts.TMR1ON = 0;
 14422     0A0F  100E               	bcf	14,0	;volatile
 14423                           
 14424                           ;mcc_generated_files/tmr1.c: 128:         TMR1H = (uint8_t)(timerVal >> 8);
 14425     0A10  0140               	movlb	0	; select bank0
 14426     0A11  084F               	movf	TMR1_WriteTimer@timerVal+1,w
 14427     0A12  0144               	movlb	4	; select bank4
 14428     0A13  008D               	movwf	13	;volatile
 14429                           
 14430                           ;mcc_generated_files/tmr1.c: 129:         TMR1L = (uint8_t)timerVal;
 14431     0A14  0140               	movlb	0	; select bank0
 14432     0A15  084E               	movf	TMR1_WriteTimer@timerVal,w
 14433     0A16  0144               	movlb	4	; select bank4
 14434     0A17  008C               	movwf	12	;volatile
 14435                           
 14436                           ;mcc_generated_files/tmr1.c: 132:         T1CONbits.TMR1ON =1;
 14437     0A18  140E               	bsf	14,0	;volatile
 14438                           
 14439                           ;mcc_generated_files/tmr1.c: 133:     }
 14440     0A19  0008               	return
 14441     0A1A                     l4198:
 14442                           
 14443                           ;mcc_generated_files/tmr1.c: 135:     {;mcc_generated_files/tmr1.c: 137:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
 14444     0A1A  0140               	movlb	0	; select bank0
 14445     0A1B  084F               	movf	TMR1_WriteTimer@timerVal+1,w
 14446     0A1C  0144               	movlb	4	; select bank4
 14447     0A1D  008D               	movwf	13	;volatile
 14448                           
 14449                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = (uint8_t)timerVal;
 14450     0A1E  0140               	movlb	0	; select bank0
 14451     0A1F  084E               	movf	TMR1_WriteTimer@timerVal,w
 14452     0A20  0144               	movlb	4	; select bank4
 14453     0A21  008C               	movwf	12	;volatile
 14454     0A22  0008               	return
 14455     0A23                     __end_of_TMR1_WriteTimer:
 14456                           
 14457                           	psect	text60
 14458     0876                     __ptext60:	
 14459 ;; *************** function _TMR1_StopTimer *****************
 14460 ;; Defined at:
 14461 ;;		line 98 in file "mcc_generated_files/tmr1.c"
 14462 ;; Parameters:    Size  Location     Type
 14463 ;;		None
 14464 ;; Auto vars:     Size  Location     Type
 14465 ;;		None
 14466 ;; Return value:  Size  Location     Type
 14467 ;;                  1    wreg      void 
 14468 ;; Registers used:
 14469 ;;		None
 14470 ;; Tracked objects:
 14471 ;;		On entry : 3/0
 14472 ;;		On exit  : 3F/4
 14473 ;;		Unchanged: 0/0
 14474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14479 ;;Total ram usage:        0 bytes
 14480 ;; Hardware stack levels used: 1
 14481 ;; Hardware stack levels required when called: 5
 14482 ;; This function calls:
 14483 ;;		Nothing
 14484 ;; This function is called by:
 14485 ;;		_CmdOutput
 14486 ;; This function uses a non-reentrant model
 14487 ;;
 14488                           
 14489     0876                     _TMR1_StopTimer:	
 14490                           ;psect for function _TMR1_StopTimer
 14491                           
 14492                           
 14493                           ;mcc_generated_files/tmr1.c: 101:     T1CONbits.TMR1ON = 0;
 14494                           
 14495                           ;incstack = 0
 14496                           ; Regs used in _TMR1_StopTimer: []
 14497     0876  0144               	movlb	4	; select bank4
 14498     0877  100E               	bcf	14,0	;volatile
 14499     0878  0008               	return
 14500     0879                     __end_of_TMR1_StopTimer:
 14501                           
 14502                           	psect	text61
 14503     0873                     __ptext61:	
 14504 ;; *************** function _TMR1_StartTimer *****************
 14505 ;; Defined at:
 14506 ;;		line 92 in file "mcc_generated_files/tmr1.c"
 14507 ;; Parameters:    Size  Location     Type
 14508 ;;		None
 14509 ;; Auto vars:     Size  Location     Type
 14510 ;;		None
 14511 ;; Return value:  Size  Location     Type
 14512 ;;                  1    wreg      void 
 14513 ;; Registers used:
 14514 ;;		None
 14515 ;; Tracked objects:
 14516 ;;		On entry : 3F/E
 14517 ;;		On exit  : 3F/4
 14518 ;;		Unchanged: 0/0
 14519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14523 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14524 ;;Total ram usage:        0 bytes
 14525 ;; Hardware stack levels used: 1
 14526 ;; Hardware stack levels required when called: 5
 14527 ;; This function calls:
 14528 ;;		Nothing
 14529 ;; This function is called by:
 14530 ;;		_CmdOutput
 14531 ;; This function uses a non-reentrant model
 14532 ;;
 14533                           
 14534     0873                     _TMR1_StartTimer:	
 14535                           ;psect for function _TMR1_StartTimer
 14536                           
 14537                           
 14538                           ;mcc_generated_files/tmr1.c: 95:     T1CONbits.TMR1ON = 1;
 14539                           
 14540                           ;incstack = 0
 14541                           ; Regs used in _TMR1_StartTimer: []
 14542     0873  0144               	movlb	4	; select bank4
 14543     0874  140E               	bsf	14,0	;volatile
 14544     0875  0008               	return
 14545     0876                     __end_of_TMR1_StartTimer:
 14546                           
 14547                           	psect	intentry
 14548     0004                     __pintentry:	
 14549 ;; *************** function _INTERRUPT_InterruptManager *****************
 14550 ;; Defined at:
 14551 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 14552 ;; Parameters:    Size  Location     Type
 14553 ;;		None
 14554 ;; Auto vars:     Size  Location     Type
 14555 ;;		None
 14556 ;; Return value:  Size  Location     Type
 14557 ;;                  1    wreg      void 
 14558 ;; Registers used:
 14559 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14560 ;; Tracked objects:
 14561 ;;		On entry : 0/0
 14562 ;;		On exit  : 0/0
 14563 ;;		Unchanged: 0/0
 14564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14568 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14569 ;;Total ram usage:        0 bytes
 14570 ;; Hardware stack levels used: 1
 14571 ;; Hardware stack levels required when called: 4
 14572 ;; This function calls:
 14573 ;;		NULL
 14574 ;;		_CLC2_ISR
 14575 ;;		_EUSART1_Receive_ISR
 14576 ;;		_EUSART1_Transmit_ISR
 14577 ;;		_TMR0_ISR
 14578 ;; This function is called by:
 14579 ;;		Interrupt level 1
 14580 ;; This function uses a non-reentrant model
 14581 ;;
 14582                           
 14583     0004                     _INTERRUPT_InterruptManager:
 14584                           
 14585                           ;incstack = 0
 14586     0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 14587                           
 14588                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 14589     0005  3180               	pagesel	$
 14590                           
 14591                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
 14592     0006  014E               	movlb	14	; select bank14
 14593     0007  1A96               	btfsc	22,5	;volatile
 14594     0008  1E8C               	btfss	12,5	;volatile
 14595     0009  280E               	goto	i1l1062
 14596                           
 14597                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
 14598     000A  318A  223A  3180   	fcall	_TMR0_ISR
 14599                           
 14600                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 14601     000D  282A               	goto	i1l1072
 14602     000E                     i1l1062:	
 14603                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
 14604                           
 14605     000E  1F0B               	btfss	11,6	;volatile
 14606     000F  282A               	goto	i1l1072
 14607                           
 14608                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE5bits.CLC2IE == 1 && PIR5bits.CLC2IF == 1)
 14609     0010  1A9B               	btfsc	27,5	;volatile
 14610     0011  1E91               	btfss	17,5	;volatile
 14611     0012  2817               	goto	i1l1065
 14612                           
 14613                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             CLC2_ISR();
 14614     0013  3188  2060  3180   	fcall	_CLC2_ISR
 14615                           
 14616                           ;mcc_generated_files/interrupt_manager.c: 64:         }
 14617     0016  282A               	goto	i1l1072
 14618     0017                     i1l1065:	
 14619                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE3bits.TX1IE == 1 && PIR
      +                          3bits.TX1IF == 1)
 14620                           
 14621     0017  1A19               	btfsc	25,4	;volatile
 14622     0018  1E0F               	btfss	15,4	;volatile
 14623     0019  2821               	goto	i1l1067
 14624                           
 14625                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             EUSART1_TxDefaultInterruptHandler();
 14626     001A  0142               	movlb	2	; select bank2
 14627     001B  086B               	movf	(_EUSART1_TxDefaultInterruptHandler+1)^(0+256),w
 14628     001C  008A               	movwf	10
 14629     001D  086A               	movf	_EUSART1_TxDefaultInterruptHandler^(0+256),w
 14630     001E  000A               	callw
 14631     001F  3180               	pagesel	$
 14632                           
 14633                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 14634     0020  282A               	goto	i1l1072
 14635     0021                     i1l1067:	
 14636                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE3bits.RC1IE == 1 && PIR
      +                          3bits.RC1IF == 1)
 14637                           
 14638     0021  1A99               	btfsc	25,5	;volatile
 14639     0022  1E8F               	btfss	15,5	;volatile
 14640     0023  282A               	goto	i1l1072
 14641                           
 14642                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             EUSART1_RxDefaultInterruptHandler();
 14643     0024  0142               	movlb	2	; select bank2
 14644     0025  0869               	movf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+256),w
 14645     0026  008A               	movwf	10
 14646     0027  0868               	movf	_EUSART1_RxDefaultInterruptHandler^(0+256),w
 14647     0028  000A               	callw
 14648     0029  3180               	pagesel	$
 14649     002A                     i1l1072:	
 14650                           ;mcc_generated_files/interrupt_manager.c: 77:     }
 14651                           
 14652                           ;mcc_generated_files/interrupt_manager.c: 72:         }
 14653                           
 14654     002A  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 14655     002B  0009               	retfie
 14656     002C                     __end_of_INTERRUPT_InterruptManager:
 14657                           
 14658                           	psect	text63
 14659     0A3A                     __ptext63:	
 14660 ;; *************** function _TMR0_ISR *****************
 14661 ;; Defined at:
 14662 ;;		line 136 in file "mcc_generated_files/tmr0.c"
 14663 ;; Parameters:    Size  Location     Type
 14664 ;;		None
 14665 ;; Auto vars:     Size  Location     Type
 14666 ;;		None
 14667 ;; Return value:  Size  Location     Type
 14668 ;;                  1    wreg      void 
 14669 ;; Registers used:
 14670 ;;		wreg, status,2, status,0, pclath, cstack
 14671 ;; Tracked objects:
 14672 ;;		On entry : 3F/E
 14673 ;;		On exit  : 3F/1
 14674 ;;		Unchanged: 0/0
 14675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14679 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14680 ;;Total ram usage:        0 bytes
 14681 ;; Hardware stack levels used: 1
 14682 ;; Hardware stack levels required when called: 3
 14683 ;; This function calls:
 14684 ;;		NULL
 14685 ;;		_LIN_timerHandler
 14686 ;;		_ProcessAnalogInputs
 14687 ;;		_TMR0_DefaultInterruptHandler
 14688 ;; This function is called by:
 14689 ;;		_INTERRUPT_InterruptManager
 14690 ;; This function uses a non-reentrant model
 14691 ;;
 14692                           
 14693     0A3A                     _TMR0_ISR:	
 14694                           ;psect for function _TMR0_ISR
 14695                           
 14696                           
 14697                           ;mcc_generated_files/tmr0.c: 139:     PIR0bits.TMR0IF = 0;
 14698                           
 14699                           ;incstack = 0
 14700                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 14701     0A3A  128C               	bcf	12,5	;volatile
 14702                           
 14703                           ;mcc_generated_files/tmr0.c: 141:     TMR0H = timer0ReloadVal16bit >> 8;
 14704     0A3B  0871               	movf	_timer0ReloadVal16bit+1,w	;volatile
 14705     0A3C  014B               	movlb	11	; select bank11
 14706     0A3D  009D               	movwf	29	;volatile
 14707                           
 14708                           ;mcc_generated_files/tmr0.c: 142:     TMR0L = (uint8_t) timer0ReloadVal16bit;
 14709     0A3E  0870               	movf	_timer0ReloadVal16bit,w	;volatile
 14710     0A3F  009C               	movwf	28	;volatile
 14711                           
 14712                           ;mcc_generated_files/tmr0.c: 144:     if(TMR0_InterruptHandler)
 14713     0A40  0141               	movlb	1	; select bank1
 14714     0A41  086B               	movf	_TMR0_InterruptHandler^(0+128),w
 14715     0A42  046C               	iorwf	(_TMR0_InterruptHandler+1)^(0+128),w
 14716     0A43  1903               	btfsc	3,2
 14717     0A44  2A4A               	goto	i1l854
 14718                           
 14719                           ;mcc_generated_files/tmr0.c: 145:     {;mcc_generated_files/tmr0.c: 146:         TMR0_In
      +                          terruptHandler();
 14720     0A45  086C               	movf	(_TMR0_InterruptHandler+1)^(0+128),w
 14721     0A46  008A               	movwf	10
 14722     0A47  086B               	movf	_TMR0_InterruptHandler^(0+128),w
 14723     0A48  000A               	callw
 14724     0A49  318A               	pagesel	$
 14725     0A4A                     i1l854:	
 14726                           ;mcc_generated_files/tmr0.c: 147:     }
 14727                           
 14728                           
 14729                           ;mcc_generated_files/tmr0.c: 150:     ProcessAnalogInputs();
 14730     0A4A  3185  2593         	fcall	_ProcessAnalogInputs
 14731                           
 14732                           ;mcc_generated_files/tmr0.c: 151:     ticks_1ms++;
 14733     0A4C  3001               	movlw	1
 14734     0A4D  0141               	movlb	1	; select bank1
 14735     0A4E  07B6               	addwf	_ticks_1ms^(0+128),f
 14736     0A4F  3000               	movlw	0
 14737     0A50  3DB7               	addwfc	(_ticks_1ms+1)^(0+128),f
 14738     0A51  0008               	return
 14739     0A52                     __end_of_TMR0_ISR:
 14740                           
 14741                           	psect	text64
 14742     092A                     __ptext64:	
 14743 ;; *************** function _LIN_timerHandler *****************
 14744 ;; Defined at:
 14745 ;;		line 290 in file "mcc_generated_files/LINDrivers/lin_slave.c"
 14746 ;; Parameters:    Size  Location     Type
 14747 ;;		None
 14748 ;; Auto vars:     Size  Location     Type
 14749 ;;		None
 14750 ;; Return value:  Size  Location     Type
 14751 ;;                  1    wreg      void 
 14752 ;; Registers used:
 14753 ;;		wreg, status,2, status,0, pclath, cstack
 14754 ;; Tracked objects:
 14755 ;;		On entry : 3F/1
 14756 ;;		On exit  : 3F/0
 14757 ;;		Unchanged: 0/0
 14758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14761 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14762 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14763 ;;Total ram usage:        1 bytes
 14764 ;; Hardware stack levels used: 1
 14765 ;; Hardware stack levels required when called: 1
 14766 ;; This function calls:
 14767 ;;		i1_LIN_stopTimer
 14768 ;; This function is called by:
 14769 ;;		_LIN_setTimerHandler
 14770 ;;		_TMR0_ISR
 14771 ;; This function uses a non-reentrant model
 14772 ;;
 14773                           
 14774     092A                     _LIN_timerHandler:	
 14775                           ;psect for function _LIN_timerHandler
 14776                           
 14777                           
 14778                           ;mcc_generated_files/LINDrivers/lin_slave.c: 293:     if (++CountCallBack >= LIN_timeout
      +                          )
 14779                           
 14780                           ;incstack = 0
 14781                           ; Regs used in _LIN_timerHandler: [wreg+status,2+status,0+pclath+cstack]
 14782     092A  3001               	movlw	1
 14783     092B  00F6               	movwf	??_LIN_timerHandler
 14784     092C  0876               	movf	??_LIN_timerHandler,w
 14785     092D  0140               	movlb	0	; select bank0
 14786     092E  07A9               	addwf	_CountCallBack,f	;volatile
 14787     092F  0869               	movf	_LIN_timeout,w
 14788     0930  0229               	subwf	_CountCallBack,w	;volatile
 14789     0931  1C03               	skipc
 14790     0932  0008               	return
 14791                           
 14792                           ;mcc_generated_files/LINDrivers/lin_slave.c: 294:     {;mcc_generated_files/LINDrivers/l
      +                          in_slave.c: 296:         LIN_stopTimer();
 14793     0933  3188  2080         	fcall	i1_LIN_stopTimer
 14794     0935  0008               	return
 14795     0936                     __end_of_LIN_timerHandler:
 14796                           
 14797                           	psect	text65
 14798     085F                     __ptext65:	
 14799 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 14800 ;; Defined at:
 14801 ;;		line 159 in file "mcc_generated_files/tmr0.c"
 14802 ;; Parameters:    Size  Location     Type
 14803 ;;		None
 14804 ;; Auto vars:     Size  Location     Type
 14805 ;;		None
 14806 ;; Return value:  Size  Location     Type
 14807 ;;                  1    wreg      void 
 14808 ;; Registers used:
 14809 ;;		None
 14810 ;; Tracked objects:
 14811 ;;		On entry : 3F/1
 14812 ;;		On exit  : 3F/1
 14813 ;;		Unchanged: 3F/0
 14814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14818 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14819 ;;Total ram usage:        0 bytes
 14820 ;; Hardware stack levels used: 1
 14821 ;; This function calls:
 14822 ;;		Nothing
 14823 ;; This function is called by:
 14824 ;;		_TMR0_Initialize
 14825 ;;		_TMR0_ISR
 14826 ;; This function uses a non-reentrant model
 14827 ;;
 14828                           
 14829     085F                     _TMR0_DefaultInterruptHandler:	
 14830                           ;psect for function _TMR0_DefaultInterruptHandler
 14831                           
 14832                           
 14833                           ;incstack = 0
 14834                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 14835     085F  0008               	return
 14836     0860                     __end_of_TMR0_DefaultInterruptHandler:
 14837                           
 14838                           	psect	text66
 14839     0593                     __ptext66:	
 14840 ;; *************** function _ProcessAnalogInputs *****************
 14841 ;; Defined at:
 14842 ;;		line 326 in file "efuse.c"
 14843 ;; Parameters:    Size  Location     Type
 14844 ;;		None
 14845 ;; Auto vars:     Size  Location     Type
 14846 ;;		None
 14847 ;; Return value:  Size  Location     Type
 14848 ;;                  1    wreg      void 
 14849 ;; Registers used:
 14850 ;;		wreg, status,2, status,0, pclath, cstack
 14851 ;; Tracked objects:
 14852 ;;		On entry : 0/1
 14853 ;;		On exit  : 3E/0
 14854 ;;		Unchanged: 0/0
 14855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14859 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14860 ;;Total ram usage:        0 bytes
 14861 ;; Hardware stack levels used: 1
 14862 ;; Hardware stack levels required when called: 2
 14863 ;; This function calls:
 14864 ;;		_ADC_GetConversion
 14865 ;;		_ADC_SelectChannel
 14866 ;;		i1_CmdOutput
 14867 ;; This function is called by:
 14868 ;;		_TMR0_ISR
 14869 ;; This function uses a non-reentrant model
 14870 ;;
 14871                           
 14872     0593                     _ProcessAnalogInputs:	
 14873                           ;psect for function _ProcessAnalogInputs
 14874                           
 14875                           
 14876                           ;efuse.c: 339:     adcISense_prev = adcISense_curr;
 14877                           
 14878                           ;incstack = 0
 14879                           ; Regs used in _ProcessAnalogInputs: [wreg+status,2+status,0+pclath+cstack]
 14880     0593  0140               	movlb	0	; select bank0
 14881     0594  083F               	movf	_adcISense_curr+1,w
 14882     0595  0141               	movlb	1	; select bank1
 14883     0596  00AD               	movwf	(_adcISense_prev+1)^(0+128)
 14884     0597  0140               	movlb	0	; select bank0
 14885     0598  083E               	movf	_adcISense_curr,w
 14886     0599  0141               	movlb	1	; select bank1
 14887     059A  00AC               	movwf	_adcISense_prev^(0+128)
 14888                           
 14889                           ;efuse.c: 340:     adcISense_curr = ADC_GetConversion(ISENSE_ANB4);
 14890     059B  300C               	movlw	12
 14891     059C  318A  2252  3185   	fcall	_ADC_GetConversion
 14892     059F  0877               	movf	?_ADC_GetConversion+1,w
 14893     05A0  0140               	movlb	0	; select bank0
 14894     05A1  00BF               	movwf	_adcISense_curr+1
 14895     05A2  0876               	movf	?_ADC_GetConversion,w
 14896     05A3  00BE               	movwf	_adcISense_curr
 14897                           
 14898                           ;efuse.c: 341:     ADC_SelectChannel(channel_AVSS);
 14899     05A4  303B               	movlw	59
 14900     05A5  3189  2136  3185   	fcall	_ADC_SelectChannel
 14901                           
 14902                           ;efuse.c: 342:     _delay((unsigned long)((5)*(32000000/4000000.0)));
 14903     05A8  300D               	movlw	13
 14904     05A9                     u350_27:
 14905     05A9  0B89               	decfsz	9,f
 14906     05AA  2DA9               	goto	u350_27
 14907     05AB  0000               	nop
 14908                           
 14909                           ;efuse.c: 344:     if (isense_max > 422)
 14910     05AC  3001               	movlw	1
 14911     05AD  0140               	movlb	0	; select bank0
 14912     05AE  0266               	subwf	_isense_max+1,w
 14913     05AF  30A7               	movlw	167
 14914     05B0  1903               	skipnz
 14915     05B1  0265               	subwf	_isense_max,w
 14916     05B2  1C03               	skipc
 14917     05B3  2DB8               	goto	i1l1471
 14918                           
 14919                           ;efuse.c: 345:     {;efuse.c: 346:         isense_max = 422;
 14920     05B4  30A6               	movlw	166
 14921     05B5  00E5               	movwf	_isense_max
 14922     05B6  3001               	movlw	1
 14923     05B7  00E6               	movwf	_isense_max+1
 14924     05B8                     i1l1471:	
 14925                           ;efuse.c: 347:     }
 14926                           
 14927                           
 14928                           ;efuse.c: 349:     if((adcISense_prev > isense_max) && (adcISense_curr > isense_max) && 
      +                          (outputState == OUTPUT_ON))
 14929     05B8  0141               	movlb	1	; select bank1
 14930     05B9  082D               	movf	(_adcISense_prev+1)^(0+128),w
 14931     05BA  0140               	movlb	0	; select bank0
 14932     05BB  0266               	subwf	_isense_max+1,w
 14933     05BC  1D03               	skipz
 14934     05BD  2DC2               	goto	u157_25
 14935     05BE  0141               	movlb	1	; select bank1
 14936     05BF  082C               	movf	_adcISense_prev^(0+128),w
 14937     05C0  0140               	movlb	0	; select bank0
 14938     05C1  0265               	subwf	_isense_max,w
 14939     05C2                     u157_25:
 14940     05C2  1803               	skipnc
 14941     05C3  2DD5               	goto	i1l3790
 14942     05C4  083F               	movf	_adcISense_curr+1,w
 14943     05C5  0266               	subwf	_isense_max+1,w
 14944     05C6  1D03               	skipz
 14945     05C7  2DCA               	goto	u158_25
 14946     05C8  083E               	movf	_adcISense_curr,w
 14947     05C9  0265               	subwf	_isense_max,w
 14948     05CA                     u158_25:
 14949     05CA  1803               	skipnc
 14950     05CB  2DD5               	goto	i1l3790
 14951     05CC  032F               	decf	_outputState,w
 14952     05CD  1D03               	btfss	3,2
 14953     05CE  2DD5               	goto	i1l3790
 14954                           
 14955                           ;efuse.c: 350:     {;efuse.c: 351:         overCurrentFault = FAST_OVER_CURRENT_FAULT;
 14956     05CF  3002               	movlw	2
 14957     05D0  00AE               	movwf	_overCurrentFault
 14958                           
 14959                           ;efuse.c: 352:         CmdOutput(OUTPUT_OFF);
 14960     05D1  3000               	movlw	0
 14961     05D2  318D  2529  3185   	fcall	i1_CmdOutput
 14962     05D5                     i1l3790:
 14963                           
 14964                           ;efuse.c: 356:     if(ticks_1ms)
 14965     05D5  0141               	movlb	1	; select bank1
 14966     05D6  0836               	movf	_ticks_1ms^(0+128),w
 14967     05D7  0437               	iorwf	(_ticks_1ms+1)^(0+128),w
 14968     05D8  1903               	btfsc	3,2
 14969     05D9  2E0C               	goto	i1l3806
 14970                           
 14971                           ;efuse.c: 357:     {;efuse.c: 358:         adcVccSense_prev = adcVccSense_curr;
 14972     05DA  0140               	movlb	0	; select bank0
 14973     05DB  0841               	movf	_adcVccSense_curr+1,w
 14974     05DC  0141               	movlb	1	; select bank1
 14975     05DD  00B1               	movwf	(_adcVccSense_prev+1)^(0+128)
 14976     05DE  0140               	movlb	0	; select bank0
 14977     05DF  0840               	movf	_adcVccSense_curr,w
 14978     05E0  0141               	movlb	1	; select bank1
 14979     05E1  00B0               	movwf	_adcVccSense_prev^(0+128)
 14980                           
 14981                           ;efuse.c: 359:         adcVccSense_curr = ADC_GetConversion(VCCSENSE_ANA2);
 14982     05E2  3002               	movlw	2
 14983     05E3  318A  2252  3185   	fcall	_ADC_GetConversion
 14984     05E6  0877               	movf	?_ADC_GetConversion+1,w
 14985     05E7  0140               	movlb	0	; select bank0
 14986     05E8  00C1               	movwf	_adcVccSense_curr+1
 14987     05E9  0876               	movf	?_ADC_GetConversion,w
 14988     05EA  00C0               	movwf	_adcVccSense_curr
 14989                           
 14990                           ;efuse.c: 360:         ADC_SelectChannel(channel_AVSS);
 14991     05EB  303B               	movlw	59
 14992     05EC  3189  2136  3185   	fcall	_ADC_SelectChannel
 14993                           
 14994                           ;efuse.c: 361:         _delay((unsigned long)((5)*(32000000/4000000.0)));
 14995     05EF  300D               	movlw	13
 14996     05F0                     u351_27:
 14997     05F0  0B89               	decfsz	9,f
 14998     05F1  2DF0               	goto	u351_27
 14999     05F2  0000               	nop
 15000                           
 15001                           ;efuse.c: 364:         if((adcVccSense_prev < 372) && (adcVccSense_curr < 372) && (outpu
      +                          tState == OUTPUT_ON))
 15002     05F3  3001               	movlw	1
 15003     05F4  0141               	movlb	1	; select bank1
 15004     05F5  0231               	subwf	(_adcVccSense_prev+1)^(0+128),w
 15005     05F6  3074               	movlw	116
 15006     05F7  1903               	skipnz
 15007     05F8  0230               	subwf	_adcVccSense_prev^(0+128),w
 15008     05F9  1803               	skipnc
 15009     05FA  0008               	return
 15010     05FB  3001               	movlw	1
 15011     05FC  0140               	movlb	0	; select bank0
 15012     05FD  0241               	subwf	_adcVccSense_curr+1,w
 15013     05FE  3074               	movlw	116
 15014     05FF  1903               	skipnz
 15015     0600  0240               	subwf	_adcVccSense_curr,w
 15016     0601  1803               	skipnc
 15017     0602  0008               	return
 15018     0603  032F               	decf	_outputState,w
 15019     0604  1D03               	btfss	3,2
 15020     0605  0008               	return
 15021                           
 15022                           ;efuse.c: 365:         {;efuse.c: 366:             uvloFault = UVLO_FAULT;
 15023     0606  01AD               	clrf	_uvloFault
 15024     0607  0AAD               	incf	_uvloFault,f
 15025                           
 15026                           ;efuse.c: 367:             CmdOutput(OUTPUT_OFF);
 15027     0608  3000               	movlw	0
 15028     0609  318D  2529         	fcall	i1_CmdOutput
 15029     060B  0008               	return
 15030     060C                     i1l3806:
 15031                           
 15032                           ;efuse.c: 371:     {;efuse.c: 372:         adcTSense_prev = adcTSense_curr;
 15033     060C  0875               	movf	_adcTSense_curr+1,w
 15034     060D  0140               	movlb	0	; select bank0
 15035     060E  00A1               	movwf	_adcTSense_prev+1
 15036     060F  0874               	movf	_adcTSense_curr,w
 15037     0610  00A0               	movwf	_adcTSense_prev
 15038                           
 15039                           ;efuse.c: 373:         adcTSense_curr = ADC_GetConversion(TSENSE_ANC4);
 15040     0611  3014               	movlw	20
 15041     0612  318A  2252  3185   	fcall	_ADC_GetConversion
 15042     0615  0877               	movf	?_ADC_GetConversion+1,w
 15043     0616  00F5               	movwf	_adcTSense_curr+1
 15044     0617  0876               	movf	?_ADC_GetConversion,w
 15045     0618  00F4               	movwf	_adcTSense_curr
 15046                           
 15047                           ;efuse.c: 374:         ADC_SelectChannel(channel_AVSS);
 15048     0619  303B               	movlw	59
 15049     061A  3189  2136  3185   	fcall	_ADC_SelectChannel
 15050                           
 15051                           ;efuse.c: 376:         if((adcTSense_prev < 10) && (adcTSense_curr < 10))
 15052     061D  3000               	movlw	0
 15053     061E  0140               	movlb	0	; select bank0
 15054     061F  0221               	subwf	_adcTSense_prev+1,w
 15055     0620  300A               	movlw	10
 15056     0621  1903               	skipnz
 15057     0622  0220               	subwf	_adcTSense_prev,w
 15058     0623  1803               	skipnc
 15059     0624  2E2F               	goto	i1l3816
 15060     0625  3000               	movlw	0
 15061     0626  0275               	subwf	_adcTSense_curr+1,w
 15062     0627  300A               	movlw	10
 15063     0628  1903               	skipnz
 15064     0629  0274               	subwf	_adcTSense_curr,w
 15065     062A  1803               	skipnc
 15066     062B  2E2F               	goto	i1l3816
 15067                           
 15068                           ;efuse.c: 377:         {;efuse.c: 378:             overTempFault = TEMP_SENSOR_OORL;
 15069     062C  3002               	movlw	2
 15070     062D  00AC               	movwf	_overTempFault
 15071                           
 15072                           ;efuse.c: 380:         }
 15073     062E  0008               	return
 15074     062F                     i1l3816:
 15075     062F  3003               	movlw	3
 15076     0630  0221               	subwf	_adcTSense_prev+1,w
 15077     0631  30F6               	movlw	246
 15078     0632  1903               	skipnz
 15079     0633  0220               	subwf	_adcTSense_prev,w
 15080     0634  1C03               	skipc
 15081     0635  0008               	return
 15082     0636  3003               	movlw	3
 15083     0637  0275               	subwf	_adcTSense_curr+1,w
 15084     0638  30F6               	movlw	246
 15085     0639  1903               	skipnz
 15086     063A  0274               	subwf	_adcTSense_curr,w
 15087     063B  1C03               	skipc
 15088     063C  0008               	return
 15089                           
 15090                           ;efuse.c: 382:         {;efuse.c: 383:             overTempFault = TEMP_SENSOR_OORH;
 15091     063D  3003               	movlw	3
 15092     063E  00AC               	movwf	_overTempFault
 15093                           
 15094                           ;efuse.c: 384:             CmdOutput(OUTPUT_OFF);
 15095     063F  3000               	movlw	0
 15096     0640  318D  2529         	fcall	i1_CmdOutput
 15097     0642  0008               	return
 15098     0643                     __end_of_ProcessAnalogInputs:
 15099                           
 15100                           	psect	text67
 15101     0D29                     __ptext67:	
 15102 ;; *************** function i1_CmdOutput *****************
 15103 ;; Defined at:
 15104 ;;		line 390 in file "efuse.c"
 15105 ;; Parameters:    Size  Location     Type
 15106 ;;  enable          1    wreg     unsigned char 
 15107 ;; Auto vars:     Size  Location     Type
 15108 ;;  enable          1    4[COMMON] unsigned char 
 15109 ;; Return value:  Size  Location     Type
 15110 ;;                  1    wreg      void 
 15111 ;; Registers used:
 15112 ;;		wreg, status,2, status,0, pclath, cstack
 15113 ;; Tracked objects:
 15114 ;;		On entry : 3F/0
 15115 ;;		On exit  : 3F/0
 15116 ;;		Unchanged: 0/0
 15117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15119 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15120 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15121 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15122 ;;Total ram usage:        3 bytes
 15123 ;; Hardware stack levels used: 1
 15124 ;; Hardware stack levels required when called: 1
 15125 ;; This function calls:
 15126 ;;		i1_TMR1_StartTimer
 15127 ;;		i1_TMR1_StopTimer
 15128 ;;		i1_TMR1_WriteTimer
 15129 ;;		i1_TMR2_Initialize
 15130 ;;		i1_TMR2_Start
 15131 ;;		i1_TMR2_Stop
 15132 ;; This function is called by:
 15133 ;;		_ProcessAnalogInputs
 15134 ;; This function uses a non-reentrant model
 15135 ;;
 15136                           
 15137     0D29                     i1_CmdOutput:	
 15138                           ;psect for function i1_CmdOutput
 15139                           
 15140                           
 15141                           ;incstack = 0
 15142                           ; Regs used in i1_CmdOutput: [wreg+status,2+status,0+pclath+cstack]
 15143                           ;i1CmdOutput@enable stored from wreg
 15144     0D29  00FA               	movwf	i1CmdOutput@enable
 15145                           
 15146                           ;efuse.c: 390: void CmdOutput(uint8_t enable);efuse.c: 391: {;efuse.c: 392:     TMR2_Sto
      +                          p();
 15147     0D2A  3188  2070  318D   	fcall	i1_TMR2_Stop
 15148                           
 15149                           ;efuse.c: 395:     CLC1POLbits.LC1G4POL = 0;
 15150     0D2D  017C               	movlb	60	; select bank60
 15151     0D2E  1191               	bcf	17,3	;volatile
 15152                           
 15153                           ;efuse.c: 396:     CLC1GLS3bits.LC1G4D3N = 0;
 15154     0D2F  1219               	bcf	25,4	;volatile
 15155                           
 15156                           ;efuse.c: 397:     CLC1GLS3bits.LC1G4D4T = 0;
 15157     0D30  1399               	bcf	25,7	;volatile
 15158                           
 15159                           ;efuse.c: 401:     T1GCON = 0x80;
 15160     0D31  3080               	movlw	128
 15161     0D32  0144               	movlb	4	; select bank4
 15162     0D33  008F               	movwf	15	;volatile
 15163                           
 15164                           ;efuse.c: 404:     T1GATE = 0x0D;
 15165     0D34  300D               	movlw	13
 15166     0D35  0090               	movwf	16	;volatile
 15167                           
 15168                           ;efuse.c: 406:     CLC3CONbits.EN = 0;
 15169     0D36  017C               	movlb	60	; select bank60
 15170     0D37  13A4               	bcf	36,7	;volatile
 15171                           
 15172                           ;efuse.c: 409:     CLC1POLbits.LC1G2POL = 1;
 15173     0D38  1491               	bsf	17,1	;volatile
 15174                           
 15175                           ;efuse.c: 410:     CLC1POLbits.LC1G2POL = 0;
 15176     0D39  1091               	bcf	17,1	;volatile
 15177                           
 15178                           ;efuse.c: 412:     _delay((unsigned long)((1)*(32000000/4000000.0)));
 15179     0D3A  3200               	nop2	;2 cycle nop
 15180     0D3B  3200               	nop2	;2 cycle nop
 15181     0D3C  3200               	nop2	;2 cycle nop
 15182     0D3D  3200               	nop2	;2 cycle nop
 15183                           
 15184                           ;efuse.c: 415:     CLC2POLbits.LC2G2POL = 1;
 15185     0D3E  017C               	movlb	60	; select bank60
 15186     0D3F  149B               	bsf	27,1	;volatile
 15187                           
 15188                           ;efuse.c: 416:     CLC2POLbits.LC2G2POL = 0;
 15189     0D40  109B               	bcf	27,1	;volatile
 15190                           
 15191                           ;efuse.c: 418:     outputState = OUTPUT_OFF;
 15192     0D41  0140               	movlb	0	; select bank0
 15193     0D42  01AF               	clrf	_outputState
 15194                           
 15195                           ;efuse.c: 421:     if (enable)
 15196     0D43  087A               	movf	i1CmdOutput@enable,w
 15197     0D44  1903               	btfsc	3,2
 15198     0D45  0008               	return
 15199                           
 15200                           ;efuse.c: 422:     {;efuse.c: 423:         overCurrentFault = NO_OVER_CURRENT_FAULT;
 15201     0D46  01AE               	clrf	_overCurrentFault
 15202                           
 15203                           ;efuse.c: 424:         uvloFault = NO_UVLO_FAULT;
 15204     0D47  01AD               	clrf	_uvloFault
 15205                           
 15206                           ;efuse.c: 425:         overTempFault = NO_TEMP_FAULT;
 15207     0D48  01AC               	clrf	_overTempFault
 15208     0D49  1794               	bsf	20,7	;volatile
 15209                           
 15210                           ;efuse.c: 430:         CLC1CONbits.LC1EN = 1;
 15211     0D4A  017C               	movlb	60	; select bank60
 15212     0D4B  1790               	bsf	16,7	;volatile
 15213                           
 15214                           ;efuse.c: 431:         CLC1POLbits.LC1G4POL = 0;
 15215     0D4C  1191               	bcf	17,3	;volatile
 15216                           
 15217                           ;efuse.c: 432:         CLC1POLbits.LC1G3POL = 0;
 15218     0D4D  1111               	bcf	17,2	;volatile
 15219                           
 15220                           ;efuse.c: 433:         CLC1POLbits.LC1G3POL = 1;
 15221     0D4E  1511               	bsf	17,2	;volatile
 15222                           
 15223                           ;efuse.c: 434:         CLC1POLbits.LC1G3POL = 0;
 15224     0D4F  1111               	bcf	17,2	;volatile
 15225                           
 15226                           ;efuse.c: 435:         CLC1POLbits.LC1POL = 1;
 15227     0D50  1791               	bsf	17,7	;volatile
 15228                           
 15229                           ;efuse.c: 438:         CLC2POLbits.LC2G4POL = 0;
 15230     0D51  119B               	bcf	27,3	;volatile
 15231                           
 15232                           ;efuse.c: 439:         CLC2POLbits.LC2G3POL = 0;
 15233     0D52  111B               	bcf	27,2	;volatile
 15234                           
 15235                           ;efuse.c: 440:         CLC2POLbits.LC2G3POL = 1;
 15236     0D53  151B               	bsf	27,2	;volatile
 15237                           
 15238                           ;efuse.c: 441:         CLC2POLbits.LC2G3POL = 0;
 15239     0D54  111B               	bcf	27,2	;volatile
 15240                           
 15241                           ;efuse.c: 443:         if(triggerType == TRIGGER_TIMER_OVERFLOW)
 15242     0D55  0140               	movlb	0	; select bank0
 15243     0D56  0331               	decf	_triggerType,w
 15244     0D57  1D03               	btfss	3,2
 15245     0D58  2D6A               	goto	i1l1485
 15246                           
 15247                           ;efuse.c: 444:         {;efuse.c: 447:             CLC1POLbits.LC1G4POL = 1;
 15248     0D59  017C               	movlb	60	; select bank60
 15249     0D5A  1591               	bsf	17,3	;volatile
 15250                           
 15251                           ;efuse.c: 448:             CLC1GLS3bits.LC1G4D3N = 1;
 15252     0D5B  1619               	bsf	25,4	;volatile
 15253                           
 15254                           ;efuse.c: 449:             CLC1GLS3bits.LC1G4D4T = 1;
 15255     0D5C  1799               	bsf	25,7	;volatile
 15256                           
 15257                           ;efuse.c: 452:             T1GCON = 0xC0;
 15258     0D5D  30C0               	movlw	192
 15259     0D5E  0144               	movlb	4	; select bank4
 15260     0D5F  008F               	movwf	15	;volatile
 15261                           
 15262                           ;efuse.c: 455:             T1GATE = 0x0B;
 15263     0D60  300B               	movlw	11
 15264     0D61  0090               	movwf	16	;volatile
 15265                           
 15266                           ;efuse.c: 457:             TMR2_Initialize();
 15267     0D62  3189  215D  318D   	fcall	i1_TMR2_Initialize
 15268                           
 15269                           ;efuse.c: 458:             TMR2_Start();
 15270     0D65  3188  2062  318D   	fcall	i1_TMR2_Start
 15271                           
 15272                           ;efuse.c: 460:             CLC3CONbits.EN = 1;
 15273     0D68  017C               	movlb	60	; select bank60
 15274     0D69  17A4               	bsf	36,7	;volatile
 15275     0D6A                     i1l1485:	
 15276                           ;efuse.c: 461:         }
 15277                           
 15278                           
 15279                           ;efuse.c: 464:         TMR1_StopTimer();
 15280     0D6A  3188  206D  318D   	fcall	i1_TMR1_StopTimer
 15281                           
 15282                           ;efuse.c: 465:         TMR1_WriteTimer( 0xffff - reduced_drive_time );
 15283     0D6D  0140               	movlb	0	; select bank0
 15284     0D6E  0830               	movf	_reduced_drive_time,w
 15285     0D6F  00F8               	movwf	??i1_CmdOutput
 15286     0D70  01F9               	clrf	??i1_CmdOutput+1
 15287     0D71  0978               	comf	??i1_CmdOutput,w
 15288     0D72  00F6               	movwf	i1TMR1_WriteTimer@timerVal
 15289     0D73  0979               	comf	??i1_CmdOutput+1,w
 15290     0D74  00F7               	movwf	i1TMR1_WriteTimer@timerVal+1
 15291     0D75  3189  2179  318D   	fcall	i1_TMR1_WriteTimer
 15292                           
 15293                           ;efuse.c: 466:         PIR4bits.TMR1IF = 0;
 15294     0D78  014E               	movlb	14	; select bank14
 15295     0D79  1010               	bcf	16,0	;volatile
 15296                           
 15297                           ;efuse.c: 467:         TMR1_StartTimer();
 15298     0D7A  3188  206A         	fcall	i1_TMR1_StartTimer
 15299                           
 15300                           ;efuse.c: 469:         iSenseOffset = adcISense_curr;
 15301     0D7C  0140               	movlb	0	; select bank0
 15302     0D7D  083F               	movf	_adcISense_curr+1,w
 15303     0D7E  00BB               	movwf	_iSenseOffset+1
 15304     0D7F  083E               	movf	_adcISense_curr,w
 15305     0D80  00BA               	movwf	_iSenseOffset
 15306                           
 15307                           ;efuse.c: 470:         outputState = OUTPUT_ON;
 15308     0D81  01AF               	clrf	_outputState
 15309     0D82  0AAF               	incf	_outputState,f
 15310     0D83  1394               	bcf	20,7	;volatile
 15311     0D84  0008               	return
 15312     0D85                     __end_ofi1_CmdOutput:
 15313                           
 15314                           	psect	text68
 15315     0870                     __ptext68:	
 15316 ;; *************** function i1_TMR2_Stop *****************
 15317 ;; Defined at:
 15318 ;;		line 111 in file "mcc_generated_files/tmr2.c"
 15319 ;; Parameters:    Size  Location     Type
 15320 ;;		None
 15321 ;; Auto vars:     Size  Location     Type
 15322 ;;		None
 15323 ;; Return value:  Size  Location     Type
 15324 ;;                  1    wreg      void 
 15325 ;; Registers used:
 15326 ;;		None
 15327 ;; Tracked objects:
 15328 ;;		On entry : 3F/0
 15329 ;;		On exit  : 3F/5
 15330 ;;		Unchanged: 0/0
 15331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15335 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15336 ;;Total ram usage:        0 bytes
 15337 ;; Hardware stack levels used: 1
 15338 ;; This function calls:
 15339 ;;		Nothing
 15340 ;; This function is called by:
 15341 ;;		i1_CmdOutput
 15342 ;; This function uses a non-reentrant model
 15343 ;;
 15344                           
 15345     0870                     i1_TMR2_Stop:	
 15346                           ;psect for function i1_TMR2_Stop
 15347                           
 15348                           
 15349                           ;mcc_generated_files/tmr2.c: 114:     T2CONbits.TMR2ON = 0;
 15350                           
 15351                           ;incstack = 0
 15352                           ; Regs used in i1_TMR2_Stop: []
 15353     0870  0145               	movlb	5	; select bank5
 15354     0871  138E               	bcf	14,7	;volatile
 15355     0872  0008               	return
 15356     0873                     __end_ofi1_TMR2_Stop:
 15357                           
 15358                           	psect	text69
 15359     0862                     __ptext69:	
 15360 ;; *************** function i1_TMR2_Start *****************
 15361 ;; Defined at:
 15362 ;;		line 100 in file "mcc_generated_files/tmr2.c"
 15363 ;; Parameters:    Size  Location     Type
 15364 ;;		None
 15365 ;; Auto vars:     Size  Location     Type
 15366 ;;		None
 15367 ;; Return value:  Size  Location     Type
 15368 ;;                  1    wreg      void 
 15369 ;; Registers used:
 15370 ;;		None
 15371 ;; Tracked objects:
 15372 ;;		On entry : 3F/5
 15373 ;;		On exit  : 3F/5
 15374 ;;		Unchanged: 0/0
 15375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15379 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15380 ;;Total ram usage:        0 bytes
 15381 ;; Hardware stack levels used: 1
 15382 ;; This function calls:
 15383 ;;		Nothing
 15384 ;; This function is called by:
 15385 ;;		i1_CmdOutput
 15386 ;; This function uses a non-reentrant model
 15387 ;;
 15388                           
 15389     0862                     i1_TMR2_Start:	
 15390                           ;psect for function i1_TMR2_Start
 15391                           
 15392                           
 15393                           ;mcc_generated_files/tmr2.c: 103:     T2CONbits.TMR2ON = 1;
 15394                           
 15395                           ;incstack = 0
 15396                           ; Regs used in i1_TMR2_Start: []
 15397     0862  178E               	bsf	14,7	;volatile
 15398     0863  0008               	return
 15399     0864                     __end_ofi1_TMR2_Start:
 15400                           
 15401                           	psect	text70
 15402     095D                     __ptext70:	
 15403 ;; *************** function i1_TMR2_Initialize *****************
 15404 ;; Defined at:
 15405 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 15406 ;; Parameters:    Size  Location     Type
 15407 ;;		None
 15408 ;; Auto vars:     Size  Location     Type
 15409 ;;		None
 15410 ;; Return value:  Size  Location     Type
 15411 ;;                  1    wreg      void 
 15412 ;; Registers used:
 15413 ;;		wreg, status,2
 15414 ;; Tracked objects:
 15415 ;;		On entry : 3F/4
 15416 ;;		On exit  : 3F/5
 15417 ;;		Unchanged: 0/0
 15418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15422 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15423 ;;Total ram usage:        0 bytes
 15424 ;; Hardware stack levels used: 1
 15425 ;; This function calls:
 15426 ;;		Nothing
 15427 ;; This function is called by:
 15428 ;;		i1_CmdOutput
 15429 ;; This function uses a non-reentrant model
 15430 ;;
 15431                           
 15432     095D                     i1_TMR2_Initialize:	
 15433                           ;psect for function i1_TMR2_Initialize
 15434                           
 15435                           
 15436                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x0D;
 15437                           
 15438                           ;incstack = 0
 15439                           ; Regs used in i1_TMR2_Initialize: [wreg+status,2]
 15440     095D  300D               	movlw	13
 15441     095E  0145               	movlb	5	; select bank5
 15442     095F  0090               	movwf	16	;volatile
 15443                           
 15444                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 15445     0960  018F               	clrf	15	;volatile
 15446                           
 15447                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 15448     0961  0191               	clrf	17	;volatile
 15449                           
 15450                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x27;
 15451     0962  3027               	movlw	39
 15452     0963  008D               	movwf	13	;volatile
 15453                           
 15454                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 15455     0964  018C               	clrf	12	;volatile
 15456                           
 15457                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 15458     0965  014E               	movlb	14	; select bank14
 15459     0966  1090               	bcf	16,1	;volatile
 15460                           
 15461                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xB0;
 15462     0967  30B0               	movlw	176
 15463     0968  0145               	movlb	5	; select bank5
 15464     0969  008E               	movwf	14	;volatile
 15465     096A  0008               	return
 15466     096B                     __end_ofi1_TMR2_Initialize:
 15467                           
 15468                           	psect	text71
 15469     0979                     __ptext71:	
 15470 ;; *************** function i1_TMR1_WriteTimer *****************
 15471 ;; Defined at:
 15472 ;;		line 120 in file "mcc_generated_files/tmr1.c"
 15473 ;; Parameters:    Size  Location     Type
 15474 ;;  timerVal        2    0[COMMON] unsigned short 
 15475 ;; Auto vars:     Size  Location     Type
 15476 ;;		None
 15477 ;; Return value:  Size  Location     Type
 15478 ;;                  1    wreg      void 
 15479 ;; Registers used:
 15480 ;;		wreg
 15481 ;; Tracked objects:
 15482 ;;		On entry : 3F/0
 15483 ;;		On exit  : 3F/4
 15484 ;;		Unchanged: 0/0
 15485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15486 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15489 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15490 ;;Total ram usage:        2 bytes
 15491 ;; Hardware stack levels used: 1
 15492 ;; This function calls:
 15493 ;;		Nothing
 15494 ;; This function is called by:
 15495 ;;		i1_CmdOutput
 15496 ;; This function uses a non-reentrant model
 15497 ;;
 15498                           
 15499     0979                     i1_TMR1_WriteTimer:	
 15500                           ;psect for function i1_TMR1_WriteTimer
 15501                           
 15502                           
 15503                           ;mcc_generated_files/tmr1.c: 120: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 121: {;mcc_generated_files/tmr1.c: 122:     if (T1CONbits.nT1SYNC == 1)
 15504                           
 15505                           ;incstack = 0
 15506                           ; Regs used in i1_TMR1_WriteTimer: [wreg]
 15507     0979  0144               	movlb	4	; select bank4
 15508     097A  1D0E               	btfss	14,2	;volatile
 15509     097B  2983               	goto	i1l3326
 15510                           
 15511                           ;mcc_generated_files/tmr1.c: 123:     {;mcc_generated_files/tmr1.c: 125:         T1CONbi
      +                          ts.TMR1ON = 0;
 15512     097C  100E               	bcf	14,0	;volatile
 15513                           
 15514                           ;mcc_generated_files/tmr1.c: 128:         TMR1H = (uint8_t)(timerVal >> 8);
 15515     097D  0877               	movf	i1TMR1_WriteTimer@timerVal+1,w
 15516     097E  008D               	movwf	13	;volatile
 15517                           
 15518                           ;mcc_generated_files/tmr1.c: 129:         TMR1L = (uint8_t)timerVal;
 15519     097F  0876               	movf	i1TMR1_WriteTimer@timerVal,w
 15520     0980  008C               	movwf	12	;volatile
 15521                           
 15522                           ;mcc_generated_files/tmr1.c: 132:         T1CONbits.TMR1ON =1;
 15523     0981  140E               	bsf	14,0	;volatile
 15524                           
 15525                           ;mcc_generated_files/tmr1.c: 133:     }
 15526     0982  0008               	return
 15527     0983                     i1l3326:
 15528                           
 15529                           ;mcc_generated_files/tmr1.c: 135:     {;mcc_generated_files/tmr1.c: 137:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
 15530     0983  0877               	movf	i1TMR1_WriteTimer@timerVal+1,w
 15531     0984  008D               	movwf	13	;volatile
 15532                           
 15533                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = (uint8_t)timerVal;
 15534     0985  0876               	movf	i1TMR1_WriteTimer@timerVal,w
 15535     0986  008C               	movwf	12	;volatile
 15536     0987  0008               	return
 15537     0988                     __end_ofi1_TMR1_WriteTimer:
 15538                           
 15539                           	psect	text72
 15540     086D                     __ptext72:	
 15541 ;; *************** function i1_TMR1_StopTimer *****************
 15542 ;; Defined at:
 15543 ;;		line 98 in file "mcc_generated_files/tmr1.c"
 15544 ;; Parameters:    Size  Location     Type
 15545 ;;		None
 15546 ;; Auto vars:     Size  Location     Type
 15547 ;;		None
 15548 ;; Return value:  Size  Location     Type
 15549 ;;                  1    wreg      void 
 15550 ;; Registers used:
 15551 ;;		None
 15552 ;; Tracked objects:
 15553 ;;		On entry : 3/0
 15554 ;;		On exit  : 3F/4
 15555 ;;		Unchanged: 0/0
 15556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15560 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15561 ;;Total ram usage:        0 bytes
 15562 ;; Hardware stack levels used: 1
 15563 ;; This function calls:
 15564 ;;		Nothing
 15565 ;; This function is called by:
 15566 ;;		i1_CmdOutput
 15567 ;; This function uses a non-reentrant model
 15568 ;;
 15569                           
 15570     086D                     i1_TMR1_StopTimer:	
 15571                           ;psect for function i1_TMR1_StopTimer
 15572                           
 15573                           
 15574                           ;mcc_generated_files/tmr1.c: 101:     T1CONbits.TMR1ON = 0;
 15575                           
 15576                           ;incstack = 0
 15577                           ; Regs used in i1_TMR1_StopTimer: []
 15578     086D  0144               	movlb	4	; select bank4
 15579     086E  100E               	bcf	14,0	;volatile
 15580     086F  0008               	return
 15581     0870                     __end_ofi1_TMR1_StopTimer:
 15582                           
 15583                           	psect	text73
 15584     086A                     __ptext73:	
 15585 ;; *************** function i1_TMR1_StartTimer *****************
 15586 ;; Defined at:
 15587 ;;		line 92 in file "mcc_generated_files/tmr1.c"
 15588 ;; Parameters:    Size  Location     Type
 15589 ;;		None
 15590 ;; Auto vars:     Size  Location     Type
 15591 ;;		None
 15592 ;; Return value:  Size  Location     Type
 15593 ;;                  1    wreg      void 
 15594 ;; Registers used:
 15595 ;;		None
 15596 ;; Tracked objects:
 15597 ;;		On entry : 3F/E
 15598 ;;		On exit  : 3F/4
 15599 ;;		Unchanged: 0/0
 15600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15604 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15605 ;;Total ram usage:        0 bytes
 15606 ;; Hardware stack levels used: 1
 15607 ;; This function calls:
 15608 ;;		Nothing
 15609 ;; This function is called by:
 15610 ;;		i1_CmdOutput
 15611 ;; This function uses a non-reentrant model
 15612 ;;
 15613                           
 15614     086A                     i1_TMR1_StartTimer:	
 15615                           ;psect for function i1_TMR1_StartTimer
 15616                           
 15617                           
 15618                           ;mcc_generated_files/tmr1.c: 95:     T1CONbits.TMR1ON = 1;
 15619                           
 15620                           ;incstack = 0
 15621                           ; Regs used in i1_TMR1_StartTimer: []
 15622     086A  0144               	movlb	4	; select bank4
 15623     086B  140E               	bsf	14,0	;volatile
 15624     086C  0008               	return
 15625     086D                     __end_ofi1_TMR1_StartTimer:
 15626                           
 15627                           	psect	text74
 15628     0936                     __ptext74:	
 15629 ;; *************** function _ADC_SelectChannel *****************
 15630 ;; Defined at:
 15631 ;;		line 85 in file "mcc_generated_files/adc.c"
 15632 ;; Parameters:    Size  Location     Type
 15633 ;;  channel         1    wreg     enum E6750
 15634 ;; Auto vars:     Size  Location     Type
 15635 ;;  channel         1    1[COMMON] enum E6750
 15636 ;; Return value:  Size  Location     Type
 15637 ;;                  1    wreg      void 
 15638 ;; Registers used:
 15639 ;;		wreg, status,2, status,0
 15640 ;; Tracked objects:
 15641 ;;		On entry : 3E/0
 15642 ;;		On exit  : 3F/1
 15643 ;;		Unchanged: 0/0
 15644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15646 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15647 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15648 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15649 ;;Total ram usage:        2 bytes
 15650 ;; Hardware stack levels used: 1
 15651 ;; This function calls:
 15652 ;;		Nothing
 15653 ;; This function is called by:
 15654 ;;		_ProcessAnalogInputs
 15655 ;; This function uses a non-reentrant model
 15656 ;;
 15657                           
 15658     0936                     _ADC_SelectChannel:	
 15659                           ;psect for function _ADC_SelectChannel
 15660                           
 15661                           
 15662                           ;incstack = 0
 15663                           ; Regs used in _ADC_SelectChannel: [wreg+status,2+status,0]
 15664                           ;ADC_SelectChannel@channel stored from wreg
 15665     0936  00F7               	movwf	ADC_SelectChannel@channel
 15666                           
 15667                           ;mcc_generated_files/adc.c: 85: void ADC_SelectChannel(adc_channel_t channel);mcc_genera
      +                          ted_files/adc.c: 86: {;mcc_generated_files/adc.c: 88:     ADCON0bits.CHS = channel;
 15668     0937  0877               	movf	ADC_SelectChannel@channel,w
 15669     0938  00F6               	movwf	??_ADC_SelectChannel
 15670     0939  0DF6               	rlf	??_ADC_SelectChannel,f
 15671     093A  0DF6               	rlf	??_ADC_SelectChannel,f
 15672     093B  0141               	movlb	1	; select bank1
 15673     093C  081D               	movf	29,w	;volatile
 15674     093D  0676               	xorwf	??_ADC_SelectChannel,w
 15675     093E  3903               	andlw	-253
 15676     093F  0676               	xorwf	??_ADC_SelectChannel,w
 15677     0940  009D               	movwf	29	;volatile
 15678                           
 15679                           ;mcc_generated_files/adc.c: 90:     ADCON0bits.ADON = 1;
 15680     0941  141D               	bsf	29,0	;volatile
 15681     0942  0008               	return
 15682     0943                     __end_of_ADC_SelectChannel:
 15683                           
 15684                           	psect	text75
 15685     0A52                     __ptext75:	
 15686 ;; *************** function _ADC_GetConversion *****************
 15687 ;; Defined at:
 15688 ;;		line 112 in file "mcc_generated_files/adc.c"
 15689 ;; Parameters:    Size  Location     Type
 15690 ;;  channel         1    wreg     enum E6750
 15691 ;; Auto vars:     Size  Location     Type
 15692 ;;  channel         1    3[COMMON] enum E6750
 15693 ;; Return value:  Size  Location     Type
 15694 ;;                  2    0[COMMON] unsigned short 
 15695 ;; Registers used:
 15696 ;;		wreg, status,2, status,0
 15697 ;; Tracked objects:
 15698 ;;		On entry : 3E/1
 15699 ;;		On exit  : 3F/1
 15700 ;;		Unchanged: 0/0
 15701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15702 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15703 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15704 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15705 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15706 ;;Total ram usage:        4 bytes
 15707 ;; Hardware stack levels used: 1
 15708 ;; This function calls:
 15709 ;;		Nothing
 15710 ;; This function is called by:
 15711 ;;		_ProcessAnalogInputs
 15712 ;; This function uses a non-reentrant model
 15713 ;;
 15714                           
 15715     0A52                     _ADC_GetConversion:	
 15716                           ;psect for function _ADC_GetConversion
 15717                           
 15718                           
 15719                           ;incstack = 0
 15720                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
 15721                           ;ADC_GetConversion@channel stored from wreg
 15722     0A52  00F9               	movwf	ADC_GetConversion@channel
 15723                           
 15724                           ;mcc_generated_files/adc.c: 112: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 113: {;mcc_generated_files/adc.c: 115:     ADCON0bits.CHS = ch
      +                          annel;
 15725     0A53  0879               	movf	ADC_GetConversion@channel,w
 15726     0A54  00F8               	movwf	??_ADC_GetConversion
 15727     0A55  0DF8               	rlf	??_ADC_GetConversion,f
 15728     0A56  0DF8               	rlf	??_ADC_GetConversion,f
 15729     0A57  0141               	movlb	1	; select bank1
 15730     0A58  081D               	movf	29,w	;volatile
 15731     0A59  0678               	xorwf	??_ADC_GetConversion,w
 15732     0A5A  3903               	andlw	-253
 15733     0A5B  0678               	xorwf	??_ADC_GetConversion,w
 15734     0A5C  009D               	movwf	29	;volatile
 15735                           
 15736                           ;mcc_generated_files/adc.c: 118:     ADCON0bits.ADON = 1;
 15737     0A5D  141D               	bsf	29,0	;volatile
 15738                           
 15739                           ;mcc_generated_files/adc.c: 121:     _delay((unsigned long)((5)*(32000000/4000000.0)));
 15740     0A5E  300D               	movlw	13
 15741     0A5F                     u352_27:
 15742     0A5F  0B89               	decfsz	9,f
 15743     0A60  2A5F               	goto	u352_27
 15744     0A61  0000               	nop
 15745                           
 15746                           ;mcc_generated_files/adc.c: 124:     ADCON0bits.GOnDONE = 1;
 15747     0A62  0141               	movlb	1	; select bank1
 15748     0A63  149D               	bsf	29,1	;volatile
 15749     0A64                     i1l1114:	
 15750                           ;mcc_generated_files/adc.c: 128:     {;mcc_generated_files/adc.c: 129:     }
 15751                           
 15752                           
 15753                           ;mcc_generated_files/adc.c: 127:     while (ADCON0bits.GOnDONE)
 15754     0A64  189D               	btfsc	29,1	;volatile
 15755     0A65  2A64               	goto	i1l1114
 15756                           
 15757                           ;mcc_generated_files/adc.c: 132:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 15758     0A66  081C               	movf	28,w	;volatile
 15759     0A67  00F7               	movwf	?_ADC_GetConversion+1
 15760     0A68  081B               	movf	27,w	;volatile
 15761     0A69  00F6               	movwf	?_ADC_GetConversion
 15762     0A6A  0008               	return
 15763     0A6B                     __end_of_ADC_GetConversion:
 15764                           
 15765                           	psect	text76
 15766     0880                     __ptext76:	
 15767 ;; *************** function i1_LIN_stopTimer *****************
 15768 ;; Defined at:
 15769 ;;		line 304 in file "mcc_generated_files/LINDrivers/lin_slave.c"
 15770 ;; Parameters:    Size  Location     Type
 15771 ;;		None
 15772 ;; Auto vars:     Size  Location     Type
 15773 ;;		None
 15774 ;; Return value:  Size  Location     Type
 15775 ;;                  1    wreg      void 
 15776 ;; Registers used:
 15777 ;;		status,2
 15778 ;; Tracked objects:
 15779 ;;		On entry : 3F/0
 15780 ;;		On exit  : 3F/0
 15781 ;;		Unchanged: 0/0
 15782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15786 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15787 ;;Total ram usage:        0 bytes
 15788 ;; Hardware stack levels used: 1
 15789 ;; This function calls:
 15790 ;;		Nothing
 15791 ;; This function is called by:
 15792 ;;		_LIN_timerHandler
 15793 ;; This function uses a non-reentrant model
 15794 ;;
 15795                           
 15796     0880                     i1_LIN_stopTimer:	
 15797                           ;psect for function i1_LIN_stopTimer
 15798                           
 15799                           
 15800                           ;mcc_generated_files/LINDrivers/lin_slave.c: 305:     __nop();
 15801                           
 15802                           ;incstack = 0
 15803                           ; Regs used in i1_LIN_stopTimer: [status,2]
 15804     0880  0000               	nop
 15805                           
 15806                           ;mcc_generated_files/LINDrivers/lin_slave.c: 307:     CountCallBack = 0;
 15807     0881  0140               	movlb	0	; select bank0
 15808     0882  01A9               	clrf	_CountCallBack	;volatile
 15809                           
 15810                           ;mcc_generated_files/LINDrivers/lin_slave.c: 308:     LIN_timerRunning = 0;
 15811     0883  01AA               	clrf	_LIN_timerRunning
 15812     0884  0008               	return
 15813     0885                     __end_ofi1_LIN_stopTimer:
 15814                           
 15815                           	psect	text77
 15816     0AB8                     __ptext77:	
 15817 ;; *************** function _EUSART1_Transmit_ISR *****************
 15818 ;; Defined at:
 15819 ;;		line 197 in file "mcc_generated_files/eusart1.c"
 15820 ;; Parameters:    Size  Location     Type
 15821 ;;		None
 15822 ;; Auto vars:     Size  Location     Type
 15823 ;;		None
 15824 ;; Return value:  Size  Location     Type
 15825 ;;                  1    wreg      void 
 15826 ;; Registers used:
 15827 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15828 ;; Tracked objects:
 15829 ;;		On entry : 3F/2
 15830 ;;		On exit  : 31/0
 15831 ;;		Unchanged: 0/0
 15832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15835 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15836 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15837 ;;Total ram usage:        1 bytes
 15838 ;; Hardware stack levels used: 1
 15839 ;; This function calls:
 15840 ;;		Nothing
 15841 ;; This function is called by:
 15842 ;;		_EUSART1_Initialize
 15843 ;;		_INTERRUPT_InterruptManager
 15844 ;; This function uses a non-reentrant model
 15845 ;;
 15846                           
 15847     0AB8                     _EUSART1_Transmit_ISR:	
 15848                           ;psect for function _EUSART1_Transmit_ISR
 15849                           
 15850                           
 15851                           ;mcc_generated_files/eusart1.c: 201:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
 15852                           
 15853                           ;incstack = 0
 15854                           ; Regs used in _EUSART1_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 15855     0AB8  3008               	movlw	8
 15856     0AB9  0140               	movlb	0	; select bank0
 15857     0ABA  0224               	subwf	_eusart1TxBufferRemaining,w
 15858     0ABB  1803               	skipnc
 15859     0ABC  2AD3               	goto	i1l711
 15860                           
 15861                           ;mcc_generated_files/eusart1.c: 202:     {;mcc_generated_files/eusart1.c: 203:         T
      +                          X1REG = eusart1TxBuffer[eusart1TxTail++];
 15862     0ABD  0825               	movf	_eusart1TxTail,w
 15863     0ABE  3E52               	addlw	(low (_eusart1TxBuffer| (0+256)))& (0+255)
 15864     0ABF  0086               	movwf	6
 15865     0AC0  3001               	movlw	1	; select bank2/3
 15866     0AC1  0087               	movwf	7
 15867     0AC2  0801               	movf	1,w
 15868     0AC3  0142               	movlb	2	; select bank2
 15869     0AC4  009A               	movwf	26	;volatile
 15870     0AC5  3001               	movlw	1
 15871     0AC6  00F6               	movwf	??_EUSART1_Transmit_ISR
 15872     0AC7  0876               	movf	??_EUSART1_Transmit_ISR,w
 15873     0AC8  0140               	movlb	0	; select bank0
 15874     0AC9  07A5               	addwf	_eusart1TxTail,f	;volatile
 15875                           
 15876                           ;mcc_generated_files/eusart1.c: 204:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
 15877     0ACA  3008               	movlw	8
 15878     0ACB  0225               	subwf	_eusart1TxTail,w
 15879     0ACC  1803               	btfsc	3,0
 15880                           
 15881                           ;mcc_generated_files/eusart1.c: 205:         {;mcc_generated_files/eusart1.c: 206:      
      +                                 eusart1TxTail = 0;
 15882     0ACD  01A5               	clrf	_eusart1TxTail	;volatile
 15883                           
 15884                           ;mcc_generated_files/eusart1.c: 208:         eusart1TxBufferRemaining++;
 15885     0ACE  3001               	movlw	1
 15886     0ACF  00F6               	movwf	??_EUSART1_Transmit_ISR
 15887     0AD0  0876               	movf	??_EUSART1_Transmit_ISR,w
 15888     0AD1  07A4               	addwf	_eusart1TxBufferRemaining,f	;volatile
 15889                           
 15890                           ;mcc_generated_files/eusart1.c: 209:     }
 15891     0AD2  0008               	return
 15892     0AD3                     i1l711:	
 15893                           ;mcc_generated_files/eusart1.c: 210:     else
 15894                           
 15895                           
 15896                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         P
      +                          IE3bits.TX1IE = 0;
 15897     0AD3  014E               	movlb	14	; select bank14
 15898     0AD4  1219               	bcf	25,4	;volatile
 15899     0AD5  0008               	return
 15900     0AD6                     __end_of_EUSART1_Transmit_ISR:
 15901                           
 15902                           	psect	text78
 15903     0C66                     __ptext78:	
 15904 ;; *************** function _EUSART1_Receive_ISR *****************
 15905 ;; Defined at:
 15906 ;;		line 216 in file "mcc_generated_files/eusart1.c"
 15907 ;; Parameters:    Size  Location     Type
 15908 ;;		None
 15909 ;; Auto vars:     Size  Location     Type
 15910 ;;		None
 15911 ;; Return value:  Size  Location     Type
 15912 ;;                  1    wreg      void 
 15913 ;; Registers used:
 15914 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15915 ;; Tracked objects:
 15916 ;;		On entry : 3F/2
 15917 ;;		On exit  : 0/0
 15918 ;;		Unchanged: 0/0
 15919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15924 ;;Total ram usage:        0 bytes
 15925 ;; Hardware stack levels used: 1
 15926 ;; Hardware stack levels required when called: 2
 15927 ;; This function calls:
 15928 ;;		NULL
 15929 ;;		_EUSART1_DefaultErrorHandler
 15930 ;;		_EUSART1_DefaultFramingErrorHandler
 15931 ;;		_EUSART1_DefaultOverrunErrorHandler
 15932 ;;		_EUSART1_RxDataHandler
 15933 ;; This function is called by:
 15934 ;;		_EUSART1_Initialize
 15935 ;;		_INTERRUPT_InterruptManager
 15936 ;; This function uses a non-reentrant model
 15937 ;;
 15938                           
 15939     0C66                     _EUSART1_Receive_ISR:	
 15940                           ;psect for function _EUSART1_Receive_ISR
 15941                           
 15942                           
 15943                           ;mcc_generated_files/eusart1.c: 219:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 15944                           
 15945                           ;incstack = 0
 15946                           ; Regs used in _EUSART1_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15947     0C66  0873               	movf	_eusart1RxHead,w	;volatile
 15948     0C67  3E42               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 15949     0C68  0086               	movwf	6
 15950     0C69  3001               	movlw	1	; select bank2/3
 15951     0C6A  0087               	movwf	7
 15952     0C6B  0181               	clrf	1
 15953                           
 15954                           ;mcc_generated_files/eusart1.c: 221:     if(RC1STAbits.FERR){
 15955     0C6C  1D1D               	btfss	29,2	;volatile
 15956     0C6D  2C79               	goto	i1l4020
 15957                           
 15958                           ;mcc_generated_files/eusart1.c: 222:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 15959     0C6E  0873               	movf	_eusart1RxHead,w	;volatile
 15960     0C6F  3E42               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 15961     0C70  0086               	movwf	6
 15962     0C71  3001               	movlw	1	; select bank2/3
 15963     0C72  0087               	movwf	7
 15964     0C73  1481               	bsf	1,1
 15965                           
 15966                           ;mcc_generated_files/eusart1.c: 223:         EUSART1_FramingErrorHandler();
 15967     0C74  0867               	movf	(_EUSART1_FramingErrorHandler+1)^(0+256),w
 15968     0C75  008A               	movwf	10
 15969     0C76  0866               	movf	_EUSART1_FramingErrorHandler^(0+256),w
 15970     0C77  000A               	callw
 15971     0C78  318C               	pagesel	$
 15972     0C79                     i1l4020:
 15973                           
 15974                           ;mcc_generated_files/eusart1.c: 226:     if(RC1STAbits.OERR){
 15975     0C79  0142               	movlb	2	; select bank2
 15976     0C7A  1C9D               	btfss	29,1	;volatile
 15977     0C7B  2C87               	goto	i1l4026
 15978                           
 15979                           ;mcc_generated_files/eusart1.c: 227:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 15980     0C7C  0873               	movf	_eusart1RxHead,w	;volatile
 15981     0C7D  3E42               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 15982     0C7E  0086               	movwf	6
 15983     0C7F  3001               	movlw	1	; select bank2/3
 15984     0C80  0087               	movwf	7
 15985     0C81  1501               	bsf	1,2
 15986                           
 15987                           ;mcc_generated_files/eusart1.c: 228:         EUSART1_OverrunErrorHandler();
 15988     0C82  0865               	movf	(_EUSART1_OverrunErrorHandler+1)^(0+256),w
 15989     0C83  008A               	movwf	10
 15990     0C84  0864               	movf	_EUSART1_OverrunErrorHandler^(0+256),w
 15991     0C85  000A               	callw
 15992     0C86  318C               	pagesel	$
 15993     0C87                     i1l4026:
 15994                           
 15995                           ;mcc_generated_files/eusart1.c: 231:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 15996     0C87  0873               	movf	_eusart1RxHead,w	;volatile
 15997     0C88  3E42               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 15998     0C89  0086               	movwf	6
 15999     0C8A  3001               	movlw	1	; select bank2/3
 16000     0C8B  0087               	movwf	7
 16001     0C8C  0801               	movf	1,w
 16002     0C8D  1903               	btfsc	3,2
 16003     0C8E  2C96               	goto	i1l4030
 16004                           
 16005                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_ErrorHandler();
 16006     0C8F  0142               	movlb	2	; select bank2
 16007     0C90  0863               	movf	(_EUSART1_ErrorHandler+1)^(0+256),w
 16008     0C91  008A               	movwf	10
 16009     0C92  0862               	movf	_EUSART1_ErrorHandler^(0+256),w
 16010     0C93  000A               	callw
 16011     0C94  318C               	pagesel	$
 16012                           
 16013                           ;mcc_generated_files/eusart1.c: 233:     } else {
 16014     0C95  0008               	return
 16015     0C96                     i1l4030:
 16016                           
 16017                           ;mcc_generated_files/eusart1.c: 234:         EUSART1_RxDataHandler();
 16018     0C96  3189  21E0         	fcall	_EUSART1_RxDataHandler
 16019     0C98  0008               	return
 16020     0C99                     __end_of_EUSART1_Receive_ISR:
 16021                           
 16022                           	psect	text79
 16023     0867                     __ptext79:	
 16024 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 16025 ;; Defined at:
 16026 ;;		line 252 in file "mcc_generated_files/eusart1.c"
 16027 ;; Parameters:    Size  Location     Type
 16028 ;;		None
 16029 ;; Auto vars:     Size  Location     Type
 16030 ;;		None
 16031 ;; Return value:  Size  Location     Type
 16032 ;;                  1    wreg      void 
 16033 ;; Registers used:
 16034 ;;		None
 16035 ;; Tracked objects:
 16036 ;;		On entry : 3F/2
 16037 ;;		On exit  : 3F/2
 16038 ;;		Unchanged: 0/0
 16039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16043 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16044 ;;Total ram usage:        0 bytes
 16045 ;; Hardware stack levels used: 1
 16046 ;; This function calls:
 16047 ;;		Nothing
 16048 ;; This function is called by:
 16049 ;;		_EUSART1_Initialize
 16050 ;;		_EUSART1_Receive_ISR
 16051 ;; This function uses a non-reentrant model
 16052 ;;
 16053                           
 16054     0867                     _EUSART1_DefaultOverrunErrorHandler:	
 16055                           ;psect for function _EUSART1_DefaultOverrunErrorHandler
 16056                           
 16057                           
 16058                           ;mcc_generated_files/eusart1.c: 255:     RC1STAbits.CREN = 0;
 16059                           
 16060                           ;incstack = 0
 16061                           ; Regs used in _EUSART1_DefaultOverrunErrorHandler: []
 16062     0867  121D               	bcf	29,4	;volatile
 16063                           
 16064                           ;mcc_generated_files/eusart1.c: 256:     RC1STAbits.CREN = 1;
 16065     0868  161D               	bsf	29,4	;volatile
 16066     0869  0008               	return
 16067     086A                     __end_of_EUSART1_DefaultOverrunErrorHandler:
 16068                           
 16069                           	psect	text80
 16070     085E                     __ptext80:	
 16071 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 16072 ;; Defined at:
 16073 ;;		line 250 in file "mcc_generated_files/eusart1.c"
 16074 ;; Parameters:    Size  Location     Type
 16075 ;;		None
 16076 ;; Auto vars:     Size  Location     Type
 16077 ;;		None
 16078 ;; Return value:  Size  Location     Type
 16079 ;;                  1    wreg      void 
 16080 ;; Registers used:
 16081 ;;		None
 16082 ;; Tracked objects:
 16083 ;;		On entry : 3F/2
 16084 ;;		On exit  : 3F/2
 16085 ;;		Unchanged: 3F/0
 16086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16091 ;;Total ram usage:        0 bytes
 16092 ;; Hardware stack levels used: 1
 16093 ;; This function calls:
 16094 ;;		Nothing
 16095 ;; This function is called by:
 16096 ;;		_EUSART1_Initialize
 16097 ;;		_EUSART1_Receive_ISR
 16098 ;; This function uses a non-reentrant model
 16099 ;;
 16100                           
 16101     085E                     _EUSART1_DefaultFramingErrorHandler:	
 16102                           ;psect for function _EUSART1_DefaultFramingErrorHandler
 16103                           
 16104                           
 16105                           ;incstack = 0
 16106                           ; Regs used in _EUSART1_DefaultFramingErrorHandler: []
 16107     085E  0008               	return
 16108     085F                     __end_of_EUSART1_DefaultFramingErrorHandler:
 16109                           
 16110                           	psect	text81
 16111     0864                     __ptext81:	
 16112 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 16113 ;; Defined at:
 16114 ;;		line 260 in file "mcc_generated_files/eusart1.c"
 16115 ;; Parameters:    Size  Location     Type
 16116 ;;		None
 16117 ;; Auto vars:     Size  Location     Type
 16118 ;;		None
 16119 ;; Return value:  Size  Location     Type
 16120 ;;                  1    wreg      void 
 16121 ;; Registers used:
 16122 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16123 ;; Tracked objects:
 16124 ;;		On entry : 3F/2
 16125 ;;		On exit  : 3F/0
 16126 ;;		Unchanged: 0/0
 16127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16131 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16132 ;;Total ram usage:        0 bytes
 16133 ;; Hardware stack levels used: 1
 16134 ;; Hardware stack levels required when called: 1
 16135 ;; This function calls:
 16136 ;;		_EUSART1_RxDataHandler
 16137 ;; This function is called by:
 16138 ;;		_EUSART1_Initialize
 16139 ;;		_EUSART1_Receive_ISR
 16140 ;; This function uses a non-reentrant model
 16141 ;;
 16142                           
 16143     0864                     _EUSART1_DefaultErrorHandler:	
 16144                           ;psect for function _EUSART1_DefaultErrorHandler
 16145                           
 16146                           
 16147                           ;mcc_generated_files/eusart1.c: 261:     EUSART1_RxDataHandler();
 16148                           
 16149                           ;incstack = 0
 16150                           ; Regs used in _EUSART1_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 16151     0864  3189  21E0         	fcall	_EUSART1_RxDataHandler
 16152     0866  0008               	return
 16153     0867                     __end_of_EUSART1_DefaultErrorHandler:
 16154                           
 16155                           	psect	text82
 16156     09E0                     __ptext82:	
 16157 ;; *************** function _EUSART1_RxDataHandler *****************
 16158 ;; Defined at:
 16159 ;;		line 240 in file "mcc_generated_files/eusart1.c"
 16160 ;; Parameters:    Size  Location     Type
 16161 ;;		None
 16162 ;; Auto vars:     Size  Location     Type
 16163 ;;		None
 16164 ;; Return value:  Size  Location     Type
 16165 ;;                  1    wreg      void 
 16166 ;; Registers used:
 16167 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 16168 ;; Tracked objects:
 16169 ;;		On entry : 0/2
 16170 ;;		On exit  : 3F/0
 16171 ;;		Unchanged: 0/0
 16172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16175 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16176 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16177 ;;Total ram usage:        1 bytes
 16178 ;; Hardware stack levels used: 1
 16179 ;; This function calls:
 16180 ;;		Nothing
 16181 ;; This function is called by:
 16182 ;;		_EUSART1_Receive_ISR
 16183 ;;		_EUSART1_DefaultErrorHandler
 16184 ;; This function uses a non-reentrant model
 16185 ;;
 16186                           
 16187     09E0                     _EUSART1_RxDataHandler:	
 16188                           ;psect for function _EUSART1_RxDataHandler
 16189                           
 16190                           
 16191                           ;mcc_generated_files/eusart1.c: 242:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 16192                           
 16193                           ;incstack = 0
 16194                           ; Regs used in _EUSART1_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 16195     09E0  0873               	movf	_eusart1RxHead,w
 16196     09E1  3E4A               	addlw	(low (_eusart1RxBuffer| (0+256)))& (0+255)
 16197     09E2  0086               	movwf	6
 16198     09E3  3001               	movlw	1	; select bank2/3
 16199     09E4  0087               	movwf	7
 16200     09E5  0142               	movlb	2	; select bank2
 16201     09E6  0819               	movf	25,w	;volatile
 16202     09E7  0081               	movwf	1
 16203     09E8  3001               	movlw	1
 16204     09E9  00F6               	movwf	??_EUSART1_RxDataHandler
 16205     09EA  0876               	movf	??_EUSART1_RxDataHandler,w
 16206     09EB  07F3               	addwf	_eusart1RxHead,f	;volatile
 16207                           
 16208                           ;mcc_generated_files/eusart1.c: 243:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 16209     09EC  3008               	movlw	8
 16210     09ED  0273               	subwf	_eusart1RxHead,w
 16211     09EE  1803               	btfsc	3,0
 16212                           
 16213                           ;mcc_generated_files/eusart1.c: 244:     {;mcc_generated_files/eusart1.c: 245:         e
      +                          usart1RxHead = 0;
 16214     09EF  01F3               	clrf	_eusart1RxHead	;volatile
 16215                           
 16216                           ;mcc_generated_files/eusart1.c: 247:     eusart1RxCount++;
 16217     09F0  3001               	movlw	1
 16218     09F1  00F6               	movwf	??_EUSART1_RxDataHandler
 16219     09F2  0876               	movf	??_EUSART1_RxDataHandler,w
 16220     09F3  0140               	movlb	0	; select bank0
 16221     09F4  07A3               	addwf	_eusart1RxCount,f	;volatile
 16222     09F5  0008               	return
 16223     09F6                     __end_of_EUSART1_RxDataHandler:
 16224                           
 16225                           	psect	text83
 16226     0860                     __ptext83:	
 16227 ;; *************** function _CLC2_ISR *****************
 16228 ;; Defined at:
 16229 ;;		line 89 in file "mcc_generated_files/clc2.c"
 16230 ;; Parameters:    Size  Location     Type
 16231 ;;		None
 16232 ;; Auto vars:     Size  Location     Type
 16233 ;;		None
 16234 ;; Return value:  Size  Location     Type
 16235 ;;                  1    wreg      void 
 16236 ;; Registers used:
 16237 ;;		None
 16238 ;; Tracked objects:
 16239 ;;		On entry : 3F/E
 16240 ;;		On exit  : 3F/E
 16241 ;;		Unchanged: 0/0
 16242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16246 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16247 ;;Total ram usage:        0 bytes
 16248 ;; Hardware stack levels used: 1
 16249 ;; This function calls:
 16250 ;;		Nothing
 16251 ;; This function is called by:
 16252 ;;		_INTERRUPT_InterruptManager
 16253 ;; This function uses a non-reentrant model
 16254 ;;
 16255                           
 16256     0860                     _CLC2_ISR:	
 16257                           ;psect for function _CLC2_ISR
 16258                           
 16259                           
 16260                           ;mcc_generated_files/clc2.c: 92:     PIR5bits.CLC2IF = 0;
 16261                           
 16262                           ;incstack = 0
 16263                           ; Regs used in _CLC2_ISR: []
 16264     0860  1291               	bcf	17,5	;volatile
 16265     0861  0008               	return
 16266     0862                     __end_of_CLC2_ISR:
 16267     007E                     btemp	set	126	;btemp
 16268     007E                     int$flags	set	126
 16269     007E                     wtemp0	set	126
 16270                           
 16271                           	psect	idloc
 16272                           
 16273                           ;Config register IDLOC0 @ 0x8000
 16274                           ;	unspecified, using default values
 16275     8000                     	org	32768
 16276     8000  3FFF               	dw	16383
 16277                           
 16278                           ;Config register IDLOC1 @ 0x8001
 16279                           ;	unspecified, using default values
 16280     8001                     	org	32769
 16281     8001  3FFF               	dw	16383
 16282                           
 16283                           ;Config register IDLOC2 @ 0x8002
 16284                           ;	unspecified, using default values
 16285     8002                     	org	32770
 16286     8002  3FFF               	dw	16383
 16287                           
 16288                           ;Config register IDLOC3 @ 0x8003
 16289                           ;	unspecified, using default values
 16290     8003                     	org	32771
 16291     8003  3FFF               	dw	16383
 16292                           
 16293                           	psect	config
 16294                           
 16295                           ;Config register CONFIG1 @ 0x8007
 16296                           ;	External Oscillator mode selection bits
 16297                           ;	FEXTOSC = OFF, Oscillator not enabled
 16298                           ;	Power-up default value for COSC bits
 16299                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
 16300                           ;	Clock Out Enable bit
 16301                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 16302                           ;	Clock Switch Enable bit
 16303                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 16304                           ;	Fail-Safe Clock Monitor Enable bit
 16305                           ;	FCMEN = ON, FSCM timer enabled
 16306     8007                     	org	32775
 16307     8007  3FEC               	dw	16364
 16308                           
 16309                           ;Config register CONFIG2 @ 0x8008
 16310                           ;	Master Clear Enable bit
 16311                           ;	MCLRE = ON, MCLR pin is Master Clear function
 16312                           ;	Power-up Timer Enable bit
 16313                           ;	PWRTE = OFF, PWRT disabled
 16314                           ;	Low-Power BOR enable bit
 16315                           ;	LPBOREN = OFF, ULPBOR disabled
 16316                           ;	Brown-out reset enable bits
 16317                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 16318                           ;	Brown-out Reset Voltage Selection
 16319                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
 16320                           ;	Zero-cross detect disable
 16321                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
 16322                           ;	Peripheral Pin Select one-way control
 16323                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 16324                           ;	Stack Overflow/Underflow Reset Enable bit
 16325                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 16326     8008                     	org	32776
 16327     8008  3FFF               	dw	16383
 16328                           
 16329                           ;Config register CONFIG3 @ 0x8009
 16330                           ;	WDT Period Select bits
 16331                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 16332                           ;	WDT operating mode
 16333                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
 16334                           ;	WDT Window Select bits
 16335                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 16336                           ;	WDT input clock selector
 16337                           ;	WDTCCS = SC, Software Control
 16338     8009                     	org	32777
 16339     8009  3F9F               	dw	16287
 16340                           
 16341                           ;Config register CONFIG4 @ 0x800A
 16342                           ;	Boot Block Size Selection bits
 16343                           ;	BBSIZE = BB512, 512 words boot block size
 16344                           ;	Boot Block Enable bit
 16345                           ;	BBEN = OFF, Boot Block disabled
 16346                           ;	SAF Enable bit
 16347                           ;	SAFEN = OFF, SAF disabled
 16348                           ;	Application Block Write Protection bit
 16349                           ;	WRTAPP = OFF, Application Block not write protected
 16350                           ;	Boot Block Write Protection bit
 16351                           ;	WRTB = OFF, Boot Block not write protected
 16352                           ;	Configuration Register Write Protection bit
 16353                           ;	WRTC = OFF, Configuration Register not write protected
 16354                           ;	Storage Area Flash Write Protection bit
 16355                           ;	WRTSAF = OFF, SAF not write protected
 16356                           ;	Low Voltage Programming Enable bit
 16357                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 16358     800A                     	org	32778
 16359     800A  3FFF               	dw	16383
 16360                           
 16361                           ;Config register CONFIG5 @ 0x800B
 16362                           ;	UserNVM Program memory code protection bit
 16363                           ;	CP = OFF, UserNVM code protection disabled
 16364     800B                     	org	32779
 16365     800B  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    472
    Data        18
    BSS         151
    Persistent  49
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      11
    BANK0            80     23      80
    BANK1            80      0      79
    BANK2            80     34      78
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), NULL(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), NULL(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), NULL(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), NULL(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), NULL(), 

    LIN_getChecksum@data	PTR unsigned char  size(1) Largest target is 13
		 -> LIN_packet(BANK1[13]), 

    LIN_getFromTable@rxCommand	PTR const struct . size(2) Largest target is 140
		 -> scheduleTable(CODE[140]), NULL(NULL[0]), 

    LIN_getFromTable@rxCommand$data	PTR unsigned char  size(2) Largest target is 8
		 -> LIN_ADC_CURRENT_SENSE_CORRECTED_Data(BANK1[2]), LIN_ADC_CURRENT_SENSE_UNCORRECTED_Data(BANK1[2]), LIN_ADC_TEMP_SENSE_Data(BANK1[2]), LIN_ADC_VCC_SENSE_Data(BANK1[2]), 
		 -> LIN_AMBIENT_TEMPERATURE_Data(BANK1[2]), LIN_B1_COEF_Data(BANK0[1]), LIN_COMMAND_Data(BANK0[1]), LIN_CURRENT2COUNTS_SQUARED_Data(BANK1[2]), 
		 -> LIN_CURRENT_SENSE_OFFSET_Data(BANK1[2]), LIN_DAC_I_HW_TRIP_Data(BANK0[1]), LIN_DIAGNOSTIC_Data(BANK2[8]), LIN_ENTER_SLEEP_MODE_Data(BANK0[1]), 
		 -> LIN_FACTOR_RDSON_RTHJS_Data(BANK1[2]), LIN_FACTOR_RDSON_RTHSA_Data(BANK1[2]), LIN_GET_TRIGGER_TYPE_Data(BANK0[1]), LIN_HEATSINK_TEMPERATURE_Data(BANK1[2]), 
		 -> LIN_ISENSE_MAX_Data(BANK1[2]), LIN_JUNCTION_TEMPERATURE_Data(BANK1[2]), LIN_OUTPUT_STATE_Data(BANK0[1]), LIN_OVER_CURRENT_FAULT_Data(BANK0[1]), 
		 -> LIN_OVER_TEMP_FAULT_Data(BANK0[1]), LIN_REDUCED_DRIVE_TIME_Data(BANK0[1]), LIN_TCC_SAMPLE_TIME_Data(BANK1[2]), LIN_TEMPERATURE_RISE_JS_Data(BANK1[2]), 
		 -> LIN_TEMPERATURE_RISE_SA_Data(BANK1[2]), LIN_TJ_LIMIT_Data(BANK0[1]), LIN_TRIGGER_TYPE_Data(BANK0[1]), LIN_UVLO_FAULT_Data(BANK0[1]), 

    LIN_getPacket@data	PTR unsigned char  size(1) Largest target is 8
		 -> processLIN@tempRxData(BANK2[8]), 

    LIN_init@command	const PTR const struct . size(2) Largest target is 140
		 -> scheduleTable(CODE[140]), 

    LIN_init@processData	PTR FTN()void  size(2) Largest target is 1
		 -> processLIN(), 

    LIN_processData	PTR FTN()void  size(2) Largest target is 1
		 -> processLIN(), NULL(), 

    LIN_queuePacket@tempSchedule	PTR const struct . size(2) Largest target is 140
		 -> scheduleTable(CODE[140]), NULL(NULL[0]), 

    LIN_queuePacket@tempSchedule$data	PTR unsigned char  size(2) Largest target is 8
		 -> LIN_ADC_CURRENT_SENSE_CORRECTED_Data(BANK1[2]), LIN_ADC_CURRENT_SENSE_UNCORRECTED_Data(BANK1[2]), LIN_ADC_TEMP_SENSE_Data(BANK1[2]), LIN_ADC_VCC_SENSE_Data(BANK1[2]), 
		 -> LIN_AMBIENT_TEMPERATURE_Data(BANK1[2]), LIN_B1_COEF_Data(BANK0[1]), LIN_COMMAND_Data(BANK0[1]), LIN_CURRENT2COUNTS_SQUARED_Data(BANK1[2]), 
		 -> LIN_CURRENT_SENSE_OFFSET_Data(BANK1[2]), LIN_DAC_I_HW_TRIP_Data(BANK0[1]), LIN_DIAGNOSTIC_Data(BANK2[8]), LIN_ENTER_SLEEP_MODE_Data(BANK0[1]), 
		 -> LIN_FACTOR_RDSON_RTHJS_Data(BANK1[2]), LIN_FACTOR_RDSON_RTHSA_Data(BANK1[2]), LIN_GET_TRIGGER_TYPE_Data(BANK0[1]), LIN_HEATSINK_TEMPERATURE_Data(BANK1[2]), 
		 -> LIN_ISENSE_MAX_Data(BANK1[2]), LIN_JUNCTION_TEMPERATURE_Data(BANK1[2]), LIN_OUTPUT_STATE_Data(BANK0[1]), LIN_OVER_CURRENT_FAULT_Data(BANK0[1]), 
		 -> LIN_OVER_TEMP_FAULT_Data(BANK0[1]), LIN_REDUCED_DRIVE_TIME_Data(BANK0[1]), LIN_TCC_SAMPLE_TIME_Data(BANK1[2]), LIN_TEMPERATURE_RISE_JS_Data(BANK1[2]), 
		 -> LIN_TEMPERATURE_RISE_SA_Data(BANK1[2]), LIN_TJ_LIMIT_Data(BANK0[1]), LIN_TRIGGER_TYPE_Data(BANK0[1]), LIN_UVLO_FAULT_Data(BANK0[1]), 

    LIN_rxCommand	PTR const struct . size(2) Largest target is 140
		 -> scheduleTable(CODE[140]), NULL(NULL[0]), 

    LIN_rxCommand$data	PTR unsigned char  size(2) Largest target is 8
		 -> LIN_ADC_CURRENT_SENSE_CORRECTED_Data(BANK1[2]), LIN_ADC_CURRENT_SENSE_UNCORRECTED_Data(BANK1[2]), LIN_ADC_TEMP_SENSE_Data(BANK1[2]), LIN_ADC_VCC_SENSE_Data(BANK1[2]), 
		 -> LIN_AMBIENT_TEMPERATURE_Data(BANK1[2]), LIN_B1_COEF_Data(BANK0[1]), LIN_COMMAND_Data(BANK0[1]), LIN_CURRENT2COUNTS_SQUARED_Data(BANK1[2]), 
		 -> LIN_CURRENT_SENSE_OFFSET_Data(BANK1[2]), LIN_DAC_I_HW_TRIP_Data(BANK0[1]), LIN_DIAGNOSTIC_Data(BANK2[8]), LIN_ENTER_SLEEP_MODE_Data(BANK0[1]), 
		 -> LIN_FACTOR_RDSON_RTHJS_Data(BANK1[2]), LIN_FACTOR_RDSON_RTHSA_Data(BANK1[2]), LIN_GET_TRIGGER_TYPE_Data(BANK0[1]), LIN_HEATSINK_TEMPERATURE_Data(BANK1[2]), 
		 -> LIN_ISENSE_MAX_Data(BANK1[2]), LIN_JUNCTION_TEMPERATURE_Data(BANK1[2]), LIN_OUTPUT_STATE_Data(BANK0[1]), LIN_OVER_CURRENT_FAULT_Data(BANK0[1]), 
		 -> LIN_OVER_TEMP_FAULT_Data(BANK0[1]), LIN_REDUCED_DRIVE_TIME_Data(BANK0[1]), LIN_TCC_SAMPLE_TIME_Data(BANK1[2]), LIN_TEMPERATURE_RISE_JS_Data(BANK1[2]), 
		 -> LIN_TEMPERATURE_RISE_SA_Data(BANK1[2]), LIN_TJ_LIMIT_Data(BANK0[1]), LIN_TRIGGER_TYPE_Data(BANK0[1]), LIN_UVLO_FAULT_Data(BANK0[1]), 

    LIN_sendPacket@data	PTR unsigned char  size(1) Largest target is 13
		 -> LIN_packet(BANK1[13]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 13
		 -> LIN_packet(BANK1[13]), processLIN@tempRxData(BANK2[8]), 

    memcpy@d1	PTR void  size(2) Largest target is 13
		 -> LIN_packet(BANK1[13]), processLIN@tempRxData(BANK2[8]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 13
		 -> LIN_ADC_CURRENT_SENSE_CORRECTED_Data(BANK1[2]), LIN_ADC_CURRENT_SENSE_UNCORRECTED_Data(BANK1[2]), LIN_ADC_TEMP_SENSE_Data(BANK1[2]), LIN_ADC_VCC_SENSE_Data(BANK1[2]), 
		 -> LIN_AMBIENT_TEMPERATURE_Data(BANK1[2]), LIN_B1_COEF_Data(BANK0[1]), LIN_COMMAND_Data(BANK0[1]), LIN_CURRENT2COUNTS_SQUARED_Data(BANK1[2]), 
		 -> LIN_CURRENT_SENSE_OFFSET_Data(BANK1[2]), LIN_DAC_I_HW_TRIP_Data(BANK0[1]), LIN_DIAGNOSTIC_Data(BANK2[8]), LIN_ENTER_SLEEP_MODE_Data(BANK0[1]), 
		 -> LIN_FACTOR_RDSON_RTHJS_Data(BANK1[2]), LIN_FACTOR_RDSON_RTHSA_Data(BANK1[2]), LIN_GET_TRIGGER_TYPE_Data(BANK0[1]), LIN_HEATSINK_TEMPERATURE_Data(BANK1[2]), 
		 -> LIN_ISENSE_MAX_Data(BANK1[2]), LIN_JUNCTION_TEMPERATURE_Data(BANK1[2]), LIN_OUTPUT_STATE_Data(BANK0[1]), LIN_OVER_CURRENT_FAULT_Data(BANK0[1]), 
		 -> LIN_OVER_TEMP_FAULT_Data(BANK0[1]), LIN_packet(BANK1[13]), LIN_packet$data(BANK1[8]), LIN_REDUCED_DRIVE_TIME_Data(BANK0[1]), 
		 -> LIN_TCC_SAMPLE_TIME_Data(BANK1[2]), LIN_TEMPERATURE_RISE_JS_Data(BANK1[2]), LIN_TEMPERATURE_RISE_SA_Data(BANK1[2]), LIN_TJ_LIMIT_Data(BANK0[1]), 
		 -> LIN_TRIGGER_TYPE_Data(BANK0[1]), LIN_UVLO_FAULT_Data(BANK0[1]), 

    memcpy@s1	PTR const void  size(2) Largest target is 13
		 -> LIN_ADC_CURRENT_SENSE_CORRECTED_Data(BANK1[2]), LIN_ADC_CURRENT_SENSE_UNCORRECTED_Data(BANK1[2]), LIN_ADC_TEMP_SENSE_Data(BANK1[2]), LIN_ADC_VCC_SENSE_Data(BANK1[2]), 
		 -> LIN_AMBIENT_TEMPERATURE_Data(BANK1[2]), LIN_B1_COEF_Data(BANK0[1]), LIN_COMMAND_Data(BANK0[1]), LIN_CURRENT2COUNTS_SQUARED_Data(BANK1[2]), 
		 -> LIN_CURRENT_SENSE_OFFSET_Data(BANK1[2]), LIN_DAC_I_HW_TRIP_Data(BANK0[1]), LIN_DIAGNOSTIC_Data(BANK2[8]), LIN_ENTER_SLEEP_MODE_Data(BANK0[1]), 
		 -> LIN_FACTOR_RDSON_RTHJS_Data(BANK1[2]), LIN_FACTOR_RDSON_RTHSA_Data(BANK1[2]), LIN_GET_TRIGGER_TYPE_Data(BANK0[1]), LIN_HEATSINK_TEMPERATURE_Data(BANK1[2]), 
		 -> LIN_ISENSE_MAX_Data(BANK1[2]), LIN_JUNCTION_TEMPERATURE_Data(BANK1[2]), LIN_OUTPUT_STATE_Data(BANK0[1]), LIN_OVER_CURRENT_FAULT_Data(BANK0[1]), 
		 -> LIN_OVER_TEMP_FAULT_Data(BANK0[1]), LIN_packet(BANK1[13]), LIN_packet$data(BANK1[8]), LIN_REDUCED_DRIVE_TIME_Data(BANK0[1]), 
		 -> LIN_TCC_SAMPLE_TIME_Data(BANK1[2]), LIN_TEMPERATURE_RISE_JS_Data(BANK1[2]), LIN_TEMPERATURE_RISE_SA_Data(BANK1[2]), LIN_TJ_LIMIT_Data(BANK0[1]), 
		 -> LIN_TRIGGER_TYPE_Data(BANK0[1]), LIN_UVLO_FAULT_Data(BANK0[1]), 

    memset@dest	PTR void  size(1) Largest target is 13
		 -> LIN_packet(BANK1[13]), 

    memset@p	PTR unsigned char  size(1) Largest target is 13
		 -> LIN_packet(BANK1[13]), 

    S26$data	PTR unsigned char  size(2) Largest target is 8
		 -> LIN_ADC_CURRENT_SENSE_CORRECTED_Data(BANK1[2]), LIN_ADC_CURRENT_SENSE_UNCORRECTED_Data(BANK1[2]), LIN_ADC_TEMP_SENSE_Data(BANK1[2]), LIN_ADC_VCC_SENSE_Data(BANK1[2]), 
		 -> LIN_AMBIENT_TEMPERATURE_Data(BANK1[2]), LIN_B1_COEF_Data(BANK0[1]), LIN_COMMAND_Data(BANK0[1]), LIN_CURRENT2COUNTS_SQUARED_Data(BANK1[2]), 
		 -> LIN_CURRENT_SENSE_OFFSET_Data(BANK1[2]), LIN_DAC_I_HW_TRIP_Data(BANK0[1]), LIN_DIAGNOSTIC_Data(BANK2[8]), LIN_ENTER_SLEEP_MODE_Data(BANK0[1]), 
		 -> LIN_FACTOR_RDSON_RTHJS_Data(BANK1[2]), LIN_FACTOR_RDSON_RTHSA_Data(BANK1[2]), LIN_GET_TRIGGER_TYPE_Data(BANK0[1]), LIN_HEATSINK_TEMPERATURE_Data(BANK1[2]), 
		 -> LIN_ISENSE_MAX_Data(BANK1[2]), LIN_JUNCTION_TEMPERATURE_Data(BANK1[2]), LIN_OUTPUT_STATE_Data(BANK0[1]), LIN_OVER_CURRENT_FAULT_Data(BANK0[1]), 
		 -> LIN_OVER_TEMP_FAULT_Data(BANK0[1]), LIN_REDUCED_DRIVE_TIME_Data(BANK0[1]), LIN_TCC_SAMPLE_TIME_Data(BANK1[2]), LIN_TEMPERATURE_RISE_JS_Data(BANK1[2]), 
		 -> LIN_TEMPERATURE_RISE_SA_Data(BANK1[2]), LIN_TJ_LIMIT_Data(BANK0[1]), LIN_TRIGGER_TYPE_Data(BANK0[1]), LIN_UVLO_FAULT_Data(BANK0[1]), 

    scheduleTable$data	PTR unsigned char  size(2) Largest target is 8
		 -> LIN_ADC_CURRENT_SENSE_CORRECTED_Data(BANK1[2]), LIN_ADC_CURRENT_SENSE_UNCORRECTED_Data(BANK1[2]), LIN_ADC_TEMP_SENSE_Data(BANK1[2]), LIN_ADC_VCC_SENSE_Data(BANK1[2]), 
		 -> LIN_AMBIENT_TEMPERATURE_Data(BANK1[2]), LIN_B1_COEF_Data(BANK0[1]), LIN_COMMAND_Data(BANK0[1]), LIN_CURRENT2COUNTS_SQUARED_Data(BANK1[2]), 
		 -> LIN_CURRENT_SENSE_OFFSET_Data(BANK1[2]), LIN_DAC_I_HW_TRIP_Data(BANK0[1]), LIN_DIAGNOSTIC_Data(BANK2[8]), LIN_ENTER_SLEEP_MODE_Data(BANK0[1]), 
		 -> LIN_FACTOR_RDSON_RTHJS_Data(BANK1[2]), LIN_FACTOR_RDSON_RTHSA_Data(BANK1[2]), LIN_GET_TRIGGER_TYPE_Data(BANK0[1]), LIN_HEATSINK_TEMPERATURE_Data(BANK1[2]), 
		 -> LIN_ISENSE_MAX_Data(BANK1[2]), LIN_JUNCTION_TEMPERATURE_Data(BANK1[2]), LIN_OUTPUT_STATE_Data(BANK0[1]), LIN_OVER_CURRENT_FAULT_Data(BANK0[1]), 
		 -> LIN_OVER_TEMP_FAULT_Data(BANK0[1]), LIN_REDUCED_DRIVE_TIME_Data(BANK0[1]), LIN_TCC_SAMPLE_TIME_Data(BANK1[2]), LIN_TEMPERATURE_RISE_JS_Data(BANK1[2]), 
		 -> LIN_TEMPERATURE_RISE_SA_Data(BANK1[2]), LIN_TJ_LIMIT_Data(BANK0[1]), LIN_TRIGGER_TYPE_Data(BANK0[1]), LIN_UVLO_FAULT_Data(BANK0[1]), 

    sp__memcpy	PTR void  size(2) Largest target is 13
		 -> LIN_packet(BANK1[13]), processLIN@tempRxData(BANK2[8]), 

    sp__memset	PTR void  size(1) Largest target is 13
		 -> LIN_packet(BANK1[13]), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> LIN_timerHandler(), TMR0_DefaultInterruptHandler(), NULL(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> LIN_timerHandler(), TMR0_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _ProcessAnalogInputs->i1_CmdOutput
    i1_CmdOutput->i1_TMR1_WriteTimer
    _EUSART1_Receive_ISR->_EUSART1_RxDataHandler
    _EUSART1_DefaultErrorHandler->_EUSART1_RxDataHandler

Critical Paths under _main in BANK0

    _main->_EFuse
    _main->_LIN_handler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _LIN_Slave_Initialize->_LIN_init
    _LIN_setTimerHandler->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _LIN_handler->_LIN_queuePacket
    _processLIN->_LIN_getPacket
    _LIN_getPacket->_memcpy
    _EFuseInit->_CmdOutput
    _LIN_startTimer->_TMR0_WriteTimer
    _LIN_queuePacket->_LIN_sendPacket
    _LIN_sendPacket->_LIN_getChecksum
    _LIN_checkPID->_LIN_getFromTable
    _LIN_breakCheck->_EUSART1_Read
    _TCC_Curve->___lldiv
    ___lldiv->___lmul
    _CmdOutput->_TMR1_WriteTimer

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    _LIN_handler->_processLIN
    _EFuse->_TCC_Curve
    _TCC_Curve->___omul

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   12355
                                             32 BANK2      2     2      0
                          _CmdOutput
                              _EFuse
                          _EFuseInit
                        _LIN_handler
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1300
                     _ADC_Initialize
                    _CLC1_Initialize
                    _CLC2_Initialize
                    _CLC3_Initialize
                    _CLC4_Initialize
                    _CMP2_Initialize
                    _DAC1_Initialize
                 _EUSART1_Initialize
                     _FVR_Initialize
               _LIN_Slave_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LIN_Slave_Initialize                                 0     0      0     484
                           _LIN_init
 ---------------------------------------------------------------------------------
 (3) _LIN_init                                             5     1      4     484
                                              2 BANK0      5     1      4
                       _LIN_enableRx
                _LIN_setTimerHandler
                      _LIN_stopTimer
 ---------------------------------------------------------------------------------
 (4) _LIN_setTimerHandler                                  0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     605
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _DAC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CMP2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLC4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLC3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLC2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LIN_handler                                          3     3      0    9395
                                             20 BANK0      3     3      0
                                NULL *
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                     _LIN_breakCheck
                       _LIN_checkPID
                      _LIN_disableRx
                       _LIN_enableRx
                    _LIN_getChecksum
                   _LIN_getFromTable
                    _LIN_queuePacket
                     _LIN_startTimer
                      _LIN_stopTimer
                             _memset
                         _processLIN *
 ---------------------------------------------------------------------------------
 (2) _processLIN                                          14    14      0    2944
                                             13 BANK0      5     5      0
                                              0 BANK2      9     9      0
                          _CmdOutput
                          _EFuseInit
                      _LIN_getPacket
 ---------------------------------------------------------------------------------
 (3) _LIN_getPacket                                        2     2      0    1498
                                             11 BANK0      2     2      0
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               7     3      4     569
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) _EFuseInit                                            0     0      0     321
                          _CmdOutput
                        _TMR0_Reload
 ---------------------------------------------------------------------------------
 (4) _TMR0_Reload                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _LIN_stopTimer                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LIN_startTimer                                       1     1      0     186
                                              2 BANK0      1     1      0
                    _TMR0_WriteTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_WriteTimer                                      2     0      2     155
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _LIN_queuePacket                                      7     7      0    3165
                                             13 BANK0      7     7      0
                    _LIN_getChecksum
                     _LIN_sendPacket
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              11     5      6     800
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (3) _LIN_sendPacket                                       5     3      2    1274
                                              8 BANK0      5     3      2
                      _EUSART1_Write
                    _LIN_getChecksum
 ---------------------------------------------------------------------------------
 (4) _LIN_getChecksum                                      8     6      2     809
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (4) _EUSART1_Write                                        2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _LIN_enableRx                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LIN_disableRx                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LIN_checkPID                                         1     1      0    1115
                                              7 BANK0      1     1      0
                     _LIN_calcParity
                   _LIN_getFromTable
 ---------------------------------------------------------------------------------
 (2) _LIN_getFromTable                                     7     6      1     533
                                              0 BANK0      7     6      1
 ---------------------------------------------------------------------------------
 (3) _LIN_calcParity                                       3     3      0     489
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _LIN_breakCheck                                       0     0      0      37
                       _EUSART1_Read
            _EUSART1_get_last_status
 ---------------------------------------------------------------------------------
 (3) _EUSART1_get_last_status                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Read                                         2     2      0      37
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (8) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EFuse                                                2     2      0    1018
                                             21 BANK0      2     2      0
                          _CmdOutput
              _GetAmbientTemperature
                          _TCC_Curve
                    _Update_LIN_Data
 ---------------------------------------------------------------------------------
 (2) _Update_LIN_Data                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TCC_Curve                                           24    24      0     484
                                              8 BANK2     24    24      0
                            ___lldiv
                             ___lmul
                             ___omul
 ---------------------------------------------------------------------------------
 (3) ___omul                                              25     9     16      52
                                              0 BANK0     17     1     16
                                              0 BANK2      8     8      0
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     340
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8      68
                                             12 BANK0      9     1      8
                                              0 BANK2      5     5      0
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _GetAmbientTemperature                               11     9      2     213
                                              0 BANK0     11     9      2
 ---------------------------------------------------------------------------------
 (4) _CmdOutput                                            3     3      0     321
                                              2 BANK0      3     3      0
                    _TMR1_StartTimer
                     _TMR1_StopTimer
                    _TMR1_WriteTimer
                    _TMR2_Initialize
                         _TMR2_Start
                          _TMR2_Stop
 ---------------------------------------------------------------------------------
 (5) _TMR2_Stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR2_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR1_WriteTimer                                      2     0      2     290
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _TMR1_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           0     0      0     182
                                NULL *
                           _CLC2_ISR
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR0_ISR                                             0     0      0     182
                                NULL *
                   _LIN_timerHandler *
                _ProcessAnalogInputs
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _ProcessAnalogInputs                                  0     0      0     182
                  _ADC_GetConversion
                  _ADC_SelectChannel
                        i1_CmdOutput
 ---------------------------------------------------------------------------------
 (9) i1_CmdOutput                                          3     3      0     138
                                              2 COMMON     3     3      0
                  i1_TMR1_StartTimer
                   i1_TMR1_StopTimer
                  i1_TMR1_WriteTimer
                  i1_TMR2_Initialize
                       i1_TMR2_Start
                        i1_TMR2_Stop
 ---------------------------------------------------------------------------------
 (10) i1_TMR2_Stop                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (10) i1_TMR2_Start                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) i1_TMR2_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (10) i1_TMR1_WriteTimer                                   2     0      2     116
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (10) i1_TMR1_StopTimer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (10) i1_TMR1_StartTimer                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _ADC_SelectChannel                                    2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (9) _ADC_GetConversion                                    4     2      2      22
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (8) _LIN_timerHandler                                     1     1      0       0
                                              0 COMMON     1     1      0
                    i1_LIN_stopTimer
 ---------------------------------------------------------------------------------
 (9) i1_LIN_stopTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _EUSART1_Transmit_ISR                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _EUSART1_Receive_ISR                                  0     0      0       0
                                NULL *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (8) _EUSART1_DefaultOverrunErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART1_DefaultFramingErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART1_DefaultErrorHandler                          0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (8) _EUSART1_RxDataHandler                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _CLC2_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CmdOutput
     _TMR1_StartTimer
     _TMR1_StopTimer
     _TMR1_WriteTimer
     _TMR2_Initialize
     _TMR2_Start
     _TMR2_Stop
   _EFuse
     _CmdOutput
     _GetAmbientTemperature
     _TCC_Curve
       ___lldiv
         ___lmul (ARG)
       ___lmul
       ___omul
     _Update_LIN_Data
   _EFuseInit
     _CmdOutput
     _TMR0_Reload
   _LIN_handler
     NULL(Fake) *
     _EUSART1_Read *
     _EUSART1_is_rx_ready *
     _LIN_breakCheck *
       _EUSART1_Read
       _EUSART1_get_last_status
     _LIN_checkPID *
       _LIN_calcParity
       _LIN_getFromTable
     _LIN_disableRx *
     _LIN_enableRx *
     _LIN_getChecksum *
     _LIN_getFromTable *
     _LIN_queuePacket *
       _LIN_getChecksum
       _LIN_sendPacket
         _EUSART1_Write
         _LIN_getChecksum
       _memcpy
     _LIN_startTimer *
       _TMR0_WriteTimer
     _LIN_stopTimer *
     _memset *
     _processLIN *
       _CmdOutput
       _EFuseInit
       _LIN_getPacket
         _memcpy
         _memset
   _SYSTEM_Initialize
     _ADC_Initialize
     _CLC1_Initialize
     _CLC2_Initialize
     _CLC3_Initialize
     _CLC4_Initialize
     _CMP2_Initialize
     _DAC1_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _FVR_Initialize
     _LIN_Slave_Initialize
       _LIN_init
         _LIN_enableRx
         _LIN_setTimerHandler
           _TMR0_SetInterruptHandler
         _LIN_stopTimer
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
     _TMR2_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _CLC2_ISR *
   _EUSART1_Receive_ISR *
     NULL(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _TMR0_ISR *
     NULL(Fake) *
     _LIN_timerHandler *
       i1_LIN_stopTimer
     _ProcessAnalogInputs *
       _ADC_GetConversion
       _ADC_SelectChannel
       i1_CmdOutput
         i1_TMR1_StartTimer
         i1_TMR1_StopTimer
         i1_TMR1_WriteTimer
         i1_TMR2_Initialize
         i1_TMR2_Start
         i1_TMR2_Stop
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      5       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      F8       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     17      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      4F       8       98.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50     22      4E      10       97.5%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      F8      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sat Apr 13 17:14:18 2024

                        __end_of_LIN_breakCheck 0997                                  _adcTSense_prev 0020  
                         __end_of_LIN_getPacket 0B3C                           ??_LIN_setTimerHandler 0050  
                      _eusart1TxBufferRemaining 0024                               ??_Update_LIN_Data 004E  
                         __end_of_LIN_disableRx 088A                          __end_of_FVR_Initialize 0880  
                               ?_LIN_calcParity 0076                                 _DAC1_Initialize 089A  
                                           l310 0C32                                             l159 0592  
                                           l273 049C                                             l705 0AE2  
                                _TCC_Curve$3310 013C                                  _TCC_Curve$3309 0134  
                                _Trise_filtered 00A8                                     _triggerType 0031  
                               _timer1ReloadVal 00B4                        __end_of_LIN_getFromTable 0EAC  
                               _TMR2_Initialize 096B                               ??_CLC2_Initialize 004E  
                                           wreg 0009                           __end_of_scheduleTable 06CF  
                                _Trise_raw_curr 00A4                                            l1485 0DC7  
                                          l1494 0CEF                                            l5120 0EB6  
                                          l4304 0C2D                                            l4322 0AD7  
                                          l4306 0C10                                            l5106 0B8A  
                                          l5124 0ED7                                            l5204 0F22  
                                          l5300 044A                                            l5134 0DF5  
                                          l5206 0F37                                            l4318 09F9  
                                          l5144 0E28                                            l5136 0E05  
                                          l5400 072C                                            l4440 0E7E  
                                          l4432 0E73                                            l4336 0AF5  
                                          l5160 04AC                                            l5320 0470  
                                          l5304 0452                                            l5402 0730  
                                          l5410 074E                                            l4450 0E98  
                                          l4434 0E55                                            l5170 04E1  
                                          l5314 0468                                            l5306 0458  
                                          l5148 0E35                                            l4444 0E8B  
                                          l4436 0E78                                            l4428 0E71  
                                          l5172 04F4                                            l5164 04B1  
                                          l5156 04A4                                            l5252 03C0  
                                          l5324 0474                                            l4198 0A1A  
                                          l4462 07C6                                            l4390 0AFB  
                                          l5182 0522                                            l5174 0507  
                                          l5166 04B5                                            l5158 04A8  
                                          l5262 03D3                                            l5254 03C4  
                                          l5246 03B1                                            l5238 03A3  
                                          l4640 0995                                            l4464 07D0  
                                          l4392 0B0F                                            l5184 0526  
                                          l5168 04CB                                            l5424 07F7  
                                          l4490 0BBA                                            l4650 0A30  
                                          l5178 050D                                            l5282 0404  
                                          l5372 06DE                                            l4396 0B3C  
                                          l5188 053C                                            l5292 042D  
                                          l4830 0D18                                            l4486 0BB0  
                                          l5470 0EA0                                            l4646 0A2E  
                                          l5278 03FE                                            l5394 0715  
                                          l5386 06FB                                            l4836 0D1E  
                                          l5468 047C                                            l4838 0CF4  
                                _Trise_raw_prev 00A0                                            u2300 075E  
                                          _LATA 0018                                            u2310 0765  
                                          u2302 075F                                            _LATB 0019  
                                          _LATC 001A                                            u2410 0791  
                                          u2330 076B                                            u2500 07BD  
                                          u2420 0797                                            u2412 0792  
                                          u2404 078D                                            u2340 0771  
                                          u2332 076C                                            u2324 0767  
                                          u3125 0DF9                                            u3205 0107  
                                          u2510 07C4                                            u2502 07BE  
                                          u2430 079E                                            u2422 0798  
                                          u2350 0778                                            u2342 0772  
                                          u3215 0198                                            u3080 0EB3  
                                          u3145 0E06                                            u3225 022B  
                                          u2530 07CE                                            u2450 07A4  
                                          u2370 077E                                            u2290 0758  
                                          _T2PR 028D                                            u3155 0E1C  
                                          u2460 07AA                                            u2452 07A5  
                                          u2444 07A0                                            u2380 0784  
                                          u2372 077F                                            u2364 077A  
                                          u2292 0759                                            u3165 0E29  
                                          u3405 06E5                                            u2710 08B2  
                                          u2470 07B1                                            u2462 07AB  
                                          u2390 078B                                            u2382 0785  
                                          u3345 0426                                            u2490 07B7  
                             ??_CMP2_Initialize 004E                                            u3435 070B  
                                          u2492 07B8                                            u2484 07B3  
                                          u2565 0BBB                                            u3445 071C  
                                          u2575 0BC2                                            u3465 0749  
                                          _PMD0 0796                                            u3477 07DF  
                                          _PMD1 0797                                            _PMD2 0798  
                                          u2775 0CE9                                            u3487 07ED  
                                          _PMD3 0799                                            _PMD4 079A  
                                          u2785 0D16                                            u3497 0B72  
                                          _PMD5 079B                                            u2795 0CFD  
                                          _WPUA 1F39                                            _WPUB 1F44  
                                          _WPUC 1F4F                                  _LIN_sendPacket 0AF8  
                                 _EUSART1_Write 0AD6                                     _outputState 002F  
                                          _main 07D2                                   ?_EUSART1_Read 0076  
                                          fsr0h 0005                                            fsr1h 0007  
                                          indf0 0000                                            fsr0l 0004  
                                          indf1 0001                                            fsr1l 0006  
                                          btemp 007E                                __end_of_CLC2_ISR 0862  
                                          start 002C                               ??_CLC3_Initialize 004E  
                                 processLIN@cmd 0120                                 ?_LIN_breakCheck 0076  
                                  _CLC1GLS1bits 1E17                                    _CLC1GLS3bits 1E19  
                       __end_of_TMR0_Initialize 0A84                  ??_TMR0_DefaultInterruptHandler 0076  
                               ?_FVR_Initialize 0076                        __end_ofi1_TMR1_StopTimer 0870  
                 __end_of_OSCILLATOR_Initialize 0920                               LIN_sendPacket@pid 0056  
                         _eusart1RxStatusBuffer 0142                                           ?_main 0076  
                               LIN_init@command 0050                               i1CmdOutput@enable 007A  
                               _TMR1_StartTimer 0873                                 __end_of___lldiv 0E46  
                                         _T1CLK 0211                                           _T1CON 020E  
                                         _T2CON 028E                                           _T2HLT 028F  
                                         _T2TMR 028C                                           _T2RST 0291  
                                         i1l711 0AD3                                 _TMR0_WriteTimer 08B4  
                                         i1l854 0A4A                 _LIN_CURRENT2COUNTS_SQUARED_Data 00DD  
                                         _OSCEN 0891                                           _TMR0H 059D  
                                         _TMR1H 020D                                           _TMR0L 059C  
                                         _TMR1L 020C                                           _EFuse 06CF  
                                         _TRISA 0012                                           _TRISB 0013  
                                         _TRISC 0014                                __end_of_LIN_init 0AB8  
                         __end_of_LIN_stopTimer 0894                             ___lmul@multiplicand 0052  
                     ?_TMR0_SetInterruptHandler 004E                               ??_CLC4_Initialize 004E  
                          _EUSART1_Transmit_ISR 0AB8                                __end_of_TMR0_ISR 0A52  
                                         _Tsink 0038                          _current2counts_squared 0067  
                                   ?_TMR2_Start 0076                          __end_of_LIN_sendPacket 0B1A  
                  _LIN_TEMPERATURE_RISE_SA_Data 00C5                    _LIN_TEMPERATURE_RISE_JS_Data 00C7  
                                ?_EUSART1_Write 0076                         __end_of_TMR1_Initialize 0A9D  
                                         pclath 000A                                  _LIN_startTimer 0943  
                                ??_EUSART1_Read 004E                                           status 0003  
                                         wtemp0 007E      __end_of_EUSART1_DefaultFramingErrorHandler 085F  
          ??_EUSART1_DefaultFramingErrorHandler 0076             ?_EUSART1_DefaultFramingErrorHandler 0076  
            _EUSART1_DefaultFramingErrorHandler 085E                                 _TMR1_WriteTimer 0A0C  
                         _LIN_OUTPUT_STATE_Data 0046                                ?_LIN_getChecksum 004E  
                   LIN_queuePacket@tempSchedule 0060                                 __initialization 002E  
                                  ?_LIN_handler 0076                                    ?i1_TMR2_Stop 0076  
                    __end_of_EUSART1_Initialize 0CDA                                    __end_of_main 07FE  
                       __end_of_DAC1_Initialize 08A0                         __end_of_TMR2_Initialize 0979  
                   ?_INTERRUPT_InterruptManager 0076                             _LIN_UVLO_FAULT_Data 0043  
                                        ??_main 0140                                          ?_EFuse 0076  
                                  _iSenseOffset 003A                           ?_EUSART1_Transmit_ISR 0076  
                            LIN_sendPacket@data 0057                                          _ADCON0 009D  
                                        _ADCON1 009E                                          _CM2NCH 0996  
                                        _CM2PCH 0997                          __end_of_LIN_startTimer 0950  
                                        _ADRESH 009C                                 ?_LIN_sendPacket 0056  
                                        _ADRESL 009B                                          _ANSELA 1F38  
                                        _ANSELB 1F43                                          _ANSELC 1F4E  
                                        _T0CON0 059E                                          _T0CON1 059F  
                                  ?i1_CmdOutput 0076                                          _T1GATE 0210  
                                        _T1GCON 020F                                          _RC1REG 0119  
                                        _RC1STA 011D                                          i1l1114 0A64  
                       TMR1_WriteTimer@timerVal 004E                                          i1l1062 000E  
                                        i1l1072 002A                                          i1l1065 0017  
                        _LIN_DAC_I_HW_TRIP_Data 0049                                          i1l1067 0021  
                                        _RB7PPS 1F1F                                          _ODCONA 1F3A  
                                        _ODCONB 1F45                                          _ODCONC 1F50  
                                        _RC6PPS 1F26                                          i1l4020 0C79  
                                        i1l4030 0C96                                          i1l1471 05B8  
                                        i1l4026 0C87                                          _RC7PPS 1F27  
                                        i1l1485 0D6A                                          i1l3326 0983  
                                        i1l3806 060C                                          i1l3816 062F  
                                        i1l3790 05D5                                          _INLVLA 1F3C  
                                        _INLVLB 1F47                                          _INLVLC 1F52  
                                        _FVRCON 090C                                          u157_25 05C2  
                                        u158_25 05CA                                          u350_27 05A9  
                                        u351_27 05F0                                          u352_27 0A5F  
                                        _OSCFRQ 0893                                          _TX1REG 011A  
                                        _TX1STA 011E                                 _LIN_processData 016C  
                         _LIN_TRIGGER_TYPE_Data 004C                               __end_of_TCC_Curve 024D  
                             __end_of_EFuseInit 0B82                                    ?_TMR0_Reload 0076  
                     i1TMR1_WriteTimer@timerVal 0076                                          ___lmul 0BA8  
                       __end_of_TMR1_StartTimer 0876                                          ___omul 0EAC  
                               _LIN_queuePacket 0F13                               __end_of_TMR2_Stop 087C  
                       __end_of_TMR0_WriteTimer 08BC                                       ??___lldiv 0062  
                      ?_EUSART1_SetErrorHandler 004E                                          _memcpy 0B82  
                              ?_TMR0_Initialize 0076                                          _memset 09F6  
              ??_EUSART1_SetOverrunErrorHandler 0050                 ?_EUSART1_SetOverrunErrorHandler 004E  
                                _PMD_Initialize 08FC                                       ?_CLC2_ISR 0076  
                              _LIN_rxInProgress 002B                        ADC_GetConversion@channel 0079  
                               ??_EUSART1_Write 004E        TMR0_SetInterruptHandler@InterruptHandler 004E  
                               _CLC1_Initialize 09B7                                 ?_LIN_startTimer 0076  
                       __end_of_TMR1_WriteTimer 0A23                                 _eusart1RxBuffer 014A  
                               _eusart1TxBuffer 0152                                ?_TMR1_Initialize 0076  
                             __end_of_CmdOutput 0DE2                               _SYSTEM_Initialize 0C36  
                               _Update_LIN_Data 0F89                         __end_of__initialization 0063  
                       ??_GetAmbientTemperature 0050                              ?_SYSTEM_Initialize 0076  
                                 ?_LIN_checkPID 0076                                   __end_of_EFuse 0751  
                 __end_of_EUSART1_RxDataHandler 09F6                                       ?_LIN_init 0050  
                                __pcstackCOMMON 0076                                   ?_LIN_enableRx 0076  
                              ??_LIN_calcParity 004E                                 LIN_sendPacket@i 005A  
                                  __pidataBANK0 0920                                    __pidataBANK1 0904  
                           ??_SYSTEM_Initialize 0055                                   ?i1_TMR2_Start 0076  
                              ?_DAC1_Initialize 0076                                   _dac_i_hw_trip 006B  
                                     ?_TMR0_ISR 0076                                 _CLC2_Initialize 09CB  
                              ?_TMR2_Initialize 0076                          __end_of_PMD_Initialize 0904  
                          __end_of_EUSART1_Read 0B5F                                 _CMP2_Initialize 090C  
                        LIN_handler@rxDataIndex 0027                          ??_EUSART1_Transmit_ISR 0076  
                                       ??_EFuse 0063                                      ??_CLC2_ISR 0076  
                             ?_LIN_getFromTable 004E                     __end_of_EUSART1_Receive_ISR 0C99  
                        LIN_handler@LIN_rxState 0028                              ??_LIN_getFromTable 004F  
                     __end_of_SYSTEM_Initialize 0C66                                 _CLC3_Initialize 09A6  
                                 _eusart1RxHead 0073                                   _eusart1TxHead 0026  
                                 _eusart1RxTail 0072                                      __pbssBANK0 0020  
                                    __pbssBANK1 00A0                                      __pbssBANK2 0142  
                                 _eusart1TxTail 0025               _EUSART1_TxDefaultInterruptHandler 016A  
               ??_EUSART1_SetRxInterruptHandler 0050                        ?_EUSART1_get_last_status 0076  
                              ??_LIN_breakCheck 0050                                  ??_LIN_checkPID 0055  
                   __end_of_LIN_setTimerHandler 08FC                         __end_of_LIN_queuePacket 0F89  
                              _LIN_B1_COEF_Data 0048                 __end_of_EUSART1_SetErrorHandler 08CC  
                                ??_LIN_enableRx 004E                                ??_FVR_Initialize 004E  
                                    __pmaintext 07D2                                _LIN_timerHandler 092A  
                                    ??_LIN_init 0054                                  ??i1_TMR2_Start 0076  
                           LIN_getChecksum@data 004F                __end_of_TMR0_SetInterruptHandler 08F4  
                                       ?___lmul 004E                                         ?___omul 004E  
                              ?_TMR1_StartTimer 0076                                      ??_TMR0_ISR 007B  
                               _CLC4_Initialize 0997                                      __pintentry 0004  
                              ?_TMR0_WriteTimer 004E                                         _CM2CON0 0994  
                                       _CM2CON1 0995                                         _CLC1CON 1E10  
                                       _CLC2CON 1E1A                                         ?_memcpy 004E  
                                       _CLC3CON 1E24                                         _CLC4CON 1E2E  
                                       ?_memset 004E                                         _CLC1POL 1E11  
                                       _CLC2POL 1E1B                                         _CLC3POL 1E25  
                           ___omul@multiplicand 0056                                  ___lmul@product 0056  
                                       _CLC4POL 1E2F                                 ?_PMD_Initialize 0076  
                         LIN_getChecksum@length 0052                               ?i1_TMR1_StopTimer 0076  
        __end_of_EUSART1_SetFramingErrorHandler 08D4                  _EUSART1_SetFramingErrorHandler 08CC  
                              _LIN_timerRunning 002A                         __end_of_CLC1_Initialize 09CB  
                       _LIN_ADC_TEMP_SENSE_Data 00D3                              ??i1_TMR1_StopTimer 0076  
        _LIN_ADC_CURRENT_SENSE_UNCORRECTED_Data 00D5                    ?_EUSART1_DefaultErrorHandler 0076  
                                       _SP1BRGH 011C                                         _SP1BRGL 011B  
                                       _OSCCON1 088D                                         _OSCCON3 088F  
                       __end_of_Update_LIN_Data 1000                                         _OSCSTAT 0890  
                                       _OSCTUNE 0892                                         _SLRCONA 1F3B  
                                       _SLRCONB 1F46                                         _SLRCONC 1F51  
                                  ??_TMR2_Start 004E                                ?_TMR1_WriteTimer 004E  
                                       _a1_coef 00E5                                         _b1_coef 006A  
                       LIN_getChecksum@checksum 0054                GetAmbientTemperature@temperature 0057  
                     _LIN_GET_TRIGGER_TYPE_Data 0045                         __end_of_CLC2_Initialize 09E0  
                              _adcVccSense_curr 0040                                       _CLCIN0PPS 1EBB  
                          _ADC_InterruptHandler 00B2                                _adcVccSense_prev 00B0  
                  __end_of_LIN_Slave_Initialize 095D                         __end_of_CMP2_Initialize 0916  
                   _LIN_REDUCED_DRIVE_TIME_Data 0047                                         ___lldiv 0DE2  
                           _EUSART1_is_rx_ready 08AC                              __end_of_TMR2_Start 0004  
                     _LIN_ENTER_SLEEP_MODE_Data 004B                             _ProcessAnalogInputs 0593  
                                       __ptext1 0C36                                         __ptext2 0A84  
                                       __ptext3 0A6B                                         __ptext4 08FC  
                                       __ptext5 0BD7                                         __ptext6 0916  
                                       __ptext7 0950                                         __ptext8 0A9D  
                                       __ptext9 08F4                                       _T1CONbits 020E  
                       __end_of_CLC3_Initialize 09B7                           _OSCILLATOR_Initialize 0916  
                              ??_LIN_sendPacket 0058                                       _T2CONbits 028E  
                                    _isense_max 0065                              _EUSART1_Initialize 0C99  
                      ??_PIN_MANAGER_Initialize 004E                   ??_EUSART1_DefaultErrorHandler 0077  
                                       clrloop0 08A1                 __end_of_EUSART1_get_last_status 0800  
                     LIN_getFromTable@rxCommand 0053                            end_of_initialization 0063  
                          ?_EUSART1_is_rx_ready 0076                             ?_EUSART1_Initialize 0076  
                                ___omul@product 0120                                         memcpy@d 0055  
                                       memcpy@n 0052                                         memcpy@s 0057  
                          ?_ProcessAnalogInputs 0076                                         init_ram 08A6  
                                       memset@c 004E                                         memset@n 0050  
                                       memset@p 0053                     _EUSART1_OverrunErrorHandler 0164  
                                       initloop 08A7                         __end_of_CLC4_Initialize 09A6  
                              ?_LIN_queuePacket 0076                                 ___lldiv@divisor 005A  
         __end_of_EUSART1_SetRxInterruptHandler 08E4                   _EUSART1_SetRxInterruptHandler 08DC  
                               ___lldiv@counter 0124                               ??i1_LIN_stopTimer 0076  
                                     _TCC_Curve 0067                                   _LIN_getPacket 0B1A  
                                 _LIN_disableRx 0885                            ??_EUSART1_Initialize 0050  
                                     _EFuseInit 0B5F                               LIN_getPacket@data 0059  
                      _TMR0_SetInterruptHandler 08EC                                       _TMR2_Stop 0879  
                                    _processLIN 049D                            __end_of_LIN_checkPID 0A3A  
                              ?_CLC1_Initialize 0076            _LIN_ADC_CURRENT_SENSE_CORRECTED_Data 00D1  
                           LIN_init@tableLength 0054                                ??_LIN_startTimer 0050  
                               CmdOutput@enable 0052                                       _TRISCbits 0014  
                          __end_of_LIN_enableRx 088F                                ?_Update_LIN_Data 0076  
                                 _scheduleTable 0643                            __end_ofi1_TMR2_Start 0864  
                            _factor_rdson_rthjs 00E9                              _factor_rdson_rthsa 00E7  
                           EUSART1_Write@txData 004F                           ??_EUSART1_is_rx_ready 004E  
                         ??_ProcessAnalogInputs 007B                                     _CM2CON0bits 0994  
                                  _EUSART1_Read 0B3C                                ?_CLC2_Initialize 0076  
                                     _CmdOutput 0D85                   __end_of_GetAmbientTemperature 0D29  
                                 _LIN_rxCommand 00ED                            _timer0ReloadVal16bit 0070  
                              _overCurrentFault 002E                                      ?_TCC_Curve 0076  
                                ?_LIN_getPacket 0076                                ?_CMP2_Initialize 0076  
                                ?_LIN_disableRx 0076                                     _CLC1CONbits 1E10  
                                __end_of___lmul 0BD7                                  __end_of___omul 0F13  
                                   _CLC3CONbits 1E24                                      ?_EFuseInit 0076  
                 _LIN_CURRENT_SENSE_OFFSET_Data 00CF                                  _ADC_Initialize 08BC  
                                _TMR1_StopTimer 0876                                      ?_TMR2_Stop 0076  
                                __end_of_memcpy 0BA8                          ?_OSCILLATOR_Initialize 0076  
                                __end_of_memset 0A0C                                     _CLC1POLbits 1E11  
                                   _CLC2POLbits 1E1B                                ?_CLC3_Initialize 0076  
                           start_initialization 002E                                   _LIN_stopTimer 088F  
                      __end_of_LIN_timerHandler 0936                            _LIN_Slave_Initialize 0950  
                 _LIN_JUNCTION_TEMPERATURE_Data 00C9   EUSART1_SetRxInterruptHandler@interruptHandler 004E  
 EUSART1_SetTxInterruptHandler@interruptHandler 004E                           __end_of_EUSART1_Write 0AF8  
                                   _CLCDATAbits 1E0F                           LIN_startTimer@timeout 0050  
                             ___omul@multiplier 004E                          _LIN_ADC_VCC_SENSE_Data 00D7  
                              ?_CLC4_Initialize 0076                                      ?_CmdOutput 0076  
                             LIN_calcParity@CMD 004F                               LIN_calcParity@PID 0050  
                              ??_PMD_Initialize 004E                                        ??___lmul 0056  
                                      ??___omul 005E                           _EUSART1_RxDataHandler 09E0  
                ?_EUSART1_SetRxInterruptHandler 004E                          __end_of_ADC_Initialize 08C4  
                        __end_of_TMR1_StopTimer 0879                                     __pdataBANK0 0065  
                                   __pdataBANK1 00E3                                        ??_memcpy 0054  
                                      ??_memset 0052                            processLIN@tempRxData 0121  
                                    memset@dest 0054                             _LIN_DIAGNOSTIC_Data 015A  
                                   ?_processLIN 0076                               i1_TMR2_Initialize 095D  
                                     _Tjunction 0036                                  _eusart1RxCount 0023  
                           LIN_init@processData 0052                              ?i1_TMR2_Initialize 0076  
                                ?_LIN_stopTimer 0076                                     __pbssCOMMON 0070  
             _EUSART1_RxDefaultInterruptHandler 0168                                       ___latbits 0002  
                                 __pcstackBANK0 004E                                   __pcstackBANK2 0120  
                             ??_LIN_getChecksum 0050                           ?_LIN_Slave_Initialize 0076  
                           ??i1_TMR2_Initialize 0076                                  _temperatureLUT 024D  
               ??_EUSART1_SetTxInterruptHandler 0050                ??_EUSART1_SetFramingErrorHandler 0050  
               ?_EUSART1_SetFramingErrorHandler 004E                           _TMR0_InterruptHandler 00EB  
                                     __pnvBANK0 006F                                       __pnvBANK1 00EB  
                                     __pnvBANK2 0162                                 ??_LIN_getPacket 0059  
                        _PIN_MANAGER_Initialize 0BD7                                   ??_LIN_handler 0062  
                              LIN_getChecksum@i 0053                                 ??_LIN_disableRx 004E  
                                 ??i1_TMR2_Stop 0076                              LIN_getChecksum@pid 004E  
                                   ??_TCC_Curve 0128                               _ADC_SelectChannel 0936  
                          LIN_sendPacket@length 0059                                        ?___lldiv 005A  
                               ?_ADC_Initialize 0076                                 ?_TMR1_StopTimer 0076  
                            ?_ADC_SelectChannel 0076                                     ??_EFuseInit 0053  
                     __end_ofi1_TMR2_Initialize 096B                               i1_TMR1_StartTimer 086A  
                                      _DAC1CON0 090E                                        _DAC1CON1 090F  
                  ??_INTERRUPT_InterruptManager 007B                                     ??_TMR2_Stop 004E  
                            ?i1_TMR1_StartTimer 0076                                        _BAUD1CON 011F  
                                      _CLC1GLS0 1E16                                        _CLC1GLS1 1E17  
                                      _CLC1GLS2 1E18                                        _CLC1GLS3 1E19  
                                      _CLC2GLS0 1E20                                        _CLC2GLS1 1E21  
                                      _CLC2GLS2 1E22                                        _CLC2GLS3 1E23  
                                      _CLC3GLS0 1E2A                                        _CLC3GLS1 1E2B  
                                      _CLC3GLS2 1E2C                                        _CLC3GLS3 1E2D  
                   _LIN_FACTOR_RDSON_RTHSA_Data 00DF                     _LIN_FACTOR_RDSON_RTHJS_Data 00E1  
                                      _CLC4GLS0 1E34                                        _CLC4GLS1 1E35  
                                      _CLC4GLS2 1E36                                        _CLC4GLS3 1E37  
                                      _CLC1SEL0 1E12                                        _CLC1SEL1 1E13  
                                      _CLC1SEL2 1E14                                        _CLC1SEL3 1E15  
                                      _CLC2SEL0 1E1C                                        _CLC2SEL1 1E1D  
    __end_of_EUSART1_DefaultOverrunErrorHandler 086A            ??_EUSART1_DefaultOverrunErrorHandler 0076  
           ?_EUSART1_DefaultOverrunErrorHandler 0076                                        _CLC2SEL2 1E1E  
            _EUSART1_DefaultOverrunErrorHandler 0867                                        _CLC2SEL3 1E1F  
                                      _CLC3SEL0 1E26                                        _CLC3SEL1 1E27  
                                      _CLC3SEL2 1E28                                        _CLC3SEL3 1E29  
                                      _CLC4SEL0 1E30                                        _CLC4SEL1 1E31  
                                      _CLC4SEL2 1E32                                        _CLC4SEL3 1E33  
                           ??_ADC_SelectChannel 0076                            _EUSART1_ErrorHandler 0162  
                                      _CLC2_ISR 0860                        _LIN_OVER_TEMP_FAULT_Data 0042  
                       _EUSART1_SetErrorHandler 08C4                             ??i1_TMR1_StartTimer 0076  
                        __end_of_temperatureLUT 0399                                        _T2CLKCON 0290  
                                 ??i1_CmdOutput 0078                                 LIN_checkPID@pid 0055  
                               i1_LIN_stopTimer 0880                               i1_TMR1_WriteTimer 0979  
                             ??_TMR0_Initialize 0050         EUSART1_SetErrorHandler@interruptHandler 004E  
                                      _LATBbits 0019                    _LIN_AMBIENT_TEMPERATURE_Data 00CD  
                            ?i1_TMR1_WriteTimer 0076                                       clear_ram0 08A0  
                                      _PIE0bits 0716                                        _PIE3bits 0719  
                                   ??_CmdOutput 0050                                        _PIE5bits 071B  
                                  _LIN_checkPID 0A23                       __end_of_ADC_SelectChannel 0943  
                    ??_TMR0_SetInterruptHandler 0050                                       _ticks_1ms 00B6  
                                      _PIR0bits 070C                                        _PIR2bits 070E  
                                      _PIR3bits 070F                                        _PIR4bits 0710  
                                      _PIR5bits 0711                                   ??_TMR0_Reload 004E  
                                      _RX1DTPPS 1ECB                                        _LIN_init 0A9D  
                        ?_EUSART1_RxDataHandler 0076                       __end_ofi1_TMR1_StartTimer 086D  
                                  _LIN_enableRx 088A                             ??i1_TMR1_WriteTimer 0078  
                                      _TMR0_ISR 0A3A                                _LIN_COMMAND_Data 004D  
                                  i1_TMR2_Start 0862                                LIN_getPacket@cmd 005A  
                             ??_TMR1_Initialize 004E                             __end_of_LIN_handler 049D  
                                    _ADCON0bits 009D                             __end_ofi1_TMR2_Stop 0873  
                               ??_LIN_stopTimer 004E                        ADC_SelectChannel@channel 0077  
                        ??_LIN_Slave_Initialize 0055                          GetAmbientTemperature@i 0056  
                                     _uvloFault 002D                        _LIN_TCC_SAMPLE_TIME_Data 00D9  
                     __end_ofi1_TMR1_WriteTimer 0988                               ___lmul@multiplier 004E  
                             ??_DAC1_Initialize 004E                    GetAmbientTemperature@adcTemp 0054  
                             ??_TMR2_Initialize 004E                           EUSART1_Read@readValue 004F  
                           __end_ofi1_CmdOutput 0D85                                        _Tambient 006D  
                              _LIN_getFromTable 0E46                               _LIN_TJ_LIMIT_Data 004A  
         __end_of_EUSART1_SetTxInterruptHandler 08EC                   _EUSART1_SetTxInterruptHandler 08E4  
                                     memcpy@tmp 0054                               _ADC_GetConversion 0A52  
                       ??_OSCILLATOR_Initialize 004E                              ?_ADC_GetConversion 0076  
                       _EUSART1_get_last_status 07FE                                        _Trise_js 0034  
                                      _Trise_sa 0032                                  _adcISense_corr 003C  
                                _adcISense_curr 003E                                  _adcISense_prev 00AC  
                           __end_of_TMR0_Reload 089A                       ??_EUSART1_SetErrorHandler 0050  
           __end_of_EUSART1_DefaultErrorHandler 0867                     _EUSART1_DefaultErrorHandler 0864  
                           ??_ADC_GetConversion 0078                     __end_of_EUSART1_is_rx_ready 08B4  
                       __end_ofi1_LIN_stopTimer 0885                     __end_of_ProcessAnalogInputs 0643  
                                      __ptext10 08EC                                        __ptext11 087C  
                                      __ptext20 0997                                        __ptext12 0C99  
                                      __ptext21 09A6                                        __ptext13 08E4  
                                      __ptext30 0894                                        __ptext22 09CB  
                                      __ptext14 08DC                                        __ptext31 088F  
                                      __ptext23 09B7                                        __ptext15 08D4  
                                      __ptext40 0885                                        __ptext32 0943  
                                      __ptext24 08BC                                        __ptext16 08CC  
                                      __ptext41 0A23                                        __ptext33 08B4  
                                      __ptext25 0399                                        __ptext17 08C4  
                                      __ptext50 0067                                        __ptext42 0E46  
                                      __ptext34 0F13                                        __ptext26 049D  
                                      __ptext18 089A                                        __ptext51 0EAC  
                                      __ptext43 0751                                        __ptext35 0B82  
                                      __ptext27 0B1A                                        __ptext19 090C  
                                      __ptext60 0876                                        __ptext52 0BA8  
                                      __ptext44 0988                                        __ptext36 0AF8  
                                      __ptext28 09F6                                        __ptext61 0873  
                                      __ptext53 0DE2                                        __ptext45 07FE  
                                      __ptext37 0C06                                        __ptext29 0B5F  
                                      __ptext70 095D                                        __ptext54 0CDA  
                                      __ptext46 0B3C                                        __ptext38 0AD6  
                                      __ptext71 0979                                        __ptext63 0A3A  
                                      __ptext55 0D85                                        __ptext47 08AC  
                                      __ptext39 088A                                        __ptext80 085E  
                                      __ptext72 086D                                        __ptext64 092A  
                                      __ptext56 0879                                        __ptext48 06CF  
                                      __ptext81 0864                                        __ptext73 086A  
                                      __ptext65 085F                                        __ptext57 0002  
                                      __ptext49 0F89                                        __ptext82 09E0  
                                      __ptext74 0936                                        __ptext66 0593  
                                      __ptext58 096B                                        __ptext83 0860  
                                      __ptext75 0A52                                        __ptext67 0D29  
                                      __ptext59 0A0C                                        __ptext76 0880  
                                      __ptext68 0870                                        __ptext77 0AB8  
                                      __ptext69 0862                                        __ptext78 0C66  
                                      __ptext79 0867                               ?_LIN_timerHandler 0076  
                                 _overTempFault 002C                               ??_TMR1_StartTimer 004E  
                       TMR0_WriteTimer@timerVal 004E                              ??_LIN_timerHandler 0076  
                             ??_TMR0_WriteTimer 0050                                i1_TMR1_StopTimer 086D  
                        LIN_getFromTable@length 0052            __end_of_TMR0_DefaultInterruptHandler 0860  
                  _TMR0_DefaultInterruptHandler 085F                       __end_of_ADC_GetConversion 0A6B  
                                    _RC1STAbits 011D                                        _tj_limit 006C  
                           _LIN_rxCommandLength 006F  EUSART1_SetOverrunErrorHandler@interruptHandler 004E  
                                   _LIN_handler 0399                                     i1_TMR2_Stop 0870  
                         _GetAmbientTemperature 0CDA                                        int$flags 007E  
                           _LIN_ISENSE_MAX_Data 00DB                                 _LIN_getChecksum 0C06  
            __end_of_INTERRUPT_InterruptManager 002C                      _INTERRUPT_InterruptManager 0004  
                             ??_TMR1_WriteTimer 0050                     _EUSART1_FramingErrorHandler 0166  
                           _EUSART1_Receive_ISR 0C66                                    ??_processLIN 005B  
                                   _LIN_timeout 0069                                 _tcc_sample_time 00E3  
                                _LIN_calcParity 0751                                      _INTCONbits 000B  
                                      memcpy@d1 004E                                        memcpy@s1 0050  
                           _LIN_setTimerHandler 08F4                                     i1_CmdOutput 0D29  
                                      intlevel1 0000                                   _CountCallBack 0029  
                          ?_EUSART1_Receive_ISR 0076                                    _DAC1CON1bits 090F  
                              ___lldiv@dividend 005E                         ?_PIN_MANAGER_Initialize 0076  
        __end_of_EUSART1_SetOverrunErrorHandler 08DC                  _EUSART1_SetOverrunErrorHandler 08D4  
                         LIN_getFromTable@param 004E                    __end_of_EUSART1_Transmit_ISR 0AD6  
                            __end_of_processLIN 0593                                ??_ADC_Initialize 004E  
                              ??_TMR1_StopTimer 004E                   ?_TMR0_DefaultInterruptHandler 0076  
                     ??_EUSART1_get_last_status 004E                                     _TMR0_Reload 0894  
                                    _LIN_packet 00B8                            ?_LIN_setTimerHandler 0076  
                           _adcISense_OneMOSFET 00AE  EUSART1_SetFramingErrorHandler@interruptHandler 004E  
                ?_EUSART1_SetTxInterruptHandler 004E                                  _LIN_breakCheck 0988  
                   _LIN_OVER_CURRENT_FAULT_Data 0044                              _eusart1RxLastError 0022  
                        __end_of_LIN_calcParity 07D2                                   __pstringtext1 024D  
                                 __pstringtext2 0643                              LIN_queuePacket@cmd 005E  
                                _FVR_Initialize 087C                                ___lldiv@quotient 0120  
                               _TMR0_Initialize 0A6B                               ??_LIN_queuePacket 005B  
                              ?i1_LIN_stopTimer 0076                                      _TX1STAbits 011E  
                                    _TMR2_Start 0002                           ??_EUSART1_Receive_ISR 0077  
                __end_of_PIN_MANAGER_Initialize 0C06                   _LIN_HEATSINK_TEMPERATURE_Data 00CB  
                           LIN_getFromTable@cmd 0051                              _reduced_drive_time 0030  
                              LIN_queuePacket@i 005F                         ??_EUSART1_RxDataHandler 0076  
                       __end_of_LIN_getChecksum 0C36                                 _TMR1_Initialize 0A84  
                             ??_CLC1_Initialize 004E                          ?_GetAmbientTemperature 004E  
                                _adcTSense_curr 0074  
