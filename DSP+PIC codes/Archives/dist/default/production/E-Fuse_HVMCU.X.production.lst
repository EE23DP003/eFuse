

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed May 25 21:46:49 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og9 
     1                           	processor	16F15345
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,noexec
    11                           	psect	cinit,global,class=CODE,merge=1,delta=2
    12                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    18                           	psect	inittext,global,class=CODE,delta=2
    19                           	psect	clrtext,global,class=CODE,delta=2
    20                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    21                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    23                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    24                           	psect	text1,local,class=CODE,merge=1,delta=2
    25                           	psect	text2,local,class=CODE,merge=1,delta=2
    26                           	psect	text3,local,class=CODE,merge=1,delta=2
    27                           	psect	text4,local,class=CODE,merge=1,delta=2
    28                           	psect	text5,local,class=CODE,merge=1,delta=2
    29                           	psect	text6,local,class=CODE,merge=1,delta=2
    30                           	psect	text7,local,class=CODE,merge=1,delta=2
    31                           	psect	text8,local,class=CODE,merge=1,delta=2
    32                           	psect	text9,local,class=CODE,merge=1,delta=2
    33                           	psect	text10,local,class=CODE,merge=1,delta=2
    34                           	psect	text11,local,class=CODE,merge=1,delta=2
    35                           	psect	text12,local,class=CODE,merge=1,delta=2
    36                           	psect	text13,local,class=CODE,merge=1,delta=2
    37                           	psect	text14,local,class=CODE,merge=1,delta=2
    38                           	psect	text15,local,class=CODE,merge=1,delta=2
    39                           	psect	text16,local,class=CODE,merge=1,delta=2
    40                           	psect	text17,local,class=CODE,merge=1,delta=2
    41                           	psect	text18,local,class=CODE,merge=1,delta=2
    42                           	psect	text19,local,class=CODE,merge=1,delta=2
    43                           	psect	text20,local,class=CODE,merge=1,delta=2
    44                           	psect	text21,local,class=CODE,merge=1,delta=2
    45                           	psect	text22,local,class=CODE,merge=1,delta=2
    46                           	psect	text23,local,class=CODE,merge=1,delta=2
    47                           	psect	text24,local,class=CODE,merge=1,delta=2
    48                           	psect	text25,local,class=CODE,merge=1,delta=2
    49                           	psect	text26,local,class=CODE,merge=1,delta=2
    50                           	psect	text27,local,class=CODE,merge=1,delta=2
    51                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    52                           	psect	text29,local,class=CODE,merge=1,delta=2
    53                           	psect	text30,local,class=CODE,merge=1,delta=2
    54                           	psect	text31,local,class=CODE,merge=1,delta=2
    55                           	psect	text32,local,class=CODE,merge=1,delta=2
    56                           	psect	text33,local,class=CODE,merge=1,delta=2
    57                           	psect	text34,local,class=CODE,merge=1,delta=2
    58                           	psect	text35,local,class=CODE,merge=1,delta=2,group=2
    59                           	psect	text36,local,class=CODE,merge=1,delta=2
    60                           	psect	text37,local,class=CODE,merge=1,delta=2
    61                           	psect	text38,local,class=CODE,merge=1,delta=2
    62                           	psect	text39,local,class=CODE,merge=1,delta=2
    63                           	psect	text40,local,class=CODE,merge=1,delta=2
    64                           	psect	text41,local,class=CODE,merge=1,delta=2
    65                           	psect	text42,local,class=CODE,merge=1,delta=2
    66                           	psect	text43,local,class=CODE,merge=1,delta=2
    67                           	psect	text44,local,class=CODE,merge=1,delta=2
    68                           	psect	text45,local,class=CODE,merge=1,delta=2
    69                           	psect	text46,local,class=CODE,merge=1,delta=2
    70                           	psect	text47,local,class=CODE,merge=1,delta=2
    71                           	psect	text48,local,class=CODE,merge=1,delta=2
    72                           	psect	text49,local,class=CODE,merge=1,delta=2
    73                           	psect	text50,local,class=CODE,merge=1,delta=2
    74                           	psect	text51,local,class=CODE,merge=1,delta=2,group=1
    75                           	psect	text52,local,class=CODE,merge=1,delta=2,group=1
    76                           	psect	text53,local,class=CODE,merge=1,delta=2,group=1
    77                           	psect	text54,local,class=CODE,merge=1,delta=2
    78                           	psect	text55,local,class=CODE,merge=1,delta=2
    79                           	psect	text56,local,class=CODE,merge=1,delta=2
    80                           	psect	text57,local,class=CODE,merge=1,delta=2
    81                           	psect	text58,local,class=CODE,merge=1,delta=2
    82                           	psect	text59,local,class=CODE,merge=1,delta=2
    83                           	psect	text60,local,class=CODE,merge=1,delta=2
    84                           	psect	text61,local,class=CODE,merge=1,delta=2
    85                           	psect	intentry,global,class=CODE,delta=2
    86                           	psect	text63,local,class=CODE,merge=1,delta=2
    87                           	psect	text64,local,class=CODE,merge=1,delta=2
    88                           	psect	text65,local,class=CODE,merge=1,delta=2
    89                           	psect	text66,local,class=CODE,merge=1,delta=2
    90                           	psect	text67,local,class=CODE,merge=1,delta=2
    91                           	psect	text68,local,class=CODE,merge=1,delta=2
    92                           	psect	text69,local,class=CODE,merge=1,delta=2
    93                           	psect	text70,local,class=CODE,merge=1,delta=2
    94                           	psect	text71,local,class=CODE,merge=1,delta=2
    95                           	psect	text72,local,class=CODE,merge=1,delta=2
    96                           	psect	text73,local,class=CODE,merge=1,delta=2
    97                           	psect	text74,local,class=CODE,merge=1,delta=2
    98                           	psect	text75,local,class=CODE,merge=1,delta=2
    99                           	psect	text76,local,class=CODE,merge=1,delta=2
   100                           	psect	text77,local,class=CODE,merge=1,delta=2
   101                           	psect	text78,local,class=CODE,merge=1,delta=2
   102                           	psect	text79,local,class=CODE,merge=1,delta=2
   103                           	psect	text80,local,class=CODE,merge=1,delta=2
   104                           	psect	text81,local,class=CODE,merge=1,delta=2
   105                           	psect	text82,local,class=CODE,merge=1,delta=2
   106                           	psect	text83,local,class=CODE,merge=1,delta=2
   107                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   108                           	dabs	1,0x7E,2
   109  0000                     
   110                           ; Version 2.35
   111                           ; Generated 01/06/2021 GMT
   112                           ; 
   113                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   114                           ; All rights reserved.
   115                           ; 
   116                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   117                           ; 
   118                           ; Redistribution and use in source and binary forms, with or without modification, are
   119                           ; permitted provided that the following conditions are met:
   120                           ; 
   121                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   122                           ;        conditions and the following disclaimer.
   123                           ; 
   124                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   125                           ;        of conditions and the following disclaimer in the documentation and/or other
   126                           ;        materials provided with the distribution. Publication is not required when
   127                           ;        this file is used in an embedded application.
   128                           ; 
   129                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   130                           ;        software without specific prior written permission.
   131                           ; 
   132                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   133                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   134                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   135                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   136                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   137                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   138                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   139                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   140                           ; 
   141                           ; 
   142                           ; Code-generator required, PIC16F15345 Definitions
   143                           ; 
   144                           ; SFR Addresses
   145  0000                     	;# 
   146  0001                     	;# 
   147  0002                     	;# 
   148  0003                     	;# 
   149  0004                     	;# 
   150  0005                     	;# 
   151  0006                     	;# 
   152  0007                     	;# 
   153  0008                     	;# 
   154  0009                     	;# 
   155  000A                     	;# 
   156  000B                     	;# 
   157  000C                     	;# 
   158  000D                     	;# 
   159  000E                     	;# 
   160  0012                     	;# 
   161  0013                     	;# 
   162  0014                     	;# 
   163  0018                     	;# 
   164  0019                     	;# 
   165  001A                     	;# 
   166  009B                     	;# 
   167  009B                     	;# 
   168  009C                     	;# 
   169  009D                     	;# 
   170  009E                     	;# 
   171  009F                     	;# 
   172  0119                     	;# 
   173  0119                     	;# 
   174  0119                     	;# 
   175  011A                     	;# 
   176  011A                     	;# 
   177  011A                     	;# 
   178  011B                     	;# 
   179  011B                     	;# 
   180  011B                     	;# 
   181  011B                     	;# 
   182  011B                     	;# 
   183  011C                     	;# 
   184  011C                     	;# 
   185  011C                     	;# 
   186  011D                     	;# 
   187  011D                     	;# 
   188  011D                     	;# 
   189  011E                     	;# 
   190  011E                     	;# 
   191  011E                     	;# 
   192  011F                     	;# 
   193  011F                     	;# 
   194  011F                     	;# 
   195  011F                     	;# 
   196  011F                     	;# 
   197  018C                     	;# 
   198  018D                     	;# 
   199  018E                     	;# 
   200  018F                     	;# 
   201  0190                     	;# 
   202  0191                     	;# 
   203  0192                     	;# 
   204  020C                     	;# 
   205  020C                     	;# 
   206  020D                     	;# 
   207  020E                     	;# 
   208  020F                     	;# 
   209  020F                     	;# 
   210  0210                     	;# 
   211  0210                     	;# 
   212  0211                     	;# 
   213  0211                     	;# 
   214  028C                     	;# 
   215  028C                     	;# 
   216  028D                     	;# 
   217  028D                     	;# 
   218  028E                     	;# 
   219  028F                     	;# 
   220  0290                     	;# 
   221  0291                     	;# 
   222  030C                     	;# 
   223  030C                     	;# 
   224  030D                     	;# 
   225  030E                     	;# 
   226  030F                     	;# 
   227  0310                     	;# 
   228  0310                     	;# 
   229  0311                     	;# 
   230  0312                     	;# 
   231  0313                     	;# 
   232  0314                     	;# 
   233  0314                     	;# 
   234  0315                     	;# 
   235  0316                     	;# 
   236  0318                     	;# 
   237  0318                     	;# 
   238  0319                     	;# 
   239  031A                     	;# 
   240  031C                     	;# 
   241  031C                     	;# 
   242  031D                     	;# 
   243  031E                     	;# 
   244  038C                     	;# 
   245  038C                     	;# 
   246  038D                     	;# 
   247  038E                     	;# 
   248  058C                     	;# 
   249  058C                     	;# 
   250  058D                     	;# 
   251  058E                     	;# 
   252  058F                     	;# 
   253  058F                     	;# 
   254  0590                     	;# 
   255  0591                     	;# 
   256  0592                     	;# 
   257  0593                     	;# 
   258  059C                     	;# 
   259  059C                     	;# 
   260  059D                     	;# 
   261  059D                     	;# 
   262  059E                     	;# 
   263  059F                     	;# 
   264  060C                     	;# 
   265  060D                     	;# 
   266  060E                     	;# 
   267  060F                     	;# 
   268  0610                     	;# 
   269  0611                     	;# 
   270  0612                     	;# 
   271  0613                     	;# 
   272  0614                     	;# 
   273  070C                     	;# 
   274  070D                     	;# 
   275  070E                     	;# 
   276  070F                     	;# 
   277  0710                     	;# 
   278  0711                     	;# 
   279  0712                     	;# 
   280  0713                     	;# 
   281  0716                     	;# 
   282  0717                     	;# 
   283  0718                     	;# 
   284  0719                     	;# 
   285  071A                     	;# 
   286  071B                     	;# 
   287  071C                     	;# 
   288  071D                     	;# 
   289  0796                     	;# 
   290  0797                     	;# 
   291  0798                     	;# 
   292  0799                     	;# 
   293  079A                     	;# 
   294  079B                     	;# 
   295  080C                     	;# 
   296  080D                     	;# 
   297  080E                     	;# 
   298  080F                     	;# 
   299  0810                     	;# 
   300  0811                     	;# 
   301  0812                     	;# 
   302  0813                     	;# 
   303  0814                     	;# 
   304  081A                     	;# 
   305  081A                     	;# 
   306  081B                     	;# 
   307  081C                     	;# 
   308  081C                     	;# 
   309  081D                     	;# 
   310  081E                     	;# 
   311  081F                     	;# 
   312  088C                     	;# 
   313  088D                     	;# 
   314  088E                     	;# 
   315  088F                     	;# 
   316  0890                     	;# 
   317  0891                     	;# 
   318  0892                     	;# 
   319  0893                     	;# 
   320  0895                     	;# 
   321  0896                     	;# 
   322  090C                     	;# 
   323  090E                     	;# 
   324  090F                     	;# 
   325  091F                     	;# 
   326  098F                     	;# 
   327  098F                     	;# 
   328  0990                     	;# 
   329  0991                     	;# 
   330  0992                     	;# 
   331  0993                     	;# 
   332  0994                     	;# 
   333  0995                     	;# 
   334  0996                     	;# 
   335  0997                     	;# 
   336  0A19                     	;# 
   337  0A19                     	;# 
   338  0A1A                     	;# 
   339  0A1A                     	;# 
   340  0A1B                     	;# 
   341  0A1B                     	;# 
   342  0A1B                     	;# 
   343  0A1C                     	;# 
   344  0A1C                     	;# 
   345  0A1D                     	;# 
   346  0A1D                     	;# 
   347  0A1E                     	;# 
   348  0A1E                     	;# 
   349  0A1F                     	;# 
   350  0A1F                     	;# 
   351  0A1F                     	;# 
   352  1E0F                     	;# 
   353  1E10                     	;# 
   354  1E11                     	;# 
   355  1E12                     	;# 
   356  1E13                     	;# 
   357  1E14                     	;# 
   358  1E15                     	;# 
   359  1E16                     	;# 
   360  1E17                     	;# 
   361  1E18                     	;# 
   362  1E19                     	;# 
   363  1E1A                     	;# 
   364  1E1B                     	;# 
   365  1E1C                     	;# 
   366  1E1D                     	;# 
   367  1E1E                     	;# 
   368  1E1F                     	;# 
   369  1E20                     	;# 
   370  1E21                     	;# 
   371  1E22                     	;# 
   372  1E23                     	;# 
   373  1E24                     	;# 
   374  1E25                     	;# 
   375  1E26                     	;# 
   376  1E27                     	;# 
   377  1E28                     	;# 
   378  1E29                     	;# 
   379  1E2A                     	;# 
   380  1E2B                     	;# 
   381  1E2C                     	;# 
   382  1E2D                     	;# 
   383  1E2E                     	;# 
   384  1E2F                     	;# 
   385  1E30                     	;# 
   386  1E31                     	;# 
   387  1E32                     	;# 
   388  1E33                     	;# 
   389  1E34                     	;# 
   390  1E35                     	;# 
   391  1E36                     	;# 
   392  1E37                     	;# 
   393  1E8F                     	;# 
   394  1E90                     	;# 
   395  1E91                     	;# 
   396  1E92                     	;# 
   397  1E93                     	;# 
   398  1E9C                     	;# 
   399  1EA1                     	;# 
   400  1EA2                     	;# 
   401  1EB1                     	;# 
   402  1EBB                     	;# 
   403  1EBC                     	;# 
   404  1EBD                     	;# 
   405  1EBE                     	;# 
   406  1EC3                     	;# 
   407  1EC5                     	;# 
   408  1EC6                     	;# 
   409  1EC7                     	;# 
   410  1ECB                     	;# 
   411  1ECC                     	;# 
   412  1ECD                     	;# 
   413  1ECE                     	;# 
   414  1F10                     	;# 
   415  1F11                     	;# 
   416  1F12                     	;# 
   417  1F13                     	;# 
   418  1F14                     	;# 
   419  1F15                     	;# 
   420  1F1C                     	;# 
   421  1F1D                     	;# 
   422  1F1E                     	;# 
   423  1F1F                     	;# 
   424  1F20                     	;# 
   425  1F21                     	;# 
   426  1F22                     	;# 
   427  1F23                     	;# 
   428  1F24                     	;# 
   429  1F25                     	;# 
   430  1F26                     	;# 
   431  1F27                     	;# 
   432  1F38                     	;# 
   433  1F39                     	;# 
   434  1F3A                     	;# 
   435  1F3B                     	;# 
   436  1F3C                     	;# 
   437  1F3D                     	;# 
   438  1F3E                     	;# 
   439  1F3F                     	;# 
   440  1F43                     	;# 
   441  1F44                     	;# 
   442  1F45                     	;# 
   443  1F46                     	;# 
   444  1F47                     	;# 
   445  1F48                     	;# 
   446  1F49                     	;# 
   447  1F4A                     	;# 
   448  1F4E                     	;# 
   449  1F4F                     	;# 
   450  1F50                     	;# 
   451  1F51                     	;# 
   452  1F52                     	;# 
   453  1F53                     	;# 
   454  1F54                     	;# 
   455  1F55                     	;# 
   456  1FE4                     	;# 
   457  1FE5                     	;# 
   458  1FE6                     	;# 
   459  1FE7                     	;# 
   460  1FE8                     	;# 
   461  1FE8                     	;# 
   462  1FE9                     	;# 
   463  1FEA                     	;# 
   464  1FEA                     	;# 
   465  1FEB                     	;# 
   466  1FED                     	;# 
   467  1FEE                     	;# 
   468  1FEF                     	;# 
   469  0000                     	;# 
   470  0001                     	;# 
   471  0002                     	;# 
   472  0003                     	;# 
   473  0004                     	;# 
   474  0005                     	;# 
   475  0006                     	;# 
   476  0007                     	;# 
   477  0008                     	;# 
   478  0009                     	;# 
   479  000A                     	;# 
   480  000B                     	;# 
   481  000C                     	;# 
   482  000D                     	;# 
   483  000E                     	;# 
   484  0012                     	;# 
   485  0013                     	;# 
   486  0014                     	;# 
   487  0018                     	;# 
   488  0019                     	;# 
   489  001A                     	;# 
   490  009B                     	;# 
   491  009B                     	;# 
   492  009C                     	;# 
   493  009D                     	;# 
   494  009E                     	;# 
   495  009F                     	;# 
   496  0119                     	;# 
   497  0119                     	;# 
   498  0119                     	;# 
   499  011A                     	;# 
   500  011A                     	;# 
   501  011A                     	;# 
   502  011B                     	;# 
   503  011B                     	;# 
   504  011B                     	;# 
   505  011B                     	;# 
   506  011B                     	;# 
   507  011C                     	;# 
   508  011C                     	;# 
   509  011C                     	;# 
   510  011D                     	;# 
   511  011D                     	;# 
   512  011D                     	;# 
   513  011E                     	;# 
   514  011E                     	;# 
   515  011E                     	;# 
   516  011F                     	;# 
   517  011F                     	;# 
   518  011F                     	;# 
   519  011F                     	;# 
   520  011F                     	;# 
   521  018C                     	;# 
   522  018D                     	;# 
   523  018E                     	;# 
   524  018F                     	;# 
   525  0190                     	;# 
   526  0191                     	;# 
   527  0192                     	;# 
   528  020C                     	;# 
   529  020C                     	;# 
   530  020D                     	;# 
   531  020E                     	;# 
   532  020F                     	;# 
   533  020F                     	;# 
   534  0210                     	;# 
   535  0210                     	;# 
   536  0211                     	;# 
   537  0211                     	;# 
   538  028C                     	;# 
   539  028C                     	;# 
   540  028D                     	;# 
   541  028D                     	;# 
   542  028E                     	;# 
   543  028F                     	;# 
   544  0290                     	;# 
   545  0291                     	;# 
   546  030C                     	;# 
   547  030C                     	;# 
   548  030D                     	;# 
   549  030E                     	;# 
   550  030F                     	;# 
   551  0310                     	;# 
   552  0310                     	;# 
   553  0311                     	;# 
   554  0312                     	;# 
   555  0313                     	;# 
   556  0314                     	;# 
   557  0314                     	;# 
   558  0315                     	;# 
   559  0316                     	;# 
   560  0318                     	;# 
   561  0318                     	;# 
   562  0319                     	;# 
   563  031A                     	;# 
   564  031C                     	;# 
   565  031C                     	;# 
   566  031D                     	;# 
   567  031E                     	;# 
   568  038C                     	;# 
   569  038C                     	;# 
   570  038D                     	;# 
   571  038E                     	;# 
   572  058C                     	;# 
   573  058C                     	;# 
   574  058D                     	;# 
   575  058E                     	;# 
   576  058F                     	;# 
   577  058F                     	;# 
   578  0590                     	;# 
   579  0591                     	;# 
   580  0592                     	;# 
   581  0593                     	;# 
   582  059C                     	;# 
   583  059C                     	;# 
   584  059D                     	;# 
   585  059D                     	;# 
   586  059E                     	;# 
   587  059F                     	;# 
   588  060C                     	;# 
   589  060D                     	;# 
   590  060E                     	;# 
   591  060F                     	;# 
   592  0610                     	;# 
   593  0611                     	;# 
   594  0612                     	;# 
   595  0613                     	;# 
   596  0614                     	;# 
   597  070C                     	;# 
   598  070D                     	;# 
   599  070E                     	;# 
   600  070F                     	;# 
   601  0710                     	;# 
   602  0711                     	;# 
   603  0712                     	;# 
   604  0713                     	;# 
   605  0716                     	;# 
   606  0717                     	;# 
   607  0718                     	;# 
   608  0719                     	;# 
   609  071A                     	;# 
   610  071B                     	;# 
   611  071C                     	;# 
   612  071D                     	;# 
   613  0796                     	;# 
   614  0797                     	;# 
   615  0798                     	;# 
   616  0799                     	;# 
   617  079A                     	;# 
   618  079B                     	;# 
   619  080C                     	;# 
   620  080D                     	;# 
   621  080E                     	;# 
   622  080F                     	;# 
   623  0810                     	;# 
   624  0811                     	;# 
   625  0812                     	;# 
   626  0813                     	;# 
   627  0814                     	;# 
   628  081A                     	;# 
   629  081A                     	;# 
   630  081B                     	;# 
   631  081C                     	;# 
   632  081C                     	;# 
   633  081D                     	;# 
   634  081E                     	;# 
   635  081F                     	;# 
   636  088C                     	;# 
   637  088D                     	;# 
   638  088E                     	;# 
   639  088F                     	;# 
   640  0890                     	;# 
   641  0891                     	;# 
   642  0892                     	;# 
   643  0893                     	;# 
   644  0895                     	;# 
   645  0896                     	;# 
   646  090C                     	;# 
   647  090E                     	;# 
   648  090F                     	;# 
   649  091F                     	;# 
   650  098F                     	;# 
   651  098F                     	;# 
   652  0990                     	;# 
   653  0991                     	;# 
   654  0992                     	;# 
   655  0993                     	;# 
   656  0994                     	;# 
   657  0995                     	;# 
   658  0996                     	;# 
   659  0997                     	;# 
   660  0A19                     	;# 
   661  0A19                     	;# 
   662  0A1A                     	;# 
   663  0A1A                     	;# 
   664  0A1B                     	;# 
   665  0A1B                     	;# 
   666  0A1B                     	;# 
   667  0A1C                     	;# 
   668  0A1C                     	;# 
   669  0A1D                     	;# 
   670  0A1D                     	;# 
   671  0A1E                     	;# 
   672  0A1E                     	;# 
   673  0A1F                     	;# 
   674  0A1F                     	;# 
   675  0A1F                     	;# 
   676  1E0F                     	;# 
   677  1E10                     	;# 
   678  1E11                     	;# 
   679  1E12                     	;# 
   680  1E13                     	;# 
   681  1E14                     	;# 
   682  1E15                     	;# 
   683  1E16                     	;# 
   684  1E17                     	;# 
   685  1E18                     	;# 
   686  1E19                     	;# 
   687  1E1A                     	;# 
   688  1E1B                     	;# 
   689  1E1C                     	;# 
   690  1E1D                     	;# 
   691  1E1E                     	;# 
   692  1E1F                     	;# 
   693  1E20                     	;# 
   694  1E21                     	;# 
   695  1E22                     	;# 
   696  1E23                     	;# 
   697  1E24                     	;# 
   698  1E25                     	;# 
   699  1E26                     	;# 
   700  1E27                     	;# 
   701  1E28                     	;# 
   702  1E29                     	;# 
   703  1E2A                     	;# 
   704  1E2B                     	;# 
   705  1E2C                     	;# 
   706  1E2D                     	;# 
   707  1E2E                     	;# 
   708  1E2F                     	;# 
   709  1E30                     	;# 
   710  1E31                     	;# 
   711  1E32                     	;# 
   712  1E33                     	;# 
   713  1E34                     	;# 
   714  1E35                     	;# 
   715  1E36                     	;# 
   716  1E37                     	;# 
   717  1E8F                     	;# 
   718  1E90                     	;# 
   719  1E91                     	;# 
   720  1E92                     	;# 
   721  1E93                     	;# 
   722  1E9C                     	;# 
   723  1EA1                     	;# 
   724  1EA2                     	;# 
   725  1EB1                     	;# 
   726  1EBB                     	;# 
   727  1EBC                     	;# 
   728  1EBD                     	;# 
   729  1EBE                     	;# 
   730  1EC3                     	;# 
   731  1EC5                     	;# 
   732  1EC6                     	;# 
   733  1EC7                     	;# 
   734  1ECB                     	;# 
   735  1ECC                     	;# 
   736  1ECD                     	;# 
   737  1ECE                     	;# 
   738  1F10                     	;# 
   739  1F11                     	;# 
   740  1F12                     	;# 
   741  1F13                     	;# 
   742  1F14                     	;# 
   743  1F15                     	;# 
   744  1F1C                     	;# 
   745  1F1D                     	;# 
   746  1F1E                     	;# 
   747  1F1F                     	;# 
   748  1F20                     	;# 
   749  1F21                     	;# 
   750  1F22                     	;# 
   751  1F23                     	;# 
   752  1F24                     	;# 
   753  1F25                     	;# 
   754  1F26                     	;# 
   755  1F27                     	;# 
   756  1F38                     	;# 
   757  1F39                     	;# 
   758  1F3A                     	;# 
   759  1F3B                     	;# 
   760  1F3C                     	;# 
   761  1F3D                     	;# 
   762  1F3E                     	;# 
   763  1F3F                     	;# 
   764  1F43                     	;# 
   765  1F44                     	;# 
   766  1F45                     	;# 
   767  1F46                     	;# 
   768  1F47                     	;# 
   769  1F48                     	;# 
   770  1F49                     	;# 
   771  1F4A                     	;# 
   772  1F4E                     	;# 
   773  1F4F                     	;# 
   774  1F50                     	;# 
   775  1F51                     	;# 
   776  1F52                     	;# 
   777  1F53                     	;# 
   778  1F54                     	;# 
   779  1F55                     	;# 
   780  1FE4                     	;# 
   781  1FE5                     	;# 
   782  1FE6                     	;# 
   783  1FE7                     	;# 
   784  1FE8                     	;# 
   785  1FE8                     	;# 
   786  1FE9                     	;# 
   787  1FEA                     	;# 
   788  1FEA                     	;# 
   789  1FEB                     	;# 
   790  1FED                     	;# 
   791  1FEE                     	;# 
   792  1FEF                     	;# 
   793  0000                     	;# 
   794  0001                     	;# 
   795  0002                     	;# 
   796  0003                     	;# 
   797  0004                     	;# 
   798  0005                     	;# 
   799  0006                     	;# 
   800  0007                     	;# 
   801  0008                     	;# 
   802  0009                     	;# 
   803  000A                     	;# 
   804  000B                     	;# 
   805  000C                     	;# 
   806  000D                     	;# 
   807  000E                     	;# 
   808  0012                     	;# 
   809  0013                     	;# 
   810  0014                     	;# 
   811  0018                     	;# 
   812  0019                     	;# 
   813  001A                     	;# 
   814  009B                     	;# 
   815  009B                     	;# 
   816  009C                     	;# 
   817  009D                     	;# 
   818  009E                     	;# 
   819  009F                     	;# 
   820  0119                     	;# 
   821  0119                     	;# 
   822  0119                     	;# 
   823  011A                     	;# 
   824  011A                     	;# 
   825  011A                     	;# 
   826  011B                     	;# 
   827  011B                     	;# 
   828  011B                     	;# 
   829  011B                     	;# 
   830  011B                     	;# 
   831  011C                     	;# 
   832  011C                     	;# 
   833  011C                     	;# 
   834  011D                     	;# 
   835  011D                     	;# 
   836  011D                     	;# 
   837  011E                     	;# 
   838  011E                     	;# 
   839  011E                     	;# 
   840  011F                     	;# 
   841  011F                     	;# 
   842  011F                     	;# 
   843  011F                     	;# 
   844  011F                     	;# 
   845  018C                     	;# 
   846  018D                     	;# 
   847  018E                     	;# 
   848  018F                     	;# 
   849  0190                     	;# 
   850  0191                     	;# 
   851  0192                     	;# 
   852  020C                     	;# 
   853  020C                     	;# 
   854  020D                     	;# 
   855  020E                     	;# 
   856  020F                     	;# 
   857  020F                     	;# 
   858  0210                     	;# 
   859  0210                     	;# 
   860  0211                     	;# 
   861  0211                     	;# 
   862  028C                     	;# 
   863  028C                     	;# 
   864  028D                     	;# 
   865  028D                     	;# 
   866  028E                     	;# 
   867  028F                     	;# 
   868  0290                     	;# 
   869  0291                     	;# 
   870  030C                     	;# 
   871  030C                     	;# 
   872  030D                     	;# 
   873  030E                     	;# 
   874  030F                     	;# 
   875  0310                     	;# 
   876  0310                     	;# 
   877  0311                     	;# 
   878  0312                     	;# 
   879  0313                     	;# 
   880  0314                     	;# 
   881  0314                     	;# 
   882  0315                     	;# 
   883  0316                     	;# 
   884  0318                     	;# 
   885  0318                     	;# 
   886  0319                     	;# 
   887  031A                     	;# 
   888  031C                     	;# 
   889  031C                     	;# 
   890  031D                     	;# 
   891  031E                     	;# 
   892  038C                     	;# 
   893  038C                     	;# 
   894  038D                     	;# 
   895  038E                     	;# 
   896  058C                     	;# 
   897  058C                     	;# 
   898  058D                     	;# 
   899  058E                     	;# 
   900  058F                     	;# 
   901  058F                     	;# 
   902  0590                     	;# 
   903  0591                     	;# 
   904  0592                     	;# 
   905  0593                     	;# 
   906  059C                     	;# 
   907  059C                     	;# 
   908  059D                     	;# 
   909  059D                     	;# 
   910  059E                     	;# 
   911  059F                     	;# 
   912  060C                     	;# 
   913  060D                     	;# 
   914  060E                     	;# 
   915  060F                     	;# 
   916  0610                     	;# 
   917  0611                     	;# 
   918  0612                     	;# 
   919  0613                     	;# 
   920  0614                     	;# 
   921  070C                     	;# 
   922  070D                     	;# 
   923  070E                     	;# 
   924  070F                     	;# 
   925  0710                     	;# 
   926  0711                     	;# 
   927  0712                     	;# 
   928  0713                     	;# 
   929  0716                     	;# 
   930  0717                     	;# 
   931  0718                     	;# 
   932  0719                     	;# 
   933  071A                     	;# 
   934  071B                     	;# 
   935  071C                     	;# 
   936  071D                     	;# 
   937  0796                     	;# 
   938  0797                     	;# 
   939  0798                     	;# 
   940  0799                     	;# 
   941  079A                     	;# 
   942  079B                     	;# 
   943  080C                     	;# 
   944  080D                     	;# 
   945  080E                     	;# 
   946  080F                     	;# 
   947  0810                     	;# 
   948  0811                     	;# 
   949  0812                     	;# 
   950  0813                     	;# 
   951  0814                     	;# 
   952  081A                     	;# 
   953  081A                     	;# 
   954  081B                     	;# 
   955  081C                     	;# 
   956  081C                     	;# 
   957  081D                     	;# 
   958  081E                     	;# 
   959  081F                     	;# 
   960  088C                     	;# 
   961  088D                     	;# 
   962  088E                     	;# 
   963  088F                     	;# 
   964  0890                     	;# 
   965  0891                     	;# 
   966  0892                     	;# 
   967  0893                     	;# 
   968  0895                     	;# 
   969  0896                     	;# 
   970  090C                     	;# 
   971  090E                     	;# 
   972  090F                     	;# 
   973  091F                     	;# 
   974  098F                     	;# 
   975  098F                     	;# 
   976  0990                     	;# 
   977  0991                     	;# 
   978  0992                     	;# 
   979  0993                     	;# 
   980  0994                     	;# 
   981  0995                     	;# 
   982  0996                     	;# 
   983  0997                     	;# 
   984  0A19                     	;# 
   985  0A19                     	;# 
   986  0A1A                     	;# 
   987  0A1A                     	;# 
   988  0A1B                     	;# 
   989  0A1B                     	;# 
   990  0A1B                     	;# 
   991  0A1C                     	;# 
   992  0A1C                     	;# 
   993  0A1D                     	;# 
   994  0A1D                     	;# 
   995  0A1E                     	;# 
   996  0A1E                     	;# 
   997  0A1F                     	;# 
   998  0A1F                     	;# 
   999  0A1F                     	;# 
  1000  1E0F                     	;# 
  1001  1E10                     	;# 
  1002  1E11                     	;# 
  1003  1E12                     	;# 
  1004  1E13                     	;# 
  1005  1E14                     	;# 
  1006  1E15                     	;# 
  1007  1E16                     	;# 
  1008  1E17                     	;# 
  1009  1E18                     	;# 
  1010  1E19                     	;# 
  1011  1E1A                     	;# 
  1012  1E1B                     	;# 
  1013  1E1C                     	;# 
  1014  1E1D                     	;# 
  1015  1E1E                     	;# 
  1016  1E1F                     	;# 
  1017  1E20                     	;# 
  1018  1E21                     	;# 
  1019  1E22                     	;# 
  1020  1E23                     	;# 
  1021  1E24                     	;# 
  1022  1E25                     	;# 
  1023  1E26                     	;# 
  1024  1E27                     	;# 
  1025  1E28                     	;# 
  1026  1E29                     	;# 
  1027  1E2A                     	;# 
  1028  1E2B                     	;# 
  1029  1E2C                     	;# 
  1030  1E2D                     	;# 
  1031  1E2E                     	;# 
  1032  1E2F                     	;# 
  1033  1E30                     	;# 
  1034  1E31                     	;# 
  1035  1E32                     	;# 
  1036  1E33                     	;# 
  1037  1E34                     	;# 
  1038  1E35                     	;# 
  1039  1E36                     	;# 
  1040  1E37                     	;# 
  1041  1E8F                     	;# 
  1042  1E90                     	;# 
  1043  1E91                     	;# 
  1044  1E92                     	;# 
  1045  1E93                     	;# 
  1046  1E9C                     	;# 
  1047  1EA1                     	;# 
  1048  1EA2                     	;# 
  1049  1EB1                     	;# 
  1050  1EBB                     	;# 
  1051  1EBC                     	;# 
  1052  1EBD                     	;# 
  1053  1EBE                     	;# 
  1054  1EC3                     	;# 
  1055  1EC5                     	;# 
  1056  1EC6                     	;# 
  1057  1EC7                     	;# 
  1058  1ECB                     	;# 
  1059  1ECC                     	;# 
  1060  1ECD                     	;# 
  1061  1ECE                     	;# 
  1062  1F10                     	;# 
  1063  1F11                     	;# 
  1064  1F12                     	;# 
  1065  1F13                     	;# 
  1066  1F14                     	;# 
  1067  1F15                     	;# 
  1068  1F1C                     	;# 
  1069  1F1D                     	;# 
  1070  1F1E                     	;# 
  1071  1F1F                     	;# 
  1072  1F20                     	;# 
  1073  1F21                     	;# 
  1074  1F22                     	;# 
  1075  1F23                     	;# 
  1076  1F24                     	;# 
  1077  1F25                     	;# 
  1078  1F26                     	;# 
  1079  1F27                     	;# 
  1080  1F38                     	;# 
  1081  1F39                     	;# 
  1082  1F3A                     	;# 
  1083  1F3B                     	;# 
  1084  1F3C                     	;# 
  1085  1F3D                     	;# 
  1086  1F3E                     	;# 
  1087  1F3F                     	;# 
  1088  1F43                     	;# 
  1089  1F44                     	;# 
  1090  1F45                     	;# 
  1091  1F46                     	;# 
  1092  1F47                     	;# 
  1093  1F48                     	;# 
  1094  1F49                     	;# 
  1095  1F4A                     	;# 
  1096  1F4E                     	;# 
  1097  1F4F                     	;# 
  1098  1F50                     	;# 
  1099  1F51                     	;# 
  1100  1F52                     	;# 
  1101  1F53                     	;# 
  1102  1F54                     	;# 
  1103  1F55                     	;# 
  1104  1FE4                     	;# 
  1105  1FE5                     	;# 
  1106  1FE6                     	;# 
  1107  1FE7                     	;# 
  1108  1FE8                     	;# 
  1109  1FE8                     	;# 
  1110  1FE9                     	;# 
  1111  1FEA                     	;# 
  1112  1FEA                     	;# 
  1113  1FEB                     	;# 
  1114  1FED                     	;# 
  1115  1FEE                     	;# 
  1116  1FEF                     	;# 
  1117  0000                     	;# 
  1118  0001                     	;# 
  1119  0002                     	;# 
  1120  0003                     	;# 
  1121  0004                     	;# 
  1122  0005                     	;# 
  1123  0006                     	;# 
  1124  0007                     	;# 
  1125  0008                     	;# 
  1126  0009                     	;# 
  1127  000A                     	;# 
  1128  000B                     	;# 
  1129  000C                     	;# 
  1130  000D                     	;# 
  1131  000E                     	;# 
  1132  0012                     	;# 
  1133  0013                     	;# 
  1134  0014                     	;# 
  1135  0018                     	;# 
  1136  0019                     	;# 
  1137  001A                     	;# 
  1138  009B                     	;# 
  1139  009B                     	;# 
  1140  009C                     	;# 
  1141  009D                     	;# 
  1142  009E                     	;# 
  1143  009F                     	;# 
  1144  0119                     	;# 
  1145  0119                     	;# 
  1146  0119                     	;# 
  1147  011A                     	;# 
  1148  011A                     	;# 
  1149  011A                     	;# 
  1150  011B                     	;# 
  1151  011B                     	;# 
  1152  011B                     	;# 
  1153  011B                     	;# 
  1154  011B                     	;# 
  1155  011C                     	;# 
  1156  011C                     	;# 
  1157  011C                     	;# 
  1158  011D                     	;# 
  1159  011D                     	;# 
  1160  011D                     	;# 
  1161  011E                     	;# 
  1162  011E                     	;# 
  1163  011E                     	;# 
  1164  011F                     	;# 
  1165  011F                     	;# 
  1166  011F                     	;# 
  1167  011F                     	;# 
  1168  011F                     	;# 
  1169  018C                     	;# 
  1170  018D                     	;# 
  1171  018E                     	;# 
  1172  018F                     	;# 
  1173  0190                     	;# 
  1174  0191                     	;# 
  1175  0192                     	;# 
  1176  020C                     	;# 
  1177  020C                     	;# 
  1178  020D                     	;# 
  1179  020E                     	;# 
  1180  020F                     	;# 
  1181  020F                     	;# 
  1182  0210                     	;# 
  1183  0210                     	;# 
  1184  0211                     	;# 
  1185  0211                     	;# 
  1186  028C                     	;# 
  1187  028C                     	;# 
  1188  028D                     	;# 
  1189  028D                     	;# 
  1190  028E                     	;# 
  1191  028F                     	;# 
  1192  0290                     	;# 
  1193  0291                     	;# 
  1194  030C                     	;# 
  1195  030C                     	;# 
  1196  030D                     	;# 
  1197  030E                     	;# 
  1198  030F                     	;# 
  1199  0310                     	;# 
  1200  0310                     	;# 
  1201  0311                     	;# 
  1202  0312                     	;# 
  1203  0313                     	;# 
  1204  0314                     	;# 
  1205  0314                     	;# 
  1206  0315                     	;# 
  1207  0316                     	;# 
  1208  0318                     	;# 
  1209  0318                     	;# 
  1210  0319                     	;# 
  1211  031A                     	;# 
  1212  031C                     	;# 
  1213  031C                     	;# 
  1214  031D                     	;# 
  1215  031E                     	;# 
  1216  038C                     	;# 
  1217  038C                     	;# 
  1218  038D                     	;# 
  1219  038E                     	;# 
  1220  058C                     	;# 
  1221  058C                     	;# 
  1222  058D                     	;# 
  1223  058E                     	;# 
  1224  058F                     	;# 
  1225  058F                     	;# 
  1226  0590                     	;# 
  1227  0591                     	;# 
  1228  0592                     	;# 
  1229  0593                     	;# 
  1230  059C                     	;# 
  1231  059C                     	;# 
  1232  059D                     	;# 
  1233  059D                     	;# 
  1234  059E                     	;# 
  1235  059F                     	;# 
  1236  060C                     	;# 
  1237  060D                     	;# 
  1238  060E                     	;# 
  1239  060F                     	;# 
  1240  0610                     	;# 
  1241  0611                     	;# 
  1242  0612                     	;# 
  1243  0613                     	;# 
  1244  0614                     	;# 
  1245  070C                     	;# 
  1246  070D                     	;# 
  1247  070E                     	;# 
  1248  070F                     	;# 
  1249  0710                     	;# 
  1250  0711                     	;# 
  1251  0712                     	;# 
  1252  0713                     	;# 
  1253  0716                     	;# 
  1254  0717                     	;# 
  1255  0718                     	;# 
  1256  0719                     	;# 
  1257  071A                     	;# 
  1258  071B                     	;# 
  1259  071C                     	;# 
  1260  071D                     	;# 
  1261  0796                     	;# 
  1262  0797                     	;# 
  1263  0798                     	;# 
  1264  0799                     	;# 
  1265  079A                     	;# 
  1266  079B                     	;# 
  1267  080C                     	;# 
  1268  080D                     	;# 
  1269  080E                     	;# 
  1270  080F                     	;# 
  1271  0810                     	;# 
  1272  0811                     	;# 
  1273  0812                     	;# 
  1274  0813                     	;# 
  1275  0814                     	;# 
  1276  081A                     	;# 
  1277  081A                     	;# 
  1278  081B                     	;# 
  1279  081C                     	;# 
  1280  081C                     	;# 
  1281  081D                     	;# 
  1282  081E                     	;# 
  1283  081F                     	;# 
  1284  088C                     	;# 
  1285  088D                     	;# 
  1286  088E                     	;# 
  1287  088F                     	;# 
  1288  0890                     	;# 
  1289  0891                     	;# 
  1290  0892                     	;# 
  1291  0893                     	;# 
  1292  0895                     	;# 
  1293  0896                     	;# 
  1294  090C                     	;# 
  1295  090E                     	;# 
  1296  090F                     	;# 
  1297  091F                     	;# 
  1298  098F                     	;# 
  1299  098F                     	;# 
  1300  0990                     	;# 
  1301  0991                     	;# 
  1302  0992                     	;# 
  1303  0993                     	;# 
  1304  0994                     	;# 
  1305  0995                     	;# 
  1306  0996                     	;# 
  1307  0997                     	;# 
  1308  0A19                     	;# 
  1309  0A19                     	;# 
  1310  0A1A                     	;# 
  1311  0A1A                     	;# 
  1312  0A1B                     	;# 
  1313  0A1B                     	;# 
  1314  0A1B                     	;# 
  1315  0A1C                     	;# 
  1316  0A1C                     	;# 
  1317  0A1D                     	;# 
  1318  0A1D                     	;# 
  1319  0A1E                     	;# 
  1320  0A1E                     	;# 
  1321  0A1F                     	;# 
  1322  0A1F                     	;# 
  1323  0A1F                     	;# 
  1324  1E0F                     	;# 
  1325  1E10                     	;# 
  1326  1E11                     	;# 
  1327  1E12                     	;# 
  1328  1E13                     	;# 
  1329  1E14                     	;# 
  1330  1E15                     	;# 
  1331  1E16                     	;# 
  1332  1E17                     	;# 
  1333  1E18                     	;# 
  1334  1E19                     	;# 
  1335  1E1A                     	;# 
  1336  1E1B                     	;# 
  1337  1E1C                     	;# 
  1338  1E1D                     	;# 
  1339  1E1E                     	;# 
  1340  1E1F                     	;# 
  1341  1E20                     	;# 
  1342  1E21                     	;# 
  1343  1E22                     	;# 
  1344  1E23                     	;# 
  1345  1E24                     	;# 
  1346  1E25                     	;# 
  1347  1E26                     	;# 
  1348  1E27                     	;# 
  1349  1E28                     	;# 
  1350  1E29                     	;# 
  1351  1E2A                     	;# 
  1352  1E2B                     	;# 
  1353  1E2C                     	;# 
  1354  1E2D                     	;# 
  1355  1E2E                     	;# 
  1356  1E2F                     	;# 
  1357  1E30                     	;# 
  1358  1E31                     	;# 
  1359  1E32                     	;# 
  1360  1E33                     	;# 
  1361  1E34                     	;# 
  1362  1E35                     	;# 
  1363  1E36                     	;# 
  1364  1E37                     	;# 
  1365  1E8F                     	;# 
  1366  1E90                     	;# 
  1367  1E91                     	;# 
  1368  1E92                     	;# 
  1369  1E93                     	;# 
  1370  1E9C                     	;# 
  1371  1EA1                     	;# 
  1372  1EA2                     	;# 
  1373  1EB1                     	;# 
  1374  1EBB                     	;# 
  1375  1EBC                     	;# 
  1376  1EBD                     	;# 
  1377  1EBE                     	;# 
  1378  1EC3                     	;# 
  1379  1EC5                     	;# 
  1380  1EC6                     	;# 
  1381  1EC7                     	;# 
  1382  1ECB                     	;# 
  1383  1ECC                     	;# 
  1384  1ECD                     	;# 
  1385  1ECE                     	;# 
  1386  1F10                     	;# 
  1387  1F11                     	;# 
  1388  1F12                     	;# 
  1389  1F13                     	;# 
  1390  1F14                     	;# 
  1391  1F15                     	;# 
  1392  1F1C                     	;# 
  1393  1F1D                     	;# 
  1394  1F1E                     	;# 
  1395  1F1F                     	;# 
  1396  1F20                     	;# 
  1397  1F21                     	;# 
  1398  1F22                     	;# 
  1399  1F23                     	;# 
  1400  1F24                     	;# 
  1401  1F25                     	;# 
  1402  1F26                     	;# 
  1403  1F27                     	;# 
  1404  1F38                     	;# 
  1405  1F39                     	;# 
  1406  1F3A                     	;# 
  1407  1F3B                     	;# 
  1408  1F3C                     	;# 
  1409  1F3D                     	;# 
  1410  1F3E                     	;# 
  1411  1F3F                     	;# 
  1412  1F43                     	;# 
  1413  1F44                     	;# 
  1414  1F45                     	;# 
  1415  1F46                     	;# 
  1416  1F47                     	;# 
  1417  1F48                     	;# 
  1418  1F49                     	;# 
  1419  1F4A                     	;# 
  1420  1F4E                     	;# 
  1421  1F4F                     	;# 
  1422  1F50                     	;# 
  1423  1F51                     	;# 
  1424  1F52                     	;# 
  1425  1F53                     	;# 
  1426  1F54                     	;# 
  1427  1F55                     	;# 
  1428  1FE4                     	;# 
  1429  1FE5                     	;# 
  1430  1FE6                     	;# 
  1431  1FE7                     	;# 
  1432  1FE8                     	;# 
  1433  1FE8                     	;# 
  1434  1FE9                     	;# 
  1435  1FEA                     	;# 
  1436  1FEA                     	;# 
  1437  1FEB                     	;# 
  1438  1FED                     	;# 
  1439  1FEE                     	;# 
  1440  1FEF                     	;# 
  1441  0000                     	;# 
  1442  0001                     	;# 
  1443  0002                     	;# 
  1444  0003                     	;# 
  1445  0004                     	;# 
  1446  0005                     	;# 
  1447  0006                     	;# 
  1448  0007                     	;# 
  1449  0008                     	;# 
  1450  0009                     	;# 
  1451  000A                     	;# 
  1452  000B                     	;# 
  1453  000C                     	;# 
  1454  000D                     	;# 
  1455  000E                     	;# 
  1456  0012                     	;# 
  1457  0013                     	;# 
  1458  0014                     	;# 
  1459  0018                     	;# 
  1460  0019                     	;# 
  1461  001A                     	;# 
  1462  009B                     	;# 
  1463  009B                     	;# 
  1464  009C                     	;# 
  1465  009D                     	;# 
  1466  009E                     	;# 
  1467  009F                     	;# 
  1468  0119                     	;# 
  1469  0119                     	;# 
  1470  0119                     	;# 
  1471  011A                     	;# 
  1472  011A                     	;# 
  1473  011A                     	;# 
  1474  011B                     	;# 
  1475  011B                     	;# 
  1476  011B                     	;# 
  1477  011B                     	;# 
  1478  011B                     	;# 
  1479  011C                     	;# 
  1480  011C                     	;# 
  1481  011C                     	;# 
  1482  011D                     	;# 
  1483  011D                     	;# 
  1484  011D                     	;# 
  1485  011E                     	;# 
  1486  011E                     	;# 
  1487  011E                     	;# 
  1488  011F                     	;# 
  1489  011F                     	;# 
  1490  011F                     	;# 
  1491  011F                     	;# 
  1492  011F                     	;# 
  1493  018C                     	;# 
  1494  018D                     	;# 
  1495  018E                     	;# 
  1496  018F                     	;# 
  1497  0190                     	;# 
  1498  0191                     	;# 
  1499  0192                     	;# 
  1500  020C                     	;# 
  1501  020C                     	;# 
  1502  020D                     	;# 
  1503  020E                     	;# 
  1504  020F                     	;# 
  1505  020F                     	;# 
  1506  0210                     	;# 
  1507  0210                     	;# 
  1508  0211                     	;# 
  1509  0211                     	;# 
  1510  028C                     	;# 
  1511  028C                     	;# 
  1512  028D                     	;# 
  1513  028D                     	;# 
  1514  028E                     	;# 
  1515  028F                     	;# 
  1516  0290                     	;# 
  1517  0291                     	;# 
  1518  030C                     	;# 
  1519  030C                     	;# 
  1520  030D                     	;# 
  1521  030E                     	;# 
  1522  030F                     	;# 
  1523  0310                     	;# 
  1524  0310                     	;# 
  1525  0311                     	;# 
  1526  0312                     	;# 
  1527  0313                     	;# 
  1528  0314                     	;# 
  1529  0314                     	;# 
  1530  0315                     	;# 
  1531  0316                     	;# 
  1532  0318                     	;# 
  1533  0318                     	;# 
  1534  0319                     	;# 
  1535  031A                     	;# 
  1536  031C                     	;# 
  1537  031C                     	;# 
  1538  031D                     	;# 
  1539  031E                     	;# 
  1540  038C                     	;# 
  1541  038C                     	;# 
  1542  038D                     	;# 
  1543  038E                     	;# 
  1544  058C                     	;# 
  1545  058C                     	;# 
  1546  058D                     	;# 
  1547  058E                     	;# 
  1548  058F                     	;# 
  1549  058F                     	;# 
  1550  0590                     	;# 
  1551  0591                     	;# 
  1552  0592                     	;# 
  1553  0593                     	;# 
  1554  059C                     	;# 
  1555  059C                     	;# 
  1556  059D                     	;# 
  1557  059D                     	;# 
  1558  059E                     	;# 
  1559  059F                     	;# 
  1560  060C                     	;# 
  1561  060D                     	;# 
  1562  060E                     	;# 
  1563  060F                     	;# 
  1564  0610                     	;# 
  1565  0611                     	;# 
  1566  0612                     	;# 
  1567  0613                     	;# 
  1568  0614                     	;# 
  1569  070C                     	;# 
  1570  070D                     	;# 
  1571  070E                     	;# 
  1572  070F                     	;# 
  1573  0710                     	;# 
  1574  0711                     	;# 
  1575  0712                     	;# 
  1576  0713                     	;# 
  1577  0716                     	;# 
  1578  0717                     	;# 
  1579  0718                     	;# 
  1580  0719                     	;# 
  1581  071A                     	;# 
  1582  071B                     	;# 
  1583  071C                     	;# 
  1584  071D                     	;# 
  1585  0796                     	;# 
  1586  0797                     	;# 
  1587  0798                     	;# 
  1588  0799                     	;# 
  1589  079A                     	;# 
  1590  079B                     	;# 
  1591  080C                     	;# 
  1592  080D                     	;# 
  1593  080E                     	;# 
  1594  080F                     	;# 
  1595  0810                     	;# 
  1596  0811                     	;# 
  1597  0812                     	;# 
  1598  0813                     	;# 
  1599  0814                     	;# 
  1600  081A                     	;# 
  1601  081A                     	;# 
  1602  081B                     	;# 
  1603  081C                     	;# 
  1604  081C                     	;# 
  1605  081D                     	;# 
  1606  081E                     	;# 
  1607  081F                     	;# 
  1608  088C                     	;# 
  1609  088D                     	;# 
  1610  088E                     	;# 
  1611  088F                     	;# 
  1612  0890                     	;# 
  1613  0891                     	;# 
  1614  0892                     	;# 
  1615  0893                     	;# 
  1616  0895                     	;# 
  1617  0896                     	;# 
  1618  090C                     	;# 
  1619  090E                     	;# 
  1620  090F                     	;# 
  1621  091F                     	;# 
  1622  098F                     	;# 
  1623  098F                     	;# 
  1624  0990                     	;# 
  1625  0991                     	;# 
  1626  0992                     	;# 
  1627  0993                     	;# 
  1628  0994                     	;# 
  1629  0995                     	;# 
  1630  0996                     	;# 
  1631  0997                     	;# 
  1632  0A19                     	;# 
  1633  0A19                     	;# 
  1634  0A1A                     	;# 
  1635  0A1A                     	;# 
  1636  0A1B                     	;# 
  1637  0A1B                     	;# 
  1638  0A1B                     	;# 
  1639  0A1C                     	;# 
  1640  0A1C                     	;# 
  1641  0A1D                     	;# 
  1642  0A1D                     	;# 
  1643  0A1E                     	;# 
  1644  0A1E                     	;# 
  1645  0A1F                     	;# 
  1646  0A1F                     	;# 
  1647  0A1F                     	;# 
  1648  1E0F                     	;# 
  1649  1E10                     	;# 
  1650  1E11                     	;# 
  1651  1E12                     	;# 
  1652  1E13                     	;# 
  1653  1E14                     	;# 
  1654  1E15                     	;# 
  1655  1E16                     	;# 
  1656  1E17                     	;# 
  1657  1E18                     	;# 
  1658  1E19                     	;# 
  1659  1E1A                     	;# 
  1660  1E1B                     	;# 
  1661  1E1C                     	;# 
  1662  1E1D                     	;# 
  1663  1E1E                     	;# 
  1664  1E1F                     	;# 
  1665  1E20                     	;# 
  1666  1E21                     	;# 
  1667  1E22                     	;# 
  1668  1E23                     	;# 
  1669  1E24                     	;# 
  1670  1E25                     	;# 
  1671  1E26                     	;# 
  1672  1E27                     	;# 
  1673  1E28                     	;# 
  1674  1E29                     	;# 
  1675  1E2A                     	;# 
  1676  1E2B                     	;# 
  1677  1E2C                     	;# 
  1678  1E2D                     	;# 
  1679  1E2E                     	;# 
  1680  1E2F                     	;# 
  1681  1E30                     	;# 
  1682  1E31                     	;# 
  1683  1E32                     	;# 
  1684  1E33                     	;# 
  1685  1E34                     	;# 
  1686  1E35                     	;# 
  1687  1E36                     	;# 
  1688  1E37                     	;# 
  1689  1E8F                     	;# 
  1690  1E90                     	;# 
  1691  1E91                     	;# 
  1692  1E92                     	;# 
  1693  1E93                     	;# 
  1694  1E9C                     	;# 
  1695  1EA1                     	;# 
  1696  1EA2                     	;# 
  1697  1EB1                     	;# 
  1698  1EBB                     	;# 
  1699  1EBC                     	;# 
  1700  1EBD                     	;# 
  1701  1EBE                     	;# 
  1702  1EC3                     	;# 
  1703  1EC5                     	;# 
  1704  1EC6                     	;# 
  1705  1EC7                     	;# 
  1706  1ECB                     	;# 
  1707  1ECC                     	;# 
  1708  1ECD                     	;# 
  1709  1ECE                     	;# 
  1710  1F10                     	;# 
  1711  1F11                     	;# 
  1712  1F12                     	;# 
  1713  1F13                     	;# 
  1714  1F14                     	;# 
  1715  1F15                     	;# 
  1716  1F1C                     	;# 
  1717  1F1D                     	;# 
  1718  1F1E                     	;# 
  1719  1F1F                     	;# 
  1720  1F20                     	;# 
  1721  1F21                     	;# 
  1722  1F22                     	;# 
  1723  1F23                     	;# 
  1724  1F24                     	;# 
  1725  1F25                     	;# 
  1726  1F26                     	;# 
  1727  1F27                     	;# 
  1728  1F38                     	;# 
  1729  1F39                     	;# 
  1730  1F3A                     	;# 
  1731  1F3B                     	;# 
  1732  1F3C                     	;# 
  1733  1F3D                     	;# 
  1734  1F3E                     	;# 
  1735  1F3F                     	;# 
  1736  1F43                     	;# 
  1737  1F44                     	;# 
  1738  1F45                     	;# 
  1739  1F46                     	;# 
  1740  1F47                     	;# 
  1741  1F48                     	;# 
  1742  1F49                     	;# 
  1743  1F4A                     	;# 
  1744  1F4E                     	;# 
  1745  1F4F                     	;# 
  1746  1F50                     	;# 
  1747  1F51                     	;# 
  1748  1F52                     	;# 
  1749  1F53                     	;# 
  1750  1F54                     	;# 
  1751  1F55                     	;# 
  1752  1FE4                     	;# 
  1753  1FE5                     	;# 
  1754  1FE6                     	;# 
  1755  1FE7                     	;# 
  1756  1FE8                     	;# 
  1757  1FE8                     	;# 
  1758  1FE9                     	;# 
  1759  1FEA                     	;# 
  1760  1FEA                     	;# 
  1761  1FEB                     	;# 
  1762  1FED                     	;# 
  1763  1FEE                     	;# 
  1764  1FEF                     	;# 
  1765  0000                     	;# 
  1766  0001                     	;# 
  1767  0002                     	;# 
  1768  0003                     	;# 
  1769  0004                     	;# 
  1770  0005                     	;# 
  1771  0006                     	;# 
  1772  0007                     	;# 
  1773  0008                     	;# 
  1774  0009                     	;# 
  1775  000A                     	;# 
  1776  000B                     	;# 
  1777  000C                     	;# 
  1778  000D                     	;# 
  1779  000E                     	;# 
  1780  0012                     	;# 
  1781  0013                     	;# 
  1782  0014                     	;# 
  1783  0018                     	;# 
  1784  0019                     	;# 
  1785  001A                     	;# 
  1786  009B                     	;# 
  1787  009B                     	;# 
  1788  009C                     	;# 
  1789  009D                     	;# 
  1790  009E                     	;# 
  1791  009F                     	;# 
  1792  0119                     	;# 
  1793  0119                     	;# 
  1794  0119                     	;# 
  1795  011A                     	;# 
  1796  011A                     	;# 
  1797  011A                     	;# 
  1798  011B                     	;# 
  1799  011B                     	;# 
  1800  011B                     	;# 
  1801  011B                     	;# 
  1802  011B                     	;# 
  1803  011C                     	;# 
  1804  011C                     	;# 
  1805  011C                     	;# 
  1806  011D                     	;# 
  1807  011D                     	;# 
  1808  011D                     	;# 
  1809  011E                     	;# 
  1810  011E                     	;# 
  1811  011E                     	;# 
  1812  011F                     	;# 
  1813  011F                     	;# 
  1814  011F                     	;# 
  1815  011F                     	;# 
  1816  011F                     	;# 
  1817  018C                     	;# 
  1818  018D                     	;# 
  1819  018E                     	;# 
  1820  018F                     	;# 
  1821  0190                     	;# 
  1822  0191                     	;# 
  1823  0192                     	;# 
  1824  020C                     	;# 
  1825  020C                     	;# 
  1826  020D                     	;# 
  1827  020E                     	;# 
  1828  020F                     	;# 
  1829  020F                     	;# 
  1830  0210                     	;# 
  1831  0210                     	;# 
  1832  0211                     	;# 
  1833  0211                     	;# 
  1834  028C                     	;# 
  1835  028C                     	;# 
  1836  028D                     	;# 
  1837  028D                     	;# 
  1838  028E                     	;# 
  1839  028F                     	;# 
  1840  0290                     	;# 
  1841  0291                     	;# 
  1842  030C                     	;# 
  1843  030C                     	;# 
  1844  030D                     	;# 
  1845  030E                     	;# 
  1846  030F                     	;# 
  1847  0310                     	;# 
  1848  0310                     	;# 
  1849  0311                     	;# 
  1850  0312                     	;# 
  1851  0313                     	;# 
  1852  0314                     	;# 
  1853  0314                     	;# 
  1854  0315                     	;# 
  1855  0316                     	;# 
  1856  0318                     	;# 
  1857  0318                     	;# 
  1858  0319                     	;# 
  1859  031A                     	;# 
  1860  031C                     	;# 
  1861  031C                     	;# 
  1862  031D                     	;# 
  1863  031E                     	;# 
  1864  038C                     	;# 
  1865  038C                     	;# 
  1866  038D                     	;# 
  1867  038E                     	;# 
  1868  058C                     	;# 
  1869  058C                     	;# 
  1870  058D                     	;# 
  1871  058E                     	;# 
  1872  058F                     	;# 
  1873  058F                     	;# 
  1874  0590                     	;# 
  1875  0591                     	;# 
  1876  0592                     	;# 
  1877  0593                     	;# 
  1878  059C                     	;# 
  1879  059C                     	;# 
  1880  059D                     	;# 
  1881  059D                     	;# 
  1882  059E                     	;# 
  1883  059F                     	;# 
  1884  060C                     	;# 
  1885  060D                     	;# 
  1886  060E                     	;# 
  1887  060F                     	;# 
  1888  0610                     	;# 
  1889  0611                     	;# 
  1890  0612                     	;# 
  1891  0613                     	;# 
  1892  0614                     	;# 
  1893  070C                     	;# 
  1894  070D                     	;# 
  1895  070E                     	;# 
  1896  070F                     	;# 
  1897  0710                     	;# 
  1898  0711                     	;# 
  1899  0712                     	;# 
  1900  0713                     	;# 
  1901  0716                     	;# 
  1902  0717                     	;# 
  1903  0718                     	;# 
  1904  0719                     	;# 
  1905  071A                     	;# 
  1906  071B                     	;# 
  1907  071C                     	;# 
  1908  071D                     	;# 
  1909  0796                     	;# 
  1910  0797                     	;# 
  1911  0798                     	;# 
  1912  0799                     	;# 
  1913  079A                     	;# 
  1914  079B                     	;# 
  1915  080C                     	;# 
  1916  080D                     	;# 
  1917  080E                     	;# 
  1918  080F                     	;# 
  1919  0810                     	;# 
  1920  0811                     	;# 
  1921  0812                     	;# 
  1922  0813                     	;# 
  1923  0814                     	;# 
  1924  081A                     	;# 
  1925  081A                     	;# 
  1926  081B                     	;# 
  1927  081C                     	;# 
  1928  081C                     	;# 
  1929  081D                     	;# 
  1930  081E                     	;# 
  1931  081F                     	;# 
  1932  088C                     	;# 
  1933  088D                     	;# 
  1934  088E                     	;# 
  1935  088F                     	;# 
  1936  0890                     	;# 
  1937  0891                     	;# 
  1938  0892                     	;# 
  1939  0893                     	;# 
  1940  0895                     	;# 
  1941  0896                     	;# 
  1942  090C                     	;# 
  1943  090E                     	;# 
  1944  090F                     	;# 
  1945  091F                     	;# 
  1946  098F                     	;# 
  1947  098F                     	;# 
  1948  0990                     	;# 
  1949  0991                     	;# 
  1950  0992                     	;# 
  1951  0993                     	;# 
  1952  0994                     	;# 
  1953  0995                     	;# 
  1954  0996                     	;# 
  1955  0997                     	;# 
  1956  0A19                     	;# 
  1957  0A19                     	;# 
  1958  0A1A                     	;# 
  1959  0A1A                     	;# 
  1960  0A1B                     	;# 
  1961  0A1B                     	;# 
  1962  0A1B                     	;# 
  1963  0A1C                     	;# 
  1964  0A1C                     	;# 
  1965  0A1D                     	;# 
  1966  0A1D                     	;# 
  1967  0A1E                     	;# 
  1968  0A1E                     	;# 
  1969  0A1F                     	;# 
  1970  0A1F                     	;# 
  1971  0A1F                     	;# 
  1972  1E0F                     	;# 
  1973  1E10                     	;# 
  1974  1E11                     	;# 
  1975  1E12                     	;# 
  1976  1E13                     	;# 
  1977  1E14                     	;# 
  1978  1E15                     	;# 
  1979  1E16                     	;# 
  1980  1E17                     	;# 
  1981  1E18                     	;# 
  1982  1E19                     	;# 
  1983  1E1A                     	;# 
  1984  1E1B                     	;# 
  1985  1E1C                     	;# 
  1986  1E1D                     	;# 
  1987  1E1E                     	;# 
  1988  1E1F                     	;# 
  1989  1E20                     	;# 
  1990  1E21                     	;# 
  1991  1E22                     	;# 
  1992  1E23                     	;# 
  1993  1E24                     	;# 
  1994  1E25                     	;# 
  1995  1E26                     	;# 
  1996  1E27                     	;# 
  1997  1E28                     	;# 
  1998  1E29                     	;# 
  1999  1E2A                     	;# 
  2000  1E2B                     	;# 
  2001  1E2C                     	;# 
  2002  1E2D                     	;# 
  2003  1E2E                     	;# 
  2004  1E2F                     	;# 
  2005  1E30                     	;# 
  2006  1E31                     	;# 
  2007  1E32                     	;# 
  2008  1E33                     	;# 
  2009  1E34                     	;# 
  2010  1E35                     	;# 
  2011  1E36                     	;# 
  2012  1E37                     	;# 
  2013  1E8F                     	;# 
  2014  1E90                     	;# 
  2015  1E91                     	;# 
  2016  1E92                     	;# 
  2017  1E93                     	;# 
  2018  1E9C                     	;# 
  2019  1EA1                     	;# 
  2020  1EA2                     	;# 
  2021  1EB1                     	;# 
  2022  1EBB                     	;# 
  2023  1EBC                     	;# 
  2024  1EBD                     	;# 
  2025  1EBE                     	;# 
  2026  1EC3                     	;# 
  2027  1EC5                     	;# 
  2028  1EC6                     	;# 
  2029  1EC7                     	;# 
  2030  1ECB                     	;# 
  2031  1ECC                     	;# 
  2032  1ECD                     	;# 
  2033  1ECE                     	;# 
  2034  1F10                     	;# 
  2035  1F11                     	;# 
  2036  1F12                     	;# 
  2037  1F13                     	;# 
  2038  1F14                     	;# 
  2039  1F15                     	;# 
  2040  1F1C                     	;# 
  2041  1F1D                     	;# 
  2042  1F1E                     	;# 
  2043  1F1F                     	;# 
  2044  1F20                     	;# 
  2045  1F21                     	;# 
  2046  1F22                     	;# 
  2047  1F23                     	;# 
  2048  1F24                     	;# 
  2049  1F25                     	;# 
  2050  1F26                     	;# 
  2051  1F27                     	;# 
  2052  1F38                     	;# 
  2053  1F39                     	;# 
  2054  1F3A                     	;# 
  2055  1F3B                     	;# 
  2056  1F3C                     	;# 
  2057  1F3D                     	;# 
  2058  1F3E                     	;# 
  2059  1F3F                     	;# 
  2060  1F43                     	;# 
  2061  1F44                     	;# 
  2062  1F45                     	;# 
  2063  1F46                     	;# 
  2064  1F47                     	;# 
  2065  1F48                     	;# 
  2066  1F49                     	;# 
  2067  1F4A                     	;# 
  2068  1F4E                     	;# 
  2069  1F4F                     	;# 
  2070  1F50                     	;# 
  2071  1F51                     	;# 
  2072  1F52                     	;# 
  2073  1F53                     	;# 
  2074  1F54                     	;# 
  2075  1F55                     	;# 
  2076  1FE4                     	;# 
  2077  1FE5                     	;# 
  2078  1FE6                     	;# 
  2079  1FE7                     	;# 
  2080  1FE8                     	;# 
  2081  1FE8                     	;# 
  2082  1FE9                     	;# 
  2083  1FEA                     	;# 
  2084  1FEA                     	;# 
  2085  1FEB                     	;# 
  2086  1FED                     	;# 
  2087  1FEE                     	;# 
  2088  1FEF                     	;# 
  2089  0000                     	;# 
  2090  0001                     	;# 
  2091  0002                     	;# 
  2092  0003                     	;# 
  2093  0004                     	;# 
  2094  0005                     	;# 
  2095  0006                     	;# 
  2096  0007                     	;# 
  2097  0008                     	;# 
  2098  0009                     	;# 
  2099  000A                     	;# 
  2100  000B                     	;# 
  2101  000C                     	;# 
  2102  000D                     	;# 
  2103  000E                     	;# 
  2104  0012                     	;# 
  2105  0013                     	;# 
  2106  0014                     	;# 
  2107  0018                     	;# 
  2108  0019                     	;# 
  2109  001A                     	;# 
  2110  009B                     	;# 
  2111  009B                     	;# 
  2112  009C                     	;# 
  2113  009D                     	;# 
  2114  009E                     	;# 
  2115  009F                     	;# 
  2116  0119                     	;# 
  2117  0119                     	;# 
  2118  0119                     	;# 
  2119  011A                     	;# 
  2120  011A                     	;# 
  2121  011A                     	;# 
  2122  011B                     	;# 
  2123  011B                     	;# 
  2124  011B                     	;# 
  2125  011B                     	;# 
  2126  011B                     	;# 
  2127  011C                     	;# 
  2128  011C                     	;# 
  2129  011C                     	;# 
  2130  011D                     	;# 
  2131  011D                     	;# 
  2132  011D                     	;# 
  2133  011E                     	;# 
  2134  011E                     	;# 
  2135  011E                     	;# 
  2136  011F                     	;# 
  2137  011F                     	;# 
  2138  011F                     	;# 
  2139  011F                     	;# 
  2140  011F                     	;# 
  2141  018C                     	;# 
  2142  018D                     	;# 
  2143  018E                     	;# 
  2144  018F                     	;# 
  2145  0190                     	;# 
  2146  0191                     	;# 
  2147  0192                     	;# 
  2148  020C                     	;# 
  2149  020C                     	;# 
  2150  020D                     	;# 
  2151  020E                     	;# 
  2152  020F                     	;# 
  2153  020F                     	;# 
  2154  0210                     	;# 
  2155  0210                     	;# 
  2156  0211                     	;# 
  2157  0211                     	;# 
  2158  028C                     	;# 
  2159  028C                     	;# 
  2160  028D                     	;# 
  2161  028D                     	;# 
  2162  028E                     	;# 
  2163  028F                     	;# 
  2164  0290                     	;# 
  2165  0291                     	;# 
  2166  030C                     	;# 
  2167  030C                     	;# 
  2168  030D                     	;# 
  2169  030E                     	;# 
  2170  030F                     	;# 
  2171  0310                     	;# 
  2172  0310                     	;# 
  2173  0311                     	;# 
  2174  0312                     	;# 
  2175  0313                     	;# 
  2176  0314                     	;# 
  2177  0314                     	;# 
  2178  0315                     	;# 
  2179  0316                     	;# 
  2180  0318                     	;# 
  2181  0318                     	;# 
  2182  0319                     	;# 
  2183  031A                     	;# 
  2184  031C                     	;# 
  2185  031C                     	;# 
  2186  031D                     	;# 
  2187  031E                     	;# 
  2188  038C                     	;# 
  2189  038C                     	;# 
  2190  038D                     	;# 
  2191  038E                     	;# 
  2192  058C                     	;# 
  2193  058C                     	;# 
  2194  058D                     	;# 
  2195  058E                     	;# 
  2196  058F                     	;# 
  2197  058F                     	;# 
  2198  0590                     	;# 
  2199  0591                     	;# 
  2200  0592                     	;# 
  2201  0593                     	;# 
  2202  059C                     	;# 
  2203  059C                     	;# 
  2204  059D                     	;# 
  2205  059D                     	;# 
  2206  059E                     	;# 
  2207  059F                     	;# 
  2208  060C                     	;# 
  2209  060D                     	;# 
  2210  060E                     	;# 
  2211  060F                     	;# 
  2212  0610                     	;# 
  2213  0611                     	;# 
  2214  0612                     	;# 
  2215  0613                     	;# 
  2216  0614                     	;# 
  2217  070C                     	;# 
  2218  070D                     	;# 
  2219  070E                     	;# 
  2220  070F                     	;# 
  2221  0710                     	;# 
  2222  0711                     	;# 
  2223  0712                     	;# 
  2224  0713                     	;# 
  2225  0716                     	;# 
  2226  0717                     	;# 
  2227  0718                     	;# 
  2228  0719                     	;# 
  2229  071A                     	;# 
  2230  071B                     	;# 
  2231  071C                     	;# 
  2232  071D                     	;# 
  2233  0796                     	;# 
  2234  0797                     	;# 
  2235  0798                     	;# 
  2236  0799                     	;# 
  2237  079A                     	;# 
  2238  079B                     	;# 
  2239  080C                     	;# 
  2240  080D                     	;# 
  2241  080E                     	;# 
  2242  080F                     	;# 
  2243  0810                     	;# 
  2244  0811                     	;# 
  2245  0812                     	;# 
  2246  0813                     	;# 
  2247  0814                     	;# 
  2248  081A                     	;# 
  2249  081A                     	;# 
  2250  081B                     	;# 
  2251  081C                     	;# 
  2252  081C                     	;# 
  2253  081D                     	;# 
  2254  081E                     	;# 
  2255  081F                     	;# 
  2256  088C                     	;# 
  2257  088D                     	;# 
  2258  088E                     	;# 
  2259  088F                     	;# 
  2260  0890                     	;# 
  2261  0891                     	;# 
  2262  0892                     	;# 
  2263  0893                     	;# 
  2264  0895                     	;# 
  2265  0896                     	;# 
  2266  090C                     	;# 
  2267  090E                     	;# 
  2268  090F                     	;# 
  2269  091F                     	;# 
  2270  098F                     	;# 
  2271  098F                     	;# 
  2272  0990                     	;# 
  2273  0991                     	;# 
  2274  0992                     	;# 
  2275  0993                     	;# 
  2276  0994                     	;# 
  2277  0995                     	;# 
  2278  0996                     	;# 
  2279  0997                     	;# 
  2280  0A19                     	;# 
  2281  0A19                     	;# 
  2282  0A1A                     	;# 
  2283  0A1A                     	;# 
  2284  0A1B                     	;# 
  2285  0A1B                     	;# 
  2286  0A1B                     	;# 
  2287  0A1C                     	;# 
  2288  0A1C                     	;# 
  2289  0A1D                     	;# 
  2290  0A1D                     	;# 
  2291  0A1E                     	;# 
  2292  0A1E                     	;# 
  2293  0A1F                     	;# 
  2294  0A1F                     	;# 
  2295  0A1F                     	;# 
  2296  1E0F                     	;# 
  2297  1E10                     	;# 
  2298  1E11                     	;# 
  2299  1E12                     	;# 
  2300  1E13                     	;# 
  2301  1E14                     	;# 
  2302  1E15                     	;# 
  2303  1E16                     	;# 
  2304  1E17                     	;# 
  2305  1E18                     	;# 
  2306  1E19                     	;# 
  2307  1E1A                     	;# 
  2308  1E1B                     	;# 
  2309  1E1C                     	;# 
  2310  1E1D                     	;# 
  2311  1E1E                     	;# 
  2312  1E1F                     	;# 
  2313  1E20                     	;# 
  2314  1E21                     	;# 
  2315  1E22                     	;# 
  2316  1E23                     	;# 
  2317  1E24                     	;# 
  2318  1E25                     	;# 
  2319  1E26                     	;# 
  2320  1E27                     	;# 
  2321  1E28                     	;# 
  2322  1E29                     	;# 
  2323  1E2A                     	;# 
  2324  1E2B                     	;# 
  2325  1E2C                     	;# 
  2326  1E2D                     	;# 
  2327  1E2E                     	;# 
  2328  1E2F                     	;# 
  2329  1E30                     	;# 
  2330  1E31                     	;# 
  2331  1E32                     	;# 
  2332  1E33                     	;# 
  2333  1E34                     	;# 
  2334  1E35                     	;# 
  2335  1E36                     	;# 
  2336  1E37                     	;# 
  2337  1E8F                     	;# 
  2338  1E90                     	;# 
  2339  1E91                     	;# 
  2340  1E92                     	;# 
  2341  1E93                     	;# 
  2342  1E9C                     	;# 
  2343  1EA1                     	;# 
  2344  1EA2                     	;# 
  2345  1EB1                     	;# 
  2346  1EBB                     	;# 
  2347  1EBC                     	;# 
  2348  1EBD                     	;# 
  2349  1EBE                     	;# 
  2350  1EC3                     	;# 
  2351  1EC5                     	;# 
  2352  1EC6                     	;# 
  2353  1EC7                     	;# 
  2354  1ECB                     	;# 
  2355  1ECC                     	;# 
  2356  1ECD                     	;# 
  2357  1ECE                     	;# 
  2358  1F10                     	;# 
  2359  1F11                     	;# 
  2360  1F12                     	;# 
  2361  1F13                     	;# 
  2362  1F14                     	;# 
  2363  1F15                     	;# 
  2364  1F1C                     	;# 
  2365  1F1D                     	;# 
  2366  1F1E                     	;# 
  2367  1F1F                     	;# 
  2368  1F20                     	;# 
  2369  1F21                     	;# 
  2370  1F22                     	;# 
  2371  1F23                     	;# 
  2372  1F24                     	;# 
  2373  1F25                     	;# 
  2374  1F26                     	;# 
  2375  1F27                     	;# 
  2376  1F38                     	;# 
  2377  1F39                     	;# 
  2378  1F3A                     	;# 
  2379  1F3B                     	;# 
  2380  1F3C                     	;# 
  2381  1F3D                     	;# 
  2382  1F3E                     	;# 
  2383  1F3F                     	;# 
  2384  1F43                     	;# 
  2385  1F44                     	;# 
  2386  1F45                     	;# 
  2387  1F46                     	;# 
  2388  1F47                     	;# 
  2389  1F48                     	;# 
  2390  1F49                     	;# 
  2391  1F4A                     	;# 
  2392  1F4E                     	;# 
  2393  1F4F                     	;# 
  2394  1F50                     	;# 
  2395  1F51                     	;# 
  2396  1F52                     	;# 
  2397  1F53                     	;# 
  2398  1F54                     	;# 
  2399  1F55                     	;# 
  2400  1FE4                     	;# 
  2401  1FE5                     	;# 
  2402  1FE6                     	;# 
  2403  1FE7                     	;# 
  2404  1FE8                     	;# 
  2405  1FE8                     	;# 
  2406  1FE9                     	;# 
  2407  1FEA                     	;# 
  2408  1FEA                     	;# 
  2409  1FEB                     	;# 
  2410  1FED                     	;# 
  2411  1FEE                     	;# 
  2412  1FEF                     	;# 
  2413  0000                     	;# 
  2414  0001                     	;# 
  2415  0002                     	;# 
  2416  0003                     	;# 
  2417  0004                     	;# 
  2418  0005                     	;# 
  2419  0006                     	;# 
  2420  0007                     	;# 
  2421  0008                     	;# 
  2422  0009                     	;# 
  2423  000A                     	;# 
  2424  000B                     	;# 
  2425  000C                     	;# 
  2426  000D                     	;# 
  2427  000E                     	;# 
  2428  0012                     	;# 
  2429  0013                     	;# 
  2430  0014                     	;# 
  2431  0018                     	;# 
  2432  0019                     	;# 
  2433  001A                     	;# 
  2434  009B                     	;# 
  2435  009B                     	;# 
  2436  009C                     	;# 
  2437  009D                     	;# 
  2438  009E                     	;# 
  2439  009F                     	;# 
  2440  0119                     	;# 
  2441  0119                     	;# 
  2442  0119                     	;# 
  2443  011A                     	;# 
  2444  011A                     	;# 
  2445  011A                     	;# 
  2446  011B                     	;# 
  2447  011B                     	;# 
  2448  011B                     	;# 
  2449  011B                     	;# 
  2450  011B                     	;# 
  2451  011C                     	;# 
  2452  011C                     	;# 
  2453  011C                     	;# 
  2454  011D                     	;# 
  2455  011D                     	;# 
  2456  011D                     	;# 
  2457  011E                     	;# 
  2458  011E                     	;# 
  2459  011E                     	;# 
  2460  011F                     	;# 
  2461  011F                     	;# 
  2462  011F                     	;# 
  2463  011F                     	;# 
  2464  011F                     	;# 
  2465  018C                     	;# 
  2466  018D                     	;# 
  2467  018E                     	;# 
  2468  018F                     	;# 
  2469  0190                     	;# 
  2470  0191                     	;# 
  2471  0192                     	;# 
  2472  020C                     	;# 
  2473  020C                     	;# 
  2474  020D                     	;# 
  2475  020E                     	;# 
  2476  020F                     	;# 
  2477  020F                     	;# 
  2478  0210                     	;# 
  2479  0210                     	;# 
  2480  0211                     	;# 
  2481  0211                     	;# 
  2482  028C                     	;# 
  2483  028C                     	;# 
  2484  028D                     	;# 
  2485  028D                     	;# 
  2486  028E                     	;# 
  2487  028F                     	;# 
  2488  0290                     	;# 
  2489  0291                     	;# 
  2490  030C                     	;# 
  2491  030C                     	;# 
  2492  030D                     	;# 
  2493  030E                     	;# 
  2494  030F                     	;# 
  2495  0310                     	;# 
  2496  0310                     	;# 
  2497  0311                     	;# 
  2498  0312                     	;# 
  2499  0313                     	;# 
  2500  0314                     	;# 
  2501  0314                     	;# 
  2502  0315                     	;# 
  2503  0316                     	;# 
  2504  0318                     	;# 
  2505  0318                     	;# 
  2506  0319                     	;# 
  2507  031A                     	;# 
  2508  031C                     	;# 
  2509  031C                     	;# 
  2510  031D                     	;# 
  2511  031E                     	;# 
  2512  038C                     	;# 
  2513  038C                     	;# 
  2514  038D                     	;# 
  2515  038E                     	;# 
  2516  058C                     	;# 
  2517  058C                     	;# 
  2518  058D                     	;# 
  2519  058E                     	;# 
  2520  058F                     	;# 
  2521  058F                     	;# 
  2522  0590                     	;# 
  2523  0591                     	;# 
  2524  0592                     	;# 
  2525  0593                     	;# 
  2526  059C                     	;# 
  2527  059C                     	;# 
  2528  059D                     	;# 
  2529  059D                     	;# 
  2530  059E                     	;# 
  2531  059F                     	;# 
  2532  060C                     	;# 
  2533  060D                     	;# 
  2534  060E                     	;# 
  2535  060F                     	;# 
  2536  0610                     	;# 
  2537  0611                     	;# 
  2538  0612                     	;# 
  2539  0613                     	;# 
  2540  0614                     	;# 
  2541  070C                     	;# 
  2542  070D                     	;# 
  2543  070E                     	;# 
  2544  070F                     	;# 
  2545  0710                     	;# 
  2546  0711                     	;# 
  2547  0712                     	;# 
  2548  0713                     	;# 
  2549  0716                     	;# 
  2550  0717                     	;# 
  2551  0718                     	;# 
  2552  0719                     	;# 
  2553  071A                     	;# 
  2554  071B                     	;# 
  2555  071C                     	;# 
  2556  071D                     	;# 
  2557  0796                     	;# 
  2558  0797                     	;# 
  2559  0798                     	;# 
  2560  0799                     	;# 
  2561  079A                     	;# 
  2562  079B                     	;# 
  2563  080C                     	;# 
  2564  080D                     	;# 
  2565  080E                     	;# 
  2566  080F                     	;# 
  2567  0810                     	;# 
  2568  0811                     	;# 
  2569  0812                     	;# 
  2570  0813                     	;# 
  2571  0814                     	;# 
  2572  081A                     	;# 
  2573  081A                     	;# 
  2574  081B                     	;# 
  2575  081C                     	;# 
  2576  081C                     	;# 
  2577  081D                     	;# 
  2578  081E                     	;# 
  2579  081F                     	;# 
  2580  088C                     	;# 
  2581  088D                     	;# 
  2582  088E                     	;# 
  2583  088F                     	;# 
  2584  0890                     	;# 
  2585  0891                     	;# 
  2586  0892                     	;# 
  2587  0893                     	;# 
  2588  0895                     	;# 
  2589  0896                     	;# 
  2590  090C                     	;# 
  2591  090E                     	;# 
  2592  090F                     	;# 
  2593  091F                     	;# 
  2594  098F                     	;# 
  2595  098F                     	;# 
  2596  0990                     	;# 
  2597  0991                     	;# 
  2598  0992                     	;# 
  2599  0993                     	;# 
  2600  0994                     	;# 
  2601  0995                     	;# 
  2602  0996                     	;# 
  2603  0997                     	;# 
  2604  0A19                     	;# 
  2605  0A19                     	;# 
  2606  0A1A                     	;# 
  2607  0A1A                     	;# 
  2608  0A1B                     	;# 
  2609  0A1B                     	;# 
  2610  0A1B                     	;# 
  2611  0A1C                     	;# 
  2612  0A1C                     	;# 
  2613  0A1D                     	;# 
  2614  0A1D                     	;# 
  2615  0A1E                     	;# 
  2616  0A1E                     	;# 
  2617  0A1F                     	;# 
  2618  0A1F                     	;# 
  2619  0A1F                     	;# 
  2620  1E0F                     	;# 
  2621  1E10                     	;# 
  2622  1E11                     	;# 
  2623  1E12                     	;# 
  2624  1E13                     	;# 
  2625  1E14                     	;# 
  2626  1E15                     	;# 
  2627  1E16                     	;# 
  2628  1E17                     	;# 
  2629  1E18                     	;# 
  2630  1E19                     	;# 
  2631  1E1A                     	;# 
  2632  1E1B                     	;# 
  2633  1E1C                     	;# 
  2634  1E1D                     	;# 
  2635  1E1E                     	;# 
  2636  1E1F                     	;# 
  2637  1E20                     	;# 
  2638  1E21                     	;# 
  2639  1E22                     	;# 
  2640  1E23                     	;# 
  2641  1E24                     	;# 
  2642  1E25                     	;# 
  2643  1E26                     	;# 
  2644  1E27                     	;# 
  2645  1E28                     	;# 
  2646  1E29                     	;# 
  2647  1E2A                     	;# 
  2648  1E2B                     	;# 
  2649  1E2C                     	;# 
  2650  1E2D                     	;# 
  2651  1E2E                     	;# 
  2652  1E2F                     	;# 
  2653  1E30                     	;# 
  2654  1E31                     	;# 
  2655  1E32                     	;# 
  2656  1E33                     	;# 
  2657  1E34                     	;# 
  2658  1E35                     	;# 
  2659  1E36                     	;# 
  2660  1E37                     	;# 
  2661  1E8F                     	;# 
  2662  1E90                     	;# 
  2663  1E91                     	;# 
  2664  1E92                     	;# 
  2665  1E93                     	;# 
  2666  1E9C                     	;# 
  2667  1EA1                     	;# 
  2668  1EA2                     	;# 
  2669  1EB1                     	;# 
  2670  1EBB                     	;# 
  2671  1EBC                     	;# 
  2672  1EBD                     	;# 
  2673  1EBE                     	;# 
  2674  1EC3                     	;# 
  2675  1EC5                     	;# 
  2676  1EC6                     	;# 
  2677  1EC7                     	;# 
  2678  1ECB                     	;# 
  2679  1ECC                     	;# 
  2680  1ECD                     	;# 
  2681  1ECE                     	;# 
  2682  1F10                     	;# 
  2683  1F11                     	;# 
  2684  1F12                     	;# 
  2685  1F13                     	;# 
  2686  1F14                     	;# 
  2687  1F15                     	;# 
  2688  1F1C                     	;# 
  2689  1F1D                     	;# 
  2690  1F1E                     	;# 
  2691  1F1F                     	;# 
  2692  1F20                     	;# 
  2693  1F21                     	;# 
  2694  1F22                     	;# 
  2695  1F23                     	;# 
  2696  1F24                     	;# 
  2697  1F25                     	;# 
  2698  1F26                     	;# 
  2699  1F27                     	;# 
  2700  1F38                     	;# 
  2701  1F39                     	;# 
  2702  1F3A                     	;# 
  2703  1F3B                     	;# 
  2704  1F3C                     	;# 
  2705  1F3D                     	;# 
  2706  1F3E                     	;# 
  2707  1F3F                     	;# 
  2708  1F43                     	;# 
  2709  1F44                     	;# 
  2710  1F45                     	;# 
  2711  1F46                     	;# 
  2712  1F47                     	;# 
  2713  1F48                     	;# 
  2714  1F49                     	;# 
  2715  1F4A                     	;# 
  2716  1F4E                     	;# 
  2717  1F4F                     	;# 
  2718  1F50                     	;# 
  2719  1F51                     	;# 
  2720  1F52                     	;# 
  2721  1F53                     	;# 
  2722  1F54                     	;# 
  2723  1F55                     	;# 
  2724  1FE4                     	;# 
  2725  1FE5                     	;# 
  2726  1FE6                     	;# 
  2727  1FE7                     	;# 
  2728  1FE8                     	;# 
  2729  1FE8                     	;# 
  2730  1FE9                     	;# 
  2731  1FEA                     	;# 
  2732  1FEA                     	;# 
  2733  1FEB                     	;# 
  2734  1FED                     	;# 
  2735  1FEE                     	;# 
  2736  1FEF                     	;# 
  2737  0000                     	;# 
  2738  0001                     	;# 
  2739  0002                     	;# 
  2740  0003                     	;# 
  2741  0004                     	;# 
  2742  0005                     	;# 
  2743  0006                     	;# 
  2744  0007                     	;# 
  2745  0008                     	;# 
  2746  0009                     	;# 
  2747  000A                     	;# 
  2748  000B                     	;# 
  2749  000C                     	;# 
  2750  000D                     	;# 
  2751  000E                     	;# 
  2752  0012                     	;# 
  2753  0013                     	;# 
  2754  0014                     	;# 
  2755  0018                     	;# 
  2756  0019                     	;# 
  2757  001A                     	;# 
  2758  009B                     	;# 
  2759  009B                     	;# 
  2760  009C                     	;# 
  2761  009D                     	;# 
  2762  009E                     	;# 
  2763  009F                     	;# 
  2764  0119                     	;# 
  2765  0119                     	;# 
  2766  0119                     	;# 
  2767  011A                     	;# 
  2768  011A                     	;# 
  2769  011A                     	;# 
  2770  011B                     	;# 
  2771  011B                     	;# 
  2772  011B                     	;# 
  2773  011B                     	;# 
  2774  011B                     	;# 
  2775  011C                     	;# 
  2776  011C                     	;# 
  2777  011C                     	;# 
  2778  011D                     	;# 
  2779  011D                     	;# 
  2780  011D                     	;# 
  2781  011E                     	;# 
  2782  011E                     	;# 
  2783  011E                     	;# 
  2784  011F                     	;# 
  2785  011F                     	;# 
  2786  011F                     	;# 
  2787  011F                     	;# 
  2788  011F                     	;# 
  2789  018C                     	;# 
  2790  018D                     	;# 
  2791  018E                     	;# 
  2792  018F                     	;# 
  2793  0190                     	;# 
  2794  0191                     	;# 
  2795  0192                     	;# 
  2796  020C                     	;# 
  2797  020C                     	;# 
  2798  020D                     	;# 
  2799  020E                     	;# 
  2800  020F                     	;# 
  2801  020F                     	;# 
  2802  0210                     	;# 
  2803  0210                     	;# 
  2804  0211                     	;# 
  2805  0211                     	;# 
  2806  028C                     	;# 
  2807  028C                     	;# 
  2808  028D                     	;# 
  2809  028D                     	;# 
  2810  028E                     	;# 
  2811  028F                     	;# 
  2812  0290                     	;# 
  2813  0291                     	;# 
  2814  030C                     	;# 
  2815  030C                     	;# 
  2816  030D                     	;# 
  2817  030E                     	;# 
  2818  030F                     	;# 
  2819  0310                     	;# 
  2820  0310                     	;# 
  2821  0311                     	;# 
  2822  0312                     	;# 
  2823  0313                     	;# 
  2824  0314                     	;# 
  2825  0314                     	;# 
  2826  0315                     	;# 
  2827  0316                     	;# 
  2828  0318                     	;# 
  2829  0318                     	;# 
  2830  0319                     	;# 
  2831  031A                     	;# 
  2832  031C                     	;# 
  2833  031C                     	;# 
  2834  031D                     	;# 
  2835  031E                     	;# 
  2836  038C                     	;# 
  2837  038C                     	;# 
  2838  038D                     	;# 
  2839  038E                     	;# 
  2840  058C                     	;# 
  2841  058C                     	;# 
  2842  058D                     	;# 
  2843  058E                     	;# 
  2844  058F                     	;# 
  2845  058F                     	;# 
  2846  0590                     	;# 
  2847  0591                     	;# 
  2848  0592                     	;# 
  2849  0593                     	;# 
  2850  059C                     	;# 
  2851  059C                     	;# 
  2852  059D                     	;# 
  2853  059D                     	;# 
  2854  059E                     	;# 
  2855  059F                     	;# 
  2856  060C                     	;# 
  2857  060D                     	;# 
  2858  060E                     	;# 
  2859  060F                     	;# 
  2860  0610                     	;# 
  2861  0611                     	;# 
  2862  0612                     	;# 
  2863  0613                     	;# 
  2864  0614                     	;# 
  2865  070C                     	;# 
  2866  070D                     	;# 
  2867  070E                     	;# 
  2868  070F                     	;# 
  2869  0710                     	;# 
  2870  0711                     	;# 
  2871  0712                     	;# 
  2872  0713                     	;# 
  2873  0716                     	;# 
  2874  0717                     	;# 
  2875  0718                     	;# 
  2876  0719                     	;# 
  2877  071A                     	;# 
  2878  071B                     	;# 
  2879  071C                     	;# 
  2880  071D                     	;# 
  2881  0796                     	;# 
  2882  0797                     	;# 
  2883  0798                     	;# 
  2884  0799                     	;# 
  2885  079A                     	;# 
  2886  079B                     	;# 
  2887  080C                     	;# 
  2888  080D                     	;# 
  2889  080E                     	;# 
  2890  080F                     	;# 
  2891  0810                     	;# 
  2892  0811                     	;# 
  2893  0812                     	;# 
  2894  0813                     	;# 
  2895  0814                     	;# 
  2896  081A                     	;# 
  2897  081A                     	;# 
  2898  081B                     	;# 
  2899  081C                     	;# 
  2900  081C                     	;# 
  2901  081D                     	;# 
  2902  081E                     	;# 
  2903  081F                     	;# 
  2904  088C                     	;# 
  2905  088D                     	;# 
  2906  088E                     	;# 
  2907  088F                     	;# 
  2908  0890                     	;# 
  2909  0891                     	;# 
  2910  0892                     	;# 
  2911  0893                     	;# 
  2912  0895                     	;# 
  2913  0896                     	;# 
  2914  090C                     	;# 
  2915  090E                     	;# 
  2916  090F                     	;# 
  2917  091F                     	;# 
  2918  098F                     	;# 
  2919  098F                     	;# 
  2920  0990                     	;# 
  2921  0991                     	;# 
  2922  0992                     	;# 
  2923  0993                     	;# 
  2924  0994                     	;# 
  2925  0995                     	;# 
  2926  0996                     	;# 
  2927  0997                     	;# 
  2928  0A19                     	;# 
  2929  0A19                     	;# 
  2930  0A1A                     	;# 
  2931  0A1A                     	;# 
  2932  0A1B                     	;# 
  2933  0A1B                     	;# 
  2934  0A1B                     	;# 
  2935  0A1C                     	;# 
  2936  0A1C                     	;# 
  2937  0A1D                     	;# 
  2938  0A1D                     	;# 
  2939  0A1E                     	;# 
  2940  0A1E                     	;# 
  2941  0A1F                     	;# 
  2942  0A1F                     	;# 
  2943  0A1F                     	;# 
  2944  1E0F                     	;# 
  2945  1E10                     	;# 
  2946  1E11                     	;# 
  2947  1E12                     	;# 
  2948  1E13                     	;# 
  2949  1E14                     	;# 
  2950  1E15                     	;# 
  2951  1E16                     	;# 
  2952  1E17                     	;# 
  2953  1E18                     	;# 
  2954  1E19                     	;# 
  2955  1E1A                     	;# 
  2956  1E1B                     	;# 
  2957  1E1C                     	;# 
  2958  1E1D                     	;# 
  2959  1E1E                     	;# 
  2960  1E1F                     	;# 
  2961  1E20                     	;# 
  2962  1E21                     	;# 
  2963  1E22                     	;# 
  2964  1E23                     	;# 
  2965  1E24                     	;# 
  2966  1E25                     	;# 
  2967  1E26                     	;# 
  2968  1E27                     	;# 
  2969  1E28                     	;# 
  2970  1E29                     	;# 
  2971  1E2A                     	;# 
  2972  1E2B                     	;# 
  2973  1E2C                     	;# 
  2974  1E2D                     	;# 
  2975  1E2E                     	;# 
  2976  1E2F                     	;# 
  2977  1E30                     	;# 
  2978  1E31                     	;# 
  2979  1E32                     	;# 
  2980  1E33                     	;# 
  2981  1E34                     	;# 
  2982  1E35                     	;# 
  2983  1E36                     	;# 
  2984  1E37                     	;# 
  2985  1E8F                     	;# 
  2986  1E90                     	;# 
  2987  1E91                     	;# 
  2988  1E92                     	;# 
  2989  1E93                     	;# 
  2990  1E9C                     	;# 
  2991  1EA1                     	;# 
  2992  1EA2                     	;# 
  2993  1EB1                     	;# 
  2994  1EBB                     	;# 
  2995  1EBC                     	;# 
  2996  1EBD                     	;# 
  2997  1EBE                     	;# 
  2998  1EC3                     	;# 
  2999  1EC5                     	;# 
  3000  1EC6                     	;# 
  3001  1EC7                     	;# 
  3002  1ECB                     	;# 
  3003  1ECC                     	;# 
  3004  1ECD                     	;# 
  3005  1ECE                     	;# 
  3006  1F10                     	;# 
  3007  1F11                     	;# 
  3008  1F12                     	;# 
  3009  1F13                     	;# 
  3010  1F14                     	;# 
  3011  1F15                     	;# 
  3012  1F1C                     	;# 
  3013  1F1D                     	;# 
  3014  1F1E                     	;# 
  3015  1F1F                     	;# 
  3016  1F20                     	;# 
  3017  1F21                     	;# 
  3018  1F22                     	;# 
  3019  1F23                     	;# 
  3020  1F24                     	;# 
  3021  1F25                     	;# 
  3022  1F26                     	;# 
  3023  1F27                     	;# 
  3024  1F38                     	;# 
  3025  1F39                     	;# 
  3026  1F3A                     	;# 
  3027  1F3B                     	;# 
  3028  1F3C                     	;# 
  3029  1F3D                     	;# 
  3030  1F3E                     	;# 
  3031  1F3F                     	;# 
  3032  1F43                     	;# 
  3033  1F44                     	;# 
  3034  1F45                     	;# 
  3035  1F46                     	;# 
  3036  1F47                     	;# 
  3037  1F48                     	;# 
  3038  1F49                     	;# 
  3039  1F4A                     	;# 
  3040  1F4E                     	;# 
  3041  1F4F                     	;# 
  3042  1F50                     	;# 
  3043  1F51                     	;# 
  3044  1F52                     	;# 
  3045  1F53                     	;# 
  3046  1F54                     	;# 
  3047  1F55                     	;# 
  3048  1FE4                     	;# 
  3049  1FE5                     	;# 
  3050  1FE6                     	;# 
  3051  1FE7                     	;# 
  3052  1FE8                     	;# 
  3053  1FE8                     	;# 
  3054  1FE9                     	;# 
  3055  1FEA                     	;# 
  3056  1FEA                     	;# 
  3057  1FEB                     	;# 
  3058  1FED                     	;# 
  3059  1FEE                     	;# 
  3060  1FEF                     	;# 
  3061  0000                     	;# 
  3062  0001                     	;# 
  3063  0002                     	;# 
  3064  0003                     	;# 
  3065  0004                     	;# 
  3066  0005                     	;# 
  3067  0006                     	;# 
  3068  0007                     	;# 
  3069  0008                     	;# 
  3070  0009                     	;# 
  3071  000A                     	;# 
  3072  000B                     	;# 
  3073  000C                     	;# 
  3074  000D                     	;# 
  3075  000E                     	;# 
  3076  0012                     	;# 
  3077  0013                     	;# 
  3078  0014                     	;# 
  3079  0018                     	;# 
  3080  0019                     	;# 
  3081  001A                     	;# 
  3082  009B                     	;# 
  3083  009B                     	;# 
  3084  009C                     	;# 
  3085  009D                     	;# 
  3086  009E                     	;# 
  3087  009F                     	;# 
  3088  0119                     	;# 
  3089  0119                     	;# 
  3090  0119                     	;# 
  3091  011A                     	;# 
  3092  011A                     	;# 
  3093  011A                     	;# 
  3094  011B                     	;# 
  3095  011B                     	;# 
  3096  011B                     	;# 
  3097  011B                     	;# 
  3098  011B                     	;# 
  3099  011C                     	;# 
  3100  011C                     	;# 
  3101  011C                     	;# 
  3102  011D                     	;# 
  3103  011D                     	;# 
  3104  011D                     	;# 
  3105  011E                     	;# 
  3106  011E                     	;# 
  3107  011E                     	;# 
  3108  011F                     	;# 
  3109  011F                     	;# 
  3110  011F                     	;# 
  3111  011F                     	;# 
  3112  011F                     	;# 
  3113  018C                     	;# 
  3114  018D                     	;# 
  3115  018E                     	;# 
  3116  018F                     	;# 
  3117  0190                     	;# 
  3118  0191                     	;# 
  3119  0192                     	;# 
  3120  020C                     	;# 
  3121  020C                     	;# 
  3122  020D                     	;# 
  3123  020E                     	;# 
  3124  020F                     	;# 
  3125  020F                     	;# 
  3126  0210                     	;# 
  3127  0210                     	;# 
  3128  0211                     	;# 
  3129  0211                     	;# 
  3130  028C                     	;# 
  3131  028C                     	;# 
  3132  028D                     	;# 
  3133  028D                     	;# 
  3134  028E                     	;# 
  3135  028F                     	;# 
  3136  0290                     	;# 
  3137  0291                     	;# 
  3138  030C                     	;# 
  3139  030C                     	;# 
  3140  030D                     	;# 
  3141  030E                     	;# 
  3142  030F                     	;# 
  3143  0310                     	;# 
  3144  0310                     	;# 
  3145  0311                     	;# 
  3146  0312                     	;# 
  3147  0313                     	;# 
  3148  0314                     	;# 
  3149  0314                     	;# 
  3150  0315                     	;# 
  3151  0316                     	;# 
  3152  0318                     	;# 
  3153  0318                     	;# 
  3154  0319                     	;# 
  3155  031A                     	;# 
  3156  031C                     	;# 
  3157  031C                     	;# 
  3158  031D                     	;# 
  3159  031E                     	;# 
  3160  038C                     	;# 
  3161  038C                     	;# 
  3162  038D                     	;# 
  3163  038E                     	;# 
  3164  058C                     	;# 
  3165  058C                     	;# 
  3166  058D                     	;# 
  3167  058E                     	;# 
  3168  058F                     	;# 
  3169  058F                     	;# 
  3170  0590                     	;# 
  3171  0591                     	;# 
  3172  0592                     	;# 
  3173  0593                     	;# 
  3174  059C                     	;# 
  3175  059C                     	;# 
  3176  059D                     	;# 
  3177  059D                     	;# 
  3178  059E                     	;# 
  3179  059F                     	;# 
  3180  060C                     	;# 
  3181  060D                     	;# 
  3182  060E                     	;# 
  3183  060F                     	;# 
  3184  0610                     	;# 
  3185  0611                     	;# 
  3186  0612                     	;# 
  3187  0613                     	;# 
  3188  0614                     	;# 
  3189  070C                     	;# 
  3190  070D                     	;# 
  3191  070E                     	;# 
  3192  070F                     	;# 
  3193  0710                     	;# 
  3194  0711                     	;# 
  3195  0712                     	;# 
  3196  0713                     	;# 
  3197  0716                     	;# 
  3198  0717                     	;# 
  3199  0718                     	;# 
  3200  0719                     	;# 
  3201  071A                     	;# 
  3202  071B                     	;# 
  3203  071C                     	;# 
  3204  071D                     	;# 
  3205  0796                     	;# 
  3206  0797                     	;# 
  3207  0798                     	;# 
  3208  0799                     	;# 
  3209  079A                     	;# 
  3210  079B                     	;# 
  3211  080C                     	;# 
  3212  080D                     	;# 
  3213  080E                     	;# 
  3214  080F                     	;# 
  3215  0810                     	;# 
  3216  0811                     	;# 
  3217  0812                     	;# 
  3218  0813                     	;# 
  3219  0814                     	;# 
  3220  081A                     	;# 
  3221  081A                     	;# 
  3222  081B                     	;# 
  3223  081C                     	;# 
  3224  081C                     	;# 
  3225  081D                     	;# 
  3226  081E                     	;# 
  3227  081F                     	;# 
  3228  088C                     	;# 
  3229  088D                     	;# 
  3230  088E                     	;# 
  3231  088F                     	;# 
  3232  0890                     	;# 
  3233  0891                     	;# 
  3234  0892                     	;# 
  3235  0893                     	;# 
  3236  0895                     	;# 
  3237  0896                     	;# 
  3238  090C                     	;# 
  3239  090E                     	;# 
  3240  090F                     	;# 
  3241  091F                     	;# 
  3242  098F                     	;# 
  3243  098F                     	;# 
  3244  0990                     	;# 
  3245  0991                     	;# 
  3246  0992                     	;# 
  3247  0993                     	;# 
  3248  0994                     	;# 
  3249  0995                     	;# 
  3250  0996                     	;# 
  3251  0997                     	;# 
  3252  0A19                     	;# 
  3253  0A19                     	;# 
  3254  0A1A                     	;# 
  3255  0A1A                     	;# 
  3256  0A1B                     	;# 
  3257  0A1B                     	;# 
  3258  0A1B                     	;# 
  3259  0A1C                     	;# 
  3260  0A1C                     	;# 
  3261  0A1D                     	;# 
  3262  0A1D                     	;# 
  3263  0A1E                     	;# 
  3264  0A1E                     	;# 
  3265  0A1F                     	;# 
  3266  0A1F                     	;# 
  3267  0A1F                     	;# 
  3268  1E0F                     	;# 
  3269  1E10                     	;# 
  3270  1E11                     	;# 
  3271  1E12                     	;# 
  3272  1E13                     	;# 
  3273  1E14                     	;# 
  3274  1E15                     	;# 
  3275  1E16                     	;# 
  3276  1E17                     	;# 
  3277  1E18                     	;# 
  3278  1E19                     	;# 
  3279  1E1A                     	;# 
  3280  1E1B                     	;# 
  3281  1E1C                     	;# 
  3282  1E1D                     	;# 
  3283  1E1E                     	;# 
  3284  1E1F                     	;# 
  3285  1E20                     	;# 
  3286  1E21                     	;# 
  3287  1E22                     	;# 
  3288  1E23                     	;# 
  3289  1E24                     	;# 
  3290  1E25                     	;# 
  3291  1E26                     	;# 
  3292  1E27                     	;# 
  3293  1E28                     	;# 
  3294  1E29                     	;# 
  3295  1E2A                     	;# 
  3296  1E2B                     	;# 
  3297  1E2C                     	;# 
  3298  1E2D                     	;# 
  3299  1E2E                     	;# 
  3300  1E2F                     	;# 
  3301  1E30                     	;# 
  3302  1E31                     	;# 
  3303  1E32                     	;# 
  3304  1E33                     	;# 
  3305  1E34                     	;# 
  3306  1E35                     	;# 
  3307  1E36                     	;# 
  3308  1E37                     	;# 
  3309  1E8F                     	;# 
  3310  1E90                     	;# 
  3311  1E91                     	;# 
  3312  1E92                     	;# 
  3313  1E93                     	;# 
  3314  1E9C                     	;# 
  3315  1EA1                     	;# 
  3316  1EA2                     	;# 
  3317  1EB1                     	;# 
  3318  1EBB                     	;# 
  3319  1EBC                     	;# 
  3320  1EBD                     	;# 
  3321  1EBE                     	;# 
  3322  1EC3                     	;# 
  3323  1EC5                     	;# 
  3324  1EC6                     	;# 
  3325  1EC7                     	;# 
  3326  1ECB                     	;# 
  3327  1ECC                     	;# 
  3328  1ECD                     	;# 
  3329  1ECE                     	;# 
  3330  1F10                     	;# 
  3331  1F11                     	;# 
  3332  1F12                     	;# 
  3333  1F13                     	;# 
  3334  1F14                     	;# 
  3335  1F15                     	;# 
  3336  1F1C                     	;# 
  3337  1F1D                     	;# 
  3338  1F1E                     	;# 
  3339  1F1F                     	;# 
  3340  1F20                     	;# 
  3341  1F21                     	;# 
  3342  1F22                     	;# 
  3343  1F23                     	;# 
  3344  1F24                     	;# 
  3345  1F25                     	;# 
  3346  1F26                     	;# 
  3347  1F27                     	;# 
  3348  1F38                     	;# 
  3349  1F39                     	;# 
  3350  1F3A                     	;# 
  3351  1F3B                     	;# 
  3352  1F3C                     	;# 
  3353  1F3D                     	;# 
  3354  1F3E                     	;# 
  3355  1F3F                     	;# 
  3356  1F43                     	;# 
  3357  1F44                     	;# 
  3358  1F45                     	;# 
  3359  1F46                     	;# 
  3360  1F47                     	;# 
  3361  1F48                     	;# 
  3362  1F49                     	;# 
  3363  1F4A                     	;# 
  3364  1F4E                     	;# 
  3365  1F4F                     	;# 
  3366  1F50                     	;# 
  3367  1F51                     	;# 
  3368  1F52                     	;# 
  3369  1F53                     	;# 
  3370  1F54                     	;# 
  3371  1F55                     	;# 
  3372  1FE4                     	;# 
  3373  1FE5                     	;# 
  3374  1FE6                     	;# 
  3375  1FE7                     	;# 
  3376  1FE8                     	;# 
  3377  1FE8                     	;# 
  3378  1FE9                     	;# 
  3379  1FEA                     	;# 
  3380  1FEA                     	;# 
  3381  1FEB                     	;# 
  3382  1FED                     	;# 
  3383  1FEE                     	;# 
  3384  1FEF                     	;# 
  3385  0000                     	;# 
  3386  0001                     	;# 
  3387  0002                     	;# 
  3388  0003                     	;# 
  3389  0004                     	;# 
  3390  0005                     	;# 
  3391  0006                     	;# 
  3392  0007                     	;# 
  3393  0008                     	;# 
  3394  0009                     	;# 
  3395  000A                     	;# 
  3396  000B                     	;# 
  3397  000C                     	;# 
  3398  000D                     	;# 
  3399  000E                     	;# 
  3400  0012                     	;# 
  3401  0013                     	;# 
  3402  0014                     	;# 
  3403  0018                     	;# 
  3404  0019                     	;# 
  3405  001A                     	;# 
  3406  009B                     	;# 
  3407  009B                     	;# 
  3408  009C                     	;# 
  3409  009D                     	;# 
  3410  009E                     	;# 
  3411  009F                     	;# 
  3412  0119                     	;# 
  3413  0119                     	;# 
  3414  0119                     	;# 
  3415  011A                     	;# 
  3416  011A                     	;# 
  3417  011A                     	;# 
  3418  011B                     	;# 
  3419  011B                     	;# 
  3420  011B                     	;# 
  3421  011B                     	;# 
  3422  011B                     	;# 
  3423  011C                     	;# 
  3424  011C                     	;# 
  3425  011C                     	;# 
  3426  011D                     	;# 
  3427  011D                     	;# 
  3428  011D                     	;# 
  3429  011E                     	;# 
  3430  011E                     	;# 
  3431  011E                     	;# 
  3432  011F                     	;# 
  3433  011F                     	;# 
  3434  011F                     	;# 
  3435  011F                     	;# 
  3436  011F                     	;# 
  3437  018C                     	;# 
  3438  018D                     	;# 
  3439  018E                     	;# 
  3440  018F                     	;# 
  3441  0190                     	;# 
  3442  0191                     	;# 
  3443  0192                     	;# 
  3444  020C                     	;# 
  3445  020C                     	;# 
  3446  020D                     	;# 
  3447  020E                     	;# 
  3448  020F                     	;# 
  3449  020F                     	;# 
  3450  0210                     	;# 
  3451  0210                     	;# 
  3452  0211                     	;# 
  3453  0211                     	;# 
  3454  028C                     	;# 
  3455  028C                     	;# 
  3456  028D                     	;# 
  3457  028D                     	;# 
  3458  028E                     	;# 
  3459  028F                     	;# 
  3460  0290                     	;# 
  3461  0291                     	;# 
  3462  030C                     	;# 
  3463  030C                     	;# 
  3464  030D                     	;# 
  3465  030E                     	;# 
  3466  030F                     	;# 
  3467  0310                     	;# 
  3468  0310                     	;# 
  3469  0311                     	;# 
  3470  0312                     	;# 
  3471  0313                     	;# 
  3472  0314                     	;# 
  3473  0314                     	;# 
  3474  0315                     	;# 
  3475  0316                     	;# 
  3476  0318                     	;# 
  3477  0318                     	;# 
  3478  0319                     	;# 
  3479  031A                     	;# 
  3480  031C                     	;# 
  3481  031C                     	;# 
  3482  031D                     	;# 
  3483  031E                     	;# 
  3484  038C                     	;# 
  3485  038C                     	;# 
  3486  038D                     	;# 
  3487  038E                     	;# 
  3488  058C                     	;# 
  3489  058C                     	;# 
  3490  058D                     	;# 
  3491  058E                     	;# 
  3492  058F                     	;# 
  3493  058F                     	;# 
  3494  0590                     	;# 
  3495  0591                     	;# 
  3496  0592                     	;# 
  3497  0593                     	;# 
  3498  059C                     	;# 
  3499  059C                     	;# 
  3500  059D                     	;# 
  3501  059D                     	;# 
  3502  059E                     	;# 
  3503  059F                     	;# 
  3504  060C                     	;# 
  3505  060D                     	;# 
  3506  060E                     	;# 
  3507  060F                     	;# 
  3508  0610                     	;# 
  3509  0611                     	;# 
  3510  0612                     	;# 
  3511  0613                     	;# 
  3512  0614                     	;# 
  3513  070C                     	;# 
  3514  070D                     	;# 
  3515  070E                     	;# 
  3516  070F                     	;# 
  3517  0710                     	;# 
  3518  0711                     	;# 
  3519  0712                     	;# 
  3520  0713                     	;# 
  3521  0716                     	;# 
  3522  0717                     	;# 
  3523  0718                     	;# 
  3524  0719                     	;# 
  3525  071A                     	;# 
  3526  071B                     	;# 
  3527  071C                     	;# 
  3528  071D                     	;# 
  3529  0796                     	;# 
  3530  0797                     	;# 
  3531  0798                     	;# 
  3532  0799                     	;# 
  3533  079A                     	;# 
  3534  079B                     	;# 
  3535  080C                     	;# 
  3536  080D                     	;# 
  3537  080E                     	;# 
  3538  080F                     	;# 
  3539  0810                     	;# 
  3540  0811                     	;# 
  3541  0812                     	;# 
  3542  0813                     	;# 
  3543  0814                     	;# 
  3544  081A                     	;# 
  3545  081A                     	;# 
  3546  081B                     	;# 
  3547  081C                     	;# 
  3548  081C                     	;# 
  3549  081D                     	;# 
  3550  081E                     	;# 
  3551  081F                     	;# 
  3552  088C                     	;# 
  3553  088D                     	;# 
  3554  088E                     	;# 
  3555  088F                     	;# 
  3556  0890                     	;# 
  3557  0891                     	;# 
  3558  0892                     	;# 
  3559  0893                     	;# 
  3560  0895                     	;# 
  3561  0896                     	;# 
  3562  090C                     	;# 
  3563  090E                     	;# 
  3564  090F                     	;# 
  3565  091F                     	;# 
  3566  098F                     	;# 
  3567  098F                     	;# 
  3568  0990                     	;# 
  3569  0991                     	;# 
  3570  0992                     	;# 
  3571  0993                     	;# 
  3572  0994                     	;# 
  3573  0995                     	;# 
  3574  0996                     	;# 
  3575  0997                     	;# 
  3576  0A19                     	;# 
  3577  0A19                     	;# 
  3578  0A1A                     	;# 
  3579  0A1A                     	;# 
  3580  0A1B                     	;# 
  3581  0A1B                     	;# 
  3582  0A1B                     	;# 
  3583  0A1C                     	;# 
  3584  0A1C                     	;# 
  3585  0A1D                     	;# 
  3586  0A1D                     	;# 
  3587  0A1E                     	;# 
  3588  0A1E                     	;# 
  3589  0A1F                     	;# 
  3590  0A1F                     	;# 
  3591  0A1F                     	;# 
  3592  1E0F                     	;# 
  3593  1E10                     	;# 
  3594  1E11                     	;# 
  3595  1E12                     	;# 
  3596  1E13                     	;# 
  3597  1E14                     	;# 
  3598  1E15                     	;# 
  3599  1E16                     	;# 
  3600  1E17                     	;# 
  3601  1E18                     	;# 
  3602  1E19                     	;# 
  3603  1E1A                     	;# 
  3604  1E1B                     	;# 
  3605  1E1C                     	;# 
  3606  1E1D                     	;# 
  3607  1E1E                     	;# 
  3608  1E1F                     	;# 
  3609  1E20                     	;# 
  3610  1E21                     	;# 
  3611  1E22                     	;# 
  3612  1E23                     	;# 
  3613  1E24                     	;# 
  3614  1E25                     	;# 
  3615  1E26                     	;# 
  3616  1E27                     	;# 
  3617  1E28                     	;# 
  3618  1E29                     	;# 
  3619  1E2A                     	;# 
  3620  1E2B                     	;# 
  3621  1E2C                     	;# 
  3622  1E2D                     	;# 
  3623  1E2E                     	;# 
  3624  1E2F                     	;# 
  3625  1E30                     	;# 
  3626  1E31                     	;# 
  3627  1E32                     	;# 
  3628  1E33                     	;# 
  3629  1E34                     	;# 
  3630  1E35                     	;# 
  3631  1E36                     	;# 
  3632  1E37                     	;# 
  3633  1E8F                     	;# 
  3634  1E90                     	;# 
  3635  1E91                     	;# 
  3636  1E92                     	;# 
  3637  1E93                     	;# 
  3638  1E9C                     	;# 
  3639  1EA1                     	;# 
  3640  1EA2                     	;# 
  3641  1EB1                     	;# 
  3642  1EBB                     	;# 
  3643  1EBC                     	;# 
  3644  1EBD                     	;# 
  3645  1EBE                     	;# 
  3646  1EC3                     	;# 
  3647  1EC5                     	;# 
  3648  1EC6                     	;# 
  3649  1EC7                     	;# 
  3650  1ECB                     	;# 
  3651  1ECC                     	;# 
  3652  1ECD                     	;# 
  3653  1ECE                     	;# 
  3654  1F10                     	;# 
  3655  1F11                     	;# 
  3656  1F12                     	;# 
  3657  1F13                     	;# 
  3658  1F14                     	;# 
  3659  1F15                     	;# 
  3660  1F1C                     	;# 
  3661  1F1D                     	;# 
  3662  1F1E                     	;# 
  3663  1F1F                     	;# 
  3664  1F20                     	;# 
  3665  1F21                     	;# 
  3666  1F22                     	;# 
  3667  1F23                     	;# 
  3668  1F24                     	;# 
  3669  1F25                     	;# 
  3670  1F26                     	;# 
  3671  1F27                     	;# 
  3672  1F38                     	;# 
  3673  1F39                     	;# 
  3674  1F3A                     	;# 
  3675  1F3B                     	;# 
  3676  1F3C                     	;# 
  3677  1F3D                     	;# 
  3678  1F3E                     	;# 
  3679  1F3F                     	;# 
  3680  1F43                     	;# 
  3681  1F44                     	;# 
  3682  1F45                     	;# 
  3683  1F46                     	;# 
  3684  1F47                     	;# 
  3685  1F48                     	;# 
  3686  1F49                     	;# 
  3687  1F4A                     	;# 
  3688  1F4E                     	;# 
  3689  1F4F                     	;# 
  3690  1F50                     	;# 
  3691  1F51                     	;# 
  3692  1F52                     	;# 
  3693  1F53                     	;# 
  3694  1F54                     	;# 
  3695  1F55                     	;# 
  3696  1FE4                     	;# 
  3697  1FE5                     	;# 
  3698  1FE6                     	;# 
  3699  1FE7                     	;# 
  3700  1FE8                     	;# 
  3701  1FE8                     	;# 
  3702  1FE9                     	;# 
  3703  1FEA                     	;# 
  3704  1FEA                     	;# 
  3705  1FEB                     	;# 
  3706  1FED                     	;# 
  3707  1FEE                     	;# 
  3708  1FEF                     	;# 
  3709  0000                     	;# 
  3710  0001                     	;# 
  3711  0002                     	;# 
  3712  0003                     	;# 
  3713  0004                     	;# 
  3714  0005                     	;# 
  3715  0006                     	;# 
  3716  0007                     	;# 
  3717  0008                     	;# 
  3718  0009                     	;# 
  3719  000A                     	;# 
  3720  000B                     	;# 
  3721  000C                     	;# 
  3722  000D                     	;# 
  3723  000E                     	;# 
  3724  0012                     	;# 
  3725  0013                     	;# 
  3726  0014                     	;# 
  3727  0018                     	;# 
  3728  0019                     	;# 
  3729  001A                     	;# 
  3730  009B                     	;# 
  3731  009B                     	;# 
  3732  009C                     	;# 
  3733  009D                     	;# 
  3734  009E                     	;# 
  3735  009F                     	;# 
  3736  0119                     	;# 
  3737  0119                     	;# 
  3738  0119                     	;# 
  3739  011A                     	;# 
  3740  011A                     	;# 
  3741  011A                     	;# 
  3742  011B                     	;# 
  3743  011B                     	;# 
  3744  011B                     	;# 
  3745  011B                     	;# 
  3746  011B                     	;# 
  3747  011C                     	;# 
  3748  011C                     	;# 
  3749  011C                     	;# 
  3750  011D                     	;# 
  3751  011D                     	;# 
  3752  011D                     	;# 
  3753  011E                     	;# 
  3754  011E                     	;# 
  3755  011E                     	;# 
  3756  011F                     	;# 
  3757  011F                     	;# 
  3758  011F                     	;# 
  3759  011F                     	;# 
  3760  011F                     	;# 
  3761  018C                     	;# 
  3762  018D                     	;# 
  3763  018E                     	;# 
  3764  018F                     	;# 
  3765  0190                     	;# 
  3766  0191                     	;# 
  3767  0192                     	;# 
  3768  020C                     	;# 
  3769  020C                     	;# 
  3770  020D                     	;# 
  3771  020E                     	;# 
  3772  020F                     	;# 
  3773  020F                     	;# 
  3774  0210                     	;# 
  3775  0210                     	;# 
  3776  0211                     	;# 
  3777  0211                     	;# 
  3778  028C                     	;# 
  3779  028C                     	;# 
  3780  028D                     	;# 
  3781  028D                     	;# 
  3782  028E                     	;# 
  3783  028F                     	;# 
  3784  0290                     	;# 
  3785  0291                     	;# 
  3786  030C                     	;# 
  3787  030C                     	;# 
  3788  030D                     	;# 
  3789  030E                     	;# 
  3790  030F                     	;# 
  3791  0310                     	;# 
  3792  0310                     	;# 
  3793  0311                     	;# 
  3794  0312                     	;# 
  3795  0313                     	;# 
  3796  0314                     	;# 
  3797  0314                     	;# 
  3798  0315                     	;# 
  3799  0316                     	;# 
  3800  0318                     	;# 
  3801  0318                     	;# 
  3802  0319                     	;# 
  3803  031A                     	;# 
  3804  031C                     	;# 
  3805  031C                     	;# 
  3806  031D                     	;# 
  3807  031E                     	;# 
  3808  038C                     	;# 
  3809  038C                     	;# 
  3810  038D                     	;# 
  3811  038E                     	;# 
  3812  058C                     	;# 
  3813  058C                     	;# 
  3814  058D                     	;# 
  3815  058E                     	;# 
  3816  058F                     	;# 
  3817  058F                     	;# 
  3818  0590                     	;# 
  3819  0591                     	;# 
  3820  0592                     	;# 
  3821  0593                     	;# 
  3822  059C                     	;# 
  3823  059C                     	;# 
  3824  059D                     	;# 
  3825  059D                     	;# 
  3826  059E                     	;# 
  3827  059F                     	;# 
  3828  060C                     	;# 
  3829  060D                     	;# 
  3830  060E                     	;# 
  3831  060F                     	;# 
  3832  0610                     	;# 
  3833  0611                     	;# 
  3834  0612                     	;# 
  3835  0613                     	;# 
  3836  0614                     	;# 
  3837  070C                     	;# 
  3838  070D                     	;# 
  3839  070E                     	;# 
  3840  070F                     	;# 
  3841  0710                     	;# 
  3842  0711                     	;# 
  3843  0712                     	;# 
  3844  0713                     	;# 
  3845  0716                     	;# 
  3846  0717                     	;# 
  3847  0718                     	;# 
  3848  0719                     	;# 
  3849  071A                     	;# 
  3850  071B                     	;# 
  3851  071C                     	;# 
  3852  071D                     	;# 
  3853  0796                     	;# 
  3854  0797                     	;# 
  3855  0798                     	;# 
  3856  0799                     	;# 
  3857  079A                     	;# 
  3858  079B                     	;# 
  3859  080C                     	;# 
  3860  080D                     	;# 
  3861  080E                     	;# 
  3862  080F                     	;# 
  3863  0810                     	;# 
  3864  0811                     	;# 
  3865  0812                     	;# 
  3866  0813                     	;# 
  3867  0814                     	;# 
  3868  081A                     	;# 
  3869  081A                     	;# 
  3870  081B                     	;# 
  3871  081C                     	;# 
  3872  081C                     	;# 
  3873  081D                     	;# 
  3874  081E                     	;# 
  3875  081F                     	;# 
  3876  088C                     	;# 
  3877  088D                     	;# 
  3878  088E                     	;# 
  3879  088F                     	;# 
  3880  0890                     	;# 
  3881  0891                     	;# 
  3882  0892                     	;# 
  3883  0893                     	;# 
  3884  0895                     	;# 
  3885  0896                     	;# 
  3886  090C                     	;# 
  3887  090E                     	;# 
  3888  090F                     	;# 
  3889  091F                     	;# 
  3890  098F                     	;# 
  3891  098F                     	;# 
  3892  0990                     	;# 
  3893  0991                     	;# 
  3894  0992                     	;# 
  3895  0993                     	;# 
  3896  0994                     	;# 
  3897  0995                     	;# 
  3898  0996                     	;# 
  3899  0997                     	;# 
  3900  0A19                     	;# 
  3901  0A19                     	;# 
  3902  0A1A                     	;# 
  3903  0A1A                     	;# 
  3904  0A1B                     	;# 
  3905  0A1B                     	;# 
  3906  0A1B                     	;# 
  3907  0A1C                     	;# 
  3908  0A1C                     	;# 
  3909  0A1D                     	;# 
  3910  0A1D                     	;# 
  3911  0A1E                     	;# 
  3912  0A1E                     	;# 
  3913  0A1F                     	;# 
  3914  0A1F                     	;# 
  3915  0A1F                     	;# 
  3916  1E0F                     	;# 
  3917  1E10                     	;# 
  3918  1E11                     	;# 
  3919  1E12                     	;# 
  3920  1E13                     	;# 
  3921  1E14                     	;# 
  3922  1E15                     	;# 
  3923  1E16                     	;# 
  3924  1E17                     	;# 
  3925  1E18                     	;# 
  3926  1E19                     	;# 
  3927  1E1A                     	;# 
  3928  1E1B                     	;# 
  3929  1E1C                     	;# 
  3930  1E1D                     	;# 
  3931  1E1E                     	;# 
  3932  1E1F                     	;# 
  3933  1E20                     	;# 
  3934  1E21                     	;# 
  3935  1E22                     	;# 
  3936  1E23                     	;# 
  3937  1E24                     	;# 
  3938  1E25                     	;# 
  3939  1E26                     	;# 
  3940  1E27                     	;# 
  3941  1E28                     	;# 
  3942  1E29                     	;# 
  3943  1E2A                     	;# 
  3944  1E2B                     	;# 
  3945  1E2C                     	;# 
  3946  1E2D                     	;# 
  3947  1E2E                     	;# 
  3948  1E2F                     	;# 
  3949  1E30                     	;# 
  3950  1E31                     	;# 
  3951  1E32                     	;# 
  3952  1E33                     	;# 
  3953  1E34                     	;# 
  3954  1E35                     	;# 
  3955  1E36                     	;# 
  3956  1E37                     	;# 
  3957  1E8F                     	;# 
  3958  1E90                     	;# 
  3959  1E91                     	;# 
  3960  1E92                     	;# 
  3961  1E93                     	;# 
  3962  1E9C                     	;# 
  3963  1EA1                     	;# 
  3964  1EA2                     	;# 
  3965  1EB1                     	;# 
  3966  1EBB                     	;# 
  3967  1EBC                     	;# 
  3968  1EBD                     	;# 
  3969  1EBE                     	;# 
  3970  1EC3                     	;# 
  3971  1EC5                     	;# 
  3972  1EC6                     	;# 
  3973  1EC7                     	;# 
  3974  1ECB                     	;# 
  3975  1ECC                     	;# 
  3976  1ECD                     	;# 
  3977  1ECE                     	;# 
  3978  1F10                     	;# 
  3979  1F11                     	;# 
  3980  1F12                     	;# 
  3981  1F13                     	;# 
  3982  1F14                     	;# 
  3983  1F15                     	;# 
  3984  1F1C                     	;# 
  3985  1F1D                     	;# 
  3986  1F1E                     	;# 
  3987  1F1F                     	;# 
  3988  1F20                     	;# 
  3989  1F21                     	;# 
  3990  1F22                     	;# 
  3991  1F23                     	;# 
  3992  1F24                     	;# 
  3993  1F25                     	;# 
  3994  1F26                     	;# 
  3995  1F27                     	;# 
  3996  1F38                     	;# 
  3997  1F39                     	;# 
  3998  1F3A                     	;# 
  3999  1F3B                     	;# 
  4000  1F3C                     	;# 
  4001  1F3D                     	;# 
  4002  1F3E                     	;# 
  4003  1F3F                     	;# 
  4004  1F43                     	;# 
  4005  1F44                     	;# 
  4006  1F45                     	;# 
  4007  1F46                     	;# 
  4008  1F47                     	;# 
  4009  1F48                     	;# 
  4010  1F49                     	;# 
  4011  1F4A                     	;# 
  4012  1F4E                     	;# 
  4013  1F4F                     	;# 
  4014  1F50                     	;# 
  4015  1F51                     	;# 
  4016  1F52                     	;# 
  4017  1F53                     	;# 
  4018  1F54                     	;# 
  4019  1F55                     	;# 
  4020  1FE4                     	;# 
  4021  1FE5                     	;# 
  4022  1FE6                     	;# 
  4023  1FE7                     	;# 
  4024  1FE8                     	;# 
  4025  1FE8                     	;# 
  4026  1FE9                     	;# 
  4027  1FEA                     	;# 
  4028  1FEA                     	;# 
  4029  1FEB                     	;# 
  4030  1FED                     	;# 
  4031  1FEE                     	;# 
  4032  1FEF                     	;# 
  4033  0000                     	;# 
  4034  0001                     	;# 
  4035  0002                     	;# 
  4036  0003                     	;# 
  4037  0004                     	;# 
  4038  0005                     	;# 
  4039  0006                     	;# 
  4040  0007                     	;# 
  4041  0008                     	;# 
  4042  0009                     	;# 
  4043  000A                     	;# 
  4044  000B                     	;# 
  4045  000C                     	;# 
  4046  000D                     	;# 
  4047  000E                     	;# 
  4048  0012                     	;# 
  4049  0013                     	;# 
  4050  0014                     	;# 
  4051  0018                     	;# 
  4052  0019                     	;# 
  4053  001A                     	;# 
  4054  009B                     	;# 
  4055  009B                     	;# 
  4056  009C                     	;# 
  4057  009D                     	;# 
  4058  009E                     	;# 
  4059  009F                     	;# 
  4060  0119                     	;# 
  4061  0119                     	;# 
  4062  0119                     	;# 
  4063  011A                     	;# 
  4064  011A                     	;# 
  4065  011A                     	;# 
  4066  011B                     	;# 
  4067  011B                     	;# 
  4068  011B                     	;# 
  4069  011B                     	;# 
  4070  011B                     	;# 
  4071  011C                     	;# 
  4072  011C                     	;# 
  4073  011C                     	;# 
  4074  011D                     	;# 
  4075  011D                     	;# 
  4076  011D                     	;# 
  4077  011E                     	;# 
  4078  011E                     	;# 
  4079  011E                     	;# 
  4080  011F                     	;# 
  4081  011F                     	;# 
  4082  011F                     	;# 
  4083  011F                     	;# 
  4084  011F                     	;# 
  4085  018C                     	;# 
  4086  018D                     	;# 
  4087  018E                     	;# 
  4088  018F                     	;# 
  4089  0190                     	;# 
  4090  0191                     	;# 
  4091  0192                     	;# 
  4092  020C                     	;# 
  4093  020C                     	;# 
  4094  020D                     	;# 
  4095  020E                     	;# 
  4096  020F                     	;# 
  4097  020F                     	;# 
  4098  0210                     	;# 
  4099  0210                     	;# 
  4100  0211                     	;# 
  4101  0211                     	;# 
  4102  028C                     	;# 
  4103  028C                     	;# 
  4104  028D                     	;# 
  4105  028D                     	;# 
  4106  028E                     	;# 
  4107  028F                     	;# 
  4108  0290                     	;# 
  4109  0291                     	;# 
  4110  030C                     	;# 
  4111  030C                     	;# 
  4112  030D                     	;# 
  4113  030E                     	;# 
  4114  030F                     	;# 
  4115  0310                     	;# 
  4116  0310                     	;# 
  4117  0311                     	;# 
  4118  0312                     	;# 
  4119  0313                     	;# 
  4120  0314                     	;# 
  4121  0314                     	;# 
  4122  0315                     	;# 
  4123  0316                     	;# 
  4124  0318                     	;# 
  4125  0318                     	;# 
  4126  0319                     	;# 
  4127  031A                     	;# 
  4128  031C                     	;# 
  4129  031C                     	;# 
  4130  031D                     	;# 
  4131  031E                     	;# 
  4132  038C                     	;# 
  4133  038C                     	;# 
  4134  038D                     	;# 
  4135  038E                     	;# 
  4136  058C                     	;# 
  4137  058C                     	;# 
  4138  058D                     	;# 
  4139  058E                     	;# 
  4140  058F                     	;# 
  4141  058F                     	;# 
  4142  0590                     	;# 
  4143  0591                     	;# 
  4144  0592                     	;# 
  4145  0593                     	;# 
  4146  059C                     	;# 
  4147  059C                     	;# 
  4148  059D                     	;# 
  4149  059D                     	;# 
  4150  059E                     	;# 
  4151  059F                     	;# 
  4152  060C                     	;# 
  4153  060D                     	;# 
  4154  060E                     	;# 
  4155  060F                     	;# 
  4156  0610                     	;# 
  4157  0611                     	;# 
  4158  0612                     	;# 
  4159  0613                     	;# 
  4160  0614                     	;# 
  4161  070C                     	;# 
  4162  070D                     	;# 
  4163  070E                     	;# 
  4164  070F                     	;# 
  4165  0710                     	;# 
  4166  0711                     	;# 
  4167  0712                     	;# 
  4168  0713                     	;# 
  4169  0716                     	;# 
  4170  0717                     	;# 
  4171  0718                     	;# 
  4172  0719                     	;# 
  4173  071A                     	;# 
  4174  071B                     	;# 
  4175  071C                     	;# 
  4176  071D                     	;# 
  4177  0796                     	;# 
  4178  0797                     	;# 
  4179  0798                     	;# 
  4180  0799                     	;# 
  4181  079A                     	;# 
  4182  079B                     	;# 
  4183  080C                     	;# 
  4184  080D                     	;# 
  4185  080E                     	;# 
  4186  080F                     	;# 
  4187  0810                     	;# 
  4188  0811                     	;# 
  4189  0812                     	;# 
  4190  0813                     	;# 
  4191  0814                     	;# 
  4192  081A                     	;# 
  4193  081A                     	;# 
  4194  081B                     	;# 
  4195  081C                     	;# 
  4196  081C                     	;# 
  4197  081D                     	;# 
  4198  081E                     	;# 
  4199  081F                     	;# 
  4200  088C                     	;# 
  4201  088D                     	;# 
  4202  088E                     	;# 
  4203  088F                     	;# 
  4204  0890                     	;# 
  4205  0891                     	;# 
  4206  0892                     	;# 
  4207  0893                     	;# 
  4208  0895                     	;# 
  4209  0896                     	;# 
  4210  090C                     	;# 
  4211  090E                     	;# 
  4212  090F                     	;# 
  4213  091F                     	;# 
  4214  098F                     	;# 
  4215  098F                     	;# 
  4216  0990                     	;# 
  4217  0991                     	;# 
  4218  0992                     	;# 
  4219  0993                     	;# 
  4220  0994                     	;# 
  4221  0995                     	;# 
  4222  0996                     	;# 
  4223  0997                     	;# 
  4224  0A19                     	;# 
  4225  0A19                     	;# 
  4226  0A1A                     	;# 
  4227  0A1A                     	;# 
  4228  0A1B                     	;# 
  4229  0A1B                     	;# 
  4230  0A1B                     	;# 
  4231  0A1C                     	;# 
  4232  0A1C                     	;# 
  4233  0A1D                     	;# 
  4234  0A1D                     	;# 
  4235  0A1E                     	;# 
  4236  0A1E                     	;# 
  4237  0A1F                     	;# 
  4238  0A1F                     	;# 
  4239  0A1F                     	;# 
  4240  1E0F                     	;# 
  4241  1E10                     	;# 
  4242  1E11                     	;# 
  4243  1E12                     	;# 
  4244  1E13                     	;# 
  4245  1E14                     	;# 
  4246  1E15                     	;# 
  4247  1E16                     	;# 
  4248  1E17                     	;# 
  4249  1E18                     	;# 
  4250  1E19                     	;# 
  4251  1E1A                     	;# 
  4252  1E1B                     	;# 
  4253  1E1C                     	;# 
  4254  1E1D                     	;# 
  4255  1E1E                     	;# 
  4256  1E1F                     	;# 
  4257  1E20                     	;# 
  4258  1E21                     	;# 
  4259  1E22                     	;# 
  4260  1E23                     	;# 
  4261  1E24                     	;# 
  4262  1E25                     	;# 
  4263  1E26                     	;# 
  4264  1E27                     	;# 
  4265  1E28                     	;# 
  4266  1E29                     	;# 
  4267  1E2A                     	;# 
  4268  1E2B                     	;# 
  4269  1E2C                     	;# 
  4270  1E2D                     	;# 
  4271  1E2E                     	;# 
  4272  1E2F                     	;# 
  4273  1E30                     	;# 
  4274  1E31                     	;# 
  4275  1E32                     	;# 
  4276  1E33                     	;# 
  4277  1E34                     	;# 
  4278  1E35                     	;# 
  4279  1E36                     	;# 
  4280  1E37                     	;# 
  4281  1E8F                     	;# 
  4282  1E90                     	;# 
  4283  1E91                     	;# 
  4284  1E92                     	;# 
  4285  1E93                     	;# 
  4286  1E9C                     	;# 
  4287  1EA1                     	;# 
  4288  1EA2                     	;# 
  4289  1EB1                     	;# 
  4290  1EBB                     	;# 
  4291  1EBC                     	;# 
  4292  1EBD                     	;# 
  4293  1EBE                     	;# 
  4294  1EC3                     	;# 
  4295  1EC5                     	;# 
  4296  1EC6                     	;# 
  4297  1EC7                     	;# 
  4298  1ECB                     	;# 
  4299  1ECC                     	;# 
  4300  1ECD                     	;# 
  4301  1ECE                     	;# 
  4302  1F10                     	;# 
  4303  1F11                     	;# 
  4304  1F12                     	;# 
  4305  1F13                     	;# 
  4306  1F14                     	;# 
  4307  1F15                     	;# 
  4308  1F1C                     	;# 
  4309  1F1D                     	;# 
  4310  1F1E                     	;# 
  4311  1F1F                     	;# 
  4312  1F20                     	;# 
  4313  1F21                     	;# 
  4314  1F22                     	;# 
  4315  1F23                     	;# 
  4316  1F24                     	;# 
  4317  1F25                     	;# 
  4318  1F26                     	;# 
  4319  1F27                     	;# 
  4320  1F38                     	;# 
  4321  1F39                     	;# 
  4322  1F3A                     	;# 
  4323  1F3B                     	;# 
  4324  1F3C                     	;# 
  4325  1F3D                     	;# 
  4326  1F3E                     	;# 
  4327  1F3F                     	;# 
  4328  1F43                     	;# 
  4329  1F44                     	;# 
  4330  1F45                     	;# 
  4331  1F46                     	;# 
  4332  1F47                     	;# 
  4333  1F48                     	;# 
  4334  1F49                     	;# 
  4335  1F4A                     	;# 
  4336  1F4E                     	;# 
  4337  1F4F                     	;# 
  4338  1F50                     	;# 
  4339  1F51                     	;# 
  4340  1F52                     	;# 
  4341  1F53                     	;# 
  4342  1F54                     	;# 
  4343  1F55                     	;# 
  4344  1FE4                     	;# 
  4345  1FE5                     	;# 
  4346  1FE6                     	;# 
  4347  1FE7                     	;# 
  4348  1FE8                     	;# 
  4349  1FE8                     	;# 
  4350  1FE9                     	;# 
  4351  1FEA                     	;# 
  4352  1FEA                     	;# 
  4353  1FEB                     	;# 
  4354  1FED                     	;# 
  4355  1FEE                     	;# 
  4356  1FEF                     	;# 
  4357  0000                     	;# 
  4358  0001                     	;# 
  4359  0002                     	;# 
  4360  0003                     	;# 
  4361  0004                     	;# 
  4362  0005                     	;# 
  4363  0006                     	;# 
  4364  0007                     	;# 
  4365  0008                     	;# 
  4366  0009                     	;# 
  4367  000A                     	;# 
  4368  000B                     	;# 
  4369  000C                     	;# 
  4370  000D                     	;# 
  4371  000E                     	;# 
  4372  0012                     	;# 
  4373  0013                     	;# 
  4374  0014                     	;# 
  4375  0018                     	;# 
  4376  0019                     	;# 
  4377  001A                     	;# 
  4378  009B                     	;# 
  4379  009B                     	;# 
  4380  009C                     	;# 
  4381  009D                     	;# 
  4382  009E                     	;# 
  4383  009F                     	;# 
  4384  0119                     	;# 
  4385  0119                     	;# 
  4386  0119                     	;# 
  4387  011A                     	;# 
  4388  011A                     	;# 
  4389  011A                     	;# 
  4390  011B                     	;# 
  4391  011B                     	;# 
  4392  011B                     	;# 
  4393  011B                     	;# 
  4394  011B                     	;# 
  4395  011C                     	;# 
  4396  011C                     	;# 
  4397  011C                     	;# 
  4398  011D                     	;# 
  4399  011D                     	;# 
  4400  011D                     	;# 
  4401  011E                     	;# 
  4402  011E                     	;# 
  4403  011E                     	;# 
  4404  011F                     	;# 
  4405  011F                     	;# 
  4406  011F                     	;# 
  4407  011F                     	;# 
  4408  011F                     	;# 
  4409  018C                     	;# 
  4410  018D                     	;# 
  4411  018E                     	;# 
  4412  018F                     	;# 
  4413  0190                     	;# 
  4414  0191                     	;# 
  4415  0192                     	;# 
  4416  020C                     	;# 
  4417  020C                     	;# 
  4418  020D                     	;# 
  4419  020E                     	;# 
  4420  020F                     	;# 
  4421  020F                     	;# 
  4422  0210                     	;# 
  4423  0210                     	;# 
  4424  0211                     	;# 
  4425  0211                     	;# 
  4426  028C                     	;# 
  4427  028C                     	;# 
  4428  028D                     	;# 
  4429  028D                     	;# 
  4430  028E                     	;# 
  4431  028F                     	;# 
  4432  0290                     	;# 
  4433  0291                     	;# 
  4434  030C                     	;# 
  4435  030C                     	;# 
  4436  030D                     	;# 
  4437  030E                     	;# 
  4438  030F                     	;# 
  4439  0310                     	;# 
  4440  0310                     	;# 
  4441  0311                     	;# 
  4442  0312                     	;# 
  4443  0313                     	;# 
  4444  0314                     	;# 
  4445  0314                     	;# 
  4446  0315                     	;# 
  4447  0316                     	;# 
  4448  0318                     	;# 
  4449  0318                     	;# 
  4450  0319                     	;# 
  4451  031A                     	;# 
  4452  031C                     	;# 
  4453  031C                     	;# 
  4454  031D                     	;# 
  4455  031E                     	;# 
  4456  038C                     	;# 
  4457  038C                     	;# 
  4458  038D                     	;# 
  4459  038E                     	;# 
  4460  058C                     	;# 
  4461  058C                     	;# 
  4462  058D                     	;# 
  4463  058E                     	;# 
  4464  058F                     	;# 
  4465  058F                     	;# 
  4466  0590                     	;# 
  4467  0591                     	;# 
  4468  0592                     	;# 
  4469  0593                     	;# 
  4470  059C                     	;# 
  4471  059C                     	;# 
  4472  059D                     	;# 
  4473  059D                     	;# 
  4474  059E                     	;# 
  4475  059F                     	;# 
  4476  060C                     	;# 
  4477  060D                     	;# 
  4478  060E                     	;# 
  4479  060F                     	;# 
  4480  0610                     	;# 
  4481  0611                     	;# 
  4482  0612                     	;# 
  4483  0613                     	;# 
  4484  0614                     	;# 
  4485  070C                     	;# 
  4486  070D                     	;# 
  4487  070E                     	;# 
  4488  070F                     	;# 
  4489  0710                     	;# 
  4490  0711                     	;# 
  4491  0712                     	;# 
  4492  0713                     	;# 
  4493  0716                     	;# 
  4494  0717                     	;# 
  4495  0718                     	;# 
  4496  0719                     	;# 
  4497  071A                     	;# 
  4498  071B                     	;# 
  4499  071C                     	;# 
  4500  071D                     	;# 
  4501  0796                     	;# 
  4502  0797                     	;# 
  4503  0798                     	;# 
  4504  0799                     	;# 
  4505  079A                     	;# 
  4506  079B                     	;# 
  4507  080C                     	;# 
  4508  080D                     	;# 
  4509  080E                     	;# 
  4510  080F                     	;# 
  4511  0810                     	;# 
  4512  0811                     	;# 
  4513  0812                     	;# 
  4514  0813                     	;# 
  4515  0814                     	;# 
  4516  081A                     	;# 
  4517  081A                     	;# 
  4518  081B                     	;# 
  4519  081C                     	;# 
  4520  081C                     	;# 
  4521  081D                     	;# 
  4522  081E                     	;# 
  4523  081F                     	;# 
  4524  088C                     	;# 
  4525  088D                     	;# 
  4526  088E                     	;# 
  4527  088F                     	;# 
  4528  0890                     	;# 
  4529  0891                     	;# 
  4530  0892                     	;# 
  4531  0893                     	;# 
  4532  0895                     	;# 
  4533  0896                     	;# 
  4534  090C                     	;# 
  4535  090E                     	;# 
  4536  090F                     	;# 
  4537  091F                     	;# 
  4538  098F                     	;# 
  4539  098F                     	;# 
  4540  0990                     	;# 
  4541  0991                     	;# 
  4542  0992                     	;# 
  4543  0993                     	;# 
  4544  0994                     	;# 
  4545  0995                     	;# 
  4546  0996                     	;# 
  4547  0997                     	;# 
  4548  0A19                     	;# 
  4549  0A19                     	;# 
  4550  0A1A                     	;# 
  4551  0A1A                     	;# 
  4552  0A1B                     	;# 
  4553  0A1B                     	;# 
  4554  0A1B                     	;# 
  4555  0A1C                     	;# 
  4556  0A1C                     	;# 
  4557  0A1D                     	;# 
  4558  0A1D                     	;# 
  4559  0A1E                     	;# 
  4560  0A1E                     	;# 
  4561  0A1F                     	;# 
  4562  0A1F                     	;# 
  4563  0A1F                     	;# 
  4564  1E0F                     	;# 
  4565  1E10                     	;# 
  4566  1E11                     	;# 
  4567  1E12                     	;# 
  4568  1E13                     	;# 
  4569  1E14                     	;# 
  4570  1E15                     	;# 
  4571  1E16                     	;# 
  4572  1E17                     	;# 
  4573  1E18                     	;# 
  4574  1E19                     	;# 
  4575  1E1A                     	;# 
  4576  1E1B                     	;# 
  4577  1E1C                     	;# 
  4578  1E1D                     	;# 
  4579  1E1E                     	;# 
  4580  1E1F                     	;# 
  4581  1E20                     	;# 
  4582  1E21                     	;# 
  4583  1E22                     	;# 
  4584  1E23                     	;# 
  4585  1E24                     	;# 
  4586  1E25                     	;# 
  4587  1E26                     	;# 
  4588  1E27                     	;# 
  4589  1E28                     	;# 
  4590  1E29                     	;# 
  4591  1E2A                     	;# 
  4592  1E2B                     	;# 
  4593  1E2C                     	;# 
  4594  1E2D                     	;# 
  4595  1E2E                     	;# 
  4596  1E2F                     	;# 
  4597  1E30                     	;# 
  4598  1E31                     	;# 
  4599  1E32                     	;# 
  4600  1E33                     	;# 
  4601  1E34                     	;# 
  4602  1E35                     	;# 
  4603  1E36                     	;# 
  4604  1E37                     	;# 
  4605  1E8F                     	;# 
  4606  1E90                     	;# 
  4607  1E91                     	;# 
  4608  1E92                     	;# 
  4609  1E93                     	;# 
  4610  1E9C                     	;# 
  4611  1EA1                     	;# 
  4612  1EA2                     	;# 
  4613  1EB1                     	;# 
  4614  1EBB                     	;# 
  4615  1EBC                     	;# 
  4616  1EBD                     	;# 
  4617  1EBE                     	;# 
  4618  1EC3                     	;# 
  4619  1EC5                     	;# 
  4620  1EC6                     	;# 
  4621  1EC7                     	;# 
  4622  1ECB                     	;# 
  4623  1ECC                     	;# 
  4624  1ECD                     	;# 
  4625  1ECE                     	;# 
  4626  1F10                     	;# 
  4627  1F11                     	;# 
  4628  1F12                     	;# 
  4629  1F13                     	;# 
  4630  1F14                     	;# 
  4631  1F15                     	;# 
  4632  1F1C                     	;# 
  4633  1F1D                     	;# 
  4634  1F1E                     	;# 
  4635  1F1F                     	;# 
  4636  1F20                     	;# 
  4637  1F21                     	;# 
  4638  1F22                     	;# 
  4639  1F23                     	;# 
  4640  1F24                     	;# 
  4641  1F25                     	;# 
  4642  1F26                     	;# 
  4643  1F27                     	;# 
  4644  1F38                     	;# 
  4645  1F39                     	;# 
  4646  1F3A                     	;# 
  4647  1F3B                     	;# 
  4648  1F3C                     	;# 
  4649  1F3D                     	;# 
  4650  1F3E                     	;# 
  4651  1F3F                     	;# 
  4652  1F43                     	;# 
  4653  1F44                     	;# 
  4654  1F45                     	;# 
  4655  1F46                     	;# 
  4656  1F47                     	;# 
  4657  1F48                     	;# 
  4658  1F49                     	;# 
  4659  1F4A                     	;# 
  4660  1F4E                     	;# 
  4661  1F4F                     	;# 
  4662  1F50                     	;# 
  4663  1F51                     	;# 
  4664  1F52                     	;# 
  4665  1F53                     	;# 
  4666  1F54                     	;# 
  4667  1F55                     	;# 
  4668  1FE4                     	;# 
  4669  1FE5                     	;# 
  4670  1FE6                     	;# 
  4671  1FE7                     	;# 
  4672  1FE8                     	;# 
  4673  1FE8                     	;# 
  4674  1FE9                     	;# 
  4675  1FEA                     	;# 
  4676  1FEA                     	;# 
  4677  1FEB                     	;# 
  4678  1FED                     	;# 
  4679  1FEE                     	;# 
  4680  1FEF                     	;# 
  4681  0000                     	;# 
  4682  0001                     	;# 
  4683  0002                     	;# 
  4684  0003                     	;# 
  4685  0004                     	;# 
  4686  0005                     	;# 
  4687  0006                     	;# 
  4688  0007                     	;# 
  4689  0008                     	;# 
  4690  0009                     	;# 
  4691  000A                     	;# 
  4692  000B                     	;# 
  4693  000C                     	;# 
  4694  000D                     	;# 
  4695  000E                     	;# 
  4696  0012                     	;# 
  4697  0013                     	;# 
  4698  0014                     	;# 
  4699  0018                     	;# 
  4700  0019                     	;# 
  4701  001A                     	;# 
  4702  009B                     	;# 
  4703  009B                     	;# 
  4704  009C                     	;# 
  4705  009D                     	;# 
  4706  009E                     	;# 
  4707  009F                     	;# 
  4708  0119                     	;# 
  4709  0119                     	;# 
  4710  0119                     	;# 
  4711  011A                     	;# 
  4712  011A                     	;# 
  4713  011A                     	;# 
  4714  011B                     	;# 
  4715  011B                     	;# 
  4716  011B                     	;# 
  4717  011B                     	;# 
  4718  011B                     	;# 
  4719  011C                     	;# 
  4720  011C                     	;# 
  4721  011C                     	;# 
  4722  011D                     	;# 
  4723  011D                     	;# 
  4724  011D                     	;# 
  4725  011E                     	;# 
  4726  011E                     	;# 
  4727  011E                     	;# 
  4728  011F                     	;# 
  4729  011F                     	;# 
  4730  011F                     	;# 
  4731  011F                     	;# 
  4732  011F                     	;# 
  4733  018C                     	;# 
  4734  018D                     	;# 
  4735  018E                     	;# 
  4736  018F                     	;# 
  4737  0190                     	;# 
  4738  0191                     	;# 
  4739  0192                     	;# 
  4740  020C                     	;# 
  4741  020C                     	;# 
  4742  020D                     	;# 
  4743  020E                     	;# 
  4744  020F                     	;# 
  4745  020F                     	;# 
  4746  0210                     	;# 
  4747  0210                     	;# 
  4748  0211                     	;# 
  4749  0211                     	;# 
  4750  028C                     	;# 
  4751  028C                     	;# 
  4752  028D                     	;# 
  4753  028D                     	;# 
  4754  028E                     	;# 
  4755  028F                     	;# 
  4756  0290                     	;# 
  4757  0291                     	;# 
  4758  030C                     	;# 
  4759  030C                     	;# 
  4760  030D                     	;# 
  4761  030E                     	;# 
  4762  030F                     	;# 
  4763  0310                     	;# 
  4764  0310                     	;# 
  4765  0311                     	;# 
  4766  0312                     	;# 
  4767  0313                     	;# 
  4768  0314                     	;# 
  4769  0314                     	;# 
  4770  0315                     	;# 
  4771  0316                     	;# 
  4772  0318                     	;# 
  4773  0318                     	;# 
  4774  0319                     	;# 
  4775  031A                     	;# 
  4776  031C                     	;# 
  4777  031C                     	;# 
  4778  031D                     	;# 
  4779  031E                     	;# 
  4780  038C                     	;# 
  4781  038C                     	;# 
  4782  038D                     	;# 
  4783  038E                     	;# 
  4784  058C                     	;# 
  4785  058C                     	;# 
  4786  058D                     	;# 
  4787  058E                     	;# 
  4788  058F                     	;# 
  4789  058F                     	;# 
  4790  0590                     	;# 
  4791  0591                     	;# 
  4792  0592                     	;# 
  4793  0593                     	;# 
  4794  059C                     	;# 
  4795  059C                     	;# 
  4796  059D                     	;# 
  4797  059D                     	;# 
  4798  059E                     	;# 
  4799  059F                     	;# 
  4800  060C                     	;# 
  4801  060D                     	;# 
  4802  060E                     	;# 
  4803  060F                     	;# 
  4804  0610                     	;# 
  4805  0611                     	;# 
  4806  0612                     	;# 
  4807  0613                     	;# 
  4808  0614                     	;# 
  4809  070C                     	;# 
  4810  070D                     	;# 
  4811  070E                     	;# 
  4812  070F                     	;# 
  4813  0710                     	;# 
  4814  0711                     	;# 
  4815  0712                     	;# 
  4816  0713                     	;# 
  4817  0716                     	;# 
  4818  0717                     	;# 
  4819  0718                     	;# 
  4820  0719                     	;# 
  4821  071A                     	;# 
  4822  071B                     	;# 
  4823  071C                     	;# 
  4824  071D                     	;# 
  4825  0796                     	;# 
  4826  0797                     	;# 
  4827  0798                     	;# 
  4828  0799                     	;# 
  4829  079A                     	;# 
  4830  079B                     	;# 
  4831  080C                     	;# 
  4832  080D                     	;# 
  4833  080E                     	;# 
  4834  080F                     	;# 
  4835  0810                     	;# 
  4836  0811                     	;# 
  4837  0812                     	;# 
  4838  0813                     	;# 
  4839  0814                     	;# 
  4840  081A                     	;# 
  4841  081A                     	;# 
  4842  081B                     	;# 
  4843  081C                     	;# 
  4844  081C                     	;# 
  4845  081D                     	;# 
  4846  081E                     	;# 
  4847  081F                     	;# 
  4848  088C                     	;# 
  4849  088D                     	;# 
  4850  088E                     	;# 
  4851  088F                     	;# 
  4852  0890                     	;# 
  4853  0891                     	;# 
  4854  0892                     	;# 
  4855  0893                     	;# 
  4856  0895                     	;# 
  4857  0896                     	;# 
  4858  090C                     	;# 
  4859  090E                     	;# 
  4860  090F                     	;# 
  4861  091F                     	;# 
  4862  098F                     	;# 
  4863  098F                     	;# 
  4864  0990                     	;# 
  4865  0991                     	;# 
  4866  0992                     	;# 
  4867  0993                     	;# 
  4868  0994                     	;# 
  4869  0995                     	;# 
  4870  0996                     	;# 
  4871  0997                     	;# 
  4872  0A19                     	;# 
  4873  0A19                     	;# 
  4874  0A1A                     	;# 
  4875  0A1A                     	;# 
  4876  0A1B                     	;# 
  4877  0A1B                     	;# 
  4878  0A1B                     	;# 
  4879  0A1C                     	;# 
  4880  0A1C                     	;# 
  4881  0A1D                     	;# 
  4882  0A1D                     	;# 
  4883  0A1E                     	;# 
  4884  0A1E                     	;# 
  4885  0A1F                     	;# 
  4886  0A1F                     	;# 
  4887  0A1F                     	;# 
  4888  1E0F                     	;# 
  4889  1E10                     	;# 
  4890  1E11                     	;# 
  4891  1E12                     	;# 
  4892  1E13                     	;# 
  4893  1E14                     	;# 
  4894  1E15                     	;# 
  4895  1E16                     	;# 
  4896  1E17                     	;# 
  4897  1E18                     	;# 
  4898  1E19                     	;# 
  4899  1E1A                     	;# 
  4900  1E1B                     	;# 
  4901  1E1C                     	;# 
  4902  1E1D                     	;# 
  4903  1E1E                     	;# 
  4904  1E1F                     	;# 
  4905  1E20                     	;# 
  4906  1E21                     	;# 
  4907  1E22                     	;# 
  4908  1E23                     	;# 
  4909  1E24                     	;# 
  4910  1E25                     	;# 
  4911  1E26                     	;# 
  4912  1E27                     	;# 
  4913  1E28                     	;# 
  4914  1E29                     	;# 
  4915  1E2A                     	;# 
  4916  1E2B                     	;# 
  4917  1E2C                     	;# 
  4918  1E2D                     	;# 
  4919  1E2E                     	;# 
  4920  1E2F                     	;# 
  4921  1E30                     	;# 
  4922  1E31                     	;# 
  4923  1E32                     	;# 
  4924  1E33                     	;# 
  4925  1E34                     	;# 
  4926  1E35                     	;# 
  4927  1E36                     	;# 
  4928  1E37                     	;# 
  4929  1E8F                     	;# 
  4930  1E90                     	;# 
  4931  1E91                     	;# 
  4932  1E92                     	;# 
  4933  1E93                     	;# 
  4934  1E9C                     	;# 
  4935  1EA1                     	;# 
  4936  1EA2                     	;# 
  4937  1EB1                     	;# 
  4938  1EBB                     	;# 
  4939  1EBC                     	;# 
  4940  1EBD                     	;# 
  4941  1EBE                     	;# 
  4942  1EC3                     	;# 
  4943  1EC5                     	;# 
  4944  1EC6                     	;# 
  4945  1EC7                     	;# 
  4946  1ECB                     	;# 
  4947  1ECC                     	;# 
  4948  1ECD                     	;# 
  4949  1ECE                     	;# 
  4950  1F10                     	;# 
  4951  1F11                     	;# 
  4952  1F12                     	;# 
  4953  1F13                     	;# 
  4954  1F14                     	;# 
  4955  1F15                     	;# 
  4956  1F1C                     	;# 
  4957  1F1D                     	;# 
  4958  1F1E                     	;# 
  4959  1F1F                     	;# 
  4960  1F20                     	;# 
  4961  1F21                     	;# 
  4962  1F22                     	;# 
  4963  1F23                     	;# 
  4964  1F24                     	;# 
  4965  1F25                     	;# 
  4966  1F26                     	;# 
  4967  1F27                     	;# 
  4968  1F38                     	;# 
  4969  1F39                     	;# 
  4970  1F3A                     	;# 
  4971  1F3B                     	;# 
  4972  1F3C                     	;# 
  4973  1F3D                     	;# 
  4974  1F3E                     	;# 
  4975  1F3F                     	;# 
  4976  1F43                     	;# 
  4977  1F44                     	;# 
  4978  1F45                     	;# 
  4979  1F46                     	;# 
  4980  1F47                     	;# 
  4981  1F48                     	;# 
  4982  1F49                     	;# 
  4983  1F4A                     	;# 
  4984  1F4E                     	;# 
  4985  1F4F                     	;# 
  4986  1F50                     	;# 
  4987  1F51                     	;# 
  4988  1F52                     	;# 
  4989  1F53                     	;# 
  4990  1F54                     	;# 
  4991  1F55                     	;# 
  4992  1FE4                     	;# 
  4993  1FE5                     	;# 
  4994  1FE6                     	;# 
  4995  1FE7                     	;# 
  4996  1FE8                     	;# 
  4997  1FE8                     	;# 
  4998  1FE9                     	;# 
  4999  1FEA                     	;# 
  5000  1FEA                     	;# 
  5001  1FEB                     	;# 
  5002  1FED                     	;# 
  5003  1FEE                     	;# 
  5004  1FEF                     	;# 
  5005  0000                     	;# 
  5006  0001                     	;# 
  5007  0002                     	;# 
  5008  0003                     	;# 
  5009  0004                     	;# 
  5010  0005                     	;# 
  5011  0006                     	;# 
  5012  0007                     	;# 
  5013  0008                     	;# 
  5014  0009                     	;# 
  5015  000A                     	;# 
  5016  000B                     	;# 
  5017  000C                     	;# 
  5018  000D                     	;# 
  5019  000E                     	;# 
  5020  0012                     	;# 
  5021  0013                     	;# 
  5022  0014                     	;# 
  5023  0018                     	;# 
  5024  0019                     	;# 
  5025  001A                     	;# 
  5026  009B                     	;# 
  5027  009B                     	;# 
  5028  009C                     	;# 
  5029  009D                     	;# 
  5030  009E                     	;# 
  5031  009F                     	;# 
  5032  0119                     	;# 
  5033  0119                     	;# 
  5034  0119                     	;# 
  5035  011A                     	;# 
  5036  011A                     	;# 
  5037  011A                     	;# 
  5038  011B                     	;# 
  5039  011B                     	;# 
  5040  011B                     	;# 
  5041  011B                     	;# 
  5042  011B                     	;# 
  5043  011C                     	;# 
  5044  011C                     	;# 
  5045  011C                     	;# 
  5046  011D                     	;# 
  5047  011D                     	;# 
  5048  011D                     	;# 
  5049  011E                     	;# 
  5050  011E                     	;# 
  5051  011E                     	;# 
  5052  011F                     	;# 
  5053  011F                     	;# 
  5054  011F                     	;# 
  5055  011F                     	;# 
  5056  011F                     	;# 
  5057  018C                     	;# 
  5058  018D                     	;# 
  5059  018E                     	;# 
  5060  018F                     	;# 
  5061  0190                     	;# 
  5062  0191                     	;# 
  5063  0192                     	;# 
  5064  020C                     	;# 
  5065  020C                     	;# 
  5066  020D                     	;# 
  5067  020E                     	;# 
  5068  020F                     	;# 
  5069  020F                     	;# 
  5070  0210                     	;# 
  5071  0210                     	;# 
  5072  0211                     	;# 
  5073  0211                     	;# 
  5074  028C                     	;# 
  5075  028C                     	;# 
  5076  028D                     	;# 
  5077  028D                     	;# 
  5078  028E                     	;# 
  5079  028F                     	;# 
  5080  0290                     	;# 
  5081  0291                     	;# 
  5082  030C                     	;# 
  5083  030C                     	;# 
  5084  030D                     	;# 
  5085  030E                     	;# 
  5086  030F                     	;# 
  5087  0310                     	;# 
  5088  0310                     	;# 
  5089  0311                     	;# 
  5090  0312                     	;# 
  5091  0313                     	;# 
  5092  0314                     	;# 
  5093  0314                     	;# 
  5094  0315                     	;# 
  5095  0316                     	;# 
  5096  0318                     	;# 
  5097  0318                     	;# 
  5098  0319                     	;# 
  5099  031A                     	;# 
  5100  031C                     	;# 
  5101  031C                     	;# 
  5102  031D                     	;# 
  5103  031E                     	;# 
  5104  038C                     	;# 
  5105  038C                     	;# 
  5106  038D                     	;# 
  5107  038E                     	;# 
  5108  058C                     	;# 
  5109  058C                     	;# 
  5110  058D                     	;# 
  5111  058E                     	;# 
  5112  058F                     	;# 
  5113  058F                     	;# 
  5114  0590                     	;# 
  5115  0591                     	;# 
  5116  0592                     	;# 
  5117  0593                     	;# 
  5118  059C                     	;# 
  5119  059C                     	;# 
  5120  059D                     	;# 
  5121  059D                     	;# 
  5122  059E                     	;# 
  5123  059F                     	;# 
  5124  060C                     	;# 
  5125  060D                     	;# 
  5126  060E                     	;# 
  5127  060F                     	;# 
  5128  0610                     	;# 
  5129  0611                     	;# 
  5130  0612                     	;# 
  5131  0613                     	;# 
  5132  0614                     	;# 
  5133  070C                     	;# 
  5134  070D                     	;# 
  5135  070E                     	;# 
  5136  070F                     	;# 
  5137  0710                     	;# 
  5138  0711                     	;# 
  5139  0712                     	;# 
  5140  0713                     	;# 
  5141  0716                     	;# 
  5142  0717                     	;# 
  5143  0718                     	;# 
  5144  0719                     	;# 
  5145  071A                     	;# 
  5146  071B                     	;# 
  5147  071C                     	;# 
  5148  071D                     	;# 
  5149  0796                     	;# 
  5150  0797                     	;# 
  5151  0798                     	;# 
  5152  0799                     	;# 
  5153  079A                     	;# 
  5154  079B                     	;# 
  5155  080C                     	;# 
  5156  080D                     	;# 
  5157  080E                     	;# 
  5158  080F                     	;# 
  5159  0810                     	;# 
  5160  0811                     	;# 
  5161  0812                     	;# 
  5162  0813                     	;# 
  5163  0814                     	;# 
  5164  081A                     	;# 
  5165  081A                     	;# 
  5166  081B                     	;# 
  5167  081C                     	;# 
  5168  081C                     	;# 
  5169  081D                     	;# 
  5170  081E                     	;# 
  5171  081F                     	;# 
  5172  088C                     	;# 
  5173  088D                     	;# 
  5174  088E                     	;# 
  5175  088F                     	;# 
  5176  0890                     	;# 
  5177  0891                     	;# 
  5178  0892                     	;# 
  5179  0893                     	;# 
  5180  0895                     	;# 
  5181  0896                     	;# 
  5182  090C                     	;# 
  5183  090E                     	;# 
  5184  090F                     	;# 
  5185  091F                     	;# 
  5186  098F                     	;# 
  5187  098F                     	;# 
  5188  0990                     	;# 
  5189  0991                     	;# 
  5190  0992                     	;# 
  5191  0993                     	;# 
  5192  0994                     	;# 
  5193  0995                     	;# 
  5194  0996                     	;# 
  5195  0997                     	;# 
  5196  0A19                     	;# 
  5197  0A19                     	;# 
  5198  0A1A                     	;# 
  5199  0A1A                     	;# 
  5200  0A1B                     	;# 
  5201  0A1B                     	;# 
  5202  0A1B                     	;# 
  5203  0A1C                     	;# 
  5204  0A1C                     	;# 
  5205  0A1D                     	;# 
  5206  0A1D                     	;# 
  5207  0A1E                     	;# 
  5208  0A1E                     	;# 
  5209  0A1F                     	;# 
  5210  0A1F                     	;# 
  5211  0A1F                     	;# 
  5212  1E0F                     	;# 
  5213  1E10                     	;# 
  5214  1E11                     	;# 
  5215  1E12                     	;# 
  5216  1E13                     	;# 
  5217  1E14                     	;# 
  5218  1E15                     	;# 
  5219  1E16                     	;# 
  5220  1E17                     	;# 
  5221  1E18                     	;# 
  5222  1E19                     	;# 
  5223  1E1A                     	;# 
  5224  1E1B                     	;# 
  5225  1E1C                     	;# 
  5226  1E1D                     	;# 
  5227  1E1E                     	;# 
  5228  1E1F                     	;# 
  5229  1E20                     	;# 
  5230  1E21                     	;# 
  5231  1E22                     	;# 
  5232  1E23                     	;# 
  5233  1E24                     	;# 
  5234  1E25                     	;# 
  5235  1E26                     	;# 
  5236  1E27                     	;# 
  5237  1E28                     	;# 
  5238  1E29                     	;# 
  5239  1E2A                     	;# 
  5240  1E2B                     	;# 
  5241  1E2C                     	;# 
  5242  1E2D                     	;# 
  5243  1E2E                     	;# 
  5244  1E2F                     	;# 
  5245  1E30                     	;# 
  5246  1E31                     	;# 
  5247  1E32                     	;# 
  5248  1E33                     	;# 
  5249  1E34                     	;# 
  5250  1E35                     	;# 
  5251  1E36                     	;# 
  5252  1E37                     	;# 
  5253  1E8F                     	;# 
  5254  1E90                     	;# 
  5255  1E91                     	;# 
  5256  1E92                     	;# 
  5257  1E93                     	;# 
  5258  1E9C                     	;# 
  5259  1EA1                     	;# 
  5260  1EA2                     	;# 
  5261  1EB1                     	;# 
  5262  1EBB                     	;# 
  5263  1EBC                     	;# 
  5264  1EBD                     	;# 
  5265  1EBE                     	;# 
  5266  1EC3                     	;# 
  5267  1EC5                     	;# 
  5268  1EC6                     	;# 
  5269  1EC7                     	;# 
  5270  1ECB                     	;# 
  5271  1ECC                     	;# 
  5272  1ECD                     	;# 
  5273  1ECE                     	;# 
  5274  1F10                     	;# 
  5275  1F11                     	;# 
  5276  1F12                     	;# 
  5277  1F13                     	;# 
  5278  1F14                     	;# 
  5279  1F15                     	;# 
  5280  1F1C                     	;# 
  5281  1F1D                     	;# 
  5282  1F1E                     	;# 
  5283  1F1F                     	;# 
  5284  1F20                     	;# 
  5285  1F21                     	;# 
  5286  1F22                     	;# 
  5287  1F23                     	;# 
  5288  1F24                     	;# 
  5289  1F25                     	;# 
  5290  1F26                     	;# 
  5291  1F27                     	;# 
  5292  1F38                     	;# 
  5293  1F39                     	;# 
  5294  1F3A                     	;# 
  5295  1F3B                     	;# 
  5296  1F3C                     	;# 
  5297  1F3D                     	;# 
  5298  1F3E                     	;# 
  5299  1F3F                     	;# 
  5300  1F43                     	;# 
  5301  1F44                     	;# 
  5302  1F45                     	;# 
  5303  1F46                     	;# 
  5304  1F47                     	;# 
  5305  1F48                     	;# 
  5306  1F49                     	;# 
  5307  1F4A                     	;# 
  5308  1F4E                     	;# 
  5309  1F4F                     	;# 
  5310  1F50                     	;# 
  5311  1F51                     	;# 
  5312  1F52                     	;# 
  5313  1F53                     	;# 
  5314  1F54                     	;# 
  5315  1F55                     	;# 
  5316  1FE4                     	;# 
  5317  1FE5                     	;# 
  5318  1FE6                     	;# 
  5319  1FE7                     	;# 
  5320  1FE8                     	;# 
  5321  1FE8                     	;# 
  5322  1FE9                     	;# 
  5323  1FEA                     	;# 
  5324  1FEA                     	;# 
  5325  1FEB                     	;# 
  5326  1FED                     	;# 
  5327  1FEE                     	;# 
  5328  1FEF                     	;# 
  5329  0000                     	;# 
  5330  0001                     	;# 
  5331  0002                     	;# 
  5332  0003                     	;# 
  5333  0004                     	;# 
  5334  0005                     	;# 
  5335  0006                     	;# 
  5336  0007                     	;# 
  5337  0008                     	;# 
  5338  0009                     	;# 
  5339  000A                     	;# 
  5340  000B                     	;# 
  5341  000C                     	;# 
  5342  000D                     	;# 
  5343  000E                     	;# 
  5344  0012                     	;# 
  5345  0013                     	;# 
  5346  0014                     	;# 
  5347  0018                     	;# 
  5348  0019                     	;# 
  5349  001A                     	;# 
  5350  009B                     	;# 
  5351  009B                     	;# 
  5352  009C                     	;# 
  5353  009D                     	;# 
  5354  009E                     	;# 
  5355  009F                     	;# 
  5356  0119                     	;# 
  5357  0119                     	;# 
  5358  0119                     	;# 
  5359  011A                     	;# 
  5360  011A                     	;# 
  5361  011A                     	;# 
  5362  011B                     	;# 
  5363  011B                     	;# 
  5364  011B                     	;# 
  5365  011B                     	;# 
  5366  011B                     	;# 
  5367  011C                     	;# 
  5368  011C                     	;# 
  5369  011C                     	;# 
  5370  011D                     	;# 
  5371  011D                     	;# 
  5372  011D                     	;# 
  5373  011E                     	;# 
  5374  011E                     	;# 
  5375  011E                     	;# 
  5376  011F                     	;# 
  5377  011F                     	;# 
  5378  011F                     	;# 
  5379  011F                     	;# 
  5380  011F                     	;# 
  5381  018C                     	;# 
  5382  018D                     	;# 
  5383  018E                     	;# 
  5384  018F                     	;# 
  5385  0190                     	;# 
  5386  0191                     	;# 
  5387  0192                     	;# 
  5388  020C                     	;# 
  5389  020C                     	;# 
  5390  020D                     	;# 
  5391  020E                     	;# 
  5392  020F                     	;# 
  5393  020F                     	;# 
  5394  0210                     	;# 
  5395  0210                     	;# 
  5396  0211                     	;# 
  5397  0211                     	;# 
  5398  028C                     	;# 
  5399  028C                     	;# 
  5400  028D                     	;# 
  5401  028D                     	;# 
  5402  028E                     	;# 
  5403  028F                     	;# 
  5404  0290                     	;# 
  5405  0291                     	;# 
  5406  030C                     	;# 
  5407  030C                     	;# 
  5408  030D                     	;# 
  5409  030E                     	;# 
  5410  030F                     	;# 
  5411  0310                     	;# 
  5412  0310                     	;# 
  5413  0311                     	;# 
  5414  0312                     	;# 
  5415  0313                     	;# 
  5416  0314                     	;# 
  5417  0314                     	;# 
  5418  0315                     	;# 
  5419  0316                     	;# 
  5420  0318                     	;# 
  5421  0318                     	;# 
  5422  0319                     	;# 
  5423  031A                     	;# 
  5424  031C                     	;# 
  5425  031C                     	;# 
  5426  031D                     	;# 
  5427  031E                     	;# 
  5428  038C                     	;# 
  5429  038C                     	;# 
  5430  038D                     	;# 
  5431  038E                     	;# 
  5432  058C                     	;# 
  5433  058C                     	;# 
  5434  058D                     	;# 
  5435  058E                     	;# 
  5436  058F                     	;# 
  5437  058F                     	;# 
  5438  0590                     	;# 
  5439  0591                     	;# 
  5440  0592                     	;# 
  5441  0593                     	;# 
  5442  059C                     	;# 
  5443  059C                     	;# 
  5444  059D                     	;# 
  5445  059D                     	;# 
  5446  059E                     	;# 
  5447  059F                     	;# 
  5448  060C                     	;# 
  5449  060D                     	;# 
  5450  060E                     	;# 
  5451  060F                     	;# 
  5452  0610                     	;# 
  5453  0611                     	;# 
  5454  0612                     	;# 
  5455  0613                     	;# 
  5456  0614                     	;# 
  5457  070C                     	;# 
  5458  070D                     	;# 
  5459  070E                     	;# 
  5460  070F                     	;# 
  5461  0710                     	;# 
  5462  0711                     	;# 
  5463  0712                     	;# 
  5464  0713                     	;# 
  5465  0716                     	;# 
  5466  0717                     	;# 
  5467  0718                     	;# 
  5468  0719                     	;# 
  5469  071A                     	;# 
  5470  071B                     	;# 
  5471  071C                     	;# 
  5472  071D                     	;# 
  5473  0796                     	;# 
  5474  0797                     	;# 
  5475  0798                     	;# 
  5476  0799                     	;# 
  5477  079A                     	;# 
  5478  079B                     	;# 
  5479  080C                     	;# 
  5480  080D                     	;# 
  5481  080E                     	;# 
  5482  080F                     	;# 
  5483  0810                     	;# 
  5484  0811                     	;# 
  5485  0812                     	;# 
  5486  0813                     	;# 
  5487  0814                     	;# 
  5488  081A                     	;# 
  5489  081A                     	;# 
  5490  081B                     	;# 
  5491  081C                     	;# 
  5492  081C                     	;# 
  5493  081D                     	;# 
  5494  081E                     	;# 
  5495  081F                     	;# 
  5496  088C                     	;# 
  5497  088D                     	;# 
  5498  088E                     	;# 
  5499  088F                     	;# 
  5500  0890                     	;# 
  5501  0891                     	;# 
  5502  0892                     	;# 
  5503  0893                     	;# 
  5504  0895                     	;# 
  5505  0896                     	;# 
  5506  090C                     	;# 
  5507  090E                     	;# 
  5508  090F                     	;# 
  5509  091F                     	;# 
  5510  098F                     	;# 
  5511  098F                     	;# 
  5512  0990                     	;# 
  5513  0991                     	;# 
  5514  0992                     	;# 
  5515  0993                     	;# 
  5516  0994                     	;# 
  5517  0995                     	;# 
  5518  0996                     	;# 
  5519  0997                     	;# 
  5520  0A19                     	;# 
  5521  0A19                     	;# 
  5522  0A1A                     	;# 
  5523  0A1A                     	;# 
  5524  0A1B                     	;# 
  5525  0A1B                     	;# 
  5526  0A1B                     	;# 
  5527  0A1C                     	;# 
  5528  0A1C                     	;# 
  5529  0A1D                     	;# 
  5530  0A1D                     	;# 
  5531  0A1E                     	;# 
  5532  0A1E                     	;# 
  5533  0A1F                     	;# 
  5534  0A1F                     	;# 
  5535  0A1F                     	;# 
  5536  1E0F                     	;# 
  5537  1E10                     	;# 
  5538  1E11                     	;# 
  5539  1E12                     	;# 
  5540  1E13                     	;# 
  5541  1E14                     	;# 
  5542  1E15                     	;# 
  5543  1E16                     	;# 
  5544  1E17                     	;# 
  5545  1E18                     	;# 
  5546  1E19                     	;# 
  5547  1E1A                     	;# 
  5548  1E1B                     	;# 
  5549  1E1C                     	;# 
  5550  1E1D                     	;# 
  5551  1E1E                     	;# 
  5552  1E1F                     	;# 
  5553  1E20                     	;# 
  5554  1E21                     	;# 
  5555  1E22                     	;# 
  5556  1E23                     	;# 
  5557  1E24                     	;# 
  5558  1E25                     	;# 
  5559  1E26                     	;# 
  5560  1E27                     	;# 
  5561  1E28                     	;# 
  5562  1E29                     	;# 
  5563  1E2A                     	;# 
  5564  1E2B                     	;# 
  5565  1E2C                     	;# 
  5566  1E2D                     	;# 
  5567  1E2E                     	;# 
  5568  1E2F                     	;# 
  5569  1E30                     	;# 
  5570  1E31                     	;# 
  5571  1E32                     	;# 
  5572  1E33                     	;# 
  5573  1E34                     	;# 
  5574  1E35                     	;# 
  5575  1E36                     	;# 
  5576  1E37                     	;# 
  5577  1E8F                     	;# 
  5578  1E90                     	;# 
  5579  1E91                     	;# 
  5580  1E92                     	;# 
  5581  1E93                     	;# 
  5582  1E9C                     	;# 
  5583  1EA1                     	;# 
  5584  1EA2                     	;# 
  5585  1EB1                     	;# 
  5586  1EBB                     	;# 
  5587  1EBC                     	;# 
  5588  1EBD                     	;# 
  5589  1EBE                     	;# 
  5590  1EC3                     	;# 
  5591  1EC5                     	;# 
  5592  1EC6                     	;# 
  5593  1EC7                     	;# 
  5594  1ECB                     	;# 
  5595  1ECC                     	;# 
  5596  1ECD                     	;# 
  5597  1ECE                     	;# 
  5598  1F10                     	;# 
  5599  1F11                     	;# 
  5600  1F12                     	;# 
  5601  1F13                     	;# 
  5602  1F14                     	;# 
  5603  1F15                     	;# 
  5604  1F1C                     	;# 
  5605  1F1D                     	;# 
  5606  1F1E                     	;# 
  5607  1F1F                     	;# 
  5608  1F20                     	;# 
  5609  1F21                     	;# 
  5610  1F22                     	;# 
  5611  1F23                     	;# 
  5612  1F24                     	;# 
  5613  1F25                     	;# 
  5614  1F26                     	;# 
  5615  1F27                     	;# 
  5616  1F38                     	;# 
  5617  1F39                     	;# 
  5618  1F3A                     	;# 
  5619  1F3B                     	;# 
  5620  1F3C                     	;# 
  5621  1F3D                     	;# 
  5622  1F3E                     	;# 
  5623  1F3F                     	;# 
  5624  1F43                     	;# 
  5625  1F44                     	;# 
  5626  1F45                     	;# 
  5627  1F46                     	;# 
  5628  1F47                     	;# 
  5629  1F48                     	;# 
  5630  1F49                     	;# 
  5631  1F4A                     	;# 
  5632  1F4E                     	;# 
  5633  1F4F                     	;# 
  5634  1F50                     	;# 
  5635  1F51                     	;# 
  5636  1F52                     	;# 
  5637  1F53                     	;# 
  5638  1F54                     	;# 
  5639  1F55                     	;# 
  5640  1FE4                     	;# 
  5641  1FE5                     	;# 
  5642  1FE6                     	;# 
  5643  1FE7                     	;# 
  5644  1FE8                     	;# 
  5645  1FE8                     	;# 
  5646  1FE9                     	;# 
  5647  1FEA                     	;# 
  5648  1FEA                     	;# 
  5649  1FEB                     	;# 
  5650  1FED                     	;# 
  5651  1FEE                     	;# 
  5652  1FEF                     	;# 
  5653  0000                     	;# 
  5654  0001                     	;# 
  5655  0002                     	;# 
  5656  0003                     	;# 
  5657  0004                     	;# 
  5658  0005                     	;# 
  5659  0006                     	;# 
  5660  0007                     	;# 
  5661  0008                     	;# 
  5662  0009                     	;# 
  5663  000A                     	;# 
  5664  000B                     	;# 
  5665  000C                     	;# 
  5666  000D                     	;# 
  5667  000E                     	;# 
  5668  0012                     	;# 
  5669  0013                     	;# 
  5670  0014                     	;# 
  5671  0018                     	;# 
  5672  0019                     	;# 
  5673  001A                     	;# 
  5674  009B                     	;# 
  5675  009B                     	;# 
  5676  009C                     	;# 
  5677  009D                     	;# 
  5678  009E                     	;# 
  5679  009F                     	;# 
  5680  0119                     	;# 
  5681  0119                     	;# 
  5682  0119                     	;# 
  5683  011A                     	;# 
  5684  011A                     	;# 
  5685  011A                     	;# 
  5686  011B                     	;# 
  5687  011B                     	;# 
  5688  011B                     	;# 
  5689  011B                     	;# 
  5690  011B                     	;# 
  5691  011C                     	;# 
  5692  011C                     	;# 
  5693  011C                     	;# 
  5694  011D                     	;# 
  5695  011D                     	;# 
  5696  011D                     	;# 
  5697  011E                     	;# 
  5698  011E                     	;# 
  5699  011E                     	;# 
  5700  011F                     	;# 
  5701  011F                     	;# 
  5702  011F                     	;# 
  5703  011F                     	;# 
  5704  011F                     	;# 
  5705  018C                     	;# 
  5706  018D                     	;# 
  5707  018E                     	;# 
  5708  018F                     	;# 
  5709  0190                     	;# 
  5710  0191                     	;# 
  5711  0192                     	;# 
  5712  020C                     	;# 
  5713  020C                     	;# 
  5714  020D                     	;# 
  5715  020E                     	;# 
  5716  020F                     	;# 
  5717  020F                     	;# 
  5718  0210                     	;# 
  5719  0210                     	;# 
  5720  0211                     	;# 
  5721  0211                     	;# 
  5722  028C                     	;# 
  5723  028C                     	;# 
  5724  028D                     	;# 
  5725  028D                     	;# 
  5726  028E                     	;# 
  5727  028F                     	;# 
  5728  0290                     	;# 
  5729  0291                     	;# 
  5730  030C                     	;# 
  5731  030C                     	;# 
  5732  030D                     	;# 
  5733  030E                     	;# 
  5734  030F                     	;# 
  5735  0310                     	;# 
  5736  0310                     	;# 
  5737  0311                     	;# 
  5738  0312                     	;# 
  5739  0313                     	;# 
  5740  0314                     	;# 
  5741  0314                     	;# 
  5742  0315                     	;# 
  5743  0316                     	;# 
  5744  0318                     	;# 
  5745  0318                     	;# 
  5746  0319                     	;# 
  5747  031A                     	;# 
  5748  031C                     	;# 
  5749  031C                     	;# 
  5750  031D                     	;# 
  5751  031E                     	;# 
  5752  038C                     	;# 
  5753  038C                     	;# 
  5754  038D                     	;# 
  5755  038E                     	;# 
  5756  058C                     	;# 
  5757  058C                     	;# 
  5758  058D                     	;# 
  5759  058E                     	;# 
  5760  058F                     	;# 
  5761  058F                     	;# 
  5762  0590                     	;# 
  5763  0591                     	;# 
  5764  0592                     	;# 
  5765  0593                     	;# 
  5766  059C                     	;# 
  5767  059C                     	;# 
  5768  059D                     	;# 
  5769  059D                     	;# 
  5770  059E                     	;# 
  5771  059F                     	;# 
  5772  060C                     	;# 
  5773  060D                     	;# 
  5774  060E                     	;# 
  5775  060F                     	;# 
  5776  0610                     	;# 
  5777  0611                     	;# 
  5778  0612                     	;# 
  5779  0613                     	;# 
  5780  0614                     	;# 
  5781  070C                     	;# 
  5782  070D                     	;# 
  5783  070E                     	;# 
  5784  070F                     	;# 
  5785  0710                     	;# 
  5786  0711                     	;# 
  5787  0712                     	;# 
  5788  0713                     	;# 
  5789  0716                     	;# 
  5790  0717                     	;# 
  5791  0718                     	;# 
  5792  0719                     	;# 
  5793  071A                     	;# 
  5794  071B                     	;# 
  5795  071C                     	;# 
  5796  071D                     	;# 
  5797  0796                     	;# 
  5798  0797                     	;# 
  5799  0798                     	;# 
  5800  0799                     	;# 
  5801  079A                     	;# 
  5802  079B                     	;# 
  5803  080C                     	;# 
  5804  080D                     	;# 
  5805  080E                     	;# 
  5806  080F                     	;# 
  5807  0810                     	;# 
  5808  0811                     	;# 
  5809  0812                     	;# 
  5810  0813                     	;# 
  5811  0814                     	;# 
  5812  081A                     	;# 
  5813  081A                     	;# 
  5814  081B                     	;# 
  5815  081C                     	;# 
  5816  081C                     	;# 
  5817  081D                     	;# 
  5818  081E                     	;# 
  5819  081F                     	;# 
  5820  088C                     	;# 
  5821  088D                     	;# 
  5822  088E                     	;# 
  5823  088F                     	;# 
  5824  0890                     	;# 
  5825  0891                     	;# 
  5826  0892                     	;# 
  5827  0893                     	;# 
  5828  0895                     	;# 
  5829  0896                     	;# 
  5830  090C                     	;# 
  5831  090E                     	;# 
  5832  090F                     	;# 
  5833  091F                     	;# 
  5834  098F                     	;# 
  5835  098F                     	;# 
  5836  0990                     	;# 
  5837  0991                     	;# 
  5838  0992                     	;# 
  5839  0993                     	;# 
  5840  0994                     	;# 
  5841  0995                     	;# 
  5842  0996                     	;# 
  5843  0997                     	;# 
  5844  0A19                     	;# 
  5845  0A19                     	;# 
  5846  0A1A                     	;# 
  5847  0A1A                     	;# 
  5848  0A1B                     	;# 
  5849  0A1B                     	;# 
  5850  0A1B                     	;# 
  5851  0A1C                     	;# 
  5852  0A1C                     	;# 
  5853  0A1D                     	;# 
  5854  0A1D                     	;# 
  5855  0A1E                     	;# 
  5856  0A1E                     	;# 
  5857  0A1F                     	;# 
  5858  0A1F                     	;# 
  5859  0A1F                     	;# 
  5860  1E0F                     	;# 
  5861  1E10                     	;# 
  5862  1E11                     	;# 
  5863  1E12                     	;# 
  5864  1E13                     	;# 
  5865  1E14                     	;# 
  5866  1E15                     	;# 
  5867  1E16                     	;# 
  5868  1E17                     	;# 
  5869  1E18                     	;# 
  5870  1E19                     	;# 
  5871  1E1A                     	;# 
  5872  1E1B                     	;# 
  5873  1E1C                     	;# 
  5874  1E1D                     	;# 
  5875  1E1E                     	;# 
  5876  1E1F                     	;# 
  5877  1E20                     	;# 
  5878  1E21                     	;# 
  5879  1E22                     	;# 
  5880  1E23                     	;# 
  5881  1E24                     	;# 
  5882  1E25                     	;# 
  5883  1E26                     	;# 
  5884  1E27                     	;# 
  5885  1E28                     	;# 
  5886  1E29                     	;# 
  5887  1E2A                     	;# 
  5888  1E2B                     	;# 
  5889  1E2C                     	;# 
  5890  1E2D                     	;# 
  5891  1E2E                     	;# 
  5892  1E2F                     	;# 
  5893  1E30                     	;# 
  5894  1E31                     	;# 
  5895  1E32                     	;# 
  5896  1E33                     	;# 
  5897  1E34                     	;# 
  5898  1E35                     	;# 
  5899  1E36                     	;# 
  5900  1E37                     	;# 
  5901  1E8F                     	;# 
  5902  1E90                     	;# 
  5903  1E91                     	;# 
  5904  1E92                     	;# 
  5905  1E93                     	;# 
  5906  1E9C                     	;# 
  5907  1EA1                     	;# 
  5908  1EA2                     	;# 
  5909  1EB1                     	;# 
  5910  1EBB                     	;# 
  5911  1EBC                     	;# 
  5912  1EBD                     	;# 
  5913  1EBE                     	;# 
  5914  1EC3                     	;# 
  5915  1EC5                     	;# 
  5916  1EC6                     	;# 
  5917  1EC7                     	;# 
  5918  1ECB                     	;# 
  5919  1ECC                     	;# 
  5920  1ECD                     	;# 
  5921  1ECE                     	;# 
  5922  1F10                     	;# 
  5923  1F11                     	;# 
  5924  1F12                     	;# 
  5925  1F13                     	;# 
  5926  1F14                     	;# 
  5927  1F15                     	;# 
  5928  1F1C                     	;# 
  5929  1F1D                     	;# 
  5930  1F1E                     	;# 
  5931  1F1F                     	;# 
  5932  1F20                     	;# 
  5933  1F21                     	;# 
  5934  1F22                     	;# 
  5935  1F23                     	;# 
  5936  1F24                     	;# 
  5937  1F25                     	;# 
  5938  1F26                     	;# 
  5939  1F27                     	;# 
  5940  1F38                     	;# 
  5941  1F39                     	;# 
  5942  1F3A                     	;# 
  5943  1F3B                     	;# 
  5944  1F3C                     	;# 
  5945  1F3D                     	;# 
  5946  1F3E                     	;# 
  5947  1F3F                     	;# 
  5948  1F43                     	;# 
  5949  1F44                     	;# 
  5950  1F45                     	;# 
  5951  1F46                     	;# 
  5952  1F47                     	;# 
  5953  1F48                     	;# 
  5954  1F49                     	;# 
  5955  1F4A                     	;# 
  5956  1F4E                     	;# 
  5957  1F4F                     	;# 
  5958  1F50                     	;# 
  5959  1F51                     	;# 
  5960  1F52                     	;# 
  5961  1F53                     	;# 
  5962  1F54                     	;# 
  5963  1F55                     	;# 
  5964  1FE4                     	;# 
  5965  1FE5                     	;# 
  5966  1FE6                     	;# 
  5967  1FE7                     	;# 
  5968  1FE8                     	;# 
  5969  1FE8                     	;# 
  5970  1FE9                     	;# 
  5971  1FEA                     	;# 
  5972  1FEA                     	;# 
  5973  1FEB                     	;# 
  5974  1FED                     	;# 
  5975  1FEE                     	;# 
  5976  1FEF                     	;# 
  5977  0000                     	;# 
  5978  0001                     	;# 
  5979  0002                     	;# 
  5980  0003                     	;# 
  5981  0004                     	;# 
  5982  0005                     	;# 
  5983  0006                     	;# 
  5984  0007                     	;# 
  5985  0008                     	;# 
  5986  0009                     	;# 
  5987  000A                     	;# 
  5988  000B                     	;# 
  5989  000C                     	;# 
  5990  000D                     	;# 
  5991  000E                     	;# 
  5992  0012                     	;# 
  5993  0013                     	;# 
  5994  0014                     	;# 
  5995  0018                     	;# 
  5996  0019                     	;# 
  5997  001A                     	;# 
  5998  009B                     	;# 
  5999  009B                     	;# 
  6000  009C                     	;# 
  6001  009D                     	;# 
  6002  009E                     	;# 
  6003  009F                     	;# 
  6004  0119                     	;# 
  6005  0119                     	;# 
  6006  0119                     	;# 
  6007  011A                     	;# 
  6008  011A                     	;# 
  6009  011A                     	;# 
  6010  011B                     	;# 
  6011  011B                     	;# 
  6012  011B                     	;# 
  6013  011B                     	;# 
  6014  011B                     	;# 
  6015  011C                     	;# 
  6016  011C                     	;# 
  6017  011C                     	;# 
  6018  011D                     	;# 
  6019  011D                     	;# 
  6020  011D                     	;# 
  6021  011E                     	;# 
  6022  011E                     	;# 
  6023  011E                     	;# 
  6024  011F                     	;# 
  6025  011F                     	;# 
  6026  011F                     	;# 
  6027  011F                     	;# 
  6028  011F                     	;# 
  6029  018C                     	;# 
  6030  018D                     	;# 
  6031  018E                     	;# 
  6032  018F                     	;# 
  6033  0190                     	;# 
  6034  0191                     	;# 
  6035  0192                     	;# 
  6036  020C                     	;# 
  6037  020C                     	;# 
  6038  020D                     	;# 
  6039  020E                     	;# 
  6040  020F                     	;# 
  6041  020F                     	;# 
  6042  0210                     	;# 
  6043  0210                     	;# 
  6044  0211                     	;# 
  6045  0211                     	;# 
  6046  028C                     	;# 
  6047  028C                     	;# 
  6048  028D                     	;# 
  6049  028D                     	;# 
  6050  028E                     	;# 
  6051  028F                     	;# 
  6052  0290                     	;# 
  6053  0291                     	;# 
  6054  030C                     	;# 
  6055  030C                     	;# 
  6056  030D                     	;# 
  6057  030E                     	;# 
  6058  030F                     	;# 
  6059  0310                     	;# 
  6060  0310                     	;# 
  6061  0311                     	;# 
  6062  0312                     	;# 
  6063  0313                     	;# 
  6064  0314                     	;# 
  6065  0314                     	;# 
  6066  0315                     	;# 
  6067  0316                     	;# 
  6068  0318                     	;# 
  6069  0318                     	;# 
  6070  0319                     	;# 
  6071  031A                     	;# 
  6072  031C                     	;# 
  6073  031C                     	;# 
  6074  031D                     	;# 
  6075  031E                     	;# 
  6076  038C                     	;# 
  6077  038C                     	;# 
  6078  038D                     	;# 
  6079  038E                     	;# 
  6080  058C                     	;# 
  6081  058C                     	;# 
  6082  058D                     	;# 
  6083  058E                     	;# 
  6084  058F                     	;# 
  6085  058F                     	;# 
  6086  0590                     	;# 
  6087  0591                     	;# 
  6088  0592                     	;# 
  6089  0593                     	;# 
  6090  059C                     	;# 
  6091  059C                     	;# 
  6092  059D                     	;# 
  6093  059D                     	;# 
  6094  059E                     	;# 
  6095  059F                     	;# 
  6096  060C                     	;# 
  6097  060D                     	;# 
  6098  060E                     	;# 
  6099  060F                     	;# 
  6100  0610                     	;# 
  6101  0611                     	;# 
  6102  0612                     	;# 
  6103  0613                     	;# 
  6104  0614                     	;# 
  6105  070C                     	;# 
  6106  070D                     	;# 
  6107  070E                     	;# 
  6108  070F                     	;# 
  6109  0710                     	;# 
  6110  0711                     	;# 
  6111  0712                     	;# 
  6112  0713                     	;# 
  6113  0716                     	;# 
  6114  0717                     	;# 
  6115  0718                     	;# 
  6116  0719                     	;# 
  6117  071A                     	;# 
  6118  071B                     	;# 
  6119  071C                     	;# 
  6120  071D                     	;# 
  6121  0796                     	;# 
  6122  0797                     	;# 
  6123  0798                     	;# 
  6124  0799                     	;# 
  6125  079A                     	;# 
  6126  079B                     	;# 
  6127  080C                     	;# 
  6128  080D                     	;# 
  6129  080E                     	;# 
  6130  080F                     	;# 
  6131  0810                     	;# 
  6132  0811                     	;# 
  6133  0812                     	;# 
  6134  0813                     	;# 
  6135  0814                     	;# 
  6136  081A                     	;# 
  6137  081A                     	;# 
  6138  081B                     	;# 
  6139  081C                     	;# 
  6140  081C                     	;# 
  6141  081D                     	;# 
  6142  081E                     	;# 
  6143  081F                     	;# 
  6144  088C                     	;# 
  6145  088D                     	;# 
  6146  088E                     	;# 
  6147  088F                     	;# 
  6148  0890                     	;# 
  6149  0891                     	;# 
  6150  0892                     	;# 
  6151  0893                     	;# 
  6152  0895                     	;# 
  6153  0896                     	;# 
  6154  090C                     	;# 
  6155  090E                     	;# 
  6156  090F                     	;# 
  6157  091F                     	;# 
  6158  098F                     	;# 
  6159  098F                     	;# 
  6160  0990                     	;# 
  6161  0991                     	;# 
  6162  0992                     	;# 
  6163  0993                     	;# 
  6164  0994                     	;# 
  6165  0995                     	;# 
  6166  0996                     	;# 
  6167  0997                     	;# 
  6168  0A19                     	;# 
  6169  0A19                     	;# 
  6170  0A1A                     	;# 
  6171  0A1A                     	;# 
  6172  0A1B                     	;# 
  6173  0A1B                     	;# 
  6174  0A1B                     	;# 
  6175  0A1C                     	;# 
  6176  0A1C                     	;# 
  6177  0A1D                     	;# 
  6178  0A1D                     	;# 
  6179  0A1E                     	;# 
  6180  0A1E                     	;# 
  6181  0A1F                     	;# 
  6182  0A1F                     	;# 
  6183  0A1F                     	;# 
  6184  1E0F                     	;# 
  6185  1E10                     	;# 
  6186  1E11                     	;# 
  6187  1E12                     	;# 
  6188  1E13                     	;# 
  6189  1E14                     	;# 
  6190  1E15                     	;# 
  6191  1E16                     	;# 
  6192  1E17                     	;# 
  6193  1E18                     	;# 
  6194  1E19                     	;# 
  6195  1E1A                     	;# 
  6196  1E1B                     	;# 
  6197  1E1C                     	;# 
  6198  1E1D                     	;# 
  6199  1E1E                     	;# 
  6200  1E1F                     	;# 
  6201  1E20                     	;# 
  6202  1E21                     	;# 
  6203  1E22                     	;# 
  6204  1E23                     	;# 
  6205  1E24                     	;# 
  6206  1E25                     	;# 
  6207  1E26                     	;# 
  6208  1E27                     	;# 
  6209  1E28                     	;# 
  6210  1E29                     	;# 
  6211  1E2A                     	;# 
  6212  1E2B                     	;# 
  6213  1E2C                     	;# 
  6214  1E2D                     	;# 
  6215  1E2E                     	;# 
  6216  1E2F                     	;# 
  6217  1E30                     	;# 
  6218  1E31                     	;# 
  6219  1E32                     	;# 
  6220  1E33                     	;# 
  6221  1E34                     	;# 
  6222  1E35                     	;# 
  6223  1E36                     	;# 
  6224  1E37                     	;# 
  6225  1E8F                     	;# 
  6226  1E90                     	;# 
  6227  1E91                     	;# 
  6228  1E92                     	;# 
  6229  1E93                     	;# 
  6230  1E9C                     	;# 
  6231  1EA1                     	;# 
  6232  1EA2                     	;# 
  6233  1EB1                     	;# 
  6234  1EBB                     	;# 
  6235  1EBC                     	;# 
  6236  1EBD                     	;# 
  6237  1EBE                     	;# 
  6238  1EC3                     	;# 
  6239  1EC5                     	;# 
  6240  1EC6                     	;# 
  6241  1EC7                     	;# 
  6242  1ECB                     	;# 
  6243  1ECC                     	;# 
  6244  1ECD                     	;# 
  6245  1ECE                     	;# 
  6246  1F10                     	;# 
  6247  1F11                     	;# 
  6248  1F12                     	;# 
  6249  1F13                     	;# 
  6250  1F14                     	;# 
  6251  1F15                     	;# 
  6252  1F1C                     	;# 
  6253  1F1D                     	;# 
  6254  1F1E                     	;# 
  6255  1F1F                     	;# 
  6256  1F20                     	;# 
  6257  1F21                     	;# 
  6258  1F22                     	;# 
  6259  1F23                     	;# 
  6260  1F24                     	;# 
  6261  1F25                     	;# 
  6262  1F26                     	;# 
  6263  1F27                     	;# 
  6264  1F38                     	;# 
  6265  1F39                     	;# 
  6266  1F3A                     	;# 
  6267  1F3B                     	;# 
  6268  1F3C                     	;# 
  6269  1F3D                     	;# 
  6270  1F3E                     	;# 
  6271  1F3F                     	;# 
  6272  1F43                     	;# 
  6273  1F44                     	;# 
  6274  1F45                     	;# 
  6275  1F46                     	;# 
  6276  1F47                     	;# 
  6277  1F48                     	;# 
  6278  1F49                     	;# 
  6279  1F4A                     	;# 
  6280  1F4E                     	;# 
  6281  1F4F                     	;# 
  6282  1F50                     	;# 
  6283  1F51                     	;# 
  6284  1F52                     	;# 
  6285  1F53                     	;# 
  6286  1F54                     	;# 
  6287  1F55                     	;# 
  6288  1FE4                     	;# 
  6289  1FE5                     	;# 
  6290  1FE6                     	;# 
  6291  1FE7                     	;# 
  6292  1FE8                     	;# 
  6293  1FE8                     	;# 
  6294  1FE9                     	;# 
  6295  1FEA                     	;# 
  6296  1FEA                     	;# 
  6297  1FEB                     	;# 
  6298  1FED                     	;# 
  6299  1FEE                     	;# 
  6300  1FEF                     	;# 
  6301                           
  6302                           	psect	idataBANK0
  6303  0865                     __pidataBANK0:
  6304                           
  6305                           ;initializer for _isense_max
  6306  0865  3437               	retlw	55
  6307  0866  3401               	retlw	1
  6308                           
  6309                           ;initializer for _LIN_timeout
  6310  0867  340A               	retlw	10
  6311                           
  6312                           ;initializer for _b1_coef
  6313  0868  3469               	retlw	105
  6314                           
  6315                           ;initializer for _dac_i_hw_trip
  6316  0869  3403               	retlw	3
  6317                           
  6318                           ;initializer for _tj_limit
  6319  086A  34AF               	retlw	175
  6320                           
  6321                           ;initializer for _Tambient
  6322  086B  3455               	retlw	85
  6323  086C  3400               	retlw	0
  6324                           
  6325                           	psect	idataBANK1
  6326  088A                     __pidataBANK1:
  6327                           
  6328                           ;initializer for _tcc_sample_time
  6329  088A  34E8               	retlw	232
  6330  088B  3403               	retlw	3
  6331                           
  6332                           ;initializer for _a1_coef
  6333  088C  342E               	retlw	46
  6334  088D  34FF               	retlw	255
  6335                           
  6336                           ;initializer for _current2counts_squared
  6337  088E  349E               	retlw	158
  6338  088F  3402               	retlw	2
  6339                           
  6340                           ;initializer for _factor_rdson_rthsa
  6341  0890  34EC               	retlw	236
  6342  0891  3409               	retlw	9
  6343                           
  6344                           ;initializer for _factor_rdson_rthjs
  6345  0892  34A4               	retlw	164
  6346  0893  3405               	retlw	5
  6347                           
  6348                           	psect	stringtext1
  6349  0252                     __pstringtext1:
  6350  0252                     _temperatureLUT:
  6351  0252  3468               	retlw	104
  6352  0253  3400               	retlw	0
  6353  0254  346A               	retlw	106
  6354  0255  3400               	retlw	0
  6355  0256  346C               	retlw	108
  6356  0257  3400               	retlw	0
  6357  0258  346F               	retlw	111
  6358  0259  3400               	retlw	0
  6359  025A  3471               	retlw	113
  6360  025B  3400               	retlw	0
  6361  025C  3473               	retlw	115
  6362  025D  3400               	retlw	0
  6363  025E  3476               	retlw	118
  6364  025F  3400               	retlw	0
  6365  0260  3478               	retlw	120
  6366  0261  3400               	retlw	0
  6367  0262  347B               	retlw	123
  6368  0263  3400               	retlw	0
  6369  0264  347D               	retlw	125
  6370  0265  3400               	retlw	0
  6371  0266  3480               	retlw	128
  6372  0267  3400               	retlw	0
  6373  0268  3483               	retlw	131
  6374  0269  3400               	retlw	0
  6375  026A  3485               	retlw	133
  6376  026B  3400               	retlw	0
  6377  026C  3488               	retlw	136
  6378  026D  3400               	retlw	0
  6379  026E  348B               	retlw	139
  6380  026F  3400               	retlw	0
  6381  0270  348E               	retlw	142
  6382  0271  3400               	retlw	0
  6383  0272  3491               	retlw	145
  6384  0273  3400               	retlw	0
  6385  0274  3494               	retlw	148
  6386  0275  3400               	retlw	0
  6387  0276  3497               	retlw	151
  6388  0277  3400               	retlw	0
  6389  0278  349B               	retlw	155
  6390  0279  3400               	retlw	0
  6391  027A  349E               	retlw	158
  6392  027B  3400               	retlw	0
  6393  027C  34A1               	retlw	161
  6394  027D  3400               	retlw	0
  6395  027E  34A5               	retlw	165
  6396  027F  3400               	retlw	0
  6397  0280  34A8               	retlw	168
  6398  0281  3400               	retlw	0
  6399  0282  34AC               	retlw	172
  6400  0283  3400               	retlw	0
  6401  0284  34B0               	retlw	176
  6402  0285  3400               	retlw	0
  6403  0286  34B3               	retlw	179
  6404  0287  3400               	retlw	0
  6405  0288  34B7               	retlw	183
  6406  0289  3400               	retlw	0
  6407  028A  34BB               	retlw	187
  6408  028B  3400               	retlw	0
  6409  028C  34BF               	retlw	191
  6410  028D  3400               	retlw	0
  6411  028E  34C3               	retlw	195
  6412  028F  3400               	retlw	0
  6413  0290  34C8               	retlw	200
  6414  0291  3400               	retlw	0
  6415  0292  34CC               	retlw	204
  6416  0293  3400               	retlw	0
  6417  0294  34D0               	retlw	208
  6418  0295  3400               	retlw	0
  6419  0296  34D5               	retlw	213
  6420  0297  3400               	retlw	0
  6421  0298  34D9               	retlw	217
  6422  0299  3400               	retlw	0
  6423  029A  34DE               	retlw	222
  6424  029B  3400               	retlw	0
  6425  029C  34E3               	retlw	227
  6426  029D  3400               	retlw	0
  6427  029E  34E8               	retlw	232
  6428  029F  3400               	retlw	0
  6429  02A0  34EC               	retlw	236
  6430  02A1  3400               	retlw	0
  6431  02A2  34F1               	retlw	241
  6432  02A3  3400               	retlw	0
  6433  02A4  34F7               	retlw	247
  6434  02A5  3400               	retlw	0
  6435  02A6  34FC               	retlw	252
  6436  02A7  3400               	retlw	0
  6437  02A8  3401               	retlw	1
  6438  02A9  3401               	retlw	1
  6439  02AA  3407               	retlw	7
  6440  02AB  3401               	retlw	1
  6441  02AC  340C               	retlw	12
  6442  02AD  3401               	retlw	1
  6443  02AE  3412               	retlw	18
  6444  02AF  3401               	retlw	1
  6445  02B0  3417               	retlw	23
  6446  02B1  3401               	retlw	1
  6447  02B2  341D               	retlw	29
  6448  02B3  3401               	retlw	1
  6449  02B4  3423               	retlw	35
  6450  02B5  3401               	retlw	1
  6451  02B6  3429               	retlw	41
  6452  02B7  3401               	retlw	1
  6453  02B8  342F               	retlw	47
  6454  02B9  3401               	retlw	1
  6455  02BA  3436               	retlw	54
  6456  02BB  3401               	retlw	1
  6457  02BC  343C               	retlw	60
  6458  02BD  3401               	retlw	1
  6459  02BE  3442               	retlw	66
  6460  02BF  3401               	retlw	1
  6461  02C0  3449               	retlw	73
  6462  02C1  3401               	retlw	1
  6463  02C2  3450               	retlw	80
  6464  02C3  3401               	retlw	1
  6465  02C4  3456               	retlw	86
  6466  02C5  3401               	retlw	1
  6467  02C6  345D               	retlw	93
  6468  02C7  3401               	retlw	1
  6469  02C8  3464               	retlw	100
  6470  02C9  3401               	retlw	1
  6471  02CA  346B               	retlw	107
  6472  02CB  3401               	retlw	1
  6473  02CC  3472               	retlw	114
  6474  02CD  3401               	retlw	1
  6475  02CE  3479               	retlw	121
  6476  02CF  3401               	retlw	1
  6477  02D0  3481               	retlw	129
  6478  02D1  3401               	retlw	1
  6479  02D2  3488               	retlw	136
  6480  02D3  3401               	retlw	1
  6481  02D4  3490               	retlw	144
  6482  02D5  3401               	retlw	1
  6483  02D6  3497               	retlw	151
  6484  02D7  3401               	retlw	1
  6485  02D8  349F               	retlw	159
  6486  02D9  3401               	retlw	1
  6487  02DA  34A7               	retlw	167
  6488  02DB  3401               	retlw	1
  6489  02DC  34AF               	retlw	175
  6490  02DD  3401               	retlw	1
  6491  02DE  34B7               	retlw	183
  6492  02DF  3401               	retlw	1
  6493  02E0  34BF               	retlw	191
  6494  02E1  3401               	retlw	1
  6495  02E2  34C7               	retlw	199
  6496  02E3  3401               	retlw	1
  6497  02E4  34D0               	retlw	208
  6498  02E5  3401               	retlw	1
  6499  02E6  34D8               	retlw	216
  6500  02E7  3401               	retlw	1
  6501  02E8  34E0               	retlw	224
  6502  02E9  3401               	retlw	1
  6503  02EA  34E9               	retlw	233
  6504  02EB  3401               	retlw	1
  6505  02EC  34F1               	retlw	241
  6506  02ED  3401               	retlw	1
  6507  02EE  34FA               	retlw	250
  6508  02EF  3401               	retlw	1
  6509  02F0  3402               	retlw	2
  6510  02F1  3402               	retlw	2
  6511  02F2  340B               	retlw	11
  6512  02F3  3402               	retlw	2
  6513  02F4  3414               	retlw	20
  6514  02F5  3402               	retlw	2
  6515  02F6  341C               	retlw	28
  6516  02F7  3402               	retlw	2
  6517  02F8  3425               	retlw	37
  6518  02F9  3402               	retlw	2
  6519  02FA  342E               	retlw	46
  6520  02FB  3402               	retlw	2
  6521  02FC  3437               	retlw	55
  6522  02FD  3402               	retlw	2
  6523  02FE  343F               	retlw	63
  6524  02FF  3402               	retlw	2
  6525  0300  3448               	retlw	72
  6526  0301  3402               	retlw	2
  6527  0302  3451               	retlw	81
  6528  0303  3402               	retlw	2
  6529  0304  3459               	retlw	89
  6530  0305  3402               	retlw	2
  6531  0306  3462               	retlw	98
  6532  0307  3402               	retlw	2
  6533  0308  346B               	retlw	107
  6534  0309  3402               	retlw	2
  6535  030A  3474               	retlw	116
  6536  030B  3402               	retlw	2
  6537  030C  347C               	retlw	124
  6538  030D  3402               	retlw	2
  6539  030E  3485               	retlw	133
  6540  030F  3402               	retlw	2
  6541  0310  348E               	retlw	142
  6542  0311  3402               	retlw	2
  6543  0312  3496               	retlw	150
  6544  0313  3402               	retlw	2
  6545  0314  349F               	retlw	159
  6546  0315  3402               	retlw	2
  6547  0316  34A7               	retlw	167
  6548  0317  3402               	retlw	2
  6549  0318  34B0               	retlw	176
  6550  0319  3402               	retlw	2
  6551  031A  34B8               	retlw	184
  6552  031B  3402               	retlw	2
  6553  031C  34C0               	retlw	192
  6554  031D  3402               	retlw	2
  6555  031E  34C8               	retlw	200
  6556  031F  3402               	retlw	2
  6557  0320  34D1               	retlw	209
  6558  0321  3402               	retlw	2
  6559  0322  34D9               	retlw	217
  6560  0323  3402               	retlw	2
  6561  0324  34E0               	retlw	224
  6562  0325  3402               	retlw	2
  6563  0326  34E8               	retlw	232
  6564  0327  3402               	retlw	2
  6565  0328  34F0               	retlw	240
  6566  0329  3402               	retlw	2
  6567  032A  34F8               	retlw	248
  6568  032B  3402               	retlw	2
  6569  032C  34FF               	retlw	255
  6570  032D  3402               	retlw	2
  6571  032E  3407               	retlw	7
  6572  032F  3403               	retlw	3
  6573  0330  340E               	retlw	14
  6574  0331  3403               	retlw	3
  6575  0332  3415               	retlw	21
  6576  0333  3403               	retlw	3
  6577  0334  341D               	retlw	29
  6578  0335  3403               	retlw	3
  6579  0336  3424               	retlw	36
  6580  0337  3403               	retlw	3
  6581  0338  342A               	retlw	42
  6582  0339  3403               	retlw	3
  6583  033A  3431               	retlw	49
  6584  033B  3403               	retlw	3
  6585  033C  3438               	retlw	56
  6586  033D  3403               	retlw	3
  6587  033E  343E               	retlw	62
  6588  033F  3403               	retlw	3
  6589  0340  3445               	retlw	69
  6590  0341  3403               	retlw	3
  6591  0342  344B               	retlw	75
  6592  0343  3403               	retlw	3
  6593  0344  3451               	retlw	81
  6594  0345  3403               	retlw	3
  6595  0346  3457               	retlw	87
  6596  0347  3403               	retlw	3
  6597  0348  345D               	retlw	93
  6598  0349  3403               	retlw	3
  6599  034A  3463               	retlw	99
  6600  034B  3403               	retlw	3
  6601  034C  3468               	retlw	104
  6602  034D  3403               	retlw	3
  6603  034E  346E               	retlw	110
  6604  034F  3403               	retlw	3
  6605  0350  3473               	retlw	115
  6606  0351  3403               	retlw	3
  6607  0352  3478               	retlw	120
  6608  0353  3403               	retlw	3
  6609  0354  347D               	retlw	125
  6610  0355  3403               	retlw	3
  6611  0356  3482               	retlw	130
  6612  0357  3403               	retlw	3
  6613  0358  3487               	retlw	135
  6614  0359  3403               	retlw	3
  6615  035A  348C               	retlw	140
  6616  035B  3403               	retlw	3
  6617  035C  3490               	retlw	144
  6618  035D  3403               	retlw	3
  6619  035E  3495               	retlw	149
  6620  035F  3403               	retlw	3
  6621  0360  3499               	retlw	153
  6622  0361  3403               	retlw	3
  6623  0362  349D               	retlw	157
  6624  0363  3403               	retlw	3
  6625  0364  34A1               	retlw	161
  6626  0365  3403               	retlw	3
  6627  0366  34A5               	retlw	165
  6628  0367  3403               	retlw	3
  6629  0368  34A9               	retlw	169
  6630  0369  3403               	retlw	3
  6631  036A  34AD               	retlw	173
  6632  036B  3403               	retlw	3
  6633  036C  34B0               	retlw	176
  6634  036D  3403               	retlw	3
  6635  036E  34B4               	retlw	180
  6636  036F  3403               	retlw	3
  6637  0370  34B7               	retlw	183
  6638  0371  3403               	retlw	3
  6639  0372  34BA               	retlw	186
  6640  0373  3403               	retlw	3
  6641  0374  34BD               	retlw	189
  6642  0375  3403               	retlw	3
  6643  0376  34C0               	retlw	192
  6644  0377  3403               	retlw	3
  6645  0378  34C3               	retlw	195
  6646  0379  3403               	retlw	3
  6647  037A  34C6               	retlw	198
  6648  037B  3403               	retlw	3
  6649  037C  34C8               	retlw	200
  6650  037D  3403               	retlw	3
  6651  037E  34CB               	retlw	203
  6652  037F  3403               	retlw	3
  6653  0380  34CD               	retlw	205
  6654  0381  3403               	retlw	3
  6655  0382  34D0               	retlw	208
  6656  0383  3403               	retlw	3
  6657  0384  34D2               	retlw	210
  6658  0385  3403               	retlw	3
  6659  0386  34D4               	retlw	212
  6660  0387  3403               	retlw	3
  6661  0388  34D6               	retlw	214
  6662  0389  3403               	retlw	3
  6663  038A  34D8               	retlw	216
  6664  038B  3403               	retlw	3
  6665  038C  34DA               	retlw	218
  6666  038D  3403               	retlw	3
  6667  038E  34DC               	retlw	220
  6668  038F  3403               	retlw	3
  6669  0390  34DE               	retlw	222
  6670  0391  3403               	retlw	3
  6671  0392  34E0               	retlw	224
  6672  0393  3403               	retlw	3
  6673  0394  34E1               	retlw	225
  6674  0395  3403               	retlw	3
  6675  0396  34E3               	retlw	227
  6676  0397  3403               	retlw	3
  6677  0398  34E4               	retlw	228
  6678  0399  3403               	retlw	3
  6679  039A  34E6               	retlw	230
  6680  039B  3403               	retlw	3
  6681  039C  34E7               	retlw	231
  6682  039D  3403               	retlw	3
  6683  039E                     __end_of_temperatureLUT:
  6684                           
  6685                           	psect	stringtext2
  6686  1000                     __pstringtext2:
  6687  1000                     _scheduleTable:
  6688  1000  3400               	retlw	0
  6689  1001  3401               	retlw	1
  6690  1002  3401               	retlw	1
  6691  1003  344A               	retlw	low (_LIN_COMMAND_Data| 0)
  6692  1004  3400               	retlw	high (_LIN_COMMAND_Data| 0)
  6693  1005  3401               	retlw	1
  6694  1006  3401               	retlw	1
  6695  1007  3401               	retlw	1
  6696  1008  3449               	retlw	low (_LIN_TRIGGER_TYPE_Data| 0)
  6697  1009  3400               	retlw	high (_LIN_TRIGGER_TYPE_Data| 0)
  6698  100A  3402               	retlw	2
  6699  100B  3401               	retlw	1
  6700  100C  3401               	retlw	1
  6701  100D  3448               	retlw	low (_LIN_ENTER_SLEEP_MODE_Data| 0)
  6702  100E  3400               	retlw	high (_LIN_ENTER_SLEEP_MODE_Data| 0)
  6703  100F  3410               	retlw	16
  6704  1010  3401               	retlw	1
  6705  1011  3401               	retlw	1
  6706  1012  3447               	retlw	low (_LIN_TJ_LIMIT_Data| 0)
  6707  1013  3400               	retlw	high (_LIN_TJ_LIMIT_Data| 0)
  6708  1014  3411               	retlw	17
  6709  1015  3401               	retlw	1
  6710  1016  3402               	retlw	2
  6711  1017  34DF               	retlw	low (_LIN_FACTOR_RDSON_RTHJS_Data| 0)
  6712  1018  3400               	retlw	high (_LIN_FACTOR_RDSON_RTHJS_Data| 0)
  6713  1019  3412               	retlw	18
  6714  101A  3401               	retlw	1
  6715  101B  3402               	retlw	2
  6716  101C  34DD               	retlw	low (_LIN_FACTOR_RDSON_RTHSA_Data| 0)
  6717  101D  3400               	retlw	high (_LIN_FACTOR_RDSON_RTHSA_Data| 0)
  6718  101E  3413               	retlw	19
  6719  101F  3401               	retlw	1
  6720  1020  3402               	retlw	2
  6721  1021  34DB               	retlw	low (_LIN_CURRENT2COUNTS_SQUARED_Data| 0)
  6722  1022  3400               	retlw	high (_LIN_CURRENT2COUNTS_SQUARED_Data| 0)
  6723  1023  3414               	retlw	20
  6724  1024  3401               	retlw	1
  6725  1025  3402               	retlw	2
  6726  1026  34D9               	retlw	low (_LIN_ISENSE_MAX_Data| 0)
  6727  1027  3400               	retlw	high (_LIN_ISENSE_MAX_Data| 0)
  6728  1028  3415               	retlw	21
  6729  1029  3401               	retlw	1
  6730  102A  3401               	retlw	1
  6731  102B  3446               	retlw	low (_LIN_DAC_I_HW_TRIP_Data| 0)
  6732  102C  3400               	retlw	high (_LIN_DAC_I_HW_TRIP_Data| 0)
  6733  102D  3416               	retlw	22
  6734  102E  3401               	retlw	1
  6735  102F  3401               	retlw	1
  6736  1030  3445               	retlw	low (_LIN_B1_COEF_Data| 0)
  6737  1031  3400               	retlw	high (_LIN_B1_COEF_Data| 0)
  6738  1032  3417               	retlw	23
  6739  1033  3401               	retlw	1
  6740  1034  3401               	retlw	1
  6741  1035  3444               	retlw	low (_LIN_REDUCED_DRIVE_TIME_Data| 0)
  6742  1036  3400               	retlw	high (_LIN_REDUCED_DRIVE_TIME_Data| 0)
  6743  1037  3418               	retlw	24
  6744  1038  3401               	retlw	1
  6745  1039  3402               	retlw	2
  6746  103A  34D7               	retlw	low (_LIN_TCC_SAMPLE_TIME_Data| 0)
  6747  103B  3400               	retlw	high (_LIN_TCC_SAMPLE_TIME_Data| 0)
  6748  103C  3420               	retlw	32
  6749  103D  3400               	retlw	0
  6750  103E  3401               	retlw	1
  6751  103F  3443               	retlw	low (_LIN_OUTPUT_STATE_Data| 0)
  6752  1040  3400               	retlw	high (_LIN_OUTPUT_STATE_Data| 0)
  6753  1041  3421               	retlw	33
  6754  1042  3400               	retlw	0
  6755  1043  3401               	retlw	1
  6756  1044  3442               	retlw	low (_LIN_GET_TRIGGER_TYPE_Data| 0)
  6757  1045  3400               	retlw	high (_LIN_GET_TRIGGER_TYPE_Data| 0)
  6758  1046  3422               	retlw	34
  6759  1047  3400               	retlw	0
  6760  1048  3401               	retlw	1
  6761  1049  3441               	retlw	low (_LIN_OVER_CURRENT_FAULT_Data| 0)
  6762  104A  3400               	retlw	high (_LIN_OVER_CURRENT_FAULT_Data| 0)
  6763  104B  3423               	retlw	35
  6764  104C  3400               	retlw	0
  6765  104D  3401               	retlw	1
  6766  104E  3440               	retlw	low (_LIN_UVLO_FAULT_Data| 0)
  6767  104F  3400               	retlw	high (_LIN_UVLO_FAULT_Data| 0)
  6768  1050  3424               	retlw	36
  6769  1051  3400               	retlw	0
  6770  1052  3401               	retlw	1
  6771  1053  343F               	retlw	low (_LIN_OVER_TEMP_FAULT_Data| 0)
  6772  1054  3400               	retlw	high (_LIN_OVER_TEMP_FAULT_Data| 0)
  6773  1055  3425               	retlw	37
  6774  1056  3400               	retlw	0
  6775  1057  3402               	retlw	2
  6776  1058  34D5               	retlw	low (_LIN_ADC_VCC_SENSE_Data| 0)
  6777  1059  3400               	retlw	high (_LIN_ADC_VCC_SENSE_Data| 0)
  6778  105A  3426               	retlw	38
  6779  105B  3400               	retlw	0
  6780  105C  3402               	retlw	2
  6781  105D  34D3               	retlw	low (_LIN_ADC_CURRENT_SENSE_UNCORRECTED_Data| 0)
  6782  105E  3400               	retlw	high (_LIN_ADC_CURRENT_SENSE_UNCORRECTED_Data| 0)
  6783  105F  3427               	retlw	39
  6784  1060  3400               	retlw	0
  6785  1061  3402               	retlw	2
  6786  1062  34D1               	retlw	low (_LIN_ADC_TEMP_SENSE_Data| 0)
  6787  1063  3400               	retlw	high (_LIN_ADC_TEMP_SENSE_Data| 0)
  6788  1064  3428               	retlw	40
  6789  1065  3400               	retlw	0
  6790  1066  3402               	retlw	2
  6791  1067  34CF               	retlw	low (_LIN_ADC_CURRENT_SENSE_CORRECTED_Data| 0)
  6792  1068  3400               	retlw	high (_LIN_ADC_CURRENT_SENSE_CORRECTED_Data| 0)
  6793  1069  3429               	retlw	41
  6794  106A  3400               	retlw	0
  6795  106B  3402               	retlw	2
  6796  106C  34CD               	retlw	low (_LIN_CURRENT_SENSE_OFFSET_Data| 0)
  6797  106D  3400               	retlw	high (_LIN_CURRENT_SENSE_OFFSET_Data| 0)
  6798  106E  342A               	retlw	42
  6799  106F  3400               	retlw	0
  6800  1070  3402               	retlw	2
  6801  1071  34CB               	retlw	low (_LIN_AMBIENT_TEMPERATURE_Data| 0)
  6802  1072  3400               	retlw	high (_LIN_AMBIENT_TEMPERATURE_Data| 0)
  6803  1073  342B               	retlw	43
  6804  1074  3400               	retlw	0
  6805  1075  3402               	retlw	2
  6806  1076  34C9               	retlw	low (_LIN_HEATSINK_TEMPERATURE_Data| 0)
  6807  1077  3400               	retlw	high (_LIN_HEATSINK_TEMPERATURE_Data| 0)
  6808  1078  342C               	retlw	44
  6809  1079  3400               	retlw	0
  6810  107A  3402               	retlw	2
  6811  107B  34C7               	retlw	low (_LIN_JUNCTION_TEMPERATURE_Data| 0)
  6812  107C  3400               	retlw	high (_LIN_JUNCTION_TEMPERATURE_Data| 0)
  6813  107D  342D               	retlw	45
  6814  107E  3400               	retlw	0
  6815  107F  3402               	retlw	2
  6816  1080  34C5               	retlw	low (_LIN_TEMPERATURE_RISE_JS_Data| 0)
  6817  1081  3400               	retlw	high (_LIN_TEMPERATURE_RISE_JS_Data| 0)
  6818  1082  342E               	retlw	46
  6819  1083  3400               	retlw	0
  6820  1084  3402               	retlw	2
  6821  1085  34C3               	retlw	low (_LIN_TEMPERATURE_RISE_SA_Data| 0)
  6822  1086  3400               	retlw	high (_LIN_TEMPERATURE_RISE_SA_Data| 0)
  6823  1087  342F               	retlw	47
  6824  1088  3400               	retlw	0
  6825  1089  3408               	retlw	8
  6826  108A  3438               	retlw	low (_LIN_DIAGNOSTIC_Data| (0+256))
  6827  108B  3401               	retlw	high (_LIN_DIAGNOSTIC_Data| (0+256))
  6828  108C                     __end_of_scheduleTable:
  6829                           
  6830                           	psect	nvBANK0
  6831  006E                     __pnvBANK0:
  6832  006E                     _timer0ReloadVal16bit:
  6833  006E                     	ds	2
  6834                           
  6835                           	psect	nvBANK1
  6836  00EB                     __pnvBANK1:
  6837  00EB                     _LIN_rxCommand:
  6838  00EB                     	ds	2
  6839  00ED                     _eusart1TxBufferRemaining:
  6840  00ED                     	ds	1
  6841  00EE                     _LIN_rxCommandLength:
  6842  00EE                     	ds	1
  6843                           
  6844                           	psect	nvBANK2
  6845  015C                     __pnvBANK2:
  6846  015C                     _timer1ReloadVal:
  6847  015C                     	ds	2
  6848  015E                     _TMR0_InterruptHandler:
  6849  015E                     	ds	2
  6850  0160                     _EUSART1_ErrorHandler:
  6851  0160                     	ds	2
  6852  0162                     _EUSART1_OverrunErrorHandler:
  6853  0162                     	ds	2
  6854  0164                     _EUSART1_FramingErrorHandler:
  6855  0164                     	ds	2
  6856  0166                     _EUSART1_RxDefaultInterruptHandler:
  6857  0166                     	ds	2
  6858  0168                     _EUSART1_TxDefaultInterruptHandler:
  6859  0168                     	ds	2
  6860  016A                     _LIN_processData:
  6861  016A                     	ds	2
  6862  0014                     _TRISCbits	set	20
  6863  0014                     _TRISC	set	20
  6864  0013                     _TRISB	set	19
  6865  0012                     _TRISA	set	18
  6866  001A                     _LATC	set	26
  6867  0019                     _LATB	set	25
  6868  0018                     _LATA	set	24
  6869  000B                     _INTCONbits	set	11
  6870  0019                     _LATBbits	set	25
  6871  009D                     _ADCON0bits	set	157
  6872  009D                     _ADCON0	set	157
  6873  009C                     _ADRESH	set	156
  6874  009B                     _ADRESL	set	155
  6875  009E                     _ADCON1	set	158
  6876  0119                     _RC1REG	set	281
  6877  011A                     _TX1REG	set	282
  6878  011C                     _SP1BRGH	set	284
  6879  011B                     _SP1BRGL	set	283
  6880  011E                     _TX1STA	set	286
  6881  011D                     _RC1STA	set	285
  6882  011F                     _BAUD1CON	set	287
  6883  011D                     _RC1STAbits	set	285
  6884  011E                     _TX1STAbits	set	286
  6885  020E                     _T1CONbits	set	526
  6886  020E                     _T1CON	set	526
  6887  020C                     _TMR1L	set	524
  6888  020D                     _TMR1H	set	525
  6889  0211                     _T1CLK	set	529
  6890  0210                     _T1GATE	set	528
  6891  020F                     _T1GCON	set	527
  6892  028E                     _T2CONbits	set	654
  6893  028E                     _T2CON	set	654
  6894  028C                     _T2TMR	set	652
  6895  028D                     _T2PR	set	653
  6896  0291                     _T2RST	set	657
  6897  028F                     _T2HLT	set	655
  6898  0290                     _T2CLKCON	set	656
  6899  059E                     _T0CON0	set	1438
  6900  059C                     _TMR0L	set	1436
  6901  059D                     _TMR0H	set	1437
  6902  059F                     _T0CON1	set	1439
  6903  070E                     _PIR2bits	set	1806
  6904  070F                     _PIR3bits	set	1807
  6905  0710                     _PIR4bits	set	1808
  6906  0716                     _PIE0bits	set	1814
  6907  070C                     _PIR0bits	set	1804
  6908  071B                     _PIE5bits	set	1819
  6909  0711                     _PIR5bits	set	1809
  6910  0719                     _PIE3bits	set	1817
  6911  079B                     _PMD5	set	1947
  6912  079A                     _PMD4	set	1946
  6913  0799                     _PMD3	set	1945
  6914  0798                     _PMD2	set	1944
  6915  0797                     _PMD1	set	1943
  6916  0796                     _PMD0	set	1942
  6917  0892                     _OSCTUNE	set	2194
  6918  0890                     _OSCSTAT	set	2192
  6919  0893                     _OSCFRQ	set	2195
  6920  0891                     _OSCEN	set	2193
  6921  088F                     _OSCCON3	set	2191
  6922  088D                     _OSCCON1	set	2189
  6923  090F                     _DAC1CON1bits	set	2319
  6924  090C                     _FVRCON	set	2316
  6925  090F                     _DAC1CON1	set	2319
  6926  090E                     _DAC1CON0	set	2318
  6927  0994                     _CM2CON0bits	set	2452
  6928  0997                     _CM2PCH	set	2455
  6929  0996                     _CM2NCH	set	2454
  6930  0995                     _CM2CON1	set	2453
  6931  0994                     _CM2CON0	set	2452
  6932  1E1B                     _CLC2POLbits	set	7707
  6933  1E19                     _CLC1GLS3bits	set	7705
  6934  1E11                     _CLC1POLbits	set	7697
  6935  1E0F                     _CLCDATAbits	set	7695
  6936  1E17                     _CLC1GLS1bits	set	7703
  6937  1E10                     _CLC1CONbits	set	7696
  6938  1E10                     _CLC1CON	set	7696
  6939  1E19                     _CLC1GLS3	set	7705
  6940  1E18                     _CLC1GLS2	set	7704
  6941  1E17                     _CLC1GLS1	set	7703
  6942  1E16                     _CLC1GLS0	set	7702
  6943  1E15                     _CLC1SEL3	set	7701
  6944  1E14                     _CLC1SEL2	set	7700
  6945  1E13                     _CLC1SEL1	set	7699
  6946  1E12                     _CLC1SEL0	set	7698
  6947  1E11                     _CLC1POL	set	7697
  6948  1E24                     _CLC3CONbits	set	7716
  6949  1E24                     _CLC3CON	set	7716
  6950  1E2D                     _CLC3GLS3	set	7725
  6951  1E2C                     _CLC3GLS2	set	7724
  6952  1E2B                     _CLC3GLS1	set	7723
  6953  1E2A                     _CLC3GLS0	set	7722
  6954  1E29                     _CLC3SEL3	set	7721
  6955  1E28                     _CLC3SEL2	set	7720
  6956  1E27                     _CLC3SEL1	set	7719
  6957  1E26                     _CLC3SEL0	set	7718
  6958  1E25                     _CLC3POL	set	7717
  6959  1E1A                     _CLC2CON	set	7706
  6960  1E23                     _CLC2GLS3	set	7715
  6961  1E22                     _CLC2GLS2	set	7714
  6962  1E21                     _CLC2GLS1	set	7713
  6963  1E20                     _CLC2GLS0	set	7712
  6964  1E1F                     _CLC2SEL3	set	7711
  6965  1E1E                     _CLC2SEL2	set	7710
  6966  1E1D                     _CLC2SEL1	set	7709
  6967  1E1C                     _CLC2SEL0	set	7708
  6968  1E1B                     _CLC2POL	set	7707
  6969  1E2E                     _CLC4CON	set	7726
  6970  1E37                     _CLC4GLS3	set	7735
  6971  1E36                     _CLC4GLS2	set	7734
  6972  1E35                     _CLC4GLS1	set	7733
  6973  1E34                     _CLC4GLS0	set	7732
  6974  1E33                     _CLC4SEL3	set	7731
  6975  1E32                     _CLC4SEL2	set	7730
  6976  1E31                     _CLC4SEL1	set	7729
  6977  1E30                     _CLC4SEL0	set	7728
  6978  1E2F                     _CLC4POL	set	7727
  6979  1ECB                     _RX1DTPPS	set	7883
  6980  1EBB                     _CLCIN0PPS	set	7867
  6981  1F27                     _RC7PPS	set	7975
  6982  1F26                     _RC6PPS	set	7974
  6983  1F1F                     _RB7PPS	set	7967
  6984  1F52                     _INLVLC	set	8018
  6985  1F47                     _INLVLB	set	8007
  6986  1F3C                     _INLVLA	set	7996
  6987  1F51                     _SLRCONC	set	8017
  6988  1F46                     _SLRCONB	set	8006
  6989  1F3B                     _SLRCONA	set	7995
  6990  1F50                     _ODCONC	set	8016
  6991  1F45                     _ODCONB	set	8005
  6992  1F3A                     _ODCONA	set	7994
  6993  1F4F                     _WPUC	set	8015
  6994  1F39                     _WPUA	set	7993
  6995  1F44                     _WPUB	set	8004
  6996  1F38                     _ANSELA	set	7992
  6997  1F43                     _ANSELB	set	8003
  6998  1F4E                     _ANSELC	set	8014
  6999                           
  7000                           	psect	cinit
  7001  002E                     start_initialization:	
  7002                           ; #config settings
  7003                           
  7004  002E                     __initialization:
  7005                           
  7006                           ; Initialize objects allocated to BANK0
  7007  002E  3065               	movlw	low __pidataBANK0
  7008  002F  0084               	movwf	4
  7009  0030  3088               	movlw	(high __pidataBANK0)| (0+128)
  7010  0031  0085               	movwf	5
  7011  0032  3066               	movlw	low __pdataBANK0
  7012  0033  0086               	movwf	6
  7013  0034  3000               	movlw	high __pdataBANK0
  7014  0035  0087               	movwf	7
  7015  0036  3008               	movlw	8
  7016  0037  3188  2007  3180   	fcall	init_ram
  7017                           
  7018                           ; Initialize objects allocated to BANK1
  7019  003A  308A               	movlw	low __pidataBANK1
  7020  003B  0084               	movwf	4
  7021  003C  3088               	movlw	(high __pidataBANK1)| (0+128)
  7022  003D  0085               	movwf	5
  7023  003E  30E1               	movlw	low __pdataBANK1
  7024  003F  0086               	movwf	6
  7025  0040  3000               	movlw	high __pdataBANK1
  7026  0041  0087               	movwf	7
  7027  0042  300A               	movlw	10
  7028  0043  3188  2007  3180   	fcall	init_ram
  7029                           
  7030                           ; Clear objects allocated to COMMON
  7031  0046  01F0               	clrf	__pbssCOMMON& (0+127)
  7032  0047  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  7033  0048  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  7034  0049  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  7035  004A  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  7036  004B  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  7037                           
  7038                           ; Clear objects allocated to BANK0
  7039  004C  3020               	movlw	low __pbssBANK0
  7040  004D  0084               	movwf	4
  7041  004E  3000               	movlw	high __pbssBANK0
  7042  004F  0085               	movwf	5
  7043  0050  302B               	movlw	43
  7044  0051  3188  2001  3180   	fcall	clear_ram0
  7045                           
  7046                           ; Clear objects allocated to BANK1
  7047  0054  30A0               	movlw	low __pbssBANK1
  7048  0055  0084               	movwf	4
  7049  0056  3000               	movlw	high __pbssBANK1
  7050  0057  0085               	movwf	5
  7051  0058  3041               	movlw	65
  7052  0059  3188  2001  3180   	fcall	clear_ram0
  7053                           
  7054                           ; Clear objects allocated to BANK2
  7055  005C  3020               	movlw	low __pbssBANK2
  7056  005D  0084               	movwf	4
  7057  005E  3001               	movlw	high __pbssBANK2
  7058  005F  0085               	movwf	5
  7059  0060  3020               	movlw	32
  7060  0061  3188  2001         	fcall	clear_ram0
  7061  0063                     end_of_initialization:	
  7062                           ;End of C runtime variable initialization code
  7063                           
  7064  0063                     __end_of__initialization:
  7065  0063  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  7066  0064  0140               	movlb	0
  7067  0065  318A  2AFD         	ljmp	_main	;jump to C main() function
  7068                           
  7069                           	psect	bssCOMMON
  7070  0070                     __pbssCOMMON:
  7071  0070                     _eusart1RxTail:
  7072  0070                     	ds	1
  7073  0071                     _eusart1RxHead:
  7074  0071                     	ds	1
  7075  0072                     _eusart1TxTail:
  7076  0072                     	ds	1
  7077  0073                     _eusart1TxHead:
  7078  0073                     	ds	1
  7079  0074                     _adcTSense_curr:
  7080  0074                     	ds	2
  7081                           
  7082                           	psect	bssBANK0
  7083  0020                     __pbssBANK0:
  7084  0020                     _adcTSense_prev:
  7085  0020                     	ds	2
  7086  0022                     _eusart1RxLastError:
  7087  0022                     	ds	1
  7088  0023                     _eusart1RxCount:
  7089  0023                     	ds	1
  7090  0024                     LIN_handler@rxDataIndex:
  7091  0024                     	ds	1
  7092  0025                     LIN_handler@LIN_rxState:
  7093  0025                     	ds	1
  7094  0026                     _CountCallBack:
  7095  0026                     	ds	1
  7096  0027                     _LIN_timerRunning:
  7097  0027                     	ds	1
  7098  0028                     _LIN_rxInProgress:
  7099  0028                     	ds	1
  7100  0029                     _overTempFault:
  7101  0029                     	ds	1
  7102  002A                     _uvloFault:
  7103  002A                     	ds	1
  7104  002B                     _overCurrentFault:
  7105  002B                     	ds	1
  7106  002C                     _outputState:
  7107  002C                     	ds	1
  7108  002D                     _reduced_drive_time:
  7109  002D                     	ds	1
  7110  002E                     _triggerType:
  7111  002E                     	ds	1
  7112  002F                     _Trise_sa:
  7113  002F                     	ds	2
  7114  0031                     _Trise_js:
  7115  0031                     	ds	2
  7116  0033                     _Tjunction:
  7117  0033                     	ds	2
  7118  0035                     _Tsink:
  7119  0035                     	ds	2
  7120  0037                     _iSenseOffset:
  7121  0037                     	ds	2
  7122  0039                     _adcISense_corr:
  7123  0039                     	ds	2
  7124  003B                     _adcISense_curr:
  7125  003B                     	ds	2
  7126  003D                     _adcVccSense_curr:
  7127  003D                     	ds	2
  7128  003F                     _LIN_OVER_TEMP_FAULT_Data:
  7129  003F                     	ds	1
  7130  0040                     _LIN_UVLO_FAULT_Data:
  7131  0040                     	ds	1
  7132  0041                     _LIN_OVER_CURRENT_FAULT_Data:
  7133  0041                     	ds	1
  7134  0042                     _LIN_GET_TRIGGER_TYPE_Data:
  7135  0042                     	ds	1
  7136  0043                     _LIN_OUTPUT_STATE_Data:
  7137  0043                     	ds	1
  7138  0044                     _LIN_REDUCED_DRIVE_TIME_Data:
  7139  0044                     	ds	1
  7140  0045                     _LIN_B1_COEF_Data:
  7141  0045                     	ds	1
  7142  0046                     _LIN_DAC_I_HW_TRIP_Data:
  7143  0046                     	ds	1
  7144  0047                     _LIN_TJ_LIMIT_Data:
  7145  0047                     	ds	1
  7146  0048                     _LIN_ENTER_SLEEP_MODE_Data:
  7147  0048                     	ds	1
  7148  0049                     _LIN_TRIGGER_TYPE_Data:
  7149  0049                     	ds	1
  7150  004A                     _LIN_COMMAND_Data:
  7151  004A                     	ds	1
  7152                           
  7153                           	psect	dataBANK0
  7154  0066                     __pdataBANK0:
  7155  0066                     _isense_max:
  7156  0066                     	ds	2
  7157  0068                     _LIN_timeout:
  7158  0068                     	ds	1
  7159  0069                     _b1_coef:
  7160  0069                     	ds	1
  7161  006A                     _dac_i_hw_trip:
  7162  006A                     	ds	1
  7163  006B                     _tj_limit:
  7164  006B                     	ds	1
  7165  006C                     _Tambient:
  7166  006C                     	ds	2
  7167                           
  7168                           	psect	bssBANK1
  7169  00A0                     __pbssBANK1:
  7170  00A0                     _Trise_raw_prev:
  7171  00A0                     	ds	4
  7172  00A4                     _Trise_raw_curr:
  7173  00A4                     	ds	4
  7174  00A8                     _Trise_filtered:
  7175  00A8                     	ds	4
  7176  00AC                     _adcISense_prev:
  7177  00AC                     	ds	2
  7178  00AE                     _adcISense_OneMOSFET:
  7179  00AE                     	ds	2
  7180  00B0                     _adcVccSense_prev:
  7181  00B0                     	ds	2
  7182  00B2                     _ADC_InterruptHandler:
  7183  00B2                     	ds	2
  7184  00B4                     _ticks_1ms:
  7185  00B4                     	ds	2
  7186  00B6                     _LIN_packet:
  7187  00B6                     	ds	13
  7188  00C3                     _LIN_TEMPERATURE_RISE_SA_Data:
  7189  00C3                     	ds	2
  7190  00C5                     _LIN_TEMPERATURE_RISE_JS_Data:
  7191  00C5                     	ds	2
  7192  00C7                     _LIN_JUNCTION_TEMPERATURE_Data:
  7193  00C7                     	ds	2
  7194  00C9                     _LIN_HEATSINK_TEMPERATURE_Data:
  7195  00C9                     	ds	2
  7196  00CB                     _LIN_AMBIENT_TEMPERATURE_Data:
  7197  00CB                     	ds	2
  7198  00CD                     _LIN_CURRENT_SENSE_OFFSET_Data:
  7199  00CD                     	ds	2
  7200  00CF                     _LIN_ADC_CURRENT_SENSE_CORRECTED_Data:
  7201  00CF                     	ds	2
  7202  00D1                     _LIN_ADC_TEMP_SENSE_Data:
  7203  00D1                     	ds	2
  7204  00D3                     _LIN_ADC_CURRENT_SENSE_UNCORRECTED_Data:
  7205  00D3                     	ds	2
  7206  00D5                     _LIN_ADC_VCC_SENSE_Data:
  7207  00D5                     	ds	2
  7208  00D7                     _LIN_TCC_SAMPLE_TIME_Data:
  7209  00D7                     	ds	2
  7210  00D9                     _LIN_ISENSE_MAX_Data:
  7211  00D9                     	ds	2
  7212  00DB                     _LIN_CURRENT2COUNTS_SQUARED_Data:
  7213  00DB                     	ds	2
  7214  00DD                     _LIN_FACTOR_RDSON_RTHSA_Data:
  7215  00DD                     	ds	2
  7216  00DF                     _LIN_FACTOR_RDSON_RTHJS_Data:
  7217  00DF                     	ds	2
  7218                           
  7219                           	psect	dataBANK1
  7220  00E1                     __pdataBANK1:
  7221  00E1                     _tcc_sample_time:
  7222  00E1                     	ds	2
  7223  00E3                     _a1_coef:
  7224  00E3                     	ds	2
  7225  00E5                     _current2counts_squared:
  7226  00E5                     	ds	2
  7227  00E7                     _factor_rdson_rthsa:
  7228  00E7                     	ds	2
  7229  00E9                     _factor_rdson_rthjs:
  7230  00E9                     	ds	2
  7231                           
  7232                           	psect	bssBANK2
  7233  0120                     __pbssBANK2:
  7234  0120                     _eusart1RxStatusBuffer:
  7235  0120                     	ds	8
  7236  0128                     _eusart1RxBuffer:
  7237  0128                     	ds	8
  7238  0130                     _eusart1TxBuffer:
  7239  0130                     	ds	8
  7240  0138                     _LIN_DIAGNOSTIC_Data:
  7241  0138                     	ds	8
  7242                           
  7243                           	psect	inittext
  7244  0807                     init_ram:
  7245  0807  00FE               	movwf	126
  7246  0808                     initloop:
  7247  0808  0012               	moviw fsr0++
  7248  0809  001E               	movwi fsr1++
  7249  080A  0BFE               	decfsz	126,f
  7250  080B  2808               	goto	initloop
  7251  080C  3400               	retlw	0
  7252                           
  7253                           	psect	clrtext
  7254  0801                     clear_ram0:	
  7255                           ;	Called with FSR0 containing the base address, and
  7256                           ;	WREG with the size to clear
  7257                           
  7258  0801  0064               	clrwdt	;clear the watchdog before getting into this loop
  7259  0802                     clrloop0:
  7260  0802  0180               	clrf	0	;clear RAM location pointed to by FSR
  7261  0803  3101               	addfsr 0,1
  7262  0804  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  7263  0805  2802               	goto	clrloop0	;have we reached the end yet?
  7264  0806  3400               	retlw	0	;all done for this memory range, return
  7265                           
  7266                           	psect	cstackBANK2
  7267  0140                     __pcstackBANK2:
  7268  0140                     ??_TCC_Curve:
  7269  0140                     ??_LIN_handler:	
  7270                           ; 1 bytes @ 0x0
  7271                           
  7272                           
  7273                           ; 1 bytes @ 0x0
  7274  0140                     	ds	12
  7275  014C                     _TCC_Curve$3311:
  7276                           
  7277                           ; 8 bytes @ 0xC
  7278  014C                     	ds	8
  7279  0154                     _TCC_Curve$3312:
  7280                           
  7281                           ; 4 bytes @ 0x14
  7282  0154                     	ds	4
  7283  0158                     ??_EFuse:
  7284                           
  7285                           ; 1 bytes @ 0x18
  7286  0158                     	ds	2
  7287  015A                     ??_main:
  7288                           
  7289                           ; 1 bytes @ 0x1A
  7290  015A                     	ds	2
  7291                           
  7292                           	psect	cstackCOMMON
  7293  0076                     __pcstackCOMMON:
  7294  0076                     ?_processLIN:
  7295  0076                     ?_LIN_getPacket:	
  7296                           ; 1 bytes @ 0x0
  7297                           
  7298  0076                     ?_CmdOutput:	
  7299                           ; 1 bytes @ 0x0
  7300                           
  7301  0076                     ?_EFuseInit:	
  7302                           ; 1 bytes @ 0x0
  7303                           
  7304  0076                     ?_LIN_stopTimer:	
  7305                           ; 1 bytes @ 0x0
  7306                           
  7307  0076                     ?_LIN_enableRx:	
  7308                           ; 1 bytes @ 0x0
  7309                           
  7310  0076                     ?_LIN_setTimerHandler:	
  7311                           ; 1 bytes @ 0x0
  7312                           
  7313  0076                     ?_EUSART1_is_rx_ready:	
  7314                           ; 1 bytes @ 0x0
  7315                           
  7316  0076                     ?_LIN_startTimer:	
  7317                           ; 1 bytes @ 0x0
  7318                           
  7319  0076                     ?_LIN_breakCheck:	
  7320                           ; 1 bytes @ 0x0
  7321                           
  7322  0076                     ?_EUSART1_Read:	
  7323                           ; 1 bytes @ 0x0
  7324                           
  7325  0076                     ?_LIN_checkPID:	
  7326                           ; 1 bytes @ 0x0
  7327                           
  7328  0076                     ?_LIN_disableRx:	
  7329                           ; 1 bytes @ 0x0
  7330                           
  7331  0076                     ?_EUSART1_Write:	
  7332                           ; 1 bytes @ 0x0
  7333                           
  7334  0076                     ?_LIN_calcParity:	
  7335                           ; 1 bytes @ 0x0
  7336                           
  7337  0076                     ?_EUSART1_get_last_status:	
  7338                           ; 1 bytes @ 0x0
  7339                           
  7340  0076                     ?_PMD_Initialize:	
  7341                           ; 1 bytes @ 0x0
  7342                           
  7343  0076                     ?_PIN_MANAGER_Initialize:	
  7344                           ; 1 bytes @ 0x0
  7345                           
  7346  0076                     ?_OSCILLATOR_Initialize:	
  7347                           ; 1 bytes @ 0x0
  7348                           
  7349  0076                     ?_FVR_Initialize:	
  7350                           ; 1 bytes @ 0x0
  7351                           
  7352  0076                     ?_TMR2_Initialize:	
  7353                           ; 1 bytes @ 0x0
  7354                           
  7355  0076                     ?_TMR0_Initialize:	
  7356                           ; 1 bytes @ 0x0
  7357                           
  7358  0076                     ?_CLC1_Initialize:	
  7359                           ; 1 bytes @ 0x0
  7360                           
  7361  0076                     ?_ADC_Initialize:	
  7362                           ; 1 bytes @ 0x0
  7363                           
  7364  0076                     ?_CLC3_Initialize:	
  7365                           ; 1 bytes @ 0x0
  7366                           
  7367  0076                     ?_DAC1_Initialize:	
  7368                           ; 1 bytes @ 0x0
  7369                           
  7370  0076                     ?_TMR1_Initialize:	
  7371                           ; 1 bytes @ 0x0
  7372                           
  7373  0076                     ?_EUSART1_Initialize:	
  7374                           ; 1 bytes @ 0x0
  7375                           
  7376  0076                     ?_EUSART1_Receive_ISR:	
  7377                           ; 1 bytes @ 0x0
  7378                           
  7379  0076                     ?_EUSART1_Transmit_ISR:	
  7380                           ; 1 bytes @ 0x0
  7381                           
  7382  0076                     ??_EUSART1_Transmit_ISR:	
  7383                           ; 1 bytes @ 0x0
  7384                           
  7385  0076                     ?_EUSART1_DefaultFramingErrorHandler:	
  7386                           ; 1 bytes @ 0x0
  7387                           
  7388  0076                     ??_EUSART1_DefaultFramingErrorHandler:	
  7389                           ; 1 bytes @ 0x0
  7390                           
  7391  0076                     ?_EUSART1_DefaultOverrunErrorHandler:	
  7392                           ; 1 bytes @ 0x0
  7393                           
  7394  0076                     ??_EUSART1_DefaultOverrunErrorHandler:	
  7395                           ; 1 bytes @ 0x0
  7396                           
  7397  0076                     ?_EUSART1_DefaultErrorHandler:	
  7398                           ; 1 bytes @ 0x0
  7399                           
  7400  0076                     ?_EUSART1_RxDataHandler:	
  7401                           ; 1 bytes @ 0x0
  7402                           
  7403  0076                     ??_EUSART1_RxDataHandler:	
  7404                           ; 1 bytes @ 0x0
  7405                           
  7406  0076                     ?_TMR0_DefaultInterruptHandler:	
  7407                           ; 1 bytes @ 0x0
  7408                           
  7409  0076                     ??_TMR0_DefaultInterruptHandler:	
  7410                           ; 1 bytes @ 0x0
  7411                           
  7412  0076                     ?_ProcessAnalogInputs:	
  7413                           ; 1 bytes @ 0x0
  7414                           
  7415  0076                     ?_EFuse:	
  7416                           ; 1 bytes @ 0x0
  7417                           
  7418  0076                     ?_TCC_Curve:	
  7419                           ; 1 bytes @ 0x0
  7420                           
  7421  0076                     ?_LIN_Slave_Initialize:	
  7422                           ; 1 bytes @ 0x0
  7423                           
  7424  0076                     ?_Update_LIN_Data:	
  7425                           ; 1 bytes @ 0x0
  7426                           
  7427  0076                     ?_LIN_queuePacket:	
  7428                           ; 1 bytes @ 0x0
  7429                           
  7430  0076                     ?_LIN_handler:	
  7431                           ; 1 bytes @ 0x0
  7432                           
  7433  0076                     ?_LIN_timerHandler:	
  7434                           ; 1 bytes @ 0x0
  7435                           
  7436  0076                     ??_LIN_timerHandler:	
  7437                           ; 1 bytes @ 0x0
  7438                           
  7439  0076                     ?_CLC4_Initialize:	
  7440                           ; 1 bytes @ 0x0
  7441                           
  7442  0076                     ?_CMP2_Initialize:	
  7443                           ; 1 bytes @ 0x0
  7444                           
  7445  0076                     ?_CLC2_Initialize:	
  7446                           ; 1 bytes @ 0x0
  7447                           
  7448  0076                     ?_CLC2_ISR:	
  7449                           ; 1 bytes @ 0x0
  7450                           
  7451  0076                     ??_CLC2_ISR:	
  7452                           ; 1 bytes @ 0x0
  7453                           
  7454  0076                     ?_SYSTEM_Initialize:	
  7455                           ; 1 bytes @ 0x0
  7456                           
  7457  0076                     ?_TMR0_Reload:	
  7458                           ; 1 bytes @ 0x0
  7459                           
  7460  0076                     ?_TMR0_ISR:	
  7461                           ; 1 bytes @ 0x0
  7462                           
  7463  0076                     ?_TMR2_Start:	
  7464                           ; 1 bytes @ 0x0
  7465                           
  7466  0076                     ?_TMR2_Stop:	
  7467                           ; 1 bytes @ 0x0
  7468                           
  7469  0076                     ?_TMR1_StartTimer:	
  7470                           ; 1 bytes @ 0x0
  7471                           
  7472  0076                     ?_TMR1_StopTimer:	
  7473                           ; 1 bytes @ 0x0
  7474                           
  7475  0076                     ?_INTERRUPT_InterruptManager:	
  7476                           ; 1 bytes @ 0x0
  7477                           
  7478  0076                     ?_ADC_SelectChannel:	
  7479                           ; 1 bytes @ 0x0
  7480                           
  7481  0076                     ??_ADC_SelectChannel:	
  7482                           ; 1 bytes @ 0x0
  7483                           
  7484  0076                     ?_main:	
  7485                           ; 1 bytes @ 0x0
  7486                           
  7487  0076                     ?i1_LIN_stopTimer:	
  7488                           ; 1 bytes @ 0x0
  7489                           
  7490  0076                     ??i1_LIN_stopTimer:	
  7491                           ; 1 bytes @ 0x0
  7492                           
  7493  0076                     ?i1_TMR2_Initialize:	
  7494                           ; 1 bytes @ 0x0
  7495                           
  7496  0076                     ??i1_TMR2_Initialize:	
  7497                           ; 1 bytes @ 0x0
  7498                           
  7499  0076                     ?i1_TMR2_Start:	
  7500                           ; 1 bytes @ 0x0
  7501                           
  7502  0076                     ??i1_TMR2_Start:	
  7503                           ; 1 bytes @ 0x0
  7504                           
  7505  0076                     ?i1_TMR2_Stop:	
  7506                           ; 1 bytes @ 0x0
  7507                           
  7508  0076                     ??i1_TMR2_Stop:	
  7509                           ; 1 bytes @ 0x0
  7510                           
  7511  0076                     ?i1_TMR1_StartTimer:	
  7512                           ; 1 bytes @ 0x0
  7513                           
  7514  0076                     ??i1_TMR1_StartTimer:	
  7515                           ; 1 bytes @ 0x0
  7516                           
  7517  0076                     ?i1_TMR1_StopTimer:	
  7518                           ; 1 bytes @ 0x0
  7519                           
  7520  0076                     ??i1_TMR1_StopTimer:	
  7521                           ; 1 bytes @ 0x0
  7522                           
  7523  0076                     ?i1_TMR1_WriteTimer:	
  7524                           ; 1 bytes @ 0x0
  7525                           
  7526  0076                     ?i1_CmdOutput:	
  7527                           ; 1 bytes @ 0x0
  7528                           
  7529  0076                     ?_ADC_GetConversion:	
  7530                           ; 1 bytes @ 0x0
  7531                           
  7532  0076                     i1TMR1_WriteTimer@timerVal:	
  7533                           ; 2 bytes @ 0x0
  7534                           
  7535                           
  7536                           ; 2 bytes @ 0x0
  7537  0076                     	ds	1
  7538  0077                     ??_EUSART1_Receive_ISR:
  7539  0077                     ??_EUSART1_DefaultErrorHandler:	
  7540                           ; 1 bytes @ 0x1
  7541                           
  7542  0077                     ADC_SelectChannel@channel:	
  7543                           ; 1 bytes @ 0x1
  7544                           
  7545                           
  7546                           ; 1 bytes @ 0x1
  7547  0077                     	ds	1
  7548  0078                     ??_ADC_GetConversion:
  7549  0078                     ??i1_TMR1_WriteTimer:	
  7550                           ; 1 bytes @ 0x2
  7551                           
  7552  0078                     ??i1_CmdOutput:	
  7553                           ; 1 bytes @ 0x2
  7554                           
  7555                           
  7556                           ; 1 bytes @ 0x2
  7557  0078                     	ds	1
  7558  0079                     ADC_GetConversion@channel:
  7559                           
  7560                           ; 1 bytes @ 0x3
  7561  0079                     	ds	1
  7562  007A                     i1CmdOutput@enable:
  7563                           
  7564                           ; 1 bytes @ 0x4
  7565  007A                     	ds	1
  7566  007B                     ??_ProcessAnalogInputs:
  7567                           
  7568                           ; 1 bytes @ 0x5
  7569  007B                     	ds	1
  7570  007C                     ??_TMR0_ISR:
  7571  007C                     ??_INTERRUPT_InterruptManager:	
  7572                           ; 1 bytes @ 0x6
  7573                           
  7574                           
  7575                           	psect	cstackBANK0
  7576  004B                     __pcstackBANK0:	
  7577                           ; 1 bytes @ 0x6
  7578                           
  7579  004B                     ??_LIN_stopTimer:
  7580  004B                     ??_LIN_enableRx:	
  7581                           ; 1 bytes @ 0x0
  7582                           
  7583  004B                     ?_memcpy:	
  7584                           ; 1 bytes @ 0x0
  7585                           
  7586  004B                     ?_LIN_getChecksum:	
  7587                           ; 1 bytes @ 0x0
  7588                           
  7589  004B                     ??_EUSART1_is_rx_ready:	
  7590                           ; 1 bytes @ 0x0
  7591                           
  7592  004B                     ??_EUSART1_Read:	
  7593                           ; 1 bytes @ 0x0
  7594                           
  7595  004B                     ?_LIN_getFromTable:	
  7596                           ; 1 bytes @ 0x0
  7597                           
  7598  004B                     ??_LIN_disableRx:	
  7599                           ; 1 bytes @ 0x0
  7600                           
  7601  004B                     ?_memset:	
  7602                           ; 1 bytes @ 0x0
  7603                           
  7604  004B                     ??_EUSART1_Write:	
  7605                           ; 1 bytes @ 0x0
  7606                           
  7607  004B                     ??_LIN_calcParity:	
  7608                           ; 1 bytes @ 0x0
  7609                           
  7610  004B                     ?_TMR0_WriteTimer:	
  7611                           ; 1 bytes @ 0x0
  7612                           
  7613  004B                     ?_TMR0_SetInterruptHandler:	
  7614                           ; 1 bytes @ 0x0
  7615                           
  7616  004B                     ??_EUSART1_get_last_status:	
  7617                           ; 1 bytes @ 0x0
  7618                           
  7619  004B                     ??_PMD_Initialize:	
  7620                           ; 1 bytes @ 0x0
  7621                           
  7622  004B                     ??_PIN_MANAGER_Initialize:	
  7623                           ; 1 bytes @ 0x0
  7624                           
  7625  004B                     ??_OSCILLATOR_Initialize:	
  7626                           ; 1 bytes @ 0x0
  7627                           
  7628  004B                     ??_FVR_Initialize:	
  7629                           ; 1 bytes @ 0x0
  7630                           
  7631  004B                     ??_TMR2_Initialize:	
  7632                           ; 1 bytes @ 0x0
  7633                           
  7634  004B                     ??_CLC1_Initialize:	
  7635                           ; 1 bytes @ 0x0
  7636                           
  7637  004B                     ??_ADC_Initialize:	
  7638                           ; 1 bytes @ 0x0
  7639                           
  7640  004B                     ??_CLC3_Initialize:	
  7641                           ; 1 bytes @ 0x0
  7642                           
  7643  004B                     ??_DAC1_Initialize:	
  7644                           ; 1 bytes @ 0x0
  7645                           
  7646  004B                     ??_TMR1_Initialize:	
  7647                           ; 1 bytes @ 0x0
  7648                           
  7649  004B                     ?_EUSART1_SetRxInterruptHandler:	
  7650                           ; 1 bytes @ 0x0
  7651                           
  7652  004B                     ?_EUSART1_SetTxInterruptHandler:	
  7653                           ; 1 bytes @ 0x0
  7654                           
  7655  004B                     ?_EUSART1_SetFramingErrorHandler:	
  7656                           ; 1 bytes @ 0x0
  7657                           
  7658  004B                     ?_EUSART1_SetOverrunErrorHandler:	
  7659                           ; 1 bytes @ 0x0
  7660                           
  7661  004B                     ?_EUSART1_SetErrorHandler:	
  7662                           ; 1 bytes @ 0x0
  7663                           
  7664  004B                     ??_Update_LIN_Data:	
  7665                           ; 1 bytes @ 0x0
  7666                           
  7667  004B                     ??_CLC4_Initialize:	
  7668                           ; 1 bytes @ 0x0
  7669                           
  7670  004B                     ??_CMP2_Initialize:	
  7671                           ; 1 bytes @ 0x0
  7672                           
  7673  004B                     ??_CLC2_Initialize:	
  7674                           ; 1 bytes @ 0x0
  7675                           
  7676  004B                     ??_TMR0_Reload:	
  7677                           ; 1 bytes @ 0x0
  7678                           
  7679  004B                     ??_TMR2_Start:	
  7680                           ; 1 bytes @ 0x0
  7681                           
  7682  004B                     ??_TMR2_Stop:	
  7683                           ; 1 bytes @ 0x0
  7684                           
  7685  004B                     ??_TMR1_StartTimer:	
  7686                           ; 1 bytes @ 0x0
  7687                           
  7688  004B                     ??_TMR1_StopTimer:	
  7689                           ; 1 bytes @ 0x0
  7690                           
  7691  004B                     ?_TMR1_WriteTimer:	
  7692                           ; 1 bytes @ 0x0
  7693                           
  7694  004B                     ?_GetAmbientTemperature:	
  7695                           ; 1 bytes @ 0x0
  7696                           
  7697  004B                     ?___lmul:	
  7698                           ; 2 bytes @ 0x0
  7699                           
  7700  004B                     ?___omul:	
  7701                           ; 4 bytes @ 0x0
  7702                           
  7703  004B                     LIN_getFromTable@param:	
  7704                           ; 8 bytes @ 0x0
  7705                           
  7706  004B                     LIN_getChecksum@pid:	
  7707                           ; 1 bytes @ 0x0
  7708                           
  7709  004B                     EUSART1_SetFramingErrorHandler@interruptHandler:	
  7710                           ; 1 bytes @ 0x0
  7711                           
  7712  004B                     EUSART1_SetOverrunErrorHandler@interruptHandler:	
  7713                           ; 2 bytes @ 0x0
  7714                           
  7715  004B                     EUSART1_SetErrorHandler@interruptHandler:	
  7716                           ; 2 bytes @ 0x0
  7717                           
  7718  004B                     EUSART1_SetTxInterruptHandler@interruptHandler:	
  7719                           ; 2 bytes @ 0x0
  7720                           
  7721  004B                     EUSART1_SetRxInterruptHandler@interruptHandler:	
  7722                           ; 2 bytes @ 0x0
  7723                           
  7724  004B                     TMR0_WriteTimer@timerVal:	
  7725                           ; 2 bytes @ 0x0
  7726                           
  7727  004B                     TMR0_SetInterruptHandler@InterruptHandler:	
  7728                           ; 2 bytes @ 0x0
  7729                           
  7730  004B                     TMR1_WriteTimer@timerVal:	
  7731                           ; 2 bytes @ 0x0
  7732                           
  7733  004B                     memcpy@s1:	
  7734                           ; 2 bytes @ 0x0
  7735                           
  7736  004B                     memset@c:	
  7737                           ; 2 bytes @ 0x0
  7738                           
  7739  004B                     ___lmul@multiplier:	
  7740                           ; 2 bytes @ 0x0
  7741                           
  7742  004B                     ___omul@multiplier:	
  7743                           ; 4 bytes @ 0x0
  7744                           
  7745                           
  7746                           ; 8 bytes @ 0x0
  7747  004B                     	ds	1
  7748  004C                     ??_LIN_getFromTable:
  7749  004C                     LIN_calcParity@CMD:	
  7750                           ; 1 bytes @ 0x1
  7751                           
  7752  004C                     LIN_getChecksum@data:	
  7753                           ; 1 bytes @ 0x1
  7754                           
  7755  004C                     EUSART1_Read@readValue:	
  7756                           ; 1 bytes @ 0x1
  7757                           
  7758  004C                     EUSART1_Write@txData:	
  7759                           ; 1 bytes @ 0x1
  7760                           
  7761                           
  7762                           ; 1 bytes @ 0x1
  7763  004C                     	ds	1
  7764  004D                     ?_LIN_init:
  7765  004D                     ??_CmdOutput:	
  7766                           ; 1 bytes @ 0x2
  7767                           
  7768  004D                     ??_LIN_setTimerHandler:	
  7769                           ; 1 bytes @ 0x2
  7770                           
  7771  004D                     ??_LIN_getChecksum:	
  7772                           ; 1 bytes @ 0x2
  7773                           
  7774  004D                     ??_LIN_startTimer:	
  7775                           ; 1 bytes @ 0x2
  7776                           
  7777  004D                     ??_LIN_breakCheck:	
  7778                           ; 1 bytes @ 0x2
  7779                           
  7780  004D                     ??_TMR0_WriteTimer:	
  7781                           ; 1 bytes @ 0x2
  7782                           
  7783  004D                     ??_TMR0_SetInterruptHandler:	
  7784                           ; 1 bytes @ 0x2
  7785                           
  7786  004D                     ??_TMR0_Initialize:	
  7787                           ; 1 bytes @ 0x2
  7788                           
  7789  004D                     ??_EUSART1_Initialize:	
  7790                           ; 1 bytes @ 0x2
  7791                           
  7792  004D                     ??_EUSART1_SetRxInterruptHandler:	
  7793                           ; 1 bytes @ 0x2
  7794                           
  7795  004D                     ??_EUSART1_SetTxInterruptHandler:	
  7796                           ; 1 bytes @ 0x2
  7797                           
  7798  004D                     ??_EUSART1_SetFramingErrorHandler:	
  7799                           ; 1 bytes @ 0x2
  7800                           
  7801  004D                     ??_EUSART1_SetOverrunErrorHandler:	
  7802                           ; 1 bytes @ 0x2
  7803                           
  7804  004D                     ??_EUSART1_SetErrorHandler:	
  7805                           ; 1 bytes @ 0x2
  7806                           
  7807  004D                     ??_GetAmbientTemperature:	
  7808                           ; 1 bytes @ 0x2
  7809                           
  7810  004D                     ??_TMR1_WriteTimer:	
  7811                           ; 1 bytes @ 0x2
  7812                           
  7813  004D                     LIN_calcParity@PID:	
  7814                           ; 1 bytes @ 0x2
  7815                           
  7816  004D                     LIN_init@command:	
  7817                           ; 1 bytes @ 0x2
  7818                           
  7819  004D                     memcpy@n:	
  7820                           ; 2 bytes @ 0x2
  7821                           
  7822  004D                     memset@n:	
  7823                           ; 2 bytes @ 0x2
  7824                           
  7825                           
  7826                           ; 2 bytes @ 0x2
  7827  004D                     	ds	1
  7828  004E                     LIN_getFromTable@cmd:
  7829  004E                     LIN_startTimer@timeout:	
  7830                           ; 1 bytes @ 0x3
  7831                           
  7832                           
  7833                           ; 1 bytes @ 0x3
  7834  004E                     	ds	1
  7835  004F                     ??_memcpy:
  7836  004F                     ??_memset:	
  7837                           ; 1 bytes @ 0x4
  7838                           
  7839  004F                     LIN_getFromTable@length:	
  7840                           ; 1 bytes @ 0x4
  7841                           
  7842  004F                     LIN_getChecksum@length:	
  7843                           ; 1 bytes @ 0x4
  7844                           
  7845  004F                     CmdOutput@enable:	
  7846                           ; 1 bytes @ 0x4
  7847                           
  7848  004F                     LIN_init@processData:	
  7849                           ; 1 bytes @ 0x4
  7850                           
  7851  004F                     ___lmul@multiplicand:	
  7852                           ; 2 bytes @ 0x4
  7853                           
  7854                           
  7855                           ; 4 bytes @ 0x4
  7856  004F                     	ds	1
  7857  0050                     ??_EFuseInit:
  7858  0050                     LIN_getChecksum@i:	
  7859                           ; 1 bytes @ 0x5
  7860                           
  7861  0050                     memcpy@tmp:	
  7862                           ; 1 bytes @ 0x5
  7863                           
  7864  0050                     LIN_getFromTable@rxCommand:	
  7865                           ; 1 bytes @ 0x5
  7866                           
  7867                           
  7868                           ; 2 bytes @ 0x5
  7869  0050                     	ds	1
  7870  0051                     ??_LIN_init:
  7871  0051                     LIN_getChecksum@checksum:	
  7872                           ; 1 bytes @ 0x6
  7873                           
  7874  0051                     GetAmbientTemperature@adcTemp:	
  7875                           ; 2 bytes @ 0x6
  7876                           
  7877  0051                     memcpy@s:	
  7878                           ; 2 bytes @ 0x6
  7879                           
  7880  0051                     memset@k:	
  7881                           ; 2 bytes @ 0x6
  7882                           
  7883                           
  7884                           ; 2 bytes @ 0x6
  7885  0051                     	ds	1
  7886  0052                     ??_LIN_checkPID:
  7887  0052                     LIN_init@tableLength:	
  7888                           ; 1 bytes @ 0x7
  7889                           
  7890  0052                     LIN_checkPID@pid:	
  7891                           ; 1 bytes @ 0x7
  7892                           
  7893                           
  7894                           ; 1 bytes @ 0x7
  7895  0052                     	ds	1
  7896  0053                     ?_LIN_sendPacket:
  7897  0053                     ??_LIN_Slave_Initialize:	
  7898                           ; 1 bytes @ 0x8
  7899                           
  7900  0053                     ??_SYSTEM_Initialize:	
  7901                           ; 1 bytes @ 0x8
  7902                           
  7903  0053                     ??___lmul:	
  7904                           ; 1 bytes @ 0x8
  7905                           
  7906  0053                     LIN_sendPacket@pid:	
  7907                           ; 1 bytes @ 0x8
  7908                           
  7909  0053                     GetAmbientTemperature@i:	
  7910                           ; 1 bytes @ 0x8
  7911                           
  7912  0053                     memcpy@d:	
  7913                           ; 1 bytes @ 0x8
  7914                           
  7915  0053                     memset@dest:	
  7916                           ; 1 bytes @ 0x8
  7917                           
  7918  0053                     ___lmul@product:	
  7919                           ; 1 bytes @ 0x8
  7920                           
  7921  0053                     ___omul@multiplicand:	
  7922                           ; 4 bytes @ 0x8
  7923                           
  7924                           
  7925                           ; 8 bytes @ 0x8
  7926  0053                     	ds	1
  7927  0054                     LIN_sendPacket@data:
  7928  0054                     memcpy@d1:	
  7929                           ; 1 bytes @ 0x9
  7930                           
  7931  0054                     memset@s:	
  7932                           ; 1 bytes @ 0x9
  7933                           
  7934  0054                     GetAmbientTemperature@temperature:	
  7935                           ; 1 bytes @ 0x9
  7936                           
  7937                           
  7938                           ; 2 bytes @ 0x9
  7939  0054                     	ds	1
  7940  0055                     ??_LIN_getPacket:
  7941  0055                     ??_LIN_sendPacket:	
  7942                           ; 1 bytes @ 0xA
  7943                           
  7944                           
  7945                           ; 1 bytes @ 0xA
  7946  0055                     	ds	1
  7947  0056                     LIN_getPacket@data:
  7948                           
  7949                           ; 1 bytes @ 0xB
  7950  0056                     	ds	1
  7951  0057                     ?___lldiv:
  7952  0057                     LIN_sendPacket@length:	
  7953                           ; 4 bytes @ 0xC
  7954                           
  7955  0057                     LIN_getPacket@cmd:	
  7956                           ; 1 bytes @ 0xC
  7957                           
  7958  0057                     ___lldiv@divisor:	
  7959                           ; 1 bytes @ 0xC
  7960                           
  7961                           
  7962                           ; 4 bytes @ 0xC
  7963  0057                     	ds	1
  7964  0058                     ??_processLIN:
  7965  0058                     LIN_sendPacket@i:	
  7966                           ; 1 bytes @ 0xD
  7967                           
  7968                           
  7969                           ; 1 bytes @ 0xD
  7970  0058                     	ds	1
  7971  0059                     ??_LIN_queuePacket:
  7972                           
  7973                           ; 1 bytes @ 0xE
  7974  0059                     	ds	2
  7975  005B                     ??___omul:
  7976  005B                     ___lldiv@dividend:	
  7977                           ; 1 bytes @ 0x10
  7978                           
  7979                           
  7980                           ; 4 bytes @ 0x10
  7981  005B                     	ds	1
  7982  005C                     LIN_queuePacket@cmd:
  7983  005C                     ___omul@product:	
  7984                           ; 1 bytes @ 0x11
  7985                           
  7986                           
  7987                           ; 8 bytes @ 0x11
  7988  005C                     	ds	1
  7989  005D                     processLIN@cmd:
  7990  005D                     LIN_queuePacket@i:	
  7991                           ; 1 bytes @ 0x12
  7992                           
  7993                           
  7994                           ; 1 bytes @ 0x12
  7995  005D                     	ds	1
  7996  005E                     LIN_queuePacket@tempSchedule:
  7997  005E                     processLIN@tempRxData:	
  7998                           ; 2 bytes @ 0x13
  7999                           
  8000                           
  8001                           ; 8 bytes @ 0x13
  8002  005E                     	ds	1
  8003  005F                     ??___lldiv:
  8004                           
  8005                           ; 1 bytes @ 0x14
  8006  005F                     	ds	1
  8007  0060                     ___lldiv@quotient:
  8008                           
  8009                           ; 4 bytes @ 0x15
  8010  0060                     	ds	4
  8011  0064                     ___lldiv@counter:
  8012                           
  8013                           ; 1 bytes @ 0x19
  8014  0064                     	ds	2
  8015                           
  8016                           	psect	maintext
  8017  0AFD                     __pmaintext:	
  8018 ;;
  8019 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  8020 ;;
  8021 ;; *************** function _main *****************
  8022 ;; Defined at:
  8023 ;;		line 55 in file "main.c"
  8024 ;; Parameters:    Size  Location     Type
  8025 ;;		None
  8026 ;; Auto vars:     Size  Location     Type
  8027 ;;		None
  8028 ;; Return value:  Size  Location     Type
  8029 ;;                  1    wreg      void 
  8030 ;; Registers used:
  8031 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8032 ;; Tracked objects:
  8033 ;;		On entry : B3F/0
  8034 ;;		On exit  : 3C/0
  8035 ;;		Unchanged: 0/0
  8036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8039 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  8040 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  8041 ;;Total ram usage:        2 bytes
  8042 ;; Hardware stack levels required when called: 10
  8043 ;; This function calls:
  8044 ;;		_CmdOutput
  8045 ;;		_EFuse
  8046 ;;		_EFuseInit
  8047 ;;		_LIN_handler
  8048 ;;		_SYSTEM_Initialize
  8049 ;; This function is called by:
  8050 ;;		Startup code after reset
  8051 ;; This function uses a non-reentrant model
  8052 ;;
  8053                           
  8054                           
  8055                           ;psect for function _main
  8056  0AFD                     _main:
  8057                           
  8058                           ;main.c: 57:     SYSTEM_Initialize();
  8059                           
  8060                           ;incstack = 0
  8061                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8062  0AFD  318B  23B7  318A   	fcall	_SYSTEM_Initialize
  8063                           
  8064                           ;main.c: 59:     EFuseInit();
  8065  0B00  318A  223D  318A   	fcall	_EFuseInit
  8066  0B03  1719               	bsf	25,6	;volatile
  8067                           
  8068                           ;main.c: 61:     _delay((unsigned long)((1000)*(32000000/4000.0)));
  8069  0B04  3029               	movlw	41
  8070  0B05  0142               	movlb	2	; select bank2
  8071  0B06  00DB               	movwf	(??_main^(0+256)+1)
  8072  0B07  3096               	movlw	150
  8073  0B08  00DA               	movwf	??_main^(0+256)
  8074  0B09  307F               	movlw	127
  8075  0B0A                     u3417:
  8076  0B0A  0B89               	decfsz	9,f
  8077  0B0B  2B0A               	goto	u3417
  8078  0B0C  0BDA               	decfsz	??_main^(0+256),f
  8079  0B0D  2B0A               	goto	u3417
  8080  0B0E  0BDB               	decfsz	(??_main^(0+256)+1),f
  8081  0B0F  2B0A               	goto	u3417
  8082                           
  8083                           ;main.c: 63:     (INTCONbits.GIE = 1);
  8084  0B10  178B               	bsf	11,7	;volatile
  8085                           
  8086                           ;main.c: 64:     (INTCONbits.PEIE = 1);
  8087  0B11  170B               	bsf	11,6	;volatile
  8088                           
  8089                           ;main.c: 66:     _delay((unsigned long)((1000)*(32000000/4000.0)));
  8090  0B12  3029               	movlw	41
  8091  0B13  0142               	movlb	2	; select bank2
  8092  0B14  00DB               	movwf	(??_main^(0+256)+1)
  8093  0B15  3096               	movlw	150
  8094  0B16  00DA               	movwf	??_main^(0+256)
  8095  0B17  307F               	movlw	127
  8096  0B18                     u3427:
  8097  0B18  0B89               	decfsz	9,f
  8098  0B19  2B18               	goto	u3427
  8099  0B1A  0BDA               	decfsz	??_main^(0+256),f
  8100  0B1B  2B18               	goto	u3427
  8101  0B1C  0BDB               	decfsz	(??_main^(0+256)+1),f
  8102  0B1D  2B18               	goto	u3427
  8103                           
  8104                           ;main.c: 67:     CmdOutput(OUTPUT_ON);
  8105  0B1E  3001               	movlw	1
  8106  0B1F  318D  25A2  318A   	fcall	_CmdOutput
  8107  0B22                     l5430:
  8108                           
  8109                           ;main.c: 70:     {;main.c: 71:         LIN_handler();
  8110  0B22  3183  239E  318A   	fcall	_LIN_handler
  8111                           
  8112                           ;main.c: 72:         EFuse();
  8113  0B25  318F  276F  318A   	fcall	_EFuse
  8114  0B28  2B22               	goto	l5430
  8115  0B29                     __end_of_main:
  8116                           
  8117                           	psect	text1
  8118  0BB7                     __ptext1:	
  8119 ;; *************** function _SYSTEM_Initialize *****************
  8120 ;; Defined at:
  8121 ;;		line 50 in file "mcc_generated_files/mcc.c"
  8122 ;; Parameters:    Size  Location     Type
  8123 ;;		None
  8124 ;; Auto vars:     Size  Location     Type
  8125 ;;		None
  8126 ;; Return value:  Size  Location     Type
  8127 ;;                  1    wreg      void 
  8128 ;; Registers used:
  8129 ;;		wreg, status,2, status,0, pclath, cstack
  8130 ;; Tracked objects:
  8131 ;;		On entry : B3F/0
  8132 ;;		On exit  : 3F/2
  8133 ;;		Unchanged: 0/0
  8134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8138 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8139 ;;Total ram usage:        0 bytes
  8140 ;; Hardware stack levels used: 1
  8141 ;; Hardware stack levels required when called: 9
  8142 ;; This function calls:
  8143 ;;		_ADC_Initialize
  8144 ;;		_CLC1_Initialize
  8145 ;;		_CLC2_Initialize
  8146 ;;		_CLC3_Initialize
  8147 ;;		_CLC4_Initialize
  8148 ;;		_CMP2_Initialize
  8149 ;;		_DAC1_Initialize
  8150 ;;		_EUSART1_Initialize
  8151 ;;		_FVR_Initialize
  8152 ;;		_LIN_Slave_Initialize
  8153 ;;		_OSCILLATOR_Initialize
  8154 ;;		_PIN_MANAGER_Initialize
  8155 ;;		_PMD_Initialize
  8156 ;;		_TMR0_Initialize
  8157 ;;		_TMR1_Initialize
  8158 ;;		_TMR2_Initialize
  8159 ;; This function is called by:
  8160 ;;		_main
  8161 ;; This function uses a non-reentrant model
  8162 ;;
  8163                           
  8164                           
  8165                           ;psect for function _SYSTEM_Initialize
  8166  0BB7                     _SYSTEM_Initialize:
  8167                           
  8168                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
  8169                           
  8170                           ;incstack = 0
  8171                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8172  0BB7  3188  205D  318B   	fcall	_PMD_Initialize
  8173                           
  8174                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  8175  0BBA  318B  2358  318B   	fcall	_PIN_MANAGER_Initialize
  8176                           
  8177                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  8178  0BBD  3188  2080  318B   	fcall	_OSCILLATOR_Initialize
  8179                           
  8180                           ;mcc_generated_files/mcc.c: 55:     CMP2_Initialize();
  8181  0BC0  3188  2076  318B   	fcall	_CMP2_Initialize
  8182                           
  8183                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
  8184  0BC3  3197  27E2  318B   	fcall	_FVR_Initialize
  8185                           
  8186                           ;mcc_generated_files/mcc.c: 57:     CLC2_Initialize();
  8187  0BC6  3189  2137  318B   	fcall	_CLC2_Initialize
  8188                           
  8189                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
  8190  0BC9  3188  20C8  318B   	fcall	_TMR2_Initialize
  8191                           
  8192                           ;mcc_generated_files/mcc.c: 59:     TMR0_Initialize();
  8193  0BCC  3187  27E3  318B   	fcall	_TMR0_Initialize
  8194                           
  8195                           ;mcc_generated_files/mcc.c: 60:     CLC1_Initialize();
  8196  0BCF  3189  2123  318B   	fcall	_CLC1_Initialize
  8197                           
  8198                           ;mcc_generated_files/mcc.c: 61:     CLC4_Initialize();
  8199  0BD2  3189  2103  318B   	fcall	_CLC4_Initialize
  8200                           
  8201                           ;mcc_generated_files/mcc.c: 62:     ADC_Initialize();
  8202  0BD5  3188  201D  318B   	fcall	_ADC_Initialize
  8203                           
  8204                           ;mcc_generated_files/mcc.c: 63:     CLC3_Initialize();
  8205  0BD8  3189  2112  318B   	fcall	_CLC3_Initialize
  8206                           
  8207                           ;mcc_generated_files/mcc.c: 64:     DAC1_Initialize();
  8208  0BDB  3197  27FA  318B   	fcall	_DAC1_Initialize
  8209                           
  8210                           ;mcc_generated_files/mcc.c: 65:     TMR1_Initialize();
  8211  0BDE  3189  21AB  318B   	fcall	_TMR1_Initialize
  8212                           
  8213                           ;mcc_generated_files/mcc.c: 66:     EUSART1_Initialize();
  8214  0BE1  318C  241A  318B   	fcall	_EUSART1_Initialize
  8215                           
  8216                           ;mcc_generated_files/mcc.c: 67:     LIN_Slave_Initialize();
  8217  0BE4  3188  20AD         	fcall	_LIN_Slave_Initialize
  8218  0BE6  0008               	return
  8219  0BE7                     __end_of_SYSTEM_Initialize:
  8220                           
  8221                           	psect	text2
  8222  09AB                     __ptext2:	
  8223 ;; *************** function _TMR1_Initialize *****************
  8224 ;; Defined at:
  8225 ;;		line 63 in file "mcc_generated_files/tmr1.c"
  8226 ;; Parameters:    Size  Location     Type
  8227 ;;		None
  8228 ;; Auto vars:     Size  Location     Type
  8229 ;;		None
  8230 ;; Return value:  Size  Location     Type
  8231 ;;                  1    wreg      void 
  8232 ;; Registers used:
  8233 ;;		wreg
  8234 ;; Tracked objects:
  8235 ;;		On entry : 3F/12
  8236 ;;		On exit  : 3F/4
  8237 ;;		Unchanged: 0/0
  8238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8242 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8243 ;;Total ram usage:        0 bytes
  8244 ;; Hardware stack levels used: 1
  8245 ;; Hardware stack levels required when called: 5
  8246 ;; This function calls:
  8247 ;;		Nothing
  8248 ;; This function is called by:
  8249 ;;		_SYSTEM_Initialize
  8250 ;; This function uses a non-reentrant model
  8251 ;;
  8252                           
  8253                           
  8254                           ;psect for function _TMR1_Initialize
  8255  09AB                     _TMR1_Initialize:
  8256                           
  8257                           ;mcc_generated_files/tmr1.c: 68:     T1GCON = 0x80;
  8258                           
  8259                           ;incstack = 0
  8260                           ; Regs used in _TMR1_Initialize: [wreg]
  8261  09AB  3080               	movlw	128
  8262  09AC  0144               	movlb	4	; select bank4
  8263  09AD  008F               	movwf	15	;volatile
  8264                           
  8265                           ;mcc_generated_files/tmr1.c: 71:     T1GATE = 0x0D;
  8266  09AE  300D               	movlw	13
  8267  09AF  0090               	movwf	16	;volatile
  8268                           
  8269                           ;mcc_generated_files/tmr1.c: 74:     T1CLK = 0x03;
  8270  09B0  3003               	movlw	3
  8271  09B1  0091               	movwf	17	;volatile
  8272                           
  8273                           ;mcc_generated_files/tmr1.c: 77:     TMR1H = 0xFF;
  8274  09B2  30FF               	movlw	255
  8275  09B3  008D               	movwf	13	;volatile
  8276                           
  8277                           ;mcc_generated_files/tmr1.c: 80:     TMR1L = 0xD8;
  8278  09B4  30D8               	movlw	216
  8279  09B5  008C               	movwf	12	;volatile
  8280                           
  8281                           ;mcc_generated_files/tmr1.c: 83:     PIR4bits.TMR1IF = 0;
  8282  09B6  014E               	movlb	14	; select bank14
  8283  09B7  1010               	bcf	16,0	;volatile
  8284                           
  8285                           ;mcc_generated_files/tmr1.c: 86:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  8286  09B8  0144               	movlb	4	; select bank4
  8287  09B9  080D               	movf	13,w	;volatile
  8288  09BA  0142               	movlb	2	; select bank2
  8289  09BB  00DD               	movwf	(_timer1ReloadVal+1)^(0+256)	;volatile
  8290  09BC  0144               	movlb	4	; select bank4
  8291  09BD  080C               	movf	12,w	;volatile
  8292  09BE  0142               	movlb	2	; select bank2
  8293  09BF  00DC               	movwf	_timer1ReloadVal^(0+256)	;volatile
  8294                           
  8295                           ;mcc_generated_files/tmr1.c: 89:     T1CON = 0x35;
  8296  09C0  3035               	movlw	53
  8297  09C1  0144               	movlb	4	; select bank4
  8298  09C2  008E               	movwf	14	;volatile
  8299  09C3  0008               	return
  8300  09C4                     __end_of_TMR1_Initialize:
  8301                           
  8302                           	psect	text3
  8303  07E3                     __ptext3:	
  8304 ;; *************** function _TMR0_Initialize *****************
  8305 ;; Defined at:
  8306 ;;		line 68 in file "mcc_generated_files/tmr0.c"
  8307 ;; Parameters:    Size  Location     Type
  8308 ;;		None
  8309 ;; Auto vars:     Size  Location     Type
  8310 ;;		None
  8311 ;; Return value:  Size  Location     Type
  8312 ;;                  1    wreg      void 
  8313 ;; Registers used:
  8314 ;;		wreg, status,2, status,0, pclath, cstack
  8315 ;; Tracked objects:
  8316 ;;		On entry : 3F/5
  8317 ;;		On exit  : 3F/B
  8318 ;;		Unchanged: 0/0
  8319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8324 ;;Total ram usage:        0 bytes
  8325 ;; Hardware stack levels used: 1
  8326 ;; Hardware stack levels required when called: 6
  8327 ;; This function calls:
  8328 ;;		_TMR0_SetInterruptHandler
  8329 ;; This function is called by:
  8330 ;;		_SYSTEM_Initialize
  8331 ;; This function uses a non-reentrant model
  8332 ;;
  8333                           
  8334                           
  8335                           ;psect for function _TMR0_Initialize
  8336  07E3                     _TMR0_Initialize:
  8337                           
  8338                           ;mcc_generated_files/tmr0.c: 73:     T0CON1 = 0x56;
  8339                           
  8340                           ;incstack = 0
  8341                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8342  07E3  3056               	movlw	86
  8343  07E4  014B               	movlb	11	; select bank11
  8344  07E5  009F               	movwf	31	;volatile
  8345                           
  8346                           ;mcc_generated_files/tmr0.c: 76:     TMR0H = 0xFF;
  8347  07E6  30FF               	movlw	255
  8348  07E7  009D               	movwf	29	;volatile
  8349                           
  8350                           ;mcc_generated_files/tmr0.c: 79:     TMR0L = 0x83;
  8351  07E8  3083               	movlw	131
  8352  07E9  009C               	movwf	28	;volatile
  8353                           
  8354                           ;mcc_generated_files/tmr0.c: 82:     timer0ReloadVal16bit = (uint16_t) (TMR0H << 8) | TM
      +                          R0L;
  8355  07EA  081D               	movf	29,w	;volatile
  8356  07EB  0140               	movlb	0	; select bank0
  8357  07EC  00EF               	movwf	_timer0ReloadVal16bit+1	;volatile
  8358  07ED  014B               	movlb	11	; select bank11
  8359  07EE  081C               	movf	28,w	;volatile
  8360  07EF  0140               	movlb	0	; select bank0
  8361  07F0  00EE               	movwf	_timer0ReloadVal16bit	;volatile
  8362                           
  8363                           ;mcc_generated_files/tmr0.c: 85:     PIR0bits.TMR0IF = 0;
  8364  07F1  014E               	movlb	14	; select bank14
  8365  07F2  128C               	bcf	12,5	;volatile
  8366                           
  8367                           ;mcc_generated_files/tmr0.c: 88:     PIE0bits.TMR0IE = 1;
  8368  07F3  1696               	bsf	22,5	;volatile
  8369                           
  8370                           ;mcc_generated_files/tmr0.c: 91:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  8371  07F4  30FF               	movlw	low _TMR0_DefaultInterruptHandler
  8372  07F5  0140               	movlb	0	; select bank0
  8373  07F6  00CB               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  8374  07F7  3007               	movlw	high _TMR0_DefaultInterruptHandler
  8375  07F8  00CC               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  8376  07F9  3188  204D         	fcall	_TMR0_SetInterruptHandler
  8377                           
  8378                           ;mcc_generated_files/tmr0.c: 94:     T0CON0 = 0x90;
  8379  07FB  3090               	movlw	144
  8380  07FC  014B               	movlb	11	; select bank11
  8381  07FD  009E               	movwf	30	;volatile
  8382  07FE  0008               	return
  8383  07FF                     __end_of_TMR0_Initialize:
  8384                           
  8385                           	psect	text4
  8386  085D                     __ptext4:	
  8387 ;; *************** function _PMD_Initialize *****************
  8388 ;; Defined at:
  8389 ;;		line 86 in file "mcc_generated_files/mcc.c"
  8390 ;; Parameters:    Size  Location     Type
  8391 ;;		None
  8392 ;; Auto vars:     Size  Location     Type
  8393 ;;		None
  8394 ;; Return value:  Size  Location     Type
  8395 ;;                  1    wreg      void 
  8396 ;; Registers used:
  8397 ;;		status,2
  8398 ;; Tracked objects:
  8399 ;;		On entry : B3F/0
  8400 ;;		On exit  : B3F/F
  8401 ;;		Unchanged: B00/0
  8402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8406 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8407 ;;Total ram usage:        0 bytes
  8408 ;; Hardware stack levels used: 1
  8409 ;; Hardware stack levels required when called: 5
  8410 ;; This function calls:
  8411 ;;		Nothing
  8412 ;; This function is called by:
  8413 ;;		_SYSTEM_Initialize
  8414 ;; This function uses a non-reentrant model
  8415 ;;
  8416                           
  8417                           
  8418                           ;psect for function _PMD_Initialize
  8419  085D                     _PMD_Initialize:
  8420                           
  8421                           ;mcc_generated_files/mcc.c: 89:     PMD0 = 0x00;
  8422                           
  8423                           ;incstack = 0
  8424                           ; Regs used in _PMD_Initialize: [status,2]
  8425  085D  014F               	movlb	15	; select bank15
  8426  085E  0196               	clrf	22	;volatile
  8427                           
  8428                           ;mcc_generated_files/mcc.c: 91:     PMD1 = 0x00;
  8429  085F  0197               	clrf	23	;volatile
  8430                           
  8431                           ;mcc_generated_files/mcc.c: 93:     PMD2 = 0x00;
  8432  0860  0198               	clrf	24	;volatile
  8433                           
  8434                           ;mcc_generated_files/mcc.c: 95:     PMD3 = 0x00;
  8435  0861  0199               	clrf	25	;volatile
  8436                           
  8437                           ;mcc_generated_files/mcc.c: 97:     PMD4 = 0x00;
  8438  0862  019A               	clrf	26	;volatile
  8439                           
  8440                           ;mcc_generated_files/mcc.c: 99:     PMD5 = 0x00;
  8441  0863  019B               	clrf	27	;volatile
  8442  0864  0008               	return
  8443  0865                     __end_of_PMD_Initialize:
  8444                           
  8445                           	psect	text5
  8446  0B58                     __ptext5:	
  8447 ;; *************** function _PIN_MANAGER_Initialize *****************
  8448 ;; Defined at:
  8449 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  8450 ;; Parameters:    Size  Location     Type
  8451 ;;		None
  8452 ;; Auto vars:     Size  Location     Type
  8453 ;;		None
  8454 ;; Return value:  Size  Location     Type
  8455 ;;                  1    wreg      void 
  8456 ;; Registers used:
  8457 ;;		wreg, status,2
  8458 ;; Tracked objects:
  8459 ;;		On entry : B3F/F
  8460 ;;		On exit  : B3F/3D
  8461 ;;		Unchanged: B00/0
  8462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8466 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8467 ;;Total ram usage:        0 bytes
  8468 ;; Hardware stack levels used: 1
  8469 ;; Hardware stack levels required when called: 5
  8470 ;; This function calls:
  8471 ;;		Nothing
  8472 ;; This function is called by:
  8473 ;;		_SYSTEM_Initialize
  8474 ;; This function uses a non-reentrant model
  8475 ;;
  8476                           
  8477                           
  8478                           ;psect for function _PIN_MANAGER_Initialize
  8479  0B58                     _PIN_MANAGER_Initialize:
  8480                           
  8481                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  8482                           
  8483                           ;incstack = 0
  8484                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  8485  0B58  0140               	movlb	0	; select bank0
  8486  0B59  0198               	clrf	24	;volatile
  8487                           
  8488                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  8489  0B5A  0199               	clrf	25	;volatile
  8490                           
  8491                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  8492  0B5B  019A               	clrf	26	;volatile
  8493                           
  8494                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x37;
  8495  0B5C  3037               	movlw	55
  8496  0B5D  0092               	movwf	18	;volatile
  8497                           
  8498                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0x30;
  8499  0B5E  3030               	movlw	48
  8500  0B5F  0093               	movwf	19	;volatile
  8501                           
  8502                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xBF;
  8503  0B60  30BF               	movlw	191
  8504  0B61  0094               	movwf	20	;volatile
  8505                           
  8506                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x1F;
  8507  0B62  301F               	movlw	31
  8508  0B63  017E               	movlb	62	; select bank62
  8509  0B64  00CE               	movwf	78	;volatile
  8510                           
  8511                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x10;
  8512  0B65  3010               	movlw	16
  8513  0B66  00C3               	movwf	67	;volatile
  8514                           
  8515                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x07;
  8516  0B67  3007               	movlw	7
  8517  0B68  00B8               	movwf	56	;volatile
  8518                           
  8519                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  8520  0B69  01C4               	clrf	68	;volatile
  8521                           
  8522                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
  8523  0B6A  01B9               	clrf	57	;volatile
  8524                           
  8525                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x00;
  8526  0B6B  01CF               	clrf	79	;volatile
  8527                           
  8528                           ;mcc_generated_files/pin_manager.c: 88:     ODCONA = 0x00;
  8529  0B6C  01BA               	clrf	58	;volatile
  8530                           
  8531                           ;mcc_generated_files/pin_manager.c: 89:     ODCONB = 0x00;
  8532  0B6D  01C5               	clrf	69	;volatile
  8533                           
  8534                           ;mcc_generated_files/pin_manager.c: 90:     ODCONC = 0x00;
  8535  0B6E  01D0               	clrf	80	;volatile
  8536                           
  8537                           ;mcc_generated_files/pin_manager.c: 95:     SLRCONA = 0x1F;
  8538  0B6F  301F               	movlw	31
  8539  0B70  00BB               	movwf	59	;volatile
  8540                           
  8541                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONB = 0x00;
  8542  0B71  01C6               	clrf	70	;volatile
  8543                           
  8544                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONC = 0x3F;
  8545  0B72  303F               	movlw	63
  8546  0B73  00D1               	movwf	81	;volatile
  8547                           
  8548                           ;mcc_generated_files/pin_manager.c: 102:     INLVLA = 0x3F;
  8549  0B74  303F               	movlw	63
  8550  0B75  00BC               	movwf	60	;volatile
  8551                           
  8552                           ;mcc_generated_files/pin_manager.c: 103:     INLVLB = 0x00;
  8553  0B76  01C7               	clrf	71	;volatile
  8554                           
  8555                           ;mcc_generated_files/pin_manager.c: 104:     INLVLC = 0x3F;
  8556  0B77  303F               	movlw	63
  8557  0B78  00D2               	movwf	82	;volatile
  8558                           
  8559                           ;mcc_generated_files/pin_manager.c: 113:     CLCIN0PPS = 0x17;
  8560  0B79  3017               	movlw	23
  8561  0B7A  017D               	movlb	61	; select bank61
  8562  0B7B  00BB               	movwf	59	;volatile
  8563                           
  8564                           ;mcc_generated_files/pin_manager.c: 114:     RB7PPS = 0x0F;
  8565  0B7C  300F               	movlw	15
  8566  0B7D  017E               	movlb	62	; select bank62
  8567  0B7E  009F               	movwf	31	;volatile
  8568                           
  8569                           ;mcc_generated_files/pin_manager.c: 115:     RC6PPS = 0x02;
  8570  0B7F  3002               	movlw	2
  8571  0B80  00A6               	movwf	38	;volatile
  8572                           
  8573                           ;mcc_generated_files/pin_manager.c: 116:     RC7PPS = 0x01;
  8574  0B81  3001               	movlw	1
  8575  0B82  00A7               	movwf	39	;volatile
  8576                           
  8577                           ;mcc_generated_files/pin_manager.c: 117:     RX1DTPPS = 0x0D;
  8578  0B83  300D               	movlw	13
  8579  0B84  017D               	movlb	61	; select bank61
  8580  0B85  00CB               	movwf	75	;volatile
  8581  0B86  0008               	return
  8582  0B87                     __end_of_PIN_MANAGER_Initialize:
  8583                           
  8584                           	psect	text6
  8585  0880                     __ptext6:	
  8586 ;; *************** function _OSCILLATOR_Initialize *****************
  8587 ;; Defined at:
  8588 ;;		line 70 in file "mcc_generated_files/mcc.c"
  8589 ;; Parameters:    Size  Location     Type
  8590 ;;		None
  8591 ;; Auto vars:     Size  Location     Type
  8592 ;;		None
  8593 ;; Return value:  Size  Location     Type
  8594 ;;                  1    wreg      void 
  8595 ;; Registers used:
  8596 ;;		wreg, status,2
  8597 ;; Tracked objects:
  8598 ;;		On entry : B3F/3D
  8599 ;;		On exit  : B3F/11
  8600 ;;		Unchanged: B00/0
  8601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8606 ;;Total ram usage:        0 bytes
  8607 ;; Hardware stack levels used: 1
  8608 ;; Hardware stack levels required when called: 5
  8609 ;; This function calls:
  8610 ;;		Nothing
  8611 ;; This function is called by:
  8612 ;;		_SYSTEM_Initialize
  8613 ;; This function uses a non-reentrant model
  8614 ;;
  8615                           
  8616                           
  8617                           ;psect for function _OSCILLATOR_Initialize
  8618  0880                     _OSCILLATOR_Initialize:
  8619                           
  8620                           ;mcc_generated_files/mcc.c: 73:     OSCCON1 = 0x60;
  8621                           
  8622                           ;incstack = 0
  8623                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  8624  0880  3060               	movlw	96
  8625  0881  0151               	movlb	17	; select bank17
  8626  0882  008D               	movwf	13	;volatile
  8627                           
  8628                           ;mcc_generated_files/mcc.c: 75:     OSCCON3 = 0x00;
  8629  0883  018F               	clrf	15	;volatile
  8630                           
  8631                           ;mcc_generated_files/mcc.c: 77:     OSCEN = 0x00;
  8632  0884  0191               	clrf	17	;volatile
  8633                           
  8634                           ;mcc_generated_files/mcc.c: 79:     OSCFRQ = 0x06;
  8635  0885  3006               	movlw	6
  8636  0886  0093               	movwf	19	;volatile
  8637                           
  8638                           ;mcc_generated_files/mcc.c: 81:     OSCSTAT = 0x00;
  8639  0887  0190               	clrf	16	;volatile
  8640                           
  8641                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
  8642  0888  0192               	clrf	18	;volatile
  8643  0889  0008               	return
  8644  088A                     __end_of_OSCILLATOR_Initialize:
  8645                           
  8646                           	psect	text7
  8647  08AD                     __ptext7:	
  8648 ;; *************** function _LIN_Slave_Initialize *****************
  8649 ;; Defined at:
  8650 ;;		line 45 in file "mcc_generated_files/LINDrivers/lin_app.c"
  8651 ;; Parameters:    Size  Location     Type
  8652 ;;		None
  8653 ;; Auto vars:     Size  Location     Type
  8654 ;;		None
  8655 ;; Return value:  Size  Location     Type
  8656 ;;                  1    wreg      void 
  8657 ;; Registers used:
  8658 ;;		wreg, status,2, status,0, pclath, cstack
  8659 ;; Tracked objects:
  8660 ;;		On entry : 3F/E
  8661 ;;		On exit  : 3F/2
  8662 ;;		Unchanged: 0/0
  8663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8667 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8668 ;;Total ram usage:        0 bytes
  8669 ;; Hardware stack levels used: 1
  8670 ;; Hardware stack levels required when called: 8
  8671 ;; This function calls:
  8672 ;;		_LIN_init
  8673 ;; This function is called by:
  8674 ;;		_SYSTEM_Initialize
  8675 ;; This function uses a non-reentrant model
  8676 ;;
  8677                           
  8678                           
  8679                           ;psect for function _LIN_Slave_Initialize
  8680  08AD                     _LIN_Slave_Initialize:
  8681                           
  8682                           ;mcc_generated_files/LINDrivers/lin_app.c: 47:     LIN_init((sizeof(scheduleTable)/sizeo
      +                          f(lin_rx_cmd_t)), scheduleTable, processLIN);
  8683                           
  8684                           ;incstack = 0
  8685                           ; Regs used in _LIN_Slave_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8686  08AD  3000               	movlw	low (_scheduleTable| (0+32768))
  8687  08AE  0140               	movlb	0	; select bank0
  8688  08AF  00CD               	movwf	LIN_init@command
  8689  08B0  3090               	movlw	high (_scheduleTable| (0+32768))
  8690  08B1  00CE               	movwf	LIN_init@command+1
  8691  08B2  30E0               	movlw	low _processLIN
  8692  08B3  00CF               	movwf	LIN_init@processData
  8693  08B4  3004               	movlw	high _processLIN
  8694  08B5  00D0               	movwf	LIN_init@processData+1
  8695  08B6  301C               	movlw	28
  8696  08B7  3189  21FD         	fcall	_LIN_init
  8697  08B9  0008               	return
  8698  08BA                     __end_of_LIN_Slave_Initialize:
  8699                           
  8700                           	psect	text8
  8701  09FD                     __ptext8:	
  8702 ;; *************** function _LIN_init *****************
  8703 ;; Defined at:
  8704 ;;		line 57 in file "mcc_generated_files/LINDrivers/lin_slave.c"
  8705 ;; Parameters:    Size  Location     Type
  8706 ;;  tableLength     1    wreg     unsigned char 
  8707 ;;  command         2    2[BANK0 ] const PTR const struct .
  8708 ;;		 -> scheduleTable(140), 
  8709 ;;  processData     2    4[BANK0 ] PTR FTN()void 
  8710 ;;		 -> processLIN(1), 
  8711 ;; Auto vars:     Size  Location     Type
  8712 ;;  tableLength     1    7[BANK0 ] unsigned char 
  8713 ;; Return value:  Size  Location     Type
  8714 ;;                  1    wreg      void 
  8715 ;; Registers used:
  8716 ;;		wreg, status,2, status,0, pclath, cstack
  8717 ;; Tracked objects:
  8718 ;;		On entry : 3F/0
  8719 ;;		On exit  : 3F/2
  8720 ;;		Unchanged: 0/0
  8721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8722 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8723 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8724 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8725 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8726 ;;Total ram usage:        6 bytes
  8727 ;; Hardware stack levels used: 1
  8728 ;; Hardware stack levels required when called: 7
  8729 ;; This function calls:
  8730 ;;		_LIN_enableRx
  8731 ;;		_LIN_setTimerHandler
  8732 ;;		_LIN_stopTimer
  8733 ;; This function is called by:
  8734 ;;		_LIN_Slave_Initialize
  8735 ;; This function uses a non-reentrant model
  8736 ;;
  8737                           
  8738                           
  8739                           ;psect for function _LIN_init
  8740  09FD                     _LIN_init:
  8741                           
  8742                           ;incstack = 0
  8743                           ; Regs used in _LIN_init: [wreg+status,2+status,0+pclath+cstack]
  8744                           ;LIN_init@tableLength stored from wreg
  8745  09FD  00D2               	movwf	LIN_init@tableLength
  8746                           
  8747                           ;mcc_generated_files/LINDrivers/lin_slave.c: 58:     LIN_rxCommand = command;
  8748  09FE  084E               	movf	LIN_init@command+1,w
  8749  09FF  0141               	movlb	1	; select bank1
  8750  0A00  00EC               	movwf	(_LIN_rxCommand+1)^(0+128)
  8751  0A01  0140               	movlb	0	; select bank0
  8752  0A02  084D               	movf	LIN_init@command,w
  8753  0A03  0141               	movlb	1	; select bank1
  8754  0A04  00EB               	movwf	_LIN_rxCommand^(0+128)
  8755                           
  8756                           ;mcc_generated_files/LINDrivers/lin_slave.c: 59:     LIN_rxCommandLength = tableLength;
  8757  0A05  0140               	movlb	0	; select bank0
  8758  0A06  0852               	movf	LIN_init@tableLength,w
  8759  0A07  00D1               	movwf	??_LIN_init
  8760  0A08  0851               	movf	??_LIN_init,w
  8761  0A09  0141               	movlb	1	; select bank1
  8762  0A0A  00EE               	movwf	_LIN_rxCommandLength^(0+128)
  8763                           
  8764                           ;mcc_generated_files/LINDrivers/lin_slave.c: 60:     LIN_processData = processData;
  8765  0A0B  0140               	movlb	0	; select bank0
  8766  0A0C  0850               	movf	LIN_init@processData+1,w
  8767  0A0D  0142               	movlb	2	; select bank2
  8768  0A0E  00EB               	movwf	(_LIN_processData+1)^(0+256)
  8769  0A0F  0140               	movlb	0	; select bank0
  8770  0A10  084F               	movf	LIN_init@processData,w
  8771  0A11  0142               	movlb	2	; select bank2
  8772  0A12  00EA               	movwf	_LIN_processData^(0+256)
  8773                           
  8774                           ;mcc_generated_files/LINDrivers/lin_slave.c: 61:     LIN_stopTimer();
  8775  0A13  3197  27F5  3189   	fcall	_LIN_stopTimer
  8776                           
  8777                           ;mcc_generated_files/LINDrivers/lin_slave.c: 62:     LIN_enableRx();
  8778  0A16  3197  27F0  3189   	fcall	_LIN_enableRx
  8779                           
  8780                           ;mcc_generated_files/LINDrivers/lin_slave.c: 63:     LIN_setTimerHandler();
  8781  0A19  3188  2055         	fcall	_LIN_setTimerHandler
  8782  0A1B  0008               	return
  8783  0A1C                     __end_of_LIN_init:
  8784                           
  8785                           	psect	text9
  8786  0855                     __ptext9:	
  8787 ;; *************** function _LIN_setTimerHandler *****************
  8788 ;; Defined at:
  8789 ;;		line 300 in file "mcc_generated_files/LINDrivers/lin_slave.c"
  8790 ;; Parameters:    Size  Location     Type
  8791 ;;		None
  8792 ;; Auto vars:     Size  Location     Type
  8793 ;;		None
  8794 ;; Return value:  Size  Location     Type
  8795 ;;                  1    wreg      void 
  8796 ;; Registers used:
  8797 ;;		wreg, status,2, status,0, pclath, cstack
  8798 ;; Tracked objects:
  8799 ;;		On entry : 3F/E
  8800 ;;		On exit  : 3F/2
  8801 ;;		Unchanged: 0/0
  8802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8807 ;;Total ram usage:        0 bytes
  8808 ;; Hardware stack levels used: 1
  8809 ;; Hardware stack levels required when called: 6
  8810 ;; This function calls:
  8811 ;;		_TMR0_SetInterruptHandler
  8812 ;; This function is called by:
  8813 ;;		_LIN_init
  8814 ;; This function uses a non-reentrant model
  8815 ;;
  8816                           
  8817                           
  8818                           ;psect for function _LIN_setTimerHandler
  8819  0855                     _LIN_setTimerHandler:
  8820                           
  8821                           ;mcc_generated_files/LINDrivers/lin_slave.c: 301:     TMR0_SetInterruptHandler(LIN_timer
      +                          Handler);
  8822                           
  8823                           ;incstack = 0
  8824                           ; Regs used in _LIN_setTimerHandler: [wreg+status,2+status,0+pclath+cstack]
  8825  0855  3094               	movlw	low _LIN_timerHandler
  8826  0856  0140               	movlb	0	; select bank0
  8827  0857  00CB               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  8828  0858  3008               	movlw	high _LIN_timerHandler
  8829  0859  00CC               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  8830  085A  3188  204D         	fcall	_TMR0_SetInterruptHandler
  8831  085C  0008               	return
  8832  085D                     __end_of_LIN_setTimerHandler:
  8833                           
  8834                           	psect	text10
  8835  084D                     __ptext10:	
  8836 ;; *************** function _TMR0_SetInterruptHandler *****************
  8837 ;; Defined at:
  8838 ;;		line 155 in file "mcc_generated_files/tmr0.c"
  8839 ;; Parameters:    Size  Location     Type
  8840 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  8841 ;;		 -> TMR0_DefaultInterruptHandler(1), LIN_timerHandler(1), 
  8842 ;; Auto vars:     Size  Location     Type
  8843 ;;		None
  8844 ;; Return value:  Size  Location     Type
  8845 ;;                  1    wreg      void 
  8846 ;; Registers used:
  8847 ;;		wreg
  8848 ;; Tracked objects:
  8849 ;;		On entry : 3F/0
  8850 ;;		On exit  : 3F/2
  8851 ;;		Unchanged: 0/0
  8852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8853 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8856 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8857 ;;Total ram usage:        2 bytes
  8858 ;; Hardware stack levels used: 1
  8859 ;; Hardware stack levels required when called: 5
  8860 ;; This function calls:
  8861 ;;		Nothing
  8862 ;; This function is called by:
  8863 ;;		_LIN_setTimerHandler
  8864 ;;		_TMR0_Initialize
  8865 ;; This function uses a non-reentrant model
  8866 ;;
  8867                           
  8868                           
  8869                           ;psect for function _TMR0_SetInterruptHandler
  8870  084D                     _TMR0_SetInterruptHandler:
  8871                           
  8872                           ;mcc_generated_files/tmr0.c: 156:     TMR0_InterruptHandler = InterruptHandler;
  8873                           
  8874                           ;incstack = 0
  8875                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  8876  084D  084C               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  8877  084E  0142               	movlb	2	; select bank2
  8878  084F  00DF               	movwf	(_TMR0_InterruptHandler+1)^(0+256)
  8879  0850  0140               	movlb	0	; select bank0
  8880  0851  084B               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  8881  0852  0142               	movlb	2	; select bank2
  8882  0853  00DE               	movwf	_TMR0_InterruptHandler^(0+256)
  8883  0854  0008               	return
  8884  0855                     __end_of_TMR0_SetInterruptHandler:
  8885                           
  8886                           	psect	text11
  8887  17E2                     __ptext11:	
  8888 ;; *************** function _FVR_Initialize *****************
  8889 ;; Defined at:
  8890 ;;		line 58 in file "mcc_generated_files/fvr.c"
  8891 ;; Parameters:    Size  Location     Type
  8892 ;;		None
  8893 ;; Auto vars:     Size  Location     Type
  8894 ;;		None
  8895 ;; Return value:  Size  Location     Type
  8896 ;;                  1    wreg      void 
  8897 ;; Registers used:
  8898 ;;		wreg
  8899 ;; Tracked objects:
  8900 ;;		On entry : B3F/13
  8901 ;;		On exit  : B3F/12
  8902 ;;		Unchanged: B00/0
  8903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8907 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8908 ;;Total ram usage:        0 bytes
  8909 ;; Hardware stack levels used: 1
  8910 ;; Hardware stack levels required when called: 5
  8911 ;; This function calls:
  8912 ;;		Nothing
  8913 ;; This function is called by:
  8914 ;;		_SYSTEM_Initialize
  8915 ;; This function uses a non-reentrant model
  8916 ;;
  8917                           
  8918                           
  8919                           ;psect for function _FVR_Initialize
  8920  17E2                     _FVR_Initialize:
  8921                           
  8922                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0x84;
  8923                           
  8924                           ;incstack = 0
  8925                           ; Regs used in _FVR_Initialize: [wreg]
  8926  17E2  3084               	movlw	132
  8927  17E3  0152               	movlb	18	; select bank18
  8928  17E4  008C               	movwf	12	;volatile
  8929  17E5  0008               	return
  8930  17E6                     __end_of_FVR_Initialize:
  8931                           
  8932                           	psect	text12
  8933  0C1A                     __ptext12:	
  8934 ;; *************** function _EUSART1_Initialize *****************
  8935 ;; Defined at:
  8936 ;;		line 88 in file "mcc_generated_files/eusart1.c"
  8937 ;; Parameters:    Size  Location     Type
  8938 ;;		None
  8939 ;; Auto vars:     Size  Location     Type
  8940 ;;		None
  8941 ;; Return value:  Size  Location     Type
  8942 ;;                  1    wreg      void 
  8943 ;; Registers used:
  8944 ;;		wreg, status,2, status,0, pclath, cstack
  8945 ;; Tracked objects:
  8946 ;;		On entry : 3F/4
  8947 ;;		On exit  : 3F/E
  8948 ;;		Unchanged: 0/0
  8949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8952 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8953 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8954 ;;Total ram usage:        1 bytes
  8955 ;; Hardware stack levels used: 1
  8956 ;; Hardware stack levels required when called: 6
  8957 ;; This function calls:
  8958 ;;		_EUSART1_SetErrorHandler
  8959 ;;		_EUSART1_SetFramingErrorHandler
  8960 ;;		_EUSART1_SetOverrunErrorHandler
  8961 ;;		_EUSART1_SetRxInterruptHandler
  8962 ;;		_EUSART1_SetTxInterruptHandler
  8963 ;; This function is called by:
  8964 ;;		_SYSTEM_Initialize
  8965 ;; This function uses a non-reentrant model
  8966 ;;
  8967                           
  8968                           
  8969                           ;psect for function _EUSART1_Initialize
  8970  0C1A                     _EUSART1_Initialize:
  8971                           
  8972                           ;mcc_generated_files/eusart1.c: 91:     PIE3bits.RC1IE = 0;
  8973                           
  8974                           ;incstack = 0
  8975                           ; Regs used in _EUSART1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8976  0C1A  014E               	movlb	14	; select bank14
  8977  0C1B  1299               	bcf	25,5	;volatile
  8978                           
  8979                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
  8980  0C1C  30E7               	movlw	low _EUSART1_Receive_ISR
  8981  0C1D  0140               	movlb	0	; select bank0
  8982  0C1E  00CB               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
  8983  0C1F  300B               	movlw	high _EUSART1_Receive_ISR
  8984  0C20  00CC               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
  8985  0C21  3188  203D  318C   	fcall	_EUSART1_SetRxInterruptHandler
  8986                           
  8987                           ;mcc_generated_files/eusart1.c: 93:     PIE3bits.TX1IE = 0;
  8988  0C24  014E               	movlb	14	; select bank14
  8989  0C25  1219               	bcf	25,4	;volatile
  8990                           
  8991                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
  8992  0C26  30DF               	movlw	low _EUSART1_Transmit_ISR
  8993  0C27  0140               	movlb	0	; select bank0
  8994  0C28  00CB               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler
  8995  0C29  3009               	movlw	high _EUSART1_Transmit_ISR
  8996  0C2A  00CC               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler+1
  8997  0C2B  3188  2045  318C   	fcall	_EUSART1_SetTxInterruptHandler
  8998                           
  8999                           ;mcc_generated_files/eusart1.c: 98:     BAUD1CON = 0x08;
  9000  0C2E  3008               	movlw	8
  9001  0C2F  009F               	movwf	31	;volatile
  9002                           
  9003                           ;mcc_generated_files/eusart1.c: 101:     RC1STA = 0x90;
  9004  0C30  3090               	movlw	144
  9005  0C31  009D               	movwf	29	;volatile
  9006                           
  9007                           ;mcc_generated_files/eusart1.c: 104:     TX1STA = 0x24;
  9008  0C32  3024               	movlw	36
  9009  0C33  009E               	movwf	30	;volatile
  9010                           
  9011                           ;mcc_generated_files/eusart1.c: 107:     SP1BRGL = 0xA0;
  9012  0C34  30A0               	movlw	160
  9013  0C35  009B               	movwf	27	;volatile
  9014                           
  9015                           ;mcc_generated_files/eusart1.c: 110:     SP1BRGH = 0x01;
  9016  0C36  3001               	movlw	1
  9017  0C37  009C               	movwf	28	;volatile
  9018                           
  9019                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
  9020  0C38  3000               	movlw	low _EUSART1_DefaultFramingErrorHandler
  9021  0C39  0140               	movlb	0	; select bank0
  9022  0C3A  00CB               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler
  9023  0C3B  3008               	movlw	high _EUSART1_DefaultFramingErrorHandler
  9024  0C3C  00CC               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1
  9025  0C3D  3188  202D  318C   	fcall	_EUSART1_SetFramingErrorHandler
  9026                           
  9027                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
  9028  0C40  30CD               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  9029  0C41  0140               	movlb	0	; select bank0
  9030  0C42  00CB               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler
  9031  0C43  3017               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  9032  0C44  00CC               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1
  9033  0C45  3188  2035  318C   	fcall	_EUSART1_SetOverrunErrorHandler
  9034                           
  9035                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
  9036  0C48  30CA               	movlw	low _EUSART1_DefaultErrorHandler
  9037  0C49  0140               	movlb	0	; select bank0
  9038  0C4A  00CB               	movwf	EUSART1_SetErrorHandler@interruptHandler
  9039  0C4B  3017               	movlw	high _EUSART1_DefaultErrorHandler
  9040  0C4C  00CC               	movwf	EUSART1_SetErrorHandler@interruptHandler+1
  9041  0C4D  3188  2025         	fcall	_EUSART1_SetErrorHandler
  9042                           
  9043                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
  9044  0C4F  0140               	movlb	0	; select bank0
  9045  0C50  01A2               	clrf	_eusart1RxLastError	;volatile
  9046                           
  9047                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
  9048  0C51  01F3               	clrf	_eusart1TxHead	;volatile
  9049                           
  9050                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
  9051  0C52  01F2               	clrf	_eusart1TxTail	;volatile
  9052                           
  9053                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
  9054  0C53  3008               	movlw	8
  9055  0C54  00CD               	movwf	??_EUSART1_Initialize
  9056  0C55  084D               	movf	??_EUSART1_Initialize,w
  9057  0C56  0141               	movlb	1	; select bank1
  9058  0C57  00ED               	movwf	_eusart1TxBufferRemaining^(0+128)	;volatile
  9059                           
  9060                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
  9061  0C58  01F1               	clrf	_eusart1RxHead	;volatile
  9062                           
  9063                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
  9064  0C59  01F0               	clrf	_eusart1RxTail	;volatile
  9065                           
  9066                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
  9067  0C5A  0140               	movlb	0	; select bank0
  9068  0C5B  01A3               	clrf	_eusart1RxCount	;volatile
  9069                           
  9070                           ;mcc_generated_files/eusart1.c: 129:     PIE3bits.RC1IE = 1;
  9071  0C5C  014E               	movlb	14	; select bank14
  9072  0C5D  1699               	bsf	25,5	;volatile
  9073  0C5E  0008               	return
  9074  0C5F                     __end_of_EUSART1_Initialize:
  9075                           
  9076                           	psect	text13
  9077  0845                     __ptext13:	
  9078 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  9079 ;; Defined at:
  9080 ;;		line 276 in file "mcc_generated_files/eusart1.c"
  9081 ;; Parameters:    Size  Location     Type
  9082 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9083 ;;		 -> EUSART1_Transmit_ISR(1), 
  9084 ;; Auto vars:     Size  Location     Type
  9085 ;;		None
  9086 ;; Return value:  Size  Location     Type
  9087 ;;                  1    wreg      void 
  9088 ;; Registers used:
  9089 ;;		wreg
  9090 ;; Tracked objects:
  9091 ;;		On entry : 3F/0
  9092 ;;		On exit  : 3F/2
  9093 ;;		Unchanged: 0/0
  9094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9095 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9098 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9099 ;;Total ram usage:        2 bytes
  9100 ;; Hardware stack levels used: 1
  9101 ;; Hardware stack levels required when called: 5
  9102 ;; This function calls:
  9103 ;;		Nothing
  9104 ;; This function is called by:
  9105 ;;		_EUSART1_Initialize
  9106 ;; This function uses a non-reentrant model
  9107 ;;
  9108                           
  9109                           
  9110                           ;psect for function _EUSART1_SetTxInterruptHandler
  9111  0845                     _EUSART1_SetTxInterruptHandler:
  9112                           
  9113                           ;mcc_generated_files/eusart1.c: 277:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  9114                           
  9115                           ;incstack = 0
  9116                           ; Regs used in _EUSART1_SetTxInterruptHandler: [wreg]
  9117  0845  084C               	movf	EUSART1_SetTxInterruptHandler@interruptHandler+1,w
  9118  0846  0142               	movlb	2	; select bank2
  9119  0847  00E9               	movwf	(_EUSART1_TxDefaultInterruptHandler+1)^(0+256)
  9120  0848  0140               	movlb	0	; select bank0
  9121  0849  084B               	movf	EUSART1_SetTxInterruptHandler@interruptHandler,w
  9122  084A  0142               	movlb	2	; select bank2
  9123  084B  00E8               	movwf	_EUSART1_TxDefaultInterruptHandler^(0+256)
  9124  084C  0008               	return
  9125  084D                     __end_of_EUSART1_SetTxInterruptHandler:
  9126                           
  9127                           	psect	text14
  9128  083D                     __ptext14:	
  9129 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  9130 ;; Defined at:
  9131 ;;		line 280 in file "mcc_generated_files/eusart1.c"
  9132 ;; Parameters:    Size  Location     Type
  9133 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9134 ;;		 -> EUSART1_Receive_ISR(1), 
  9135 ;; Auto vars:     Size  Location     Type
  9136 ;;		None
  9137 ;; Return value:  Size  Location     Type
  9138 ;;                  1    wreg      void 
  9139 ;; Registers used:
  9140 ;;		wreg
  9141 ;; Tracked objects:
  9142 ;;		On entry : 3F/0
  9143 ;;		On exit  : 3F/2
  9144 ;;		Unchanged: 0/0
  9145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9146 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9149 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9150 ;;Total ram usage:        2 bytes
  9151 ;; Hardware stack levels used: 1
  9152 ;; Hardware stack levels required when called: 5
  9153 ;; This function calls:
  9154 ;;		Nothing
  9155 ;; This function is called by:
  9156 ;;		_EUSART1_Initialize
  9157 ;; This function uses a non-reentrant model
  9158 ;;
  9159                           
  9160                           
  9161                           ;psect for function _EUSART1_SetRxInterruptHandler
  9162  083D                     _EUSART1_SetRxInterruptHandler:
  9163                           
  9164                           ;mcc_generated_files/eusart1.c: 281:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  9165                           
  9166                           ;incstack = 0
  9167                           ; Regs used in _EUSART1_SetRxInterruptHandler: [wreg]
  9168  083D  084C               	movf	EUSART1_SetRxInterruptHandler@interruptHandler+1,w
  9169  083E  0142               	movlb	2	; select bank2
  9170  083F  00E7               	movwf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+256)
  9171  0840  0140               	movlb	0	; select bank0
  9172  0841  084B               	movf	EUSART1_SetRxInterruptHandler@interruptHandler,w
  9173  0842  0142               	movlb	2	; select bank2
  9174  0843  00E6               	movwf	_EUSART1_RxDefaultInterruptHandler^(0+256)
  9175  0844  0008               	return
  9176  0845                     __end_of_EUSART1_SetRxInterruptHandler:
  9177                           
  9178                           	psect	text15
  9179  0835                     __ptext15:	
  9180 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  9181 ;; Defined at:
  9182 ;;		line 268 in file "mcc_generated_files/eusart1.c"
  9183 ;; Parameters:    Size  Location     Type
  9184 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9185 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  9186 ;; Auto vars:     Size  Location     Type
  9187 ;;		None
  9188 ;; Return value:  Size  Location     Type
  9189 ;;                  1    wreg      void 
  9190 ;; Registers used:
  9191 ;;		wreg
  9192 ;; Tracked objects:
  9193 ;;		On entry : 3F/0
  9194 ;;		On exit  : 3F/2
  9195 ;;		Unchanged: 0/0
  9196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9197 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9200 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9201 ;;Total ram usage:        2 bytes
  9202 ;; Hardware stack levels used: 1
  9203 ;; Hardware stack levels required when called: 5
  9204 ;; This function calls:
  9205 ;;		Nothing
  9206 ;; This function is called by:
  9207 ;;		_EUSART1_Initialize
  9208 ;; This function uses a non-reentrant model
  9209 ;;
  9210                           
  9211                           
  9212                           ;psect for function _EUSART1_SetOverrunErrorHandler
  9213  0835                     _EUSART1_SetOverrunErrorHandler:
  9214                           
  9215                           ;mcc_generated_files/eusart1.c: 269:     EUSART1_OverrunErrorHandler = interruptHandler;
  9216                           
  9217                           ;incstack = 0
  9218                           ; Regs used in _EUSART1_SetOverrunErrorHandler: [wreg]
  9219  0835  084C               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,w
  9220  0836  0142               	movlb	2	; select bank2
  9221  0837  00E3               	movwf	(_EUSART1_OverrunErrorHandler+1)^(0+256)
  9222  0838  0140               	movlb	0	; select bank0
  9223  0839  084B               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler,w
  9224  083A  0142               	movlb	2	; select bank2
  9225  083B  00E2               	movwf	_EUSART1_OverrunErrorHandler^(0+256)
  9226  083C  0008               	return
  9227  083D                     __end_of_EUSART1_SetOverrunErrorHandler:
  9228                           
  9229                           	psect	text16
  9230  082D                     __ptext16:	
  9231 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  9232 ;; Defined at:
  9233 ;;		line 264 in file "mcc_generated_files/eusart1.c"
  9234 ;; Parameters:    Size  Location     Type
  9235 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9236 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  9237 ;; Auto vars:     Size  Location     Type
  9238 ;;		None
  9239 ;; Return value:  Size  Location     Type
  9240 ;;                  1    wreg      void 
  9241 ;; Registers used:
  9242 ;;		wreg
  9243 ;; Tracked objects:
  9244 ;;		On entry : 3F/0
  9245 ;;		On exit  : 3F/2
  9246 ;;		Unchanged: 0/0
  9247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9248 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9251 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9252 ;;Total ram usage:        2 bytes
  9253 ;; Hardware stack levels used: 1
  9254 ;; Hardware stack levels required when called: 5
  9255 ;; This function calls:
  9256 ;;		Nothing
  9257 ;; This function is called by:
  9258 ;;		_EUSART1_Initialize
  9259 ;; This function uses a non-reentrant model
  9260 ;;
  9261                           
  9262                           
  9263                           ;psect for function _EUSART1_SetFramingErrorHandler
  9264  082D                     _EUSART1_SetFramingErrorHandler:
  9265                           
  9266                           ;mcc_generated_files/eusart1.c: 265:     EUSART1_FramingErrorHandler = interruptHandler;
  9267                           
  9268                           ;incstack = 0
  9269                           ; Regs used in _EUSART1_SetFramingErrorHandler: [wreg]
  9270  082D  084C               	movf	EUSART1_SetFramingErrorHandler@interruptHandler+1,w
  9271  082E  0142               	movlb	2	; select bank2
  9272  082F  00E5               	movwf	(_EUSART1_FramingErrorHandler+1)^(0+256)
  9273  0830  0140               	movlb	0	; select bank0
  9274  0831  084B               	movf	EUSART1_SetFramingErrorHandler@interruptHandler,w
  9275  0832  0142               	movlb	2	; select bank2
  9276  0833  00E4               	movwf	_EUSART1_FramingErrorHandler^(0+256)
  9277  0834  0008               	return
  9278  0835                     __end_of_EUSART1_SetFramingErrorHandler:
  9279                           
  9280                           	psect	text17
  9281  0825                     __ptext17:	
  9282 ;; *************** function _EUSART1_SetErrorHandler *****************
  9283 ;; Defined at:
  9284 ;;		line 272 in file "mcc_generated_files/eusart1.c"
  9285 ;; Parameters:    Size  Location     Type
  9286 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9287 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  9288 ;; Auto vars:     Size  Location     Type
  9289 ;;		None
  9290 ;; Return value:  Size  Location     Type
  9291 ;;                  1    wreg      void 
  9292 ;; Registers used:
  9293 ;;		wreg
  9294 ;; Tracked objects:
  9295 ;;		On entry : 3F/0
  9296 ;;		On exit  : 3F/2
  9297 ;;		Unchanged: 0/0
  9298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9299 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9302 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9303 ;;Total ram usage:        2 bytes
  9304 ;; Hardware stack levels used: 1
  9305 ;; Hardware stack levels required when called: 5
  9306 ;; This function calls:
  9307 ;;		Nothing
  9308 ;; This function is called by:
  9309 ;;		_EUSART1_Initialize
  9310 ;; This function uses a non-reentrant model
  9311 ;;
  9312                           
  9313                           
  9314                           ;psect for function _EUSART1_SetErrorHandler
  9315  0825                     _EUSART1_SetErrorHandler:
  9316                           
  9317                           ;mcc_generated_files/eusart1.c: 273:     EUSART1_ErrorHandler = interruptHandler;
  9318                           
  9319                           ;incstack = 0
  9320                           ; Regs used in _EUSART1_SetErrorHandler: [wreg]
  9321  0825  084C               	movf	EUSART1_SetErrorHandler@interruptHandler+1,w
  9322  0826  0142               	movlb	2	; select bank2
  9323  0827  00E1               	movwf	(_EUSART1_ErrorHandler+1)^(0+256)
  9324  0828  0140               	movlb	0	; select bank0
  9325  0829  084B               	movf	EUSART1_SetErrorHandler@interruptHandler,w
  9326  082A  0142               	movlb	2	; select bank2
  9327  082B  00E0               	movwf	_EUSART1_ErrorHandler^(0+256)
  9328  082C  0008               	return
  9329  082D                     __end_of_EUSART1_SetErrorHandler:
  9330                           
  9331                           	psect	text18
  9332  17FA                     __ptext18:	
  9333 ;; *************** function _DAC1_Initialize *****************
  9334 ;; Defined at:
  9335 ;;		line 58 in file "mcc_generated_files/dac1.c"
  9336 ;; Parameters:    Size  Location     Type
  9337 ;;		None
  9338 ;; Auto vars:     Size  Location     Type
  9339 ;;		None
  9340 ;; Return value:  Size  Location     Type
  9341 ;;                  1    wreg      void 
  9342 ;; Registers used:
  9343 ;;		wreg
  9344 ;; Tracked objects:
  9345 ;;		On entry : 3F/3C
  9346 ;;		On exit  : 3F/12
  9347 ;;		Unchanged: 0/0
  9348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9352 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9353 ;;Total ram usage:        0 bytes
  9354 ;; Hardware stack levels used: 1
  9355 ;; Hardware stack levels required when called: 5
  9356 ;; This function calls:
  9357 ;;		Nothing
  9358 ;; This function is called by:
  9359 ;;		_SYSTEM_Initialize
  9360 ;; This function uses a non-reentrant model
  9361 ;;
  9362                           
  9363                           
  9364                           ;psect for function _DAC1_Initialize
  9365  17FA                     _DAC1_Initialize:
  9366                           
  9367                           ;mcc_generated_files/dac1.c: 61:     DAC1CON0 = 0x88;
  9368                           
  9369                           ;incstack = 0
  9370                           ; Regs used in _DAC1_Initialize: [wreg]
  9371  17FA  3088               	movlw	136
  9372  17FB  0152               	movlb	18	; select bank18
  9373  17FC  008E               	movwf	14	;volatile
  9374                           
  9375                           ;mcc_generated_files/dac1.c: 63:     DAC1CON1 = 0x02;
  9376  17FD  3002               	movlw	2
  9377  17FE  008F               	movwf	15	;volatile
  9378  17FF  0008               	return
  9379  1800                     __end_of_DAC1_Initialize:
  9380                           
  9381                           	psect	text19
  9382  0876                     __ptext19:	
  9383 ;; *************** function _CMP2_Initialize *****************
  9384 ;; Defined at:
  9385 ;;		line 58 in file "mcc_generated_files/cmp2.c"
  9386 ;; Parameters:    Size  Location     Type
  9387 ;;		None
  9388 ;; Auto vars:     Size  Location     Type
  9389 ;;		None
  9390 ;; Return value:  Size  Location     Type
  9391 ;;                  1    wreg      void 
  9392 ;; Registers used:
  9393 ;;		wreg
  9394 ;; Tracked objects:
  9395 ;;		On entry : B3F/11
  9396 ;;		On exit  : B3F/13
  9397 ;;		Unchanged: B00/0
  9398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9402 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9403 ;;Total ram usage:        0 bytes
  9404 ;; Hardware stack levels used: 1
  9405 ;; Hardware stack levels required when called: 5
  9406 ;; This function calls:
  9407 ;;		Nothing
  9408 ;; This function is called by:
  9409 ;;		_SYSTEM_Initialize
  9410 ;; This function uses a non-reentrant model
  9411 ;;
  9412                           
  9413                           
  9414                           ;psect for function _CMP2_Initialize
  9415  0876                     _CMP2_Initialize:
  9416                           
  9417                           ;mcc_generated_files/cmp2.c: 62:     CM2CON0 = 0x90;
  9418                           
  9419                           ;incstack = 0
  9420                           ; Regs used in _CMP2_Initialize: [wreg]
  9421  0876  3090               	movlw	144
  9422  0877  0153               	movlb	19	; select bank19
  9423  0878  0094               	movwf	20	;volatile
  9424                           
  9425                           ;mcc_generated_files/cmp2.c: 65:     CM2CON1 = 0x02;
  9426  0879  3002               	movlw	2
  9427  087A  0095               	movwf	21	;volatile
  9428                           
  9429                           ;mcc_generated_files/cmp2.c: 68:     CM2NCH = 0x03;
  9430  087B  3003               	movlw	3
  9431  087C  0096               	movwf	22	;volatile
  9432                           
  9433                           ;mcc_generated_files/cmp2.c: 71:     CM2PCH = 0x05;
  9434  087D  3005               	movlw	5
  9435  087E  0097               	movwf	23	;volatile
  9436  087F  0008               	return
  9437  0880                     __end_of_CMP2_Initialize:
  9438                           
  9439                           	psect	text20
  9440  0903                     __ptext20:	
  9441 ;; *************** function _CLC4_Initialize *****************
  9442 ;; Defined at:
  9443 ;;		line 58 in file "mcc_generated_files/clc4.c"
  9444 ;; Parameters:    Size  Location     Type
  9445 ;;		None
  9446 ;; Auto vars:     Size  Location     Type
  9447 ;;		None
  9448 ;; Return value:  Size  Location     Type
  9449 ;;                  1    wreg      void 
  9450 ;; Registers used:
  9451 ;;		wreg, status,2
  9452 ;; Tracked objects:
  9453 ;;		On entry : 3F/3C
  9454 ;;		On exit  : 3F/3C
  9455 ;;		Unchanged: 0/0
  9456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9460 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9461 ;;Total ram usage:        0 bytes
  9462 ;; Hardware stack levels used: 1
  9463 ;; Hardware stack levels required when called: 5
  9464 ;; This function calls:
  9465 ;;		Nothing
  9466 ;; This function is called by:
  9467 ;;		_SYSTEM_Initialize
  9468 ;; This function uses a non-reentrant model
  9469 ;;
  9470                           
  9471                           
  9472                           ;psect for function _CLC4_Initialize
  9473  0903                     _CLC4_Initialize:
  9474                           
  9475                           ;mcc_generated_files/clc4.c: 63:     CLC4POL = 0x00;
  9476                           
  9477                           ;incstack = 0
  9478                           ; Regs used in _CLC4_Initialize: [wreg+status,2]
  9479  0903  01AF               	clrf	47	;volatile
  9480                           
  9481                           ;mcc_generated_files/clc4.c: 65:     CLC4SEL0 = 0x0E;
  9482  0904  300E               	movlw	14
  9483  0905  00B0               	movwf	48	;volatile
  9484                           
  9485                           ;mcc_generated_files/clc4.c: 67:     CLC4SEL1 = 0x00;
  9486  0906  01B1               	clrf	49	;volatile
  9487                           
  9488                           ;mcc_generated_files/clc4.c: 69:     CLC4SEL2 = 0x00;
  9489  0907  01B2               	clrf	50	;volatile
  9490                           
  9491                           ;mcc_generated_files/clc4.c: 71:     CLC4SEL3 = 0x00;
  9492  0908  01B3               	clrf	51	;volatile
  9493                           
  9494                           ;mcc_generated_files/clc4.c: 73:     CLC4GLS0 = 0x02;
  9495  0909  3002               	movlw	2
  9496  090A  00B4               	movwf	52	;volatile
  9497                           
  9498                           ;mcc_generated_files/clc4.c: 75:     CLC4GLS1 = 0x02;
  9499  090B  3002               	movlw	2
  9500  090C  00B5               	movwf	53	;volatile
  9501                           
  9502                           ;mcc_generated_files/clc4.c: 77:     CLC4GLS2 = 0x00;
  9503  090D  01B6               	clrf	54	;volatile
  9504                           
  9505                           ;mcc_generated_files/clc4.c: 79:     CLC4GLS3 = 0x00;
  9506  090E  01B7               	clrf	55	;volatile
  9507                           
  9508                           ;mcc_generated_files/clc4.c: 81:     CLC4CON = 0x80;
  9509  090F  3080               	movlw	128
  9510  0910  00AE               	movwf	46	;volatile
  9511  0911  0008               	return
  9512  0912                     __end_of_CLC4_Initialize:
  9513                           
  9514                           	psect	text21
  9515  0912                     __ptext21:	
  9516 ;; *************** function _CLC3_Initialize *****************
  9517 ;; Defined at:
  9518 ;;		line 58 in file "mcc_generated_files/clc3.c"
  9519 ;; Parameters:    Size  Location     Type
  9520 ;;		None
  9521 ;; Auto vars:     Size  Location     Type
  9522 ;;		None
  9523 ;; Return value:  Size  Location     Type
  9524 ;;                  1    wreg      void 
  9525 ;; Registers used:
  9526 ;;		wreg, status,2
  9527 ;; Tracked objects:
  9528 ;;		On entry : 3F/1
  9529 ;;		On exit  : 3F/3C
  9530 ;;		Unchanged: 0/0
  9531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9535 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9536 ;;Total ram usage:        0 bytes
  9537 ;; Hardware stack levels used: 1
  9538 ;; Hardware stack levels required when called: 5
  9539 ;; This function calls:
  9540 ;;		Nothing
  9541 ;; This function is called by:
  9542 ;;		_SYSTEM_Initialize
  9543 ;; This function uses a non-reentrant model
  9544 ;;
  9545                           
  9546                           
  9547                           ;psect for function _CLC3_Initialize
  9548  0912                     _CLC3_Initialize:
  9549                           
  9550                           ;mcc_generated_files/clc3.c: 63:     CLC3POL = 0x00;
  9551                           
  9552                           ;incstack = 0
  9553                           ; Regs used in _CLC3_Initialize: [wreg+status,2]
  9554  0912  017C               	movlb	60	; select bank60
  9555  0913  01A5               	clrf	37	;volatile
  9556                           
  9557                           ;mcc_generated_files/clc3.c: 65:     CLC3SEL0 = 0x1A;
  9558  0914  301A               	movlw	26
  9559  0915  00A6               	movwf	38	;volatile
  9560                           
  9561                           ;mcc_generated_files/clc3.c: 67:     CLC3SEL1 = 0x05;
  9562  0916  3005               	movlw	5
  9563  0917  00A7               	movwf	39	;volatile
  9564                           
  9565                           ;mcc_generated_files/clc3.c: 69:     CLC3SEL2 = 0x00;
  9566  0918  01A8               	clrf	40	;volatile
  9567                           
  9568                           ;mcc_generated_files/clc3.c: 71:     CLC3SEL3 = 0x00;
  9569  0919  01A9               	clrf	41	;volatile
  9570                           
  9571                           ;mcc_generated_files/clc3.c: 73:     CLC3GLS0 = 0x01;
  9572  091A  3001               	movlw	1
  9573  091B  00AA               	movwf	42	;volatile
  9574                           
  9575                           ;mcc_generated_files/clc3.c: 75:     CLC3GLS1 = 0x08;
  9576  091C  3008               	movlw	8
  9577  091D  00AB               	movwf	43	;volatile
  9578                           
  9579                           ;mcc_generated_files/clc3.c: 77:     CLC3GLS2 = 0x00;
  9580  091E  01AC               	clrf	44	;volatile
  9581                           
  9582                           ;mcc_generated_files/clc3.c: 79:     CLC3GLS3 = 0x00;
  9583  091F  01AD               	clrf	45	;volatile
  9584                           
  9585                           ;mcc_generated_files/clc3.c: 81:     CLC3CON = 0x80;
  9586  0920  3080               	movlw	128
  9587  0921  00A4               	movwf	36	;volatile
  9588  0922  0008               	return
  9589  0923                     __end_of_CLC3_Initialize:
  9590                           
  9591                           	psect	text22
  9592  0937                     __ptext22:	
  9593 ;; *************** function _CLC2_Initialize *****************
  9594 ;; Defined at:
  9595 ;;		line 58 in file "mcc_generated_files/clc2.c"
  9596 ;; Parameters:    Size  Location     Type
  9597 ;;		None
  9598 ;; Auto vars:     Size  Location     Type
  9599 ;;		None
  9600 ;; Return value:  Size  Location     Type
  9601 ;;                  1    wreg      void 
  9602 ;; Registers used:
  9603 ;;		wreg, status,2
  9604 ;; Tracked objects:
  9605 ;;		On entry : B3F/12
  9606 ;;		On exit  : B3F/E
  9607 ;;		Unchanged: B00/0
  9608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9612 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9613 ;;Total ram usage:        0 bytes
  9614 ;; Hardware stack levels used: 1
  9615 ;; Hardware stack levels required when called: 5
  9616 ;; This function calls:
  9617 ;;		Nothing
  9618 ;; This function is called by:
  9619 ;;		_SYSTEM_Initialize
  9620 ;; This function uses a non-reentrant model
  9621 ;;
  9622                           
  9623                           
  9624                           ;psect for function _CLC2_Initialize
  9625  0937                     _CLC2_Initialize:
  9626                           
  9627                           ;mcc_generated_files/clc2.c: 63:     CLC2POL = 0x00;
  9628                           
  9629                           ;incstack = 0
  9630                           ; Regs used in _CLC2_Initialize: [wreg+status,2]
  9631  0937  017C               	movlb	60	; select bank60
  9632  0938  019B               	clrf	27	;volatile
  9633                           
  9634                           ;mcc_generated_files/clc2.c: 65:     CLC2SEL0 = 0x0D;
  9635  0939  300D               	movlw	13
  9636  093A  009C               	movwf	28	;volatile
  9637                           
  9638                           ;mcc_generated_files/clc2.c: 67:     CLC2SEL1 = 0x0D;
  9639  093B  300D               	movlw	13
  9640  093C  009D               	movwf	29	;volatile
  9641                           
  9642                           ;mcc_generated_files/clc2.c: 69:     CLC2SEL2 = 0x0D;
  9643  093D  300D               	movlw	13
  9644  093E  009E               	movwf	30	;volatile
  9645                           
  9646                           ;mcc_generated_files/clc2.c: 71:     CLC2SEL3 = 0x0D;
  9647  093F  300D               	movlw	13
  9648  0940  009F               	movwf	31	;volatile
  9649                           
  9650                           ;mcc_generated_files/clc2.c: 73:     CLC2GLS0 = 0x02;
  9651  0941  3002               	movlw	2
  9652  0942  00A0               	movwf	32	;volatile
  9653                           
  9654                           ;mcc_generated_files/clc2.c: 75:     CLC2GLS1 = 0x00;
  9655  0943  01A1               	clrf	33	;volatile
  9656                           
  9657                           ;mcc_generated_files/clc2.c: 77:     CLC2GLS2 = 0x00;
  9658  0944  01A2               	clrf	34	;volatile
  9659                           
  9660                           ;mcc_generated_files/clc2.c: 79:     CLC2GLS3 = 0x00;
  9661  0945  01A3               	clrf	35	;volatile
  9662                           
  9663                           ;mcc_generated_files/clc2.c: 81:     CLC2CON = 0x83;
  9664  0946  3083               	movlw	131
  9665  0947  009A               	movwf	26	;volatile
  9666                           
  9667                           ;mcc_generated_files/clc2.c: 84:     PIR5bits.CLC2IF = 0;
  9668  0948  014E               	movlb	14	; select bank14
  9669  0949  1291               	bcf	17,5	;volatile
  9670                           
  9671                           ;mcc_generated_files/clc2.c: 86:     PIE5bits.CLC2IE = 1;
  9672  094A  169B               	bsf	27,5	;volatile
  9673  094B  0008               	return
  9674  094C                     __end_of_CLC2_Initialize:
  9675                           
  9676                           	psect	text23
  9677  0923                     __ptext23:	
  9678 ;; *************** function _CLC1_Initialize *****************
  9679 ;; Defined at:
  9680 ;;		line 58 in file "mcc_generated_files/clc1.c"
  9681 ;; Parameters:    Size  Location     Type
  9682 ;;		None
  9683 ;; Auto vars:     Size  Location     Type
  9684 ;;		None
  9685 ;; Return value:  Size  Location     Type
  9686 ;;                  1    wreg      void 
  9687 ;; Registers used:
  9688 ;;		wreg, status,2
  9689 ;; Tracked objects:
  9690 ;;		On entry : 3F/B
  9691 ;;		On exit  : 3F/3C
  9692 ;;		Unchanged: 0/0
  9693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9698 ;;Total ram usage:        0 bytes
  9699 ;; Hardware stack levels used: 1
  9700 ;; Hardware stack levels required when called: 5
  9701 ;; This function calls:
  9702 ;;		Nothing
  9703 ;; This function is called by:
  9704 ;;		_SYSTEM_Initialize
  9705 ;; This function uses a non-reentrant model
  9706 ;;
  9707                           
  9708                           
  9709                           ;psect for function _CLC1_Initialize
  9710  0923                     _CLC1_Initialize:
  9711                           
  9712                           ;mcc_generated_files/clc1.c: 63:     CLC1POL = 0x88;
  9713                           
  9714                           ;incstack = 0
  9715                           ; Regs used in _CLC1_Initialize: [wreg+status,2]
  9716  0923  3088               	movlw	136
  9717  0924  017C               	movlb	60	; select bank60
  9718  0925  0091               	movwf	17	;volatile
  9719                           
  9720                           ;mcc_generated_files/clc1.c: 65:     CLC1SEL0 = 0x17;
  9721  0926  3017               	movlw	23
  9722  0927  0092               	movwf	18	;volatile
  9723                           
  9724                           ;mcc_generated_files/clc1.c: 67:     CLC1SEL1 = 0x17;
  9725  0928  3017               	movlw	23
  9726  0929  0093               	movwf	19	;volatile
  9727                           
  9728                           ;mcc_generated_files/clc1.c: 69:     CLC1SEL2 = 0x0E;
  9729  092A  300E               	movlw	14
  9730  092B  0094               	movwf	20	;volatile
  9731                           
  9732                           ;mcc_generated_files/clc1.c: 71:     CLC1SEL3 = 0x1B;
  9733  092C  301B               	movlw	27
  9734  092D  0095               	movwf	21	;volatile
  9735                           
  9736                           ;mcc_generated_files/clc1.c: 73:     CLC1GLS0 = 0x02;
  9737  092E  3002               	movlw	2
  9738  092F  0096               	movwf	22	;volatile
  9739                           
  9740                           ;mcc_generated_files/clc1.c: 75:     CLC1GLS1 = 0x00;
  9741  0930  0197               	clrf	23	;volatile
  9742                           
  9743                           ;mcc_generated_files/clc1.c: 77:     CLC1GLS2 = 0x00;
  9744  0931  0198               	clrf	24	;volatile
  9745                           
  9746                           ;mcc_generated_files/clc1.c: 79:     CLC1GLS3 = 0x90;
  9747  0932  3090               	movlw	144
  9748  0933  0099               	movwf	25	;volatile
  9749                           
  9750                           ;mcc_generated_files/clc1.c: 81:     CLC1CON = 0x03;
  9751  0934  3003               	movlw	3
  9752  0935  0090               	movwf	16	;volatile
  9753  0936  0008               	return
  9754  0937                     __end_of_CLC1_Initialize:
  9755                           
  9756                           	psect	text24
  9757  081D                     __ptext24:	
  9758 ;; *************** function _ADC_Initialize *****************
  9759 ;; Defined at:
  9760 ;;		line 67 in file "mcc_generated_files/adc.c"
  9761 ;; Parameters:    Size  Location     Type
  9762 ;;		None
  9763 ;; Auto vars:     Size  Location     Type
  9764 ;;		None
  9765 ;; Return value:  Size  Location     Type
  9766 ;;                  1    wreg      void 
  9767 ;; Registers used:
  9768 ;;		wreg, status,2
  9769 ;; Tracked objects:
  9770 ;;		On entry : 3F/3C
  9771 ;;		On exit  : 3F/1
  9772 ;;		Unchanged: 0/0
  9773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9777 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9778 ;;Total ram usage:        0 bytes
  9779 ;; Hardware stack levels used: 1
  9780 ;; Hardware stack levels required when called: 5
  9781 ;; This function calls:
  9782 ;;		Nothing
  9783 ;; This function is called by:
  9784 ;;		_SYSTEM_Initialize
  9785 ;; This function uses a non-reentrant model
  9786 ;;
  9787                           
  9788                           
  9789                           ;psect for function _ADC_Initialize
  9790  081D                     _ADC_Initialize:
  9791                           
  9792                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0xF0;
  9793                           
  9794                           ;incstack = 0
  9795                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  9796  081D  30F0               	movlw	240
  9797  081E  0141               	movlb	1	; select bank1
  9798  081F  009E               	movwf	30	;volatile
  9799                           
  9800                           ;mcc_generated_files/adc.c: 75:     ADRESL = 0x00;
  9801  0820  019B               	clrf	27	;volatile
  9802                           
  9803                           ;mcc_generated_files/adc.c: 78:     ADRESH = 0x00;
  9804  0821  019C               	clrf	28	;volatile
  9805                           
  9806                           ;mcc_generated_files/adc.c: 81:     ADCON0 = 0x01;
  9807  0822  3001               	movlw	1
  9808  0823  009D               	movwf	29	;volatile
  9809  0824  0008               	return
  9810  0825                     __end_of_ADC_Initialize:
  9811                           
  9812                           	psect	text25
  9813  039E                     __ptext25:	
  9814 ;; *************** function _LIN_handler *****************
  9815 ;; Defined at:
  9816 ;;		line 91 in file "mcc_generated_files/LINDrivers/lin_slave.c"
  9817 ;; Parameters:    Size  Location     Type
  9818 ;;		None
  9819 ;; Auto vars:     Size  Location     Type
  9820 ;;		None
  9821 ;; Return value:  Size  Location     Type
  9822 ;;                  1    wreg      enum E204
  9823 ;; Registers used:
  9824 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9825 ;; Tracked objects:
  9826 ;;		On entry : 3C/0
  9827 ;;		On exit  : 0/0
  9828 ;;		Unchanged: 0/0
  9829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9832 ;;      Temps:          0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  9833 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  9834 ;;Total ram usage:        3 bytes
  9835 ;; Hardware stack levels used: 1
  9836 ;; Hardware stack levels required when called: 9
  9837 ;; This function calls:
  9838 ;;		Absolute function
  9839 ;;		_EUSART1_Read
  9840 ;;		_EUSART1_is_rx_ready
  9841 ;;		_LIN_breakCheck
  9842 ;;		_LIN_checkPID
  9843 ;;		_LIN_disableRx
  9844 ;;		_LIN_enableRx
  9845 ;;		_LIN_getChecksum
  9846 ;;		_LIN_getFromTable
  9847 ;;		_LIN_queuePacket
  9848 ;;		_LIN_startTimer
  9849 ;;		_LIN_stopTimer
  9850 ;;		_memset
  9851 ;;		_processLIN
  9852 ;; This function is called by:
  9853 ;;		_main
  9854 ;; This function uses a non-reentrant model
  9855 ;;
  9856                           
  9857                           
  9858                           ;psect for function _LIN_handler
  9859  039E                     _LIN_handler:
  9860                           
  9861                           ;mcc_generated_files/LINDrivers/lin_slave.c: 92:     static lin_rx_state_t LIN_rxState =
      +                           LIN_RX_IDLE;;mcc_generated_files/LINDrivers/lin_slave.c: 93:     static uint8_t rxDataI
      +                          ndex = 0;;mcc_generated_files/LINDrivers/lin_slave.c: 95:     if(LIN_rxInProgress == 1){
  9862                           
  9863                           ;incstack = 0
  9864                           ; Regs used in _LIN_handler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9865  039E  0140               	movlb	0	; select bank0
  9866  039F  0328               	decf	_LIN_rxInProgress,w
  9867  03A0  1D03               	btfss	3,2
  9868  03A1  2CB6               	goto	l5148
  9869                           
  9870                           ;mcc_generated_files/LINDrivers/lin_slave.c: 96:         if(LIN_timerRunning == 0){
  9871  03A2  0827               	movf	_LIN_timerRunning,w
  9872  03A3  1D03               	btfss	3,2
  9873  03A4  2CB6               	goto	l5148
  9874                           
  9875                           ;mcc_generated_files/LINDrivers/lin_slave.c: 98:             LIN_rxState = LIN_RX_ERROR;
  9876  03A5  3008               	movlw	8
  9877  03A6  0142               	movlb	2	; select bank2
  9878  03A7  00C0               	movwf	??_LIN_handler^(0+256)
  9879  03A8  0840               	movf	??_LIN_handler^(0+256),w
  9880  03A9  0140               	movlb	0	; select bank0
  9881  03AA  00A5               	movwf	LIN_handler@LIN_rxState
  9882  03AB  2CB6               	goto	l5148
  9883  03AC                     l5062:
  9884                           
  9885                           ;mcc_generated_files/LINDrivers/lin_slave.c: 104:             if(EUSART1_is_rx_ready() >
      +                           0){
  9886  03AC  3188  200D  3183   	fcall	_EUSART1_is_rx_ready
  9887  03AF  3A00               	xorlw	0
  9888  03B0  1903               	skipnz
  9889  03B1  0008               	return
  9890                           
  9891                           ;mcc_generated_files/LINDrivers/lin_slave.c: 106:                 LIN_startTimer(15);
  9892  03B2  300F               	movlw	15
  9893  03B3  3188  20F4         	fcall	_LIN_startTimer
  9894                           
  9895                           ;mcc_generated_files/LINDrivers/lin_slave.c: 107:                 LIN_rxInProgress = 1;
  9896  03B5  01A8               	clrf	_LIN_rxInProgress
  9897  03B6  0AA8               	incf	_LIN_rxInProgress,f
  9898                           
  9899                           ;mcc_generated_files/LINDrivers/lin_slave.c: 108:                 LIN_rxState = LIN_RX_B
      +                          REAK;
  9900  03B7  01A5               	clrf	LIN_handler@LIN_rxState
  9901  03B8  0AA5               	incf	LIN_handler@LIN_rxState,f
  9902  03B9  0008               	return
  9903  03BA                     l5070:
  9904                           
  9905                           ;mcc_generated_files/LINDrivers/lin_slave.c: 112:             if(EUSART1_is_rx_ready() >
      +                           0){
  9906  03BA  3188  200D  3183   	fcall	_EUSART1_is_rx_ready
  9907  03BD  3A00               	xorlw	0
  9908  03BE  1903               	skipnz
  9909  03BF  0008               	return
  9910                           
  9911                           ;mcc_generated_files/LINDrivers/lin_slave.c: 113:                 if(LIN_breakCheck() ==
      +                           1){
  9912  03C0  3188  20E5  3183   	fcall	_LIN_breakCheck
  9913  03C3  3A01               	xorlw	1
  9914  03C4  1D03               	skipz
  9915  03C5  2BCD               	goto	l5076
  9916                           
  9917                           ;mcc_generated_files/LINDrivers/lin_slave.c: 114:                     LIN_rxState = LIN_
      +                          RX_SYNC;
  9918  03C6  3002               	movlw	2
  9919  03C7  0142               	movlb	2	; select bank2
  9920  03C8  00C0               	movwf	??_LIN_handler^(0+256)
  9921  03C9  0840               	movf	??_LIN_handler^(0+256),w
  9922  03CA  0140               	movlb	0	; select bank0
  9923  03CB  00A5               	movwf	LIN_handler@LIN_rxState
  9924                           
  9925                           ;mcc_generated_files/LINDrivers/lin_slave.c: 115:                 } else {
  9926  03CC  0008               	return
  9927  03CD                     l5076:
  9928                           
  9929                           ;mcc_generated_files/LINDrivers/lin_slave.c: 116:                     LIN_rxState = LIN_
      +                          RX_ERROR;
  9930  03CD  3008               	movlw	8
  9931  03CE  0142               	movlb	2	; select bank2
  9932  03CF  00C0               	movwf	??_LIN_handler^(0+256)
  9933  03D0  0840               	movf	??_LIN_handler^(0+256),w
  9934  03D1  0140               	movlb	0	; select bank0
  9935  03D2  00A5               	movwf	LIN_handler@LIN_rxState
  9936  03D3  0008               	return
  9937  03D4                     l5078:
  9938                           
  9939                           ;mcc_generated_files/LINDrivers/lin_slave.c: 121:             if(EUSART1_is_rx_ready() >
      +                           0){
  9940  03D4  3188  200D  3183   	fcall	_EUSART1_is_rx_ready
  9941  03D7  3A00               	xorlw	0
  9942  03D8  1903               	skipnz
  9943  03D9  0008               	return
  9944                           
  9945                           ;mcc_generated_files/LINDrivers/lin_slave.c: 122:                 if(EUSART1_Read() == 0
      +                          x55){
  9946  03DA  318A  22AC  3183   	fcall	_EUSART1_Read
  9947  03DD  3A55               	xorlw	85
  9948  03DE  1D03               	skipz
  9949  03DF  2BCD               	goto	l5076
  9950                           
  9951                           ;mcc_generated_files/LINDrivers/lin_slave.c: 123:                     LIN_rxState = LIN_
      +                          RX_PID;
  9952  03E0  3003               	movlw	3
  9953  03E1  0142               	movlb	2	; select bank2
  9954  03E2  00C0               	movwf	??_LIN_handler^(0+256)
  9955  03E3  0840               	movf	??_LIN_handler^(0+256),w
  9956  03E4  0140               	movlb	0	; select bank0
  9957  03E5  00A5               	movwf	LIN_handler@LIN_rxState
  9958                           
  9959                           ;mcc_generated_files/LINDrivers/lin_slave.c: 124:                 } else {
  9960  03E6  0008               	return
  9961  03E7                     l5086:
  9962                           
  9963                           ;mcc_generated_files/LINDrivers/lin_slave.c: 130:             if(EUSART1_is_rx_ready() >
      +                           0){
  9964  03E7  3188  200D  3183   	fcall	_EUSART1_is_rx_ready
  9965  03EA  3A00               	xorlw	0
  9966  03EB  1903               	skipnz
  9967  03EC  0008               	return
  9968                           
  9969                           ;mcc_generated_files/LINDrivers/lin_slave.c: 131:                 LIN_packet.PID = EUSAR
      +                          T1_Read();
  9970  03ED  318A  22AC  3183   	fcall	_EUSART1_Read
  9971  03F0  0142               	movlb	2	; select bank2
  9972  03F1  00C0               	movwf	??_LIN_handler^(0+256)
  9973  03F2  0840               	movf	??_LIN_handler^(0+256),w
  9974  03F3  0141               	movlb	1	; select bank1
  9975  03F4  00B6               	movwf	_LIN_packet^(0+128)
  9976                           
  9977                           ;mcc_generated_files/LINDrivers/lin_slave.c: 134:                 if(LIN_checkPID(LIN_pa
      +                          cket.PID) == 0){
  9978  03F5  0836               	movf	_LIN_packet^(0+128),w
  9979  03F6  3189  2163  3183   	fcall	_LIN_checkPID
  9980  03F9  3A00               	xorlw	0
  9981  03FA  1903               	btfsc	3,2
  9982  03FB  2BCD               	goto	l5076
  9983                           
  9984                           ;mcc_generated_files/LINDrivers/lin_slave.c: 138:                 LIN_packet.type = LIN_
      +                          getFromTable(LIN_packet.PID, TYPE);
  9985  03FC  01CB               	clrf	LIN_getFromTable@param
  9986  03FD  0ACB               	incf	LIN_getFromTable@param,f
  9987  03FE  0141               	movlb	1	; select bank1
  9988  03FF  0836               	movf	_LIN_packet^(0+128),w
  9989  0400  318D  25FF  3183   	fcall	_LIN_getFromTable
  9990  0403  0142               	movlb	2	; select bank2
  9991  0404  00C0               	movwf	??_LIN_handler^(0+256)
  9992  0405  0840               	movf	??_LIN_handler^(0+256),w
  9993  0406  0141               	movlb	1	; select bank1
  9994  0407  00C0               	movwf	(_LIN_packet^(0+128)+10)
  9995                           
  9996                           ;mcc_generated_files/LINDrivers/lin_slave.c: 139:                 if(LIN_packet.type == 
      +                          RECEIVE){
  9997  0408  0340               	decf	(_LIN_packet^(0+128)+10),w
  9998  0409  1D03               	btfss	3,2
  9999  040A  2C21               	goto	l5102
 10000                           
 10001                           ;mcc_generated_files/LINDrivers/lin_slave.c: 140:                     LIN_packet.length 
      +                          = LIN_getFromTable(LIN_packet.PID, LENGTH);
 10002  040B  3002               	movlw	2
 10003  040C  0142               	movlb	2	; select bank2
 10004  040D  00C0               	movwf	??_LIN_handler^(0+256)
 10005  040E  0840               	movf	??_LIN_handler^(0+256),w
 10006  040F  0140               	movlb	0	; select bank0
 10007  0410  00CB               	movwf	LIN_getFromTable@param
 10008  0411  0141               	movlb	1	; select bank1
 10009  0412  0836               	movf	_LIN_packet^(0+128),w
 10010  0413  318D  25FF         	fcall	_LIN_getFromTable
 10011  0415  0142               	movlb	2	; select bank2
 10012  0416  00C1               	movwf	(??_LIN_handler+1)^(0+256)
 10013  0417  0841               	movf	(??_LIN_handler+1)^(0+256),w
 10014  0418  0141               	movlb	1	; select bank1
 10015  0419  00C1               	movwf	(_LIN_packet^(0+128)+11)
 10016                           
 10017                           ;mcc_generated_files/LINDrivers/lin_slave.c: 141:                     LIN_rxState = LIN_
      +                          RX_DATA;
 10018  041A  3004               	movlw	4
 10019  041B  0142               	movlb	2	; select bank2
 10020  041C  00C0               	movwf	??_LIN_handler^(0+256)
 10021  041D  0840               	movf	??_LIN_handler^(0+256),w
 10022  041E  0140               	movlb	0	; select bank0
 10023  041F  00A5               	movwf	LIN_handler@LIN_rxState
 10024                           
 10025                           ;mcc_generated_files/LINDrivers/lin_slave.c: 142:                 }
 10026  0420  0008               	return
 10027  0421                     l5102:
 10028                           
 10029                           ;mcc_generated_files/LINDrivers/lin_slave.c: 144:                     LIN_disableRx();
 10030  0421  3197  27EB         	fcall	_LIN_disableRx
 10031                           
 10032                           ;mcc_generated_files/LINDrivers/lin_slave.c: 145:                     LIN_rxState = LIN_
      +                          RX_TX_DATA;
 10033  0423  3006               	movlw	6
 10034  0424  0142               	movlb	2	; select bank2
 10035  0425  00C0               	movwf	??_LIN_handler^(0+256)
 10036  0426  0840               	movf	??_LIN_handler^(0+256),w
 10037  0427  0140               	movlb	0	; select bank0
 10038  0428  00A5               	movwf	LIN_handler@LIN_rxState
 10039  0429  0008               	return
 10040  042A                     l5106:
 10041                           
 10042                           ;mcc_generated_files/LINDrivers/lin_slave.c: 150:             if(EUSART1_is_rx_ready() >
      +                           0){
 10043  042A  3188  200D  3183   	fcall	_EUSART1_is_rx_ready
 10044  042D  3A00               	xorlw	0
 10045  042E  1903               	skipnz
 10046  042F  0008               	return
 10047                           
 10048                           ;mcc_generated_files/LINDrivers/lin_slave.c: 151:                 LIN_packet.data[rxData
      +                          Index] = EUSART1_Read();
 10049  0430  318A  22AC  3183   	fcall	_EUSART1_Read
 10050  0433  0142               	movlb	2	; select bank2
 10051  0434  00C0               	movwf	??_LIN_handler^(0+256)
 10052  0435  0140               	movlb	0	; select bank0
 10053  0436  0824               	movf	LIN_handler@rxDataIndex,w
 10054  0437  3EB7               	addlw	(low ((_LIN_packet| 0+1)))& (0+255)
 10055  0438  0086               	movwf	6
 10056  0439  0187               	clrf	7
 10057  043A  0142               	movlb	2	; select bank2
 10058  043B  0840               	movf	??_LIN_handler^(0+256),w
 10059  043C  0081               	movwf	1
 10060                           
 10061                           ;mcc_generated_files/LINDrivers/lin_slave.c: 152:                 if(++rxDataIndex >= LI
      +                          N_packet.length){
 10062  043D  0141               	movlb	1	; select bank1
 10063  043E  0841               	movf	(_LIN_packet^(0+128)+11),w
 10064  043F  0142               	movlb	2	; select bank2
 10065  0440  00C0               	movwf	??_LIN_handler^(0+256)
 10066  0441  01C1               	clrf	(??_LIN_handler^(0+256)+1)
 10067  0442  1BC0               	btfsc	??_LIN_handler^(0+256),7
 10068  0443  03C1               	decf	(??_LIN_handler^(0+256)+1),f
 10069  0444  3001               	movlw	1
 10070  0445  00C2               	movwf	(??_LIN_handler+2)^(0+256)
 10071  0446  0842               	movf	(??_LIN_handler+2)^(0+256),w
 10072  0447  0140               	movlb	0	; select bank0
 10073  0448  07A4               	addwf	LIN_handler@rxDataIndex,f
 10074  0449  0142               	movlb	2	; select bank2
 10075  044A  0841               	movf	(??_LIN_handler+1)^(0+256),w
 10076  044B  3A80               	xorlw	128
 10077  044C  3C80               	sublw	128
 10078  044D  1D03               	skipz
 10079  044E  2C52               	goto	u3065
 10080  044F  0840               	movf	??_LIN_handler^(0+256),w
 10081  0450  0140               	movlb	0	; select bank0
 10082  0451  0224               	subwf	LIN_handler@rxDataIndex,w
 10083  0452                     u3065:
 10084  0452  1C03               	skipc
 10085  0453  0008               	return
 10086                           
 10087                           ;mcc_generated_files/LINDrivers/lin_slave.c: 154:                     rxDataIndex = 0;
 10088  0454  0140               	movlb	0	; select bank0
 10089  0455  01A4               	clrf	LIN_handler@rxDataIndex
 10090                           
 10091                           ;mcc_generated_files/LINDrivers/lin_slave.c: 155:                     LIN_rxState = LIN_
      +                          RX_CHECKSUM;
 10092  0456  3005               	movlw	5
 10093  0457  0142               	movlb	2	; select bank2
 10094  0458  00C0               	movwf	??_LIN_handler^(0+256)
 10095  0459  0840               	movf	??_LIN_handler^(0+256),w
 10096  045A  0140               	movlb	0	; select bank0
 10097  045B  00A5               	movwf	LIN_handler@LIN_rxState
 10098  045C  0008               	return
 10099  045D                     l5116:
 10100                           
 10101                           ;mcc_generated_files/LINDrivers/lin_slave.c: 160:             if(EUSART1_is_rx_ready() >
      +                           0){
 10102  045D  3188  200D  3183   	fcall	_EUSART1_is_rx_ready
 10103  0460  3A00               	xorlw	0
 10104  0461  1903               	skipnz
 10105  0462  0008               	return
 10106                           
 10107                           ;mcc_generated_files/LINDrivers/lin_slave.c: 161:                 LIN_packet.checksum = 
      +                          EUSART1_Read();
 10108  0463  318A  22AC  3183   	fcall	_EUSART1_Read
 10109  0466  0142               	movlb	2	; select bank2
 10110  0467  00C0               	movwf	??_LIN_handler^(0+256)
 10111  0468  0840               	movf	??_LIN_handler^(0+256),w
 10112  0469  0141               	movlb	1	; select bank1
 10113  046A  00BF               	movwf	(_LIN_packet^(0+128)+9)
 10114                           
 10115                           ;mcc_generated_files/LINDrivers/lin_slave.c: 162:                 if(LIN_packet.checksum
      +                           != LIN_getChecksum(LIN_packet.length, LIN_packet.PID, LIN_packet.data)) {
 10116  046B  0836               	movf	_LIN_packet^(0+128),w
 10117  046C  0142               	movlb	2	; select bank2
 10118  046D  00C0               	movwf	??_LIN_handler^(0+256)
 10119  046E  0840               	movf	??_LIN_handler^(0+256),w
 10120  046F  0140               	movlb	0	; select bank0
 10121  0470  00CB               	movwf	LIN_getChecksum@pid
 10122  0471  30B7               	movlw	(low ((_LIN_packet| 0+1)))& (0+255)
 10123  0472  0142               	movlb	2	; select bank2
 10124  0473  00C1               	movwf	(??_LIN_handler+1)^(0+256)
 10125  0474  0841               	movf	(??_LIN_handler+1)^(0+256),w
 10126  0475  0140               	movlb	0	; select bank0
 10127  0476  00CC               	movwf	LIN_getChecksum@data
 10128  0477  0141               	movlb	1	; select bank1
 10129  0478  0841               	movf	(_LIN_packet^(0+128)+11),w
 10130  0479  318B  2387  3183   	fcall	_LIN_getChecksum
 10131  047C  0141               	movlb	1	; select bank1
 10132  047D  063F               	xorwf	(_LIN_packet^(0+128)+9),w
 10133  047E  1D03               	btfss	3,2
 10134  047F  2BCD               	goto	l5076
 10135                           
 10136                           ;mcc_generated_files/LINDrivers/lin_slave.c: 166:                     LIN_rxState = LIN_
      +                          RX_RDY;
 10137  0480  3007               	movlw	7
 10138  0481  0142               	movlb	2	; select bank2
 10139  0482  00C0               	movwf	??_LIN_handler^(0+256)
 10140  0483  0840               	movf	??_LIN_handler^(0+256),w
 10141  0484  0140               	movlb	0	; select bank0
 10142  0485  00A5               	movwf	LIN_handler@LIN_rxState
 10143  0486  0008               	return
 10144  0487                     l5124:
 10145                           
 10146                           ;mcc_generated_files/LINDrivers/lin_slave.c: 171:             LIN_queuePacket(LIN_packet
      +                          .PID);
 10147  0487  0141               	movlb	1	; select bank1
 10148  0488  0836               	movf	_LIN_packet^(0+128),w
 10149  0489  318E  26EC  3183   	fcall	_LIN_queuePacket
 10150                           
 10151                           ;mcc_generated_files/LINDrivers/lin_slave.c: 172:             LIN_rxState = LIN_RX_RDY;
 10152  048C  3007               	movlw	7
 10153  048D  0142               	movlb	2	; select bank2
 10154  048E  00C0               	movwf	??_LIN_handler^(0+256)
 10155  048F  0840               	movf	??_LIN_handler^(0+256),w
 10156  0490  0140               	movlb	0	; select bank0
 10157  0491  00A5               	movwf	LIN_handler@LIN_rxState
 10158  0492                     l5128:
 10159                           
 10160                           ;mcc_generated_files/LINDrivers/lin_slave.c: 174:             LIN_processData();
 10161  0492  0142               	movlb	2	; select bank2
 10162  0493  086B               	movf	(_LIN_processData+1)^(0+256),w
 10163  0494  008A               	movwf	10
 10164  0495  086A               	movf	_LIN_processData^(0+256),w
 10165  0496  000A               	callw
 10166  0497  3183               	pagesel	$
 10167  0498                     l5130:
 10168                           
 10169                           ;mcc_generated_files/LINDrivers/lin_slave.c: 176:             LIN_stopTimer();
 10170  0498  3197  27F5  3183   	fcall	_LIN_stopTimer
 10171                           
 10172                           ;mcc_generated_files/LINDrivers/lin_slave.c: 177:             rxDataIndex = 0;
 10173  049B  01A4               	clrf	LIN_handler@rxDataIndex
 10174                           
 10175                           ;mcc_generated_files/LINDrivers/lin_slave.c: 178:             LIN_rxInProgress = 0;
 10176  049C  01A8               	clrf	_LIN_rxInProgress
 10177                           
 10178                           ;mcc_generated_files/LINDrivers/lin_slave.c: 179:             memset(LIN_packet.rawPacke
      +                          t, 0, sizeof(LIN_packet.rawPacket));
 10179  049D  3000               	movlw	0
 10180  049E  00CB               	movwf	memset@c
 10181  049F  00CC               	movwf	memset@c+1
 10182  04A0  300D               	movlw	13
 10183  04A1  00CD               	movwf	memset@n
 10184  04A2  3000               	movlw	0
 10185  04A3  00CE               	movwf	memset@n+1
 10186  04A4  30B6               	movlw	(low (_LIN_packet| 0))& (0+255)
 10187  04A5  3187  274E  3183   	fcall	_memset
 10188  04A8                     l5138:
 10189                           
 10190                           ;mcc_generated_files/LINDrivers/lin_slave.c: 181:             if(TX1STAbits.TRMT){
 10191  04A8  0142               	movlb	2	; select bank2
 10192  04A9  1C9E               	btfss	30,1	;volatile
 10193  04AA  2CB0               	goto	l5144
 10194                           
 10195                           ;mcc_generated_files/LINDrivers/lin_slave.c: 182:                 LIN_enableRx();
 10196  04AB  3197  27F0         	fcall	_LIN_enableRx
 10197                           
 10198                           ;mcc_generated_files/LINDrivers/lin_slave.c: 183:                 LIN_rxState = LIN_RX_I
      +                          DLE;
 10199  04AD  0140               	movlb	0	; select bank0
 10200  04AE  01A5               	clrf	LIN_handler@LIN_rxState
 10201                           
 10202                           ;mcc_generated_files/LINDrivers/lin_slave.c: 184:             } else {
 10203  04AF  0008               	return
 10204  04B0                     l5144:
 10205                           
 10206                           ;mcc_generated_files/LINDrivers/lin_slave.c: 185:                 LIN_rxState = LIN_RX_W
      +                          AIT;
 10207  04B0  3009               	movlw	9
 10208  04B1  00C0               	movwf	??_LIN_handler^(0+256)
 10209  04B2  0840               	movf	??_LIN_handler^(0+256),w
 10210  04B3  0140               	movlb	0	; select bank0
 10211  04B4  00A5               	movwf	LIN_handler@LIN_rxState
 10212  04B5  0008               	return
 10213  04B6                     l5148:
 10214  04B6  0825               	movf	LIN_handler@LIN_rxState,w
 10215  04B7  0142               	movlb	2	; select bank2
 10216  04B8  00C0               	movwf	??_LIN_handler^(0+256)
 10217  04B9  01C1               	clrf	(??_LIN_handler^(0+256)+1)
 10218                           
 10219                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10220                           ; Switch size 1, requested type "simple"
 10221                           ; Number of cases is 1, Range of values is 0 to 0
 10222                           ; switch strategies available:
 10223                           ; Name         Instructions Cycles
 10224                           ; simple_byte            4     3 (average)
 10225                           ; direct_byte            8     6 (fixed)
 10226                           ; jumptable            260     6 (fixed)
 10227                           ;	Chosen strategy is simple_byte
 10228  04BA  0841               	movf	(??_LIN_handler+1)^(0+256),w
 10229  04BB  3A00               	xorlw	0	; case 0
 10230  04BC  1903               	skipnz
 10231  04BD  2CBF               	goto	l5494
 10232  04BE  2CDF               	goto	l273
 10233  04BF                     l5494:
 10234                           
 10235                           ; Switch size 1, requested type "simple"
 10236                           ; Number of cases is 10, Range of values is 0 to 9
 10237                           ; switch strategies available:
 10238                           ; Name         Instructions Cycles
 10239                           ; direct_byte           26     6 (fixed)
 10240                           ; simple_byte           31    16 (average)
 10241                           ; jumptable            260     6 (fixed)
 10242                           ;	Chosen strategy is simple_byte
 10243  04BF  0840               	movf	??_LIN_handler^(0+256),w
 10244  04C0  3A00               	xorlw	0	; case 0
 10245  04C1  1903               	skipnz
 10246  04C2  2BAC               	goto	l5062
 10247  04C3  3A01               	xorlw	1	; case 1
 10248  04C4  1903               	skipnz
 10249  04C5  2BBA               	goto	l5070
 10250  04C6  3A03               	xorlw	3	; case 2
 10251  04C7  1903               	skipnz
 10252  04C8  2BD4               	goto	l5078
 10253  04C9  3A01               	xorlw	1	; case 3
 10254  04CA  1903               	skipnz
 10255  04CB  2BE7               	goto	l5086
 10256  04CC  3A07               	xorlw	7	; case 4
 10257  04CD  1903               	skipnz
 10258  04CE  2C2A               	goto	l5106
 10259  04CF  3A01               	xorlw	1	; case 5
 10260  04D0  1903               	skipnz
 10261  04D1  2C5D               	goto	l5116
 10262  04D2  3A03               	xorlw	3	; case 6
 10263  04D3  1903               	skipnz
 10264  04D4  2C87               	goto	l5124
 10265  04D5  3A01               	xorlw	1	; case 7
 10266  04D6  1903               	skipnz
 10267  04D7  2C92               	goto	l5128
 10268  04D8  3A0F               	xorlw	15	; case 8
 10269  04D9  1903               	skipnz
 10270  04DA  2C98               	goto	l5130
 10271  04DB  3A01               	xorlw	1	; case 9
 10272  04DC  1903               	skipnz
 10273  04DD  2CA8               	goto	l5138
 10274  04DE  2CDF               	goto	l273
 10275  04DF                     l273:
 10276  04DF  0008               	return
 10277  04E0                     __end_of_LIN_handler:
 10278                           
 10279                           	psect	text26
 10280  04E0                     __ptext26:	
 10281 ;; *************** function _processLIN *****************
 10282 ;; Defined at:
 10283 ;;		line 51 in file "mcc_generated_files/LINDrivers/lin_app.c"
 10284 ;; Parameters:    Size  Location     Type
 10285 ;;		None
 10286 ;; Auto vars:     Size  Location     Type
 10287 ;;  tempRxData      8   19[BANK0 ] unsigned char [8]
 10288 ;;  cmd             1   18[BANK0 ] unsigned char 
 10289 ;; Return value:  Size  Location     Type
 10290 ;;                  1    wreg      void 
 10291 ;; Registers used:
 10292 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10293 ;; Tracked objects:
 10294 ;;		On entry : 3F/2
 10295 ;;		On exit  : 3E/0
 10296 ;;		Unchanged: 0/0
 10297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10299 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10300 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10301 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10302 ;;Total ram usage:       14 bytes
 10303 ;; Hardware stack levels used: 1
 10304 ;; Hardware stack levels required when called: 8
 10305 ;; This function calls:
 10306 ;;		_CmdOutput
 10307 ;;		_EFuseInit
 10308 ;;		_LIN_getPacket
 10309 ;; This function is called by:
 10310 ;;		_LIN_Slave_Initialize
 10311 ;;		_LIN_handler
 10312 ;; This function uses a non-reentrant model
 10313 ;;
 10314                           
 10315                           
 10316                           ;psect for function _processLIN
 10317  04E0                     _processLIN:
 10318                           
 10319                           ;mcc_generated_files/LINDrivers/lin_app.c: 52:     uint8_t tempRxData[8];;mcc_generated_
      +                          files/LINDrivers/lin_app.c: 53:     uint8_t cmd;;mcc_generated_files/LINDrivers/lin_app.
      +                          c: 55:     cmd = LIN_getPacket(tempRxData);
 10320                           
 10321                           ;incstack = 0
 10322                           ; Regs used in _processLIN: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10323  04E0  305E               	movlw	(low (processLIN@tempRxData| 0))& (0+255)
 10324  04E1  318A  221C  3184   	fcall	_LIN_getPacket
 10325  04E4  00D8               	movwf	??_processLIN
 10326  04E5  0858               	movf	??_processLIN,w
 10327  04E6  00DD               	movwf	processLIN@cmd
 10328                           
 10329                           ;mcc_generated_files/LINDrivers/lin_app.c: 56:     switch(cmd){
 10330  04E7  2D79               	goto	l4758
 10331  04E8                     l4726:
 10332                           
 10333                           ;mcc_generated_files/LINDrivers/lin_app.c: 58:             CmdOutput(tempRxData[0]);
 10334  04E8  085E               	movf	processLIN@tempRxData,w
 10335  04E9  318D  25A2         	fcall	_CmdOutput
 10336                           
 10337                           ;mcc_generated_files/LINDrivers/lin_app.c: 59:             break;
 10338  04EB  0008               	return
 10339  04EC                     l4728:
 10340                           
 10341                           ;mcc_generated_files/LINDrivers/lin_app.c: 61:             triggerType = tempRxData[0];
 10342  04EC  085E               	movf	processLIN@tempRxData,w
 10343  04ED  00D8               	movwf	??_processLIN
 10344  04EE  0858               	movf	??_processLIN,w
 10345  04EF  00AE               	movwf	_triggerType
 10346                           
 10347                           ;mcc_generated_files/LINDrivers/lin_app.c: 62:             break;
 10348  04F0  0008               	return
 10349  04F1                     l4730:
 10350                           
 10351                           ;mcc_generated_files/LINDrivers/lin_app.c: 64:             CmdOutput(0);
 10352  04F1  3000               	movlw	0
 10353  04F2  318D  25A2         	fcall	_CmdOutput
 10354  04F4  1319               	bcf	25,6	;volatile
 10355  04F5  0008               	return
 10356  04F6                     l4734:
 10357                           
 10358                           ;mcc_generated_files/LINDrivers/lin_app.c: 68:             tj_limit = tempRxData[0];
 10359  04F6  085E               	movf	processLIN@tempRxData,w
 10360  04F7  00D8               	movwf	??_processLIN
 10361  04F8  0858               	movf	??_processLIN,w
 10362  04F9  00EB               	movwf	_tj_limit
 10363                           
 10364                           ;mcc_generated_files/LINDrivers/lin_app.c: 69:             break;
 10365  04FA  0008               	return
 10366  04FB                     l4736:
 10367                           
 10368                           ;mcc_generated_files/LINDrivers/lin_app.c: 71:             factor_rdson_rthjs = (uint16_
      +                          t) (tempRxData[1] << 8) | tempRxData[0];
 10369  04FB  085E               	movf	processLIN@tempRxData,w
 10370  04FC  00D8               	movwf	??_processLIN
 10371  04FD  01D9               	clrf	??_processLIN+1
 10372  04FE  085F               	movf	processLIN@tempRxData+1,w
 10373  04FF  00DA               	movwf	??_processLIN+2
 10374  0500  01DB               	clrf	??_processLIN+3
 10375  0501  085A               	movf	??_processLIN+2,w
 10376  0502  00DB               	movwf	??_processLIN+3
 10377  0503  01DA               	clrf	??_processLIN+2
 10378  0504  0858               	movf	??_processLIN,w
 10379  0505  045A               	iorwf	??_processLIN+2,w
 10380  0506  0141               	movlb	1	; select bank1
 10381  0507  00E9               	movwf	_factor_rdson_rthjs^(0+128)
 10382  0508  0140               	movlb	0	; select bank0
 10383  0509  0859               	movf	??_processLIN+1,w
 10384  050A  045B               	iorwf	??_processLIN+3,w
 10385  050B  0141               	movlb	1	; select bank1
 10386  050C  00EA               	movwf	(_factor_rdson_rthjs+1)^(0+128)
 10387                           
 10388                           ;mcc_generated_files/LINDrivers/lin_app.c: 72:             break;
 10389  050D  0008               	return
 10390  050E                     l4738:
 10391                           
 10392                           ;mcc_generated_files/LINDrivers/lin_app.c: 74:             factor_rdson_rthsa = (uint16_
      +                          t) (tempRxData[1] << 8) | tempRxData[0];
 10393  050E  085E               	movf	processLIN@tempRxData,w
 10394  050F  00D8               	movwf	??_processLIN
 10395  0510  01D9               	clrf	??_processLIN+1
 10396  0511  085F               	movf	processLIN@tempRxData+1,w
 10397  0512  00DA               	movwf	??_processLIN+2
 10398  0513  01DB               	clrf	??_processLIN+3
 10399  0514  085A               	movf	??_processLIN+2,w
 10400  0515  00DB               	movwf	??_processLIN+3
 10401  0516  01DA               	clrf	??_processLIN+2
 10402  0517  0858               	movf	??_processLIN,w
 10403  0518  045A               	iorwf	??_processLIN+2,w
 10404  0519  0141               	movlb	1	; select bank1
 10405  051A  00E7               	movwf	_factor_rdson_rthsa^(0+128)
 10406  051B  0140               	movlb	0	; select bank0
 10407  051C  0859               	movf	??_processLIN+1,w
 10408  051D  045B               	iorwf	??_processLIN+3,w
 10409  051E  0141               	movlb	1	; select bank1
 10410  051F  00E8               	movwf	(_factor_rdson_rthsa+1)^(0+128)
 10411                           
 10412                           ;mcc_generated_files/LINDrivers/lin_app.c: 75:             break;
 10413  0520  0008               	return
 10414  0521                     l4740:
 10415                           
 10416                           ;mcc_generated_files/LINDrivers/lin_app.c: 77:             current2counts_squared = (uin
      +                          t16_t) (tempRxData[1] << 8) | tempRxData[0];
 10417  0521  085E               	movf	processLIN@tempRxData,w
 10418  0522  00D8               	movwf	??_processLIN
 10419  0523  01D9               	clrf	??_processLIN+1
 10420  0524  085F               	movf	processLIN@tempRxData+1,w
 10421  0525  00DA               	movwf	??_processLIN+2
 10422  0526  01DB               	clrf	??_processLIN+3
 10423  0527  085A               	movf	??_processLIN+2,w
 10424  0528  00DB               	movwf	??_processLIN+3
 10425  0529  01DA               	clrf	??_processLIN+2
 10426  052A  0858               	movf	??_processLIN,w
 10427  052B  045A               	iorwf	??_processLIN+2,w
 10428  052C  0141               	movlb	1	; select bank1
 10429  052D  00E5               	movwf	_current2counts_squared^(0+128)
 10430  052E  0140               	movlb	0	; select bank0
 10431  052F  0859               	movf	??_processLIN+1,w
 10432  0530  045B               	iorwf	??_processLIN+3,w
 10433  0531  0141               	movlb	1	; select bank1
 10434  0532  00E6               	movwf	(_current2counts_squared+1)^(0+128)
 10435                           
 10436                           ;mcc_generated_files/LINDrivers/lin_app.c: 78:             break;
 10437  0533  0008               	return
 10438  0534                     l4742:
 10439                           
 10440                           ;mcc_generated_files/LINDrivers/lin_app.c: 80:             isense_max = (uint16_t) (temp
      +                          RxData[1] << 8) | tempRxData[0];
 10441  0534  085E               	movf	processLIN@tempRxData,w
 10442  0535  00D8               	movwf	??_processLIN
 10443  0536  01D9               	clrf	??_processLIN+1
 10444  0537  085F               	movf	processLIN@tempRxData+1,w
 10445  0538  00DA               	movwf	??_processLIN+2
 10446  0539  01DB               	clrf	??_processLIN+3
 10447  053A  085A               	movf	??_processLIN+2,w
 10448  053B  00DB               	movwf	??_processLIN+3
 10449  053C  01DA               	clrf	??_processLIN+2
 10450  053D  0858               	movf	??_processLIN,w
 10451  053E  045A               	iorwf	??_processLIN+2,w
 10452  053F  00E6               	movwf	_isense_max
 10453  0540  0859               	movf	??_processLIN+1,w
 10454  0541  045B               	iorwf	??_processLIN+3,w
 10455  0542  00E7               	movwf	_isense_max+1
 10456                           
 10457                           ;mcc_generated_files/LINDrivers/lin_app.c: 81:             break;
 10458  0543  0008               	return
 10459  0544                     l4744:
 10460                           
 10461                           ;mcc_generated_files/LINDrivers/lin_app.c: 83:             dac_i_hw_trip = tempRxData[0]
      +                          ;
 10462  0544  085E               	movf	processLIN@tempRxData,w
 10463  0545  00D8               	movwf	??_processLIN
 10464  0546  0858               	movf	??_processLIN,w
 10465  0547  00EA               	movwf	_dac_i_hw_trip
 10466                           
 10467                           ;mcc_generated_files/LINDrivers/lin_app.c: 84:             EFuseInit();
 10468  0548  318A  223D         	fcall	_EFuseInit
 10469                           
 10470                           ;mcc_generated_files/LINDrivers/lin_app.c: 85:             break;
 10471  054A  0008               	return
 10472  054B                     l4748:
 10473                           
 10474                           ;mcc_generated_files/LINDrivers/lin_app.c: 87:             b1_coef = tempRxData[0];
 10475  054B  085E               	movf	processLIN@tempRxData,w
 10476  054C  00D8               	movwf	??_processLIN
 10477  054D  0858               	movf	??_processLIN,w
 10478  054E  00E9               	movwf	_b1_coef
 10479                           
 10480                           ;mcc_generated_files/LINDrivers/lin_app.c: 88:             a1_coef = 0xffff - (2 * b1_co
      +                          ef) + 1;
 10481  054F  0869               	movf	_b1_coef,w
 10482  0550  00D8               	movwf	??_processLIN
 10483  0551  01D9               	clrf	??_processLIN+1
 10484  0552  35D8               	lslf	??_processLIN,f
 10485  0553  0DD9               	rlf	??_processLIN+1,f
 10486  0554  09D8               	comf	??_processLIN,f
 10487  0555  09D9               	comf	??_processLIN+1,f
 10488  0556  0AD8               	incf	??_processLIN,f
 10489  0557  1903               	skipnz
 10490  0558  0AD9               	incf	??_processLIN+1,f
 10491  0559  0858               	movf	??_processLIN,w
 10492  055A  0141               	movlb	1	; select bank1
 10493  055B  00E3               	movwf	_a1_coef^(0+128)
 10494  055C  0140               	movlb	0	; select bank0
 10495  055D  0859               	movf	??_processLIN+1,w
 10496  055E  0141               	movlb	1	; select bank1
 10497  055F  00E4               	movwf	(_a1_coef+1)^(0+128)
 10498                           
 10499                           ;mcc_generated_files/LINDrivers/lin_app.c: 89:             break;
 10500  0560  0008               	return
 10501  0561                     l4752:
 10502                           
 10503                           ;mcc_generated_files/LINDrivers/lin_app.c: 91:             reduced_drive_time = tempRxDa
      +                          ta[0];
 10504  0561  085E               	movf	processLIN@tempRxData,w
 10505  0562  00D8               	movwf	??_processLIN
 10506  0563  0858               	movf	??_processLIN,w
 10507  0564  00AD               	movwf	_reduced_drive_time
 10508                           
 10509                           ;mcc_generated_files/LINDrivers/lin_app.c: 92:             break;
 10510  0565  0008               	return
 10511  0566                     l4754:
 10512                           
 10513                           ;mcc_generated_files/LINDrivers/lin_app.c: 94:             tcc_sample_time = (uint16_t) 
      +                          (tempRxData[1] << 8) | tempRxData[0];
 10514  0566  085E               	movf	processLIN@tempRxData,w
 10515  0567  00D8               	movwf	??_processLIN
 10516  0568  01D9               	clrf	??_processLIN+1
 10517  0569  085F               	movf	processLIN@tempRxData+1,w
 10518  056A  00DA               	movwf	??_processLIN+2
 10519  056B  01DB               	clrf	??_processLIN+3
 10520  056C  085A               	movf	??_processLIN+2,w
 10521  056D  00DB               	movwf	??_processLIN+3
 10522  056E  01DA               	clrf	??_processLIN+2
 10523  056F  0858               	movf	??_processLIN,w
 10524  0570  045A               	iorwf	??_processLIN+2,w
 10525  0571  0141               	movlb	1	; select bank1
 10526  0572  00E1               	movwf	_tcc_sample_time^(0+128)
 10527  0573  0140               	movlb	0	; select bank0
 10528  0574  0859               	movf	??_processLIN+1,w
 10529  0575  045B               	iorwf	??_processLIN+3,w
 10530  0576  0141               	movlb	1	; select bank1
 10531  0577  00E2               	movwf	(_tcc_sample_time+1)^(0+128)
 10532                           
 10533                           ;mcc_generated_files/LINDrivers/lin_app.c: 95:             break;
 10534  0578  0008               	return
 10535  0579                     l4758:
 10536  0579  085D               	movf	processLIN@cmd,w
 10537  057A  00D8               	movwf	??_processLIN
 10538  057B  01D9               	clrf	??_processLIN+1
 10539                           
 10540                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10541                           ; Switch size 1, requested type "simple"
 10542                           ; Number of cases is 1, Range of values is 0 to 0
 10543                           ; switch strategies available:
 10544                           ; Name         Instructions Cycles
 10545                           ; simple_byte            4     3 (average)
 10546                           ; direct_byte            8     6 (fixed)
 10547                           ; jumptable            260     6 (fixed)
 10548                           ;	Chosen strategy is simple_byte
 10549  057C  0859               	movf	??_processLIN+1,w
 10550  057D  3A00               	xorlw	0	; case 0
 10551  057E  1903               	skipnz
 10552  057F  2D81               	goto	l5496
 10553  0580  2DD7               	goto	l159
 10554  0581                     l5496:
 10555                           
 10556                           ; Switch size 1, requested type "simple"
 10557                           ; Number of cases is 28, Range of values is 0 to 47
 10558                           ; switch strategies available:
 10559                           ; Name         Instructions Cycles
 10560                           ; simple_byte           85    43 (average)
 10561                           ; direct_byte          102     6 (fixed)
 10562                           ; jumptable            260     6 (fixed)
 10563                           ;	Chosen strategy is simple_byte
 10564  0581  0858               	movf	??_processLIN,w
 10565  0582  3A00               	xorlw	0	; case 0
 10566  0583  1903               	skipnz
 10567  0584  2CE8               	goto	l4726
 10568  0585  3A01               	xorlw	1	; case 1
 10569  0586  1903               	skipnz
 10570  0587  2CEC               	goto	l4728
 10571  0588  3A03               	xorlw	3	; case 2
 10572  0589  1903               	skipnz
 10573  058A  2CF1               	goto	l4730
 10574  058B  3A12               	xorlw	18	; case 16
 10575  058C  1903               	skipnz
 10576  058D  2CF6               	goto	l4734
 10577  058E  3A01               	xorlw	1	; case 17
 10578  058F  1903               	skipnz
 10579  0590  2CFB               	goto	l4736
 10580  0591  3A03               	xorlw	3	; case 18
 10581  0592  1903               	skipnz
 10582  0593  2D0E               	goto	l4738
 10583  0594  3A01               	xorlw	1	; case 19
 10584  0595  1903               	skipnz
 10585  0596  2D21               	goto	l4740
 10586  0597  3A07               	xorlw	7	; case 20
 10587  0598  1903               	skipnz
 10588  0599  2D34               	goto	l4742
 10589  059A  3A01               	xorlw	1	; case 21
 10590  059B  1903               	skipnz
 10591  059C  2D44               	goto	l4744
 10592  059D  3A03               	xorlw	3	; case 22
 10593  059E  1903               	skipnz
 10594  059F  2D4B               	goto	l4748
 10595  05A0  3A01               	xorlw	1	; case 23
 10596  05A1  1903               	skipnz
 10597  05A2  2D61               	goto	l4752
 10598  05A3  3A0F               	xorlw	15	; case 24
 10599  05A4  1903               	skipnz
 10600  05A5  2D66               	goto	l4754
 10601  05A6  3A38               	xorlw	56	; case 32
 10602  05A7  1903               	skipnz
 10603  05A8  2DD7               	goto	l159
 10604  05A9  3A01               	xorlw	1	; case 33
 10605  05AA  1903               	skipnz
 10606  05AB  2DD7               	goto	l159
 10607  05AC  3A03               	xorlw	3	; case 34
 10608  05AD  1903               	skipnz
 10609  05AE  2DD7               	goto	l159
 10610  05AF  3A01               	xorlw	1	; case 35
 10611  05B0  1903               	skipnz
 10612  05B1  2DD7               	goto	l159
 10613  05B2  3A07               	xorlw	7	; case 36
 10614  05B3  1903               	skipnz
 10615  05B4  2DD7               	goto	l159
 10616  05B5  3A01               	xorlw	1	; case 37
 10617  05B6  1903               	skipnz
 10618  05B7  2DD7               	goto	l159
 10619  05B8  3A03               	xorlw	3	; case 38
 10620  05B9  1903               	skipnz
 10621  05BA  2DD7               	goto	l159
 10622  05BB  3A01               	xorlw	1	; case 39
 10623  05BC  1903               	skipnz
 10624  05BD  2DD7               	goto	l159
 10625  05BE  3A0F               	xorlw	15	; case 40
 10626  05BF  1903               	skipnz
 10627  05C0  2DD7               	goto	l159
 10628  05C1  3A01               	xorlw	1	; case 41
 10629  05C2  1903               	skipnz
 10630  05C3  2DD7               	goto	l159
 10631  05C4  3A03               	xorlw	3	; case 42
 10632  05C5  1903               	skipnz
 10633  05C6  2DD7               	goto	l159
 10634  05C7  3A01               	xorlw	1	; case 43
 10635  05C8  1903               	skipnz
 10636  05C9  2DD7               	goto	l159
 10637  05CA  3A07               	xorlw	7	; case 44
 10638  05CB  1903               	skipnz
 10639  05CC  2DD7               	goto	l159
 10640  05CD  3A01               	xorlw	1	; case 45
 10641  05CE  1903               	skipnz
 10642  05CF  2DD7               	goto	l159
 10643  05D0  3A03               	xorlw	3	; case 46
 10644  05D1  1903               	skipnz
 10645  05D2  2DD7               	goto	l159
 10646  05D3  3A01               	xorlw	1	; case 47
 10647  05D4  1903               	skipnz
 10648  05D5  2DD7               	goto	l159
 10649  05D6  2DD7               	goto	l159
 10650  05D7                     l159:
 10651  05D7  0008               	return
 10652  05D8                     __end_of_processLIN:
 10653                           
 10654                           	psect	text27
 10655  0A1C                     __ptext27:	
 10656 ;; *************** function _LIN_getPacket *****************
 10657 ;; Defined at:
 10658 ;;		line 202 in file "mcc_generated_files/LINDrivers/lin_slave.c"
 10659 ;; Parameters:    Size  Location     Type
 10660 ;;  data            1    wreg     PTR unsigned char 
 10661 ;;		 -> processLIN@tempRxData(8), 
 10662 ;; Auto vars:     Size  Location     Type
 10663 ;;  data            1   11[BANK0 ] PTR unsigned char 
 10664 ;;		 -> processLIN@tempRxData(8), 
 10665 ;;  cmd             1   12[BANK0 ] unsigned char 
 10666 ;; Return value:  Size  Location     Type
 10667 ;;                  1    wreg      unsigned char 
 10668 ;; Registers used:
 10669 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10670 ;; Tracked objects:
 10671 ;;		On entry : 3F/2
 10672 ;;		On exit  : 3F/0
 10673 ;;		Unchanged: 0/0
 10674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10676 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10677 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10678 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10679 ;;Total ram usage:        3 bytes
 10680 ;; Hardware stack levels used: 1
 10681 ;; Hardware stack levels required when called: 6
 10682 ;; This function calls:
 10683 ;;		_memcpy
 10684 ;;		_memset
 10685 ;; This function is called by:
 10686 ;;		_processLIN
 10687 ;; This function uses a non-reentrant model
 10688 ;;
 10689                           
 10690                           
 10691                           ;psect for function _LIN_getPacket
 10692  0A1C                     _LIN_getPacket:
 10693                           
 10694                           ;incstack = 0
 10695                           ; Regs used in _LIN_getPacket: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10696                           ;LIN_getPacket@data stored from wreg
 10697  0A1C  0140               	movlb	0	; select bank0
 10698  0A1D  00D6               	movwf	LIN_getPacket@data
 10699                           
 10700                           ;mcc_generated_files/LINDrivers/lin_slave.c: 203:     uint8_t cmd = LIN_packet.PID & 0x3
      +                          F;
 10701  0A1E  0141               	movlb	1	; select bank1
 10702  0A1F  0836               	movf	_LIN_packet^(0+128),w
 10703  0A20  393F               	andlw	63
 10704  0A21  0140               	movlb	0	; select bank0
 10705  0A22  00D5               	movwf	??_LIN_getPacket
 10706  0A23  0855               	movf	??_LIN_getPacket,w
 10707  0A24  00D7               	movwf	LIN_getPacket@cmd
 10708                           
 10709                           ;mcc_generated_files/LINDrivers/lin_slave.c: 205:     memcpy(data, LIN_packet.data, size
      +                          of(LIN_packet.data));
 10710  0A25  30B7               	movlw	low (_LIN_packet+1)
 10711  0A26  00CB               	movwf	memcpy@s1
 10712  0A27  3000               	movlw	high (_LIN_packet+1)
 10713  0A28  00CC               	movwf	memcpy@s1+1
 10714  0A29  3008               	movlw	8
 10715  0A2A  00CD               	movwf	memcpy@n
 10716  0A2B  3000               	movlw	0
 10717  0A2C  00CE               	movwf	memcpy@n+1
 10718  0A2D  0856               	movf	LIN_getPacket@data,w
 10719  0A2E  318A  22D3  318A   	fcall	_memcpy
 10720                           
 10721                           ;mcc_generated_files/LINDrivers/lin_slave.c: 206:     memset(LIN_packet.rawPacket, 0, si
      +                          zeof(LIN_packet.rawPacket));
 10722  0A31  3000               	movlw	0
 10723  0A32  00CB               	movwf	memset@c
 10724  0A33  00CC               	movwf	memset@c+1
 10725  0A34  300D               	movlw	13
 10726  0A35  00CD               	movwf	memset@n
 10727  0A36  3000               	movlw	0
 10728  0A37  00CE               	movwf	memset@n+1
 10729  0A38  30B6               	movlw	(low (_LIN_packet| 0))& (0+255)
 10730  0A39  3187  274E         	fcall	_memset
 10731                           
 10732                           ;mcc_generated_files/LINDrivers/lin_slave.c: 208:     return cmd;
 10733  0A3B  0857               	movf	LIN_getPacket@cmd,w
 10734  0A3C  0008               	return
 10735  0A3D                     __end_of_LIN_getPacket:
 10736                           
 10737                           	psect	text28
 10738  074E                     __ptext28:	
 10739 ;; *************** function _memset *****************
 10740 ;; Defined at:
 10741 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\memset.c"
 10742 ;; Parameters:    Size  Location     Type
 10743 ;;  dest            1    wreg     PTR void 
 10744 ;;		 -> LIN_packet(13), 
 10745 ;;  c               2    0[BANK0 ] int 
 10746 ;;  n               2    2[BANK0 ] unsigned int 
 10747 ;; Auto vars:     Size  Location     Type
 10748 ;;  dest            1    8[BANK0 ] PTR void 
 10749 ;;		 -> LIN_packet(13), 
 10750 ;;  k               2    6[BANK0 ] unsigned int 
 10751 ;;  s               1    9[BANK0 ] PTR unsigned char 
 10752 ;;		 -> LIN_packet(13), 
 10753 ;; Return value:  Size  Location     Type
 10754 ;;                  1    wreg      PTR void 
 10755 ;; Registers used:
 10756 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10757 ;; Tracked objects:
 10758 ;;		On entry : 3F/0
 10759 ;;		On exit  : 3F/0
 10760 ;;		Unchanged: 0/0
 10761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10762 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10763 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10764 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10765 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10766 ;;Total ram usage:       10 bytes
 10767 ;; Hardware stack levels used: 1
 10768 ;; Hardware stack levels required when called: 5
 10769 ;; This function calls:
 10770 ;;		Nothing
 10771 ;; This function is called by:
 10772 ;;		_LIN_handler
 10773 ;;		_LIN_getPacket
 10774 ;; This function uses a non-reentrant model
 10775 ;;
 10776                           
 10777                           
 10778                           ;psect for function _memset
 10779  074E                     _memset:
 10780                           
 10781                           ;incstack = 0
 10782                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
 10783                           ;memset@dest stored from wreg
 10784  074E  00D3               	movwf	memset@dest
 10785  074F  0853               	movf	memset@dest,w
 10786  0750  00CF               	movwf	??_memset
 10787  0751  084F               	movf	??_memset,w
 10788  0752  00D4               	movwf	memset@s
 10789  0753  084D               	movf	memset@n,w
 10790  0754  044E               	iorwf	memset@n+1,w
 10791  0755  1903               	btfsc	3,2
 10792  0756  0008               	return
 10793  0757  084B               	movf	memset@c,w
 10794  0758  00CF               	movwf	??_memset
 10795  0759  0854               	movf	memset@s,w
 10796  075A  0086               	movwf	6
 10797  075B  0187               	clrf	7
 10798  075C  084F               	movf	??_memset,w
 10799  075D  0081               	movwf	1
 10800  075E  084B               	movf	memset@c,w
 10801  075F  00CF               	movwf	??_memset
 10802  0760  084D               	movf	memset@n,w
 10803  0761  0754               	addwf	memset@s,w
 10804  0762  00D0               	movwf	??_memset+1
 10805  0763  0850               	movf	??_memset+1,w
 10806  0764  3EFF               	addlw	255
 10807  0765  0086               	movwf	6
 10808  0766  0187               	clrf	7
 10809  0767  084F               	movf	??_memset,w
 10810  0768  0081               	movwf	1
 10811  0769  3000               	movlw	0
 10812  076A  024E               	subwf	memset@n+1,w
 10813  076B  3003               	movlw	3
 10814  076C  1903               	skipnz
 10815  076D  024D               	subwf	memset@n,w
 10816  076E  1C03               	btfss	3,0
 10817  076F  0008               	return
 10818  0770  084B               	movf	memset@c,w
 10819  0771  00CF               	movwf	??_memset
 10820  0772  0A54               	incf	memset@s,w
 10821  0773  0086               	movwf	6
 10822  0774  0187               	clrf	7
 10823  0775  084F               	movf	??_memset,w
 10824  0776  0081               	movwf	1
 10825  0777  084B               	movf	memset@c,w
 10826  0778  00CF               	movwf	??_memset
 10827  0779  0854               	movf	memset@s,w
 10828  077A  3E02               	addlw	2
 10829  077B  0086               	movwf	6
 10830  077C  0187               	clrf	7
 10831  077D  084F               	movf	??_memset,w
 10832  077E  0081               	movwf	1
 10833  077F  084B               	movf	memset@c,w
 10834  0780  00CF               	movwf	??_memset
 10835  0781  084D               	movf	memset@n,w
 10836  0782  0754               	addwf	memset@s,w
 10837  0783  00D0               	movwf	??_memset+1
 10838  0784  0850               	movf	??_memset+1,w
 10839  0785  3EFE               	addlw	254
 10840  0786  0086               	movwf	6
 10841  0787  0187               	clrf	7
 10842  0788  084F               	movf	??_memset,w
 10843  0789  0081               	movwf	1
 10844  078A  084B               	movf	memset@c,w
 10845  078B  00CF               	movwf	??_memset
 10846  078C  084D               	movf	memset@n,w
 10847  078D  0754               	addwf	memset@s,w
 10848  078E  00D0               	movwf	??_memset+1
 10849  078F  0850               	movf	??_memset+1,w
 10850  0790  3EFD               	addlw	253
 10851  0791  0086               	movwf	6
 10852  0792  0187               	clrf	7
 10853  0793  084F               	movf	??_memset,w
 10854  0794  0081               	movwf	1
 10855  0795  3000               	movlw	0
 10856  0796  024E               	subwf	memset@n+1,w
 10857  0797  3007               	movlw	7
 10858  0798  1903               	skipnz
 10859  0799  024D               	subwf	memset@n,w
 10860  079A  1C03               	btfss	3,0
 10861  079B  0008               	return
 10862  079C  084B               	movf	memset@c,w
 10863  079D  00CF               	movwf	??_memset
 10864  079E  0854               	movf	memset@s,w
 10865  079F  3E03               	addlw	3
 10866  07A0  0086               	movwf	6
 10867  07A1  0187               	clrf	7
 10868  07A2  084F               	movf	??_memset,w
 10869  07A3  0081               	movwf	1
 10870  07A4  084B               	movf	memset@c,w
 10871  07A5  00CF               	movwf	??_memset
 10872  07A6  084D               	movf	memset@n,w
 10873  07A7  0754               	addwf	memset@s,w
 10874  07A8  00D0               	movwf	??_memset+1
 10875  07A9  0850               	movf	??_memset+1,w
 10876  07AA  3EFC               	addlw	252
 10877  07AB  0086               	movwf	6
 10878  07AC  0187               	clrf	7
 10879  07AD  084F               	movf	??_memset,w
 10880  07AE  0081               	movwf	1
 10881  07AF  3000               	movlw	0
 10882  07B0  024E               	subwf	memset@n+1,w
 10883  07B1  3009               	movlw	9
 10884  07B2  1903               	skipnz
 10885  07B3  024D               	subwf	memset@n,w
 10886  07B4  1C03               	btfss	3,0
 10887  07B5  0008               	return
 10888  07B6  0954               	comf	memset@s,w
 10889  07B7  00CF               	movwf	??_memset
 10890  07B8  0955               	comf	memset@s+1,w
 10891  07B9  00D0               	movwf	??_memset+1
 10892  07BA  0ACF               	incf	??_memset,f
 10893  07BB  1903               	skipnz
 10894  07BC  0AD0               	incf	??_memset+1,f
 10895  07BD  3003               	movlw	3
 10896  07BE  054F               	andwf	??_memset,w
 10897  07BF  00D1               	movwf	memset@k
 10898  07C0  3000               	movlw	0
 10899  07C1  0550               	andwf	??_memset+1,w
 10900  07C2  00D2               	movwf	memset@k+1
 10901  07C3  0851               	movf	memset@k,w
 10902  07C4  00CF               	movwf	??_memset
 10903  07C5  084F               	movf	??_memset,w
 10904  07C6  07D4               	addwf	memset@s,f
 10905  07C7  0851               	movf	memset@k,w
 10906  07C8  02CD               	subwf	memset@n,f
 10907  07C9  0852               	movf	memset@k+1,w
 10908  07CA  3BCE               	subwfb	memset@n+1,f
 10909  07CB  30FC               	movlw	252
 10910  07CC  05CD               	andwf	memset@n,f
 10911  07CD  30FF               	movlw	255
 10912  07CE  05CE               	andwf	memset@n+1,f
 10913  07CF                     l4508:
 10914  07CF  084D               	movf	memset@n,w
 10915  07D0  044E               	iorwf	memset@n+1,w
 10916  07D1  1903               	btfsc	3,2
 10917  07D2  0008               	return
 10918  07D3  084B               	movf	memset@c,w
 10919  07D4  00CF               	movwf	??_memset
 10920  07D5  0854               	movf	memset@s,w
 10921  07D6  0086               	movwf	6
 10922  07D7  0187               	clrf	7
 10923  07D8  084F               	movf	??_memset,w
 10924  07D9  0081               	movwf	1
 10925  07DA  3001               	movlw	1
 10926  07DB  02CD               	subwf	memset@n,f
 10927  07DC  3000               	movlw	0
 10928  07DD  3BCE               	subwfb	memset@n+1,f
 10929  07DE  3001               	movlw	1
 10930  07DF  00CF               	movwf	??_memset
 10931  07E0  084F               	movf	??_memset,w
 10932  07E1  07D4               	addwf	memset@s,f
 10933  07E2  2FCF               	goto	l4508
 10934  07E3                     __end_of_memset:
 10935                           
 10936                           	psect	text29
 10937  0A3D                     __ptext29:	
 10938 ;; *************** function _EFuseInit *****************
 10939 ;; Defined at:
 10940 ;;		line 133 in file "efuse.c"
 10941 ;; Parameters:    Size  Location     Type
 10942 ;;		None
 10943 ;; Auto vars:     Size  Location     Type
 10944 ;;		None
 10945 ;; Return value:  Size  Location     Type
 10946 ;;                  1    wreg      void 
 10947 ;; Registers used:
 10948 ;;		wreg, status,2, status,0, pclath, cstack
 10949 ;; Tracked objects:
 10950 ;;		On entry : 3D/2
 10951 ;;		On exit  : 3F/0
 10952 ;;		Unchanged: 0/0
 10953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10957 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10958 ;;Total ram usage:        0 bytes
 10959 ;; Hardware stack levels used: 1
 10960 ;; Hardware stack levels required when called: 7
 10961 ;; This function calls:
 10962 ;;		_CmdOutput
 10963 ;;		_TMR0_Reload
 10964 ;; This function is called by:
 10965 ;;		_processLIN
 10966 ;;		_main
 10967 ;; This function uses a non-reentrant model
 10968 ;;
 10969                           
 10970                           
 10971                           ;psect for function _EFuseInit
 10972  0A3D                     _EFuseInit:
 10973                           
 10974                           ;efuse.c: 135:     CmdOutput(OUTPUT_OFF);
 10975                           
 10976                           ;incstack = 0
 10977                           ; Regs used in _EFuseInit: [wreg+status,2+status,0+pclath+cstack]
 10978  0A3D  3000               	movlw	0
 10979  0A3E  318D  25A2  318A   	fcall	_CmdOutput
 10980                           
 10981                           ;efuse.c: 138:     CM2CON0bits.C2EN = 1;
 10982  0A41  0153               	movlb	19	; select bank19
 10983  0A42  1794               	bsf	20,7	;volatile
 10984                           
 10985                           ;efuse.c: 139:     CLC1GLS1bits.LC1G2D2T = 1;
 10986  0A43  017C               	movlb	60	; select bank60
 10987  0A44  1597               	bsf	23,3	;volatile
 10988                           
 10989                           ;efuse.c: 140:     PIR2bits.C2IF = 0;
 10990  0A45  014E               	movlb	14	; select bank14
 10991  0A46  108E               	bcf	14,1	;volatile
 10992                           
 10993                           ;efuse.c: 142:     DAC1CON1bits.DAC1R = dac_i_hw_trip;
 10994  0A47  0152               	movlb	18	; select bank18
 10995  0A48  080F               	movf	15,w	;volatile
 10996  0A49  0140               	movlb	0	; select bank0
 10997  0A4A  066A               	xorwf	_dac_i_hw_trip,w
 10998  0A4B  39E0               	andlw	-32
 10999  0A4C  066A               	xorwf	_dac_i_hw_trip,w
 11000  0A4D  0152               	movlb	18	; select bank18
 11001  0A4E  008F               	movwf	15	;volatile
 11002                           
 11003                           ;efuse.c: 143:     _delay((unsigned long)((20)*(32000000/4000000.0)));
 11004  0A4F  3035               	movlw	53
 11005  0A50                     u3437:
 11006  0A50  0B89               	decfsz	9,f
 11007  0A51  2A50               	goto	u3437
 11008  0A52  0000               	nop
 11009                           
 11010                           ;efuse.c: 146:     TMR0_Reload();
 11011  0A53  3188  206D         	fcall	_TMR0_Reload
 11012                           
 11013                           ;efuse.c: 147:     PIR0bits.TMR0IF = 0;
 11014  0A55  014E               	movlb	14	; select bank14
 11015  0A56  128C               	bcf	12,5	;volatile
 11016                           
 11017                           ;efuse.c: 148:     PIR5bits.CLC2IF = 0;
 11018  0A57  1291               	bcf	17,5	;volatile
 11019                           
 11020                           ;efuse.c: 149:     PIR2bits.C1IF = 0;
 11021  0A58  100E               	bcf	14,0	;volatile
 11022                           
 11023                           ;efuse.c: 150:     PIR2bits.C2IF = 0;
 11024  0A59  108E               	bcf	14,1	;volatile
 11025                           
 11026                           ;efuse.c: 152:     ticks_1ms = 0;
 11027  0A5A  0141               	movlb	1	; select bank1
 11028  0A5B  01B4               	clrf	_ticks_1ms^(0+128)
 11029  0A5C  01B5               	clrf	(_ticks_1ms+1)^(0+128)
 11030                           
 11031                           ;efuse.c: 154:     triggerType = TRIGGER_EDGE;
 11032  0A5D  0140               	movlb	0	; select bank0
 11033  0A5E  01AE               	clrf	_triggerType
 11034  0A5F  0008               	return
 11035  0A60                     __end_of_EFuseInit:
 11036                           
 11037                           	psect	text30
 11038  086D                     __ptext30:	
 11039 ;; *************** function _TMR0_Reload *****************
 11040 ;; Defined at:
 11041 ;;		line 129 in file "mcc_generated_files/tmr0.c"
 11042 ;; Parameters:    Size  Location     Type
 11043 ;;		None
 11044 ;; Auto vars:     Size  Location     Type
 11045 ;;		None
 11046 ;; Return value:  Size  Location     Type
 11047 ;;                  1    wreg      void 
 11048 ;; Registers used:
 11049 ;;		wreg
 11050 ;; Tracked objects:
 11051 ;;		On entry : 0/12
 11052 ;;		On exit  : 3F/B
 11053 ;;		Unchanged: 0/0
 11054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11058 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11059 ;;Total ram usage:        0 bytes
 11060 ;; Hardware stack levels used: 1
 11061 ;; Hardware stack levels required when called: 5
 11062 ;; This function calls:
 11063 ;;		Nothing
 11064 ;; This function is called by:
 11065 ;;		_EFuseInit
 11066 ;; This function uses a non-reentrant model
 11067 ;;
 11068                           
 11069                           
 11070                           ;psect for function _TMR0_Reload
 11071  086D                     _TMR0_Reload:
 11072                           
 11073                           ;mcc_generated_files/tmr0.c: 132:     TMR0H = timer0ReloadVal16bit >> 8;
 11074                           
 11075                           ;incstack = 0
 11076                           ; Regs used in _TMR0_Reload: [wreg]
 11077  086D  0140               	movlb	0	; select bank0
 11078  086E  086F               	movf	_timer0ReloadVal16bit+1,w	;volatile
 11079  086F  014B               	movlb	11	; select bank11
 11080  0870  009D               	movwf	29	;volatile
 11081                           
 11082                           ;mcc_generated_files/tmr0.c: 133:     TMR0L = (uint8_t) timer0ReloadVal16bit;
 11083  0871  0140               	movlb	0	; select bank0
 11084  0872  086E               	movf	_timer0ReloadVal16bit,w	;volatile
 11085  0873  014B               	movlb	11	; select bank11
 11086  0874  009C               	movwf	28	;volatile
 11087  0875  0008               	return
 11088  0876                     __end_of_TMR0_Reload:
 11089                           
 11090                           	psect	text31
 11091  17F5                     __ptext31:	
 11092 ;; *************** function _LIN_stopTimer *****************
 11093 ;; Defined at:
 11094 ;;		line 304 in file "mcc_generated_files/LINDrivers/lin_slave.c"
 11095 ;; Parameters:    Size  Location     Type
 11096 ;;		None
 11097 ;; Auto vars:     Size  Location     Type
 11098 ;;		None
 11099 ;; Return value:  Size  Location     Type
 11100 ;;                  1    wreg      void 
 11101 ;; Registers used:
 11102 ;;		status,2
 11103 ;; Tracked objects:
 11104 ;;		On entry : 0/2
 11105 ;;		On exit  : 3F/0
 11106 ;;		Unchanged: 0/0
 11107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11111 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11112 ;;Total ram usage:        0 bytes
 11113 ;; Hardware stack levels used: 1
 11114 ;; Hardware stack levels required when called: 5
 11115 ;; This function calls:
 11116 ;;		Nothing
 11117 ;; This function is called by:
 11118 ;;		_LIN_init
 11119 ;;		_LIN_handler
 11120 ;; This function uses a non-reentrant model
 11121 ;;
 11122                           
 11123                           
 11124                           ;psect for function _LIN_stopTimer
 11125  17F5                     _LIN_stopTimer:
 11126                           
 11127                           ;mcc_generated_files/LINDrivers/lin_slave.c: 305:     __nop();
 11128                           
 11129                           ;incstack = 0
 11130                           ; Regs used in _LIN_stopTimer: [status,2]
 11131  17F5  0000               	nop
 11132                           
 11133                           ;mcc_generated_files/LINDrivers/lin_slave.c: 307:     CountCallBack = 0;
 11134  17F6  0140               	movlb	0	; select bank0
 11135  17F7  01A6               	clrf	_CountCallBack	;volatile
 11136                           
 11137                           ;mcc_generated_files/LINDrivers/lin_slave.c: 308:     LIN_timerRunning = 0;
 11138  17F8  01A7               	clrf	_LIN_timerRunning
 11139  17F9  0008               	return
 11140  17FA                     __end_of_LIN_stopTimer:
 11141                           
 11142                           	psect	text32
 11143  08F4                     __ptext32:	
 11144 ;; *************** function _LIN_startTimer *****************
 11145 ;; Defined at:
 11146 ;;		line 283 in file "mcc_generated_files/LINDrivers/lin_slave.c"
 11147 ;; Parameters:    Size  Location     Type
 11148 ;;  timeout         1    wreg     unsigned char 
 11149 ;; Auto vars:     Size  Location     Type
 11150 ;;  timeout         1    3[BANK0 ] unsigned char 
 11151 ;; Return value:  Size  Location     Type
 11152 ;;                  1    wreg      void 
 11153 ;; Registers used:
 11154 ;;		wreg, status,2, status,0, pclath, cstack
 11155 ;; Tracked objects:
 11156 ;;		On entry : 3F/0
 11157 ;;		On exit  : 3F/0
 11158 ;;		Unchanged: 0/0
 11159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11161 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11162 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11163 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11164 ;;Total ram usage:        2 bytes
 11165 ;; Hardware stack levels used: 1
 11166 ;; Hardware stack levels required when called: 6
 11167 ;; This function calls:
 11168 ;;		_TMR0_WriteTimer
 11169 ;; This function is called by:
 11170 ;;		_LIN_handler
 11171 ;; This function uses a non-reentrant model
 11172 ;;
 11173                           
 11174                           
 11175                           ;psect for function _LIN_startTimer
 11176  08F4                     _LIN_startTimer:
 11177                           
 11178                           ;incstack = 0
 11179                           ; Regs used in _LIN_startTimer: [wreg+status,2+status,0+pclath+cstack]
 11180                           ;LIN_startTimer@timeout stored from wreg
 11181  08F4  00CE               	movwf	LIN_startTimer@timeout
 11182                           
 11183                           ;mcc_generated_files/LINDrivers/lin_slave.c: 284:     LIN_timeout = timeout;
 11184  08F5  084E               	movf	LIN_startTimer@timeout,w
 11185  08F6  00CD               	movwf	??_LIN_startTimer
 11186  08F7  084D               	movf	??_LIN_startTimer,w
 11187  08F8  00E8               	movwf	_LIN_timeout
 11188                           
 11189                           ;mcc_generated_files/LINDrivers/lin_slave.c: 285:     TMR0_WriteTimer(0);
 11190  08F9  3000               	movlw	0
 11191  08FA  00CB               	movwf	TMR0_WriteTimer@timerVal
 11192  08FB  00CC               	movwf	TMR0_WriteTimer@timerVal+1
 11193  08FC  3188  2015         	fcall	_TMR0_WriteTimer
 11194                           
 11195                           ;mcc_generated_files/LINDrivers/lin_slave.c: 286:     __nop();
 11196  08FE  0000               	nop
 11197                           
 11198                           ;mcc_generated_files/LINDrivers/lin_slave.c: 287:     LIN_timerRunning = 1;
 11199  08FF  0140               	movlb	0	; select bank0
 11200  0900  01A7               	clrf	_LIN_timerRunning
 11201  0901  0AA7               	incf	_LIN_timerRunning,f
 11202  0902  0008               	return
 11203  0903                     __end_of_LIN_startTimer:
 11204                           
 11205                           	psect	text33
 11206  0815                     __ptext33:	
 11207 ;; *************** function _TMR0_WriteTimer *****************
 11208 ;; Defined at:
 11209 ;;		line 122 in file "mcc_generated_files/tmr0.c"
 11210 ;; Parameters:    Size  Location     Type
 11211 ;;  timerVal        2    0[BANK0 ] unsigned short 
 11212 ;; Auto vars:     Size  Location     Type
 11213 ;;		None
 11214 ;; Return value:  Size  Location     Type
 11215 ;;                  1    wreg      void 
 11216 ;; Registers used:
 11217 ;;		wreg
 11218 ;; Tracked objects:
 11219 ;;		On entry : 3F/0
 11220 ;;		On exit  : 3F/B
 11221 ;;		Unchanged: 0/0
 11222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11223 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11226 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11227 ;;Total ram usage:        2 bytes
 11228 ;; Hardware stack levels used: 1
 11229 ;; Hardware stack levels required when called: 5
 11230 ;; This function calls:
 11231 ;;		Nothing
 11232 ;; This function is called by:
 11233 ;;		_LIN_startTimer
 11234 ;; This function uses a non-reentrant model
 11235 ;;
 11236                           
 11237                           
 11238                           ;psect for function _TMR0_WriteTimer
 11239  0815                     _TMR0_WriteTimer:
 11240                           
 11241                           ;mcc_generated_files/tmr0.c: 122: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr0.c: 123: {;mcc_generated_files/tmr0.c: 125:     TMR0H = timerVal >> 8;
 11242                           
 11243                           ;incstack = 0
 11244                           ; Regs used in _TMR0_WriteTimer: [wreg]
 11245  0815  084C               	movf	TMR0_WriteTimer@timerVal+1,w
 11246  0816  014B               	movlb	11	; select bank11
 11247  0817  009D               	movwf	29	;volatile
 11248                           
 11249                           ;mcc_generated_files/tmr0.c: 126:     TMR0L = (uint8_t) timerVal;
 11250  0818  0140               	movlb	0	; select bank0
 11251  0819  084B               	movf	TMR0_WriteTimer@timerVal,w
 11252  081A  014B               	movlb	11	; select bank11
 11253  081B  009C               	movwf	28	;volatile
 11254  081C  0008               	return
 11255  081D                     __end_of_TMR0_WriteTimer:
 11256                           
 11257                           	psect	text34
 11258  0EEC                     __ptext34:	
 11259 ;; *************** function _LIN_queuePacket *****************
 11260 ;; Defined at:
 11261 ;;		line 66 in file "mcc_generated_files/LINDrivers/lin_slave.c"
 11262 ;; Parameters:    Size  Location     Type
 11263 ;;  cmd             1    wreg     unsigned char 
 11264 ;; Auto vars:     Size  Location     Type
 11265 ;;  cmd             1   17[BANK0 ] unsigned char 
 11266 ;;  i               1   18[BANK0 ] unsigned char 
 11267 ;;  tempSchedule    2   19[BANK0 ] PTR const struct .
 11268 ;;		 -> NULL(0), scheduleTable(140), 
 11269 ;; Return value:  Size  Location     Type
 11270 ;;                  1    wreg      void 
 11271 ;; Registers used:
 11272 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11273 ;; Tracked objects:
 11274 ;;		On entry : 3F/1
 11275 ;;		On exit  : 3F/E
 11276 ;;		Unchanged: 0/0
 11277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11279 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11280 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11281 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11282 ;;Total ram usage:        7 bytes
 11283 ;; Hardware stack levels used: 1
 11284 ;; Hardware stack levels required when called: 7
 11285 ;; This function calls:
 11286 ;;		_LIN_getChecksum
 11287 ;;		_LIN_sendPacket
 11288 ;;		_memcpy
 11289 ;; This function is called by:
 11290 ;;		_LIN_handler
 11291 ;; This function uses a non-reentrant model
 11292 ;;
 11293                           
 11294                           
 11295                           ;psect for function _LIN_queuePacket
 11296  0EEC                     _LIN_queuePacket:
 11297                           
 11298                           ;incstack = 0
 11299                           ; Regs used in _LIN_queuePacket: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11300                           ;LIN_queuePacket@cmd stored from wreg
 11301  0EEC  0140               	movlb	0	; select bank0
 11302  0EED  00DC               	movwf	LIN_queuePacket@cmd
 11303                           
 11304                           ;mcc_generated_files/LINDrivers/lin_slave.c: 67:     const lin_rx_cmd_t* tempSchedule = 
      +                          LIN_rxCommand;
 11305  0EEE  0141               	movlb	1	; select bank1
 11306  0EEF  086C               	movf	(_LIN_rxCommand+1)^(0+128),w
 11307  0EF0  0140               	movlb	0	; select bank0
 11308  0EF1  00DF               	movwf	LIN_queuePacket@tempSchedule+1
 11309  0EF2  0141               	movlb	1	; select bank1
 11310  0EF3  086B               	movf	_LIN_rxCommand^(0+128),w
 11311  0EF4  0140               	movlb	0	; select bank0
 11312  0EF5  00DE               	movwf	LIN_queuePacket@tempSchedule
 11313                           
 11314                           ;mcc_generated_files/LINDrivers/lin_slave.c: 69:     cmd &= 0x3F;
 11315  0EF6  303F               	movlw	63
 11316  0EF7  00D9               	movwf	??_LIN_queuePacket
 11317  0EF8  0859               	movf	??_LIN_queuePacket,w
 11318  0EF9  05DC               	andwf	LIN_queuePacket@cmd,f
 11319                           
 11320                           ;mcc_generated_files/LINDrivers/lin_slave.c: 70:     for(uint8_t i = 0; i < LIN_rxComman
      +                          dLength; i++){
 11321  0EFA  01DD               	clrf	LIN_queuePacket@i
 11322  0EFB                     l4804:
 11323  0EFB  0141               	movlb	1	; select bank1
 11324  0EFC  086E               	movf	_LIN_rxCommandLength^(0+128),w
 11325  0EFD  0140               	movlb	0	; select bank0
 11326  0EFE  025D               	subwf	LIN_queuePacket@i,w
 11327  0EFF  1803               	btfsc	3,0
 11328  0F00  2F12               	goto	l4806
 11329                           
 11330                           ;mcc_generated_files/LINDrivers/lin_slave.c: 71:         if(cmd == tempSchedule->cmd){
 11331  0F01  085E               	movf	LIN_queuePacket@tempSchedule,w
 11332  0F02  0084               	movwf	4
 11333  0F03  085F               	movf	LIN_queuePacket@tempSchedule+1,w
 11334  0F04  0085               	movwf	5
 11335  0F05  0800               	movf	0,w	;code access
 11336  0F06  065C               	xorwf	LIN_queuePacket@cmd,w
 11337  0F07  1903               	btfsc	3,2
 11338  0F08  2F12               	goto	l4806
 11339                           
 11340                           ;mcc_generated_files/LINDrivers/lin_slave.c: 74:         tempSchedule++;
 11341  0F09  3005               	movlw	5
 11342  0F0A  07DE               	addwf	LIN_queuePacket@tempSchedule,f
 11343  0F0B  3000               	movlw	0
 11344  0F0C  3DDF               	addwfc	LIN_queuePacket@tempSchedule+1,f
 11345                           
 11346                           ;mcc_generated_files/LINDrivers/lin_slave.c: 75:     }
 11347  0F0D  3001               	movlw	1
 11348  0F0E  00D9               	movwf	??_LIN_queuePacket
 11349  0F0F  0859               	movf	??_LIN_queuePacket,w
 11350  0F10  07DD               	addwf	LIN_queuePacket@i,f
 11351  0F11  2EFB               	goto	l4804
 11352  0F12                     l4806:
 11353                           
 11354                           ;mcc_generated_files/LINDrivers/lin_slave.c: 77:     LIN_packet.type = tempSchedule->typ
      +                          e;
 11355  0F12  085F               	movf	LIN_queuePacket@tempSchedule+1,w
 11356  0F13  00DA               	movwf	??_LIN_queuePacket+1
 11357  0F14  085E               	movf	LIN_queuePacket@tempSchedule,w
 11358  0F15  00D9               	movwf	??_LIN_queuePacket
 11359  0F16  3001               	movlw	1
 11360  0F17  0759               	addwf	??_LIN_queuePacket,w
 11361  0F18  0084               	movwf	4
 11362  0F19  085A               	movf	??_LIN_queuePacket+1,w
 11363  0F1A  1803               	skipnc
 11364  0F1B  0A5A               	incf	??_LIN_queuePacket+1,w
 11365  0F1C  0085               	movwf	5
 11366  0F1D  0800               	movf	0,w	;code access
 11367  0F1E  00DB               	movwf	??_LIN_queuePacket+2
 11368  0F1F  085B               	movf	??_LIN_queuePacket+2,w
 11369  0F20  0141               	movlb	1	; select bank1
 11370  0F21  00C0               	movwf	(_LIN_packet^(0+128)+10)
 11371                           
 11372                           ;mcc_generated_files/LINDrivers/lin_slave.c: 78:     LIN_packet.length = tempSchedule->l
      +                          ength;
 11373  0F22  0140               	movlb	0	; select bank0
 11374  0F23  085F               	movf	LIN_queuePacket@tempSchedule+1,w
 11375  0F24  00DA               	movwf	??_LIN_queuePacket+1
 11376  0F25  085E               	movf	LIN_queuePacket@tempSchedule,w
 11377  0F26  00D9               	movwf	??_LIN_queuePacket
 11378  0F27  3002               	movlw	2
 11379  0F28  0759               	addwf	??_LIN_queuePacket,w
 11380  0F29  0084               	movwf	4
 11381  0F2A  085A               	movf	??_LIN_queuePacket+1,w
 11382  0F2B  1803               	skipnc
 11383  0F2C  0A5A               	incf	??_LIN_queuePacket+1,w
 11384  0F2D  0085               	movwf	5
 11385  0F2E  0800               	movf	0,w	;code access
 11386  0F2F  00DB               	movwf	??_LIN_queuePacket+2
 11387  0F30  085B               	movf	??_LIN_queuePacket+2,w
 11388  0F31  0141               	movlb	1	; select bank1
 11389  0F32  00C1               	movwf	(_LIN_packet^(0+128)+11)
 11390                           
 11391                           ;mcc_generated_files/LINDrivers/lin_slave.c: 82:     memcpy(LIN_packet.data, tempSchedul
      +                          e->data, LIN_packet.length);
 11392  0F33  0140               	movlb	0	; select bank0
 11393  0F34  085F               	movf	LIN_queuePacket@tempSchedule+1,w
 11394  0F35  00DA               	movwf	??_LIN_queuePacket+1
 11395  0F36  085E               	movf	LIN_queuePacket@tempSchedule,w
 11396  0F37  00D9               	movwf	??_LIN_queuePacket
 11397  0F38  3003               	movlw	3
 11398  0F39  0759               	addwf	??_LIN_queuePacket,w
 11399  0F3A  0084               	movwf	4
 11400  0F3B  085A               	movf	??_LIN_queuePacket+1,w
 11401  0F3C  1803               	skipnc
 11402  0F3D  0A5A               	incf	??_LIN_queuePacket+1,w
 11403  0F3E  0085               	movwf	5
 11404  0F3F  3F00               	moviw [0]fsr0
 11405  0F40  00CB               	movwf	memcpy@s1
 11406  0F41  3F01               	moviw [1]fsr0
 11407  0F42  00CC               	movwf	memcpy@s1+1
 11408  0F43  0141               	movlb	1	; select bank1
 11409  0F44  0841               	movf	(_LIN_packet^(0+128)+11),w
 11410  0F45  0140               	movlb	0	; select bank0
 11411  0F46  00CD               	movwf	memcpy@n
 11412  0F47  01CE               	clrf	memcpy@n+1
 11413  0F48  1BCD               	btfsc	memcpy@n,7
 11414  0F49  03CE               	decf	memcpy@n+1,f
 11415  0F4A  30B7               	movlw	(low ((_LIN_packet| 0+1)))& (0+255)
 11416  0F4B  318A  22D3  318E   	fcall	_memcpy
 11417                           
 11418                           ;mcc_generated_files/LINDrivers/lin_slave.c: 85:     LIN_packet.checksum = LIN_getChecks
      +                          um(LIN_packet.length, LIN_packet.PID, LIN_packet.data);
 11419  0F4E  0141               	movlb	1	; select bank1
 11420  0F4F  0836               	movf	_LIN_packet^(0+128),w
 11421  0F50  0140               	movlb	0	; select bank0
 11422  0F51  00D9               	movwf	??_LIN_queuePacket
 11423  0F52  0859               	movf	??_LIN_queuePacket,w
 11424  0F53  00CB               	movwf	LIN_getChecksum@pid
 11425  0F54  30B7               	movlw	(low ((_LIN_packet| 0+1)))& (0+255)
 11426  0F55  00DA               	movwf	??_LIN_queuePacket+1
 11427  0F56  085A               	movf	??_LIN_queuePacket+1,w
 11428  0F57  00CC               	movwf	LIN_getChecksum@data
 11429  0F58  0141               	movlb	1	; select bank1
 11430  0F59  0841               	movf	(_LIN_packet^(0+128)+11),w
 11431  0F5A  318B  2387  318E   	fcall	_LIN_getChecksum
 11432  0F5D  00DB               	movwf	??_LIN_queuePacket+2
 11433  0F5E  085B               	movf	??_LIN_queuePacket+2,w
 11434  0F5F  0141               	movlb	1	; select bank1
 11435  0F60  00BF               	movwf	(_LIN_packet^(0+128)+9)
 11436                           
 11437                           ;mcc_generated_files/LINDrivers/lin_slave.c: 86:     LIN_sendPacket(LIN_packet.length, L
      +                          IN_packet.PID, LIN_packet.data);
 11438  0F61  0836               	movf	_LIN_packet^(0+128),w
 11439  0F62  0140               	movlb	0	; select bank0
 11440  0F63  00D9               	movwf	??_LIN_queuePacket
 11441  0F64  0859               	movf	??_LIN_queuePacket,w
 11442  0F65  00D3               	movwf	LIN_sendPacket@pid
 11443  0F66  30B7               	movlw	(low ((_LIN_packet| 0+1)))& (0+255)
 11444  0F67  00DA               	movwf	??_LIN_queuePacket+1
 11445  0F68  085A               	movf	??_LIN_queuePacket+1,w
 11446  0F69  00D4               	movwf	LIN_sendPacket@data
 11447  0F6A  0141               	movlb	1	; select bank1
 11448  0F6B  0841               	movf	(_LIN_packet^(0+128)+11),w
 11449  0F6C  318A  2286         	fcall	_LIN_sendPacket
 11450  0F6E  0008               	return
 11451  0F6F                     __end_of_LIN_queuePacket:
 11452                           
 11453                           	psect	text35
 11454  0AD3                     __ptext35:	
 11455 ;; *************** function _memcpy *****************
 11456 ;; Defined at:
 11457 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\memcpy.c"
 11458 ;; Parameters:    Size  Location     Type
 11459 ;;  d1              1    wreg     PTR void 
 11460 ;;		 -> LIN_packet(13), processLIN@tempRxData(8), 
 11461 ;;  s1              2    0[BANK0 ] PTR const void 
 11462 ;;		 -> LIN_packet.data(8), LIN_packet(13), LIN_DIAGNOSTIC_Data(8), LIN_TEMPERATURE_RISE_SA_Data(2), 
 11463 ;;		 -> LIN_TEMPERATURE_RISE_JS_Data(2), LIN_JUNCTION_TEMPERATURE_Data(2), LIN_HEATSINK_TEMPERATURE_Data(2), LIN_AMBIENT
      +_TEMPERATURE_Data(2), 
 11464 ;;		 -> LIN_CURRENT_SENSE_OFFSET_Data(2), LIN_ADC_CURRENT_SENSE_CORRECTED_Data(2), LIN_ADC_TEMP_SENSE_Data(2), LIN_ADC_C
      +URRENT_SENSE_UNCORRECTED_Data(2), 
 11465 ;;		 -> LIN_ADC_VCC_SENSE_Data(2), LIN_OVER_TEMP_FAULT_Data(1), LIN_UVLO_FAULT_Data(1), LIN_OVER_CURRENT_FAULT_Data(1), 
 11466 ;;		 -> LIN_GET_TRIGGER_TYPE_Data(1), LIN_OUTPUT_STATE_Data(1), LIN_TCC_SAMPLE_TIME_Data(2), LIN_REDUCED_DRIVE_TIME_Data
      +(1), 
 11467 ;;		 -> LIN_B1_COEF_Data(1), LIN_DAC_I_HW_TRIP_Data(1), LIN_ISENSE_MAX_Data(2), LIN_CURRENT2COUNTS_SQUARED_Data(2), 
 11468 ;;		 -> LIN_FACTOR_RDSON_RTHSA_Data(2), LIN_FACTOR_RDSON_RTHJS_Data(2), LIN_TJ_LIMIT_Data(1), LIN_ENTER_SLEEP_MODE_Data(
      +1), 
 11469 ;;		 -> LIN_TRIGGER_TYPE_Data(1), LIN_COMMAND_Data(1), 
 11470 ;;  n               2    2[BANK0 ] unsigned int 
 11471 ;; Auto vars:     Size  Location     Type
 11472 ;;  d1              1    9[BANK0 ] PTR void 
 11473 ;;		 -> LIN_packet(13), processLIN@tempRxData(8), 
 11474 ;;  s               2    6[BANK0 ] PTR const unsigned char 
 11475 ;;		 -> LIN_packet.data(8), LIN_packet(13), LIN_DIAGNOSTIC_Data(8), LIN_TEMPERATURE_RISE_SA_Data(2), 
 11476 ;;		 -> LIN_TEMPERATURE_RISE_JS_Data(2), LIN_JUNCTION_TEMPERATURE_Data(2), LIN_HEATSINK_TEMPERATURE_Data(2), LIN_AMBIENT
      +_TEMPERATURE_Data(2), 
 11477 ;;		 -> LIN_CURRENT_SENSE_OFFSET_Data(2), LIN_ADC_CURRENT_SENSE_CORRECTED_Data(2), LIN_ADC_TEMP_SENSE_Data(2), LIN_ADC_C
      +URRENT_SENSE_UNCORRECTED_Data(2), 
 11478 ;;		 -> LIN_ADC_VCC_SENSE_Data(2), LIN_OVER_TEMP_FAULT_Data(1), LIN_UVLO_FAULT_Data(1), LIN_OVER_CURRENT_FAULT_Data(1), 
 11479 ;;		 -> LIN_GET_TRIGGER_TYPE_Data(1), LIN_OUTPUT_STATE_Data(1), LIN_TCC_SAMPLE_TIME_Data(2), LIN_REDUCED_DRIVE_TIME_Data
      +(1), 
 11480 ;;		 -> LIN_B1_COEF_Data(1), LIN_DAC_I_HW_TRIP_Data(1), LIN_ISENSE_MAX_Data(2), LIN_CURRENT2COUNTS_SQUARED_Data(2), 
 11481 ;;		 -> LIN_FACTOR_RDSON_RTHSA_Data(2), LIN_FACTOR_RDSON_RTHJS_Data(2), LIN_TJ_LIMIT_Data(1), LIN_ENTER_SLEEP_MODE_Data(
      +1), 
 11482 ;;		 -> LIN_TRIGGER_TYPE_Data(1), LIN_COMMAND_Data(1), 
 11483 ;;  d               1    8[BANK0 ] PTR unsigned char 
 11484 ;;		 -> LIN_packet(13), processLIN@tempRxData(8), 
 11485 ;;  tmp             1    5[BANK0 ] unsigned char 
 11486 ;; Return value:  Size  Location     Type
 11487 ;;                  1    wreg      PTR void 
 11488 ;; Registers used:
 11489 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11490 ;; Tracked objects:
 11491 ;;		On entry : 3F/0
 11492 ;;		On exit  : 3F/0
 11493 ;;		Unchanged: 0/0
 11494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11495 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11496 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11497 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11498 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11499 ;;Total ram usage:       10 bytes
 11500 ;; Hardware stack levels used: 1
 11501 ;; Hardware stack levels required when called: 5
 11502 ;; This function calls:
 11503 ;;		Nothing
 11504 ;; This function is called by:
 11505 ;;		_LIN_queuePacket
 11506 ;;		_LIN_getPacket
 11507 ;; This function uses a non-reentrant model
 11508 ;;
 11509                           
 11510                           
 11511                           ;psect for function _memcpy
 11512  0AD3                     _memcpy:
 11513                           
 11514                           ;incstack = 0
 11515                           ; Regs used in _memcpy: [wreg+fsr1l+fsr1h+status,2+status,0]
 11516                           ;memcpy@d1 stored from wreg
 11517  0AD3  00D4               	movwf	memcpy@d1
 11518  0AD4  084C               	movf	memcpy@s1+1,w
 11519  0AD5  00D2               	movwf	memcpy@s+1
 11520  0AD6  084B               	movf	memcpy@s1,w
 11521  0AD7  00D1               	movwf	memcpy@s
 11522  0AD8  0854               	movf	memcpy@d1,w
 11523  0AD9  00CF               	movwf	??_memcpy
 11524  0ADA  084F               	movf	??_memcpy,w
 11525  0ADB  00D3               	movwf	memcpy@d
 11526  0ADC                     l4442:
 11527  0ADC  3001               	movlw	1
 11528  0ADD  02CD               	subwf	memcpy@n,f
 11529  0ADE  3000               	movlw	0
 11530  0ADF  3BCE               	subwfb	memcpy@n+1,f
 11531  0AE0  0A4D               	incf	memcpy@n,w
 11532  0AE1  1903               	btfsc	3,2
 11533  0AE2  0A4E               	incf	memcpy@n+1,w
 11534  0AE3  1903               	btfsc	3,2
 11535  0AE4  0008               	return
 11536  0AE5  0851               	movf	memcpy@s,w
 11537  0AE6  0086               	movwf	6
 11538  0AE7  0852               	movf	memcpy@s+1,w
 11539  0AE8  0087               	movwf	7
 11540  0AE9  0801               	movf	1,w
 11541  0AEA  00CF               	movwf	??_memcpy
 11542  0AEB  084F               	movf	??_memcpy,w
 11543  0AEC  00D0               	movwf	memcpy@tmp
 11544  0AED  3001               	movlw	1
 11545  0AEE  07D1               	addwf	memcpy@s,f
 11546  0AEF  3000               	movlw	0
 11547  0AF0  3DD2               	addwfc	memcpy@s+1,f
 11548  0AF1  0850               	movf	memcpy@tmp,w
 11549  0AF2  00CF               	movwf	??_memcpy
 11550  0AF3  0853               	movf	memcpy@d,w
 11551  0AF4  0086               	movwf	6
 11552  0AF5  0187               	clrf	7
 11553  0AF6  084F               	movf	??_memcpy,w
 11554  0AF7  0081               	movwf	1
 11555  0AF8  3001               	movlw	1
 11556  0AF9  00CF               	movwf	??_memcpy
 11557  0AFA  084F               	movf	??_memcpy,w
 11558  0AFB  07D3               	addwf	memcpy@d,f
 11559  0AFC  2ADC               	goto	l4442
 11560  0AFD                     __end_of_memcpy:
 11561                           
 11562                           	psect	text36
 11563  0A86                     __ptext36:	
 11564 ;; *************** function _LIN_sendPacket *****************
 11565 ;; Defined at:
 11566 ;;		line 192 in file "mcc_generated_files/LINDrivers/lin_slave.c"
 11567 ;; Parameters:    Size  Location     Type
 11568 ;;  length          1    wreg     unsigned char 
 11569 ;;  pid             1    8[BANK0 ] unsigned char 
 11570 ;;  data            1    9[BANK0 ] PTR unsigned char 
 11571 ;;		 -> LIN_packet(13), 
 11572 ;; Auto vars:     Size  Location     Type
 11573 ;;  length          1   12[BANK0 ] unsigned char 
 11574 ;;  i               1   13[BANK0 ] unsigned char 
 11575 ;; Return value:  Size  Location     Type
 11576 ;;                  1    wreg      void 
 11577 ;; Registers used:
 11578 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11579 ;; Tracked objects:
 11580 ;;		On entry : 3F/1
 11581 ;;		On exit  : 3F/E
 11582 ;;		Unchanged: 0/0
 11583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11584 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11585 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11586 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11587 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11588 ;;Total ram usage:        6 bytes
 11589 ;; Hardware stack levels used: 1
 11590 ;; Hardware stack levels required when called: 6
 11591 ;; This function calls:
 11592 ;;		_EUSART1_Write
 11593 ;;		_LIN_getChecksum
 11594 ;; This function is called by:
 11595 ;;		_LIN_queuePacket
 11596 ;; This function uses a non-reentrant model
 11597 ;;
 11598                           
 11599                           
 11600                           ;psect for function _LIN_sendPacket
 11601  0A86                     _LIN_sendPacket:
 11602                           
 11603                           ;incstack = 0
 11604                           ; Regs used in _LIN_sendPacket: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11605                           ;LIN_sendPacket@length stored from wreg
 11606  0A86  0140               	movlb	0	; select bank0
 11607  0A87  00D7               	movwf	LIN_sendPacket@length
 11608                           
 11609                           ;mcc_generated_files/LINDrivers/lin_slave.c: 195:     for(uint8_t i = 0; i < length; i++
      +                          ){
 11610  0A88  01D8               	clrf	LIN_sendPacket@i
 11611  0A89                     l4580:
 11612  0A89  0857               	movf	LIN_sendPacket@length,w
 11613  0A8A  0258               	subwf	LIN_sendPacket@i,w
 11614  0A8B  1803               	btfsc	3,0
 11615  0A8C  2A9D               	goto	l4582
 11616                           
 11617                           ;mcc_generated_files/LINDrivers/lin_slave.c: 196:         EUSART1_Write(*(data + i));
 11618  0A8D  0858               	movf	LIN_sendPacket@i,w
 11619  0A8E  0754               	addwf	LIN_sendPacket@data,w
 11620  0A8F  00D5               	movwf	??_LIN_sendPacket
 11621  0A90  0855               	movf	??_LIN_sendPacket,w
 11622  0A91  0086               	movwf	6
 11623  0A92  0187               	clrf	7
 11624  0A93  0801               	movf	1,w
 11625  0A94  318A  2260  318A   	fcall	_EUSART1_Write
 11626                           
 11627                           ;mcc_generated_files/LINDrivers/lin_slave.c: 197:     }
 11628  0A97  3001               	movlw	1
 11629  0A98  0140               	movlb	0	; select bank0
 11630  0A99  00D5               	movwf	??_LIN_sendPacket
 11631  0A9A  0855               	movf	??_LIN_sendPacket,w
 11632  0A9B  07D8               	addwf	LIN_sendPacket@i,f
 11633  0A9C  2A89               	goto	l4580
 11634  0A9D                     l4582:
 11635                           
 11636                           ;mcc_generated_files/LINDrivers/lin_slave.c: 199:     EUSART1_Write(LIN_getChecksum(leng
      +                          th, pid, data));
 11637  0A9D  0853               	movf	LIN_sendPacket@pid,w
 11638  0A9E  00D5               	movwf	??_LIN_sendPacket
 11639  0A9F  0855               	movf	??_LIN_sendPacket,w
 11640  0AA0  00CB               	movwf	LIN_getChecksum@pid
 11641  0AA1  0854               	movf	LIN_sendPacket@data,w
 11642  0AA2  00D6               	movwf	??_LIN_sendPacket+1
 11643  0AA3  0856               	movf	??_LIN_sendPacket+1,w
 11644  0AA4  00CC               	movwf	LIN_getChecksum@data
 11645  0AA5  0857               	movf	LIN_sendPacket@length,w
 11646  0AA6  318B  2387  318A   	fcall	_LIN_getChecksum
 11647  0AA9  318A  2260         	fcall	_EUSART1_Write
 11648  0AAB  0008               	return
 11649  0AAC                     __end_of_LIN_sendPacket:
 11650                           
 11651                           	psect	text37
 11652  0B87                     __ptext37:	
 11653 ;; *************** function _LIN_getChecksum *****************
 11654 ;; Defined at:
 11655 ;;		line 270 in file "mcc_generated_files/LINDrivers/lin_slave.c"
 11656 ;; Parameters:    Size  Location     Type
 11657 ;;  length          1    wreg     unsigned char 
 11658 ;;  pid             1    0[BANK0 ] unsigned char 
 11659 ;;  data            1    1[BANK0 ] PTR unsigned char 
 11660 ;;		 -> LIN_packet(13), 
 11661 ;; Auto vars:     Size  Location     Type
 11662 ;;  length          1    4[BANK0 ] unsigned char 
 11663 ;;  i               1    5[BANK0 ] unsigned char 
 11664 ;;  checksum        2    6[BANK0 ] unsigned short 
 11665 ;; Return value:  Size  Location     Type
 11666 ;;                  1    wreg      unsigned char 
 11667 ;; Registers used:
 11668 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11669 ;; Tracked objects:
 11670 ;;		On entry : 3E/1
 11671 ;;		On exit  : 3F/0
 11672 ;;		Unchanged: 0/0
 11673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11674 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11675 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11676 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11677 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11678 ;;Total ram usage:        8 bytes
 11679 ;; Hardware stack levels used: 1
 11680 ;; Hardware stack levels required when called: 5
 11681 ;; This function calls:
 11682 ;;		Nothing
 11683 ;; This function is called by:
 11684 ;;		_LIN_queuePacket
 11685 ;;		_LIN_handler
 11686 ;;		_LIN_sendPacket
 11687 ;; This function uses a non-reentrant model
 11688 ;;
 11689                           
 11690                           
 11691                           ;psect for function _LIN_getChecksum
 11692  0B87                     _LIN_getChecksum:
 11693                           
 11694                           ;incstack = 0
 11695                           ; Regs used in _LIN_getChecksum: [wreg+fsr1l+fsr1h+status,2+status,0]
 11696                           ;LIN_getChecksum@length stored from wreg
 11697  0B87  0140               	movlb	0	; select bank0
 11698  0B88  00CF               	movwf	LIN_getChecksum@length
 11699                           
 11700                           ;mcc_generated_files/LINDrivers/lin_slave.c: 271:     uint16_t checksum = pid;
 11701  0B89  084B               	movf	LIN_getChecksum@pid,w
 11702  0B8A  00CD               	movwf	??_LIN_getChecksum
 11703  0B8B  01CE               	clrf	??_LIN_getChecksum+1
 11704  0B8C  084D               	movf	??_LIN_getChecksum,w
 11705  0B8D  00D1               	movwf	LIN_getChecksum@checksum
 11706  0B8E  084E               	movf	??_LIN_getChecksum+1,w
 11707  0B8F  00D2               	movwf	LIN_getChecksum@checksum+1
 11708                           
 11709                           ;mcc_generated_files/LINDrivers/lin_slave.c: 273:     for (uint8_t i = 0; i < length; i+
      +                          +){
 11710  0B90  01D0               	clrf	LIN_getChecksum@i
 11711  0B91                     l4458:
 11712  0B91  084F               	movf	LIN_getChecksum@length,w
 11713  0B92  0250               	subwf	LIN_getChecksum@i,w
 11714  0B93  1803               	btfsc	3,0
 11715  0B94  2BB3               	goto	l310
 11716                           
 11717                           ;mcc_generated_files/LINDrivers/lin_slave.c: 274:         checksum = checksum + *data++;
 11718  0B95  084C               	movf	LIN_getChecksum@data,w
 11719  0B96  0086               	movwf	6
 11720  0B97  0187               	clrf	7
 11721  0B98  0801               	movf	1,w
 11722  0B99  0751               	addwf	LIN_getChecksum@checksum,w
 11723  0B9A  00D1               	movwf	LIN_getChecksum@checksum
 11724  0B9B  0852               	movf	LIN_getChecksum@checksum+1,w
 11725  0B9C  1803               	skipnc
 11726  0B9D  0A52               	incf	LIN_getChecksum@checksum+1,w
 11727  0B9E  00D2               	movwf	LIN_getChecksum@checksum+1
 11728  0B9F  3001               	movlw	1
 11729  0BA0  00CD               	movwf	??_LIN_getChecksum
 11730  0BA1  084D               	movf	??_LIN_getChecksum,w
 11731  0BA2  07CC               	addwf	LIN_getChecksum@data,f
 11732                           
 11733                           ;mcc_generated_files/LINDrivers/lin_slave.c: 275:         if(checksum > 0xFF)
 11734  0BA3  3001               	movlw	1
 11735  0BA4  0252               	subwf	LIN_getChecksum@checksum+1,w
 11736  0BA5  3000               	movlw	0
 11737  0BA6  1903               	skipnz
 11738  0BA7  0251               	subwf	LIN_getChecksum@checksum,w
 11739  0BA8  1C03               	skipc
 11740  0BA9  2BAE               	goto	l4456
 11741                           
 11742                           ;mcc_generated_files/LINDrivers/lin_slave.c: 276:             checksum -= 0xFF;
 11743  0BAA  30FF               	movlw	255
 11744  0BAB  02D1               	subwf	LIN_getChecksum@checksum,f
 11745  0BAC  3000               	movlw	0
 11746  0BAD  3BD2               	subwfb	LIN_getChecksum@checksum+1,f
 11747  0BAE                     l4456:
 11748                           
 11749                           ;mcc_generated_files/LINDrivers/lin_slave.c: 277:     }
 11750  0BAE  3001               	movlw	1
 11751  0BAF  00CD               	movwf	??_LIN_getChecksum
 11752  0BB0  084D               	movf	??_LIN_getChecksum,w
 11753  0BB1  07D0               	addwf	LIN_getChecksum@i,f
 11754  0BB2  2B91               	goto	l4458
 11755  0BB3                     l310:
 11756                           
 11757                           ;mcc_generated_files/LINDrivers/lin_slave.c: 278:     checksum = ~checksum;
 11758  0BB3  09D1               	comf	LIN_getChecksum@checksum,f
 11759  0BB4  09D2               	comf	LIN_getChecksum@checksum+1,f
 11760                           
 11761                           ;mcc_generated_files/LINDrivers/lin_slave.c: 280:     return (uint8_t)checksum;
 11762  0BB5  0851               	movf	LIN_getChecksum@checksum,w
 11763  0BB6  0008               	return
 11764  0BB7                     __end_of_LIN_getChecksum:
 11765                           
 11766                           	psect	text38
 11767  0A60                     __ptext38:	
 11768 ;; *************** function _EUSART1_Write *****************
 11769 ;; Defined at:
 11770 ;;		line 173 in file "mcc_generated_files/eusart1.c"
 11771 ;; Parameters:    Size  Location     Type
 11772 ;;  txData          1    wreg     unsigned char 
 11773 ;; Auto vars:     Size  Location     Type
 11774 ;;  txData          1    1[BANK0 ] unsigned char 
 11775 ;; Return value:  Size  Location     Type
 11776 ;;                  1    wreg      void 
 11777 ;; Registers used:
 11778 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11779 ;; Tracked objects:
 11780 ;;		On entry : 3F/0
 11781 ;;		On exit  : 3F/E
 11782 ;;		Unchanged: 0/0
 11783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11785 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11786 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11787 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11788 ;;Total ram usage:        2 bytes
 11789 ;; Hardware stack levels used: 1
 11790 ;; Hardware stack levels required when called: 5
 11791 ;; This function calls:
 11792 ;;		Nothing
 11793 ;; This function is called by:
 11794 ;;		_LIN_sendPacket
 11795 ;; This function uses a non-reentrant model
 11796 ;;
 11797                           
 11798                           
 11799                           ;psect for function _EUSART1_Write
 11800  0A60                     _EUSART1_Write:
 11801                           
 11802                           ;incstack = 0
 11803                           ; Regs used in _EUSART1_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
 11804                           ;EUSART1_Write@txData stored from wreg
 11805  0A60  00CC               	movwf	EUSART1_Write@txData
 11806  0A61                     l4512:	
 11807                           ;mcc_generated_files/eusart1.c: 173: void EUSART1_Write(uint8_t txData);mcc_generated_fi
      +                          les/eusart1.c: 174: {;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBuffer
      +                          Remaining)
 11808                           
 11809                           
 11810                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
 11811  0A61  0141               	movlb	1	; select bank1
 11812  0A62  086D               	movf	_eusart1TxBufferRemaining^(0+128),w	;volatile
 11813  0A63  1903               	btfsc	3,2
 11814  0A64  2A61               	goto	l4512
 11815                           
 11816                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE3bits.TX1IE)
 11817  0A65  014E               	movlb	14	; select bank14
 11818  0A66  1A19               	btfsc	25,4	;volatile
 11819  0A67  2A6D               	goto	l705
 11820                           
 11821                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          X1REG = txData;
 11822  0A68  0140               	movlb	0	; select bank0
 11823  0A69  084C               	movf	EUSART1_Write@txData,w
 11824  0A6A  0142               	movlb	2	; select bank2
 11825  0A6B  009A               	movwf	26	;volatile
 11826                           
 11827                           ;mcc_generated_files/eusart1.c: 182:     }
 11828  0A6C  2A83               	goto	l4526
 11829  0A6D                     l705:	
 11830                           ;mcc_generated_files/eusart1.c: 183:     else
 11831                           
 11832                           
 11833                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE3bits.TX1IE = 0;
 11834  0A6D  1219               	bcf	25,4	;volatile
 11835                           
 11836                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
 11837  0A6E  0140               	movlb	0	; select bank0
 11838  0A6F  084C               	movf	EUSART1_Write@txData,w
 11839  0A70  00CB               	movwf	??_EUSART1_Write
 11840  0A71  0873               	movf	_eusart1TxHead,w
 11841  0A72  3E30               	addlw	(low (_eusart1TxBuffer| (0+256)))& (0+255)
 11842  0A73  0086               	movwf	6
 11843  0A74  3001               	movlw	1	; select bank2/3
 11844  0A75  0087               	movwf	7
 11845  0A76  084B               	movf	??_EUSART1_Write,w
 11846  0A77  0081               	movwf	1
 11847  0A78  3001               	movlw	1
 11848  0A79  00CB               	movwf	??_EUSART1_Write
 11849  0A7A  084B               	movf	??_EUSART1_Write,w
 11850  0A7B  07F3               	addwf	_eusart1TxHead,f	;volatile
 11851                           
 11852                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
 11853  0A7C  3008               	movlw	8
 11854  0A7D  0273               	subwf	_eusart1TxHead,w
 11855  0A7E  1803               	btfsc	3,0
 11856                           
 11857                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
 11858  0A7F  01F3               	clrf	_eusart1TxHead	;volatile
 11859                           
 11860                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
 11861  0A80  3001               	movlw	1
 11862  0A81  0141               	movlb	1	; select bank1
 11863  0A82  02ED               	subwf	_eusart1TxBufferRemaining^(0+128),f	;volatile
 11864  0A83                     l4526:
 11865                           
 11866                           ;mcc_generated_files/eusart1.c: 193:     PIE3bits.TX1IE = 1;
 11867  0A83  014E               	movlb	14	; select bank14
 11868  0A84  1619               	bsf	25,4	;volatile
 11869  0A85  0008               	return
 11870  0A86                     __end_of_EUSART1_Write:
 11871                           
 11872                           	psect	text39
 11873  17F0                     __ptext39:	
 11874 ;; *************** function _LIN_enableRx *****************
 11875 ;; Defined at:
 11876 ;;		line 311 in file "mcc_generated_files/LINDrivers/lin_slave.c"
 11877 ;; Parameters:    Size  Location     Type
 11878 ;;		None
 11879 ;; Auto vars:     Size  Location     Type
 11880 ;;		None
 11881 ;; Return value:  Size  Location     Type
 11882 ;;                  1    wreg      void 
 11883 ;; Registers used:
 11884 ;;		None
 11885 ;; Tracked objects:
 11886 ;;		On entry : 3D/0
 11887 ;;		On exit  : 3F/E
 11888 ;;		Unchanged: 0/0
 11889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11893 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11894 ;;Total ram usage:        0 bytes
 11895 ;; Hardware stack levels used: 1
 11896 ;; Hardware stack levels required when called: 5
 11897 ;; This function calls:
 11898 ;;		Nothing
 11899 ;; This function is called by:
 11900 ;;		_LIN_init
 11901 ;;		_LIN_handler
 11902 ;; This function uses a non-reentrant model
 11903 ;;
 11904                           
 11905                           
 11906                           ;psect for function _LIN_enableRx
 11907  17F0                     _LIN_enableRx:
 11908                           
 11909                           ;mcc_generated_files/LINDrivers/lin_slave.c: 312:     RC1STAbits.CREN = 1;
 11910                           
 11911                           ;incstack = 0
 11912                           ; Regs used in _LIN_enableRx: []
 11913  17F0  0142               	movlb	2	; select bank2
 11914  17F1  161D               	bsf	29,4	;volatile
 11915                           
 11916                           ;mcc_generated_files/LINDrivers/lin_slave.c: 313:     PIE3bits.RC1IE = 1;
 11917  17F2  014E               	movlb	14	; select bank14
 11918  17F3  1699               	bsf	25,5	;volatile
 11919  17F4  0008               	return
 11920  17F5                     __end_of_LIN_enableRx:
 11921                           
 11922                           	psect	text40
 11923  17EB                     __ptext40:	
 11924 ;; *************** function _LIN_disableRx *****************
 11925 ;; Defined at:
 11926 ;;		line 316 in file "mcc_generated_files/LINDrivers/lin_slave.c"
 11927 ;; Parameters:    Size  Location     Type
 11928 ;;		None
 11929 ;; Auto vars:     Size  Location     Type
 11930 ;;		None
 11931 ;; Return value:  Size  Location     Type
 11932 ;;                  1    wreg      void 
 11933 ;; Registers used:
 11934 ;;		None
 11935 ;; Tracked objects:
 11936 ;;		On entry : 3F/1
 11937 ;;		On exit  : 3F/E
 11938 ;;		Unchanged: 0/0
 11939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11944 ;;Total ram usage:        0 bytes
 11945 ;; Hardware stack levels used: 1
 11946 ;; Hardware stack levels required when called: 5
 11947 ;; This function calls:
 11948 ;;		Nothing
 11949 ;; This function is called by:
 11950 ;;		_LIN_handler
 11951 ;; This function uses a non-reentrant model
 11952 ;;
 11953                           
 11954                           
 11955                           ;psect for function _LIN_disableRx
 11956  17EB                     _LIN_disableRx:
 11957                           
 11958                           ;mcc_generated_files/LINDrivers/lin_slave.c: 317:     RC1STAbits.CREN = 0;
 11959                           
 11960                           ;incstack = 0
 11961                           ; Regs used in _LIN_disableRx: []
 11962  17EB  0142               	movlb	2	; select bank2
 11963  17EC  121D               	bcf	29,4	;volatile
 11964                           
 11965                           ;mcc_generated_files/LINDrivers/lin_slave.c: 318:     PIE3bits.RC1IE = 0;
 11966  17ED  014E               	movlb	14	; select bank14
 11967  17EE  1299               	bcf	25,5	;volatile
 11968  17EF  0008               	return
 11969  17F0                     __end_of_LIN_disableRx:
 11970                           
 11971                           	psect	text41
 11972  0963                     __ptext41:	
 11973 ;; *************** function _LIN_checkPID *****************
 11974 ;; Defined at:
 11975 ;;		line 241 in file "mcc_generated_files/LINDrivers/lin_slave.c"
 11976 ;; Parameters:    Size  Location     Type
 11977 ;;  pid             1    wreg     unsigned char 
 11978 ;; Auto vars:     Size  Location     Type
 11979 ;;  pid             1    7[BANK0 ] unsigned char 
 11980 ;; Return value:  Size  Location     Type
 11981 ;;                  1    wreg      _Bool 
 11982 ;; Registers used:
 11983 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11984 ;; Tracked objects:
 11985 ;;		On entry : 3F/1
 11986 ;;		On exit  : 3F/0
 11987 ;;		Unchanged: 0/0
 11988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11990 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11992 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11993 ;;Total ram usage:        1 bytes
 11994 ;; Hardware stack levels used: 1
 11995 ;; Hardware stack levels required when called: 6
 11996 ;; This function calls:
 11997 ;;		_LIN_calcParity
 11998 ;;		_LIN_getFromTable
 11999 ;; This function is called by:
 12000 ;;		_LIN_handler
 12001 ;; This function uses a non-reentrant model
 12002 ;;
 12003                           
 12004                           
 12005                           ;psect for function _LIN_checkPID
 12006  0963                     _LIN_checkPID:
 12007                           
 12008                           ;incstack = 0
 12009                           ; Regs used in _LIN_checkPID: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12010                           ;LIN_checkPID@pid stored from wreg
 12011  0963  0140               	movlb	0	; select bank0
 12012  0964  00D2               	movwf	LIN_checkPID@pid
 12013                           
 12014                           ;mcc_generated_files/LINDrivers/lin_slave.c: 242:     if(LIN_getFromTable(pid, TYPE) == 
      +                          ERROR)
 12015  0965  01CB               	clrf	LIN_getFromTable@param
 12016  0966  0ACB               	incf	LIN_getFromTable@param,f
 12017  0967  0852               	movf	LIN_checkPID@pid,w
 12018  0968  318D  25FF  3189   	fcall	_LIN_getFromTable
 12019  096B  3A02               	xorlw	2
 12020  096C  1D03               	skipz
 12021  096D  2970               	goto	l4844
 12022  096E                     l4840:
 12023                           
 12024                           ;mcc_generated_files/LINDrivers/lin_slave.c: 243:         return 0;
 12025  096E  3000               	movlw	0
 12026  096F  0008               	return
 12027  0970                     l4844:
 12028                           
 12029                           ;mcc_generated_files/LINDrivers/lin_slave.c: 245:     if(pid == LIN_calcParity(pid & 0x3
      +                          F))
 12030  0970  0852               	movf	LIN_checkPID@pid,w
 12031  0971  393F               	andlw	63
 12032  0972  318E  2669  3189   	fcall	_LIN_calcParity
 12033  0975  0652               	xorwf	LIN_checkPID@pid,w
 12034  0976  1D03               	skipz
 12035  0977  296E               	goto	l4840
 12036                           
 12037                           ;mcc_generated_files/LINDrivers/lin_slave.c: 246:         return 1;
 12038  0978  3001               	movlw	1
 12039  0979  0008               	return
 12040  097A                     __end_of_LIN_checkPID:
 12041                           
 12042                           	psect	text42
 12043  0DFF                     __ptext42:	
 12044 ;; *************** function _LIN_getFromTable *****************
 12045 ;; Defined at:
 12046 ;;		line 211 in file "mcc_generated_files/LINDrivers/lin_slave.c"
 12047 ;; Parameters:    Size  Location     Type
 12048 ;;  cmd             1    wreg     unsigned char 
 12049 ;;  param           1    0[BANK0 ] enum E221
 12050 ;; Auto vars:     Size  Location     Type
 12051 ;;  cmd             1    3[BANK0 ] unsigned char 
 12052 ;;  length          1    4[BANK0 ] unsigned char 
 12053 ;;  rxCommand       2    5[BANK0 ] PTR const struct .
 12054 ;;		 -> NULL(0), scheduleTable(140), 
 12055 ;; Return value:  Size  Location     Type
 12056 ;;                  1    wreg      unsigned char 
 12057 ;; Registers used:
 12058 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
 12059 ;; Tracked objects:
 12060 ;;		On entry : 3E/1
 12061 ;;		On exit  : 3F/0
 12062 ;;		Unchanged: 0/0
 12063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12064 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12065 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12066 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12067 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12068 ;;Total ram usage:        7 bytes
 12069 ;; Hardware stack levels used: 1
 12070 ;; Hardware stack levels required when called: 5
 12071 ;; This function calls:
 12072 ;;		Nothing
 12073 ;; This function is called by:
 12074 ;;		_LIN_handler
 12075 ;;		_LIN_checkPID
 12076 ;; This function uses a non-reentrant model
 12077 ;;
 12078                           
 12079                           
 12080                           ;psect for function _LIN_getFromTable
 12081  0DFF                     _LIN_getFromTable:
 12082                           
 12083                           ;incstack = 0
 12084                           ; Regs used in _LIN_getFromTable: [wreg-fsr0h+status,2+status,0+pclath]
 12085                           ;LIN_getFromTable@cmd stored from wreg
 12086  0DFF  0140               	movlb	0	; select bank0
 12087  0E00  00CE               	movwf	LIN_getFromTable@cmd
 12088                           
 12089                           ;mcc_generated_files/LINDrivers/lin_slave.c: 212:     const lin_rx_cmd_t* rxCommand = LI
      +                          N_rxCommand;
 12090  0E01  0141               	movlb	1	; select bank1
 12091  0E02  086C               	movf	(_LIN_rxCommand+1)^(0+128),w
 12092  0E03  0140               	movlb	0	; select bank0
 12093  0E04  00D1               	movwf	LIN_getFromTable@rxCommand+1
 12094  0E05  0141               	movlb	1	; select bank1
 12095  0E06  086B               	movf	_LIN_rxCommand^(0+128),w
 12096  0E07  0140               	movlb	0	; select bank0
 12097  0E08  00D0               	movwf	LIN_getFromTable@rxCommand
 12098                           
 12099                           ;mcc_generated_files/LINDrivers/lin_slave.c: 214:     cmd &= 0x3F;
 12100  0E09  303F               	movlw	63
 12101  0E0A  00CC               	movwf	??_LIN_getFromTable
 12102  0E0B  084C               	movf	??_LIN_getFromTable,w
 12103  0E0C  05CE               	andwf	LIN_getFromTable@cmd,f
 12104                           
 12105                           ;mcc_generated_files/LINDrivers/lin_slave.c: 216:     for(uint8_t length = 0; length < L
      +                          IN_rxCommandLength; length++){
 12106  0E0D  01CF               	clrf	LIN_getFromTable@length
 12107  0E0E                     l4624:
 12108  0E0E  0141               	movlb	1	; select bank1
 12109  0E0F  086E               	movf	_LIN_rxCommandLength^(0+128),w
 12110  0E10  0140               	movlb	0	; select bank0
 12111  0E11  024F               	subwf	LIN_getFromTable@length,w
 12112  0E12  1803               	btfsc	3,0
 12113  0E13  2E55               	goto	l4640
 12114                           
 12115                           ;mcc_generated_files/LINDrivers/lin_slave.c: 217:         if(cmd == rxCommand->cmd){
 12116  0E14  0850               	movf	LIN_getFromTable@rxCommand,w
 12117  0E15  0084               	movwf	4
 12118  0E16  0851               	movf	LIN_getFromTable@rxCommand+1,w
 12119  0E17  0085               	movwf	5
 12120  0E18  0800               	movf	0,w	;code access
 12121  0E19  064E               	xorwf	LIN_getFromTable@cmd,w
 12122  0E1A  1903               	btfsc	3,2
 12123  0E1B  2E55               	goto	l4640
 12124                           
 12125                           ;mcc_generated_files/LINDrivers/lin_slave.c: 220:         rxCommand++;
 12126  0E1C  3005               	movlw	5
 12127  0E1D  07D0               	addwf	LIN_getFromTable@rxCommand,f
 12128  0E1E  3000               	movlw	0
 12129  0E1F  3DD1               	addwfc	LIN_getFromTable@rxCommand+1,f
 12130                           
 12131                           ;mcc_generated_files/LINDrivers/lin_slave.c: 222:         if(length == (LIN_rxCommandLen
      +                          gth-1)){
 12132  0E20  0141               	movlb	1	; select bank1
 12133  0E21  086E               	movf	_LIN_rxCommandLength^(0+128),w
 12134  0E22  3EFF               	addlw	255
 12135  0E23  0140               	movlb	0	; select bank0
 12136  0E24  00CC               	movwf	??_LIN_getFromTable
 12137  0E25  30FF               	movlw	255
 12138  0E26  1803               	skipnc
 12139  0E27  3000               	movlw	0
 12140  0E28  00CD               	movwf	??_LIN_getFromTable+1
 12141  0E29  084F               	movf	LIN_getFromTable@length,w
 12142  0E2A  064C               	xorwf	??_LIN_getFromTable,w
 12143  0E2B  044D               	iorwf	??_LIN_getFromTable+1,w
 12144  0E2C  1D03               	skipz
 12145  0E2D  2E30               	goto	l4622
 12146  0E2E                     l4618:
 12147                           
 12148                           ;mcc_generated_files/LINDrivers/lin_slave.c: 223:             return ERROR;
 12149  0E2E  3002               	movlw	2
 12150  0E2F  0008               	return
 12151  0E30                     l4622:
 12152                           
 12153                           ;mcc_generated_files/LINDrivers/lin_slave.c: 225:     }
 12154  0E30  3001               	movlw	1
 12155  0E31  00CC               	movwf	??_LIN_getFromTable
 12156  0E32  084C               	movf	??_LIN_getFromTable,w
 12157  0E33  07CF               	addwf	LIN_getFromTable@length,f
 12158  0E34  2E0E               	goto	l4624
 12159  0E35                     l4626:
 12160                           
 12161                           ;mcc_generated_files/LINDrivers/lin_slave.c: 229:             return rxCommand->cmd;
 12162  0E35  0850               	movf	LIN_getFromTable@rxCommand,w
 12163  0E36  0084               	movwf	4
 12164  0E37  0851               	movf	LIN_getFromTable@rxCommand+1,w
 12165  0E38  0085               	movwf	5
 12166  0E39  0800               	movf	0,w	;code access
 12167  0E3A  0008               	return
 12168  0E3B                     l4630:
 12169                           
 12170                           ;mcc_generated_files/LINDrivers/lin_slave.c: 231:             return rxCommand->type;
 12171  0E3B  0851               	movf	LIN_getFromTable@rxCommand+1,w
 12172  0E3C  00CD               	movwf	??_LIN_getFromTable+1
 12173  0E3D  0850               	movf	LIN_getFromTable@rxCommand,w
 12174  0E3E  00CC               	movwf	??_LIN_getFromTable
 12175  0E3F  3001               	movlw	1
 12176  0E40  074C               	addwf	??_LIN_getFromTable,w
 12177  0E41  0084               	movwf	4
 12178  0E42  084D               	movf	??_LIN_getFromTable+1,w
 12179  0E43  1803               	skipnc
 12180  0E44  0A4D               	incf	??_LIN_getFromTable+1,w
 12181  0E45  0085               	movwf	5
 12182  0E46  0800               	movf	0,w	;code access
 12183  0E47  0008               	return
 12184  0E48                     l4634:
 12185                           
 12186                           ;mcc_generated_files/LINDrivers/lin_slave.c: 233:             return rxCommand->length;
 12187  0E48  0851               	movf	LIN_getFromTable@rxCommand+1,w
 12188  0E49  00CD               	movwf	??_LIN_getFromTable+1
 12189  0E4A  0850               	movf	LIN_getFromTable@rxCommand,w
 12190  0E4B  00CC               	movwf	??_LIN_getFromTable
 12191  0E4C  3002               	movlw	2
 12192  0E4D  074C               	addwf	??_LIN_getFromTable,w
 12193  0E4E  0084               	movwf	4
 12194  0E4F  084D               	movf	??_LIN_getFromTable+1,w
 12195  0E50  1803               	skipnc
 12196  0E51  0A4D               	incf	??_LIN_getFromTable+1,w
 12197  0E52  0085               	movwf	5
 12198  0E53  0800               	movf	0,w	;code access
 12199  0E54  0008               	return
 12200  0E55                     l4640:
 12201  0E55  084B               	movf	LIN_getFromTable@param,w
 12202  0E56  00CC               	movwf	??_LIN_getFromTable
 12203  0E57  01CD               	clrf	??_LIN_getFromTable+1
 12204                           
 12205                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12206                           ; Switch size 1, requested type "simple"
 12207                           ; Number of cases is 1, Range of values is 0 to 0
 12208                           ; switch strategies available:
 12209                           ; Name         Instructions Cycles
 12210                           ; simple_byte            4     3 (average)
 12211                           ; direct_byte            8     6 (fixed)
 12212                           ; jumptable            260     6 (fixed)
 12213                           ;	Chosen strategy is simple_byte
 12214  0E58  084D               	movf	??_LIN_getFromTable+1,w
 12215  0E59  3A00               	xorlw	0	; case 0
 12216  0E5A  1903               	skipnz
 12217  0E5B  2E5D               	goto	l5498
 12218  0E5C  2E2E               	goto	l4618
 12219  0E5D                     l5498:
 12220                           
 12221                           ; Switch size 1, requested type "simple"
 12222                           ; Number of cases is 3, Range of values is 0 to 2
 12223                           ; switch strategies available:
 12224                           ; Name         Instructions Cycles
 12225                           ; simple_byte           10     6 (average)
 12226                           ; direct_byte           12     6 (fixed)
 12227                           ; jumptable            260     6 (fixed)
 12228                           ;	Chosen strategy is simple_byte
 12229  0E5D  084C               	movf	??_LIN_getFromTable,w
 12230  0E5E  3A00               	xorlw	0	; case 0
 12231  0E5F  1903               	skipnz
 12232  0E60  2E35               	goto	l4626
 12233  0E61  3A01               	xorlw	1	; case 1
 12234  0E62  1903               	skipnz
 12235  0E63  2E3B               	goto	l4630
 12236  0E64  3A03               	xorlw	3	; case 2
 12237  0E65  1903               	skipnz
 12238  0E66  2E48               	goto	l4634
 12239  0E67  2E2E               	goto	l4618
 12240  0E68  0008               	return
 12241  0E69                     __end_of_LIN_getFromTable:
 12242                           
 12243                           	psect	text43
 12244  0E69                     __ptext43:	
 12245 ;; *************** function _LIN_calcParity *****************
 12246 ;; Defined at:
 12247 ;;		line 252 in file "mcc_generated_files/LINDrivers/lin_slave.c"
 12248 ;; Parameters:    Size  Location     Type
 12249 ;;  CMD             1    wreg     unsigned char 
 12250 ;; Auto vars:     Size  Location     Type
 12251 ;;  CMD             1    1[BANK0 ] unsigned char 
 12252 ;;  PID             1    2[BANK0 ] struct .
 12253 ;; Return value:  Size  Location     Type
 12254 ;;                  1    wreg      unsigned char 
 12255 ;; Registers used:
 12256 ;;		wreg, status,0
 12257 ;; Tracked objects:
 12258 ;;		On entry : 3F/0
 12259 ;;		On exit  : 3F/0
 12260 ;;		Unchanged: 0/0
 12261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12263 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12264 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12265 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12266 ;;Total ram usage:        3 bytes
 12267 ;; Hardware stack levels used: 1
 12268 ;; Hardware stack levels required when called: 5
 12269 ;; This function calls:
 12270 ;;		Nothing
 12271 ;; This function is called by:
 12272 ;;		_LIN_checkPID
 12273 ;; This function uses a non-reentrant model
 12274 ;;
 12275                           
 12276                           
 12277                           ;psect for function _LIN_calcParity
 12278  0E69                     _LIN_calcParity:
 12279                           
 12280                           ;incstack = 0
 12281                           ; Regs used in _LIN_calcParity: [wreg+status,0]
 12282                           ;LIN_calcParity@CMD stored from wreg
 12283  0E69  00CC               	movwf	LIN_calcParity@CMD
 12284                           
 12285                           ;mcc_generated_files/LINDrivers/lin_slave.c: 253:     lin_pid_t PID;;mcc_generated_files
      +                          /LINDrivers/lin_slave.c: 254:     PID.rawPID = CMD;
 12286  0E6A  084C               	movf	LIN_calcParity@CMD,w
 12287  0E6B  00CB               	movwf	??_LIN_calcParity
 12288  0E6C  084B               	movf	??_LIN_calcParity,w
 12289  0E6D  00CD               	movwf	LIN_calcParity@PID
 12290                           
 12291                           ;mcc_generated_files/LINDrivers/lin_slave.c: 259:     PID.P0 = PID.ID0 ^ PID.ID1;
 12292  0E6E  1CCD               	btfss	LIN_calcParity@PID,1
 12293  0E6F  2E72               	goto	u2410
 12294  0E70  3001               	movlw	1
 12295  0E71  2E73               	goto	u2412
 12296  0E72                     u2410:
 12297  0E72  3000               	movlw	0
 12298  0E73                     u2412:
 12299  0E73  00CB               	movwf	??_LIN_calcParity
 12300  0E74  1C4D               	btfss	LIN_calcParity@PID,0
 12301  0E75  2E78               	goto	u2420
 12302  0E76  3001               	movlw	1
 12303  0E77  2E79               	goto	u2422
 12304  0E78                     u2420:
 12305  0E78  3000               	movlw	0
 12306  0E79                     u2422:
 12307  0E79  064B               	xorwf	??_LIN_calcParity,w
 12308  0E7A  1903               	btfsc	3,2
 12309  0E7B  2E7F               	goto	u2430
 12310  0E7C  0140               	movlb	0	; select bank0
 12311  0E7D  174D               	bsf	LIN_calcParity@PID,6
 12312  0E7E  2E81               	goto	u2444
 12313  0E7F                     u2430:
 12314  0E7F  0140               	movlb	0	; select bank0
 12315  0E80  134D               	bcf	LIN_calcParity@PID,6
 12316  0E81                     u2444:
 12317                           
 12318                           ;mcc_generated_files/LINDrivers/lin_slave.c: 260:     PID.P0 = PID.P0 ^ PID.ID2;
 12319  0E81  1D4D               	btfss	LIN_calcParity@PID,2
 12320  0E82  2E85               	goto	u2450
 12321  0E83  3001               	movlw	1
 12322  0E84  2E86               	goto	u2452
 12323  0E85                     u2450:
 12324  0E85  3000               	movlw	0
 12325  0E86                     u2452:
 12326  0E86  00CB               	movwf	??_LIN_calcParity
 12327  0E87  1F4D               	btfss	LIN_calcParity@PID,6
 12328  0E88  2E8B               	goto	u2460
 12329  0E89  3001               	movlw	1
 12330  0E8A  2E8C               	goto	u2462
 12331  0E8B                     u2460:
 12332  0E8B  3000               	movlw	0
 12333  0E8C                     u2462:
 12334  0E8C  064B               	xorwf	??_LIN_calcParity,w
 12335  0E8D  1903               	btfsc	3,2
 12336  0E8E  2E92               	goto	u2470
 12337  0E8F  0140               	movlb	0	; select bank0
 12338  0E90  174D               	bsf	LIN_calcParity@PID,6
 12339  0E91  2E94               	goto	u2484
 12340  0E92                     u2470:
 12341  0E92  0140               	movlb	0	; select bank0
 12342  0E93  134D               	bcf	LIN_calcParity@PID,6
 12343  0E94                     u2484:
 12344                           
 12345                           ;mcc_generated_files/LINDrivers/lin_slave.c: 261:     PID.P0 = PID.P0 ^ PID.ID4;
 12346  0E94  1E4D               	btfss	LIN_calcParity@PID,4
 12347  0E95  2E98               	goto	u2490
 12348  0E96  3001               	movlw	1
 12349  0E97  2E99               	goto	u2492
 12350  0E98                     u2490:
 12351  0E98  3000               	movlw	0
 12352  0E99                     u2492:
 12353  0E99  00CB               	movwf	??_LIN_calcParity
 12354  0E9A  1F4D               	btfss	LIN_calcParity@PID,6
 12355  0E9B  2E9E               	goto	u2500
 12356  0E9C  3001               	movlw	1
 12357  0E9D  2E9F               	goto	u2502
 12358  0E9E                     u2500:
 12359  0E9E  3000               	movlw	0
 12360  0E9F                     u2502:
 12361  0E9F  064B               	xorwf	??_LIN_calcParity,w
 12362  0EA0  1903               	btfsc	3,2
 12363  0EA1  2EA5               	goto	u2510
 12364  0EA2  0140               	movlb	0	; select bank0
 12365  0EA3  174D               	bsf	LIN_calcParity@PID,6
 12366  0EA4  2EA7               	goto	u2524
 12367  0EA5                     u2510:
 12368  0EA5  0140               	movlb	0	; select bank0
 12369  0EA6  134D               	bcf	LIN_calcParity@PID,6
 12370  0EA7                     u2524:
 12371                           
 12372                           ;mcc_generated_files/LINDrivers/lin_slave.c: 262:     PID.P1 = PID.ID1 ^ PID.ID3;
 12373  0EA7  1DCD               	btfss	LIN_calcParity@PID,3
 12374  0EA8  2EAB               	goto	u2530
 12375  0EA9  3001               	movlw	1
 12376  0EAA  2EAC               	goto	u2532
 12377  0EAB                     u2530:
 12378  0EAB  3000               	movlw	0
 12379  0EAC                     u2532:
 12380  0EAC  00CB               	movwf	??_LIN_calcParity
 12381  0EAD  1CCD               	btfss	LIN_calcParity@PID,1
 12382  0EAE  2EB1               	goto	u2540
 12383  0EAF  3001               	movlw	1
 12384  0EB0  2EB2               	goto	u2542
 12385  0EB1                     u2540:
 12386  0EB1  3000               	movlw	0
 12387  0EB2                     u2542:
 12388  0EB2  064B               	xorwf	??_LIN_calcParity,w
 12389  0EB3  1903               	btfsc	3,2
 12390  0EB4  2EB8               	goto	u2550
 12391  0EB5  0140               	movlb	0	; select bank0
 12392  0EB6  17CD               	bsf	LIN_calcParity@PID,7
 12393  0EB7  2EBA               	goto	u2564
 12394  0EB8                     u2550:
 12395  0EB8  0140               	movlb	0	; select bank0
 12396  0EB9  13CD               	bcf	LIN_calcParity@PID,7
 12397  0EBA                     u2564:
 12398                           
 12399                           ;mcc_generated_files/LINDrivers/lin_slave.c: 263:     PID.P1 = PID.P1 ^ PID.ID4;
 12400  0EBA  1E4D               	btfss	LIN_calcParity@PID,4
 12401  0EBB  2EBE               	goto	u2570
 12402  0EBC  3001               	movlw	1
 12403  0EBD  2EBF               	goto	u2572
 12404  0EBE                     u2570:
 12405  0EBE  3000               	movlw	0
 12406  0EBF                     u2572:
 12407  0EBF  00CB               	movwf	??_LIN_calcParity
 12408  0EC0  1FCD               	btfss	LIN_calcParity@PID,7
 12409  0EC1  2EC4               	goto	u2580
 12410  0EC2  3001               	movlw	1
 12411  0EC3  2EC5               	goto	u2582
 12412  0EC4                     u2580:
 12413  0EC4  3000               	movlw	0
 12414  0EC5                     u2582:
 12415  0EC5  064B               	xorwf	??_LIN_calcParity,w
 12416  0EC6  1903               	btfsc	3,2
 12417  0EC7  2ECB               	goto	u2590
 12418  0EC8  0140               	movlb	0	; select bank0
 12419  0EC9  17CD               	bsf	LIN_calcParity@PID,7
 12420  0ECA  2ECD               	goto	u2604
 12421  0ECB                     u2590:
 12422  0ECB  0140               	movlb	0	; select bank0
 12423  0ECC  13CD               	bcf	LIN_calcParity@PID,7
 12424  0ECD                     u2604:
 12425                           
 12426                           ;mcc_generated_files/LINDrivers/lin_slave.c: 264:     PID.P1 = PID.P1 ^ PID.ID5;
 12427  0ECD  1ECD               	btfss	LIN_calcParity@PID,5
 12428  0ECE  2ED1               	goto	u2610
 12429  0ECF  3001               	movlw	1
 12430  0ED0  2ED2               	goto	u2612
 12431  0ED1                     u2610:
 12432  0ED1  3000               	movlw	0
 12433  0ED2                     u2612:
 12434  0ED2  00CB               	movwf	??_LIN_calcParity
 12435  0ED3  1FCD               	btfss	LIN_calcParity@PID,7
 12436  0ED4  2ED7               	goto	u2620
 12437  0ED5  3001               	movlw	1
 12438  0ED6  2ED8               	goto	u2622
 12439  0ED7                     u2620:
 12440  0ED7  3000               	movlw	0
 12441  0ED8                     u2622:
 12442  0ED8  064B               	xorwf	??_LIN_calcParity,w
 12443  0ED9  1903               	btfsc	3,2
 12444  0EDA  2EDE               	goto	u2630
 12445  0EDB  0140               	movlb	0	; select bank0
 12446  0EDC  17CD               	bsf	LIN_calcParity@PID,7
 12447  0EDD  2EE0               	goto	l4652
 12448  0EDE                     u2630:
 12449  0EDE  0140               	movlb	0	; select bank0
 12450  0EDF  13CD               	bcf	LIN_calcParity@PID,7
 12451  0EE0                     l4652:
 12452                           
 12453                           ;mcc_generated_files/LINDrivers/lin_slave.c: 265:     PID.P1 = ~PID.P1;
 12454  0EE0  1003               	clrc
 12455  0EE1  1FCD               	btfss	LIN_calcParity@PID,7
 12456  0EE2  1403               	setc
 12457  0EE3  1C03               	btfss	3,0
 12458  0EE4  2EE8               	goto	u2650
 12459  0EE5  0140               	movlb	0	; select bank0
 12460  0EE6  17CD               	bsf	LIN_calcParity@PID,7
 12461  0EE7  2EEA               	goto	l4654
 12462  0EE8                     u2650:
 12463  0EE8  0140               	movlb	0	; select bank0
 12464  0EE9  13CD               	bcf	LIN_calcParity@PID,7
 12465  0EEA                     l4654:
 12466                           
 12467                           ;mcc_generated_files/LINDrivers/lin_slave.c: 267:     return PID.rawPID;
 12468  0EEA  084D               	movf	LIN_calcParity@PID,w
 12469  0EEB  0008               	return
 12470  0EEC                     __end_of_LIN_calcParity:
 12471                           
 12472                           	psect	text44
 12473  08E5                     __ptext44:	
 12474 ;; *************** function _LIN_breakCheck *****************
 12475 ;; Defined at:
 12476 ;;		line 321 in file "mcc_generated_files/LINDrivers/lin_slave.c"
 12477 ;; Parameters:    Size  Location     Type
 12478 ;;		None
 12479 ;; Auto vars:     Size  Location     Type
 12480 ;;		None
 12481 ;; Return value:  Size  Location     Type
 12482 ;;                  1    wreg      _Bool 
 12483 ;; Registers used:
 12484 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12485 ;; Tracked objects:
 12486 ;;		On entry : 3F/0
 12487 ;;		On exit  : 3F/0
 12488 ;;		Unchanged: 0/0
 12489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12493 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12494 ;;Total ram usage:        0 bytes
 12495 ;; Hardware stack levels used: 1
 12496 ;; Hardware stack levels required when called: 6
 12497 ;; This function calls:
 12498 ;;		_EUSART1_Read
 12499 ;;		_EUSART1_get_last_status
 12500 ;; This function is called by:
 12501 ;;		_LIN_handler
 12502 ;; This function uses a non-reentrant model
 12503 ;;
 12504                           
 12505                           
 12506                           ;psect for function _LIN_breakCheck
 12507  08E5                     _LIN_breakCheck:
 12508                           
 12509                           ;mcc_generated_files/LINDrivers/lin_slave.c: 323:     if((EUSART1_Read() == 0x00) && (EU
      +                          SART1_get_last_status().ferr == 1)){
 12510                           
 12511                           ;incstack = 0
 12512                           ; Regs used in _LIN_breakCheck: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12513  08E5  318A  22AC  3188   	fcall	_EUSART1_Read
 12514  08E8  3A00               	xorlw	0
 12515  08E9  1D03               	skipz
 12516  08EA  28F2               	goto	l4834
 12517  08EB  3180  2002  3188   	fcall	_EUSART1_get_last_status
 12518  08EE  1C89               	btfss	9,1
 12519  08EF  28F2               	goto	l4834
 12520                           
 12521                           ;mcc_generated_files/LINDrivers/lin_slave.c: 324:         return 1;
 12522  08F0  3001               	movlw	1
 12523  08F1  0008               	return
 12524  08F2                     l4834:
 12525                           
 12526                           ;mcc_generated_files/LINDrivers/lin_slave.c: 327:     return 0;
 12527  08F2  3000               	movlw	0
 12528  08F3  0008               	return
 12529  08F4                     __end_of_LIN_breakCheck:
 12530                           
 12531                           	psect	text45
 12532  0002                     __ptext45:	
 12533 ;; *************** function _EUSART1_get_last_status *****************
 12534 ;; Defined at:
 12535 ;;		line 147 in file "mcc_generated_files/eusart1.c"
 12536 ;; Parameters:    Size  Location     Type
 12537 ;;		None
 12538 ;; Auto vars:     Size  Location     Type
 12539 ;;		None
 12540 ;; Return value:  Size  Location     Type
 12541 ;;                  1    wreg      struct .
 12542 ;; Registers used:
 12543 ;;		wreg
 12544 ;; Tracked objects:
 12545 ;;		On entry : 3F/0
 12546 ;;		On exit  : 3F/0
 12547 ;;		Unchanged: 0/0
 12548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12552 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12553 ;;Total ram usage:        0 bytes
 12554 ;; Hardware stack levels used: 1
 12555 ;; Hardware stack levels required when called: 5
 12556 ;; This function calls:
 12557 ;;		Nothing
 12558 ;; This function is called by:
 12559 ;;		_LIN_breakCheck
 12560 ;; This function uses a non-reentrant model
 12561 ;;
 12562                           
 12563                           
 12564                           ;psect for function _EUSART1_get_last_status
 12565  0002                     _EUSART1_get_last_status:
 12566                           
 12567                           ;mcc_generated_files/eusart1.c: 148:     return eusart1RxLastError;
 12568                           
 12569                           ;incstack = 0
 12570                           ; Regs used in _EUSART1_get_last_status: [wreg]
 12571  0002  0822               	movf	_eusart1RxLastError,w	;volatile
 12572  0003  0008               	return
 12573  0004                     __end_of_EUSART1_get_last_status:
 12574                           
 12575                           	psect	text46
 12576  0AAC                     __ptext46:	
 12577 ;; *************** function _EUSART1_Read *****************
 12578 ;; Defined at:
 12579 ;;		line 151 in file "mcc_generated_files/eusart1.c"
 12580 ;; Parameters:    Size  Location     Type
 12581 ;;		None
 12582 ;; Auto vars:     Size  Location     Type
 12583 ;;  readValue       1    1[BANK0 ] unsigned char 
 12584 ;; Return value:  Size  Location     Type
 12585 ;;                  1    wreg      unsigned char 
 12586 ;; Registers used:
 12587 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12588 ;; Tracked objects:
 12589 ;;		On entry : 3F/0
 12590 ;;		On exit  : 3F/0
 12591 ;;		Unchanged: 0/0
 12592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12594 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12595 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12596 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12597 ;;Total ram usage:        2 bytes
 12598 ;; Hardware stack levels used: 1
 12599 ;; Hardware stack levels required when called: 5
 12600 ;; This function calls:
 12601 ;;		Nothing
 12602 ;; This function is called by:
 12603 ;;		_LIN_handler
 12604 ;;		_LIN_breakCheck
 12605 ;; This function uses a non-reentrant model
 12606 ;;
 12607                           
 12608                           
 12609                           ;psect for function _EUSART1_Read
 12610  0AAC                     _EUSART1_Read:
 12611  0AAC                     l4586:	
 12612                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
 12613                           
 12614                           ;incstack = 0
 12615                           ; Regs used in _EUSART1_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
 12616                           
 12617                           
 12618                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
 12619  0AAC  0823               	movf	_eusart1RxCount,w	;volatile
 12620  0AAD  1903               	btfsc	3,2
 12621  0AAE  2AAC               	goto	l4586
 12622                           
 12623                           ;mcc_generated_files/eusart1.c: 159:     eusart1RxLastError = eusart1RxStatusBuffer[eusa
      +                          rt1RxTail];
 12624  0AAF  0870               	movf	_eusart1RxTail,w	;volatile
 12625  0AB0  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 12626  0AB1  0086               	movwf	6
 12627  0AB2  3001               	movlw	1	; select bank2/3
 12628  0AB3  0087               	movwf	7
 12629  0AB4  0801               	movf	1,w
 12630  0AB5  00CB               	movwf	??_EUSART1_Read
 12631  0AB6  084B               	movf	??_EUSART1_Read,w
 12632  0AB7  00A2               	movwf	_eusart1RxLastError	;volatile
 12633                           
 12634                           ;mcc_generated_files/eusart1.c: 161:     readValue = eusart1RxBuffer[eusart1RxTail++];
 12635  0AB8  0870               	movf	_eusart1RxTail,w
 12636  0AB9  3E28               	addlw	(low (_eusart1RxBuffer| (0+256)))& (0+255)
 12637  0ABA  0086               	movwf	6
 12638  0ABB  3001               	movlw	1	; select bank2/3
 12639  0ABC  0087               	movwf	7
 12640  0ABD  0801               	movf	1,w
 12641  0ABE  00CB               	movwf	??_EUSART1_Read
 12642  0ABF  084B               	movf	??_EUSART1_Read,w
 12643  0AC0  00CC               	movwf	EUSART1_Read@readValue
 12644  0AC1  3001               	movlw	1
 12645  0AC2  00CB               	movwf	??_EUSART1_Read
 12646  0AC3  084B               	movf	??_EUSART1_Read,w
 12647  0AC4  07F0               	addwf	_eusart1RxTail,f	;volatile
 12648                           
 12649                           ;mcc_generated_files/eusart1.c: 162:     if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
 12650  0AC5  3008               	movlw	8
 12651  0AC6  0270               	subwf	_eusart1RxTail,w
 12652  0AC7  1803               	btfsc	3,0
 12653                           
 12654                           ;mcc_generated_files/eusart1.c: 163:     {;mcc_generated_files/eusart1.c: 164:         e
      +                          usart1RxTail = 0;
 12655  0AC8  01F0               	clrf	_eusart1RxTail	;volatile
 12656                           
 12657                           ;mcc_generated_files/eusart1.c: 166:     PIE3bits.RC1IE = 0;
 12658  0AC9  014E               	movlb	14	; select bank14
 12659  0ACA  1299               	bcf	25,5	;volatile
 12660                           
 12661                           ;mcc_generated_files/eusart1.c: 167:     eusart1RxCount--;
 12662  0ACB  3001               	movlw	1
 12663  0ACC  0140               	movlb	0	; select bank0
 12664  0ACD  02A3               	subwf	_eusart1RxCount,f	;volatile
 12665                           
 12666                           ;mcc_generated_files/eusart1.c: 168:     PIE3bits.RC1IE = 1;
 12667  0ACE  014E               	movlb	14	; select bank14
 12668  0ACF  1699               	bsf	25,5	;volatile
 12669                           
 12670                           ;mcc_generated_files/eusart1.c: 170:     return readValue;
 12671  0AD0  0140               	movlb	0	; select bank0
 12672  0AD1  084C               	movf	EUSART1_Read@readValue,w
 12673  0AD2  0008               	return
 12674  0AD3                     __end_of_EUSART1_Read:
 12675                           
 12676                           	psect	text47
 12677  080D                     __ptext47:	
 12678 ;; *************** function _EUSART1_is_rx_ready *****************
 12679 ;; Defined at:
 12680 ;;		line 137 in file "mcc_generated_files/eusart1.c"
 12681 ;; Parameters:    Size  Location     Type
 12682 ;;		None
 12683 ;; Auto vars:     Size  Location     Type
 12684 ;;		None
 12685 ;; Return value:  Size  Location     Type
 12686 ;;                  1    wreg      _Bool 
 12687 ;; Registers used:
 12688 ;;		wreg, status,2, status,0
 12689 ;; Tracked objects:
 12690 ;;		On entry : 3C/2
 12691 ;;		On exit  : 3F/0
 12692 ;;		Unchanged: 0/0
 12693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12698 ;;Total ram usage:        0 bytes
 12699 ;; Hardware stack levels used: 1
 12700 ;; Hardware stack levels required when called: 5
 12701 ;; This function calls:
 12702 ;;		Nothing
 12703 ;; This function is called by:
 12704 ;;		_LIN_handler
 12705 ;; This function uses a non-reentrant model
 12706 ;;
 12707                           
 12708                           
 12709                           ;psect for function _EUSART1_is_rx_ready
 12710  080D                     _EUSART1_is_rx_ready:
 12711                           
 12712                           ;mcc_generated_files/eusart1.c: 139:     return (eusart1RxCount ? 1 : 0);
 12713                           
 12714                           ;incstack = 0
 12715                           ; Regs used in _EUSART1_is_rx_ready: [wreg+status,2+status,0]
 12716  080D  0140               	movlb	0	; select bank0
 12717  080E  0823               	movf	_eusart1RxCount,w	;volatile
 12718  080F  1903               	btfsc	3,2
 12719  0810  2813               	goto	u2830
 12720  0811  3001               	movlw	1
 12721  0812  0008               	return
 12722  0813                     u2830:
 12723  0813  3000               	movlw	0
 12724  0814  0008               	return
 12725  0815                     __end_of_EUSART1_is_rx_ready:
 12726                           
 12727                           	psect	text48
 12728  0F6F                     __ptext48:	
 12729 ;; *************** function _EFuse *****************
 12730 ;; Defined at:
 12731 ;;		line 157 in file "efuse.c"
 12732 ;; Parameters:    Size  Location     Type
 12733 ;;		None
 12734 ;; Auto vars:     Size  Location     Type
 12735 ;;		None
 12736 ;; Return value:  Size  Location     Type
 12737 ;;                  1    wreg      void 
 12738 ;; Registers used:
 12739 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12740 ;; Tracked objects:
 12741 ;;		On entry : 0/0
 12742 ;;		On exit  : 3C/0
 12743 ;;		Unchanged: 0/0
 12744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12747 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
 12748 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
 12749 ;;Total ram usage:        2 bytes
 12750 ;; Hardware stack levels used: 1
 12751 ;; Hardware stack levels required when called: 7
 12752 ;; This function calls:
 12753 ;;		_CmdOutput
 12754 ;;		_GetAmbientTemperature
 12755 ;;		_TCC_Curve
 12756 ;;		_Update_LIN_Data
 12757 ;; This function is called by:
 12758 ;;		_main
 12759 ;; This function uses a non-reentrant model
 12760 ;;
 12761                           
 12762                           
 12763                           ;psect for function _EFuse
 12764  0F6F                     _EFuse:
 12765                           
 12766                           ;efuse.c: 160:     if(PIR4bits.TMR1IF && (outputState == OUTPUT_ON))
 12767                           
 12768                           ;incstack = 0
 12769                           ; Regs used in _EFuse: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12770  0F6F  014E               	movlb	14	; select bank14
 12771  0F70  1C10               	btfss	16,0	;volatile
 12772  0F71  2F82               	goto	l5376
 12773  0F72  0140               	movlb	0	; select bank0
 12774  0F73  032C               	decf	_outputState,w
 12775  0F74  1D03               	btfss	3,2
 12776  0F75  2F82               	goto	l5376
 12777                           
 12778                           ;efuse.c: 161:     {;efuse.c: 162:        overCurrentFault = SHORT_CIRCUIT;
 12779  0F76  3003               	movlw	3
 12780  0F77  0142               	movlb	2	; select bank2
 12781  0F78  00D8               	movwf	??_EFuse^(0+256)
 12782  0F79  0858               	movf	??_EFuse^(0+256),w
 12783  0F7A  0140               	movlb	0	; select bank0
 12784  0F7B  00AB               	movwf	_overCurrentFault
 12785                           
 12786                           ;efuse.c: 163:        CmdOutput(OUTPUT_OFF);
 12787  0F7C  3000               	movlw	0
 12788  0F7D  318D  25A2  318F   	fcall	_CmdOutput
 12789                           
 12790                           ;efuse.c: 164:        PIR4bits.TMR1IF = 0;
 12791  0F80  014E               	movlb	14	; select bank14
 12792  0F81  1010               	bcf	16,0	;volatile
 12793  0F82                     l5376:
 12794                           
 12795                           ;efuse.c: 167:     if(ticks_1ms >= tcc_sample_time)
 12796  0F82  0141               	movlb	1	; select bank1
 12797  0F83  0862               	movf	(_tcc_sample_time+1)^(0+128),w
 12798  0F84  0235               	subwf	(_ticks_1ms+1)^(0+128),w
 12799  0F85  1D03               	skipz
 12800  0F86  2F89               	goto	u3345
 12801  0F87  0861               	movf	_tcc_sample_time^(0+128),w
 12802  0F88  0234               	subwf	_ticks_1ms^(0+128),w
 12803  0F89                     u3345:
 12804  0F89  1C03               	skipc
 12805  0F8A  0008               	return
 12806                           
 12807                           ;efuse.c: 168:     {;efuse.c: 169:         ticks_1ms = 0;
 12808  0F8B  01B4               	clrf	_ticks_1ms^(0+128)
 12809  0F8C  01B5               	clrf	(_ticks_1ms+1)^(0+128)
 12810                           
 12811                           ;efuse.c: 172:         if(CLCDATAbits.MLC4OUT && (outputState == OUTPUT_ON))
 12812  0F8D  017C               	movlb	60	; select bank60
 12813  0F8E  1D8F               	btfss	15,3	;volatile
 12814  0F8F  2F9F               	goto	l5390
 12815  0F90  0140               	movlb	0	; select bank0
 12816  0F91  032C               	decf	_outputState,w
 12817  0F92  1D03               	btfss	3,2
 12818  0F93  2F9F               	goto	l5390
 12819                           
 12820                           ;efuse.c: 173:         {;efuse.c: 175:             CLC3GLS1 = 0x00;
 12821  0F94  017C               	movlb	60	; select bank60
 12822  0F95  01AB               	clrf	43	;volatile
 12823                           
 12824                           ;efuse.c: 176:             T2TMR = 0x00;
 12825  0F96  0145               	movlb	5	; select bank5
 12826  0F97  018C               	clrf	12	;volatile
 12827                           
 12828                           ;efuse.c: 177:             CLC3POL = 0x00;
 12829  0F98  017C               	movlb	60	; select bank60
 12830  0F99  01A5               	clrf	37	;volatile
 12831                           
 12832                           ;efuse.c: 178:             CLC3POL = 0x03;
 12833  0F9A  3003               	movlw	3
 12834  0F9B  00A5               	movwf	37	;volatile
 12835                           
 12836                           ;efuse.c: 179:             CLC3POL = 0x00;
 12837  0F9C  01A5               	clrf	37	;volatile
 12838                           
 12839                           ;efuse.c: 180:             CLC3GLS1 = 0x08;
 12840  0F9D  3008               	movlw	8
 12841  0F9E  00AB               	movwf	43	;volatile
 12842  0F9F                     l5390:
 12843                           
 12844                           ;efuse.c: 182:         Tambient=GetAmbientTemperature();
 12845  0F9F  318C  24A6  318F   	fcall	_GetAmbientTemperature
 12846  0FA2  084C               	movf	?_GetAmbientTemperature+1,w
 12847  0FA3  00ED               	movwf	_Tambient+1
 12848  0FA4  084B               	movf	?_GetAmbientTemperature,w
 12849  0FA5  00EC               	movwf	_Tambient
 12850                           
 12851                           ;efuse.c: 183:         if(Tambient >= 115)
 12852  0FA6  086D               	movf	_Tambient+1,w
 12853  0FA7  3A80               	xorlw	128
 12854  0FA8  0142               	movlb	2	; select bank2
 12855  0FA9  00D8               	movwf	??_EFuse^(0+256)
 12856  0FAA  3080               	movlw	128
 12857  0FAB  0258               	subwf	??_EFuse^(0+256),w
 12858  0FAC  1D03               	skipz
 12859  0FAD  2FB1               	goto	u3375
 12860  0FAE  3073               	movlw	115
 12861  0FAF  0140               	movlb	0	; select bank0
 12862  0FB0  026C               	subwf	_Tambient,w
 12863  0FB1                     u3375:
 12864  0FB1  1C03               	skipc
 12865  0FB2  2FBB               	goto	l5400
 12866                           
 12867                           ;efuse.c: 184:         {;efuse.c: 185:             Tambient = 115;
 12868  0FB3  3073               	movlw	115
 12869  0FB4  0140               	movlb	0	; select bank0
 12870  0FB5  00EC               	movwf	_Tambient
 12871  0FB6  3000               	movlw	0
 12872  0FB7  00ED               	movwf	_Tambient+1
 12873                           
 12874                           ;efuse.c: 186:             overTempFault = TEMP_FAULT;
 12875  0FB8  01A9               	clrf	_overTempFault
 12876  0FB9  0AA9               	incf	_overTempFault,f
 12877  0FBA  2FF9               	goto	l5416
 12878  0FBB                     l5400:	
 12879                           ;efuse.c: 188:         }
 12880                           
 12881                           ;efuse.c: 187:             CmdOutput(OUTPUT_OFF);
 12882                           
 12883                           
 12884                           ;efuse.c: 190:         {;efuse.c: 191:             if((adcISense_curr >= iSenseOffset) &
      +                          & (iSenseOffset < 10))
 12885  0FBB  0140               	movlb	0	; select bank0
 12886  0FBC  0838               	movf	_iSenseOffset+1,w
 12887  0FBD  023C               	subwf	_adcISense_curr+1,w
 12888  0FBE  1D03               	skipz
 12889  0FBF  2FC2               	goto	u3385
 12890  0FC0  0837               	movf	_iSenseOffset,w
 12891  0FC1  023B               	subwf	_adcISense_curr,w
 12892  0FC2                     u3385:
 12893  0FC2  1C03               	skipc
 12894  0FC3  2FD2               	goto	l5406
 12895  0FC4  3000               	movlw	0
 12896  0FC5  0238               	subwf	_iSenseOffset+1,w
 12897  0FC6  300A               	movlw	10
 12898  0FC7  1903               	skipnz
 12899  0FC8  0237               	subwf	_iSenseOffset,w
 12900  0FC9  1803               	skipnc
 12901  0FCA  2FD2               	goto	l5406
 12902                           
 12903                           ;efuse.c: 192:             {;efuse.c: 193:                 adcISense_corr = adcISense_cu
      +                          rr - iSenseOffset;
 12904  0FCB  0837               	movf	_iSenseOffset,w
 12905  0FCC  023B               	subwf	_adcISense_curr,w
 12906  0FCD  00B9               	movwf	_adcISense_corr
 12907  0FCE  0838               	movf	_iSenseOffset+1,w
 12908  0FCF  3B3C               	subwfb	_adcISense_curr+1,w
 12909  0FD0  00BA               	movwf	_adcISense_corr+1
 12910                           
 12911                           ;efuse.c: 194:             }
 12912  0FD1  2FD6               	goto	l5408
 12913  0FD2                     l5406:
 12914                           
 12915                           ;efuse.c: 196:             {;efuse.c: 197:                 adcISense_corr = adcISense_cu
      +                          rr;
 12916  0FD2  083C               	movf	_adcISense_curr+1,w
 12917  0FD3  00BA               	movwf	_adcISense_corr+1
 12918  0FD4  083B               	movf	_adcISense_curr,w
 12919  0FD5  00B9               	movwf	_adcISense_corr
 12920  0FD6                     l5408:
 12921                           
 12922                           ;efuse.c: 199:             adcISense_OneMOSFET = adcISense_corr / 2;
 12923  0FD6  083A               	movf	_adcISense_corr+1,w
 12924  0FD7  0142               	movlb	2	; select bank2
 12925  0FD8  00D9               	movwf	(??_EFuse^(0+256)+1)
 12926  0FD9  0140               	movlb	0	; select bank0
 12927  0FDA  0839               	movf	_adcISense_corr,w
 12928  0FDB  0142               	movlb	2	; select bank2
 12929  0FDC  00D8               	movwf	??_EFuse^(0+256)
 12930  0FDD  36D9               	lsrf	(??_EFuse^(0+256)+1),f
 12931  0FDE  0CD8               	rrf	??_EFuse^(0+256),f
 12932  0FDF  0858               	movf	??_EFuse^(0+256),w
 12933  0FE0  0141               	movlb	1	; select bank1
 12934  0FE1  00AE               	movwf	_adcISense_OneMOSFET^(0+128)
 12935  0FE2  0142               	movlb	2	; select bank2
 12936  0FE3  0859               	movf	(??_EFuse+1)^(0+256),w
 12937  0FE4  0141               	movlb	1	; select bank1
 12938  0FE5  00AF               	movwf	(_adcISense_OneMOSFET+1)^(0+128)
 12939                           
 12940                           ;efuse.c: 200:             TCC_Curve();
 12941  0FE6  3180  2067  318F   	fcall	_TCC_Curve
 12942                           
 12943                           ;efuse.c: 201:             if(Tjunction >= tj_limit)
 12944  0FE9  0834               	movf	_Tjunction+1,w
 12945  0FEA  3A80               	xorlw	128
 12946  0FEB  0142               	movlb	2	; select bank2
 12947  0FEC  00D8               	movwf	??_EFuse^(0+256)
 12948  0FED  3080               	movlw	128
 12949  0FEE  0258               	subwf	??_EFuse^(0+256),w
 12950  0FEF  1D03               	skipz
 12951  0FF0  2FF4               	goto	u3405
 12952  0FF1  0140               	movlb	0	; select bank0
 12953  0FF2  086B               	movf	_tj_limit,w
 12954  0FF3  0233               	subwf	_Tjunction,w
 12955  0FF4                     u3405:
 12956  0FF4  1C03               	skipc
 12957  0FF5  2FFD               	goto	l1464
 12958                           
 12959                           ;efuse.c: 202:             {;efuse.c: 203:                 overCurrentFault = SLOW_OVER_
      +                          CURRENT_FAULT;
 12960  0FF6  0140               	movlb	0	; select bank0
 12961  0FF7  01AB               	clrf	_overCurrentFault
 12962  0FF8  0AAB               	incf	_overCurrentFault,f
 12963  0FF9                     l5416:
 12964                           
 12965                           ;efuse.c: 204:                 CmdOutput(OUTPUT_OFF);
 12966  0FF9  3000               	movlw	0
 12967  0FFA  318D  25A2  318F   	fcall	_CmdOutput
 12968  0FFD                     l1464:	
 12969                           ;efuse.c: 206:         }
 12970                           
 12971                           
 12972                           ;efuse.c: 207:         Update_LIN_Data();
 12973  0FFD  3185  25D8         	fcall	_Update_LIN_Data
 12974  0FFF  0008               	return
 12975  1000                     __end_of_EFuse:
 12976                           
 12977                           	psect	text49
 12978  05D8                     __ptext49:	
 12979 ;; *************** function _Update_LIN_Data *****************
 12980 ;; Defined at:
 12981 ;;		line 133 in file "mcc_generated_files/LINDrivers/lin_app.c"
 12982 ;; Parameters:    Size  Location     Type
 12983 ;;		None
 12984 ;; Auto vars:     Size  Location     Type
 12985 ;;		None
 12986 ;; Return value:  Size  Location     Type
 12987 ;;                  1    wreg      void 
 12988 ;; Registers used:
 12989 ;;		wreg, status,2
 12990 ;; Tracked objects:
 12991 ;;		On entry : 0/0
 12992 ;;		On exit  : 3F/2
 12993 ;;		Unchanged: 0/0
 12994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12997 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12998 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12999 ;;Total ram usage:        1 bytes
 13000 ;; Hardware stack levels used: 1
 13001 ;; Hardware stack levels required when called: 5
 13002 ;; This function calls:
 13003 ;;		Nothing
 13004 ;; This function is called by:
 13005 ;;		_EFuse
 13006 ;; This function uses a non-reentrant model
 13007 ;;
 13008                           
 13009                           
 13010                           ;psect for function _Update_LIN_Data
 13011  05D8                     _Update_LIN_Data:
 13012                           
 13013                           ;mcc_generated_files/LINDrivers/lin_app.c: 135:             LIN_OUTPUT_STATE_Data[0] = o
      +                          utputState;
 13014                           
 13015                           ;incstack = 0
 13016                           ; Regs used in _Update_LIN_Data: [wreg+status,2]
 13017  05D8  0140               	movlb	0	; select bank0
 13018  05D9  082C               	movf	_outputState,w
 13019  05DA  00CB               	movwf	??_Update_LIN_Data
 13020  05DB  084B               	movf	??_Update_LIN_Data,w
 13021  05DC  00C3               	movwf	_LIN_OUTPUT_STATE_Data
 13022                           
 13023                           ;mcc_generated_files/LINDrivers/lin_app.c: 137:             LIN_GET_TRIGGER_TYPE_Data[0]
      +                           = triggerType;
 13024  05DD  082E               	movf	_triggerType,w
 13025  05DE  00CB               	movwf	??_Update_LIN_Data
 13026  05DF  084B               	movf	??_Update_LIN_Data,w
 13027  05E0  00C2               	movwf	_LIN_GET_TRIGGER_TYPE_Data
 13028                           
 13029                           ;mcc_generated_files/LINDrivers/lin_app.c: 139:             LIN_OVER_CURRENT_FAULT_Data[
      +                          0] = overCurrentFault;
 13030  05E1  082B               	movf	_overCurrentFault,w
 13031  05E2  00CB               	movwf	??_Update_LIN_Data
 13032  05E3  084B               	movf	??_Update_LIN_Data,w
 13033  05E4  00C1               	movwf	_LIN_OVER_CURRENT_FAULT_Data
 13034                           
 13035                           ;mcc_generated_files/LINDrivers/lin_app.c: 141:             LIN_UVLO_FAULT_Data[0] = uvl
      +                          oFault;
 13036  05E5  082A               	movf	_uvloFault,w
 13037  05E6  00CB               	movwf	??_Update_LIN_Data
 13038  05E7  084B               	movf	??_Update_LIN_Data,w
 13039  05E8  00C0               	movwf	_LIN_UVLO_FAULT_Data
 13040                           
 13041                           ;mcc_generated_files/LINDrivers/lin_app.c: 143:             LIN_OVER_TEMP_FAULT_Data[0] 
      +                          = overTempFault;
 13042  05E9  0829               	movf	_overTempFault,w
 13043  05EA  00CB               	movwf	??_Update_LIN_Data
 13044  05EB  084B               	movf	??_Update_LIN_Data,w
 13045  05EC  00BF               	movwf	_LIN_OVER_TEMP_FAULT_Data
 13046                           
 13047                           ;mcc_generated_files/LINDrivers/lin_app.c: 145:             LIN_ADC_VCC_SENSE_Data[0] = 
      +                          0xff & adcVccSense_curr;
 13048  05ED  083D               	movf	_adcVccSense_curr,w
 13049  05EE  00CB               	movwf	??_Update_LIN_Data
 13050  05EF  084B               	movf	??_Update_LIN_Data,w
 13051  05F0  0141               	movlb	1	; select bank1
 13052  05F1  00D5               	movwf	_LIN_ADC_VCC_SENSE_Data^(0+128)
 13053                           
 13054                           ;mcc_generated_files/LINDrivers/lin_app.c: 146:             LIN_ADC_VCC_SENSE_Data[1] = 
      +                          0xff & (adcVccSense_curr >> 8);
 13055  05F2  0140               	movlb	0	; select bank0
 13056  05F3  083E               	movf	_adcVccSense_curr+1,w
 13057  05F4  00CB               	movwf	??_Update_LIN_Data
 13058  05F5  084B               	movf	??_Update_LIN_Data,w
 13059  05F6  0141               	movlb	1	; select bank1
 13060  05F7  00D6               	movwf	(_LIN_ADC_VCC_SENSE_Data^(0+128)+1)
 13061                           
 13062                           ;mcc_generated_files/LINDrivers/lin_app.c: 148:             LIN_ADC_CURRENT_SENSE_UNCORR
      +                          ECTED_Data[0] = 0xff & adcISense_curr;
 13063  05F8  0140               	movlb	0	; select bank0
 13064  05F9  083B               	movf	_adcISense_curr,w
 13065  05FA  00CB               	movwf	??_Update_LIN_Data
 13066  05FB  084B               	movf	??_Update_LIN_Data,w
 13067  05FC  0141               	movlb	1	; select bank1
 13068  05FD  00D3               	movwf	_LIN_ADC_CURRENT_SENSE_UNCORRECTED_Data^(0+128)
 13069                           
 13070                           ;mcc_generated_files/LINDrivers/lin_app.c: 149:             LIN_ADC_CURRENT_SENSE_UNCORR
      +                          ECTED_Data[1] = 0xff & (adcISense_curr >> 8);
 13071  05FE  0140               	movlb	0	; select bank0
 13072  05FF  083C               	movf	_adcISense_curr+1,w
 13073  0600  00CB               	movwf	??_Update_LIN_Data
 13074  0601  084B               	movf	??_Update_LIN_Data,w
 13075  0602  0141               	movlb	1	; select bank1
 13076  0603  00D4               	movwf	(_LIN_ADC_CURRENT_SENSE_UNCORRECTED_Data^(0+128)+1)
 13077                           
 13078                           ;mcc_generated_files/LINDrivers/lin_app.c: 151:             LIN_ADC_TEMP_SENSE_Data[0] =
      +                           0xff & adcTSense_curr;
 13079  0604  0874               	movf	_adcTSense_curr,w
 13080  0605  0140               	movlb	0	; select bank0
 13081  0606  00CB               	movwf	??_Update_LIN_Data
 13082  0607  084B               	movf	??_Update_LIN_Data,w
 13083  0608  0141               	movlb	1	; select bank1
 13084  0609  00D1               	movwf	_LIN_ADC_TEMP_SENSE_Data^(0+128)
 13085                           
 13086                           ;mcc_generated_files/LINDrivers/lin_app.c: 152:             LIN_ADC_TEMP_SENSE_Data[1] =
      +                           0xff & (adcTSense_curr >> 8);
 13087  060A  0875               	movf	_adcTSense_curr+1,w
 13088  060B  0140               	movlb	0	; select bank0
 13089  060C  00CB               	movwf	??_Update_LIN_Data
 13090  060D  084B               	movf	??_Update_LIN_Data,w
 13091  060E  0141               	movlb	1	; select bank1
 13092  060F  00D2               	movwf	(_LIN_ADC_TEMP_SENSE_Data^(0+128)+1)
 13093                           
 13094                           ;mcc_generated_files/LINDrivers/lin_app.c: 154:             LIN_ADC_CURRENT_SENSE_CORREC
      +                          TED_Data[0] = 0xff & adcISense_corr;
 13095  0610  0140               	movlb	0	; select bank0
 13096  0611  0839               	movf	_adcISense_corr,w
 13097  0612  00CB               	movwf	??_Update_LIN_Data
 13098  0613  084B               	movf	??_Update_LIN_Data,w
 13099  0614  0141               	movlb	1	; select bank1
 13100  0615  00CF               	movwf	_LIN_ADC_CURRENT_SENSE_CORRECTED_Data^(0+128)
 13101                           
 13102                           ;mcc_generated_files/LINDrivers/lin_app.c: 155:             LIN_ADC_CURRENT_SENSE_CORREC
      +                          TED_Data[1] = 0xff & (adcISense_corr >> 8);
 13103  0616  0140               	movlb	0	; select bank0
 13104  0617  083A               	movf	_adcISense_corr+1,w
 13105  0618  00CB               	movwf	??_Update_LIN_Data
 13106  0619  084B               	movf	??_Update_LIN_Data,w
 13107  061A  0141               	movlb	1	; select bank1
 13108  061B  00D0               	movwf	(_LIN_ADC_CURRENT_SENSE_CORRECTED_Data^(0+128)+1)
 13109                           
 13110                           ;mcc_generated_files/LINDrivers/lin_app.c: 157:             LIN_CURRENT_SENSE_OFFSET_Dat
      +                          a[0] = 0xff & iSenseOffset;
 13111  061C  0140               	movlb	0	; select bank0
 13112  061D  0837               	movf	_iSenseOffset,w
 13113  061E  00CB               	movwf	??_Update_LIN_Data
 13114  061F  084B               	movf	??_Update_LIN_Data,w
 13115  0620  0141               	movlb	1	; select bank1
 13116  0621  00CD               	movwf	_LIN_CURRENT_SENSE_OFFSET_Data^(0+128)
 13117                           
 13118                           ;mcc_generated_files/LINDrivers/lin_app.c: 158:             LIN_CURRENT_SENSE_OFFSET_Dat
      +                          a[1] = 0xff & (iSenseOffset >> 8);
 13119  0622  0140               	movlb	0	; select bank0
 13120  0623  0838               	movf	_iSenseOffset+1,w
 13121  0624  00CB               	movwf	??_Update_LIN_Data
 13122  0625  084B               	movf	??_Update_LIN_Data,w
 13123  0626  0141               	movlb	1	; select bank1
 13124  0627  00CE               	movwf	(_LIN_CURRENT_SENSE_OFFSET_Data^(0+128)+1)
 13125                           
 13126                           ;mcc_generated_files/LINDrivers/lin_app.c: 160:             LIN_AMBIENT_TEMPERATURE_Data
      +                          [0] = 0xff & Tambient;
 13127  0628  0140               	movlb	0	; select bank0
 13128  0629  086C               	movf	_Tambient,w
 13129  062A  00CB               	movwf	??_Update_LIN_Data
 13130  062B  084B               	movf	??_Update_LIN_Data,w
 13131  062C  0141               	movlb	1	; select bank1
 13132  062D  00CB               	movwf	_LIN_AMBIENT_TEMPERATURE_Data^(0+128)
 13133                           
 13134                           ;mcc_generated_files/LINDrivers/lin_app.c: 161:             LIN_AMBIENT_TEMPERATURE_Data
      +                          [1] = 0xff & (Tambient >> 8);
 13135  062E  0140               	movlb	0	; select bank0
 13136  062F  086D               	movf	_Tambient+1,w
 13137  0630  00CB               	movwf	??_Update_LIN_Data
 13138  0631  084B               	movf	??_Update_LIN_Data,w
 13139  0632  0141               	movlb	1	; select bank1
 13140  0633  00CC               	movwf	(_LIN_AMBIENT_TEMPERATURE_Data^(0+128)+1)
 13141                           
 13142                           ;mcc_generated_files/LINDrivers/lin_app.c: 163:             LIN_HEATSINK_TEMPERATURE_Dat
      +                          a[0] = 0xff & Tsink;
 13143  0634  0140               	movlb	0	; select bank0
 13144  0635  0835               	movf	_Tsink,w
 13145  0636  00CB               	movwf	??_Update_LIN_Data
 13146  0637  084B               	movf	??_Update_LIN_Data,w
 13147  0638  0141               	movlb	1	; select bank1
 13148  0639  00C9               	movwf	_LIN_HEATSINK_TEMPERATURE_Data^(0+128)
 13149                           
 13150                           ;mcc_generated_files/LINDrivers/lin_app.c: 164:             LIN_HEATSINK_TEMPERATURE_Dat
      +                          a[1] = 0xff & (Tsink >> 8);
 13151  063A  0140               	movlb	0	; select bank0
 13152  063B  0836               	movf	_Tsink+1,w
 13153  063C  00CB               	movwf	??_Update_LIN_Data
 13154  063D  084B               	movf	??_Update_LIN_Data,w
 13155  063E  0141               	movlb	1	; select bank1
 13156  063F  00CA               	movwf	(_LIN_HEATSINK_TEMPERATURE_Data^(0+128)+1)
 13157                           
 13158                           ;mcc_generated_files/LINDrivers/lin_app.c: 166:             LIN_JUNCTION_TEMPERATURE_Dat
      +                          a[0] = 0xff & Tjunction;
 13159  0640  0140               	movlb	0	; select bank0
 13160  0641  0833               	movf	_Tjunction,w
 13161  0642  00CB               	movwf	??_Update_LIN_Data
 13162  0643  084B               	movf	??_Update_LIN_Data,w
 13163  0644  0141               	movlb	1	; select bank1
 13164  0645  00C7               	movwf	_LIN_JUNCTION_TEMPERATURE_Data^(0+128)
 13165                           
 13166                           ;mcc_generated_files/LINDrivers/lin_app.c: 167:             LIN_JUNCTION_TEMPERATURE_Dat
      +                          a[1] = 0xff & (Tjunction >> 8);
 13167  0646  0140               	movlb	0	; select bank0
 13168  0647  0834               	movf	_Tjunction+1,w
 13169  0648  00CB               	movwf	??_Update_LIN_Data
 13170  0649  084B               	movf	??_Update_LIN_Data,w
 13171  064A  0141               	movlb	1	; select bank1
 13172  064B  00C8               	movwf	(_LIN_JUNCTION_TEMPERATURE_Data^(0+128)+1)
 13173                           
 13174                           ;mcc_generated_files/LINDrivers/lin_app.c: 169:             LIN_TEMPERATURE_RISE_JS_Data
      +                          [0] = 0xff & Trise_js;
 13175  064C  0140               	movlb	0	; select bank0
 13176  064D  0831               	movf	_Trise_js,w
 13177  064E  00CB               	movwf	??_Update_LIN_Data
 13178  064F  084B               	movf	??_Update_LIN_Data,w
 13179  0650  0141               	movlb	1	; select bank1
 13180  0651  00C5               	movwf	_LIN_TEMPERATURE_RISE_JS_Data^(0+128)
 13181                           
 13182                           ;mcc_generated_files/LINDrivers/lin_app.c: 170:             LIN_TEMPERATURE_RISE_JS_Data
      +                          [1] = 0xff & (Trise_js >> 8);
 13183  0652  0140               	movlb	0	; select bank0
 13184  0653  0832               	movf	_Trise_js+1,w
 13185  0654  00CB               	movwf	??_Update_LIN_Data
 13186  0655  084B               	movf	??_Update_LIN_Data,w
 13187  0656  0141               	movlb	1	; select bank1
 13188  0657  00C6               	movwf	(_LIN_TEMPERATURE_RISE_JS_Data^(0+128)+1)
 13189                           
 13190                           ;mcc_generated_files/LINDrivers/lin_app.c: 172:             LIN_TEMPERATURE_RISE_SA_Data
      +                          [0] = 0xff & Trise_sa;
 13191  0658  0140               	movlb	0	; select bank0
 13192  0659  082F               	movf	_Trise_sa,w
 13193  065A  00CB               	movwf	??_Update_LIN_Data
 13194  065B  084B               	movf	??_Update_LIN_Data,w
 13195  065C  0141               	movlb	1	; select bank1
 13196  065D  00C3               	movwf	_LIN_TEMPERATURE_RISE_SA_Data^(0+128)
 13197                           
 13198                           ;mcc_generated_files/LINDrivers/lin_app.c: 173:             LIN_TEMPERATURE_RISE_SA_Data
      +                          [1] = 0xff & (Trise_sa >> 8);
 13199  065E  0140               	movlb	0	; select bank0
 13200  065F  0830               	movf	_Trise_sa+1,w
 13201  0660  00CB               	movwf	??_Update_LIN_Data
 13202  0661  084B               	movf	??_Update_LIN_Data,w
 13203  0662  0141               	movlb	1	; select bank1
 13204  0663  00C4               	movwf	(_LIN_TEMPERATURE_RISE_SA_Data^(0+128)+1)
 13205                           
 13206                           ;mcc_generated_files/LINDrivers/lin_app.c: 175:             LIN_DIAGNOSTIC_Data[0] = 0xf
      +                          f & adcISense_corr;
 13207  0664  0140               	movlb	0	; select bank0
 13208  0665  0839               	movf	_adcISense_corr,w
 13209  0666  00CB               	movwf	??_Update_LIN_Data
 13210  0667  084B               	movf	??_Update_LIN_Data,w
 13211  0668  0142               	movlb	2	; select bank2
 13212  0669  00B8               	movwf	_LIN_DIAGNOSTIC_Data^(0+256)
 13213                           
 13214                           ;mcc_generated_files/LINDrivers/lin_app.c: 176:             LIN_DIAGNOSTIC_Data[1] = 0xf
      +                          f & (adcISense_corr >> 8);
 13215  066A  0140               	movlb	0	; select bank0
 13216  066B  083A               	movf	_adcISense_corr+1,w
 13217  066C  00CB               	movwf	??_Update_LIN_Data
 13218  066D  084B               	movf	??_Update_LIN_Data,w
 13219  066E  0142               	movlb	2	; select bank2
 13220  066F  00B9               	movwf	(_LIN_DIAGNOSTIC_Data^(0+256)+1)
 13221                           
 13222                           ;mcc_generated_files/LINDrivers/lin_app.c: 177:             LIN_DIAGNOSTIC_Data[2] = 0xf
      +                          f & Tambient;
 13223  0670  0140               	movlb	0	; select bank0
 13224  0671  086C               	movf	_Tambient,w
 13225  0672  00CB               	movwf	??_Update_LIN_Data
 13226  0673  084B               	movf	??_Update_LIN_Data,w
 13227  0674  0142               	movlb	2	; select bank2
 13228  0675  00BA               	movwf	(_LIN_DIAGNOSTIC_Data^(0+256)+2)
 13229                           
 13230                           ;mcc_generated_files/LINDrivers/lin_app.c: 178:             LIN_DIAGNOSTIC_Data[3] = 0xf
      +                          f & (Tambient >> 8);
 13231  0676  0140               	movlb	0	; select bank0
 13232  0677  086D               	movf	_Tambient+1,w
 13233  0678  00CB               	movwf	??_Update_LIN_Data
 13234  0679  084B               	movf	??_Update_LIN_Data,w
 13235  067A  0142               	movlb	2	; select bank2
 13236  067B  00BB               	movwf	(_LIN_DIAGNOSTIC_Data^(0+256)+3)
 13237                           
 13238                           ;mcc_generated_files/LINDrivers/lin_app.c: 179:             LIN_DIAGNOSTIC_Data[4] = 0xf
      +                          f & Tsink;
 13239  067C  0140               	movlb	0	; select bank0
 13240  067D  0835               	movf	_Tsink,w
 13241  067E  00CB               	movwf	??_Update_LIN_Data
 13242  067F  084B               	movf	??_Update_LIN_Data,w
 13243  0680  0142               	movlb	2	; select bank2
 13244  0681  00BC               	movwf	(_LIN_DIAGNOSTIC_Data^(0+256)+4)
 13245                           
 13246                           ;mcc_generated_files/LINDrivers/lin_app.c: 180:             LIN_DIAGNOSTIC_Data[5] = 0xf
      +                          f & (Tsink >> 8);
 13247  0682  0140               	movlb	0	; select bank0
 13248  0683  0836               	movf	_Tsink+1,w
 13249  0684  00CB               	movwf	??_Update_LIN_Data
 13250  0685  084B               	movf	??_Update_LIN_Data,w
 13251  0686  0142               	movlb	2	; select bank2
 13252  0687  00BD               	movwf	(_LIN_DIAGNOSTIC_Data^(0+256)+5)
 13253                           
 13254                           ;mcc_generated_files/LINDrivers/lin_app.c: 181:             LIN_DIAGNOSTIC_Data[6] = 0xf
      +                          f & Tjunction;
 13255  0688  0140               	movlb	0	; select bank0
 13256  0689  0833               	movf	_Tjunction,w
 13257  068A  00CB               	movwf	??_Update_LIN_Data
 13258  068B  084B               	movf	??_Update_LIN_Data,w
 13259  068C  0142               	movlb	2	; select bank2
 13260  068D  00BE               	movwf	(_LIN_DIAGNOSTIC_Data^(0+256)+6)
 13261                           
 13262                           ;mcc_generated_files/LINDrivers/lin_app.c: 182:             LIN_DIAGNOSTIC_Data[7] = 0xf
      +                          f & (Tjunction >> 8);
 13263  068E  0140               	movlb	0	; select bank0
 13264  068F  0834               	movf	_Tjunction+1,w
 13265  0690  00CB               	movwf	??_Update_LIN_Data
 13266  0691  084B               	movf	??_Update_LIN_Data,w
 13267  0692  0142               	movlb	2	; select bank2
 13268  0693  00BF               	movwf	(_LIN_DIAGNOSTIC_Data^(0+256)+7)
 13269  0694  0008               	return
 13270  0695                     __end_of_Update_LIN_Data:
 13271                           
 13272                           	psect	text50
 13273  0067                     __ptext50:	
 13274 ;; *************** function _TCC_Curve *****************
 13275 ;; Defined at:
 13276 ;;		line 362 in file "efuse.c"
 13277 ;; Parameters:    Size  Location     Type
 13278 ;;		None
 13279 ;; Auto vars:     Size  Location     Type
 13280 ;;		None
 13281 ;; Return value:  Size  Location     Type
 13282 ;;                  1    wreg      void 
 13283 ;; Registers used:
 13284 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13285 ;; Tracked objects:
 13286 ;;		On entry : 3F/1
 13287 ;;		On exit  : 3F/0
 13288 ;;		Unchanged: 0/0
 13289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13291 ;;      Locals:         0       0       0      12       0       0       0       0       0       0       0       0       
      +0       0
 13292 ;;      Temps:          0       0       0      12       0       0       0       0       0       0       0       0       
      +0       0
 13293 ;;      Totals:         0       0       0      24       0       0       0       0       0       0       0       0       
      +0       0
 13294 ;;Total ram usage:       24 bytes
 13295 ;; Hardware stack levels used: 1
 13296 ;; Hardware stack levels required when called: 6
 13297 ;; This function calls:
 13298 ;;		___lldiv
 13299 ;;		___lmul
 13300 ;;		___omul
 13301 ;; This function is called by:
 13302 ;;		_EFuse
 13303 ;; This function uses a non-reentrant model
 13304 ;;
 13305                           
 13306                           
 13307                           ;psect for function _TCC_Curve
 13308  0067                     _TCC_Curve:
 13309                           
 13310                           ;efuse.c: 364:     Trise_raw_prev = Trise_raw_curr;
 13311                           
 13312                           ;incstack = 0
 13313                           ; Regs used in _TCC_Curve: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13314  0067  0827               	movf	(_Trise_raw_curr+3)^(0+128),w
 13315  0068  00A3               	movwf	(_Trise_raw_prev+3)^(0+128)
 13316  0069  0826               	movf	(_Trise_raw_curr+2)^(0+128),w
 13317  006A  00A2               	movwf	(_Trise_raw_prev+2)^(0+128)
 13318  006B  0825               	movf	(_Trise_raw_curr+1)^(0+128),w
 13319  006C  00A1               	movwf	(_Trise_raw_prev+1)^(0+128)
 13320  006D  0824               	movf	_Trise_raw_curr^(0+128),w
 13321  006E  00A0               	movwf	_Trise_raw_prev^(0+128)
 13322                           
 13323                           ;efuse.c: 365:     Trise_raw_curr = (uint32_t) ((((uint64_t) adcISense_corr * (uint64_t)
      +                           adcISense_corr) * factor_rdson_rthsa) >> 10);
 13324  006F  0140               	movlb	0	; select bank0
 13325  0070  083A               	movf	_adcISense_corr+1,w
 13326  0071  0142               	movlb	2	; select bank2
 13327  0072  00C1               	movwf	(??_TCC_Curve^(0+256)+1)
 13328  0073  0140               	movlb	0	; select bank0
 13329  0074  0839               	movf	_adcISense_corr,w
 13330  0075  0142               	movlb	2	; select bank2
 13331  0076  00C0               	movwf	??_TCC_Curve^(0+256)
 13332  0077  0840               	movf	??_TCC_Curve^(0+256),w
 13333  0078  0140               	movlb	0	; select bank0
 13334  0079  00CB               	movwf	___omul@multiplier
 13335  007A  0142               	movlb	2	; select bank2
 13336  007B  0841               	movf	(??_TCC_Curve^(0+256)+1),w
 13337  007C  0140               	movlb	0	; select bank0
 13338  007D  00CC               	movwf	___omul@multiplier+1
 13339  007E  01CD               	clrf	___omul@multiplier+2
 13340  007F  01CE               	clrf	___omul@multiplier+3
 13341  0080  01CF               	clrf	___omul@multiplier+4
 13342  0081  01D0               	clrf	___omul@multiplier+5
 13343  0082  01D1               	clrf	___omul@multiplier+6
 13344  0083  01D2               	clrf	___omul@multiplier+7
 13345  0084  083A               	movf	_adcISense_corr+1,w
 13346  0085  0142               	movlb	2	; select bank2
 13347  0086  00C3               	movwf	((??_TCC_Curve+2)^(0+256)+1)
 13348  0087  0140               	movlb	0	; select bank0
 13349  0088  0839               	movf	_adcISense_corr,w
 13350  0089  0142               	movlb	2	; select bank2
 13351  008A  00C2               	movwf	(??_TCC_Curve+2)^(0+256)
 13352  008B  0842               	movf	(??_TCC_Curve+2)^(0+256),w
 13353  008C  0140               	movlb	0	; select bank0
 13354  008D  00D3               	movwf	___omul@multiplicand
 13355  008E  0142               	movlb	2	; select bank2
 13356  008F  0843               	movf	((??_TCC_Curve+2)^(0+256)+1),w
 13357  0090  0140               	movlb	0	; select bank0
 13358  0091  00D4               	movwf	___omul@multiplicand+1
 13359  0092  01D5               	clrf	___omul@multiplicand+2
 13360  0093  01D6               	clrf	___omul@multiplicand+3
 13361  0094  01D7               	clrf	___omul@multiplicand+4
 13362  0095  01D8               	clrf	___omul@multiplicand+5
 13363  0096  01D9               	clrf	___omul@multiplicand+6
 13364  0097  01DA               	clrf	___omul@multiplicand+7
 13365  0098  318C  245F  3180   	fcall	___omul
 13366  009B  084B               	movf	?___omul,w
 13367  009C  0142               	movlb	2	; select bank2
 13368  009D  00CC               	movwf	_TCC_Curve$3311^(0+256)
 13369  009E  0140               	movlb	0	; select bank0
 13370  009F  084C               	movf	?___omul+1,w
 13371  00A0  0142               	movlb	2	; select bank2
 13372  00A1  00CD               	movwf	(_TCC_Curve$3311+1)^(0+256)
 13373  00A2  0140               	movlb	0	; select bank0
 13374  00A3  084D               	movf	?___omul+2,w
 13375  00A4  0142               	movlb	2	; select bank2
 13376  00A5  00CE               	movwf	(_TCC_Curve$3311+2)^(0+256)
 13377  00A6  0140               	movlb	0	; select bank0
 13378  00A7  084E               	movf	?___omul+3,w
 13379  00A8  0142               	movlb	2	; select bank2
 13380  00A9  00CF               	movwf	(_TCC_Curve$3311+3)^(0+256)
 13381  00AA  0140               	movlb	0	; select bank0
 13382  00AB  084F               	movf	?___omul+4,w
 13383  00AC  0142               	movlb	2	; select bank2
 13384  00AD  00D0               	movwf	(_TCC_Curve$3311+4)^(0+256)
 13385  00AE  0140               	movlb	0	; select bank0
 13386  00AF  0850               	movf	?___omul+5,w
 13387  00B0  0142               	movlb	2	; select bank2
 13388  00B1  00D1               	movwf	(_TCC_Curve$3311+5)^(0+256)
 13389  00B2  0140               	movlb	0	; select bank0
 13390  00B3  0851               	movf	?___omul+6,w
 13391  00B4  0142               	movlb	2	; select bank2
 13392  00B5  00D2               	movwf	(_TCC_Curve$3311+6)^(0+256)
 13393  00B6  0140               	movlb	0	; select bank0
 13394  00B7  0852               	movf	?___omul+7,w
 13395  00B8  0142               	movlb	2	; select bank2
 13396  00B9  00D3               	movwf	(_TCC_Curve$3311+7)^(0+256)
 13397                           
 13398                           ;efuse.c: 365:     Trise_raw_curr = (uint32_t) ((((uint64_t) adcISense_corr * (uint64_t)
      +                           adcISense_corr) * factor_rdson_rthsa) >> 10);
 13399  00BA  084C               	movf	_TCC_Curve$3311^(0+256),w
 13400  00BB  0140               	movlb	0	; select bank0
 13401  00BC  00CB               	movwf	___omul@multiplier
 13402  00BD  0142               	movlb	2	; select bank2
 13403  00BE  084D               	movf	(_TCC_Curve$3311+1)^(0+256),w
 13404  00BF  0140               	movlb	0	; select bank0
 13405  00C0  00CC               	movwf	___omul@multiplier+1
 13406  00C1  0142               	movlb	2	; select bank2
 13407  00C2  084E               	movf	(_TCC_Curve$3311+2)^(0+256),w
 13408  00C3  0140               	movlb	0	; select bank0
 13409  00C4  00CD               	movwf	___omul@multiplier+2
 13410  00C5  0142               	movlb	2	; select bank2
 13411  00C6  084F               	movf	(_TCC_Curve$3311+3)^(0+256),w
 13412  00C7  0140               	movlb	0	; select bank0
 13413  00C8  00CE               	movwf	___omul@multiplier+3
 13414  00C9  0142               	movlb	2	; select bank2
 13415  00CA  0850               	movf	(_TCC_Curve$3311+4)^(0+256),w
 13416  00CB  0140               	movlb	0	; select bank0
 13417  00CC  00CF               	movwf	___omul@multiplier+4
 13418  00CD  0142               	movlb	2	; select bank2
 13419  00CE  0851               	movf	(_TCC_Curve$3311+5)^(0+256),w
 13420  00CF  0140               	movlb	0	; select bank0
 13421  00D0  00D0               	movwf	___omul@multiplier+5
 13422  00D1  0142               	movlb	2	; select bank2
 13423  00D2  0852               	movf	(_TCC_Curve$3311+6)^(0+256),w
 13424  00D3  0140               	movlb	0	; select bank0
 13425  00D4  00D1               	movwf	___omul@multiplier+6
 13426  00D5  0142               	movlb	2	; select bank2
 13427  00D6  0853               	movf	(_TCC_Curve$3311+7)^(0+256),w
 13428  00D7  0140               	movlb	0	; select bank0
 13429  00D8  00D2               	movwf	___omul@multiplier+7
 13430  00D9  0141               	movlb	1	; select bank1
 13431  00DA  0868               	movf	(_factor_rdson_rthsa+1)^(0+128),w
 13432  00DB  0142               	movlb	2	; select bank2
 13433  00DC  00C1               	movwf	(??_TCC_Curve^(0+256)+1)
 13434  00DD  0141               	movlb	1	; select bank1
 13435  00DE  0867               	movf	_factor_rdson_rthsa^(0+128),w
 13436  00DF  0142               	movlb	2	; select bank2
 13437  00E0  00C0               	movwf	??_TCC_Curve^(0+256)
 13438  00E1  0840               	movf	??_TCC_Curve^(0+256),w
 13439  00E2  0140               	movlb	0	; select bank0
 13440  00E3  00D3               	movwf	___omul@multiplicand
 13441  00E4  0142               	movlb	2	; select bank2
 13442  00E5  0841               	movf	(??_TCC_Curve^(0+256)+1),w
 13443  00E6  0140               	movlb	0	; select bank0
 13444  00E7  00D4               	movwf	___omul@multiplicand+1
 13445  00E8  01D5               	clrf	___omul@multiplicand+2
 13446  00E9  01D6               	clrf	___omul@multiplicand+3
 13447  00EA  01D7               	clrf	___omul@multiplicand+4
 13448  00EB  01D8               	clrf	___omul@multiplicand+5
 13449  00EC  01D9               	clrf	___omul@multiplicand+6
 13450  00ED  01DA               	clrf	___omul@multiplicand+7
 13451  00EE  318C  245F  3180   	fcall	___omul
 13452  00F1  304B               	movlw	low ?___omul
 13453  00F2  0086               	movwf	6
 13454  00F3  3000               	movlw	high ?___omul
 13455  00F4  0087               	movwf	7
 13456  00F5  3F40               	moviw [0]fsr1
 13457  00F6  0142               	movlb	2	; select bank2
 13458  00F7  00C2               	movwf	(??_TCC_Curve+2)^(0+256)
 13459  00F8  3F41               	moviw [1]fsr1
 13460  00F9  00C3               	movwf	((??_TCC_Curve+2)^(0+256)+1)
 13461  00FA  3F42               	moviw [2]fsr1
 13462  00FB  00C4               	movwf	((??_TCC_Curve+2)^(0+256)+2)
 13463  00FC  3F43               	moviw [3]fsr1
 13464  00FD  00C5               	movwf	((??_TCC_Curve+2)^(0+256)+3)
 13465  00FE  3F44               	moviw [4]fsr1
 13466  00FF  00C6               	movwf	((??_TCC_Curve+2)^(0+256)+4)
 13467  0100  3F45               	moviw [5]fsr1
 13468  0101  00C7               	movwf	((??_TCC_Curve+2)^(0+256)+5)
 13469  0102  3F46               	moviw [6]fsr1
 13470  0103  00C8               	movwf	((??_TCC_Curve+2)^(0+256)+6)
 13471  0104  3F47               	moviw [7]fsr1
 13472  0105  00C9               	movwf	((??_TCC_Curve+2)^(0+256)+7)
 13473  0106  300A               	movlw	10
 13474  0107                     u3295:
 13475  0107  0142               	movlb	2	; select bank2
 13476  0108  36C9               	lsrf	((??_TCC_Curve+2)^(0+256)+7),f
 13477  0109  0CC8               	rrf	((??_TCC_Curve+2)^(0+256)+6),f
 13478  010A  0CC7               	rrf	((??_TCC_Curve+2)^(0+256)+5),f
 13479  010B  0CC6               	rrf	((??_TCC_Curve+2)^(0+256)+4),f
 13480  010C  0CC5               	rrf	((??_TCC_Curve+2)^(0+256)+3),f
 13481  010D  0CC4               	rrf	((??_TCC_Curve+2)^(0+256)+2),f
 13482  010E  0CC3               	rrf	((??_TCC_Curve+2)^(0+256)+1),f
 13483  010F  0CC2               	rrf	(??_TCC_Curve+2)^(0+256),f
 13484  0110  0B89               	decfsz	9,f
 13485  0111  2907               	goto	u3295
 13486  0112  0142               	movlb	2	; select bank2
 13487  0113  0845               	movf	((??_TCC_Curve+2)^(0+256)+3),w
 13488  0114  0141               	movlb	1	; select bank1
 13489  0115  00A7               	movwf	(_Trise_raw_curr+3)^(0+128)
 13490  0116  0142               	movlb	2	; select bank2
 13491  0117  0844               	movf	((??_TCC_Curve+2)^(0+256)+2),w
 13492  0118  0141               	movlb	1	; select bank1
 13493  0119  00A6               	movwf	(_Trise_raw_curr+2)^(0+128)
 13494  011A  0142               	movlb	2	; select bank2
 13495  011B  0843               	movf	((??_TCC_Curve+2)^(0+256)+1),w
 13496  011C  0141               	movlb	1	; select bank1
 13497  011D  00A5               	movwf	(_Trise_raw_curr+1)^(0+128)
 13498  011E  0142               	movlb	2	; select bank2
 13499  011F  0842               	movf	(??_TCC_Curve+2)^(0+256),w
 13500  0120  0141               	movlb	1	; select bank1
 13501  0121  00A4               	movwf	_Trise_raw_curr^(0+128)
 13502                           
 13503                           ;efuse.c: 366:     Trise_filtered = (uint32_t) ((uint64_t) a1_coef * Trise_filtered + (u
      +                          int32_t) b1_coef * (Trise_raw_prev + Trise_raw_curr)) >> 16;
 13504  0122  0820               	movf	_Trise_raw_prev^(0+128),w
 13505  0123  0724               	addwf	_Trise_raw_curr^(0+128),w
 13506  0124  0142               	movlb	2	; select bank2
 13507  0125  00C0               	movwf	??_TCC_Curve^(0+256)
 13508  0126  0141               	movlb	1	; select bank1
 13509  0127  0821               	movf	(_Trise_raw_prev+1)^(0+128),w
 13510  0128  3D25               	addwfc	(_Trise_raw_curr+1)^(0+128),w
 13511  0129  0142               	movlb	2	; select bank2
 13512  012A  00C1               	movwf	(??_TCC_Curve^(0+256)+1)
 13513  012B  0141               	movlb	1	; select bank1
 13514  012C  0822               	movf	(_Trise_raw_prev+2)^(0+128),w
 13515  012D  3D26               	addwfc	(_Trise_raw_curr+2)^(0+128),w
 13516  012E  0142               	movlb	2	; select bank2
 13517  012F  00C2               	movwf	(??_TCC_Curve^(0+256)+2)
 13518  0130  0141               	movlb	1	; select bank1
 13519  0131  0823               	movf	(_Trise_raw_prev+3)^(0+128),w
 13520  0132  3D27               	addwfc	(_Trise_raw_curr+3)^(0+128),w
 13521  0133  0142               	movlb	2	; select bank2
 13522  0134  00C3               	movwf	(??_TCC_Curve^(0+256)+3)
 13523  0135  0843               	movf	(??_TCC_Curve+3)^(0+256),w
 13524  0136  0140               	movlb	0	; select bank0
 13525  0137  00CE               	movwf	___lmul@multiplier+3
 13526  0138  0142               	movlb	2	; select bank2
 13527  0139  0842               	movf	(??_TCC_Curve+2)^(0+256),w
 13528  013A  0140               	movlb	0	; select bank0
 13529  013B  00CD               	movwf	___lmul@multiplier+2
 13530  013C  0142               	movlb	2	; select bank2
 13531  013D  0841               	movf	(??_TCC_Curve+1)^(0+256),w
 13532  013E  0140               	movlb	0	; select bank0
 13533  013F  00CC               	movwf	___lmul@multiplier+1
 13534  0140  0142               	movlb	2	; select bank2
 13535  0141  0840               	movf	??_TCC_Curve^(0+256),w
 13536  0142  0140               	movlb	0	; select bank0
 13537  0143  00CB               	movwf	___lmul@multiplier
 13538  0144  0869               	movf	_b1_coef,w
 13539  0145  0142               	movlb	2	; select bank2
 13540  0146  00C4               	movwf	(??_TCC_Curve+4)^(0+256)
 13541  0147  01C5               	clrf	((??_TCC_Curve+4)^(0+256)+1)
 13542  0148  01C6               	clrf	((??_TCC_Curve+4)^(0+256)+2)
 13543  0149  01C7               	clrf	((??_TCC_Curve+4)^(0+256)+3)
 13544  014A  0847               	movf	(??_TCC_Curve+7)^(0+256),w
 13545  014B  0140               	movlb	0	; select bank0
 13546  014C  00D2               	movwf	___lmul@multiplicand+3
 13547  014D  0142               	movlb	2	; select bank2
 13548  014E  0846               	movf	(??_TCC_Curve+6)^(0+256),w
 13549  014F  0140               	movlb	0	; select bank0
 13550  0150  00D1               	movwf	___lmul@multiplicand+2
 13551  0151  0142               	movlb	2	; select bank2
 13552  0152  0845               	movf	(??_TCC_Curve+5)^(0+256),w
 13553  0153  0140               	movlb	0	; select bank0
 13554  0154  00D0               	movwf	___lmul@multiplicand+1
 13555  0155  0142               	movlb	2	; select bank2
 13556  0156  0844               	movf	(??_TCC_Curve+4)^(0+256),w
 13557  0157  0140               	movlb	0	; select bank0
 13558  0158  00CF               	movwf	___lmul@multiplicand
 13559  0159  318B  2329  3180   	fcall	___lmul
 13560  015C  084B               	movf	?___lmul,w
 13561  015D  0142               	movlb	2	; select bank2
 13562  015E  00C8               	movwf	(??_TCC_Curve+8)^(0+256)
 13563  015F  0140               	movlb	0	; select bank0
 13564  0160  084C               	movf	?___lmul+1,w
 13565  0161  0142               	movlb	2	; select bank2
 13566  0162  00C9               	movwf	((??_TCC_Curve+8)^(0+256)+1)
 13567  0163  0140               	movlb	0	; select bank0
 13568  0164  084D               	movf	?___lmul+2,w
 13569  0165  0142               	movlb	2	; select bank2
 13570  0166  00CA               	movwf	((??_TCC_Curve+8)^(0+256)+2)
 13571  0167  0140               	movlb	0	; select bank0
 13572  0168  084E               	movf	?___lmul+3,w
 13573  0169  0142               	movlb	2	; select bank2
 13574  016A  00CB               	movwf	((??_TCC_Curve+8)^(0+256)+3)
 13575  016B  0141               	movlb	1	; select bank1
 13576  016C  0863               	movf	_a1_coef^(0+128),w
 13577  016D  0140               	movlb	0	; select bank0
 13578  016E  00CB               	movwf	___lmul@multiplier
 13579  016F  0141               	movlb	1	; select bank1
 13580  0170  0864               	movf	(_a1_coef+1)^(0+128),w
 13581  0171  0140               	movlb	0	; select bank0
 13582  0172  00CC               	movwf	___lmul@multiplier+1
 13583  0173  01CD               	clrf	___lmul@multiplier+2
 13584  0174  01CE               	clrf	___lmul@multiplier+3
 13585  0175  0141               	movlb	1	; select bank1
 13586  0176  082B               	movf	(_Trise_filtered+3)^(0+128),w
 13587  0177  0140               	movlb	0	; select bank0
 13588  0178  00D2               	movwf	___lmul@multiplicand+3
 13589  0179  0141               	movlb	1	; select bank1
 13590  017A  082A               	movf	(_Trise_filtered+2)^(0+128),w
 13591  017B  0140               	movlb	0	; select bank0
 13592  017C  00D1               	movwf	___lmul@multiplicand+2
 13593  017D  0141               	movlb	1	; select bank1
 13594  017E  0829               	movf	(_Trise_filtered+1)^(0+128),w
 13595  017F  0140               	movlb	0	; select bank0
 13596  0180  00D0               	movwf	___lmul@multiplicand+1
 13597  0181  0141               	movlb	1	; select bank1
 13598  0182  0828               	movf	_Trise_filtered^(0+128),w
 13599  0183  0140               	movlb	0	; select bank0
 13600  0184  00CF               	movwf	___lmul@multiplicand
 13601  0185  318B  2329  3180   	fcall	___lmul
 13602  0188  084B               	movf	?___lmul,w
 13603  0189  0142               	movlb	2	; select bank2
 13604  018A  07C8               	addwf	(??_TCC_Curve+8)^(0+256),f
 13605  018B  0140               	movlb	0	; select bank0
 13606  018C  084C               	movf	?___lmul+1,w
 13607  018D  0142               	movlb	2	; select bank2
 13608  018E  3DC9               	addwfc	((??_TCC_Curve+8)^(0+256)+1),f
 13609  018F  0140               	movlb	0	; select bank0
 13610  0190  084D               	movf	?___lmul+2,w
 13611  0191  0142               	movlb	2	; select bank2
 13612  0192  3DCA               	addwfc	((??_TCC_Curve+8)^(0+256)+2),f
 13613  0193  0140               	movlb	0	; select bank0
 13614  0194  084E               	movf	?___lmul+3,w
 13615  0195  0142               	movlb	2	; select bank2
 13616  0196  3DCB               	addwfc	((??_TCC_Curve+8)^(0+256)+3),f
 13617  0197  3010               	movlw	16
 13618  0198                     u3305:
 13619  0198  36CB               	lsrf	((??_TCC_Curve+8)^(0+256)+3),f
 13620  0199  0CCA               	rrf	((??_TCC_Curve+8)^(0+256)+2),f
 13621  019A  0CC9               	rrf	((??_TCC_Curve+8)^(0+256)+1),f
 13622  019B  0CC8               	rrf	(??_TCC_Curve+8)^(0+256),f
 13623  019C  0B89               	decfsz	9,f
 13624  019D  2998               	goto	u3305
 13625  019E  084B               	movf	(??_TCC_Curve+11)^(0+256),w
 13626  019F  0141               	movlb	1	; select bank1
 13627  01A0  00AB               	movwf	(_Trise_filtered+3)^(0+128)
 13628  01A1  0142               	movlb	2	; select bank2
 13629  01A2  084A               	movf	(??_TCC_Curve+10)^(0+256),w
 13630  01A3  0141               	movlb	1	; select bank1
 13631  01A4  00AA               	movwf	(_Trise_filtered+2)^(0+128)
 13632  01A5  0142               	movlb	2	; select bank2
 13633  01A6  0849               	movf	(??_TCC_Curve+9)^(0+256),w
 13634  01A7  0141               	movlb	1	; select bank1
 13635  01A8  00A9               	movwf	(_Trise_filtered+1)^(0+128)
 13636  01A9  0142               	movlb	2	; select bank2
 13637  01AA  0848               	movf	(??_TCC_Curve+8)^(0+256),w
 13638  01AB  0141               	movlb	1	; select bank1
 13639  01AC  00A8               	movwf	_Trise_filtered^(0+128)
 13640                           
 13641                           ;efuse.c: 368:     Trise_sa = (int16_t) (Trise_filtered / current2counts_squared);
 13642  01AD  0865               	movf	_current2counts_squared^(0+128),w
 13643  01AE  0140               	movlb	0	; select bank0
 13644  01AF  00D7               	movwf	___lldiv@divisor
 13645  01B0  0141               	movlb	1	; select bank1
 13646  01B1  0866               	movf	(_current2counts_squared+1)^(0+128),w
 13647  01B2  0140               	movlb	0	; select bank0
 13648  01B3  00D8               	movwf	___lldiv@divisor+1
 13649  01B4  01D9               	clrf	___lldiv@divisor+2
 13650  01B5  01DA               	clrf	___lldiv@divisor+3
 13651  01B6  0141               	movlb	1	; select bank1
 13652  01B7  082B               	movf	(_Trise_filtered+3)^(0+128),w
 13653  01B8  0140               	movlb	0	; select bank0
 13654  01B9  00DE               	movwf	___lldiv@dividend+3
 13655  01BA  0141               	movlb	1	; select bank1
 13656  01BB  082A               	movf	(_Trise_filtered+2)^(0+128),w
 13657  01BC  0140               	movlb	0	; select bank0
 13658  01BD  00DD               	movwf	___lldiv@dividend+2
 13659  01BE  0141               	movlb	1	; select bank1
 13660  01BF  0829               	movf	(_Trise_filtered+1)^(0+128),w
 13661  01C0  0140               	movlb	0	; select bank0
 13662  01C1  00DC               	movwf	___lldiv@dividend+1
 13663  01C2  0141               	movlb	1	; select bank1
 13664  01C3  0828               	movf	_Trise_filtered^(0+128),w
 13665  01C4  0140               	movlb	0	; select bank0
 13666  01C5  00DB               	movwf	___lldiv@dividend
 13667  01C6  318C  24F4  3180   	fcall	___lldiv
 13668  01C9  0858               	movf	?___lldiv+1,w
 13669  01CA  00B0               	movwf	_Trise_sa+1
 13670  01CB  0857               	movf	?___lldiv,w
 13671  01CC  00AF               	movwf	_Trise_sa
 13672                           
 13673                           ;efuse.c: 370:     Tsink = 85 + Trise_sa;
 13674  01CD  082F               	movf	_Trise_sa,w
 13675  01CE  3E55               	addlw	85
 13676  01CF  00B5               	movwf	_Tsink
 13677  01D0  3000               	movlw	0
 13678  01D1  3D30               	addwfc	_Trise_sa+1,w
 13679  01D2  00B6               	movwf	_Tsink+1
 13680                           
 13681                           ;efuse.c: 372:     Trise_js = (int16_t) (((((uint32_t) adcISense_OneMOSFET * (uint32_t) 
      +                          adcISense_OneMOSFET) * factor_rdson_rthjs) >> 10) / current2counts_squared);
 13682  01D3  0141               	movlb	1	; select bank1
 13683  01D4  082E               	movf	_adcISense_OneMOSFET^(0+128),w
 13684  01D5  0140               	movlb	0	; select bank0
 13685  01D6  00CF               	movwf	___lmul@multiplicand
 13686  01D7  0141               	movlb	1	; select bank1
 13687  01D8  082F               	movf	(_adcISense_OneMOSFET+1)^(0+128),w
 13688  01D9  0140               	movlb	0	; select bank0
 13689  01DA  00D0               	movwf	___lmul@multiplicand+1
 13690  01DB  01D1               	clrf	___lmul@multiplicand+2
 13691  01DC  01D2               	clrf	___lmul@multiplicand+3
 13692  01DD  0141               	movlb	1	; select bank1
 13693  01DE  082E               	movf	_adcISense_OneMOSFET^(0+128),w
 13694  01DF  0140               	movlb	0	; select bank0
 13695  01E0  00CB               	movwf	___lmul@multiplier
 13696  01E1  0141               	movlb	1	; select bank1
 13697  01E2  082F               	movf	(_adcISense_OneMOSFET+1)^(0+128),w
 13698  01E3  0140               	movlb	0	; select bank0
 13699  01E4  00CC               	movwf	___lmul@multiplier+1
 13700  01E5  01CD               	clrf	___lmul@multiplier+2
 13701  01E6  01CE               	clrf	___lmul@multiplier+3
 13702  01E7  318B  2329  3180   	fcall	___lmul
 13703  01EA  084E               	movf	?___lmul+3,w
 13704  01EB  0142               	movlb	2	; select bank2
 13705  01EC  00D7               	movwf	(_TCC_Curve$3312+3)^(0+256)
 13706  01ED  0140               	movlb	0	; select bank0
 13707  01EE  084D               	movf	?___lmul+2,w
 13708  01EF  0142               	movlb	2	; select bank2
 13709  01F0  00D6               	movwf	(_TCC_Curve$3312+2)^(0+256)
 13710  01F1  0140               	movlb	0	; select bank0
 13711  01F2  084C               	movf	?___lmul+1,w
 13712  01F3  0142               	movlb	2	; select bank2
 13713  01F4  00D5               	movwf	(_TCC_Curve$3312+1)^(0+256)
 13714  01F5  0140               	movlb	0	; select bank0
 13715  01F6  084B               	movf	?___lmul,w
 13716  01F7  0142               	movlb	2	; select bank2
 13717  01F8  00D4               	movwf	_TCC_Curve$3312^(0+256)
 13718                           
 13719                           ;efuse.c: 372:     Trise_js = (int16_t) (((((uint32_t) adcISense_OneMOSFET * (uint32_t) 
      +                          adcISense_OneMOSFET) * factor_rdson_rthjs) >> 10) / current2counts_squared);
 13720  01F9  0141               	movlb	1	; select bank1
 13721  01FA  0865               	movf	_current2counts_squared^(0+128),w
 13722  01FB  0140               	movlb	0	; select bank0
 13723  01FC  00D7               	movwf	___lldiv@divisor
 13724  01FD  0141               	movlb	1	; select bank1
 13725  01FE  0866               	movf	(_current2counts_squared+1)^(0+128),w
 13726  01FF  0140               	movlb	0	; select bank0
 13727  0200  00D8               	movwf	___lldiv@divisor+1
 13728  0201  01D9               	clrf	___lldiv@divisor+2
 13729  0202  01DA               	clrf	___lldiv@divisor+3
 13730  0203  0141               	movlb	1	; select bank1
 13731  0204  0869               	movf	_factor_rdson_rthjs^(0+128),w
 13732  0205  0140               	movlb	0	; select bank0
 13733  0206  00CF               	movwf	___lmul@multiplicand
 13734  0207  0141               	movlb	1	; select bank1
 13735  0208  086A               	movf	(_factor_rdson_rthjs+1)^(0+128),w
 13736  0209  0140               	movlb	0	; select bank0
 13737  020A  00D0               	movwf	___lmul@multiplicand+1
 13738  020B  01D1               	clrf	___lmul@multiplicand+2
 13739  020C  01D2               	clrf	___lmul@multiplicand+3
 13740  020D  0142               	movlb	2	; select bank2
 13741  020E  0857               	movf	(_TCC_Curve$3312+3)^(0+256),w
 13742  020F  0140               	movlb	0	; select bank0
 13743  0210  00CE               	movwf	___lmul@multiplier+3
 13744  0211  0142               	movlb	2	; select bank2
 13745  0212  0856               	movf	(_TCC_Curve$3312+2)^(0+256),w
 13746  0213  0140               	movlb	0	; select bank0
 13747  0214  00CD               	movwf	___lmul@multiplier+2
 13748  0215  0142               	movlb	2	; select bank2
 13749  0216  0855               	movf	(_TCC_Curve$3312+1)^(0+256),w
 13750  0217  0140               	movlb	0	; select bank0
 13751  0218  00CC               	movwf	___lmul@multiplier+1
 13752  0219  0142               	movlb	2	; select bank2
 13753  021A  0854               	movf	_TCC_Curve$3312^(0+256),w
 13754  021B  0140               	movlb	0	; select bank0
 13755  021C  00CB               	movwf	___lmul@multiplier
 13756  021D  318B  2329  3180   	fcall	___lmul
 13757  0220  084B               	movf	?___lmul,w
 13758  0221  0142               	movlb	2	; select bank2
 13759  0222  00C0               	movwf	??_TCC_Curve^(0+256)
 13760  0223  0140               	movlb	0	; select bank0
 13761  0224  084C               	movf	?___lmul+1,w
 13762  0225  0142               	movlb	2	; select bank2
 13763  0226  00C1               	movwf	(??_TCC_Curve^(0+256)+1)
 13764  0227  0140               	movlb	0	; select bank0
 13765  0228  084D               	movf	?___lmul+2,w
 13766  0229  0142               	movlb	2	; select bank2
 13767  022A  00C2               	movwf	(??_TCC_Curve^(0+256)+2)
 13768  022B  0140               	movlb	0	; select bank0
 13769  022C  084E               	movf	?___lmul+3,w
 13770  022D  0142               	movlb	2	; select bank2
 13771  022E  00C3               	movwf	(??_TCC_Curve^(0+256)+3)
 13772  022F  300A               	movlw	10
 13773  0230                     u3315:
 13774  0230  36C3               	lsrf	(??_TCC_Curve^(0+256)+3),f
 13775  0231  0CC2               	rrf	(??_TCC_Curve^(0+256)+2),f
 13776  0232  0CC1               	rrf	(??_TCC_Curve^(0+256)+1),f
 13777  0233  0CC0               	rrf	??_TCC_Curve^(0+256),f
 13778  0234  0B89               	decfsz	9,f
 13779  0235  2A30               	goto	u3315
 13780  0236  0843               	movf	(??_TCC_Curve+3)^(0+256),w
 13781  0237  0140               	movlb	0	; select bank0
 13782  0238  00DE               	movwf	___lldiv@dividend+3
 13783  0239  0142               	movlb	2	; select bank2
 13784  023A  0842               	movf	(??_TCC_Curve+2)^(0+256),w
 13785  023B  0140               	movlb	0	; select bank0
 13786  023C  00DD               	movwf	___lldiv@dividend+2
 13787  023D  0142               	movlb	2	; select bank2
 13788  023E  0841               	movf	(??_TCC_Curve+1)^(0+256),w
 13789  023F  0140               	movlb	0	; select bank0
 13790  0240  00DC               	movwf	___lldiv@dividend+1
 13791  0241  0142               	movlb	2	; select bank2
 13792  0242  0840               	movf	??_TCC_Curve^(0+256),w
 13793  0243  0140               	movlb	0	; select bank0
 13794  0244  00DB               	movwf	___lldiv@dividend
 13795  0245  318C  24F4         	fcall	___lldiv
 13796  0247  0858               	movf	?___lldiv+1,w
 13797  0248  00B2               	movwf	_Trise_js+1
 13798  0249  0857               	movf	?___lldiv,w
 13799  024A  00B1               	movwf	_Trise_js
 13800                           
 13801                           ;efuse.c: 373:     Tjunction = Tsink + Trise_js;
 13802  024B  0831               	movf	_Trise_js,w
 13803  024C  0735               	addwf	_Tsink,w
 13804  024D  00B3               	movwf	_Tjunction
 13805  024E  0832               	movf	_Trise_js+1,w
 13806  024F  3D36               	addwfc	_Tsink+1,w
 13807  0250  00B4               	movwf	_Tjunction+1
 13808  0251  0008               	return
 13809  0252                     __end_of_TCC_Curve:
 13810                           
 13811                           	psect	text51
 13812  0C5F                     __ptext51:	
 13813 ;; *************** function ___omul *****************
 13814 ;; Defined at:
 13815 ;;		line 91 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul64.c"
 13816 ;; Parameters:    Size  Location     Type
 13817 ;;  multiplier      8    0[BANK0 ] unsigned long long 
 13818 ;;  multiplicand    8    8[BANK0 ] unsigned long long 
 13819 ;; Auto vars:     Size  Location     Type
 13820 ;;  product         8   17[BANK0 ] unsigned long long 
 13821 ;; Return value:  Size  Location     Type
 13822 ;;                  8    0[BANK0 ] unsigned long long 
 13823 ;; Registers used:
 13824 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13825 ;; Tracked objects:
 13826 ;;		On entry : 3F/0
 13827 ;;		On exit  : 3F/0
 13828 ;;		Unchanged: 0/0
 13829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13830 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13831 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13832 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13833 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13834 ;;Total ram usage:       25 bytes
 13835 ;; Hardware stack levels used: 1
 13836 ;; Hardware stack levels required when called: 5
 13837 ;; This function calls:
 13838 ;;		Nothing
 13839 ;; This function is called by:
 13840 ;;		_TCC_Curve
 13841 ;; This function uses a non-reentrant model
 13842 ;;
 13843                           
 13844                           
 13845                           ;psect for function ___omul
 13846  0C5F                     ___omul:
 13847                           
 13848                           ;incstack = 0
 13849                           ; Regs used in ___omul: [wreg+fsr1l+fsr1h+status,2+status,0]
 13850  0C5F  305C               	movlw	low ___omul@product
 13851  0C60  0086               	movwf	6
 13852  0C61  3000               	movlw	high ___omul@product
 13853  0C62  0087               	movwf	7
 13854  0C63  3008               	movlw	8
 13855  0C64  00DB               	movwf	??___omul
 13856  0C65  3000               	movlw	0
 13857  0C66                     u3190:
 13858  0C66  001E               	movwi fsr1++
 13859  0C67  0BDB               	decfsz	??___omul,f
 13860  0C68  2C66               	goto	u3190
 13861  0C69                     l5316:
 13862  0C69  1C4B               	btfss	___omul@multiplier,0
 13863  0C6A  2C7B               	goto	l5320
 13864  0C6B  0853               	movf	___omul@multiplicand,w
 13865  0C6C  07DC               	addwf	___omul@product,f
 13866  0C6D  0854               	movf	___omul@multiplicand+1,w
 13867  0C6E  3DDD               	addwfc	___omul@product+1,f
 13868  0C6F  0855               	movf	___omul@multiplicand+2,w
 13869  0C70  3DDE               	addwfc	___omul@product+2,f
 13870  0C71  0856               	movf	___omul@multiplicand+3,w
 13871  0C72  3DDF               	addwfc	___omul@product+3,f
 13872  0C73  0857               	movf	___omul@multiplicand+4,w
 13873  0C74  3DE0               	addwfc	___omul@product+4,f
 13874  0C75  0858               	movf	___omul@multiplicand+5,w
 13875  0C76  3DE1               	addwfc	___omul@product+5,f
 13876  0C77  0859               	movf	___omul@multiplicand+6,w
 13877  0C78  3DE2               	addwfc	___omul@product+6,f
 13878  0C79  085A               	movf	___omul@multiplicand+7,w
 13879  0C7A  3DE3               	addwfc	___omul@product+7,f
 13880  0C7B                     l5320:
 13881  0C7B  35D3               	lslf	___omul@multiplicand,f
 13882  0C7C  0DD4               	rlf	___omul@multiplicand+1,f
 13883  0C7D  0DD5               	rlf	___omul@multiplicand+2,f
 13884  0C7E  0DD6               	rlf	___omul@multiplicand+3,f
 13885  0C7F  0DD7               	rlf	___omul@multiplicand+4,f
 13886  0C80  0DD8               	rlf	___omul@multiplicand+5,f
 13887  0C81  0DD9               	rlf	___omul@multiplicand+6,f
 13888  0C82  0DDA               	rlf	___omul@multiplicand+7,f
 13889  0C83  36D2               	lsrf	___omul@multiplier+7,f
 13890  0C84  0CD1               	rrf	___omul@multiplier+6,f
 13891  0C85  0CD0               	rrf	___omul@multiplier+5,f
 13892  0C86  0CCF               	rrf	___omul@multiplier+4,f
 13893  0C87  0CCE               	rrf	___omul@multiplier+3,f
 13894  0C88  0CCD               	rrf	___omul@multiplier+2,f
 13895  0C89  0CCC               	rrf	___omul@multiplier+1,f
 13896  0C8A  0CCB               	rrf	___omul@multiplier,f
 13897  0C8B  084B               	movf	___omul@multiplier,w
 13898  0C8C  044C               	iorwf	___omul@multiplier+1,w
 13899  0C8D  044D               	iorwf	___omul@multiplier+2,w
 13900  0C8E  044E               	iorwf	___omul@multiplier+3,w
 13901  0C8F  044F               	iorwf	___omul@multiplier+4,w
 13902  0C90  0450               	iorwf	___omul@multiplier+5,w
 13903  0C91  0451               	iorwf	___omul@multiplier+6,w
 13904  0C92  0452               	iorwf	___omul@multiplier+7,w
 13905  0C93  1D03               	skipz
 13906  0C94  2C69               	goto	l5316
 13907  0C95  085C               	movf	___omul@product,w
 13908  0C96  00CB               	movwf	?___omul
 13909  0C97  085D               	movf	___omul@product+1,w
 13910  0C98  00CC               	movwf	?___omul+1
 13911  0C99  085E               	movf	___omul@product+2,w
 13912  0C9A  00CD               	movwf	?___omul+2
 13913  0C9B  085F               	movf	___omul@product+3,w
 13914  0C9C  00CE               	movwf	?___omul+3
 13915  0C9D  0860               	movf	___omul@product+4,w
 13916  0C9E  00CF               	movwf	?___omul+4
 13917  0C9F  0861               	movf	___omul@product+5,w
 13918  0CA0  00D0               	movwf	?___omul+5
 13919  0CA1  0862               	movf	___omul@product+6,w
 13920  0CA2  00D1               	movwf	?___omul+6
 13921  0CA3  0863               	movf	___omul@product+7,w
 13922  0CA4  00D2               	movwf	?___omul+7
 13923  0CA5  0008               	return
 13924  0CA6                     __end_of___omul:
 13925                           
 13926                           	psect	text52
 13927  0B29                     __ptext52:	
 13928 ;; *************** function ___lmul *****************
 13929 ;; Defined at:
 13930 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul32.c"
 13931 ;; Parameters:    Size  Location     Type
 13932 ;;  multiplier      4    0[BANK0 ] unsigned long 
 13933 ;;  multiplicand    4    4[BANK0 ] unsigned long 
 13934 ;; Auto vars:     Size  Location     Type
 13935 ;;  product         4    8[BANK0 ] unsigned long 
 13936 ;; Return value:  Size  Location     Type
 13937 ;;                  4    0[BANK0 ] unsigned long 
 13938 ;; Registers used:
 13939 ;;		wreg, status,2, status,0
 13940 ;; Tracked objects:
 13941 ;;		On entry : 3F/0
 13942 ;;		On exit  : 3F/0
 13943 ;;		Unchanged: 0/0
 13944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13945 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13946 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13948 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13949 ;;Total ram usage:       12 bytes
 13950 ;; Hardware stack levels used: 1
 13951 ;; Hardware stack levels required when called: 5
 13952 ;; This function calls:
 13953 ;;		Nothing
 13954 ;; This function is called by:
 13955 ;;		_TCC_Curve
 13956 ;; This function uses a non-reentrant model
 13957 ;;
 13958                           
 13959                           
 13960                           ;psect for function ___lmul
 13961  0B29                     ___lmul:
 13962                           
 13963                           ;incstack = 0
 13964                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 13965  0B29  3000               	movlw	0
 13966  0B2A  00D6               	movwf	___lmul@product+3
 13967  0B2B  3000               	movlw	0
 13968  0B2C  00D5               	movwf	___lmul@product+2
 13969  0B2D  3000               	movlw	0
 13970  0B2E  00D4               	movwf	___lmul@product+1
 13971  0B2F  3000               	movlw	0
 13972  0B30  00D3               	movwf	___lmul@product
 13973  0B31                     l4676:
 13974  0B31  1C4B               	btfss	___lmul@multiplier,0
 13975  0B32  2B3B               	goto	l4680
 13976  0B33  084F               	movf	___lmul@multiplicand,w
 13977  0B34  07D3               	addwf	___lmul@product,f
 13978  0B35  0850               	movf	___lmul@multiplicand+1,w
 13979  0B36  3DD4               	addwfc	___lmul@product+1,f
 13980  0B37  0851               	movf	___lmul@multiplicand+2,w
 13981  0B38  3DD5               	addwfc	___lmul@product+2,f
 13982  0B39  0852               	movf	___lmul@multiplicand+3,w
 13983  0B3A  3DD6               	addwfc	___lmul@product+3,f
 13984  0B3B                     l4680:
 13985  0B3B  3001               	movlw	1
 13986  0B3C                     u2685:
 13987  0B3C  35CF               	lslf	___lmul@multiplicand,f
 13988  0B3D  0DD0               	rlf	___lmul@multiplicand+1,f
 13989  0B3E  0DD1               	rlf	___lmul@multiplicand+2,f
 13990  0B3F  0DD2               	rlf	___lmul@multiplicand+3,f
 13991  0B40  0B89               	decfsz	9,f
 13992  0B41  2B3C               	goto	u2685
 13993  0B42  3001               	movlw	1
 13994  0B43                     u2695:
 13995  0B43  36CE               	lsrf	___lmul@multiplier+3,f
 13996  0B44  0CCD               	rrf	___lmul@multiplier+2,f
 13997  0B45  0CCC               	rrf	___lmul@multiplier+1,f
 13998  0B46  0CCB               	rrf	___lmul@multiplier,f
 13999  0B47  0B89               	decfsz	9,f
 14000  0B48  2B43               	goto	u2695
 14001  0B49  084E               	movf	___lmul@multiplier+3,w
 14002  0B4A  044D               	iorwf	___lmul@multiplier+2,w
 14003  0B4B  044C               	iorwf	___lmul@multiplier+1,w
 14004  0B4C  044B               	iorwf	___lmul@multiplier,w
 14005  0B4D  1D03               	skipz
 14006  0B4E  2B31               	goto	l4676
 14007  0B4F  0856               	movf	___lmul@product+3,w
 14008  0B50  00CE               	movwf	?___lmul+3
 14009  0B51  0855               	movf	___lmul@product+2,w
 14010  0B52  00CD               	movwf	?___lmul+2
 14011  0B53  0854               	movf	___lmul@product+1,w
 14012  0B54  00CC               	movwf	?___lmul+1
 14013  0B55  0853               	movf	___lmul@product,w
 14014  0B56  00CB               	movwf	?___lmul
 14015  0B57  0008               	return
 14016  0B58                     __end_of___lmul:
 14017                           
 14018                           	psect	text53
 14019  0CF4                     __ptext53:	
 14020 ;; *************** function ___lldiv *****************
 14021 ;; Defined at:
 14022 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__lldiv.c"
 14023 ;; Parameters:    Size  Location     Type
 14024 ;;  divisor         4   12[BANK0 ] unsigned long 
 14025 ;;  dividend        4   16[BANK0 ] unsigned long 
 14026 ;; Auto vars:     Size  Location     Type
 14027 ;;  quotient        4   21[BANK0 ] unsigned long 
 14028 ;;  counter         1   25[BANK0 ] unsigned char 
 14029 ;; Return value:  Size  Location     Type
 14030 ;;                  4   12[BANK0 ] unsigned long 
 14031 ;; Registers used:
 14032 ;;		wreg, status,2, status,0
 14033 ;; Tracked objects:
 14034 ;;		On entry : 3F/0
 14035 ;;		On exit  : 3F/0
 14036 ;;		Unchanged: 0/0
 14037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14038 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14039 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14040 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14041 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14042 ;;Total ram usage:       14 bytes
 14043 ;; Hardware stack levels used: 1
 14044 ;; Hardware stack levels required when called: 5
 14045 ;; This function calls:
 14046 ;;		Nothing
 14047 ;; This function is called by:
 14048 ;;		_TCC_Curve
 14049 ;; This function uses a non-reentrant model
 14050 ;;
 14051                           
 14052                           
 14053                           ;psect for function ___lldiv
 14054  0CF4                     ___lldiv:
 14055                           
 14056                           ;incstack = 0
 14057                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
 14058  0CF4  3000               	movlw	0
 14059  0CF5  00E3               	movwf	___lldiv@quotient+3
 14060  0CF6  3000               	movlw	0
 14061  0CF7  00E2               	movwf	___lldiv@quotient+2
 14062  0CF8  3000               	movlw	0
 14063  0CF9  00E1               	movwf	___lldiv@quotient+1
 14064  0CFA  3000               	movlw	0
 14065  0CFB  00E0               	movwf	___lldiv@quotient
 14066  0CFC  085A               	movf	___lldiv@divisor+3,w
 14067  0CFD  0459               	iorwf	___lldiv@divisor+2,w
 14068  0CFE  0458               	iorwf	___lldiv@divisor+1,w
 14069  0CFF  0457               	iorwf	___lldiv@divisor,w
 14070  0D00  1903               	skipnz
 14071  0D01  2D3D               	goto	l5344
 14072  0D02  01E4               	clrf	___lldiv@counter
 14073  0D03  0AE4               	incf	___lldiv@counter,f
 14074  0D04                     l5330:
 14075  0D04  1BDA               	btfsc	___lldiv@divisor+3,7
 14076  0D05  2D12               	goto	l5332
 14077  0D06  3001               	movlw	1
 14078  0D07                     u3235:
 14079  0D07  35D7               	lslf	___lldiv@divisor,f
 14080  0D08  0DD8               	rlf	___lldiv@divisor+1,f
 14081  0D09  0DD9               	rlf	___lldiv@divisor+2,f
 14082  0D0A  0DDA               	rlf	___lldiv@divisor+3,f
 14083  0D0B  0B89               	decfsz	9,f
 14084  0D0C  2D07               	goto	u3235
 14085  0D0D  3001               	movlw	1
 14086  0D0E  00DF               	movwf	??___lldiv
 14087  0D0F  085F               	movf	??___lldiv,w
 14088  0D10  07E4               	addwf	___lldiv@counter,f
 14089  0D11  2D04               	goto	l5330
 14090  0D12                     l5332:
 14091  0D12  3001               	movlw	1
 14092  0D13                     u3255:
 14093  0D13  35E0               	lslf	___lldiv@quotient,f
 14094  0D14  0DE1               	rlf	___lldiv@quotient+1,f
 14095  0D15  0DE2               	rlf	___lldiv@quotient+2,f
 14096  0D16  0DE3               	rlf	___lldiv@quotient+3,f
 14097  0D17  0B89               	decfsz	9,f
 14098  0D18  2D13               	goto	u3255
 14099  0D19  085A               	movf	___lldiv@divisor+3,w
 14100  0D1A  025E               	subwf	___lldiv@dividend+3,w
 14101  0D1B  1D03               	skipz
 14102  0D1C  2D27               	goto	u3265
 14103  0D1D  0859               	movf	___lldiv@divisor+2,w
 14104  0D1E  025D               	subwf	___lldiv@dividend+2,w
 14105  0D1F  1D03               	skipz
 14106  0D20  2D27               	goto	u3265
 14107  0D21  0858               	movf	___lldiv@divisor+1,w
 14108  0D22  025C               	subwf	___lldiv@dividend+1,w
 14109  0D23  1D03               	skipz
 14110  0D24  2D27               	goto	u3265
 14111  0D25  0857               	movf	___lldiv@divisor,w
 14112  0D26  025B               	subwf	___lldiv@dividend,w
 14113  0D27                     u3265:
 14114  0D27  1C03               	skipc
 14115  0D28  2D32               	goto	l5340
 14116  0D29  0857               	movf	___lldiv@divisor,w
 14117  0D2A  02DB               	subwf	___lldiv@dividend,f
 14118  0D2B  0858               	movf	___lldiv@divisor+1,w
 14119  0D2C  3BDC               	subwfb	___lldiv@dividend+1,f
 14120  0D2D  0859               	movf	___lldiv@divisor+2,w
 14121  0D2E  3BDD               	subwfb	___lldiv@dividend+2,f
 14122  0D2F  085A               	movf	___lldiv@divisor+3,w
 14123  0D30  3BDE               	subwfb	___lldiv@dividend+3,f
 14124  0D31  1460               	bsf	___lldiv@quotient,0
 14125  0D32                     l5340:
 14126  0D32  3001               	movlw	1
 14127  0D33                     u3275:
 14128  0D33  36DA               	lsrf	___lldiv@divisor+3,f
 14129  0D34  0CD9               	rrf	___lldiv@divisor+2,f
 14130  0D35  0CD8               	rrf	___lldiv@divisor+1,f
 14131  0D36  0CD7               	rrf	___lldiv@divisor,f
 14132  0D37  0B89               	decfsz	9,f
 14133  0D38  2D33               	goto	u3275
 14134  0D39  3001               	movlw	1
 14135  0D3A  02E4               	subwf	___lldiv@counter,f
 14136  0D3B  1D03               	btfss	3,2
 14137  0D3C  2D12               	goto	l5332
 14138  0D3D                     l5344:
 14139  0D3D  0863               	movf	___lldiv@quotient+3,w
 14140  0D3E  00DA               	movwf	?___lldiv+3
 14141  0D3F  0862               	movf	___lldiv@quotient+2,w
 14142  0D40  00D9               	movwf	?___lldiv+2
 14143  0D41  0861               	movf	___lldiv@quotient+1,w
 14144  0D42  00D8               	movwf	?___lldiv+1
 14145  0D43  0860               	movf	___lldiv@quotient,w
 14146  0D44  00D7               	movwf	?___lldiv
 14147  0D45  0008               	return
 14148  0D46                     __end_of___lldiv:
 14149                           
 14150                           	psect	text54
 14151  0CA6                     __ptext54:	
 14152 ;; *************** function _GetAmbientTemperature *****************
 14153 ;; Defined at:
 14154 ;;		line 377 in file "efuse.c"
 14155 ;; Parameters:    Size  Location     Type
 14156 ;;		None
 14157 ;; Auto vars:     Size  Location     Type
 14158 ;;  temperature     2    9[BANK0 ] short 
 14159 ;;  adcTemp         2    6[BANK0 ] unsigned short 
 14160 ;;  i               1    8[BANK0 ] unsigned char 
 14161 ;; Return value:  Size  Location     Type
 14162 ;;                  2    0[BANK0 ] short 
 14163 ;; Registers used:
 14164 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
 14165 ;; Tracked objects:
 14166 ;;		On entry : 3/3C
 14167 ;;		On exit  : 3F/0
 14168 ;;		Unchanged: 0/0
 14169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14170 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14171 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14172 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14173 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14174 ;;Total ram usage:       11 bytes
 14175 ;; Hardware stack levels used: 1
 14176 ;; Hardware stack levels required when called: 5
 14177 ;; This function calls:
 14178 ;;		Nothing
 14179 ;; This function is called by:
 14180 ;;		_EFuse
 14181 ;; This function uses a non-reentrant model
 14182 ;;
 14183                           
 14184                           
 14185                           ;psect for function _GetAmbientTemperature
 14186  0CA6                     _GetAmbientTemperature:
 14187                           
 14188                           ;efuse.c: 380:     uint16_t adcTemp = 0;
 14189                           
 14190                           ;incstack = 0
 14191                           ; Regs used in _GetAmbientTemperature: [wreg-fsr0h+status,2+status,0+pclath]
 14192  0CA6  0140               	movlb	0	; select bank0
 14193  0CA7  01D1               	clrf	GetAmbientTemperature@adcTemp
 14194  0CA8  01D2               	clrf	GetAmbientTemperature@adcTemp+1
 14195                           
 14196                           ;efuse.c: 381:     int16_t temperature = 0;
 14197  0CA9  01D4               	clrf	GetAmbientTemperature@temperature
 14198  0CAA  01D5               	clrf	GetAmbientTemperature@temperature+1
 14199                           
 14200                           ;efuse.c: 383:     adcTemp = adcTSense_prev;
 14201  0CAB  0821               	movf	_adcTSense_prev+1,w
 14202  0CAC  00D2               	movwf	GetAmbientTemperature@adcTemp+1
 14203  0CAD  0820               	movf	_adcTSense_prev,w
 14204  0CAE  00D1               	movwf	GetAmbientTemperature@adcTemp
 14205                           
 14206                           ;efuse.c: 384:     if (adcTSense_curr > adcTSense_prev)
 14207  0CAF  0875               	movf	_adcTSense_curr+1,w
 14208  0CB0  0221               	subwf	_adcTSense_prev+1,w
 14209  0CB1  1D03               	skipz
 14210  0CB2  2CB5               	goto	u2895
 14211  0CB3  0874               	movf	_adcTSense_curr,w
 14212  0CB4  0220               	subwf	_adcTSense_prev,w
 14213  0CB5                     u2895:
 14214  0CB5  1803               	skipnc
 14215  0CB6  2CBB               	goto	l1494
 14216                           
 14217                           ;efuse.c: 385:     {;efuse.c: 386:         adcTemp = adcTSense_curr;
 14218  0CB7  0875               	movf	_adcTSense_curr+1,w
 14219  0CB8  00D2               	movwf	GetAmbientTemperature@adcTemp+1
 14220  0CB9  0874               	movf	_adcTSense_curr,w
 14221  0CBA  00D1               	movwf	GetAmbientTemperature@adcTemp
 14222  0CBB                     l1494:	
 14223                           ;efuse.c: 387:     }
 14224                           
 14225                           
 14226                           ;efuse.c: 389:     temperature = 125;
 14227  0CBB  307D               	movlw	125
 14228  0CBC  00D4               	movwf	GetAmbientTemperature@temperature
 14229  0CBD  3000               	movlw	0
 14230  0CBE  00D5               	movwf	GetAmbientTemperature@temperature+1
 14231                           
 14232                           ;efuse.c: 390:     i = 0;
 14233  0CBF  01D3               	clrf	GetAmbientTemperature@i
 14234  0CC0                     l5032:	
 14235                           ;efuse.c: 391:     while(temperature > -40)
 14236                           
 14237                           
 14238                           ;efuse.c: 391:     while(temperature > -40)
 14239  0CC0  0855               	movf	GetAmbientTemperature@temperature+1,w
 14240  0CC1  3A80               	xorlw	128
 14241  0CC2  00CD               	movwf	??_GetAmbientTemperature
 14242  0CC3  307F               	movlw	127
 14243  0CC4  024D               	subwf	??_GetAmbientTemperature,w
 14244  0CC5  1D03               	skipz
 14245  0CC6  2CC9               	goto	u2915
 14246  0CC7  30D9               	movlw	217
 14247  0CC8  0254               	subwf	GetAmbientTemperature@temperature,w
 14248  0CC9                     u2915:
 14249  0CC9  1C03               	btfss	3,0
 14250  0CCA  2CE3               	goto	l5024
 14251                           
 14252                           ;efuse.c: 392:     {;efuse.c: 393:         if(adcTemp <= temperatureLUT[i])
 14253  0CCB  0140               	movlb	0	; select bank0
 14254  0CCC  0853               	movf	GetAmbientTemperature@i,w
 14255  0CCD  00CD               	movwf	??_GetAmbientTemperature
 14256  0CCE  01CE               	clrf	??_GetAmbientTemperature+1
 14257  0CCF  35CD               	lslf	??_GetAmbientTemperature,f
 14258  0CD0  0DCE               	rlf	??_GetAmbientTemperature+1,f
 14259  0CD1  3052               	movlw	low (_temperatureLUT| (0+32768))
 14260  0CD2  074D               	addwf	??_GetAmbientTemperature,w
 14261  0CD3  0084               	movwf	4
 14262  0CD4  3082               	movlw	high (_temperatureLUT| (0+32768))
 14263  0CD5  3D4E               	addwfc	??_GetAmbientTemperature+1,w
 14264  0CD6  0085               	movwf	5
 14265  0CD7  3F00               	moviw [0]fsr0
 14266  0CD8  00CF               	movwf	??_GetAmbientTemperature+2
 14267  0CD9  3F01               	moviw [1]fsr0
 14268  0CDA  00D0               	movwf	??_GetAmbientTemperature+3
 14269  0CDB  0852               	movf	GetAmbientTemperature@adcTemp+1,w
 14270  0CDC  0250               	subwf	??_GetAmbientTemperature+3,w
 14271  0CDD  1D03               	skipz
 14272  0CDE  2CE1               	goto	u2905
 14273  0CDF  0851               	movf	GetAmbientTemperature@adcTemp,w
 14274  0CE0  024F               	subwf	??_GetAmbientTemperature+2,w
 14275  0CE1                     u2905:
 14276  0CE1  1C03               	skipc
 14277  0CE2  2CE9               	goto	l5030
 14278  0CE3                     l5024:
 14279                           
 14280                           ;efuse.c: 394:         {;efuse.c: 395:             return temperature;
 14281  0CE3  0140               	movlb	0	; select bank0
 14282  0CE4  0855               	movf	GetAmbientTemperature@temperature+1,w
 14283  0CE5  00CC               	movwf	?_GetAmbientTemperature+1
 14284  0CE6  0854               	movf	GetAmbientTemperature@temperature,w
 14285  0CE7  00CB               	movwf	?_GetAmbientTemperature
 14286  0CE8  0008               	return
 14287  0CE9                     l5030:
 14288                           
 14289                           ;efuse.c: 398:         {;efuse.c: 399:             temperature = temperature + -1;
 14290  0CE9  0854               	movf	GetAmbientTemperature@temperature,w
 14291  0CEA  3EFF               	addlw	255
 14292  0CEB  00D4               	movwf	GetAmbientTemperature@temperature
 14293  0CEC  30FF               	movlw	255
 14294  0CED  3D55               	addwfc	GetAmbientTemperature@temperature+1,w
 14295  0CEE  00D5               	movwf	GetAmbientTemperature@temperature+1
 14296                           
 14297                           ;efuse.c: 400:             i++;
 14298  0CEF  3001               	movlw	1
 14299  0CF0  00CD               	movwf	??_GetAmbientTemperature
 14300  0CF1  084D               	movf	??_GetAmbientTemperature,w
 14301  0CF2  07D3               	addwf	GetAmbientTemperature@i,f
 14302  0CF3  2CC0               	goto	l5032
 14303  0CF4                     __end_of_GetAmbientTemperature:
 14304                           
 14305                           	psect	text55
 14306  0DA2                     __ptext55:	
 14307 ;; *************** function _CmdOutput *****************
 14308 ;; Defined at:
 14309 ;;		line 276 in file "efuse.c"
 14310 ;; Parameters:    Size  Location     Type
 14311 ;;  enable          1    wreg     unsigned char 
 14312 ;; Auto vars:     Size  Location     Type
 14313 ;;  enable          1    4[BANK0 ] unsigned char 
 14314 ;; Return value:  Size  Location     Type
 14315 ;;                  1    wreg      void 
 14316 ;; Registers used:
 14317 ;;		wreg, status,2, status,0, pclath, cstack
 14318 ;; Tracked objects:
 14319 ;;		On entry : 0/0
 14320 ;;		On exit  : 3F/0
 14321 ;;		Unchanged: 0/0
 14322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14324 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14325 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14326 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14327 ;;Total ram usage:        3 bytes
 14328 ;; Hardware stack levels used: 1
 14329 ;; Hardware stack levels required when called: 6
 14330 ;; This function calls:
 14331 ;;		_TMR1_StartTimer
 14332 ;;		_TMR1_StopTimer
 14333 ;;		_TMR1_WriteTimer
 14334 ;;		_TMR2_Initialize
 14335 ;;		_TMR2_Start
 14336 ;;		_TMR2_Stop
 14337 ;; This function is called by:
 14338 ;;		_processLIN
 14339 ;;		_main
 14340 ;;		_EFuseInit
 14341 ;;		_EFuse
 14342 ;; This function uses a non-reentrant model
 14343 ;;
 14344                           
 14345                           
 14346                           ;psect for function _CmdOutput
 14347  0DA2                     _CmdOutput:
 14348                           
 14349                           ;incstack = 0
 14350                           ; Regs used in _CmdOutput: [wreg+status,2+status,0+pclath+cstack]
 14351                           ;CmdOutput@enable stored from wreg
 14352  0DA2  0140               	movlb	0	; select bank0
 14353  0DA3  00CF               	movwf	CmdOutput@enable
 14354                           
 14355                           ;efuse.c: 276: void CmdOutput(uint8_t enable);efuse.c: 277: {;efuse.c: 278:     TMR2_Sto
      +                          p();
 14356  0DA4  3197  27DF  318D   	fcall	_TMR2_Stop
 14357                           
 14358                           ;efuse.c: 281:     CLC1POLbits.LC1G4POL = 0;
 14359  0DA7  017C               	movlb	60	; select bank60
 14360  0DA8  1191               	bcf	17,3	;volatile
 14361                           
 14362                           ;efuse.c: 282:     CLC1GLS3bits.LC1G4D3N = 0;
 14363  0DA9  1219               	bcf	25,4	;volatile
 14364                           
 14365                           ;efuse.c: 283:     CLC1GLS3bits.LC1G4D4T = 0;
 14366  0DAA  1399               	bcf	25,7	;volatile
 14367                           
 14368                           ;efuse.c: 287:     T1GCON = 0x80;
 14369  0DAB  3080               	movlw	128
 14370  0DAC  0144               	movlb	4	; select bank4
 14371  0DAD  008F               	movwf	15	;volatile
 14372                           
 14373                           ;efuse.c: 290:     T1GATE = 0x0D;
 14374  0DAE  300D               	movlw	13
 14375  0DAF  0090               	movwf	16	;volatile
 14376                           
 14377                           ;efuse.c: 292:     CLC3CONbits.EN = 0;
 14378  0DB0  017C               	movlb	60	; select bank60
 14379  0DB1  13A4               	bcf	36,7	;volatile
 14380                           
 14381                           ;efuse.c: 295:     CLC1POLbits.LC1G2POL = 1;
 14382  0DB2  1491               	bsf	17,1	;volatile
 14383                           
 14384                           ;efuse.c: 296:     CLC1POLbits.LC1G2POL = 0;
 14385  0DB3  1091               	bcf	17,1	;volatile
 14386                           
 14387                           ;efuse.c: 298:     _delay((unsigned long)((1)*(32000000/4000000.0)));
 14388  0DB4  3200               	nop2	;2 cycle nop
 14389  0DB5  3200               	nop2	;2 cycle nop
 14390  0DB6  3200               	nop2	;2 cycle nop
 14391  0DB7  3200               	nop2	;2 cycle nop
 14392                           
 14393                           ;efuse.c: 301:     CLC2POLbits.LC2G2POL = 1;
 14394  0DB8  017C               	movlb	60	; select bank60
 14395  0DB9  149B               	bsf	27,1	;volatile
 14396                           
 14397                           ;efuse.c: 302:     CLC2POLbits.LC2G2POL = 0;
 14398  0DBA  109B               	bcf	27,1	;volatile
 14399                           
 14400                           ;efuse.c: 304:     outputState = OUTPUT_OFF;
 14401  0DBB  0140               	movlb	0	; select bank0
 14402  0DBC  01AC               	clrf	_outputState
 14403                           
 14404                           ;efuse.c: 307:     if (enable)
 14405  0DBD  084F               	movf	CmdOutput@enable,w
 14406  0DBE  1903               	btfsc	3,2
 14407  0DBF  0008               	return
 14408                           
 14409                           ;efuse.c: 308:     {;efuse.c: 309:         overCurrentFault = NO_OVER_CURRENT_FAULT;
 14410  0DC0  01AB               	clrf	_overCurrentFault
 14411                           
 14412                           ;efuse.c: 310:         uvloFault = NO_UVLO_FAULT;
 14413  0DC1  01AA               	clrf	_uvloFault
 14414                           
 14415                           ;efuse.c: 311:         overTempFault = NO_TEMP_FAULT;
 14416  0DC2  01A9               	clrf	_overTempFault
 14417  0DC3  1794               	bsf	20,7	;volatile
 14418                           
 14419                           ;efuse.c: 316:         CLC1CONbits.LC1EN = 1;
 14420  0DC4  017C               	movlb	60	; select bank60
 14421  0DC5  1790               	bsf	16,7	;volatile
 14422                           
 14423                           ;efuse.c: 317:         CLC1POLbits.LC1G4POL = 0;
 14424  0DC6  1191               	bcf	17,3	;volatile
 14425                           
 14426                           ;efuse.c: 318:         CLC1POLbits.LC1G3POL = 0;
 14427  0DC7  1111               	bcf	17,2	;volatile
 14428                           
 14429                           ;efuse.c: 319:         CLC1POLbits.LC1G3POL = 1;
 14430  0DC8  1511               	bsf	17,2	;volatile
 14431                           
 14432                           ;efuse.c: 320:         CLC1POLbits.LC1G3POL = 0;
 14433  0DC9  1111               	bcf	17,2	;volatile
 14434                           
 14435                           ;efuse.c: 321:         CLC1POLbits.LC1POL = 1;
 14436  0DCA  1791               	bsf	17,7	;volatile
 14437                           
 14438                           ;efuse.c: 324:         CLC2POLbits.LC2G4POL = 0;
 14439  0DCB  119B               	bcf	27,3	;volatile
 14440                           
 14441                           ;efuse.c: 325:         CLC2POLbits.LC2G3POL = 0;
 14442  0DCC  111B               	bcf	27,2	;volatile
 14443                           
 14444                           ;efuse.c: 326:         CLC2POLbits.LC2G3POL = 1;
 14445  0DCD  151B               	bsf	27,2	;volatile
 14446                           
 14447                           ;efuse.c: 327:         CLC2POLbits.LC2G3POL = 0;
 14448  0DCE  111B               	bcf	27,2	;volatile
 14449                           
 14450                           ;efuse.c: 329:         if(triggerType == TRIGGER_TIMER_OVERFLOW)
 14451  0DCF  0140               	movlb	0	; select bank0
 14452  0DD0  032E               	decf	_triggerType,w
 14453  0DD1  1D03               	btfss	3,2
 14454  0DD2  2DE4               	goto	l1485
 14455                           
 14456                           ;efuse.c: 330:         {;efuse.c: 333:             CLC1POLbits.LC1G4POL = 1;
 14457  0DD3  017C               	movlb	60	; select bank60
 14458  0DD4  1591               	bsf	17,3	;volatile
 14459                           
 14460                           ;efuse.c: 334:             CLC1GLS3bits.LC1G4D3N = 1;
 14461  0DD5  1619               	bsf	25,4	;volatile
 14462                           
 14463                           ;efuse.c: 335:             CLC1GLS3bits.LC1G4D4T = 1;
 14464  0DD6  1799               	bsf	25,7	;volatile
 14465                           
 14466                           ;efuse.c: 338:             T1GCON = 0xC0;
 14467  0DD7  30C0               	movlw	192
 14468  0DD8  0144               	movlb	4	; select bank4
 14469  0DD9  008F               	movwf	15	;volatile
 14470                           
 14471                           ;efuse.c: 341:             T1GATE = 0x0B;
 14472  0DDA  300B               	movlw	11
 14473  0DDB  0090               	movwf	16	;volatile
 14474                           
 14475                           ;efuse.c: 343:             TMR2_Initialize();
 14476  0DDC  3188  20C8  318D   	fcall	_TMR2_Initialize
 14477                           
 14478                           ;efuse.c: 344:             TMR2_Start();
 14479  0DDF  3197  27C8  318D   	fcall	_TMR2_Start
 14480                           
 14481                           ;efuse.c: 346:             CLC3CONbits.EN = 1;
 14482  0DE2  017C               	movlb	60	; select bank60
 14483  0DE3  17A4               	bsf	36,7	;volatile
 14484  0DE4                     l1485:	
 14485                           ;efuse.c: 347:         }
 14486                           
 14487                           
 14488                           ;efuse.c: 350:         TMR1_StopTimer();
 14489  0DE4  3197  27DC  318D   	fcall	_TMR1_StopTimer
 14490                           
 14491                           ;efuse.c: 351:         TMR1_WriteTimer( 0xffff - reduced_drive_time );
 14492  0DE7  0140               	movlb	0	; select bank0
 14493  0DE8  082D               	movf	_reduced_drive_time,w
 14494  0DE9  00CD               	movwf	??_CmdOutput
 14495  0DEA  01CE               	clrf	??_CmdOutput+1
 14496  0DEB  094D               	comf	??_CmdOutput,w
 14497  0DEC  00CB               	movwf	TMR1_WriteTimer@timerVal
 14498  0DED  094E               	comf	??_CmdOutput+1,w
 14499  0DEE  00CC               	movwf	TMR1_WriteTimer@timerVal+1
 14500  0DEF  3189  214C  318D   	fcall	_TMR1_WriteTimer
 14501                           
 14502                           ;efuse.c: 352:         PIR4bits.TMR1IF = 0;
 14503  0DF2  014E               	movlb	14	; select bank14
 14504  0DF3  1010               	bcf	16,0	;volatile
 14505                           
 14506                           ;efuse.c: 353:         TMR1_StartTimer();
 14507  0DF4  3197  27D9         	fcall	_TMR1_StartTimer
 14508                           
 14509                           ;efuse.c: 355:         iSenseOffset = adcISense_curr;
 14510  0DF6  0140               	movlb	0	; select bank0
 14511  0DF7  083C               	movf	_adcISense_curr+1,w
 14512  0DF8  00B8               	movwf	_iSenseOffset+1
 14513  0DF9  083B               	movf	_adcISense_curr,w
 14514  0DFA  00B7               	movwf	_iSenseOffset
 14515                           
 14516                           ;efuse.c: 356:         outputState = OUTPUT_ON;
 14517  0DFB  01AC               	clrf	_outputState
 14518  0DFC  0AAC               	incf	_outputState,f
 14519  0DFD  1394               	bcf	20,7	;volatile
 14520  0DFE  0008               	return
 14521  0DFF                     __end_of_CmdOutput:
 14522                           
 14523                           	psect	text56
 14524  17DF                     __ptext56:	
 14525 ;; *************** function _TMR2_Stop *****************
 14526 ;; Defined at:
 14527 ;;		line 111 in file "mcc_generated_files/tmr2.c"
 14528 ;; Parameters:    Size  Location     Type
 14529 ;;		None
 14530 ;; Auto vars:     Size  Location     Type
 14531 ;;		None
 14532 ;; Return value:  Size  Location     Type
 14533 ;;                  1    wreg      void 
 14534 ;; Registers used:
 14535 ;;		None
 14536 ;; Tracked objects:
 14537 ;;		On entry : 3F/0
 14538 ;;		On exit  : 3F/5
 14539 ;;		Unchanged: 0/0
 14540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14544 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14545 ;;Total ram usage:        0 bytes
 14546 ;; Hardware stack levels used: 1
 14547 ;; Hardware stack levels required when called: 5
 14548 ;; This function calls:
 14549 ;;		Nothing
 14550 ;; This function is called by:
 14551 ;;		_CmdOutput
 14552 ;; This function uses a non-reentrant model
 14553 ;;
 14554                           
 14555                           
 14556                           ;psect for function _TMR2_Stop
 14557  17DF                     _TMR2_Stop:
 14558                           
 14559                           ;mcc_generated_files/tmr2.c: 114:     T2CONbits.TMR2ON = 0;
 14560                           
 14561                           ;incstack = 0
 14562                           ; Regs used in _TMR2_Stop: []
 14563  17DF  0145               	movlb	5	; select bank5
 14564  17E0  138E               	bcf	14,7	;volatile
 14565  17E1  0008               	return
 14566  17E2                     __end_of_TMR2_Stop:
 14567                           
 14568                           	psect	text57
 14569  17C8                     __ptext57:	
 14570 ;; *************** function _TMR2_Start *****************
 14571 ;; Defined at:
 14572 ;;		line 100 in file "mcc_generated_files/tmr2.c"
 14573 ;; Parameters:    Size  Location     Type
 14574 ;;		None
 14575 ;; Auto vars:     Size  Location     Type
 14576 ;;		None
 14577 ;; Return value:  Size  Location     Type
 14578 ;;                  1    wreg      void 
 14579 ;; Registers used:
 14580 ;;		None
 14581 ;; Tracked objects:
 14582 ;;		On entry : 3F/5
 14583 ;;		On exit  : 3F/5
 14584 ;;		Unchanged: 0/0
 14585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14589 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14590 ;;Total ram usage:        0 bytes
 14591 ;; Hardware stack levels used: 1
 14592 ;; Hardware stack levels required when called: 5
 14593 ;; This function calls:
 14594 ;;		Nothing
 14595 ;; This function is called by:
 14596 ;;		_CmdOutput
 14597 ;; This function uses a non-reentrant model
 14598 ;;
 14599                           
 14600                           
 14601                           ;psect for function _TMR2_Start
 14602  17C8                     _TMR2_Start:
 14603                           
 14604                           ;mcc_generated_files/tmr2.c: 103:     T2CONbits.TMR2ON = 1;
 14605                           
 14606                           ;incstack = 0
 14607                           ; Regs used in _TMR2_Start: []
 14608  17C8  178E               	bsf	14,7	;volatile
 14609  17C9  0008               	return
 14610  17CA                     __end_of_TMR2_Start:
 14611                           
 14612                           	psect	text58
 14613  08C8                     __ptext58:	
 14614 ;; *************** function _TMR2_Initialize *****************
 14615 ;; Defined at:
 14616 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 14617 ;; Parameters:    Size  Location     Type
 14618 ;;		None
 14619 ;; Auto vars:     Size  Location     Type
 14620 ;;		None
 14621 ;; Return value:  Size  Location     Type
 14622 ;;                  1    wreg      void 
 14623 ;; Registers used:
 14624 ;;		wreg, status,2
 14625 ;; Tracked objects:
 14626 ;;		On entry : 35/E
 14627 ;;		On exit  : 3F/5
 14628 ;;		Unchanged: 0/0
 14629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14633 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14634 ;;Total ram usage:        0 bytes
 14635 ;; Hardware stack levels used: 1
 14636 ;; Hardware stack levels required when called: 5
 14637 ;; This function calls:
 14638 ;;		Nothing
 14639 ;; This function is called by:
 14640 ;;		_SYSTEM_Initialize
 14641 ;;		_CmdOutput
 14642 ;; This function uses a non-reentrant model
 14643 ;;
 14644                           
 14645                           
 14646                           ;psect for function _TMR2_Initialize
 14647  08C8                     _TMR2_Initialize:
 14648                           
 14649                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x0D;
 14650                           
 14651                           ;incstack = 0
 14652                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 14653  08C8  300D               	movlw	13
 14654  08C9  0145               	movlb	5	; select bank5
 14655  08CA  0090               	movwf	16	;volatile
 14656                           
 14657                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 14658  08CB  018F               	clrf	15	;volatile
 14659                           
 14660                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 14661  08CC  0191               	clrf	17	;volatile
 14662                           
 14663                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x27;
 14664  08CD  3027               	movlw	39
 14665  08CE  008D               	movwf	13	;volatile
 14666                           
 14667                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 14668  08CF  018C               	clrf	12	;volatile
 14669                           
 14670                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 14671  08D0  014E               	movlb	14	; select bank14
 14672  08D1  1090               	bcf	16,1	;volatile
 14673                           
 14674                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xB0;
 14675  08D2  30B0               	movlw	176
 14676  08D3  0145               	movlb	5	; select bank5
 14677  08D4  008E               	movwf	14	;volatile
 14678  08D5  0008               	return
 14679  08D6                     __end_of_TMR2_Initialize:
 14680                           
 14681                           	psect	text59
 14682  094C                     __ptext59:	
 14683 ;; *************** function _TMR1_WriteTimer *****************
 14684 ;; Defined at:
 14685 ;;		line 120 in file "mcc_generated_files/tmr1.c"
 14686 ;; Parameters:    Size  Location     Type
 14687 ;;  timerVal        2    0[BANK0 ] unsigned short 
 14688 ;; Auto vars:     Size  Location     Type
 14689 ;;		None
 14690 ;; Return value:  Size  Location     Type
 14691 ;;                  1    wreg      void 
 14692 ;; Registers used:
 14693 ;;		wreg
 14694 ;; Tracked objects:
 14695 ;;		On entry : 3F/0
 14696 ;;		On exit  : 3F/4
 14697 ;;		Unchanged: 0/0
 14698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14699 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14702 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14703 ;;Total ram usage:        2 bytes
 14704 ;; Hardware stack levels used: 1
 14705 ;; Hardware stack levels required when called: 5
 14706 ;; This function calls:
 14707 ;;		Nothing
 14708 ;; This function is called by:
 14709 ;;		_CmdOutput
 14710 ;; This function uses a non-reentrant model
 14711 ;;
 14712                           
 14713                           
 14714                           ;psect for function _TMR1_WriteTimer
 14715  094C                     _TMR1_WriteTimer:
 14716                           
 14717                           ;mcc_generated_files/tmr1.c: 120: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 121: {;mcc_generated_files/tmr1.c: 122:     if (T1CONbits.nT1SYNC == 1)
 14718                           
 14719                           ;incstack = 0
 14720                           ; Regs used in _TMR1_WriteTimer: [wreg]
 14721  094C  0144               	movlb	4	; select bank4
 14722  094D  1D0E               	btfss	14,2	;volatile
 14723  094E  295A               	goto	l4348
 14724                           
 14725                           ;mcc_generated_files/tmr1.c: 123:     {;mcc_generated_files/tmr1.c: 125:         T1CONbi
      +                          ts.TMR1ON = 0;
 14726  094F  100E               	bcf	14,0	;volatile
 14727                           
 14728                           ;mcc_generated_files/tmr1.c: 128:         TMR1H = (uint8_t)(timerVal >> 8);
 14729  0950  0140               	movlb	0	; select bank0
 14730  0951  084C               	movf	TMR1_WriteTimer@timerVal+1,w
 14731  0952  0144               	movlb	4	; select bank4
 14732  0953  008D               	movwf	13	;volatile
 14733                           
 14734                           ;mcc_generated_files/tmr1.c: 129:         TMR1L = (uint8_t)timerVal;
 14735  0954  0140               	movlb	0	; select bank0
 14736  0955  084B               	movf	TMR1_WriteTimer@timerVal,w
 14737  0956  0144               	movlb	4	; select bank4
 14738  0957  008C               	movwf	12	;volatile
 14739                           
 14740                           ;mcc_generated_files/tmr1.c: 132:         T1CONbits.TMR1ON =1;
 14741  0958  140E               	bsf	14,0	;volatile
 14742                           
 14743                           ;mcc_generated_files/tmr1.c: 133:     }
 14744  0959  0008               	return
 14745  095A                     l4348:
 14746                           
 14747                           ;mcc_generated_files/tmr1.c: 135:     {;mcc_generated_files/tmr1.c: 137:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
 14748  095A  0140               	movlb	0	; select bank0
 14749  095B  084C               	movf	TMR1_WriteTimer@timerVal+1,w
 14750  095C  0144               	movlb	4	; select bank4
 14751  095D  008D               	movwf	13	;volatile
 14752                           
 14753                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = (uint8_t)timerVal;
 14754  095E  0140               	movlb	0	; select bank0
 14755  095F  084B               	movf	TMR1_WriteTimer@timerVal,w
 14756  0960  0144               	movlb	4	; select bank4
 14757  0961  008C               	movwf	12	;volatile
 14758  0962  0008               	return
 14759  0963                     __end_of_TMR1_WriteTimer:
 14760                           
 14761                           	psect	text60
 14762  17DC                     __ptext60:	
 14763 ;; *************** function _TMR1_StopTimer *****************
 14764 ;; Defined at:
 14765 ;;		line 98 in file "mcc_generated_files/tmr1.c"
 14766 ;; Parameters:    Size  Location     Type
 14767 ;;		None
 14768 ;; Auto vars:     Size  Location     Type
 14769 ;;		None
 14770 ;; Return value:  Size  Location     Type
 14771 ;;                  1    wreg      void 
 14772 ;; Registers used:
 14773 ;;		None
 14774 ;; Tracked objects:
 14775 ;;		On entry : 3/0
 14776 ;;		On exit  : 3F/4
 14777 ;;		Unchanged: 0/0
 14778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14782 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14783 ;;Total ram usage:        0 bytes
 14784 ;; Hardware stack levels used: 1
 14785 ;; Hardware stack levels required when called: 5
 14786 ;; This function calls:
 14787 ;;		Nothing
 14788 ;; This function is called by:
 14789 ;;		_CmdOutput
 14790 ;; This function uses a non-reentrant model
 14791 ;;
 14792                           
 14793                           
 14794                           ;psect for function _TMR1_StopTimer
 14795  17DC                     _TMR1_StopTimer:
 14796                           
 14797                           ;mcc_generated_files/tmr1.c: 101:     T1CONbits.TMR1ON = 0;
 14798                           
 14799                           ;incstack = 0
 14800                           ; Regs used in _TMR1_StopTimer: []
 14801  17DC  0144               	movlb	4	; select bank4
 14802  17DD  100E               	bcf	14,0	;volatile
 14803  17DE  0008               	return
 14804  17DF                     __end_of_TMR1_StopTimer:
 14805                           
 14806                           	psect	text61
 14807  17D9                     __ptext61:	
 14808 ;; *************** function _TMR1_StartTimer *****************
 14809 ;; Defined at:
 14810 ;;		line 92 in file "mcc_generated_files/tmr1.c"
 14811 ;; Parameters:    Size  Location     Type
 14812 ;;		None
 14813 ;; Auto vars:     Size  Location     Type
 14814 ;;		None
 14815 ;; Return value:  Size  Location     Type
 14816 ;;                  1    wreg      void 
 14817 ;; Registers used:
 14818 ;;		None
 14819 ;; Tracked objects:
 14820 ;;		On entry : 3F/E
 14821 ;;		On exit  : 3F/4
 14822 ;;		Unchanged: 0/0
 14823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14828 ;;Total ram usage:        0 bytes
 14829 ;; Hardware stack levels used: 1
 14830 ;; Hardware stack levels required when called: 5
 14831 ;; This function calls:
 14832 ;;		Nothing
 14833 ;; This function is called by:
 14834 ;;		_CmdOutput
 14835 ;; This function uses a non-reentrant model
 14836 ;;
 14837                           
 14838                           
 14839                           ;psect for function _TMR1_StartTimer
 14840  17D9                     _TMR1_StartTimer:
 14841                           
 14842                           ;mcc_generated_files/tmr1.c: 95:     T1CONbits.TMR1ON = 1;
 14843                           
 14844                           ;incstack = 0
 14845                           ; Regs used in _TMR1_StartTimer: []
 14846  17D9  0144               	movlb	4	; select bank4
 14847  17DA  140E               	bsf	14,0	;volatile
 14848  17DB  0008               	return
 14849  17DC                     __end_of_TMR1_StartTimer:
 14850                           
 14851                           	psect	intentry
 14852  0004                     __pintentry:	
 14853 ;; *************** function _INTERRUPT_InterruptManager *****************
 14854 ;; Defined at:
 14855 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 14856 ;; Parameters:    Size  Location     Type
 14857 ;;		None
 14858 ;; Auto vars:     Size  Location     Type
 14859 ;;		None
 14860 ;; Return value:  Size  Location     Type
 14861 ;;                  1    wreg      void 
 14862 ;; Registers used:
 14863 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14864 ;; Tracked objects:
 14865 ;;		On entry : 0/0
 14866 ;;		On exit  : 0/0
 14867 ;;		Unchanged: 0/0
 14868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14872 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14873 ;;Total ram usage:        0 bytes
 14874 ;; Hardware stack levels used: 1
 14875 ;; Hardware stack levels required when called: 4
 14876 ;; This function calls:
 14877 ;;		Absolute function
 14878 ;;		_CLC2_ISR
 14879 ;;		_EUSART1_Receive_ISR
 14880 ;;		_EUSART1_Transmit_ISR
 14881 ;;		_TMR0_ISR
 14882 ;; This function is called by:
 14883 ;;		Interrupt level 1
 14884 ;; This function uses a non-reentrant model
 14885 ;;
 14886                           
 14887  0004                     _INTERRUPT_InterruptManager:
 14888                           
 14889                           ;incstack = 0
 14890  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 14891                           
 14892                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 14893  0005  3180               	pagesel	$
 14894                           
 14895                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
 14896  0006  014E               	movlb	14	; select bank14
 14897  0007  1A96               	btfsc	22,5	;volatile
 14898  0008  1E8C               	btfss	12,5	;volatile
 14899  0009  280E               	goto	i1l1062
 14900                           
 14901                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
 14902  000A  3189  21C4  3180   	fcall	_TMR0_ISR
 14903                           
 14904                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 14905  000D  282A               	goto	i1l1072
 14906  000E                     i1l1062:	
 14907                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
 14908                           
 14909  000E  1F0B               	btfss	11,6	;volatile
 14910  000F  282A               	goto	i1l1072
 14911                           
 14912                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE5bits.CLC2IE == 1 && PIR5bits.CLC2IF == 1)
 14913  0010  1A9B               	btfsc	27,5	;volatile
 14914  0011  1E91               	btfss	17,5	;volatile
 14915  0012  2817               	goto	i1l1065
 14916                           
 14917                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             CLC2_ISR();
 14918  0013  3197  27C4  3180   	fcall	_CLC2_ISR
 14919                           
 14920                           ;mcc_generated_files/interrupt_manager.c: 64:         }
 14921  0016  282A               	goto	i1l1072
 14922  0017                     i1l1065:	
 14923                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE3bits.TX1IE == 1 && PIR
      +                          3bits.TX1IF == 1)
 14924                           
 14925  0017  1A19               	btfsc	25,4	;volatile
 14926  0018  1E0F               	btfss	15,4	;volatile
 14927  0019  2821               	goto	i1l1067
 14928                           
 14929                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             EUSART1_TxDefaultInterruptHandler();
 14930  001A  0142               	movlb	2	; select bank2
 14931  001B  0869               	movf	(_EUSART1_TxDefaultInterruptHandler+1)^(0+256),w
 14932  001C  008A               	movwf	10
 14933  001D  0868               	movf	_EUSART1_TxDefaultInterruptHandler^(0+256),w
 14934  001E  000A               	callw
 14935  001F  3180               	pagesel	$
 14936                           
 14937                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 14938  0020  282A               	goto	i1l1072
 14939  0021                     i1l1067:	
 14940                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE3bits.RC1IE == 1 && PIR
      +                          3bits.RC1IF == 1)
 14941                           
 14942  0021  1A99               	btfsc	25,5	;volatile
 14943  0022  1E8F               	btfss	15,5	;volatile
 14944  0023  282A               	goto	i1l1072
 14945                           
 14946                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             EUSART1_RxDefaultInterruptHandler();
 14947  0024  0142               	movlb	2	; select bank2
 14948  0025  0867               	movf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+256),w
 14949  0026  008A               	movwf	10
 14950  0027  0866               	movf	_EUSART1_RxDefaultInterruptHandler^(0+256),w
 14951  0028  000A               	callw
 14952  0029  3180               	pagesel	$
 14953  002A                     i1l1072:	
 14954                           ;mcc_generated_files/interrupt_manager.c: 77:     }
 14955                           
 14956                           ;mcc_generated_files/interrupt_manager.c: 72:         }
 14957                           
 14958  002A  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 14959  002B  0009               	retfie
 14960  002C                     __end_of_INTERRUPT_InterruptManager:
 14961                           
 14962                           	psect	text63
 14963  09C4                     __ptext63:	
 14964 ;; *************** function _TMR0_ISR *****************
 14965 ;; Defined at:
 14966 ;;		line 136 in file "mcc_generated_files/tmr0.c"
 14967 ;; Parameters:    Size  Location     Type
 14968 ;;		None
 14969 ;; Auto vars:     Size  Location     Type
 14970 ;;		None
 14971 ;; Return value:  Size  Location     Type
 14972 ;;                  1    wreg      void 
 14973 ;; Registers used:
 14974 ;;		wreg, status,2, status,0, pclath, cstack
 14975 ;; Tracked objects:
 14976 ;;		On entry : 3F/E
 14977 ;;		On exit  : 3F/1
 14978 ;;		Unchanged: 0/0
 14979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14983 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14984 ;;Total ram usage:        0 bytes
 14985 ;; Hardware stack levels used: 1
 14986 ;; Hardware stack levels required when called: 3
 14987 ;; This function calls:
 14988 ;;		Absolute function
 14989 ;;		_LIN_timerHandler
 14990 ;;		_ProcessAnalogInputs
 14991 ;;		_TMR0_DefaultInterruptHandler
 14992 ;; This function is called by:
 14993 ;;		_INTERRUPT_InterruptManager
 14994 ;; This function uses a non-reentrant model
 14995 ;;
 14996                           
 14997                           
 14998                           ;psect for function _TMR0_ISR
 14999  09C4                     _TMR0_ISR:
 15000                           
 15001                           ;mcc_generated_files/tmr0.c: 139:     PIR0bits.TMR0IF = 0;
 15002                           
 15003                           ;incstack = 0
 15004                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 15005  09C4  128C               	bcf	12,5	;volatile
 15006                           
 15007                           ;mcc_generated_files/tmr0.c: 141:     TMR0H = timer0ReloadVal16bit >> 8;
 15008  09C5  0140               	movlb	0	; select bank0
 15009  09C6  086F               	movf	_timer0ReloadVal16bit+1,w	;volatile
 15010  09C7  014B               	movlb	11	; select bank11
 15011  09C8  009D               	movwf	29	;volatile
 15012                           
 15013                           ;mcc_generated_files/tmr0.c: 142:     TMR0L = (uint8_t) timer0ReloadVal16bit;
 15014  09C9  0140               	movlb	0	; select bank0
 15015  09CA  086E               	movf	_timer0ReloadVal16bit,w	;volatile
 15016  09CB  014B               	movlb	11	; select bank11
 15017  09CC  009C               	movwf	28	;volatile
 15018                           
 15019                           ;mcc_generated_files/tmr0.c: 144:     if(TMR0_InterruptHandler)
 15020  09CD  0142               	movlb	2	; select bank2
 15021  09CE  085E               	movf	_TMR0_InterruptHandler^(0+256),w
 15022  09CF  045F               	iorwf	(_TMR0_InterruptHandler+1)^(0+256),w
 15023  09D0  1903               	btfsc	3,2
 15024  09D1  29D7               	goto	i1l854
 15025                           
 15026                           ;mcc_generated_files/tmr0.c: 145:     {;mcc_generated_files/tmr0.c: 146:         TMR0_In
      +                          terruptHandler();
 15027  09D2  085F               	movf	(_TMR0_InterruptHandler+1)^(0+256),w
 15028  09D3  008A               	movwf	10
 15029  09D4  085E               	movf	_TMR0_InterruptHandler^(0+256),w
 15030  09D5  000A               	callw
 15031  09D6  3189               	pagesel	$
 15032  09D7                     i1l854:	
 15033                           ;mcc_generated_files/tmr0.c: 147:     }
 15034                           
 15035                           
 15036                           ;mcc_generated_files/tmr0.c: 150:     ProcessAnalogInputs();
 15037  09D7  3186  2695         	fcall	_ProcessAnalogInputs
 15038                           
 15039                           ;mcc_generated_files/tmr0.c: 151:     ticks_1ms++;
 15040  09D9  3001               	movlw	1
 15041  09DA  0141               	movlb	1	; select bank1
 15042  09DB  07B4               	addwf	_ticks_1ms^(0+128),f
 15043  09DC  3000               	movlw	0
 15044  09DD  3DB5               	addwfc	(_ticks_1ms+1)^(0+128),f
 15045  09DE  0008               	return
 15046  09DF                     __end_of_TMR0_ISR:
 15047                           
 15048                           	psect	text64
 15049  0894                     __ptext64:	
 15050 ;; *************** function _LIN_timerHandler *****************
 15051 ;; Defined at:
 15052 ;;		line 290 in file "mcc_generated_files/LINDrivers/lin_slave.c"
 15053 ;; Parameters:    Size  Location     Type
 15054 ;;		None
 15055 ;; Auto vars:     Size  Location     Type
 15056 ;;		None
 15057 ;; Return value:  Size  Location     Type
 15058 ;;                  1    wreg      void 
 15059 ;; Registers used:
 15060 ;;		wreg, status,2, status,0, pclath, cstack
 15061 ;; Tracked objects:
 15062 ;;		On entry : 3F/2
 15063 ;;		On exit  : 3F/0
 15064 ;;		Unchanged: 0/0
 15065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15068 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15069 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15070 ;;Total ram usage:        1 bytes
 15071 ;; Hardware stack levels used: 1
 15072 ;; Hardware stack levels required when called: 1
 15073 ;; This function calls:
 15074 ;;		i1_LIN_stopTimer
 15075 ;; This function is called by:
 15076 ;;		_LIN_setTimerHandler
 15077 ;;		_TMR0_ISR
 15078 ;; This function uses a non-reentrant model
 15079 ;;
 15080                           
 15081                           
 15082                           ;psect for function _LIN_timerHandler
 15083  0894                     _LIN_timerHandler:
 15084                           
 15085                           ;mcc_generated_files/LINDrivers/lin_slave.c: 293:     if (++CountCallBack >= LIN_timeout
      +                          )
 15086                           
 15087                           ;incstack = 0
 15088                           ; Regs used in _LIN_timerHandler: [wreg+status,2+status,0+pclath+cstack]
 15089  0894  3001               	movlw	1
 15090  0895  00F6               	movwf	??_LIN_timerHandler
 15091  0896  0876               	movf	??_LIN_timerHandler,w
 15092  0897  0140               	movlb	0	; select bank0
 15093  0898  07A6               	addwf	_CountCallBack,f	;volatile
 15094  0899  0868               	movf	_LIN_timeout,w
 15095  089A  0226               	subwf	_CountCallBack,w	;volatile
 15096  089B  1C03               	skipc
 15097  089C  0008               	return
 15098                           
 15099                           ;mcc_generated_files/LINDrivers/lin_slave.c: 294:     {;mcc_generated_files/LINDrivers/l
      +                          in_slave.c: 296:         LIN_stopTimer();
 15100  089D  3197  27E6         	fcall	i1_LIN_stopTimer
 15101  089F  0008               	return
 15102  08A0                     __end_of_LIN_timerHandler:
 15103                           
 15104                           	psect	text65
 15105  07FF                     __ptext65:	
 15106 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 15107 ;; Defined at:
 15108 ;;		line 159 in file "mcc_generated_files/tmr0.c"
 15109 ;; Parameters:    Size  Location     Type
 15110 ;;		None
 15111 ;; Auto vars:     Size  Location     Type
 15112 ;;		None
 15113 ;; Return value:  Size  Location     Type
 15114 ;;                  1    wreg      void 
 15115 ;; Registers used:
 15116 ;;		None
 15117 ;; Tracked objects:
 15118 ;;		On entry : 3F/2
 15119 ;;		On exit  : 3F/2
 15120 ;;		Unchanged: 3F/0
 15121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15125 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15126 ;;Total ram usage:        0 bytes
 15127 ;; Hardware stack levels used: 1
 15128 ;; This function calls:
 15129 ;;		Nothing
 15130 ;; This function is called by:
 15131 ;;		_TMR0_Initialize
 15132 ;;		_TMR0_ISR
 15133 ;; This function uses a non-reentrant model
 15134 ;;
 15135                           
 15136                           
 15137                           ;psect for function _TMR0_DefaultInterruptHandler
 15138  07FF                     _TMR0_DefaultInterruptHandler:
 15139                           
 15140                           ;incstack = 0
 15141                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 15142  07FF  0008               	return
 15143  0800                     __end_of_TMR0_DefaultInterruptHandler:
 15144                           
 15145                           	psect	text66
 15146  0695                     __ptext66:	
 15147 ;; *************** function _ProcessAnalogInputs *****************
 15148 ;; Defined at:
 15149 ;;		line 212 in file "efuse.c"
 15150 ;; Parameters:    Size  Location     Type
 15151 ;;		None
 15152 ;; Auto vars:     Size  Location     Type
 15153 ;;		None
 15154 ;; Return value:  Size  Location     Type
 15155 ;;                  1    wreg      void 
 15156 ;; Registers used:
 15157 ;;		wreg, status,2, status,0, pclath, cstack
 15158 ;; Tracked objects:
 15159 ;;		On entry : 0/2
 15160 ;;		On exit  : 3E/0
 15161 ;;		Unchanged: 0/0
 15162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15165 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15166 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15167 ;;Total ram usage:        1 bytes
 15168 ;; Hardware stack levels used: 1
 15169 ;; Hardware stack levels required when called: 2
 15170 ;; This function calls:
 15171 ;;		_ADC_GetConversion
 15172 ;;		_ADC_SelectChannel
 15173 ;;		i1_CmdOutput
 15174 ;; This function is called by:
 15175 ;;		_TMR0_ISR
 15176 ;; This function uses a non-reentrant model
 15177 ;;
 15178                           
 15179                           
 15180                           ;psect for function _ProcessAnalogInputs
 15181  0695                     _ProcessAnalogInputs:
 15182                           
 15183                           ;efuse.c: 225:     adcISense_prev = adcISense_curr;
 15184                           
 15185                           ;incstack = 0
 15186                           ; Regs used in _ProcessAnalogInputs: [wreg+status,2+status,0+pclath+cstack]
 15187  0695  0140               	movlb	0	; select bank0
 15188  0696  083C               	movf	_adcISense_curr+1,w
 15189  0697  0141               	movlb	1	; select bank1
 15190  0698  00AD               	movwf	(_adcISense_prev+1)^(0+128)
 15191  0699  0140               	movlb	0	; select bank0
 15192  069A  083B               	movf	_adcISense_curr,w
 15193  069B  0141               	movlb	1	; select bank1
 15194  069C  00AC               	movwf	_adcISense_prev^(0+128)
 15195                           
 15196                           ;efuse.c: 226:     adcISense_curr = ADC_GetConversion(ISENSE_ANB4);
 15197  069D  300C               	movlw	12
 15198  069E  3189  2192  3186   	fcall	_ADC_GetConversion
 15199  06A1  0877               	movf	?_ADC_GetConversion+1,w
 15200  06A2  0140               	movlb	0	; select bank0
 15201  06A3  00BC               	movwf	_adcISense_curr+1
 15202  06A4  0876               	movf	?_ADC_GetConversion,w
 15203  06A5  00BB               	movwf	_adcISense_curr
 15204                           
 15205                           ;efuse.c: 227:     ADC_SelectChannel(channel_AVSS);
 15206  06A6  303B               	movlw	59
 15207  06A7  3188  20A0  3186   	fcall	_ADC_SelectChannel
 15208                           
 15209                           ;efuse.c: 228:     _delay((unsigned long)((5)*(32000000/4000000.0)));
 15210  06AA  300D               	movlw	13
 15211  06AB                     u344_27:
 15212  06AB  0B89               	decfsz	9,f
 15213  06AC  2EAB               	goto	u344_27
 15214  06AD  0000               	nop
 15215                           
 15216                           ;efuse.c: 230:     if (isense_max > 422)
 15217  06AE  3001               	movlw	1
 15218  06AF  0140               	movlb	0	; select bank0
 15219  06B0  0267               	subwf	_isense_max+1,w
 15220  06B1  30A7               	movlw	167
 15221  06B2  1903               	skipnz
 15222  06B3  0266               	subwf	_isense_max,w
 15223  06B4  1C03               	skipc
 15224  06B5  2EBA               	goto	i1l1471
 15225                           
 15226                           ;efuse.c: 231:     {;efuse.c: 232:         isense_max = 422;
 15227  06B6  30A6               	movlw	166
 15228  06B7  00E6               	movwf	_isense_max
 15229  06B8  3001               	movlw	1
 15230  06B9  00E7               	movwf	_isense_max+1
 15231  06BA                     i1l1471:	
 15232                           ;efuse.c: 233:     }
 15233                           
 15234                           
 15235                           ;efuse.c: 235:     if((adcISense_prev > isense_max) && (adcISense_curr > isense_max) && 
      +                          (outputState == OUTPUT_ON))
 15236  06BA  0141               	movlb	1	; select bank1
 15237  06BB  082D               	movf	(_adcISense_prev+1)^(0+128),w
 15238  06BC  0140               	movlb	0	; select bank0
 15239  06BD  0267               	subwf	_isense_max+1,w
 15240  06BE  1D03               	skipz
 15241  06BF  2EC4               	goto	u165_25
 15242  06C0  0141               	movlb	1	; select bank1
 15243  06C1  082C               	movf	_adcISense_prev^(0+128),w
 15244  06C2  0140               	movlb	0	; select bank0
 15245  06C3  0266               	subwf	_isense_max,w
 15246  06C4                     u165_25:
 15247  06C4  1803               	skipnc
 15248  06C5  2ED9               	goto	i1l3916
 15249  06C6  083C               	movf	_adcISense_curr+1,w
 15250  06C7  0267               	subwf	_isense_max+1,w
 15251  06C8  1D03               	skipz
 15252  06C9  2ECC               	goto	u166_25
 15253  06CA  083B               	movf	_adcISense_curr,w
 15254  06CB  0266               	subwf	_isense_max,w
 15255  06CC                     u166_25:
 15256  06CC  1803               	skipnc
 15257  06CD  2ED9               	goto	i1l3916
 15258  06CE  032C               	decf	_outputState,w
 15259  06CF  1D03               	btfss	3,2
 15260  06D0  2ED9               	goto	i1l3916
 15261                           
 15262                           ;efuse.c: 236:     {;efuse.c: 237:         overCurrentFault = FAST_OVER_CURRENT_FAULT;
 15263  06D1  3002               	movlw	2
 15264  06D2  00FB               	movwf	??_ProcessAnalogInputs
 15265  06D3  087B               	movf	??_ProcessAnalogInputs,w
 15266  06D4  00AB               	movwf	_overCurrentFault
 15267                           
 15268                           ;efuse.c: 238:         CmdOutput(OUTPUT_OFF);
 15269  06D5  3000               	movlw	0
 15270  06D6  318D  2546  3186   	fcall	i1_CmdOutput
 15271  06D9                     i1l3916:
 15272                           
 15273                           ;efuse.c: 242:     if(ticks_1ms)
 15274  06D9  0141               	movlb	1	; select bank1
 15275  06DA  0834               	movf	_ticks_1ms^(0+128),w
 15276  06DB  0435               	iorwf	(_ticks_1ms+1)^(0+128),w
 15277  06DC  1903               	btfsc	3,2
 15278  06DD  2F10               	goto	i1l3932
 15279                           
 15280                           ;efuse.c: 243:     {;efuse.c: 244:         adcVccSense_prev = adcVccSense_curr;
 15281  06DE  0140               	movlb	0	; select bank0
 15282  06DF  083E               	movf	_adcVccSense_curr+1,w
 15283  06E0  0141               	movlb	1	; select bank1
 15284  06E1  00B1               	movwf	(_adcVccSense_prev+1)^(0+128)
 15285  06E2  0140               	movlb	0	; select bank0
 15286  06E3  083D               	movf	_adcVccSense_curr,w
 15287  06E4  0141               	movlb	1	; select bank1
 15288  06E5  00B0               	movwf	_adcVccSense_prev^(0+128)
 15289                           
 15290                           ;efuse.c: 245:         adcVccSense_curr = ADC_GetConversion(VCCSENSE_ANA2);
 15291  06E6  3002               	movlw	2
 15292  06E7  3189  2192  3186   	fcall	_ADC_GetConversion
 15293  06EA  0877               	movf	?_ADC_GetConversion+1,w
 15294  06EB  0140               	movlb	0	; select bank0
 15295  06EC  00BE               	movwf	_adcVccSense_curr+1
 15296  06ED  0876               	movf	?_ADC_GetConversion,w
 15297  06EE  00BD               	movwf	_adcVccSense_curr
 15298                           
 15299                           ;efuse.c: 246:         ADC_SelectChannel(channel_AVSS);
 15300  06EF  303B               	movlw	59
 15301  06F0  3188  20A0  3186   	fcall	_ADC_SelectChannel
 15302                           
 15303                           ;efuse.c: 247:         _delay((unsigned long)((5)*(32000000/4000000.0)));
 15304  06F3  300D               	movlw	13
 15305  06F4                     u345_27:
 15306  06F4  0B89               	decfsz	9,f
 15307  06F5  2EF4               	goto	u345_27
 15308  06F6  0000               	nop
 15309                           
 15310                           ;efuse.c: 250:         if((adcVccSense_prev < 372) && (adcVccSense_curr < 372) && (outpu
      +                          tState == OUTPUT_ON))
 15311  06F7  3001               	movlw	1
 15312  06F8  0141               	movlb	1	; select bank1
 15313  06F9  0231               	subwf	(_adcVccSense_prev+1)^(0+128),w
 15314  06FA  3074               	movlw	116
 15315  06FB  1903               	skipnz
 15316  06FC  0230               	subwf	_adcVccSense_prev^(0+128),w
 15317  06FD  1803               	skipnc
 15318  06FE  0008               	return
 15319  06FF  3001               	movlw	1
 15320  0700  0140               	movlb	0	; select bank0
 15321  0701  023E               	subwf	_adcVccSense_curr+1,w
 15322  0702  3074               	movlw	116
 15323  0703  1903               	skipnz
 15324  0704  023D               	subwf	_adcVccSense_curr,w
 15325  0705  1803               	skipnc
 15326  0706  0008               	return
 15327  0707  032C               	decf	_outputState,w
 15328  0708  1D03               	btfss	3,2
 15329  0709  0008               	return
 15330                           
 15331                           ;efuse.c: 251:         {;efuse.c: 252:             uvloFault = UVLO_FAULT;
 15332  070A  01AA               	clrf	_uvloFault
 15333  070B  0AAA               	incf	_uvloFault,f
 15334                           
 15335                           ;efuse.c: 253:             CmdOutput(OUTPUT_OFF);
 15336  070C  3000               	movlw	0
 15337  070D  318D  2546         	fcall	i1_CmdOutput
 15338  070F  0008               	return
 15339  0710                     i1l3932:
 15340                           
 15341                           ;efuse.c: 257:     {;efuse.c: 258:         adcTSense_prev = adcTSense_curr;
 15342  0710  0875               	movf	_adcTSense_curr+1,w
 15343  0711  0140               	movlb	0	; select bank0
 15344  0712  00A1               	movwf	_adcTSense_prev+1
 15345  0713  0874               	movf	_adcTSense_curr,w
 15346  0714  00A0               	movwf	_adcTSense_prev
 15347                           
 15348                           ;efuse.c: 259:         adcTSense_curr = ADC_GetConversion(TSENSE_ANC4);
 15349  0715  3014               	movlw	20
 15350  0716  3189  2192  3186   	fcall	_ADC_GetConversion
 15351  0719  0877               	movf	?_ADC_GetConversion+1,w
 15352  071A  00F5               	movwf	_adcTSense_curr+1
 15353  071B  0876               	movf	?_ADC_GetConversion,w
 15354  071C  00F4               	movwf	_adcTSense_curr
 15355                           
 15356                           ;efuse.c: 260:         ADC_SelectChannel(channel_AVSS);
 15357  071D  303B               	movlw	59
 15358  071E  3188  20A0  3186   	fcall	_ADC_SelectChannel
 15359                           
 15360                           ;efuse.c: 262:         if((adcTSense_prev < 10) && (adcTSense_curr < 10))
 15361  0721  3000               	movlw	0
 15362  0722  0140               	movlb	0	; select bank0
 15363  0723  0221               	subwf	_adcTSense_prev+1,w
 15364  0724  300A               	movlw	10
 15365  0725  1903               	skipnz
 15366  0726  0220               	subwf	_adcTSense_prev,w
 15367  0727  1803               	skipnc
 15368  0728  2F38               	goto	i1l3944
 15369  0729  3000               	movlw	0
 15370  072A  0275               	subwf	_adcTSense_curr+1,w
 15371  072B  300A               	movlw	10
 15372  072C  1903               	skipnz
 15373  072D  0274               	subwf	_adcTSense_curr,w
 15374  072E  1803               	skipnc
 15375  072F  2F38               	goto	i1l3944
 15376                           
 15377                           ;efuse.c: 263:         {;efuse.c: 264:             overTempFault = TEMP_SENSOR_OORL;
 15378  0730  3002               	movlw	2
 15379  0731  00FB               	movwf	??_ProcessAnalogInputs
 15380  0732  087B               	movf	??_ProcessAnalogInputs,w
 15381  0733  00A9               	movwf	_overTempFault
 15382                           
 15383                           ;efuse.c: 265:             CmdOutput(OUTPUT_OFF);
 15384  0734  3000               	movlw	0
 15385  0735  318D  2546         	fcall	i1_CmdOutput
 15386                           
 15387                           ;efuse.c: 266:         }
 15388  0737  0008               	return
 15389  0738                     i1l3944:
 15390  0738  3003               	movlw	3
 15391  0739  0221               	subwf	_adcTSense_prev+1,w
 15392  073A  30F6               	movlw	246
 15393  073B  1903               	skipnz
 15394  073C  0220               	subwf	_adcTSense_prev,w
 15395  073D  1C03               	skipc
 15396  073E  0008               	return
 15397  073F  3003               	movlw	3
 15398  0740  0275               	subwf	_adcTSense_curr+1,w
 15399  0741  30F6               	movlw	246
 15400  0742  1903               	skipnz
 15401  0743  0274               	subwf	_adcTSense_curr,w
 15402  0744  1C03               	skipc
 15403  0745  0008               	return
 15404                           
 15405                           ;efuse.c: 268:         {;efuse.c: 269:             overTempFault = TEMP_SENSOR_OORH;
 15406  0746  3003               	movlw	3
 15407  0747  00FB               	movwf	??_ProcessAnalogInputs
 15408  0748  087B               	movf	??_ProcessAnalogInputs,w
 15409  0749  00A9               	movwf	_overTempFault
 15410                           
 15411                           ;efuse.c: 270:             CmdOutput(OUTPUT_OFF);
 15412  074A  3000               	movlw	0
 15413  074B  318D  2546         	fcall	i1_CmdOutput
 15414  074D  0008               	return
 15415  074E                     __end_of_ProcessAnalogInputs:
 15416                           
 15417                           	psect	text67
 15418  0D46                     __ptext67:	
 15419 ;; *************** function i1_CmdOutput *****************
 15420 ;; Defined at:
 15421 ;;		line 276 in file "efuse.c"
 15422 ;; Parameters:    Size  Location     Type
 15423 ;;  enable          1    wreg     unsigned char 
 15424 ;; Auto vars:     Size  Location     Type
 15425 ;;  enable          1    4[COMMON] unsigned char 
 15426 ;; Return value:  Size  Location     Type
 15427 ;;                  1    wreg      void 
 15428 ;; Registers used:
 15429 ;;		wreg, status,2, status,0, pclath, cstack
 15430 ;; Tracked objects:
 15431 ;;		On entry : 3F/0
 15432 ;;		On exit  : 3F/0
 15433 ;;		Unchanged: 0/0
 15434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15436 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15437 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15438 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15439 ;;Total ram usage:        3 bytes
 15440 ;; Hardware stack levels used: 1
 15441 ;; Hardware stack levels required when called: 1
 15442 ;; This function calls:
 15443 ;;		i1_TMR1_StartTimer
 15444 ;;		i1_TMR1_StopTimer
 15445 ;;		i1_TMR1_WriteTimer
 15446 ;;		i1_TMR2_Initialize
 15447 ;;		i1_TMR2_Start
 15448 ;;		i1_TMR2_Stop
 15449 ;; This function is called by:
 15450 ;;		_ProcessAnalogInputs
 15451 ;; This function uses a non-reentrant model
 15452 ;;
 15453                           
 15454                           
 15455                           ;psect for function i1_CmdOutput
 15456  0D46                     i1_CmdOutput:
 15457                           
 15458                           ;incstack = 0
 15459                           ; Regs used in i1_CmdOutput: [wreg+status,2+status,0+pclath+cstack]
 15460                           ;i1CmdOutput@enable stored from wreg
 15461  0D46  00FA               	movwf	i1CmdOutput@enable
 15462                           
 15463                           ;efuse.c: 276: void CmdOutput(uint8_t enable);efuse.c: 277: {;efuse.c: 278:     TMR2_Sto
      +                          p();
 15464  0D47  3197  27D6  318D   	fcall	i1_TMR2_Stop
 15465                           
 15466                           ;efuse.c: 281:     CLC1POLbits.LC1G4POL = 0;
 15467  0D4A  017C               	movlb	60	; select bank60
 15468  0D4B  1191               	bcf	17,3	;volatile
 15469                           
 15470                           ;efuse.c: 282:     CLC1GLS3bits.LC1G4D3N = 0;
 15471  0D4C  1219               	bcf	25,4	;volatile
 15472                           
 15473                           ;efuse.c: 283:     CLC1GLS3bits.LC1G4D4T = 0;
 15474  0D4D  1399               	bcf	25,7	;volatile
 15475                           
 15476                           ;efuse.c: 287:     T1GCON = 0x80;
 15477  0D4E  3080               	movlw	128
 15478  0D4F  0144               	movlb	4	; select bank4
 15479  0D50  008F               	movwf	15	;volatile
 15480                           
 15481                           ;efuse.c: 290:     T1GATE = 0x0D;
 15482  0D51  300D               	movlw	13
 15483  0D52  0090               	movwf	16	;volatile
 15484                           
 15485                           ;efuse.c: 292:     CLC3CONbits.EN = 0;
 15486  0D53  017C               	movlb	60	; select bank60
 15487  0D54  13A4               	bcf	36,7	;volatile
 15488                           
 15489                           ;efuse.c: 295:     CLC1POLbits.LC1G2POL = 1;
 15490  0D55  1491               	bsf	17,1	;volatile
 15491                           
 15492                           ;efuse.c: 296:     CLC1POLbits.LC1G2POL = 0;
 15493  0D56  1091               	bcf	17,1	;volatile
 15494                           
 15495                           ;efuse.c: 298:     _delay((unsigned long)((1)*(32000000/4000000.0)));
 15496  0D57  3200               	nop2	;2 cycle nop
 15497  0D58  3200               	nop2	;2 cycle nop
 15498  0D59  3200               	nop2	;2 cycle nop
 15499  0D5A  3200               	nop2	;2 cycle nop
 15500                           
 15501                           ;efuse.c: 301:     CLC2POLbits.LC2G2POL = 1;
 15502  0D5B  017C               	movlb	60	; select bank60
 15503  0D5C  149B               	bsf	27,1	;volatile
 15504                           
 15505                           ;efuse.c: 302:     CLC2POLbits.LC2G2POL = 0;
 15506  0D5D  109B               	bcf	27,1	;volatile
 15507                           
 15508                           ;efuse.c: 304:     outputState = OUTPUT_OFF;
 15509  0D5E  0140               	movlb	0	; select bank0
 15510  0D5F  01AC               	clrf	_outputState
 15511                           
 15512                           ;efuse.c: 307:     if (enable)
 15513  0D60  087A               	movf	i1CmdOutput@enable,w
 15514  0D61  1903               	btfsc	3,2
 15515  0D62  0008               	return
 15516                           
 15517                           ;efuse.c: 308:     {;efuse.c: 309:         overCurrentFault = NO_OVER_CURRENT_FAULT;
 15518  0D63  01AB               	clrf	_overCurrentFault
 15519                           
 15520                           ;efuse.c: 310:         uvloFault = NO_UVLO_FAULT;
 15521  0D64  01AA               	clrf	_uvloFault
 15522                           
 15523                           ;efuse.c: 311:         overTempFault = NO_TEMP_FAULT;
 15524  0D65  01A9               	clrf	_overTempFault
 15525  0D66  1794               	bsf	20,7	;volatile
 15526                           
 15527                           ;efuse.c: 316:         CLC1CONbits.LC1EN = 1;
 15528  0D67  017C               	movlb	60	; select bank60
 15529  0D68  1790               	bsf	16,7	;volatile
 15530                           
 15531                           ;efuse.c: 317:         CLC1POLbits.LC1G4POL = 0;
 15532  0D69  1191               	bcf	17,3	;volatile
 15533                           
 15534                           ;efuse.c: 318:         CLC1POLbits.LC1G3POL = 0;
 15535  0D6A  1111               	bcf	17,2	;volatile
 15536                           
 15537                           ;efuse.c: 319:         CLC1POLbits.LC1G3POL = 1;
 15538  0D6B  1511               	bsf	17,2	;volatile
 15539                           
 15540                           ;efuse.c: 320:         CLC1POLbits.LC1G3POL = 0;
 15541  0D6C  1111               	bcf	17,2	;volatile
 15542                           
 15543                           ;efuse.c: 321:         CLC1POLbits.LC1POL = 1;
 15544  0D6D  1791               	bsf	17,7	;volatile
 15545                           
 15546                           ;efuse.c: 324:         CLC2POLbits.LC2G4POL = 0;
 15547  0D6E  119B               	bcf	27,3	;volatile
 15548                           
 15549                           ;efuse.c: 325:         CLC2POLbits.LC2G3POL = 0;
 15550  0D6F  111B               	bcf	27,2	;volatile
 15551                           
 15552                           ;efuse.c: 326:         CLC2POLbits.LC2G3POL = 1;
 15553  0D70  151B               	bsf	27,2	;volatile
 15554                           
 15555                           ;efuse.c: 327:         CLC2POLbits.LC2G3POL = 0;
 15556  0D71  111B               	bcf	27,2	;volatile
 15557                           
 15558                           ;efuse.c: 329:         if(triggerType == TRIGGER_TIMER_OVERFLOW)
 15559  0D72  0140               	movlb	0	; select bank0
 15560  0D73  032E               	decf	_triggerType,w
 15561  0D74  1D03               	btfss	3,2
 15562  0D75  2D87               	goto	i1l1485
 15563                           
 15564                           ;efuse.c: 330:         {;efuse.c: 333:             CLC1POLbits.LC1G4POL = 1;
 15565  0D76  017C               	movlb	60	; select bank60
 15566  0D77  1591               	bsf	17,3	;volatile
 15567                           
 15568                           ;efuse.c: 334:             CLC1GLS3bits.LC1G4D3N = 1;
 15569  0D78  1619               	bsf	25,4	;volatile
 15570                           
 15571                           ;efuse.c: 335:             CLC1GLS3bits.LC1G4D4T = 1;
 15572  0D79  1799               	bsf	25,7	;volatile
 15573                           
 15574                           ;efuse.c: 338:             T1GCON = 0xC0;
 15575  0D7A  30C0               	movlw	192
 15576  0D7B  0144               	movlb	4	; select bank4
 15577  0D7C  008F               	movwf	15	;volatile
 15578                           
 15579                           ;efuse.c: 341:             T1GATE = 0x0B;
 15580  0D7D  300B               	movlw	11
 15581  0D7E  0090               	movwf	16	;volatile
 15582                           
 15583                           ;efuse.c: 343:             TMR2_Initialize();
 15584  0D7F  3188  20BA  318D   	fcall	i1_TMR2_Initialize
 15585                           
 15586                           ;efuse.c: 344:             TMR2_Start();
 15587  0D82  3197  27C6  318D   	fcall	i1_TMR2_Start
 15588                           
 15589                           ;efuse.c: 346:             CLC3CONbits.EN = 1;
 15590  0D85  017C               	movlb	60	; select bank60
 15591  0D86  17A4               	bsf	36,7	;volatile
 15592  0D87                     i1l1485:	
 15593                           ;efuse.c: 347:         }
 15594                           
 15595                           
 15596                           ;efuse.c: 350:         TMR1_StopTimer();
 15597  0D87  3197  27D3  318D   	fcall	i1_TMR1_StopTimer
 15598                           
 15599                           ;efuse.c: 351:         TMR1_WriteTimer( 0xffff - reduced_drive_time );
 15600  0D8A  0140               	movlb	0	; select bank0
 15601  0D8B  082D               	movf	_reduced_drive_time,w
 15602  0D8C  00F8               	movwf	??i1_CmdOutput
 15603  0D8D  01F9               	clrf	??i1_CmdOutput+1
 15604  0D8E  0978               	comf	??i1_CmdOutput,w
 15605  0D8F  00F6               	movwf	i1TMR1_WriteTimer@timerVal
 15606  0D90  0979               	comf	??i1_CmdOutput+1,w
 15607  0D91  00F7               	movwf	i1TMR1_WriteTimer@timerVal+1
 15608  0D92  3188  20D6  318D   	fcall	i1_TMR1_WriteTimer
 15609                           
 15610                           ;efuse.c: 352:         PIR4bits.TMR1IF = 0;
 15611  0D95  014E               	movlb	14	; select bank14
 15612  0D96  1010               	bcf	16,0	;volatile
 15613                           
 15614                           ;efuse.c: 353:         TMR1_StartTimer();
 15615  0D97  3197  27D0         	fcall	i1_TMR1_StartTimer
 15616                           
 15617                           ;efuse.c: 355:         iSenseOffset = adcISense_curr;
 15618  0D99  0140               	movlb	0	; select bank0
 15619  0D9A  083C               	movf	_adcISense_curr+1,w
 15620  0D9B  00B8               	movwf	_iSenseOffset+1
 15621  0D9C  083B               	movf	_adcISense_curr,w
 15622  0D9D  00B7               	movwf	_iSenseOffset
 15623                           
 15624                           ;efuse.c: 356:         outputState = OUTPUT_ON;
 15625  0D9E  01AC               	clrf	_outputState
 15626  0D9F  0AAC               	incf	_outputState,f
 15627  0DA0  1394               	bcf	20,7	;volatile
 15628  0DA1  0008               	return
 15629  0DA2                     __end_ofi1_CmdOutput:
 15630                           
 15631                           	psect	text68
 15632  17D6                     __ptext68:	
 15633 ;; *************** function i1_TMR2_Stop *****************
 15634 ;; Defined at:
 15635 ;;		line 111 in file "mcc_generated_files/tmr2.c"
 15636 ;; Parameters:    Size  Location     Type
 15637 ;;		None
 15638 ;; Auto vars:     Size  Location     Type
 15639 ;;		None
 15640 ;; Return value:  Size  Location     Type
 15641 ;;                  1    wreg      void 
 15642 ;; Registers used:
 15643 ;;		None
 15644 ;; Tracked objects:
 15645 ;;		On entry : 3F/0
 15646 ;;		On exit  : 3F/5
 15647 ;;		Unchanged: 0/0
 15648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15652 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15653 ;;Total ram usage:        0 bytes
 15654 ;; Hardware stack levels used: 1
 15655 ;; This function calls:
 15656 ;;		Nothing
 15657 ;; This function is called by:
 15658 ;;		i1_CmdOutput
 15659 ;; This function uses a non-reentrant model
 15660 ;;
 15661                           
 15662                           
 15663                           ;psect for function i1_TMR2_Stop
 15664  17D6                     i1_TMR2_Stop:
 15665                           
 15666                           ;mcc_generated_files/tmr2.c: 114:     T2CONbits.TMR2ON = 0;
 15667                           
 15668                           ;incstack = 0
 15669                           ; Regs used in i1_TMR2_Stop: []
 15670  17D6  0145               	movlb	5	; select bank5
 15671  17D7  138E               	bcf	14,7	;volatile
 15672  17D8  0008               	return
 15673  17D9                     __end_ofi1_TMR2_Stop:
 15674                           
 15675                           	psect	text69
 15676  17C6                     __ptext69:	
 15677 ;; *************** function i1_TMR2_Start *****************
 15678 ;; Defined at:
 15679 ;;		line 100 in file "mcc_generated_files/tmr2.c"
 15680 ;; Parameters:    Size  Location     Type
 15681 ;;		None
 15682 ;; Auto vars:     Size  Location     Type
 15683 ;;		None
 15684 ;; Return value:  Size  Location     Type
 15685 ;;                  1    wreg      void 
 15686 ;; Registers used:
 15687 ;;		None
 15688 ;; Tracked objects:
 15689 ;;		On entry : 3F/5
 15690 ;;		On exit  : 3F/5
 15691 ;;		Unchanged: 0/0
 15692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15696 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15697 ;;Total ram usage:        0 bytes
 15698 ;; Hardware stack levels used: 1
 15699 ;; This function calls:
 15700 ;;		Nothing
 15701 ;; This function is called by:
 15702 ;;		i1_CmdOutput
 15703 ;; This function uses a non-reentrant model
 15704 ;;
 15705                           
 15706                           
 15707                           ;psect for function i1_TMR2_Start
 15708  17C6                     i1_TMR2_Start:
 15709                           
 15710                           ;mcc_generated_files/tmr2.c: 103:     T2CONbits.TMR2ON = 1;
 15711                           
 15712                           ;incstack = 0
 15713                           ; Regs used in i1_TMR2_Start: []
 15714  17C6  178E               	bsf	14,7	;volatile
 15715  17C7  0008               	return
 15716  17C8                     __end_ofi1_TMR2_Start:
 15717                           
 15718                           	psect	text70
 15719  08BA                     __ptext70:	
 15720 ;; *************** function i1_TMR2_Initialize *****************
 15721 ;; Defined at:
 15722 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 15723 ;; Parameters:    Size  Location     Type
 15724 ;;		None
 15725 ;; Auto vars:     Size  Location     Type
 15726 ;;		None
 15727 ;; Return value:  Size  Location     Type
 15728 ;;                  1    wreg      void 
 15729 ;; Registers used:
 15730 ;;		wreg, status,2
 15731 ;; Tracked objects:
 15732 ;;		On entry : 3F/4
 15733 ;;		On exit  : 3F/5
 15734 ;;		Unchanged: 0/0
 15735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15739 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15740 ;;Total ram usage:        0 bytes
 15741 ;; Hardware stack levels used: 1
 15742 ;; This function calls:
 15743 ;;		Nothing
 15744 ;; This function is called by:
 15745 ;;		i1_CmdOutput
 15746 ;; This function uses a non-reentrant model
 15747 ;;
 15748                           
 15749                           
 15750                           ;psect for function i1_TMR2_Initialize
 15751  08BA                     i1_TMR2_Initialize:
 15752                           
 15753                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x0D;
 15754                           
 15755                           ;incstack = 0
 15756                           ; Regs used in i1_TMR2_Initialize: [wreg+status,2]
 15757  08BA  300D               	movlw	13
 15758  08BB  0145               	movlb	5	; select bank5
 15759  08BC  0090               	movwf	16	;volatile
 15760                           
 15761                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 15762  08BD  018F               	clrf	15	;volatile
 15763                           
 15764                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 15765  08BE  0191               	clrf	17	;volatile
 15766                           
 15767                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x27;
 15768  08BF  3027               	movlw	39
 15769  08C0  008D               	movwf	13	;volatile
 15770                           
 15771                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 15772  08C1  018C               	clrf	12	;volatile
 15773                           
 15774                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 15775  08C2  014E               	movlb	14	; select bank14
 15776  08C3  1090               	bcf	16,1	;volatile
 15777                           
 15778                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xB0;
 15779  08C4  30B0               	movlw	176
 15780  08C5  0145               	movlb	5	; select bank5
 15781  08C6  008E               	movwf	14	;volatile
 15782  08C7  0008               	return
 15783  08C8                     __end_ofi1_TMR2_Initialize:
 15784                           
 15785                           	psect	text71
 15786  08D6                     __ptext71:	
 15787 ;; *************** function i1_TMR1_WriteTimer *****************
 15788 ;; Defined at:
 15789 ;;		line 120 in file "mcc_generated_files/tmr1.c"
 15790 ;; Parameters:    Size  Location     Type
 15791 ;;  timerVal        2    0[COMMON] unsigned short 
 15792 ;; Auto vars:     Size  Location     Type
 15793 ;;		None
 15794 ;; Return value:  Size  Location     Type
 15795 ;;                  1    wreg      void 
 15796 ;; Registers used:
 15797 ;;		wreg
 15798 ;; Tracked objects:
 15799 ;;		On entry : 3F/0
 15800 ;;		On exit  : 3F/4
 15801 ;;		Unchanged: 0/0
 15802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15803 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15806 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15807 ;;Total ram usage:        2 bytes
 15808 ;; Hardware stack levels used: 1
 15809 ;; This function calls:
 15810 ;;		Nothing
 15811 ;; This function is called by:
 15812 ;;		i1_CmdOutput
 15813 ;; This function uses a non-reentrant model
 15814 ;;
 15815                           
 15816                           
 15817                           ;psect for function i1_TMR1_WriteTimer
 15818  08D6                     i1_TMR1_WriteTimer:
 15819                           
 15820                           ;mcc_generated_files/tmr1.c: 120: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 121: {;mcc_generated_files/tmr1.c: 122:     if (T1CONbits.nT1SYNC == 1)
 15821                           
 15822                           ;incstack = 0
 15823                           ; Regs used in i1_TMR1_WriteTimer: [wreg]
 15824  08D6  0144               	movlb	4	; select bank4
 15825  08D7  1D0E               	btfss	14,2	;volatile
 15826  08D8  28E0               	goto	i1l3448
 15827                           
 15828                           ;mcc_generated_files/tmr1.c: 123:     {;mcc_generated_files/tmr1.c: 125:         T1CONbi
      +                          ts.TMR1ON = 0;
 15829  08D9  100E               	bcf	14,0	;volatile
 15830                           
 15831                           ;mcc_generated_files/tmr1.c: 128:         TMR1H = (uint8_t)(timerVal >> 8);
 15832  08DA  0877               	movf	i1TMR1_WriteTimer@timerVal+1,w
 15833  08DB  008D               	movwf	13	;volatile
 15834                           
 15835                           ;mcc_generated_files/tmr1.c: 129:         TMR1L = (uint8_t)timerVal;
 15836  08DC  0876               	movf	i1TMR1_WriteTimer@timerVal,w
 15837  08DD  008C               	movwf	12	;volatile
 15838                           
 15839                           ;mcc_generated_files/tmr1.c: 132:         T1CONbits.TMR1ON =1;
 15840  08DE  140E               	bsf	14,0	;volatile
 15841                           
 15842                           ;mcc_generated_files/tmr1.c: 133:     }
 15843  08DF  0008               	return
 15844  08E0                     i1l3448:
 15845                           
 15846                           ;mcc_generated_files/tmr1.c: 135:     {;mcc_generated_files/tmr1.c: 137:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
 15847  08E0  0877               	movf	i1TMR1_WriteTimer@timerVal+1,w
 15848  08E1  008D               	movwf	13	;volatile
 15849                           
 15850                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = (uint8_t)timerVal;
 15851  08E2  0876               	movf	i1TMR1_WriteTimer@timerVal,w
 15852  08E3  008C               	movwf	12	;volatile
 15853  08E4  0008               	return
 15854  08E5                     __end_ofi1_TMR1_WriteTimer:
 15855                           
 15856                           	psect	text72
 15857  17D3                     __ptext72:	
 15858 ;; *************** function i1_TMR1_StopTimer *****************
 15859 ;; Defined at:
 15860 ;;		line 98 in file "mcc_generated_files/tmr1.c"
 15861 ;; Parameters:    Size  Location     Type
 15862 ;;		None
 15863 ;; Auto vars:     Size  Location     Type
 15864 ;;		None
 15865 ;; Return value:  Size  Location     Type
 15866 ;;                  1    wreg      void 
 15867 ;; Registers used:
 15868 ;;		None
 15869 ;; Tracked objects:
 15870 ;;		On entry : 3/0
 15871 ;;		On exit  : 3F/4
 15872 ;;		Unchanged: 0/0
 15873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15877 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15878 ;;Total ram usage:        0 bytes
 15879 ;; Hardware stack levels used: 1
 15880 ;; This function calls:
 15881 ;;		Nothing
 15882 ;; This function is called by:
 15883 ;;		i1_CmdOutput
 15884 ;; This function uses a non-reentrant model
 15885 ;;
 15886                           
 15887                           
 15888                           ;psect for function i1_TMR1_StopTimer
 15889  17D3                     i1_TMR1_StopTimer:
 15890                           
 15891                           ;mcc_generated_files/tmr1.c: 101:     T1CONbits.TMR1ON = 0;
 15892                           
 15893                           ;incstack = 0
 15894                           ; Regs used in i1_TMR1_StopTimer: []
 15895  17D3  0144               	movlb	4	; select bank4
 15896  17D4  100E               	bcf	14,0	;volatile
 15897  17D5  0008               	return
 15898  17D6                     __end_ofi1_TMR1_StopTimer:
 15899                           
 15900                           	psect	text73
 15901  17D0                     __ptext73:	
 15902 ;; *************** function i1_TMR1_StartTimer *****************
 15903 ;; Defined at:
 15904 ;;		line 92 in file "mcc_generated_files/tmr1.c"
 15905 ;; Parameters:    Size  Location     Type
 15906 ;;		None
 15907 ;; Auto vars:     Size  Location     Type
 15908 ;;		None
 15909 ;; Return value:  Size  Location     Type
 15910 ;;                  1    wreg      void 
 15911 ;; Registers used:
 15912 ;;		None
 15913 ;; Tracked objects:
 15914 ;;		On entry : 3F/E
 15915 ;;		On exit  : 3F/4
 15916 ;;		Unchanged: 0/0
 15917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15921 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15922 ;;Total ram usage:        0 bytes
 15923 ;; Hardware stack levels used: 1
 15924 ;; This function calls:
 15925 ;;		Nothing
 15926 ;; This function is called by:
 15927 ;;		i1_CmdOutput
 15928 ;; This function uses a non-reentrant model
 15929 ;;
 15930                           
 15931                           
 15932                           ;psect for function i1_TMR1_StartTimer
 15933  17D0                     i1_TMR1_StartTimer:
 15934                           
 15935                           ;mcc_generated_files/tmr1.c: 95:     T1CONbits.TMR1ON = 1;
 15936                           
 15937                           ;incstack = 0
 15938                           ; Regs used in i1_TMR1_StartTimer: []
 15939  17D0  0144               	movlb	4	; select bank4
 15940  17D1  140E               	bsf	14,0	;volatile
 15941  17D2  0008               	return
 15942  17D3                     __end_ofi1_TMR1_StartTimer:
 15943                           
 15944                           	psect	text74
 15945  08A0                     __ptext74:	
 15946 ;; *************** function _ADC_SelectChannel *****************
 15947 ;; Defined at:
 15948 ;;		line 85 in file "mcc_generated_files/adc.c"
 15949 ;; Parameters:    Size  Location     Type
 15950 ;;  channel         1    wreg     enum E6731
 15951 ;; Auto vars:     Size  Location     Type
 15952 ;;  channel         1    1[COMMON] enum E6731
 15953 ;; Return value:  Size  Location     Type
 15954 ;;                  1    wreg      void 
 15955 ;; Registers used:
 15956 ;;		wreg, status,2, status,0
 15957 ;; Tracked objects:
 15958 ;;		On entry : 3E/0
 15959 ;;		On exit  : 3F/1
 15960 ;;		Unchanged: 0/0
 15961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15963 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15964 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15965 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15966 ;;Total ram usage:        2 bytes
 15967 ;; Hardware stack levels used: 1
 15968 ;; This function calls:
 15969 ;;		Nothing
 15970 ;; This function is called by:
 15971 ;;		_ProcessAnalogInputs
 15972 ;; This function uses a non-reentrant model
 15973 ;;
 15974                           
 15975                           
 15976                           ;psect for function _ADC_SelectChannel
 15977  08A0                     _ADC_SelectChannel:
 15978                           
 15979                           ;incstack = 0
 15980                           ; Regs used in _ADC_SelectChannel: [wreg+status,2+status,0]
 15981                           ;ADC_SelectChannel@channel stored from wreg
 15982  08A0  00F7               	movwf	ADC_SelectChannel@channel
 15983                           
 15984                           ;mcc_generated_files/adc.c: 85: void ADC_SelectChannel(adc_channel_t channel);mcc_genera
      +                          ted_files/adc.c: 86: {;mcc_generated_files/adc.c: 88:     ADCON0bits.CHS = channel;
 15985  08A1  0877               	movf	ADC_SelectChannel@channel,w
 15986  08A2  00F6               	movwf	??_ADC_SelectChannel
 15987  08A3  0DF6               	rlf	??_ADC_SelectChannel,f
 15988  08A4  0DF6               	rlf	??_ADC_SelectChannel,f
 15989  08A5  0141               	movlb	1	; select bank1
 15990  08A6  081D               	movf	29,w	;volatile
 15991  08A7  0676               	xorwf	??_ADC_SelectChannel,w
 15992  08A8  3903               	andlw	-253
 15993  08A9  0676               	xorwf	??_ADC_SelectChannel,w
 15994  08AA  009D               	movwf	29	;volatile
 15995                           
 15996                           ;mcc_generated_files/adc.c: 90:     ADCON0bits.ADON = 1;
 15997  08AB  141D               	bsf	29,0	;volatile
 15998  08AC  0008               	return
 15999  08AD                     __end_of_ADC_SelectChannel:
 16000                           
 16001                           	psect	text75
 16002  0992                     __ptext75:	
 16003 ;; *************** function _ADC_GetConversion *****************
 16004 ;; Defined at:
 16005 ;;		line 112 in file "mcc_generated_files/adc.c"
 16006 ;; Parameters:    Size  Location     Type
 16007 ;;  channel         1    wreg     enum E6731
 16008 ;; Auto vars:     Size  Location     Type
 16009 ;;  channel         1    3[COMMON] enum E6731
 16010 ;; Return value:  Size  Location     Type
 16011 ;;                  2    0[COMMON] unsigned short 
 16012 ;; Registers used:
 16013 ;;		wreg, status,2, status,0
 16014 ;; Tracked objects:
 16015 ;;		On entry : 3E/1
 16016 ;;		On exit  : 3F/1
 16017 ;;		Unchanged: 0/0
 16018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16019 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16020 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16021 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16022 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16023 ;;Total ram usage:        4 bytes
 16024 ;; Hardware stack levels used: 1
 16025 ;; This function calls:
 16026 ;;		Nothing
 16027 ;; This function is called by:
 16028 ;;		_ProcessAnalogInputs
 16029 ;; This function uses a non-reentrant model
 16030 ;;
 16031                           
 16032                           
 16033                           ;psect for function _ADC_GetConversion
 16034  0992                     _ADC_GetConversion:
 16035                           
 16036                           ;incstack = 0
 16037                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
 16038                           ;ADC_GetConversion@channel stored from wreg
 16039  0992  00F9               	movwf	ADC_GetConversion@channel
 16040                           
 16041                           ;mcc_generated_files/adc.c: 112: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 113: {;mcc_generated_files/adc.c: 115:     ADCON0bits.CHS = ch
      +                          annel;
 16042  0993  0879               	movf	ADC_GetConversion@channel,w
 16043  0994  00F8               	movwf	??_ADC_GetConversion
 16044  0995  0DF8               	rlf	??_ADC_GetConversion,f
 16045  0996  0DF8               	rlf	??_ADC_GetConversion,f
 16046  0997  0141               	movlb	1	; select bank1
 16047  0998  081D               	movf	29,w	;volatile
 16048  0999  0678               	xorwf	??_ADC_GetConversion,w
 16049  099A  3903               	andlw	-253
 16050  099B  0678               	xorwf	??_ADC_GetConversion,w
 16051  099C  009D               	movwf	29	;volatile
 16052                           
 16053                           ;mcc_generated_files/adc.c: 118:     ADCON0bits.ADON = 1;
 16054  099D  141D               	bsf	29,0	;volatile
 16055                           
 16056                           ;mcc_generated_files/adc.c: 121:     _delay((unsigned long)((5)*(32000000/4000000.0)));
 16057  099E  300D               	movlw	13
 16058  099F                     u346_27:
 16059  099F  0B89               	decfsz	9,f
 16060  09A0  299F               	goto	u346_27
 16061  09A1  0000               	nop
 16062                           
 16063                           ;mcc_generated_files/adc.c: 124:     ADCON0bits.GOnDONE = 1;
 16064  09A2  0141               	movlb	1	; select bank1
 16065  09A3  149D               	bsf	29,1	;volatile
 16066  09A4                     i1l1114:	
 16067                           ;mcc_generated_files/adc.c: 128:     {;mcc_generated_files/adc.c: 129:     }
 16068                           
 16069                           
 16070                           ;mcc_generated_files/adc.c: 127:     while (ADCON0bits.GOnDONE)
 16071  09A4  189D               	btfsc	29,1	;volatile
 16072  09A5  29A4               	goto	i1l1114
 16073                           
 16074                           ;mcc_generated_files/adc.c: 132:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 16075  09A6  081C               	movf	28,w	;volatile
 16076  09A7  00F7               	movwf	?_ADC_GetConversion+1
 16077  09A8  081B               	movf	27,w	;volatile
 16078  09A9  00F6               	movwf	?_ADC_GetConversion
 16079  09AA  0008               	return
 16080  09AB                     __end_of_ADC_GetConversion:
 16081                           
 16082                           	psect	text76
 16083  17E6                     __ptext76:	
 16084 ;; *************** function i1_LIN_stopTimer *****************
 16085 ;; Defined at:
 16086 ;;		line 304 in file "mcc_generated_files/LINDrivers/lin_slave.c"
 16087 ;; Parameters:    Size  Location     Type
 16088 ;;		None
 16089 ;; Auto vars:     Size  Location     Type
 16090 ;;		None
 16091 ;; Return value:  Size  Location     Type
 16092 ;;                  1    wreg      void 
 16093 ;; Registers used:
 16094 ;;		status,2
 16095 ;; Tracked objects:
 16096 ;;		On entry : 3F/0
 16097 ;;		On exit  : 3F/0
 16098 ;;		Unchanged: 0/0
 16099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16103 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16104 ;;Total ram usage:        0 bytes
 16105 ;; Hardware stack levels used: 1
 16106 ;; This function calls:
 16107 ;;		Nothing
 16108 ;; This function is called by:
 16109 ;;		_LIN_timerHandler
 16110 ;; This function uses a non-reentrant model
 16111 ;;
 16112                           
 16113                           
 16114                           ;psect for function i1_LIN_stopTimer
 16115  17E6                     i1_LIN_stopTimer:
 16116                           
 16117                           ;mcc_generated_files/LINDrivers/lin_slave.c: 305:     __nop();
 16118                           
 16119                           ;incstack = 0
 16120                           ; Regs used in i1_LIN_stopTimer: [status,2]
 16121  17E6  0000               	nop
 16122                           
 16123                           ;mcc_generated_files/LINDrivers/lin_slave.c: 307:     CountCallBack = 0;
 16124  17E7  0140               	movlb	0	; select bank0
 16125  17E8  01A6               	clrf	_CountCallBack	;volatile
 16126                           
 16127                           ;mcc_generated_files/LINDrivers/lin_slave.c: 308:     LIN_timerRunning = 0;
 16128  17E9  01A7               	clrf	_LIN_timerRunning
 16129  17EA  0008               	return
 16130  17EB                     __end_ofi1_LIN_stopTimer:
 16131                           
 16132                           	psect	text77
 16133  09DF                     __ptext77:	
 16134 ;; *************** function _EUSART1_Transmit_ISR *****************
 16135 ;; Defined at:
 16136 ;;		line 197 in file "mcc_generated_files/eusart1.c"
 16137 ;; Parameters:    Size  Location     Type
 16138 ;;		None
 16139 ;; Auto vars:     Size  Location     Type
 16140 ;;		None
 16141 ;; Return value:  Size  Location     Type
 16142 ;;                  1    wreg      void 
 16143 ;; Registers used:
 16144 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 16145 ;; Tracked objects:
 16146 ;;		On entry : 3F/2
 16147 ;;		On exit  : 30/0
 16148 ;;		Unchanged: 0/0
 16149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16152 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16153 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16154 ;;Total ram usage:        1 bytes
 16155 ;; Hardware stack levels used: 1
 16156 ;; This function calls:
 16157 ;;		Nothing
 16158 ;; This function is called by:
 16159 ;;		_EUSART1_Initialize
 16160 ;;		_INTERRUPT_InterruptManager
 16161 ;; This function uses a non-reentrant model
 16162 ;;
 16163                           
 16164                           
 16165                           ;psect for function _EUSART1_Transmit_ISR
 16166  09DF                     _EUSART1_Transmit_ISR:
 16167                           
 16168                           ;mcc_generated_files/eusart1.c: 201:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
 16169                           
 16170                           ;incstack = 0
 16171                           ; Regs used in _EUSART1_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 16172  09DF  3008               	movlw	8
 16173  09E0  0141               	movlb	1	; select bank1
 16174  09E1  026D               	subwf	_eusart1TxBufferRemaining^(0+128),w
 16175  09E2  1803               	skipnc
 16176  09E3  29FA               	goto	i1l711
 16177                           
 16178                           ;mcc_generated_files/eusart1.c: 202:     {;mcc_generated_files/eusart1.c: 203:         T
      +                          X1REG = eusart1TxBuffer[eusart1TxTail++];
 16179  09E4  0872               	movf	_eusart1TxTail,w
 16180  09E5  3E30               	addlw	(low (_eusart1TxBuffer| (0+256)))& (0+255)
 16181  09E6  0086               	movwf	6
 16182  09E7  3001               	movlw	1	; select bank2/3
 16183  09E8  0087               	movwf	7
 16184  09E9  0801               	movf	1,w
 16185  09EA  0142               	movlb	2	; select bank2
 16186  09EB  009A               	movwf	26	;volatile
 16187  09EC  3001               	movlw	1
 16188  09ED  00F6               	movwf	??_EUSART1_Transmit_ISR
 16189  09EE  0876               	movf	??_EUSART1_Transmit_ISR,w
 16190  09EF  07F2               	addwf	_eusart1TxTail,f	;volatile
 16191                           
 16192                           ;mcc_generated_files/eusart1.c: 204:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
 16193  09F0  3008               	movlw	8
 16194  09F1  0272               	subwf	_eusart1TxTail,w
 16195  09F2  1803               	btfsc	3,0
 16196                           
 16197                           ;mcc_generated_files/eusart1.c: 205:         {;mcc_generated_files/eusart1.c: 206:      
      +                                 eusart1TxTail = 0;
 16198  09F3  01F2               	clrf	_eusart1TxTail	;volatile
 16199                           
 16200                           ;mcc_generated_files/eusart1.c: 208:         eusart1TxBufferRemaining++;
 16201  09F4  3001               	movlw	1
 16202  09F5  00F6               	movwf	??_EUSART1_Transmit_ISR
 16203  09F6  0876               	movf	??_EUSART1_Transmit_ISR,w
 16204  09F7  0141               	movlb	1	; select bank1
 16205  09F8  07ED               	addwf	_eusart1TxBufferRemaining^(0+128),f	;volatile
 16206                           
 16207                           ;mcc_generated_files/eusart1.c: 209:     }
 16208  09F9  0008               	return
 16209  09FA                     i1l711:	
 16210                           ;mcc_generated_files/eusart1.c: 210:     else
 16211                           
 16212                           
 16213                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         P
      +                          IE3bits.TX1IE = 0;
 16214  09FA  014E               	movlb	14	; select bank14
 16215  09FB  1219               	bcf	25,4	;volatile
 16216  09FC  0008               	return
 16217  09FD                     __end_of_EUSART1_Transmit_ISR:
 16218                           
 16219                           	psect	text78
 16220  0BE7                     __ptext78:	
 16221 ;; *************** function _EUSART1_Receive_ISR *****************
 16222 ;; Defined at:
 16223 ;;		line 216 in file "mcc_generated_files/eusart1.c"
 16224 ;; Parameters:    Size  Location     Type
 16225 ;;		None
 16226 ;; Auto vars:     Size  Location     Type
 16227 ;;		None
 16228 ;; Return value:  Size  Location     Type
 16229 ;;                  1    wreg      void 
 16230 ;; Registers used:
 16231 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16232 ;; Tracked objects:
 16233 ;;		On entry : 3F/2
 16234 ;;		On exit  : 0/0
 16235 ;;		Unchanged: 0/0
 16236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16240 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16241 ;;Total ram usage:        0 bytes
 16242 ;; Hardware stack levels used: 1
 16243 ;; Hardware stack levels required when called: 2
 16244 ;; This function calls:
 16245 ;;		Absolute function
 16246 ;;		_EUSART1_DefaultErrorHandler
 16247 ;;		_EUSART1_DefaultFramingErrorHandler
 16248 ;;		_EUSART1_DefaultOverrunErrorHandler
 16249 ;;		_EUSART1_RxDataHandler
 16250 ;; This function is called by:
 16251 ;;		_EUSART1_Initialize
 16252 ;;		_INTERRUPT_InterruptManager
 16253 ;; This function uses a non-reentrant model
 16254 ;;
 16255                           
 16256                           
 16257                           ;psect for function _EUSART1_Receive_ISR
 16258  0BE7                     _EUSART1_Receive_ISR:
 16259                           
 16260                           ;mcc_generated_files/eusart1.c: 219:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 16261                           
 16262                           ;incstack = 0
 16263                           ; Regs used in _EUSART1_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 16264  0BE7  0871               	movf	_eusart1RxHead,w	;volatile
 16265  0BE8  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 16266  0BE9  0086               	movwf	6
 16267  0BEA  3001               	movlw	1	; select bank2/3
 16268  0BEB  0087               	movwf	7
 16269  0BEC  0181               	clrf	1
 16270                           
 16271                           ;mcc_generated_files/eusart1.c: 221:     if(RC1STAbits.FERR){
 16272  0BED  1D1D               	btfss	29,2	;volatile
 16273  0BEE  2BFA               	goto	i1l4148
 16274                           
 16275                           ;mcc_generated_files/eusart1.c: 222:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 16276  0BEF  0871               	movf	_eusart1RxHead,w	;volatile
 16277  0BF0  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 16278  0BF1  0086               	movwf	6
 16279  0BF2  3001               	movlw	1	; select bank2/3
 16280  0BF3  0087               	movwf	7
 16281  0BF4  1481               	bsf	1,1
 16282                           
 16283                           ;mcc_generated_files/eusart1.c: 223:         EUSART1_FramingErrorHandler();
 16284  0BF5  0865               	movf	(_EUSART1_FramingErrorHandler+1)^(0+256),w
 16285  0BF6  008A               	movwf	10
 16286  0BF7  0864               	movf	_EUSART1_FramingErrorHandler^(0+256),w
 16287  0BF8  000A               	callw
 16288  0BF9  318B               	pagesel	$
 16289  0BFA                     i1l4148:
 16290                           
 16291                           ;mcc_generated_files/eusart1.c: 226:     if(RC1STAbits.OERR){
 16292  0BFA  0142               	movlb	2	; select bank2
 16293  0BFB  1C9D               	btfss	29,1	;volatile
 16294  0BFC  2C08               	goto	i1l4154
 16295                           
 16296                           ;mcc_generated_files/eusart1.c: 227:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 16297  0BFD  0871               	movf	_eusart1RxHead,w	;volatile
 16298  0BFE  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 16299  0BFF  0086               	movwf	6
 16300  0C00  3001               	movlw	1	; select bank2/3
 16301  0C01  0087               	movwf	7
 16302  0C02  1501               	bsf	1,2
 16303                           
 16304                           ;mcc_generated_files/eusart1.c: 228:         EUSART1_OverrunErrorHandler();
 16305  0C03  0863               	movf	(_EUSART1_OverrunErrorHandler+1)^(0+256),w
 16306  0C04  008A               	movwf	10
 16307  0C05  0862               	movf	_EUSART1_OverrunErrorHandler^(0+256),w
 16308  0C06  000A               	callw
 16309  0C07  318B               	pagesel	$
 16310  0C08                     i1l4154:
 16311                           
 16312                           ;mcc_generated_files/eusart1.c: 231:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 16313  0C08  0871               	movf	_eusart1RxHead,w	;volatile
 16314  0C09  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 16315  0C0A  0086               	movwf	6
 16316  0C0B  3001               	movlw	1	; select bank2/3
 16317  0C0C  0087               	movwf	7
 16318  0C0D  0801               	movf	1,w
 16319  0C0E  1903               	btfsc	3,2
 16320  0C0F  2C17               	goto	i1l4158
 16321                           
 16322                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_ErrorHandler();
 16323  0C10  0142               	movlb	2	; select bank2
 16324  0C11  0861               	movf	(_EUSART1_ErrorHandler+1)^(0+256),w
 16325  0C12  008A               	movwf	10
 16326  0C13  0860               	movf	_EUSART1_ErrorHandler^(0+256),w
 16327  0C14  000A               	callw
 16328  0C15  318B               	pagesel	$
 16329                           
 16330                           ;mcc_generated_files/eusart1.c: 233:     } else {
 16331  0C16  0008               	return
 16332  0C17                     i1l4158:
 16333                           
 16334                           ;mcc_generated_files/eusart1.c: 234:         EUSART1_RxDataHandler();
 16335  0C17  3189  217A         	fcall	_EUSART1_RxDataHandler
 16336  0C19  0008               	return
 16337  0C1A                     __end_of_EUSART1_Receive_ISR:
 16338                           
 16339                           	psect	text79
 16340  17CD                     __ptext79:	
 16341 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 16342 ;; Defined at:
 16343 ;;		line 252 in file "mcc_generated_files/eusart1.c"
 16344 ;; Parameters:    Size  Location     Type
 16345 ;;		None
 16346 ;; Auto vars:     Size  Location     Type
 16347 ;;		None
 16348 ;; Return value:  Size  Location     Type
 16349 ;;                  1    wreg      void 
 16350 ;; Registers used:
 16351 ;;		None
 16352 ;; Tracked objects:
 16353 ;;		On entry : 3F/2
 16354 ;;		On exit  : 3F/2
 16355 ;;		Unchanged: 0/0
 16356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16360 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16361 ;;Total ram usage:        0 bytes
 16362 ;; Hardware stack levels used: 1
 16363 ;; This function calls:
 16364 ;;		Nothing
 16365 ;; This function is called by:
 16366 ;;		_EUSART1_Initialize
 16367 ;;		_EUSART1_Receive_ISR
 16368 ;; This function uses a non-reentrant model
 16369 ;;
 16370                           
 16371                           
 16372                           ;psect for function _EUSART1_DefaultOverrunErrorHandler
 16373  17CD                     _EUSART1_DefaultOverrunErrorHandler:
 16374                           
 16375                           ;mcc_generated_files/eusart1.c: 255:     RC1STAbits.CREN = 0;
 16376                           
 16377                           ;incstack = 0
 16378                           ; Regs used in _EUSART1_DefaultOverrunErrorHandler: []
 16379  17CD  121D               	bcf	29,4	;volatile
 16380                           
 16381                           ;mcc_generated_files/eusart1.c: 256:     RC1STAbits.CREN = 1;
 16382  17CE  161D               	bsf	29,4	;volatile
 16383  17CF  0008               	return
 16384  17D0                     __end_of_EUSART1_DefaultOverrunErrorHandler:
 16385                           
 16386                           	psect	text80
 16387  0800                     __ptext80:	
 16388 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 16389 ;; Defined at:
 16390 ;;		line 250 in file "mcc_generated_files/eusart1.c"
 16391 ;; Parameters:    Size  Location     Type
 16392 ;;		None
 16393 ;; Auto vars:     Size  Location     Type
 16394 ;;		None
 16395 ;; Return value:  Size  Location     Type
 16396 ;;                  1    wreg      void 
 16397 ;; Registers used:
 16398 ;;		None
 16399 ;; Tracked objects:
 16400 ;;		On entry : 3F/2
 16401 ;;		On exit  : 3F/2
 16402 ;;		Unchanged: 3F/0
 16403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16407 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16408 ;;Total ram usage:        0 bytes
 16409 ;; Hardware stack levels used: 1
 16410 ;; This function calls:
 16411 ;;		Nothing
 16412 ;; This function is called by:
 16413 ;;		_EUSART1_Initialize
 16414 ;;		_EUSART1_Receive_ISR
 16415 ;; This function uses a non-reentrant model
 16416 ;;
 16417                           
 16418                           
 16419                           ;psect for function _EUSART1_DefaultFramingErrorHandler
 16420  0800                     _EUSART1_DefaultFramingErrorHandler:
 16421                           
 16422                           ;incstack = 0
 16423                           ; Regs used in _EUSART1_DefaultFramingErrorHandler: []
 16424  0800  0008               	return
 16425  0801                     __end_of_EUSART1_DefaultFramingErrorHandler:
 16426                           
 16427                           	psect	text81
 16428  17CA                     __ptext81:	
 16429 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 16430 ;; Defined at:
 16431 ;;		line 260 in file "mcc_generated_files/eusart1.c"
 16432 ;; Parameters:    Size  Location     Type
 16433 ;;		None
 16434 ;; Auto vars:     Size  Location     Type
 16435 ;;		None
 16436 ;; Return value:  Size  Location     Type
 16437 ;;                  1    wreg      void 
 16438 ;; Registers used:
 16439 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16440 ;; Tracked objects:
 16441 ;;		On entry : 3F/2
 16442 ;;		On exit  : 3F/0
 16443 ;;		Unchanged: 0/0
 16444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16448 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16449 ;;Total ram usage:        0 bytes
 16450 ;; Hardware stack levels used: 1
 16451 ;; Hardware stack levels required when called: 1
 16452 ;; This function calls:
 16453 ;;		_EUSART1_RxDataHandler
 16454 ;; This function is called by:
 16455 ;;		_EUSART1_Initialize
 16456 ;;		_EUSART1_Receive_ISR
 16457 ;; This function uses a non-reentrant model
 16458 ;;
 16459                           
 16460                           
 16461                           ;psect for function _EUSART1_DefaultErrorHandler
 16462  17CA                     _EUSART1_DefaultErrorHandler:
 16463                           
 16464                           ;mcc_generated_files/eusart1.c: 261:     EUSART1_RxDataHandler();
 16465                           
 16466                           ;incstack = 0
 16467                           ; Regs used in _EUSART1_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 16468  17CA  3189  217A         	fcall	_EUSART1_RxDataHandler
 16469  17CC  0008               	return
 16470  17CD                     __end_of_EUSART1_DefaultErrorHandler:
 16471                           
 16472                           	psect	text82
 16473  097A                     __ptext82:	
 16474 ;; *************** function _EUSART1_RxDataHandler *****************
 16475 ;; Defined at:
 16476 ;;		line 240 in file "mcc_generated_files/eusart1.c"
 16477 ;; Parameters:    Size  Location     Type
 16478 ;;		None
 16479 ;; Auto vars:     Size  Location     Type
 16480 ;;		None
 16481 ;; Return value:  Size  Location     Type
 16482 ;;                  1    wreg      void 
 16483 ;; Registers used:
 16484 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 16485 ;; Tracked objects:
 16486 ;;		On entry : 0/2
 16487 ;;		On exit  : 3F/0
 16488 ;;		Unchanged: 0/0
 16489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16492 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16493 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16494 ;;Total ram usage:        1 bytes
 16495 ;; Hardware stack levels used: 1
 16496 ;; This function calls:
 16497 ;;		Nothing
 16498 ;; This function is called by:
 16499 ;;		_EUSART1_Receive_ISR
 16500 ;;		_EUSART1_DefaultErrorHandler
 16501 ;; This function uses a non-reentrant model
 16502 ;;
 16503                           
 16504                           
 16505                           ;psect for function _EUSART1_RxDataHandler
 16506  097A                     _EUSART1_RxDataHandler:
 16507                           
 16508                           ;mcc_generated_files/eusart1.c: 242:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 16509                           
 16510                           ;incstack = 0
 16511                           ; Regs used in _EUSART1_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 16512  097A  0142               	movlb	2	; select bank2
 16513  097B  0819               	movf	25,w	;volatile
 16514  097C  00F6               	movwf	??_EUSART1_RxDataHandler
 16515  097D  0871               	movf	_eusart1RxHead,w
 16516  097E  3E28               	addlw	(low (_eusart1RxBuffer| (0+256)))& (0+255)
 16517  097F  0086               	movwf	6
 16518  0980  3001               	movlw	1	; select bank2/3
 16519  0981  0087               	movwf	7
 16520  0982  0876               	movf	??_EUSART1_RxDataHandler,w
 16521  0983  0081               	movwf	1
 16522  0984  3001               	movlw	1
 16523  0985  00F6               	movwf	??_EUSART1_RxDataHandler
 16524  0986  0876               	movf	??_EUSART1_RxDataHandler,w
 16525  0987  07F1               	addwf	_eusart1RxHead,f	;volatile
 16526                           
 16527                           ;mcc_generated_files/eusart1.c: 243:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 16528  0988  3008               	movlw	8
 16529  0989  0271               	subwf	_eusart1RxHead,w
 16530  098A  1803               	btfsc	3,0
 16531                           
 16532                           ;mcc_generated_files/eusart1.c: 244:     {;mcc_generated_files/eusart1.c: 245:         e
      +                          usart1RxHead = 0;
 16533  098B  01F1               	clrf	_eusart1RxHead	;volatile
 16534                           
 16535                           ;mcc_generated_files/eusart1.c: 247:     eusart1RxCount++;
 16536  098C  3001               	movlw	1
 16537  098D  00F6               	movwf	??_EUSART1_RxDataHandler
 16538  098E  0876               	movf	??_EUSART1_RxDataHandler,w
 16539  098F  0140               	movlb	0	; select bank0
 16540  0990  07A3               	addwf	_eusart1RxCount,f	;volatile
 16541  0991  0008               	return
 16542  0992                     __end_of_EUSART1_RxDataHandler:
 16543                           
 16544                           	psect	text83
 16545  17C4                     __ptext83:	
 16546 ;; *************** function _CLC2_ISR *****************
 16547 ;; Defined at:
 16548 ;;		line 89 in file "mcc_generated_files/clc2.c"
 16549 ;; Parameters:    Size  Location     Type
 16550 ;;		None
 16551 ;; Auto vars:     Size  Location     Type
 16552 ;;		None
 16553 ;; Return value:  Size  Location     Type
 16554 ;;                  1    wreg      void 
 16555 ;; Registers used:
 16556 ;;		None
 16557 ;; Tracked objects:
 16558 ;;		On entry : 3F/E
 16559 ;;		On exit  : 3F/E
 16560 ;;		Unchanged: 0/0
 16561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16565 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16566 ;;Total ram usage:        0 bytes
 16567 ;; Hardware stack levels used: 1
 16568 ;; This function calls:
 16569 ;;		Nothing
 16570 ;; This function is called by:
 16571 ;;		_INTERRUPT_InterruptManager
 16572 ;; This function uses a non-reentrant model
 16573 ;;
 16574                           
 16575                           
 16576                           ;psect for function _CLC2_ISR
 16577  17C4                     _CLC2_ISR:
 16578                           
 16579                           ;mcc_generated_files/clc2.c: 92:     PIR5bits.CLC2IF = 0;
 16580                           
 16581                           ;incstack = 0
 16582                           ; Regs used in _CLC2_ISR: []
 16583  17C4  1291               	bcf	17,5	;volatile
 16584  17C5  0008               	return
 16585  17C6                     __end_of_CLC2_ISR:
 16586  007E                     btemp	set	126	;btemp
 16587  007E                     int$flags	set	126
 16588  007E                     wtemp0	set	126
 16589                           
 16590                           	psect	config
 16591                           
 16592                           ;Config register CONFIG1 @ 0x8007
 16593                           ;	External Oscillator mode selection bits
 16594                           ;	FEXTOSC = OFF, Oscillator not enabled
 16595                           ;	Power-up default value for COSC bits
 16596                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
 16597                           ;	Clock Out Enable bit
 16598                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 16599                           ;	Clock Switch Enable bit
 16600                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 16601                           ;	Fail-Safe Clock Monitor Enable bit
 16602                           ;	FCMEN = ON, FSCM timer enabled
 16603  8007                     	org	32775
 16604  8007  3FEC               	dw	16364
 16605                           
 16606                           ;Config register CONFIG2 @ 0x8008
 16607                           ;	Master Clear Enable bit
 16608                           ;	MCLRE = ON, MCLR pin is Master Clear function
 16609                           ;	Power-up Timer Enable bit
 16610                           ;	PWRTE = OFF, PWRT disabled
 16611                           ;	Low-Power BOR enable bit
 16612                           ;	LPBOREN = OFF, ULPBOR disabled
 16613                           ;	Brown-out reset enable bits
 16614                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 16615                           ;	Brown-out Reset Voltage Selection
 16616                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
 16617                           ;	Zero-cross detect disable
 16618                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
 16619                           ;	Peripheral Pin Select one-way control
 16620                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 16621                           ;	Stack Overflow/Underflow Reset Enable bit
 16622                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 16623  8008                     	org	32776
 16624  8008  3FFF               	dw	16383
 16625                           
 16626                           ;Config register CONFIG3 @ 0x8009
 16627                           ;	WDT Period Select bits
 16628                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 16629                           ;	WDT operating mode
 16630                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
 16631                           ;	WDT Window Select bits
 16632                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 16633                           ;	WDT input clock selector
 16634                           ;	WDTCCS = SC, Software Control
 16635  8009                     	org	32777
 16636  8009  3F9F               	dw	16287
 16637                           
 16638                           ;Config register CONFIG4 @ 0x800A
 16639                           ;	Boot Block Size Selection bits
 16640                           ;	BBSIZE = BB512, 512 words boot block size
 16641                           ;	Boot Block Enable bit
 16642                           ;	BBEN = OFF, Boot Block disabled
 16643                           ;	SAF Enable bit
 16644                           ;	SAFEN = OFF, SAF disabled
 16645                           ;	Application Block Write Protection bit
 16646                           ;	WRTAPP = OFF, Application Block not write protected
 16647                           ;	Boot Block Write Protection bit
 16648                           ;	WRTB = OFF, Boot Block not write protected
 16649                           ;	Configuration Register Write Protection bit
 16650                           ;	WRTC = OFF, Configuration Register not write protected
 16651                           ;	Storage Area Flash Write Protection bit
 16652                           ;	WRTSAF = OFF, SAF not write protected
 16653                           ;	Low Voltage Programming Enable bit
 16654                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 16655  800A                     	org	32778
 16656  800A  3FFF               	dw	16383
 16657                           
 16658                           ;Config register CONFIG5 @ 0x800B
 16659                           ;	UserNVM Program memory code protection bit
 16660                           ;	CP = OFF, UserNVM code protection disabled
 16661  800B                     	org	32779
 16662  800B  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    472
    Data        18
    BSS         146
    Persistent  54
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     27      80
    BANK1            80      0      79
    BANK2            80     28      76
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    memset@dest	PTR void  size(1) Largest target is 13
		 -> LIN_packet(BANK1[13]), 

    memset@s	PTR unsigned char  size(1) Largest target is 13
		 -> LIN_packet(BANK1[13]), 

    memcpy@d1	PTR void  size(1) Largest target is 13
		 -> LIN_packet(BANK1[13]), processLIN@tempRxData(BANK0[8]), 

    memcpy@d	PTR unsigned char  size(1) Largest target is 13
		 -> LIN_packet(BANK1[13]), processLIN@tempRxData(BANK0[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 13
		 -> LIN_packet.data(BANK1[8]), LIN_packet(BANK1[13]), LIN_DIAGNOSTIC_Data(BANK2[8]), LIN_TEMPERATURE_RISE_SA_Data(BANK1[2]), 
		 -> LIN_TEMPERATURE_RISE_JS_Data(BANK1[2]), LIN_JUNCTION_TEMPERATURE_Data(BANK1[2]), LIN_HEATSINK_TEMPERATURE_Data(BANK1[2]), LIN_AMBIENT_TEMPERATURE_Data(BANK1[2]), 
		 -> LIN_CURRENT_SENSE_OFFSET_Data(BANK1[2]), LIN_ADC_CURRENT_SENSE_CORRECTED_Data(BANK1[2]), LIN_ADC_TEMP_SENSE_Data(BANK1[2]), LIN_ADC_CURRENT_SENSE_UNCORRECTED_Data(BANK1[2]), 
		 -> LIN_ADC_VCC_SENSE_Data(BANK1[2]), LIN_OVER_TEMP_FAULT_Data(BANK0[1]), LIN_UVLO_FAULT_Data(BANK0[1]), LIN_OVER_CURRENT_FAULT_Data(BANK0[1]), 
		 -> LIN_GET_TRIGGER_TYPE_Data(BANK0[1]), LIN_OUTPUT_STATE_Data(BANK0[1]), LIN_TCC_SAMPLE_TIME_Data(BANK1[2]), LIN_REDUCED_DRIVE_TIME_Data(BANK0[1]), 
		 -> LIN_B1_COEF_Data(BANK0[1]), LIN_DAC_I_HW_TRIP_Data(BANK0[1]), LIN_ISENSE_MAX_Data(BANK1[2]), LIN_CURRENT2COUNTS_SQUARED_Data(BANK1[2]), 
		 -> LIN_FACTOR_RDSON_RTHSA_Data(BANK1[2]), LIN_FACTOR_RDSON_RTHJS_Data(BANK1[2]), LIN_TJ_LIMIT_Data(BANK0[1]), LIN_ENTER_SLEEP_MODE_Data(BANK0[1]), 
		 -> LIN_TRIGGER_TYPE_Data(BANK0[1]), LIN_COMMAND_Data(BANK0[1]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 13
		 -> LIN_packet.data(BANK1[8]), LIN_packet(BANK1[13]), LIN_DIAGNOSTIC_Data(BANK2[8]), LIN_TEMPERATURE_RISE_SA_Data(BANK1[2]), 
		 -> LIN_TEMPERATURE_RISE_JS_Data(BANK1[2]), LIN_JUNCTION_TEMPERATURE_Data(BANK1[2]), LIN_HEATSINK_TEMPERATURE_Data(BANK1[2]), LIN_AMBIENT_TEMPERATURE_Data(BANK1[2]), 
		 -> LIN_CURRENT_SENSE_OFFSET_Data(BANK1[2]), LIN_ADC_CURRENT_SENSE_CORRECTED_Data(BANK1[2]), LIN_ADC_TEMP_SENSE_Data(BANK1[2]), LIN_ADC_CURRENT_SENSE_UNCORRECTED_Data(BANK1[2]), 
		 -> LIN_ADC_VCC_SENSE_Data(BANK1[2]), LIN_OVER_TEMP_FAULT_Data(BANK0[1]), LIN_UVLO_FAULT_Data(BANK0[1]), LIN_OVER_CURRENT_FAULT_Data(BANK0[1]), 
		 -> LIN_GET_TRIGGER_TYPE_Data(BANK0[1]), LIN_OUTPUT_STATE_Data(BANK0[1]), LIN_TCC_SAMPLE_TIME_Data(BANK1[2]), LIN_REDUCED_DRIVE_TIME_Data(BANK0[1]), 
		 -> LIN_B1_COEF_Data(BANK0[1]), LIN_DAC_I_HW_TRIP_Data(BANK0[1]), LIN_ISENSE_MAX_Data(BANK1[2]), LIN_CURRENT2COUNTS_SQUARED_Data(BANK1[2]), 
		 -> LIN_FACTOR_RDSON_RTHSA_Data(BANK1[2]), LIN_FACTOR_RDSON_RTHJS_Data(BANK1[2]), LIN_TJ_LIMIT_Data(BANK0[1]), LIN_ENTER_SLEEP_MODE_Data(BANK0[1]), 
		 -> LIN_TRIGGER_TYPE_Data(BANK0[1]), LIN_COMMAND_Data(BANK0[1]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), LIN_timerHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), LIN_timerHandler(), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 

    LIN_getChecksum@data	PTR unsigned char  size(1) Largest target is 13
		 -> LIN_packet(BANK1[13]), 

    LIN_getFromTable@rxCommand.data	PTR unsigned char  size(2) Largest target is 8
		 -> LIN_DIAGNOSTIC_Data(BANK2[8]), LIN_TEMPERATURE_RISE_SA_Data(BANK1[2]), LIN_TEMPERATURE_RISE_JS_Data(BANK1[2]), LIN_JUNCTION_TEMPERATURE_Data(BANK1[2]), 
		 -> LIN_HEATSINK_TEMPERATURE_Data(BANK1[2]), LIN_AMBIENT_TEMPERATURE_Data(BANK1[2]), LIN_CURRENT_SENSE_OFFSET_Data(BANK1[2]), LIN_ADC_CURRENT_SENSE_CORRECTED_Data(BANK1[2]), 
		 -> LIN_ADC_TEMP_SENSE_Data(BANK1[2]), LIN_ADC_CURRENT_SENSE_UNCORRECTED_Data(BANK1[2]), LIN_ADC_VCC_SENSE_Data(BANK1[2]), LIN_OVER_TEMP_FAULT_Data(BANK0[1]), 
		 -> LIN_UVLO_FAULT_Data(BANK0[1]), LIN_OVER_CURRENT_FAULT_Data(BANK0[1]), LIN_GET_TRIGGER_TYPE_Data(BANK0[1]), LIN_OUTPUT_STATE_Data(BANK0[1]), 
		 -> LIN_TCC_SAMPLE_TIME_Data(BANK1[2]), LIN_REDUCED_DRIVE_TIME_Data(BANK0[1]), LIN_B1_COEF_Data(BANK0[1]), LIN_DAC_I_HW_TRIP_Data(BANK0[1]), 
		 -> LIN_ISENSE_MAX_Data(BANK1[2]), LIN_CURRENT2COUNTS_SQUARED_Data(BANK1[2]), LIN_FACTOR_RDSON_RTHSA_Data(BANK1[2]), LIN_FACTOR_RDSON_RTHJS_Data(BANK1[2]), 
		 -> LIN_TJ_LIMIT_Data(BANK0[1]), LIN_ENTER_SLEEP_MODE_Data(BANK0[1]), LIN_TRIGGER_TYPE_Data(BANK0[1]), LIN_COMMAND_Data(BANK0[1]), 

    LIN_getFromTable@rxCommand	PTR const struct . size(2) Largest target is 140
		 -> NULL(NULL[0]), scheduleTable(CODE[140]), 

    LIN_getPacket@data	PTR unsigned char  size(1) Largest target is 8
		 -> processLIN@tempRxData(BANK0[8]), 

    LIN_sendPacket@data	PTR unsigned char  size(1) Largest target is 13
		 -> LIN_packet(BANK1[13]), 

    sp__memset	PTR void  size(1) Largest target is 13
		 -> LIN_packet(BANK1[13]), 

    sp__memcpy	PTR void  size(1) Largest target is 13
		 -> LIN_packet(BANK1[13]), processLIN@tempRxData(BANK0[8]), 

    LIN_queuePacket@tempSchedule.data	PTR unsigned char  size(2) Largest target is 8
		 -> LIN_DIAGNOSTIC_Data(BANK2[8]), LIN_TEMPERATURE_RISE_SA_Data(BANK1[2]), LIN_TEMPERATURE_RISE_JS_Data(BANK1[2]), LIN_JUNCTION_TEMPERATURE_Data(BANK1[2]), 
		 -> LIN_HEATSINK_TEMPERATURE_Data(BANK1[2]), LIN_AMBIENT_TEMPERATURE_Data(BANK1[2]), LIN_CURRENT_SENSE_OFFSET_Data(BANK1[2]), LIN_ADC_CURRENT_SENSE_CORRECTED_Data(BANK1[2]), 
		 -> LIN_ADC_TEMP_SENSE_Data(BANK1[2]), LIN_ADC_CURRENT_SENSE_UNCORRECTED_Data(BANK1[2]), LIN_ADC_VCC_SENSE_Data(BANK1[2]), LIN_OVER_TEMP_FAULT_Data(BANK0[1]), 
		 -> LIN_UVLO_FAULT_Data(BANK0[1]), LIN_OVER_CURRENT_FAULT_Data(BANK0[1]), LIN_GET_TRIGGER_TYPE_Data(BANK0[1]), LIN_OUTPUT_STATE_Data(BANK0[1]), 
		 -> LIN_TCC_SAMPLE_TIME_Data(BANK1[2]), LIN_REDUCED_DRIVE_TIME_Data(BANK0[1]), LIN_B1_COEF_Data(BANK0[1]), LIN_DAC_I_HW_TRIP_Data(BANK0[1]), 
		 -> LIN_ISENSE_MAX_Data(BANK1[2]), LIN_CURRENT2COUNTS_SQUARED_Data(BANK1[2]), LIN_FACTOR_RDSON_RTHSA_Data(BANK1[2]), LIN_FACTOR_RDSON_RTHJS_Data(BANK1[2]), 
		 -> LIN_TJ_LIMIT_Data(BANK0[1]), LIN_ENTER_SLEEP_MODE_Data(BANK0[1]), LIN_TRIGGER_TYPE_Data(BANK0[1]), LIN_COMMAND_Data(BANK0[1]), 

    LIN_queuePacket@tempSchedule	PTR const struct . size(2) Largest target is 140
		 -> NULL(NULL[0]), scheduleTable(CODE[140]), 

    LIN_init@processData	PTR FTN()void  size(2) Largest target is 1
		 -> processLIN(), 

    LIN_processData	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), processLIN(), 

    LIN_rxCommand.data	PTR unsigned char  size(2) Largest target is 8
		 -> LIN_DIAGNOSTIC_Data(BANK2[8]), LIN_TEMPERATURE_RISE_SA_Data(BANK1[2]), LIN_TEMPERATURE_RISE_JS_Data(BANK1[2]), LIN_JUNCTION_TEMPERATURE_Data(BANK1[2]), 
		 -> LIN_HEATSINK_TEMPERATURE_Data(BANK1[2]), LIN_AMBIENT_TEMPERATURE_Data(BANK1[2]), LIN_CURRENT_SENSE_OFFSET_Data(BANK1[2]), LIN_ADC_CURRENT_SENSE_CORRECTED_Data(BANK1[2]), 
		 -> LIN_ADC_TEMP_SENSE_Data(BANK1[2]), LIN_ADC_CURRENT_SENSE_UNCORRECTED_Data(BANK1[2]), LIN_ADC_VCC_SENSE_Data(BANK1[2]), LIN_OVER_TEMP_FAULT_Data(BANK0[1]), 
		 -> LIN_UVLO_FAULT_Data(BANK0[1]), LIN_OVER_CURRENT_FAULT_Data(BANK0[1]), LIN_GET_TRIGGER_TYPE_Data(BANK0[1]), LIN_OUTPUT_STATE_Data(BANK0[1]), 
		 -> LIN_TCC_SAMPLE_TIME_Data(BANK1[2]), LIN_REDUCED_DRIVE_TIME_Data(BANK0[1]), LIN_B1_COEF_Data(BANK0[1]), LIN_DAC_I_HW_TRIP_Data(BANK0[1]), 
		 -> LIN_ISENSE_MAX_Data(BANK1[2]), LIN_CURRENT2COUNTS_SQUARED_Data(BANK1[2]), LIN_FACTOR_RDSON_RTHSA_Data(BANK1[2]), LIN_FACTOR_RDSON_RTHJS_Data(BANK1[2]), 
		 -> LIN_TJ_LIMIT_Data(BANK0[1]), LIN_ENTER_SLEEP_MODE_Data(BANK0[1]), LIN_TRIGGER_TYPE_Data(BANK0[1]), LIN_COMMAND_Data(BANK0[1]), 

    LIN_init@command	const PTR const struct . size(2) Largest target is 140
		 -> scheduleTable(CODE[140]), 

    LIN_rxCommand	PTR const struct . size(2) Largest target is 140
		 -> NULL(NULL[0]), scheduleTable(CODE[140]), 

    S26$data	PTR unsigned char  size(2) Largest target is 8
		 -> LIN_DIAGNOSTIC_Data(BANK2[8]), LIN_TEMPERATURE_RISE_SA_Data(BANK1[2]), LIN_TEMPERATURE_RISE_JS_Data(BANK1[2]), LIN_JUNCTION_TEMPERATURE_Data(BANK1[2]), 
		 -> LIN_HEATSINK_TEMPERATURE_Data(BANK1[2]), LIN_AMBIENT_TEMPERATURE_Data(BANK1[2]), LIN_CURRENT_SENSE_OFFSET_Data(BANK1[2]), LIN_ADC_CURRENT_SENSE_CORRECTED_Data(BANK1[2]), 
		 -> LIN_ADC_TEMP_SENSE_Data(BANK1[2]), LIN_ADC_CURRENT_SENSE_UNCORRECTED_Data(BANK1[2]), LIN_ADC_VCC_SENSE_Data(BANK1[2]), LIN_OVER_TEMP_FAULT_Data(BANK0[1]), 
		 -> LIN_UVLO_FAULT_Data(BANK0[1]), LIN_OVER_CURRENT_FAULT_Data(BANK0[1]), LIN_GET_TRIGGER_TYPE_Data(BANK0[1]), LIN_OUTPUT_STATE_Data(BANK0[1]), 
		 -> LIN_TCC_SAMPLE_TIME_Data(BANK1[2]), LIN_REDUCED_DRIVE_TIME_Data(BANK0[1]), LIN_B1_COEF_Data(BANK0[1]), LIN_DAC_I_HW_TRIP_Data(BANK0[1]), 
		 -> LIN_ISENSE_MAX_Data(BANK1[2]), LIN_CURRENT2COUNTS_SQUARED_Data(BANK1[2]), LIN_FACTOR_RDSON_RTHSA_Data(BANK1[2]), LIN_FACTOR_RDSON_RTHJS_Data(BANK1[2]), 
		 -> LIN_TJ_LIMIT_Data(BANK0[1]), LIN_ENTER_SLEEP_MODE_Data(BANK0[1]), LIN_TRIGGER_TYPE_Data(BANK0[1]), LIN_COMMAND_Data(BANK0[1]), 

    scheduleTable.data	PTR unsigned char  size(2) Largest target is 8
		 -> LIN_DIAGNOSTIC_Data(BANK2[8]), LIN_TEMPERATURE_RISE_SA_Data(BANK1[2]), LIN_TEMPERATURE_RISE_JS_Data(BANK1[2]), LIN_JUNCTION_TEMPERATURE_Data(BANK1[2]), 
		 -> LIN_HEATSINK_TEMPERATURE_Data(BANK1[2]), LIN_AMBIENT_TEMPERATURE_Data(BANK1[2]), LIN_CURRENT_SENSE_OFFSET_Data(BANK1[2]), LIN_ADC_CURRENT_SENSE_CORRECTED_Data(BANK1[2]), 
		 -> LIN_ADC_TEMP_SENSE_Data(BANK1[2]), LIN_ADC_CURRENT_SENSE_UNCORRECTED_Data(BANK1[2]), LIN_ADC_VCC_SENSE_Data(BANK1[2]), LIN_OVER_TEMP_FAULT_Data(BANK0[1]), 
		 -> LIN_UVLO_FAULT_Data(BANK0[1]), LIN_OVER_CURRENT_FAULT_Data(BANK0[1]), LIN_GET_TRIGGER_TYPE_Data(BANK0[1]), LIN_OUTPUT_STATE_Data(BANK0[1]), 
		 -> LIN_TCC_SAMPLE_TIME_Data(BANK1[2]), LIN_REDUCED_DRIVE_TIME_Data(BANK0[1]), LIN_B1_COEF_Data(BANK0[1]), LIN_DAC_I_HW_TRIP_Data(BANK0[1]), 
		 -> LIN_ISENSE_MAX_Data(BANK1[2]), LIN_CURRENT2COUNTS_SQUARED_Data(BANK1[2]), LIN_FACTOR_RDSON_RTHSA_Data(BANK1[2]), LIN_FACTOR_RDSON_RTHJS_Data(BANK1[2]), 
		 -> LIN_TJ_LIMIT_Data(BANK0[1]), LIN_ENTER_SLEEP_MODE_Data(BANK0[1]), LIN_TRIGGER_TYPE_Data(BANK0[1]), LIN_COMMAND_Data(BANK0[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR0_ISR->_ProcessAnalogInputs
    _ProcessAnalogInputs->i1_CmdOutput
    i1_CmdOutput->i1_TMR1_WriteTimer
    _EUSART1_Receive_ISR->_EUSART1_RxDataHandler
    _EUSART1_DefaultErrorHandler->_EUSART1_RxDataHandler

Critical Paths under _main in BANK0

    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _LIN_Slave_Initialize->_LIN_init
    _LIN_setTimerHandler->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _LIN_handler->_processLIN
    _processLIN->_LIN_getPacket
    _LIN_getPacket->_memcpy
    _LIN_getPacket->_memset
    _EFuseInit->_CmdOutput
    _LIN_startTimer->_TMR0_WriteTimer
    _LIN_queuePacket->_LIN_sendPacket
    _LIN_sendPacket->_LIN_getChecksum
    _LIN_checkPID->_LIN_getFromTable
    _LIN_breakCheck->_EUSART1_Read
    _TCC_Curve->___lldiv
    ___lldiv->___lmul
    _CmdOutput->_TMR1_WriteTimer

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_EFuse
    _EFuse->_TCC_Curve

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   13464
                                             26 BANK2      2     2      0
                          _CmdOutput
                              _EFuse
                          _EFuseInit
                        _LIN_handler
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1300
                     _ADC_Initialize
                    _CLC1_Initialize
                    _CLC2_Initialize
                    _CLC3_Initialize
                    _CLC4_Initialize
                    _CMP2_Initialize
                    _DAC1_Initialize
                 _EUSART1_Initialize
                     _FVR_Initialize
               _LIN_Slave_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LIN_Slave_Initialize                                 0     0      0     484
                           _LIN_init
 ---------------------------------------------------------------------------------
 (3) _LIN_init                                             6     2      4     484
                                              2 BANK0      6     2      4
                       _LIN_enableRx
                _LIN_setTimerHandler
                      _LIN_stopTimer
 ---------------------------------------------------------------------------------
 (4) _LIN_setTimerHandler                                  0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   1     1      0     605
                                              2 BANK0      1     1      0
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _DAC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CMP2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLC4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLC3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLC2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LIN_handler                                          3     3      0   10504
                                              0 BANK2      3     3      0
                   Absolute function *
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                     _LIN_breakCheck
                       _LIN_checkPID
                      _LIN_disableRx
                       _LIN_enableRx
                    _LIN_getChecksum
                   _LIN_getFromTable
                    _LIN_queuePacket
                     _LIN_startTimer
                      _LIN_stopTimer
                             _memset
                         _processLIN *
 ---------------------------------------------------------------------------------
 (2) _processLIN                                          14    14      0    3414
                                             13 BANK0     14    14      0
                          _CmdOutput
                          _EFuseInit
                      _LIN_getPacket
 ---------------------------------------------------------------------------------
 (3) _LIN_getPacket                                        3     3      0    2190
                                             10 BANK0      3     3      0
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                              10     6      4    1449
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (3) _EFuseInit                                            0     0      0     321
                          _CmdOutput
                        _TMR0_Reload
 ---------------------------------------------------------------------------------
 (4) _TMR0_Reload                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _LIN_stopTimer                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LIN_startTimer                                       2     2      0     186
                                              2 BANK0      2     2      0
                    _TMR0_WriteTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_WriteTimer                                      2     0      2     155
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _LIN_queuePacket                                      7     7      0    2924
                                             14 BANK0      7     7      0
                    _LIN_getChecksum
                     _LIN_sendPacket
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     6      4     640
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (3) _LIN_sendPacket                                       6     4      2    1274
                                              8 BANK0      6     4      2
                      _EUSART1_Write
                    _LIN_getChecksum
 ---------------------------------------------------------------------------------
 (4) _LIN_getChecksum                                      8     6      2     809
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (4) _EUSART1_Write                                        2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _LIN_enableRx                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LIN_disableRx                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LIN_checkPID                                         1     1      0    1115
                                              7 BANK0      1     1      0
                     _LIN_calcParity
                   _LIN_getFromTable
 ---------------------------------------------------------------------------------
 (2) _LIN_getFromTable                                     7     6      1     533
                                              0 BANK0      7     6      1
 ---------------------------------------------------------------------------------
 (3) _LIN_calcParity                                       3     3      0     489
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _LIN_breakCheck                                       0     0      0      37
                       _EUSART1_Read
            _EUSART1_get_last_status
 ---------------------------------------------------------------------------------
 (3) _EUSART1_get_last_status                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Read                                         2     2      0      37
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EFuse                                                2     2      0    1018
                                             24 BANK2      2     2      0
                          _CmdOutput
              _GetAmbientTemperature
                          _TCC_Curve
                    _Update_LIN_Data
 ---------------------------------------------------------------------------------
 (2) _Update_LIN_Data                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _TCC_Curve                                           24    24      0     484
                                              0 BANK2     24    24      0
                            ___lldiv
                             ___lmul
                             ___omul
 ---------------------------------------------------------------------------------
 (3) ___omul                                              25     9     16      52
                                              0 BANK0     25     9     16
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     340
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8      68
                                             12 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _GetAmbientTemperature                               11     9      2     213
                                              0 BANK0     11     9      2
 ---------------------------------------------------------------------------------
 (4) _CmdOutput                                            3     3      0     321
                                              2 BANK0      3     3      0
                    _TMR1_StartTimer
                     _TMR1_StopTimer
                    _TMR1_WriteTimer
                    _TMR2_Initialize
                         _TMR2_Start
                          _TMR2_Stop
 ---------------------------------------------------------------------------------
 (5) _TMR2_Stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR2_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR1_WriteTimer                                      2     0      2     290
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _TMR1_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           0     0      0     182
                   Absolute function *
                           _CLC2_ISR
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR0_ISR                                             0     0      0     182
                   Absolute function *
                   _LIN_timerHandler *
                _ProcessAnalogInputs
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _ProcessAnalogInputs                                  1     1      0     182
                                              5 COMMON     1     1      0
                  _ADC_GetConversion
                  _ADC_SelectChannel
                        i1_CmdOutput
 ---------------------------------------------------------------------------------
 (9) i1_CmdOutput                                          3     3      0     138
                                              2 COMMON     3     3      0
                  i1_TMR1_StartTimer
                   i1_TMR1_StopTimer
                  i1_TMR1_WriteTimer
                  i1_TMR2_Initialize
                       i1_TMR2_Start
                        i1_TMR2_Stop
 ---------------------------------------------------------------------------------
 (10) i1_TMR2_Stop                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (10) i1_TMR2_Start                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) i1_TMR2_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (10) i1_TMR1_WriteTimer                                   2     0      2     116
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (10) i1_TMR1_StopTimer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (10) i1_TMR1_StartTimer                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _ADC_SelectChannel                                    2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (9) _ADC_GetConversion                                    4     2      2      22
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (8) _LIN_timerHandler                                     1     1      0       0
                                              0 COMMON     1     1      0
                    i1_LIN_stopTimer
 ---------------------------------------------------------------------------------
 (9) i1_LIN_stopTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _EUSART1_Transmit_ISR                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _EUSART1_Receive_ISR                                  0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (8) _EUSART1_DefaultOverrunErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART1_DefaultFramingErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART1_DefaultErrorHandler                          0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (8) _EUSART1_RxDataHandler                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _CLC2_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CmdOutput
     _TMR1_StartTimer
     _TMR1_StopTimer
     _TMR1_WriteTimer
     _TMR2_Initialize
     _TMR2_Start
     _TMR2_Stop
   _EFuse
     _CmdOutput
     _GetAmbientTemperature
     _TCC_Curve
       ___lldiv
         ___lmul (ARG)
       ___lmul
       ___omul
     _Update_LIN_Data
   _EFuseInit
     _CmdOutput
     _TMR0_Reload
   _LIN_handler
     Absolute function(Fake) *
     _EUSART1_Read *
     _EUSART1_is_rx_ready *
     _LIN_breakCheck *
       _EUSART1_Read
       _EUSART1_get_last_status
     _LIN_checkPID *
       _LIN_calcParity
       _LIN_getFromTable
     _LIN_disableRx *
     _LIN_enableRx *
     _LIN_getChecksum *
     _LIN_getFromTable *
     _LIN_queuePacket *
       _LIN_getChecksum
       _LIN_sendPacket
         _EUSART1_Write
         _LIN_getChecksum
       _memcpy
     _LIN_startTimer *
       _TMR0_WriteTimer
     _LIN_stopTimer *
     _memset *
     _processLIN *
       _CmdOutput
       _EFuseInit
       _LIN_getPacket
         _memcpy
         _memset
   _SYSTEM_Initialize
     _ADC_Initialize
     _CLC1_Initialize
     _CLC2_Initialize
     _CLC3_Initialize
     _CLC4_Initialize
     _CMP2_Initialize
     _DAC1_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _FVR_Initialize
     _LIN_Slave_Initialize
       _LIN_init
         _LIN_enableRx
         _LIN_setTimerHandler
           _TMR0_SetInterruptHandler
         _LIN_stopTimer
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
     _TMR2_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _CLC2_ISR *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _TMR0_ISR *
     Absolute function(Fake) *
     _LIN_timerHandler *
       i1_LIN_stopTimer
     _ProcessAnalogInputs *
       _ADC_GetConversion
       _ADC_SelectChannel
       i1_CmdOutput
         i1_TMR1_StartTimer
         i1_TMR1_StopTimer
         i1_TMR1_WriteTimer
         i1_TMR2_Initialize
         i1_TMR2_Start
         i1_TMR2_Stop
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      F7       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     1B      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      4F       8       98.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50     1C      4C      10       95.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      F7      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed May 25 21:46:49 2022

                        __end_of_LIN_breakCheck 08F4                                  _adcTSense_prev 0020  
                         __end_of_LIN_getPacket 0A3D                           ??_LIN_setTimerHandler 004D  
                      _eusart1TxBufferRemaining 00ED                               ??_Update_LIN_Data 004B  
                         __end_of_LIN_disableRx 17F0                          __end_of_FVR_Initialize 17E6  
                               ?_LIN_calcParity 0076                                 _DAC1_Initialize 17FA  
                                           l310 0BB3                                             l159 05D7  
                                           l273 04DF                                             l705 0A6D  
                                _TCC_Curve$3311 014C                                  _TCC_Curve$3312 0154  
                                _Trise_filtered 00A8                                     _triggerType 002E  
                               _timer1ReloadVal 015C                        __end_of_LIN_getFromTable 0E69  
                       __size_of_PMD_Initialize 0008                                 _TMR2_Initialize 08C8  
                             ??_CLC2_Initialize 004B                                             wreg 0009  
                         __end_of_scheduleTable 108C                                  _Trise_raw_curr 00A4  
                                          l1464 0FFD                                            l1485 0DE4  
                                          l5030 0CE9                                            l1494 0CBB  
                                          l5102 0421                                            l5024 0CE3  
                                          l5032 0CC0                                            l5130 0498  
                                          l5106 042A                                            l5124 0487  
                                          l5116 045D                                            l5070 03BA  
                                          l5062 03AC                                            l5320 0C7B  
                                          l5400 0FBB                                            l4512 0A61  
                                          l5144 04B0                                            l5128 0492  
                                          l5330 0D04                                            l4442 0ADC  
                                          l5138 04A8                                            l4348 095A  
                                          l5340 0D32                                            l5332 0D12  
                                          l5316 0C69                                            l4508 07CF  
                                          l5076 03CD                                            l5148 04B6  
                                          l5406 0FD2                                            l4630 0E3B  
                                          l4622 0E30                                            l4526 0A83  
                                          l5086 03E7                                            l5078 03D4  
                                          l5430 0B22                                            l5344 0D3D  
                                          l5416 0FF9                                            l5408 0FD6  
                                          l4640 0E55                                            l4624 0E0E  
                                          l4456 0BAE                                            l4634 0E48  
                                          l4626 0E35                                            l4618 0E2E  
                                          l4458 0B91                                            l4730 04F1  
                                          l4652 0EE0                                            l4580 0A89  
                                          l4804 0EFB                                            l4740 0521  
                                          l5390 0F9F                                            l4654 0EEA  
                                          l4582 0A9D                                            l4806 0F12  
                                          l4742 0534                                            l4734 04F6  
                                          l4726 04E8                                            l4680 0B3B  
                                          l5376 0F82                                            l4840 096E  
                                          l4752 0561                                            l4744 0544  
                                          l4736 04FB                                            l4728 04EC  
                                          l4586 0AAC                                            l4834 08F2  
                                          l4754 0566                                            l4738 050E  
                                          l4676 0B31                                            l4844 0970  
                                          l4748 054B                                            l4758 0579  
                                          l5494 04BF                                            l5496 0581  
                                          l5498 0E5D                                  _Trise_raw_prev 00A0  
                                          _LATA 0018                                            _LATB 0019  
                                          _LATC 001A                                            u2410 0E72  
                                          u2500 0E9E                                            u2420 0E78  
                                          u2412 0E73                                            u2510 0EA5  
                                          u2502 0E9F                                            u2430 0E7F  
                                          u2422 0E79                                            u3305 0198  
                                          u3065 0452                                            u2610 0ED1  
                                          u2530 0EAB                                            u2450 0E85  
                                          _T2PR 028D                                            u3235 0D07  
                                          u3315 0230                                            u2620 0ED7  
                                          u2612 0ED2                                            u2604 0ECD  
                                          u2540 0EB1                                            u2532 0EAC  
                                          u2524 0EA7                                            u2460 0E8B  
                                          u2452 0E86                                            u2444 0E81  
                                          u3405 0FF4                                            u3190 0C66  
                                          u2630 0EDE                                            u2622 0ED8  
                                          u2550 0EB8                                            u2542 0EB2  
                                          u2470 0E92                                            u2462 0E8C  
                                          u3255 0D13                                            u3265 0D27  
                                          u3345 0F89                                            u3417 0B0A  
                                          u2650 0EE8                                            u2570 0EBE  
                                          u2490 0E98                               ??_CMP2_Initialize 004B  
                                          u3275 0D33                                            u3427 0B18  
                                          u2580 0EC4                                            u2572 0EBF  
                                          u2564 0EBA                                            u2492 0E99  
                                          u2484 0E94                                            u3437 0A50  
                                          u2830 0813                                            u2590 0ECB  
                                          u2582 0EC5                                            u3295 0107  
                                          u3375 0FB1                                            u2905 0CE1  
                                          u3385 0FC2                                            u2915 0CC9  
                                          _PMD0 0796                                            u2685 0B3C  
                                          _PMD1 0797                                            _PMD2 0798  
                                          u2695 0B43                                            _PMD3 0799  
                                          _PMD4 079A                                            _PMD5 079B  
                                          u2895 0CB5                                            _WPUA 1F39  
                                          _WPUB 1F44                                            _WPUC 1F4F  
                                _LIN_sendPacket 0A86                                   _EUSART1_Write 0A60  
                                   _outputState 002C                                            _main 0AFD  
                                 ?_EUSART1_Read 0076                                            fsr0h 0005  
                                          fsr1h 0007                                            indf0 0000  
                                          fsr0l 0004                                            indf1 0001  
                                          fsr1l 0006                                            btemp 007E  
                              __end_of_CLC2_ISR 17C6                                            start 002C  
                             ??_CLC3_Initialize 004B                                   processLIN@cmd 005D  
                               ?_LIN_breakCheck 0076                                    _CLC1GLS1bits 1E17  
                                  _CLC1GLS3bits 1E19                         __end_of_TMR0_Initialize 07FF  
                ??_TMR0_DefaultInterruptHandler 0076                                 ?_FVR_Initialize 0076  
                __size_of_OSCILLATOR_Initialize 000A                        __end_ofi1_TMR1_StopTimer 17D6  
                 __end_of_OSCILLATOR_Initialize 088A                               LIN_sendPacket@pid 0053  
                         _eusart1RxStatusBuffer 0120                                           ?_main 0076  
                               LIN_init@command 004D                               i1CmdOutput@enable 007A  
                               _TMR1_StartTimer 17D9                                 __end_of___lldiv 0D46  
                                         _T1CLK 0211                                           _T1CON 020E  
                                         _T2CON 028E                              __size_of_TCC_Curve 01EB  
                                         _T2HLT 028F                                           _T2TMR 028C  
                                         _T2RST 0291                                           i1l711 09FA  
                               _TMR0_WriteTimer 0815                                           i1l854 09D7  
               _LIN_CURRENT2COUNTS_SQUARED_Data 00DB                                           _OSCEN 0891  
                                         _TMR0H 059D                                           _TMR1H 020D  
                                         _TMR0L 059C                                           _TMR1L 020C  
                                         _EFuse 0F6F                                           _TRISA 0012  
                                         _TRISB 0013                                           _TRISC 0014  
                              __end_of_LIN_init 0A1C                           __end_of_LIN_stopTimer 17FA  
             __size_of_TMR0_SetInterruptHandler 0008                             ___lmul@multiplicand 004F  
                     ?_TMR0_SetInterruptHandler 004B                               ??_CLC4_Initialize 004B  
                            __size_of_EFuseInit 0023                            _EUSART1_Transmit_ISR 09DF  
                              __end_of_TMR0_ISR 09DF                                           _Tsink 0035  
                 __size_of_LIN_Slave_Initialize 000D                          _current2counts_squared 00E5  
                            __size_of_TMR2_Stop 0003                                     ?_TMR2_Start 0076  
                        __end_of_LIN_sendPacket 0AAC                    _LIN_TEMPERATURE_RISE_SA_Data 00C3  
                  _LIN_TEMPERATURE_RISE_JS_Data 00C5                                  ?_EUSART1_Write 0076  
                       __end_of_TMR1_Initialize 09C4                                           pclath 000A  
                                _LIN_startTimer 08F4                                  ??_EUSART1_Read 004B  
                                         status 0003                                           wtemp0 007E  
    __end_of_EUSART1_DefaultFramingErrorHandler 0801     __size_of_EUSART1_DefaultFramingErrorHandler 0001  
          ??_EUSART1_DefaultFramingErrorHandler 0076             ?_EUSART1_DefaultFramingErrorHandler 0076  
            _EUSART1_DefaultFramingErrorHandler 0800                                 _TMR1_WriteTimer 094C  
                         _LIN_OUTPUT_STATE_Data 0043                                ?_LIN_getChecksum 004B  
                   LIN_queuePacket@tempSchedule 005E                                 __initialization 002E  
                     __size_of_LIN_timerHandler 000C                                    ?_LIN_handler 0076  
                                  ?i1_TMR2_Stop 0076                      __end_of_EUSART1_Initialize 0C5F  
                                  __end_of_main 0B29                         __end_of_DAC1_Initialize 1800  
                            __size_of_CmdOutput 005D                         __end_of_TMR2_Initialize 08D6  
                   ?_INTERRUPT_InterruptManager 0076                             _LIN_UVLO_FAULT_Data 0040  
                                        ??_main 015A                                          ?_EFuse 0076  
                                  _iSenseOffset 0037                           ?_EUSART1_Transmit_ISR 0076  
                            LIN_sendPacket@data 0054                                          _ADCON0 009D  
                                        _ADCON1 009E                                          _CM2NCH 0996  
                                        _CM2PCH 0997                          __end_of_LIN_startTimer 0903  
                                        _ADRESH 009C                                 ?_LIN_sendPacket 0053  
                                        _ADRESL 009B                                          _ANSELA 1F38  
                                        _ANSELB 1F43                                          _ANSELC 1F4E  
                                        _T0CON0 059E                                          _T0CON1 059F  
                                  ?i1_CmdOutput 0076                                          _T1GATE 0210  
                                        _T1GCON 020F                                          _RC1REG 0119  
                                        _RC1STA 011D                                          i1l1114 09A4  
                       TMR1_WriteTimer@timerVal 004B                                          i1l1062 000E  
                                        i1l1072 002A                                          i1l1065 0017  
                        _LIN_DAC_I_HW_TRIP_Data 0046                                          i1l1067 0021  
                                        _RB7PPS 1F1F                                          _ODCONA 1F3A  
                                        _ODCONB 1F45                                          _ODCONC 1F50  
                                        _RC6PPS 1F26                                          i1l1471 06BA  
                  __size_of_EUSART1_is_rx_ready 0008                                          _RC7PPS 1F27  
                                        i1l1485 0D87                                          i1l4154 0C08  
                                        i1l4148 0BFA                                          i1l4158 0C17  
                                        i1l3448 08E0                                          i1l3932 0710  
                                        i1l3916 06D9                                          i1l3944 0738  
                                        _INLVLA 1F3C                                          _INLVLB 1F47  
                                        _INLVLC 1F52                                          _FVRCON 090C  
                                        u165_25 06C4                                          u166_25 06CC  
                                        u344_27 06AB                                          u345_27 06F4  
                                        u346_27 099F                                          _OSCFRQ 0893  
                  __size_of_ProcessAnalogInputs 00B9                                          _TX1REG 011A  
                                        _TX1STA 011E                                 _LIN_processData 016A  
                         _LIN_TRIGGER_TYPE_Data 0049                               __end_of_TCC_Curve 0252  
                             __end_of_EFuseInit 0A60                                    ?_TMR0_Reload 0076  
                     i1TMR1_WriteTimer@timerVal 0076                                          ___lmul 0B29  
                       __end_of_TMR1_StartTimer 17DC                                          ___omul 0C5F  
                               _LIN_queuePacket 0EEC                               __end_of_TMR2_Stop 17E2  
                       __end_of_TMR0_WriteTimer 081D                                       ??___lldiv 005F  
                           __size_of_TMR2_Start 0002                        ?_EUSART1_SetErrorHandler 004B  
                                        _memcpy 0AD3                                ?_TMR0_Initialize 0076  
                                        _memset 074E                ??_EUSART1_SetOverrunErrorHandler 004D  
               ?_EUSART1_SetOverrunErrorHandler 004B                                  _PMD_Initialize 085D  
                                     ?_CLC2_ISR 0076                                _LIN_rxInProgress 0028  
                      ADC_GetConversion@channel 0079                                 ??_EUSART1_Write 004B  
      TMR0_SetInterruptHandler@InterruptHandler 004B                                 _CLC1_Initialize 0923  
                               ?_LIN_startTimer 0076                         __end_of_TMR1_WriteTimer 0963  
                               _eusart1RxBuffer 0128                                 _eusart1TxBuffer 0130  
                              ?_TMR1_Initialize 0076                               __end_of_CmdOutput 0DFF  
                             _SYSTEM_Initialize 0BB7                                 _Update_LIN_Data 05D8  
                       __end_of__initialization 0063                         ??_GetAmbientTemperature 004D  
                            ?_SYSTEM_Initialize 0076                                   ?_LIN_checkPID 0076  
                                 __end_of_EFuse 1000                  __size_of_EUSART1_RxDataHandler 0018  
                 __end_of_EUSART1_RxDataHandler 0992                                       ?_LIN_init 004D  
                                __pcstackCOMMON 0076                                   ?_LIN_enableRx 0076  
                              ??_LIN_calcParity 004B                                 LIN_sendPacket@i 0058  
                                  __pidataBANK0 0865                                    __pidataBANK1 088A  
                           ??_SYSTEM_Initialize 0053                                   ?i1_TMR2_Start 0076  
                              ?_DAC1_Initialize 0076                                   _dac_i_hw_trip 006A  
                                     ?_TMR0_ISR 0076                                 _CLC2_Initialize 0937  
                              ?_TMR2_Initialize 0076                          __end_of_PMD_Initialize 0865  
                          __end_of_EUSART1_Read 0AD3                                 _CMP2_Initialize 0876  
                        LIN_handler@rxDataIndex 0024                          ??_EUSART1_Transmit_ISR 0076  
                                       ??_EFuse 0158                                      ??_CLC2_ISR 0076  
                             ?_LIN_getFromTable 004B                     __end_of_EUSART1_Receive_ISR 0C1A  
                        LIN_handler@LIN_rxState 0025                              ??_LIN_getFromTable 004C  
                     __end_of_SYSTEM_Initialize 0BE7                                 _CLC3_Initialize 0912  
                                 _eusart1RxHead 0071                                   _eusart1TxHead 0073  
                                 _eusart1RxTail 0070                                      __pbssBANK0 0020  
                                    __pbssBANK1 00A0                                      __pbssBANK2 0120  
                                 _eusart1TxTail 0072               _EUSART1_TxDefaultInterruptHandler 0168  
               ??_EUSART1_SetRxInterruptHandler 004D                        __size_ofi1_LIN_stopTimer 0005  
                      ?_EUSART1_get_last_status 0076                                ??_LIN_breakCheck 004D  
                                ??_LIN_checkPID 0052                     __end_of_LIN_setTimerHandler 085D  
                       __end_of_LIN_queuePacket 0F6F                                _LIN_B1_COEF_Data 0045  
               __end_of_EUSART1_SetErrorHandler 082D                                  ??_LIN_enableRx 004B  
                              ??_FVR_Initialize 004B                                      __pmaintext 0AFD  
                              _LIN_timerHandler 0894                                      ??_LIN_init 0051  
                                ??i1_TMR2_Start 0076                             LIN_getChecksum@data 004C  
              __end_of_TMR0_SetInterruptHandler 0855                                         ?___lmul 004B  
                                       ?___omul 004B                                ?_TMR1_StartTimer 0076  
                                    ??_TMR0_ISR 007C                                 _CLC4_Initialize 0903  
                                    __pintentry 0004                                ?_TMR0_WriteTimer 004B  
                          __size_of_LIN_handler 0142                                         _CM2CON0 0994  
                                       _CM2CON1 0995                            __size_ofi1_TMR2_Stop 0003  
                                       _CLC1CON 1E10                                         _CLC2CON 1E1A  
                                       ?_memcpy 004B                                         _CLC3CON 1E24  
                                       _CLC4CON 1E2E                                         ?_memset 004B  
                                       _CLC1POL 1E11                                         _CLC2POL 1E1B  
                                       _CLC3POL 1E25                             ___omul@multiplicand 0053  
                                ___lmul@product 0053                                         _CLC4POL 1E2F  
                               ?_PMD_Initialize 0076                           LIN_getChecksum@length 004F  
                             ?i1_TMR1_StopTimer 0076                         __size_of_ADC_Initialize 0008  
        __end_of_EUSART1_SetFramingErrorHandler 0835         __size_of_EUSART1_SetFramingErrorHandler 0008  
                _EUSART1_SetFramingErrorHandler 082D                         __size_of_TMR1_StopTimer 0003  
                              _LIN_timerRunning 0027                         __end_of_CLC1_Initialize 0937  
                       _LIN_ADC_TEMP_SENSE_Data 00D1                              ??i1_TMR1_StopTimer 0076  
        _LIN_ADC_CURRENT_SENSE_UNCORRECTED_Data 00D3                    ?_EUSART1_DefaultErrorHandler 0076  
                                       _SP1BRGH 011C                                         _SP1BRGL 011B  
                                       _OSCCON1 088D                                         _OSCCON3 088F  
                       __end_of_Update_LIN_Data 0695                                         _OSCSTAT 0890  
                                       _OSCTUNE 0892                                         _SLRCONA 1F3B  
                                       _SLRCONB 1F46                                         _SLRCONC 1F51  
                                  ??_TMR2_Start 004B                          __size_of_LIN_getPacket 0021  
                              ?_TMR1_WriteTimer 004B                          __size_of_LIN_disableRx 0005  
                                       _a1_coef 00E3                                         _b1_coef 0069  
                       LIN_getChecksum@checksum 0051                GetAmbientTemperature@temperature 0054  
                          __size_ofi1_CmdOutput 005C                       _LIN_GET_TRIGGER_TYPE_Data 0042  
                       __end_of_CLC2_Initialize 094C                                _adcVccSense_curr 003D  
                                     _CLCIN0PPS 1EBB                            _ADC_InterruptHandler 00B2  
                              _adcVccSense_prev 00B0                    __end_of_LIN_Slave_Initialize 08BA  
                       __end_of_CMP2_Initialize 0880                                 __size_of___lmul 002F  
                               __size_of___omul 0047                     _LIN_REDUCED_DRIVE_TIME_Data 0044  
                                       ___lldiv 0CF4                            __size_of_TMR0_Reload 0009  
                           _EUSART1_is_rx_ready 080D                              __end_of_TMR2_Start 17CA  
                               __size_of_memcpy 002A                                 __size_of_memset 0095  
                     _LIN_ENTER_SLEEP_MODE_Data 0048                             _ProcessAnalogInputs 0695  
                                       __ptext1 0BB7                                         __ptext2 09AB  
                                       __ptext3 07E3                                         __ptext4 085D  
                                       __ptext5 0B58                                         __ptext6 0880  
                                       __ptext7 08AD                                         __ptext8 09FD  
                                       __ptext9 0855                                       _T1CONbits 020E  
                       __end_of_CLC3_Initialize 0923                           _OSCILLATOR_Initialize 0880  
                              ??_LIN_sendPacket 0055                                       _T2CONbits 028E  
                                    _isense_max 0066                              _EUSART1_Initialize 0C1A  
                      ??_PIN_MANAGER_Initialize 004B                   ??_EUSART1_DefaultErrorHandler 0077  
                    __size_of_SYSTEM_Initialize 0030                                         clrloop0 0802  
               __end_of_EUSART1_get_last_status 0004                       LIN_getFromTable@rxCommand 0050  
                          end_of_initialization 0063                            ?_EUSART1_is_rx_ready 0076  
                           ?_EUSART1_Initialize 0076                                  ___omul@product 005C  
                                       memcpy@d 0053                                         memcpy@n 004D  
                                       memcpy@s 0051                            ?_ProcessAnalogInputs 0076  
                                       init_ram 0807                                         memset@c 004B  
                                       memset@k 0051                                         memset@n 004D  
                                       memset@s 0054                     _EUSART1_OverrunErrorHandler 0162  
                                       initloop 0808                         __end_of_CLC4_Initialize 0912  
                              ?_LIN_queuePacket 0076                                 ___lldiv@divisor 0057  
         __end_of_EUSART1_SetRxInterruptHandler 0845          __size_of_EUSART1_SetRxInterruptHandler 0008  
                 _EUSART1_SetRxInterruptHandler 083D                                 ___lldiv@counter 0064  
                        __size_of_LIN_stopTimer 0005                               ??i1_LIN_stopTimer 0076  
                                     _TCC_Curve 0067                           __size_of_EUSART1_Read 0027  
                                 _LIN_getPacket 0A1C                                   _LIN_disableRx 17EB  
                          ??_EUSART1_Initialize 004D                                       _EFuseInit 0A3D  
                      __size_of_LIN_getChecksum 0030                               LIN_getPacket@data 0056  
                      _TMR0_SetInterruptHandler 084D                                       _TMR2_Stop 17DF  
                                    _processLIN 04E0                            __end_of_LIN_checkPID 097A  
                              ?_CLC1_Initialize 0076            _LIN_ADC_CURRENT_SENSE_CORRECTED_Data 00CF  
                           LIN_init@tableLength 0052                                ??_LIN_startTimer 004D  
                               CmdOutput@enable 004F                                       _TRISCbits 0014  
                          __end_of_LIN_enableRx 17F5                                ?_Update_LIN_Data 0076  
                             __size_of_CLC2_ISR 0002                                   _scheduleTable 1000  
                          __end_ofi1_TMR2_Start 17C8                __size_of_EUSART1_SetErrorHandler 0008  
                            _factor_rdson_rthjs 00E9                              _factor_rdson_rthsa 00E7  
                           EUSART1_Write@txData 004C                           ??_EUSART1_is_rx_ready 004B  
                         ??_ProcessAnalogInputs 007B                                     _CM2CON0bits 0994  
                                  _EUSART1_Read 0AAC                                ?_CLC2_Initialize 0076  
                                     _CmdOutput 0DA2                  __size_of_GetAmbientTemperature 004E  
                 __end_of_GetAmbientTemperature 0CF4                                   _LIN_rxCommand 00EB  
          __size_of_EUSART1_DefaultErrorHandler 0003                            _timer0ReloadVal16bit 006E  
                              _overCurrentFault 002B                                      ?_TCC_Curve 0076  
                                ?_LIN_getPacket 0076                                ?_CMP2_Initialize 0076  
                                ?_LIN_disableRx 0076                                     _CLC1CONbits 1E10  
                             __size_of_LIN_init 001F                                  __end_of___lmul 0B58  
                                __end_of___omul 0CA6                                     _CLC3CONbits 1E24  
                                    ?_EFuseInit 0076                   _LIN_CURRENT_SENSE_OFFSET_Data 00CD  
                             __size_of_TMR0_ISR 001B                                  _ADC_Initialize 081D  
                                _TMR1_StopTimer 17DC                                      ?_TMR2_Stop 0076  
                                __end_of_memcpy 0AFD                          ?_OSCILLATOR_Initialize 0076  
                                __end_of_memset 07E3                                     _CLC1POLbits 1E11  
                                   _CLC2POLbits 1E1B                                ?_CLC3_Initialize 0076  
                           start_initialization 002E                                   _LIN_stopTimer 17F5  
                      __size_of_TMR0_Initialize 001C                 __size_of_PIN_MANAGER_Initialize 002F  
                      __end_of_LIN_timerHandler 08A0                            _LIN_Slave_Initialize 08AD  
                 _LIN_JUNCTION_TEMPERATURE_Data 00C7   EUSART1_SetRxInterruptHandler@interruptHandler 004B  
 EUSART1_SetTxInterruptHandler@interruptHandler 004B                           __end_of_EUSART1_Write 0A86  
                                   _CLCDATAbits 1E0F                           LIN_startTimer@timeout 004E  
                             ___omul@multiplier 004B                          _LIN_ADC_VCC_SENSE_Data 00D5  
                              ?_CLC4_Initialize 0076                                      ?_CmdOutput 0076  
                     __size_of_LIN_getFromTable 006A                               LIN_calcParity@CMD 004C  
                             LIN_calcParity@PID 004D                        __size_of_TMR1_Initialize 0019  
                              ??_PMD_Initialize 004B                                        ??___lmul 0053  
                                      ??___omul 005B                           _EUSART1_RxDataHandler 097A  
                ?_EUSART1_SetRxInterruptHandler 004B                          __end_of_ADC_Initialize 0825  
                        __end_of_TMR1_StopTimer 17DF                                     __pdataBANK0 0066  
                                   __pdataBANK1 00E1                                        ??_memcpy 004F  
                                      ??_memset 004F                            processLIN@tempRxData 005E  
              __size_of_EUSART1_get_last_status 0002                                      memset@dest 0053  
                           _LIN_DIAGNOSTIC_Data 0138                                     ?_processLIN 0076  
                             i1_TMR2_Initialize 08BA                                       _Tjunction 0033  
                                _eusart1RxCount 0023                             LIN_init@processData 004F  
                      __size_of_DAC1_Initialize 0006                              ?i1_TMR2_Initialize 0076  
                                ?_LIN_stopTimer 0076                                     __pbssCOMMON 0070  
             _EUSART1_RxDefaultInterruptHandler 0166                                       ___latbits 0002  
                 __size_of_EUSART1_Transmit_ISR 001E                                   __pcstackBANK0 004B  
                                 __pcstackBANK2 0140                               ??_LIN_getChecksum 004D  
                         ?_LIN_Slave_Initialize 0076                        __size_of_TMR2_Initialize 000E  
                           ??i1_TMR2_Initialize 0076                                  _temperatureLUT 0252  
               ??_EUSART1_SetTxInterruptHandler 004D                       __size_ofi1_TMR1_StopTimer 0003  
              ??_EUSART1_SetFramingErrorHandler 004D                 ?_EUSART1_SetFramingErrorHandler 004B  
                  __size_of_EUSART1_Receive_ISR 0033                           _TMR0_InterruptHandler 015E  
                                     __pnvBANK0 006E                                       __pnvBANK1 00EB  
                                     __pnvBANK2 015C                                 ??_LIN_getPacket 0055  
                        _PIN_MANAGER_Initialize 0B58                                   ??_LIN_handler 0140  
                              LIN_getChecksum@i 0050                                 ??_LIN_disableRx 004B  
                                 ??i1_TMR2_Stop 0076                              LIN_getChecksum@pid 004B  
                                   ??_TCC_Curve 0140                               _ADC_SelectChannel 08A0  
                          LIN_sendPacket@length 0057                                        ?___lldiv 0057  
                  __size_of_LIN_setTimerHandler 0008                                 ?_ADC_Initialize 0076  
                         __size_of_LIN_checkPID 0017                                 ?_TMR1_StopTimer 0076  
                            ?_ADC_SelectChannel 0076                                     ??_EFuseInit 0050  
                     __end_ofi1_TMR2_Initialize 08C8                               i1_TMR1_StartTimer 17D0  
                                      _DAC1CON0 090E                                        _DAC1CON1 090F  
                  ??_INTERRUPT_InterruptManager 007C                                     ??_TMR2_Stop 004B  
                            ?i1_TMR1_StartTimer 0076                           __size_of_LIN_enableRx 0005  
                                      _BAUD1CON 011F                           __size_ofi1_TMR2_Start 0002  
                                      _CLC1GLS0 1E16                                        _CLC1GLS1 1E17  
                                      _CLC1GLS2 1E18                                        _CLC1GLS3 1E19  
                                      _CLC2GLS0 1E20                                        _CLC2GLS1 1E21  
                                      _CLC2GLS2 1E22                                        _CLC2GLS3 1E23  
                                      _CLC3GLS0 1E2A                                        _CLC3GLS1 1E2B  
                                      _CLC3GLS2 1E2C                                        _CLC3GLS3 1E2D  
                   _LIN_FACTOR_RDSON_RTHSA_Data 00DD                     _LIN_FACTOR_RDSON_RTHJS_Data 00DF  
                                      _CLC4GLS0 1E34                                        _CLC4GLS1 1E35  
                                      _CLC4GLS2 1E36                                        _CLC4GLS3 1E37  
                                      _CLC1SEL0 1E12                                        _CLC1SEL1 1E13  
                                      _CLC1SEL2 1E14                                        _CLC1SEL3 1E15  
                      __size_of_TMR1_StartTimer 0003                                        _CLC2SEL0 1E1C  
                                      _CLC2SEL1 1E1D      __end_of_EUSART1_DefaultOverrunErrorHandler 17D0  
   __size_of_EUSART1_DefaultOverrunErrorHandler 0003            ??_EUSART1_DefaultOverrunErrorHandler 0076  
           ?_EUSART1_DefaultOverrunErrorHandler 0076                                        _CLC2SEL2 1E1E  
            _EUSART1_DefaultOverrunErrorHandler 17CD                                        _CLC2SEL3 1E1F  
                                      _CLC3SEL0 1E26                                        _CLC3SEL1 1E27  
                                      _CLC3SEL2 1E28                                        _CLC3SEL3 1E29  
                                __size_of_EFuse 0091                                        _CLC4SEL0 1E30  
                                      _CLC4SEL1 1E31                                        _CLC4SEL2 1E32  
                                      _CLC4SEL3 1E33                             ??_ADC_SelectChannel 0076  
                       __size_of_LIN_calcParity 0083                        __size_of_TMR0_WriteTimer 0008  
                          _EUSART1_ErrorHandler 0160                                        _CLC2_ISR 17C4  
                      _LIN_OVER_TEMP_FAULT_Data 003F                         _EUSART1_SetErrorHandler 0825  
                           ??i1_TMR1_StartTimer 0076                          __end_of_temperatureLUT 039E  
                                      _T2CLKCON 0290                                   ??i1_CmdOutput 0078  
                               LIN_checkPID@pid 0052                                 i1_LIN_stopTimer 17E6  
                             i1_TMR1_WriteTimer 08D6                               ??_TMR0_Initialize 004D  
       EUSART1_SetErrorHandler@interruptHandler 004B                                        _LATBbits 0019  
                  _LIN_AMBIENT_TEMPERATURE_Data 00CB                              ?i1_TMR1_WriteTimer 0076  
                                     clear_ram0 0801                                        _PIE0bits 0716  
                           __size_of_processLIN 00F8                                        _PIE3bits 0719  
                                   ??_CmdOutput 004D                                        _PIE5bits 071B  
                                  _LIN_checkPID 0963                       __end_of_ADC_SelectChannel 08AD  
                      __size_of_TMR1_WriteTimer 0017             __size_of_INTERRUPT_InterruptManager 0028  
                    ??_TMR0_SetInterruptHandler 004D                                       _ticks_1ms 00B4  
                                      _PIR0bits 070C                                        _PIR2bits 070E  
                                      _PIR3bits 070F                                        _PIR4bits 0710  
                                      _PIR5bits 0711                                   ??_TMR0_Reload 004B  
                                      _RX1DTPPS 1ECB                                        _LIN_init 09FD  
                        ?_EUSART1_RxDataHandler 0076                       __end_ofi1_TMR1_StartTimer 17D3  
                                  _LIN_enableRx 17F0                             ??i1_TMR1_WriteTimer 0078  
                                      _TMR0_ISR 09C4                                _LIN_COMMAND_Data 004A  
                                  i1_TMR2_Start 17C6                                LIN_getPacket@cmd 0057  
                       __size_of_LIN_breakCheck 000F                               ??_TMR1_Initialize 004B  
                           __end_of_LIN_handler 04E0                                      _ADCON0bits 009D  
                           __end_ofi1_TMR2_Stop 17D9                                 ??_LIN_stopTimer 004B  
                      ADC_SelectChannel@channel 0077                         __size_of_FVR_Initialize 0004  
                        ??_LIN_Slave_Initialize 0053                          GetAmbientTemperature@i 0053  
                                     _uvloFault 002A                        _LIN_TCC_SAMPLE_TIME_Data 00D7  
                     __end_ofi1_TMR1_WriteTimer 08E5                               ___lmul@multiplier 004B  
                             ??_DAC1_Initialize 004B                    GetAmbientTemperature@adcTemp 0051  
                             ??_TMR2_Initialize 004B                           EUSART1_Read@readValue 004C  
                           __end_ofi1_CmdOutput 0DA2                                        _Tambient 006C  
                              _LIN_getFromTable 0DFF                               _LIN_TJ_LIMIT_Data 0047  
         __end_of_EUSART1_SetTxInterruptHandler 084D          __size_of_EUSART1_SetTxInterruptHandler 0008  
                 _EUSART1_SetTxInterruptHandler 0845                                       memcpy@tmp 0050  
                             _ADC_GetConversion 0992                         ??_OSCILLATOR_Initialize 004B  
                            ?_ADC_GetConversion 0076                         _EUSART1_get_last_status 0002  
                    __size_ofi1_TMR2_Initialize 000E                        __size_of_LIN_queuePacket 0083  
                              __size_of___lldiv 0052                                        _Trise_js 0031  
                                      _Trise_sa 002F                     __size_of_EUSART1_Initialize 0045  
                                _adcISense_corr 0039                                  _adcISense_curr 003B  
                                _adcISense_prev 00AC                             __end_of_TMR0_Reload 0876  
                     ??_EUSART1_SetErrorHandler 004D             __end_of_EUSART1_DefaultErrorHandler 17CD  
                   _EUSART1_DefaultErrorHandler 17CA                             ??_ADC_GetConversion 0078  
                   __end_of_EUSART1_is_rx_ready 0815                         __end_ofi1_LIN_stopTimer 17EB  
                   __end_of_ProcessAnalogInputs 074E                                        __ptext10 084D  
                                      __ptext11 17E2                                        __ptext20 0903  
                                      __ptext12 0C1A                                        __ptext21 0912  
                                      __ptext13 0845                                        __ptext30 086D  
                                      __ptext22 0937                                        __ptext14 083D  
                                      __ptext31 17F5                                        __ptext23 0923  
                                      __ptext15 0835                                        __ptext40 17EB  
                                      __ptext32 08F4                                        __ptext24 081D  
                                      __ptext16 082D                                        __ptext41 0963  
                                      __ptext33 0815                                        __ptext25 039E  
                                      __ptext17 0825                                        __ptext50 0067  
                                      __ptext42 0DFF                                        __ptext34 0EEC  
                                      __ptext26 04E0                                        __ptext18 17FA  
                                      __ptext51 0C5F                                        __ptext43 0E69  
                                      __ptext35 0AD3                                        __ptext27 0A1C  
                                      __ptext19 0876                                        __ptext60 17DC  
                                      __ptext52 0B29                                        __ptext44 08E5  
                                      __ptext36 0A86                                        __ptext28 074E  
                                      __ptext61 17D9                                        __ptext53 0CF4  
                                      __ptext45 0002                                        __ptext37 0B87  
                                      __ptext29 0A3D                                        __ptext70 08BA  
                                      __ptext54 0CA6                                        __ptext46 0AAC  
                                      __ptext38 0A60                                        __ptext71 08D6  
                                      __ptext63 09C4                                        __ptext55 0DA2  
                                      __ptext47 080D                                        __ptext39 17F0  
                                      __ptext80 0800                                        __ptext72 17D3  
                                      __ptext64 0894                                        __ptext56 17DF  
                                      __ptext48 0F6F                                        __ptext81 17CA  
                                      __ptext73 17D0                                        __ptext65 07FF  
                                      __ptext57 17C8                                        __ptext49 05D8  
                                      __ptext82 097A                                        __ptext74 08A0  
                                      __ptext66 0695                                        __ptext58 08C8  
                                      __ptext83 17C4                                        __ptext75 0992  
                                      __ptext67 0D46                                        __ptext59 094C  
                                      __ptext76 17E6                                        __ptext68 17D6  
                                      __ptext77 09DF                                        __ptext69 17C6  
                                      __ptext78 0BE7                                        __ptext79 17CD  
                             ?_LIN_timerHandler 0076                                   _overTempFault 0029  
                             ??_TMR1_StartTimer 004B                        __size_of_CLC1_Initialize 0014  
                       TMR0_WriteTimer@timerVal 004B                              ??_LIN_timerHandler 0076  
                             ??_TMR0_WriteTimer 004D                                i1_TMR1_StopTimer 17D3  
                       __size_of_LIN_sendPacket 0026                          LIN_getFromTable@length 004F  
                                 __size_of_main 002C                        __size_of_Update_LIN_Data 00BD  
          __end_of_TMR0_DefaultInterruptHandler 0800           __size_of_TMR0_DefaultInterruptHandler 0001  
                  _TMR0_DefaultInterruptHandler 07FF                       __end_of_ADC_GetConversion 09AB  
                    __size_of_ADC_SelectChannel 000D                                      _RC1STAbits 011D  
                                      _tj_limit 006B                             _LIN_rxCommandLength 00EE  
EUSART1_SetOverrunErrorHandler@interruptHandler 004B                                     _LIN_handler 039E  
                                   i1_TMR2_Stop 17D6                           _GetAmbientTemperature 0CA6  
                    __size_ofi1_TMR1_StartTimer 0003                                        int$flags 007E  
                           _LIN_ISENSE_MAX_Data 00D9                                 _LIN_getChecksum 0B87  
            __end_of_INTERRUPT_InterruptManager 002C                      _INTERRUPT_InterruptManager 0004  
                      __size_of_CLC2_Initialize 0015                               ??_TMR1_WriteTimer 004D  
                   _EUSART1_FramingErrorHandler 0164                             _EUSART1_Receive_ISR 0BE7  
                                  ??_processLIN 0058                                     _LIN_timeout 0068  
                               _tcc_sample_time 00E1                                  _LIN_calcParity 0E69  
                                    _INTCONbits 000B                        __size_of_CMP2_Initialize 000A  
                                      memcpy@d1 0054                                        memcpy@s1 004B  
                    __size_ofi1_TMR1_WriteTimer 000F                             _LIN_setTimerHandler 0855  
                                   i1_CmdOutput 0D46                                        intlevel1 0000  
                      __size_of_CLC3_Initialize 0011                                   _CountCallBack 0026  
                          ?_EUSART1_Receive_ISR 0076                                    _DAC1CON1bits 090F  
                       __size_of_LIN_startTimer 000F                                ___lldiv@dividend 005B  
                       ?_PIN_MANAGER_Initialize 0076          __end_of_EUSART1_SetOverrunErrorHandler 083D  
       __size_of_EUSART1_SetOverrunErrorHandler 0008                  _EUSART1_SetOverrunErrorHandler 0835  
                         LIN_getFromTable@param 004B                    __end_of_EUSART1_Transmit_ISR 09FD  
                            __end_of_processLIN 05D8                                ??_ADC_Initialize 004B  
                              ??_TMR1_StopTimer 004B                   ?_TMR0_DefaultInterruptHandler 0076  
                     ??_EUSART1_get_last_status 004B                                     _TMR0_Reload 086D  
                                    _LIN_packet 00B6                            ?_LIN_setTimerHandler 0076  
                           _adcISense_OneMOSFET 00AE  EUSART1_SetFramingErrorHandler@interruptHandler 004B  
                ?_EUSART1_SetTxInterruptHandler 004B                                  _LIN_breakCheck 08E5  
                   _LIN_OVER_CURRENT_FAULT_Data 0041                        __size_of_CLC4_Initialize 000F  
                        __size_of_EUSART1_Write 0026                              _eusart1RxLastError 0022  
                        __end_of_LIN_calcParity 0EEC                                   __pstringtext1 0252  
                                 __pstringtext2 1000                              LIN_queuePacket@cmd 005C  
                                _FVR_Initialize 17E2                                ___lldiv@quotient 0060  
                               _TMR0_Initialize 07E3                               ??_LIN_queuePacket 0059  
                              ?i1_LIN_stopTimer 0076                                      _TX1STAbits 011E  
                                    _TMR2_Start 17C8                           ??_EUSART1_Receive_ISR 0077  
                __end_of_PIN_MANAGER_Initialize 0B87                   _LIN_HEATSINK_TEMPERATURE_Data 00C9  
                           LIN_getFromTable@cmd 004E                              _reduced_drive_time 002D  
                              LIN_queuePacket@i 005D                         ??_EUSART1_RxDataHandler 0076  
                    __size_of_ADC_GetConversion 0019                         __end_of_LIN_getChecksum 0BB7  
                               _TMR1_Initialize 09AB                               ??_CLC1_Initialize 004B  
                        ?_GetAmbientTemperature 004B                                  _adcTSense_curr 0074  
