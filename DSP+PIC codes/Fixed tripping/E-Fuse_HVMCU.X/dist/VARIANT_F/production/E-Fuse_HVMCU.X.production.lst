

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Sat Dec 09 15:49:12 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og9 
     1                           	processor	16F15345
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,noexec
    11                           	psect	cinit,global,class=CODE,merge=1,delta=2
    12                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    18                           	psect	inittext,global,class=CODE,delta=2
    19                           	psect	clrtext,global,class=CODE,delta=2
    20                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    21                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    23                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    24                           	psect	text1,local,class=CODE,merge=1,delta=2
    25                           	psect	text2,local,class=CODE,merge=1,delta=2
    26                           	psect	text3,local,class=CODE,merge=1,delta=2
    27                           	psect	text4,local,class=CODE,merge=1,delta=2
    28                           	psect	text5,local,class=CODE,merge=1,delta=2
    29                           	psect	text6,local,class=CODE,merge=1,delta=2
    30                           	psect	text7,local,class=CODE,merge=1,delta=2
    31                           	psect	text8,local,class=CODE,merge=1,delta=2
    32                           	psect	text9,local,class=CODE,merge=1,delta=2
    33                           	psect	text10,local,class=CODE,merge=1,delta=2
    34                           	psect	text11,local,class=CODE,merge=1,delta=2
    35                           	psect	text12,local,class=CODE,merge=1,delta=2
    36                           	psect	text13,local,class=CODE,merge=1,delta=2
    37                           	psect	text14,local,class=CODE,merge=1,delta=2
    38                           	psect	text15,local,class=CODE,merge=1,delta=2
    39                           	psect	text16,local,class=CODE,merge=1,delta=2
    40                           	psect	text17,local,class=CODE,merge=1,delta=2
    41                           	psect	text18,local,class=CODE,merge=1,delta=2
    42                           	psect	text19,local,class=CODE,merge=1,delta=2
    43                           	psect	text20,local,class=CODE,merge=1,delta=2
    44                           	psect	text21,local,class=CODE,merge=1,delta=2
    45                           	psect	text22,local,class=CODE,merge=1,delta=2
    46                           	psect	text23,local,class=CODE,merge=1,delta=2
    47                           	psect	text24,local,class=CODE,merge=1,delta=2
    48                           	psect	text25,local,class=CODE,merge=1,delta=2
    49                           	psect	text26,local,class=CODE,merge=1,delta=2
    50                           	psect	text27,local,class=CODE,merge=1,delta=2
    51                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    52                           	psect	text29,local,class=CODE,merge=1,delta=2
    53                           	psect	text30,local,class=CODE,merge=1,delta=2
    54                           	psect	text31,local,class=CODE,merge=1,delta=2
    55                           	psect	text32,local,class=CODE,merge=1,delta=2
    56                           	psect	text33,local,class=CODE,merge=1,delta=2
    57                           	psect	text34,local,class=CODE,merge=1,delta=2
    58                           	psect	text35,local,class=CODE,merge=1,delta=2,group=2
    59                           	psect	text36,local,class=CODE,merge=1,delta=2
    60                           	psect	text37,local,class=CODE,merge=1,delta=2
    61                           	psect	text38,local,class=CODE,merge=1,delta=2
    62                           	psect	text39,local,class=CODE,merge=1,delta=2
    63                           	psect	text40,local,class=CODE,merge=1,delta=2
    64                           	psect	text41,local,class=CODE,merge=1,delta=2
    65                           	psect	text42,local,class=CODE,merge=1,delta=2
    66                           	psect	text43,local,class=CODE,merge=1,delta=2
    67                           	psect	text44,local,class=CODE,merge=1,delta=2
    68                           	psect	text45,local,class=CODE,merge=1,delta=2
    69                           	psect	text46,local,class=CODE,merge=1,delta=2
    70                           	psect	text47,local,class=CODE,merge=1,delta=2
    71                           	psect	text48,local,class=CODE,merge=1,delta=2
    72                           	psect	text49,local,class=CODE,merge=1,delta=2
    73                           	psect	text50,local,class=CODE,merge=1,delta=2
    74                           	psect	text51,local,class=CODE,merge=1,delta=2,group=1
    75                           	psect	text52,local,class=CODE,merge=1,delta=2,group=1
    76                           	psect	text53,local,class=CODE,merge=1,delta=2,group=1
    77                           	psect	text54,local,class=CODE,merge=1,delta=2
    78                           	psect	text55,local,class=CODE,merge=1,delta=2
    79                           	psect	text56,local,class=CODE,merge=1,delta=2
    80                           	psect	text57,local,class=CODE,merge=1,delta=2
    81                           	psect	text58,local,class=CODE,merge=1,delta=2
    82                           	psect	text59,local,class=CODE,merge=1,delta=2
    83                           	psect	text60,local,class=CODE,merge=1,delta=2
    84                           	psect	text61,local,class=CODE,merge=1,delta=2
    85                           	psect	intentry,global,class=CODE,delta=2
    86                           	psect	text63,local,class=CODE,merge=1,delta=2
    87                           	psect	text64,local,class=CODE,merge=1,delta=2
    88                           	psect	text65,local,class=CODE,merge=1,delta=2
    89                           	psect	text66,local,class=CODE,merge=1,delta=2
    90                           	psect	text67,local,class=CODE,merge=1,delta=2
    91                           	psect	text68,local,class=CODE,merge=1,delta=2
    92                           	psect	text69,local,class=CODE,merge=1,delta=2
    93                           	psect	text70,local,class=CODE,merge=1,delta=2
    94                           	psect	text71,local,class=CODE,merge=1,delta=2
    95                           	psect	text72,local,class=CODE,merge=1,delta=2
    96                           	psect	text73,local,class=CODE,merge=1,delta=2
    97                           	psect	text74,local,class=CODE,merge=1,delta=2
    98                           	psect	text75,local,class=CODE,merge=1,delta=2
    99                           	psect	text76,local,class=CODE,merge=1,delta=2
   100                           	psect	text77,local,class=CODE,merge=1,delta=2
   101                           	psect	text78,local,class=CODE,merge=1,delta=2
   102                           	psect	text79,local,class=CODE,merge=1,delta=2
   103                           	psect	text80,local,class=CODE,merge=1,delta=2
   104                           	psect	text81,local,class=CODE,merge=1,delta=2
   105                           	psect	text82,local,class=CODE,merge=1,delta=2
   106                           	psect	text83,local,class=CODE,merge=1,delta=2
   107                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
   108                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   109                           	dabs	1,0x7E,2
   110     0000                     
   111                           ; Generated 18/08/2023 GMT
   112                           ; 
   113                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
   114                           ; All rights reserved.
   115                           ; 
   116                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   117                           ; 
   118                           ; Redistribution and use in source and binary forms, with or without modification, are
   119                           ; permitted provided that the following conditions are met:
   120                           ; 
   121                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   122                           ;        conditions and the following disclaimer.
   123                           ; 
   124                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   125                           ;        of conditions and the following disclaimer in the documentation and/or other
   126                           ;        materials provided with the distribution. Publication is not required when
   127                           ;        this file is used in an embedded application.
   128                           ; 
   129                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   130                           ;        software without specific prior written permission.
   131                           ; 
   132                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   133                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   134                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   135                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   136                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   137                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   138                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   139                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   140                           ; 
   141                           ; 
   142                           ; Code-generator required, PIC16F15345 Definitions
   143                           ; 
   144                           ; SFR Addresses
   145     0000                     	;# 
   146     0001                     	;# 
   147     0002                     	;# 
   148     0003                     	;# 
   149     0004                     	;# 
   150     0005                     	;# 
   151     0006                     	;# 
   152     0007                     	;# 
   153     0008                     	;# 
   154     0009                     	;# 
   155     000A                     	;# 
   156     000B                     	;# 
   157     000C                     	;# 
   158     000D                     	;# 
   159     000E                     	;# 
   160     0012                     	;# 
   161     0013                     	;# 
   162     0014                     	;# 
   163     0018                     	;# 
   164     0019                     	;# 
   165     001A                     	;# 
   166     009B                     	;# 
   167     009B                     	;# 
   168     009C                     	;# 
   169     009D                     	;# 
   170     009E                     	;# 
   171     009F                     	;# 
   172     0119                     	;# 
   173     0119                     	;# 
   174     0119                     	;# 
   175     011A                     	;# 
   176     011A                     	;# 
   177     011A                     	;# 
   178     011B                     	;# 
   179     011B                     	;# 
   180     011B                     	;# 
   181     011B                     	;# 
   182     011B                     	;# 
   183     011C                     	;# 
   184     011C                     	;# 
   185     011C                     	;# 
   186     011D                     	;# 
   187     011D                     	;# 
   188     011D                     	;# 
   189     011E                     	;# 
   190     011E                     	;# 
   191     011E                     	;# 
   192     011F                     	;# 
   193     011F                     	;# 
   194     011F                     	;# 
   195     011F                     	;# 
   196     011F                     	;# 
   197     018C                     	;# 
   198     018D                     	;# 
   199     018E                     	;# 
   200     018F                     	;# 
   201     0190                     	;# 
   202     0191                     	;# 
   203     0192                     	;# 
   204     020C                     	;# 
   205     020C                     	;# 
   206     020D                     	;# 
   207     020E                     	;# 
   208     020F                     	;# 
   209     020F                     	;# 
   210     0210                     	;# 
   211     0210                     	;# 
   212     0211                     	;# 
   213     0211                     	;# 
   214     028C                     	;# 
   215     028C                     	;# 
   216     028D                     	;# 
   217     028D                     	;# 
   218     028E                     	;# 
   219     028F                     	;# 
   220     0290                     	;# 
   221     0291                     	;# 
   222     030C                     	;# 
   223     030C                     	;# 
   224     030D                     	;# 
   225     030E                     	;# 
   226     030F                     	;# 
   227     0310                     	;# 
   228     0310                     	;# 
   229     0311                     	;# 
   230     0312                     	;# 
   231     0313                     	;# 
   232     0314                     	;# 
   233     0314                     	;# 
   234     0315                     	;# 
   235     0316                     	;# 
   236     0318                     	;# 
   237     0318                     	;# 
   238     0319                     	;# 
   239     031A                     	;# 
   240     031C                     	;# 
   241     031C                     	;# 
   242     031D                     	;# 
   243     031E                     	;# 
   244     038C                     	;# 
   245     038C                     	;# 
   246     038D                     	;# 
   247     038E                     	;# 
   248     058C                     	;# 
   249     058C                     	;# 
   250     058D                     	;# 
   251     058E                     	;# 
   252     058F                     	;# 
   253     058F                     	;# 
   254     0590                     	;# 
   255     0591                     	;# 
   256     0592                     	;# 
   257     0593                     	;# 
   258     059C                     	;# 
   259     059C                     	;# 
   260     059D                     	;# 
   261     059D                     	;# 
   262     059E                     	;# 
   263     059F                     	;# 
   264     060C                     	;# 
   265     060D                     	;# 
   266     060E                     	;# 
   267     060F                     	;# 
   268     0610                     	;# 
   269     0611                     	;# 
   270     0612                     	;# 
   271     0613                     	;# 
   272     0614                     	;# 
   273     070C                     	;# 
   274     070D                     	;# 
   275     070E                     	;# 
   276     070F                     	;# 
   277     0710                     	;# 
   278     0711                     	;# 
   279     0712                     	;# 
   280     0713                     	;# 
   281     0716                     	;# 
   282     0717                     	;# 
   283     0718                     	;# 
   284     0719                     	;# 
   285     071A                     	;# 
   286     071B                     	;# 
   287     071C                     	;# 
   288     071D                     	;# 
   289     0796                     	;# 
   290     0797                     	;# 
   291     0798                     	;# 
   292     0799                     	;# 
   293     079A                     	;# 
   294     079B                     	;# 
   295     080C                     	;# 
   296     080D                     	;# 
   297     080E                     	;# 
   298     080F                     	;# 
   299     0810                     	;# 
   300     0811                     	;# 
   301     0812                     	;# 
   302     0813                     	;# 
   303     0814                     	;# 
   304     081A                     	;# 
   305     081A                     	;# 
   306     081B                     	;# 
   307     081C                     	;# 
   308     081C                     	;# 
   309     081D                     	;# 
   310     081E                     	;# 
   311     081F                     	;# 
   312     088C                     	;# 
   313     088D                     	;# 
   314     088E                     	;# 
   315     088F                     	;# 
   316     0890                     	;# 
   317     0891                     	;# 
   318     0892                     	;# 
   319     0893                     	;# 
   320     0895                     	;# 
   321     0896                     	;# 
   322     090C                     	;# 
   323     090E                     	;# 
   324     090F                     	;# 
   325     091F                     	;# 
   326     098F                     	;# 
   327     098F                     	;# 
   328     0990                     	;# 
   329     0991                     	;# 
   330     0992                     	;# 
   331     0993                     	;# 
   332     0994                     	;# 
   333     0995                     	;# 
   334     0996                     	;# 
   335     0997                     	;# 
   336     0A19                     	;# 
   337     0A19                     	;# 
   338     0A1A                     	;# 
   339     0A1A                     	;# 
   340     0A1B                     	;# 
   341     0A1B                     	;# 
   342     0A1B                     	;# 
   343     0A1C                     	;# 
   344     0A1C                     	;# 
   345     0A1D                     	;# 
   346     0A1D                     	;# 
   347     0A1E                     	;# 
   348     0A1E                     	;# 
   349     0A1F                     	;# 
   350     0A1F                     	;# 
   351     0A1F                     	;# 
   352     1E0F                     	;# 
   353     1E10                     	;# 
   354     1E11                     	;# 
   355     1E12                     	;# 
   356     1E13                     	;# 
   357     1E14                     	;# 
   358     1E15                     	;# 
   359     1E16                     	;# 
   360     1E17                     	;# 
   361     1E18                     	;# 
   362     1E19                     	;# 
   363     1E1A                     	;# 
   364     1E1B                     	;# 
   365     1E1C                     	;# 
   366     1E1D                     	;# 
   367     1E1E                     	;# 
   368     1E1F                     	;# 
   369     1E20                     	;# 
   370     1E21                     	;# 
   371     1E22                     	;# 
   372     1E23                     	;# 
   373     1E24                     	;# 
   374     1E25                     	;# 
   375     1E26                     	;# 
   376     1E27                     	;# 
   377     1E28                     	;# 
   378     1E29                     	;# 
   379     1E2A                     	;# 
   380     1E2B                     	;# 
   381     1E2C                     	;# 
   382     1E2D                     	;# 
   383     1E2E                     	;# 
   384     1E2F                     	;# 
   385     1E30                     	;# 
   386     1E31                     	;# 
   387     1E32                     	;# 
   388     1E33                     	;# 
   389     1E34                     	;# 
   390     1E35                     	;# 
   391     1E36                     	;# 
   392     1E37                     	;# 
   393     1E8F                     	;# 
   394     1E90                     	;# 
   395     1E91                     	;# 
   396     1E92                     	;# 
   397     1E93                     	;# 
   398     1E9C                     	;# 
   399     1EA1                     	;# 
   400     1EA2                     	;# 
   401     1EB1                     	;# 
   402     1EBB                     	;# 
   403     1EBC                     	;# 
   404     1EBD                     	;# 
   405     1EBE                     	;# 
   406     1EC3                     	;# 
   407     1EC5                     	;# 
   408     1EC6                     	;# 
   409     1EC7                     	;# 
   410     1ECB                     	;# 
   411     1ECC                     	;# 
   412     1ECD                     	;# 
   413     1ECE                     	;# 
   414     1F10                     	;# 
   415     1F11                     	;# 
   416     1F12                     	;# 
   417     1F13                     	;# 
   418     1F14                     	;# 
   419     1F15                     	;# 
   420     1F1C                     	;# 
   421     1F1D                     	;# 
   422     1F1E                     	;# 
   423     1F1F                     	;# 
   424     1F20                     	;# 
   425     1F21                     	;# 
   426     1F22                     	;# 
   427     1F23                     	;# 
   428     1F24                     	;# 
   429     1F25                     	;# 
   430     1F26                     	;# 
   431     1F27                     	;# 
   432     1F38                     	;# 
   433     1F39                     	;# 
   434     1F3A                     	;# 
   435     1F3B                     	;# 
   436     1F3C                     	;# 
   437     1F3D                     	;# 
   438     1F3E                     	;# 
   439     1F3F                     	;# 
   440     1F43                     	;# 
   441     1F44                     	;# 
   442     1F45                     	;# 
   443     1F46                     	;# 
   444     1F47                     	;# 
   445     1F48                     	;# 
   446     1F49                     	;# 
   447     1F4A                     	;# 
   448     1F4E                     	;# 
   449     1F4F                     	;# 
   450     1F50                     	;# 
   451     1F51                     	;# 
   452     1F52                     	;# 
   453     1F53                     	;# 
   454     1F54                     	;# 
   455     1F55                     	;# 
   456     1FE4                     	;# 
   457     1FE5                     	;# 
   458     1FE6                     	;# 
   459     1FE7                     	;# 
   460     1FE8                     	;# 
   461     1FE8                     	;# 
   462     1FE9                     	;# 
   463     1FEA                     	;# 
   464     1FEA                     	;# 
   465     1FEB                     	;# 
   466     1FED                     	;# 
   467     1FEE                     	;# 
   468     1FEF                     	;# 
   469     0000                     	;# 
   470     0001                     	;# 
   471     0002                     	;# 
   472     0003                     	;# 
   473     0004                     	;# 
   474     0005                     	;# 
   475     0006                     	;# 
   476     0007                     	;# 
   477     0008                     	;# 
   478     0009                     	;# 
   479     000A                     	;# 
   480     000B                     	;# 
   481     000C                     	;# 
   482     000D                     	;# 
   483     000E                     	;# 
   484     0012                     	;# 
   485     0013                     	;# 
   486     0014                     	;# 
   487     0018                     	;# 
   488     0019                     	;# 
   489     001A                     	;# 
   490     009B                     	;# 
   491     009B                     	;# 
   492     009C                     	;# 
   493     009D                     	;# 
   494     009E                     	;# 
   495     009F                     	;# 
   496     0119                     	;# 
   497     0119                     	;# 
   498     0119                     	;# 
   499     011A                     	;# 
   500     011A                     	;# 
   501     011A                     	;# 
   502     011B                     	;# 
   503     011B                     	;# 
   504     011B                     	;# 
   505     011B                     	;# 
   506     011B                     	;# 
   507     011C                     	;# 
   508     011C                     	;# 
   509     011C                     	;# 
   510     011D                     	;# 
   511     011D                     	;# 
   512     011D                     	;# 
   513     011E                     	;# 
   514     011E                     	;# 
   515     011E                     	;# 
   516     011F                     	;# 
   517     011F                     	;# 
   518     011F                     	;# 
   519     011F                     	;# 
   520     011F                     	;# 
   521     018C                     	;# 
   522     018D                     	;# 
   523     018E                     	;# 
   524     018F                     	;# 
   525     0190                     	;# 
   526     0191                     	;# 
   527     0192                     	;# 
   528     020C                     	;# 
   529     020C                     	;# 
   530     020D                     	;# 
   531     020E                     	;# 
   532     020F                     	;# 
   533     020F                     	;# 
   534     0210                     	;# 
   535     0210                     	;# 
   536     0211                     	;# 
   537     0211                     	;# 
   538     028C                     	;# 
   539     028C                     	;# 
   540     028D                     	;# 
   541     028D                     	;# 
   542     028E                     	;# 
   543     028F                     	;# 
   544     0290                     	;# 
   545     0291                     	;# 
   546     030C                     	;# 
   547     030C                     	;# 
   548     030D                     	;# 
   549     030E                     	;# 
   550     030F                     	;# 
   551     0310                     	;# 
   552     0310                     	;# 
   553     0311                     	;# 
   554     0312                     	;# 
   555     0313                     	;# 
   556     0314                     	;# 
   557     0314                     	;# 
   558     0315                     	;# 
   559     0316                     	;# 
   560     0318                     	;# 
   561     0318                     	;# 
   562     0319                     	;# 
   563     031A                     	;# 
   564     031C                     	;# 
   565     031C                     	;# 
   566     031D                     	;# 
   567     031E                     	;# 
   568     038C                     	;# 
   569     038C                     	;# 
   570     038D                     	;# 
   571     038E                     	;# 
   572     058C                     	;# 
   573     058C                     	;# 
   574     058D                     	;# 
   575     058E                     	;# 
   576     058F                     	;# 
   577     058F                     	;# 
   578     0590                     	;# 
   579     0591                     	;# 
   580     0592                     	;# 
   581     0593                     	;# 
   582     059C                     	;# 
   583     059C                     	;# 
   584     059D                     	;# 
   585     059D                     	;# 
   586     059E                     	;# 
   587     059F                     	;# 
   588     060C                     	;# 
   589     060D                     	;# 
   590     060E                     	;# 
   591     060F                     	;# 
   592     0610                     	;# 
   593     0611                     	;# 
   594     0612                     	;# 
   595     0613                     	;# 
   596     0614                     	;# 
   597     070C                     	;# 
   598     070D                     	;# 
   599     070E                     	;# 
   600     070F                     	;# 
   601     0710                     	;# 
   602     0711                     	;# 
   603     0712                     	;# 
   604     0713                     	;# 
   605     0716                     	;# 
   606     0717                     	;# 
   607     0718                     	;# 
   608     0719                     	;# 
   609     071A                     	;# 
   610     071B                     	;# 
   611     071C                     	;# 
   612     071D                     	;# 
   613     0796                     	;# 
   614     0797                     	;# 
   615     0798                     	;# 
   616     0799                     	;# 
   617     079A                     	;# 
   618     079B                     	;# 
   619     080C                     	;# 
   620     080D                     	;# 
   621     080E                     	;# 
   622     080F                     	;# 
   623     0810                     	;# 
   624     0811                     	;# 
   625     0812                     	;# 
   626     0813                     	;# 
   627     0814                     	;# 
   628     081A                     	;# 
   629     081A                     	;# 
   630     081B                     	;# 
   631     081C                     	;# 
   632     081C                     	;# 
   633     081D                     	;# 
   634     081E                     	;# 
   635     081F                     	;# 
   636     088C                     	;# 
   637     088D                     	;# 
   638     088E                     	;# 
   639     088F                     	;# 
   640     0890                     	;# 
   641     0891                     	;# 
   642     0892                     	;# 
   643     0893                     	;# 
   644     0895                     	;# 
   645     0896                     	;# 
   646     090C                     	;# 
   647     090E                     	;# 
   648     090F                     	;# 
   649     091F                     	;# 
   650     098F                     	;# 
   651     098F                     	;# 
   652     0990                     	;# 
   653     0991                     	;# 
   654     0992                     	;# 
   655     0993                     	;# 
   656     0994                     	;# 
   657     0995                     	;# 
   658     0996                     	;# 
   659     0997                     	;# 
   660     0A19                     	;# 
   661     0A19                     	;# 
   662     0A1A                     	;# 
   663     0A1A                     	;# 
   664     0A1B                     	;# 
   665     0A1B                     	;# 
   666     0A1B                     	;# 
   667     0A1C                     	;# 
   668     0A1C                     	;# 
   669     0A1D                     	;# 
   670     0A1D                     	;# 
   671     0A1E                     	;# 
   672     0A1E                     	;# 
   673     0A1F                     	;# 
   674     0A1F                     	;# 
   675     0A1F                     	;# 
   676     1E0F                     	;# 
   677     1E10                     	;# 
   678     1E11                     	;# 
   679     1E12                     	;# 
   680     1E13                     	;# 
   681     1E14                     	;# 
   682     1E15                     	;# 
   683     1E16                     	;# 
   684     1E17                     	;# 
   685     1E18                     	;# 
   686     1E19                     	;# 
   687     1E1A                     	;# 
   688     1E1B                     	;# 
   689     1E1C                     	;# 
   690     1E1D                     	;# 
   691     1E1E                     	;# 
   692     1E1F                     	;# 
   693     1E20                     	;# 
   694     1E21                     	;# 
   695     1E22                     	;# 
   696     1E23                     	;# 
   697     1E24                     	;# 
   698     1E25                     	;# 
   699     1E26                     	;# 
   700     1E27                     	;# 
   701     1E28                     	;# 
   702     1E29                     	;# 
   703     1E2A                     	;# 
   704     1E2B                     	;# 
   705     1E2C                     	;# 
   706     1E2D                     	;# 
   707     1E2E                     	;# 
   708     1E2F                     	;# 
   709     1E30                     	;# 
   710     1E31                     	;# 
   711     1E32                     	;# 
   712     1E33                     	;# 
   713     1E34                     	;# 
   714     1E35                     	;# 
   715     1E36                     	;# 
   716     1E37                     	;# 
   717     1E8F                     	;# 
   718     1E90                     	;# 
   719     1E91                     	;# 
   720     1E92                     	;# 
   721     1E93                     	;# 
   722     1E9C                     	;# 
   723     1EA1                     	;# 
   724     1EA2                     	;# 
   725     1EB1                     	;# 
   726     1EBB                     	;# 
   727     1EBC                     	;# 
   728     1EBD                     	;# 
   729     1EBE                     	;# 
   730     1EC3                     	;# 
   731     1EC5                     	;# 
   732     1EC6                     	;# 
   733     1EC7                     	;# 
   734     1ECB                     	;# 
   735     1ECC                     	;# 
   736     1ECD                     	;# 
   737     1ECE                     	;# 
   738     1F10                     	;# 
   739     1F11                     	;# 
   740     1F12                     	;# 
   741     1F13                     	;# 
   742     1F14                     	;# 
   743     1F15                     	;# 
   744     1F1C                     	;# 
   745     1F1D                     	;# 
   746     1F1E                     	;# 
   747     1F1F                     	;# 
   748     1F20                     	;# 
   749     1F21                     	;# 
   750     1F22                     	;# 
   751     1F23                     	;# 
   752     1F24                     	;# 
   753     1F25                     	;# 
   754     1F26                     	;# 
   755     1F27                     	;# 
   756     1F38                     	;# 
   757     1F39                     	;# 
   758     1F3A                     	;# 
   759     1F3B                     	;# 
   760     1F3C                     	;# 
   761     1F3D                     	;# 
   762     1F3E                     	;# 
   763     1F3F                     	;# 
   764     1F43                     	;# 
   765     1F44                     	;# 
   766     1F45                     	;# 
   767     1F46                     	;# 
   768     1F47                     	;# 
   769     1F48                     	;# 
   770     1F49                     	;# 
   771     1F4A                     	;# 
   772     1F4E                     	;# 
   773     1F4F                     	;# 
   774     1F50                     	;# 
   775     1F51                     	;# 
   776     1F52                     	;# 
   777     1F53                     	;# 
   778     1F54                     	;# 
   779     1F55                     	;# 
   780     1FE4                     	;# 
   781     1FE5                     	;# 
   782     1FE6                     	;# 
   783     1FE7                     	;# 
   784     1FE8                     	;# 
   785     1FE8                     	;# 
   786     1FE9                     	;# 
   787     1FEA                     	;# 
   788     1FEA                     	;# 
   789     1FEB                     	;# 
   790     1FED                     	;# 
   791     1FEE                     	;# 
   792     1FEF                     	;# 
   793     0000                     	;# 
   794     0001                     	;# 
   795     0002                     	;# 
   796     0003                     	;# 
   797     0004                     	;# 
   798     0005                     	;# 
   799     0006                     	;# 
   800     0007                     	;# 
   801     0008                     	;# 
   802     0009                     	;# 
   803     000A                     	;# 
   804     000B                     	;# 
   805     000C                     	;# 
   806     000D                     	;# 
   807     000E                     	;# 
   808     0012                     	;# 
   809     0013                     	;# 
   810     0014                     	;# 
   811     0018                     	;# 
   812     0019                     	;# 
   813     001A                     	;# 
   814     009B                     	;# 
   815     009B                     	;# 
   816     009C                     	;# 
   817     009D                     	;# 
   818     009E                     	;# 
   819     009F                     	;# 
   820     0119                     	;# 
   821     0119                     	;# 
   822     0119                     	;# 
   823     011A                     	;# 
   824     011A                     	;# 
   825     011A                     	;# 
   826     011B                     	;# 
   827     011B                     	;# 
   828     011B                     	;# 
   829     011B                     	;# 
   830     011B                     	;# 
   831     011C                     	;# 
   832     011C                     	;# 
   833     011C                     	;# 
   834     011D                     	;# 
   835     011D                     	;# 
   836     011D                     	;# 
   837     011E                     	;# 
   838     011E                     	;# 
   839     011E                     	;# 
   840     011F                     	;# 
   841     011F                     	;# 
   842     011F                     	;# 
   843     011F                     	;# 
   844     011F                     	;# 
   845     018C                     	;# 
   846     018D                     	;# 
   847     018E                     	;# 
   848     018F                     	;# 
   849     0190                     	;# 
   850     0191                     	;# 
   851     0192                     	;# 
   852     020C                     	;# 
   853     020C                     	;# 
   854     020D                     	;# 
   855     020E                     	;# 
   856     020F                     	;# 
   857     020F                     	;# 
   858     0210                     	;# 
   859     0210                     	;# 
   860     0211                     	;# 
   861     0211                     	;# 
   862     028C                     	;# 
   863     028C                     	;# 
   864     028D                     	;# 
   865     028D                     	;# 
   866     028E                     	;# 
   867     028F                     	;# 
   868     0290                     	;# 
   869     0291                     	;# 
   870     030C                     	;# 
   871     030C                     	;# 
   872     030D                     	;# 
   873     030E                     	;# 
   874     030F                     	;# 
   875     0310                     	;# 
   876     0310                     	;# 
   877     0311                     	;# 
   878     0312                     	;# 
   879     0313                     	;# 
   880     0314                     	;# 
   881     0314                     	;# 
   882     0315                     	;# 
   883     0316                     	;# 
   884     0318                     	;# 
   885     0318                     	;# 
   886     0319                     	;# 
   887     031A                     	;# 
   888     031C                     	;# 
   889     031C                     	;# 
   890     031D                     	;# 
   891     031E                     	;# 
   892     038C                     	;# 
   893     038C                     	;# 
   894     038D                     	;# 
   895     038E                     	;# 
   896     058C                     	;# 
   897     058C                     	;# 
   898     058D                     	;# 
   899     058E                     	;# 
   900     058F                     	;# 
   901     058F                     	;# 
   902     0590                     	;# 
   903     0591                     	;# 
   904     0592                     	;# 
   905     0593                     	;# 
   906     059C                     	;# 
   907     059C                     	;# 
   908     059D                     	;# 
   909     059D                     	;# 
   910     059E                     	;# 
   911     059F                     	;# 
   912     060C                     	;# 
   913     060D                     	;# 
   914     060E                     	;# 
   915     060F                     	;# 
   916     0610                     	;# 
   917     0611                     	;# 
   918     0612                     	;# 
   919     0613                     	;# 
   920     0614                     	;# 
   921     070C                     	;# 
   922     070D                     	;# 
   923     070E                     	;# 
   924     070F                     	;# 
   925     0710                     	;# 
   926     0711                     	;# 
   927     0712                     	;# 
   928     0713                     	;# 
   929     0716                     	;# 
   930     0717                     	;# 
   931     0718                     	;# 
   932     0719                     	;# 
   933     071A                     	;# 
   934     071B                     	;# 
   935     071C                     	;# 
   936     071D                     	;# 
   937     0796                     	;# 
   938     0797                     	;# 
   939     0798                     	;# 
   940     0799                     	;# 
   941     079A                     	;# 
   942     079B                     	;# 
   943     080C                     	;# 
   944     080D                     	;# 
   945     080E                     	;# 
   946     080F                     	;# 
   947     0810                     	;# 
   948     0811                     	;# 
   949     0812                     	;# 
   950     0813                     	;# 
   951     0814                     	;# 
   952     081A                     	;# 
   953     081A                     	;# 
   954     081B                     	;# 
   955     081C                     	;# 
   956     081C                     	;# 
   957     081D                     	;# 
   958     081E                     	;# 
   959     081F                     	;# 
   960     088C                     	;# 
   961     088D                     	;# 
   962     088E                     	;# 
   963     088F                     	;# 
   964     0890                     	;# 
   965     0891                     	;# 
   966     0892                     	;# 
   967     0893                     	;# 
   968     0895                     	;# 
   969     0896                     	;# 
   970     090C                     	;# 
   971     090E                     	;# 
   972     090F                     	;# 
   973     091F                     	;# 
   974     098F                     	;# 
   975     098F                     	;# 
   976     0990                     	;# 
   977     0991                     	;# 
   978     0992                     	;# 
   979     0993                     	;# 
   980     0994                     	;# 
   981     0995                     	;# 
   982     0996                     	;# 
   983     0997                     	;# 
   984     0A19                     	;# 
   985     0A19                     	;# 
   986     0A1A                     	;# 
   987     0A1A                     	;# 
   988     0A1B                     	;# 
   989     0A1B                     	;# 
   990     0A1B                     	;# 
   991     0A1C                     	;# 
   992     0A1C                     	;# 
   993     0A1D                     	;# 
   994     0A1D                     	;# 
   995     0A1E                     	;# 
   996     0A1E                     	;# 
   997     0A1F                     	;# 
   998     0A1F                     	;# 
   999     0A1F                     	;# 
  1000     1E0F                     	;# 
  1001     1E10                     	;# 
  1002     1E11                     	;# 
  1003     1E12                     	;# 
  1004     1E13                     	;# 
  1005     1E14                     	;# 
  1006     1E15                     	;# 
  1007     1E16                     	;# 
  1008     1E17                     	;# 
  1009     1E18                     	;# 
  1010     1E19                     	;# 
  1011     1E1A                     	;# 
  1012     1E1B                     	;# 
  1013     1E1C                     	;# 
  1014     1E1D                     	;# 
  1015     1E1E                     	;# 
  1016     1E1F                     	;# 
  1017     1E20                     	;# 
  1018     1E21                     	;# 
  1019     1E22                     	;# 
  1020     1E23                     	;# 
  1021     1E24                     	;# 
  1022     1E25                     	;# 
  1023     1E26                     	;# 
  1024     1E27                     	;# 
  1025     1E28                     	;# 
  1026     1E29                     	;# 
  1027     1E2A                     	;# 
  1028     1E2B                     	;# 
  1029     1E2C                     	;# 
  1030     1E2D                     	;# 
  1031     1E2E                     	;# 
  1032     1E2F                     	;# 
  1033     1E30                     	;# 
  1034     1E31                     	;# 
  1035     1E32                     	;# 
  1036     1E33                     	;# 
  1037     1E34                     	;# 
  1038     1E35                     	;# 
  1039     1E36                     	;# 
  1040     1E37                     	;# 
  1041     1E8F                     	;# 
  1042     1E90                     	;# 
  1043     1E91                     	;# 
  1044     1E92                     	;# 
  1045     1E93                     	;# 
  1046     1E9C                     	;# 
  1047     1EA1                     	;# 
  1048     1EA2                     	;# 
  1049     1EB1                     	;# 
  1050     1EBB                     	;# 
  1051     1EBC                     	;# 
  1052     1EBD                     	;# 
  1053     1EBE                     	;# 
  1054     1EC3                     	;# 
  1055     1EC5                     	;# 
  1056     1EC6                     	;# 
  1057     1EC7                     	;# 
  1058     1ECB                     	;# 
  1059     1ECC                     	;# 
  1060     1ECD                     	;# 
  1061     1ECE                     	;# 
  1062     1F10                     	;# 
  1063     1F11                     	;# 
  1064     1F12                     	;# 
  1065     1F13                     	;# 
  1066     1F14                     	;# 
  1067     1F15                     	;# 
  1068     1F1C                     	;# 
  1069     1F1D                     	;# 
  1070     1F1E                     	;# 
  1071     1F1F                     	;# 
  1072     1F20                     	;# 
  1073     1F21                     	;# 
  1074     1F22                     	;# 
  1075     1F23                     	;# 
  1076     1F24                     	;# 
  1077     1F25                     	;# 
  1078     1F26                     	;# 
  1079     1F27                     	;# 
  1080     1F38                     	;# 
  1081     1F39                     	;# 
  1082     1F3A                     	;# 
  1083     1F3B                     	;# 
  1084     1F3C                     	;# 
  1085     1F3D                     	;# 
  1086     1F3E                     	;# 
  1087     1F3F                     	;# 
  1088     1F43                     	;# 
  1089     1F44                     	;# 
  1090     1F45                     	;# 
  1091     1F46                     	;# 
  1092     1F47                     	;# 
  1093     1F48                     	;# 
  1094     1F49                     	;# 
  1095     1F4A                     	;# 
  1096     1F4E                     	;# 
  1097     1F4F                     	;# 
  1098     1F50                     	;# 
  1099     1F51                     	;# 
  1100     1F52                     	;# 
  1101     1F53                     	;# 
  1102     1F54                     	;# 
  1103     1F55                     	;# 
  1104     1FE4                     	;# 
  1105     1FE5                     	;# 
  1106     1FE6                     	;# 
  1107     1FE7                     	;# 
  1108     1FE8                     	;# 
  1109     1FE8                     	;# 
  1110     1FE9                     	;# 
  1111     1FEA                     	;# 
  1112     1FEA                     	;# 
  1113     1FEB                     	;# 
  1114     1FED                     	;# 
  1115     1FEE                     	;# 
  1116     1FEF                     	;# 
  1117     0000                     	;# 
  1118     0001                     	;# 
  1119     0002                     	;# 
  1120     0003                     	;# 
  1121     0004                     	;# 
  1122     0005                     	;# 
  1123     0006                     	;# 
  1124     0007                     	;# 
  1125     0008                     	;# 
  1126     0009                     	;# 
  1127     000A                     	;# 
  1128     000B                     	;# 
  1129     000C                     	;# 
  1130     000D                     	;# 
  1131     000E                     	;# 
  1132     0012                     	;# 
  1133     0013                     	;# 
  1134     0014                     	;# 
  1135     0018                     	;# 
  1136     0019                     	;# 
  1137     001A                     	;# 
  1138     009B                     	;# 
  1139     009B                     	;# 
  1140     009C                     	;# 
  1141     009D                     	;# 
  1142     009E                     	;# 
  1143     009F                     	;# 
  1144     0119                     	;# 
  1145     0119                     	;# 
  1146     0119                     	;# 
  1147     011A                     	;# 
  1148     011A                     	;# 
  1149     011A                     	;# 
  1150     011B                     	;# 
  1151     011B                     	;# 
  1152     011B                     	;# 
  1153     011B                     	;# 
  1154     011B                     	;# 
  1155     011C                     	;# 
  1156     011C                     	;# 
  1157     011C                     	;# 
  1158     011D                     	;# 
  1159     011D                     	;# 
  1160     011D                     	;# 
  1161     011E                     	;# 
  1162     011E                     	;# 
  1163     011E                     	;# 
  1164     011F                     	;# 
  1165     011F                     	;# 
  1166     011F                     	;# 
  1167     011F                     	;# 
  1168     011F                     	;# 
  1169     018C                     	;# 
  1170     018D                     	;# 
  1171     018E                     	;# 
  1172     018F                     	;# 
  1173     0190                     	;# 
  1174     0191                     	;# 
  1175     0192                     	;# 
  1176     020C                     	;# 
  1177     020C                     	;# 
  1178     020D                     	;# 
  1179     020E                     	;# 
  1180     020F                     	;# 
  1181     020F                     	;# 
  1182     0210                     	;# 
  1183     0210                     	;# 
  1184     0211                     	;# 
  1185     0211                     	;# 
  1186     028C                     	;# 
  1187     028C                     	;# 
  1188     028D                     	;# 
  1189     028D                     	;# 
  1190     028E                     	;# 
  1191     028F                     	;# 
  1192     0290                     	;# 
  1193     0291                     	;# 
  1194     030C                     	;# 
  1195     030C                     	;# 
  1196     030D                     	;# 
  1197     030E                     	;# 
  1198     030F                     	;# 
  1199     0310                     	;# 
  1200     0310                     	;# 
  1201     0311                     	;# 
  1202     0312                     	;# 
  1203     0313                     	;# 
  1204     0314                     	;# 
  1205     0314                     	;# 
  1206     0315                     	;# 
  1207     0316                     	;# 
  1208     0318                     	;# 
  1209     0318                     	;# 
  1210     0319                     	;# 
  1211     031A                     	;# 
  1212     031C                     	;# 
  1213     031C                     	;# 
  1214     031D                     	;# 
  1215     031E                     	;# 
  1216     038C                     	;# 
  1217     038C                     	;# 
  1218     038D                     	;# 
  1219     038E                     	;# 
  1220     058C                     	;# 
  1221     058C                     	;# 
  1222     058D                     	;# 
  1223     058E                     	;# 
  1224     058F                     	;# 
  1225     058F                     	;# 
  1226     0590                     	;# 
  1227     0591                     	;# 
  1228     0592                     	;# 
  1229     0593                     	;# 
  1230     059C                     	;# 
  1231     059C                     	;# 
  1232     059D                     	;# 
  1233     059D                     	;# 
  1234     059E                     	;# 
  1235     059F                     	;# 
  1236     060C                     	;# 
  1237     060D                     	;# 
  1238     060E                     	;# 
  1239     060F                     	;# 
  1240     0610                     	;# 
  1241     0611                     	;# 
  1242     0612                     	;# 
  1243     0613                     	;# 
  1244     0614                     	;# 
  1245     070C                     	;# 
  1246     070D                     	;# 
  1247     070E                     	;# 
  1248     070F                     	;# 
  1249     0710                     	;# 
  1250     0711                     	;# 
  1251     0712                     	;# 
  1252     0713                     	;# 
  1253     0716                     	;# 
  1254     0717                     	;# 
  1255     0718                     	;# 
  1256     0719                     	;# 
  1257     071A                     	;# 
  1258     071B                     	;# 
  1259     071C                     	;# 
  1260     071D                     	;# 
  1261     0796                     	;# 
  1262     0797                     	;# 
  1263     0798                     	;# 
  1264     0799                     	;# 
  1265     079A                     	;# 
  1266     079B                     	;# 
  1267     080C                     	;# 
  1268     080D                     	;# 
  1269     080E                     	;# 
  1270     080F                     	;# 
  1271     0810                     	;# 
  1272     0811                     	;# 
  1273     0812                     	;# 
  1274     0813                     	;# 
  1275     0814                     	;# 
  1276     081A                     	;# 
  1277     081A                     	;# 
  1278     081B                     	;# 
  1279     081C                     	;# 
  1280     081C                     	;# 
  1281     081D                     	;# 
  1282     081E                     	;# 
  1283     081F                     	;# 
  1284     088C                     	;# 
  1285     088D                     	;# 
  1286     088E                     	;# 
  1287     088F                     	;# 
  1288     0890                     	;# 
  1289     0891                     	;# 
  1290     0892                     	;# 
  1291     0893                     	;# 
  1292     0895                     	;# 
  1293     0896                     	;# 
  1294     090C                     	;# 
  1295     090E                     	;# 
  1296     090F                     	;# 
  1297     091F                     	;# 
  1298     098F                     	;# 
  1299     098F                     	;# 
  1300     0990                     	;# 
  1301     0991                     	;# 
  1302     0992                     	;# 
  1303     0993                     	;# 
  1304     0994                     	;# 
  1305     0995                     	;# 
  1306     0996                     	;# 
  1307     0997                     	;# 
  1308     0A19                     	;# 
  1309     0A19                     	;# 
  1310     0A1A                     	;# 
  1311     0A1A                     	;# 
  1312     0A1B                     	;# 
  1313     0A1B                     	;# 
  1314     0A1B                     	;# 
  1315     0A1C                     	;# 
  1316     0A1C                     	;# 
  1317     0A1D                     	;# 
  1318     0A1D                     	;# 
  1319     0A1E                     	;# 
  1320     0A1E                     	;# 
  1321     0A1F                     	;# 
  1322     0A1F                     	;# 
  1323     0A1F                     	;# 
  1324     1E0F                     	;# 
  1325     1E10                     	;# 
  1326     1E11                     	;# 
  1327     1E12                     	;# 
  1328     1E13                     	;# 
  1329     1E14                     	;# 
  1330     1E15                     	;# 
  1331     1E16                     	;# 
  1332     1E17                     	;# 
  1333     1E18                     	;# 
  1334     1E19                     	;# 
  1335     1E1A                     	;# 
  1336     1E1B                     	;# 
  1337     1E1C                     	;# 
  1338     1E1D                     	;# 
  1339     1E1E                     	;# 
  1340     1E1F                     	;# 
  1341     1E20                     	;# 
  1342     1E21                     	;# 
  1343     1E22                     	;# 
  1344     1E23                     	;# 
  1345     1E24                     	;# 
  1346     1E25                     	;# 
  1347     1E26                     	;# 
  1348     1E27                     	;# 
  1349     1E28                     	;# 
  1350     1E29                     	;# 
  1351     1E2A                     	;# 
  1352     1E2B                     	;# 
  1353     1E2C                     	;# 
  1354     1E2D                     	;# 
  1355     1E2E                     	;# 
  1356     1E2F                     	;# 
  1357     1E30                     	;# 
  1358     1E31                     	;# 
  1359     1E32                     	;# 
  1360     1E33                     	;# 
  1361     1E34                     	;# 
  1362     1E35                     	;# 
  1363     1E36                     	;# 
  1364     1E37                     	;# 
  1365     1E8F                     	;# 
  1366     1E90                     	;# 
  1367     1E91                     	;# 
  1368     1E92                     	;# 
  1369     1E93                     	;# 
  1370     1E9C                     	;# 
  1371     1EA1                     	;# 
  1372     1EA2                     	;# 
  1373     1EB1                     	;# 
  1374     1EBB                     	;# 
  1375     1EBC                     	;# 
  1376     1EBD                     	;# 
  1377     1EBE                     	;# 
  1378     1EC3                     	;# 
  1379     1EC5                     	;# 
  1380     1EC6                     	;# 
  1381     1EC7                     	;# 
  1382     1ECB                     	;# 
  1383     1ECC                     	;# 
  1384     1ECD                     	;# 
  1385     1ECE                     	;# 
  1386     1F10                     	;# 
  1387     1F11                     	;# 
  1388     1F12                     	;# 
  1389     1F13                     	;# 
  1390     1F14                     	;# 
  1391     1F15                     	;# 
  1392     1F1C                     	;# 
  1393     1F1D                     	;# 
  1394     1F1E                     	;# 
  1395     1F1F                     	;# 
  1396     1F20                     	;# 
  1397     1F21                     	;# 
  1398     1F22                     	;# 
  1399     1F23                     	;# 
  1400     1F24                     	;# 
  1401     1F25                     	;# 
  1402     1F26                     	;# 
  1403     1F27                     	;# 
  1404     1F38                     	;# 
  1405     1F39                     	;# 
  1406     1F3A                     	;# 
  1407     1F3B                     	;# 
  1408     1F3C                     	;# 
  1409     1F3D                     	;# 
  1410     1F3E                     	;# 
  1411     1F3F                     	;# 
  1412     1F43                     	;# 
  1413     1F44                     	;# 
  1414     1F45                     	;# 
  1415     1F46                     	;# 
  1416     1F47                     	;# 
  1417     1F48                     	;# 
  1418     1F49                     	;# 
  1419     1F4A                     	;# 
  1420     1F4E                     	;# 
  1421     1F4F                     	;# 
  1422     1F50                     	;# 
  1423     1F51                     	;# 
  1424     1F52                     	;# 
  1425     1F53                     	;# 
  1426     1F54                     	;# 
  1427     1F55                     	;# 
  1428     1FE4                     	;# 
  1429     1FE5                     	;# 
  1430     1FE6                     	;# 
  1431     1FE7                     	;# 
  1432     1FE8                     	;# 
  1433     1FE8                     	;# 
  1434     1FE9                     	;# 
  1435     1FEA                     	;# 
  1436     1FEA                     	;# 
  1437     1FEB                     	;# 
  1438     1FED                     	;# 
  1439     1FEE                     	;# 
  1440     1FEF                     	;# 
  1441     0000                     	;# 
  1442     0001                     	;# 
  1443     0002                     	;# 
  1444     0003                     	;# 
  1445     0004                     	;# 
  1446     0005                     	;# 
  1447     0006                     	;# 
  1448     0007                     	;# 
  1449     0008                     	;# 
  1450     0009                     	;# 
  1451     000A                     	;# 
  1452     000B                     	;# 
  1453     000C                     	;# 
  1454     000D                     	;# 
  1455     000E                     	;# 
  1456     0012                     	;# 
  1457     0013                     	;# 
  1458     0014                     	;# 
  1459     0018                     	;# 
  1460     0019                     	;# 
  1461     001A                     	;# 
  1462     009B                     	;# 
  1463     009B                     	;# 
  1464     009C                     	;# 
  1465     009D                     	;# 
  1466     009E                     	;# 
  1467     009F                     	;# 
  1468     0119                     	;# 
  1469     0119                     	;# 
  1470     0119                     	;# 
  1471     011A                     	;# 
  1472     011A                     	;# 
  1473     011A                     	;# 
  1474     011B                     	;# 
  1475     011B                     	;# 
  1476     011B                     	;# 
  1477     011B                     	;# 
  1478     011B                     	;# 
  1479     011C                     	;# 
  1480     011C                     	;# 
  1481     011C                     	;# 
  1482     011D                     	;# 
  1483     011D                     	;# 
  1484     011D                     	;# 
  1485     011E                     	;# 
  1486     011E                     	;# 
  1487     011E                     	;# 
  1488     011F                     	;# 
  1489     011F                     	;# 
  1490     011F                     	;# 
  1491     011F                     	;# 
  1492     011F                     	;# 
  1493     018C                     	;# 
  1494     018D                     	;# 
  1495     018E                     	;# 
  1496     018F                     	;# 
  1497     0190                     	;# 
  1498     0191                     	;# 
  1499     0192                     	;# 
  1500     020C                     	;# 
  1501     020C                     	;# 
  1502     020D                     	;# 
  1503     020E                     	;# 
  1504     020F                     	;# 
  1505     020F                     	;# 
  1506     0210                     	;# 
  1507     0210                     	;# 
  1508     0211                     	;# 
  1509     0211                     	;# 
  1510     028C                     	;# 
  1511     028C                     	;# 
  1512     028D                     	;# 
  1513     028D                     	;# 
  1514     028E                     	;# 
  1515     028F                     	;# 
  1516     0290                     	;# 
  1517     0291                     	;# 
  1518     030C                     	;# 
  1519     030C                     	;# 
  1520     030D                     	;# 
  1521     030E                     	;# 
  1522     030F                     	;# 
  1523     0310                     	;# 
  1524     0310                     	;# 
  1525     0311                     	;# 
  1526     0312                     	;# 
  1527     0313                     	;# 
  1528     0314                     	;# 
  1529     0314                     	;# 
  1530     0315                     	;# 
  1531     0316                     	;# 
  1532     0318                     	;# 
  1533     0318                     	;# 
  1534     0319                     	;# 
  1535     031A                     	;# 
  1536     031C                     	;# 
  1537     031C                     	;# 
  1538     031D                     	;# 
  1539     031E                     	;# 
  1540     038C                     	;# 
  1541     038C                     	;# 
  1542     038D                     	;# 
  1543     038E                     	;# 
  1544     058C                     	;# 
  1545     058C                     	;# 
  1546     058D                     	;# 
  1547     058E                     	;# 
  1548     058F                     	;# 
  1549     058F                     	;# 
  1550     0590                     	;# 
  1551     0591                     	;# 
  1552     0592                     	;# 
  1553     0593                     	;# 
  1554     059C                     	;# 
  1555     059C                     	;# 
  1556     059D                     	;# 
  1557     059D                     	;# 
  1558     059E                     	;# 
  1559     059F                     	;# 
  1560     060C                     	;# 
  1561     060D                     	;# 
  1562     060E                     	;# 
  1563     060F                     	;# 
  1564     0610                     	;# 
  1565     0611                     	;# 
  1566     0612                     	;# 
  1567     0613                     	;# 
  1568     0614                     	;# 
  1569     070C                     	;# 
  1570     070D                     	;# 
  1571     070E                     	;# 
  1572     070F                     	;# 
  1573     0710                     	;# 
  1574     0711                     	;# 
  1575     0712                     	;# 
  1576     0713                     	;# 
  1577     0716                     	;# 
  1578     0717                     	;# 
  1579     0718                     	;# 
  1580     0719                     	;# 
  1581     071A                     	;# 
  1582     071B                     	;# 
  1583     071C                     	;# 
  1584     071D                     	;# 
  1585     0796                     	;# 
  1586     0797                     	;# 
  1587     0798                     	;# 
  1588     0799                     	;# 
  1589     079A                     	;# 
  1590     079B                     	;# 
  1591     080C                     	;# 
  1592     080D                     	;# 
  1593     080E                     	;# 
  1594     080F                     	;# 
  1595     0810                     	;# 
  1596     0811                     	;# 
  1597     0812                     	;# 
  1598     0813                     	;# 
  1599     0814                     	;# 
  1600     081A                     	;# 
  1601     081A                     	;# 
  1602     081B                     	;# 
  1603     081C                     	;# 
  1604     081C                     	;# 
  1605     081D                     	;# 
  1606     081E                     	;# 
  1607     081F                     	;# 
  1608     088C                     	;# 
  1609     088D                     	;# 
  1610     088E                     	;# 
  1611     088F                     	;# 
  1612     0890                     	;# 
  1613     0891                     	;# 
  1614     0892                     	;# 
  1615     0893                     	;# 
  1616     0895                     	;# 
  1617     0896                     	;# 
  1618     090C                     	;# 
  1619     090E                     	;# 
  1620     090F                     	;# 
  1621     091F                     	;# 
  1622     098F                     	;# 
  1623     098F                     	;# 
  1624     0990                     	;# 
  1625     0991                     	;# 
  1626     0992                     	;# 
  1627     0993                     	;# 
  1628     0994                     	;# 
  1629     0995                     	;# 
  1630     0996                     	;# 
  1631     0997                     	;# 
  1632     0A19                     	;# 
  1633     0A19                     	;# 
  1634     0A1A                     	;# 
  1635     0A1A                     	;# 
  1636     0A1B                     	;# 
  1637     0A1B                     	;# 
  1638     0A1B                     	;# 
  1639     0A1C                     	;# 
  1640     0A1C                     	;# 
  1641     0A1D                     	;# 
  1642     0A1D                     	;# 
  1643     0A1E                     	;# 
  1644     0A1E                     	;# 
  1645     0A1F                     	;# 
  1646     0A1F                     	;# 
  1647     0A1F                     	;# 
  1648     1E0F                     	;# 
  1649     1E10                     	;# 
  1650     1E11                     	;# 
  1651     1E12                     	;# 
  1652     1E13                     	;# 
  1653     1E14                     	;# 
  1654     1E15                     	;# 
  1655     1E16                     	;# 
  1656     1E17                     	;# 
  1657     1E18                     	;# 
  1658     1E19                     	;# 
  1659     1E1A                     	;# 
  1660     1E1B                     	;# 
  1661     1E1C                     	;# 
  1662     1E1D                     	;# 
  1663     1E1E                     	;# 
  1664     1E1F                     	;# 
  1665     1E20                     	;# 
  1666     1E21                     	;# 
  1667     1E22                     	;# 
  1668     1E23                     	;# 
  1669     1E24                     	;# 
  1670     1E25                     	;# 
  1671     1E26                     	;# 
  1672     1E27                     	;# 
  1673     1E28                     	;# 
  1674     1E29                     	;# 
  1675     1E2A                     	;# 
  1676     1E2B                     	;# 
  1677     1E2C                     	;# 
  1678     1E2D                     	;# 
  1679     1E2E                     	;# 
  1680     1E2F                     	;# 
  1681     1E30                     	;# 
  1682     1E31                     	;# 
  1683     1E32                     	;# 
  1684     1E33                     	;# 
  1685     1E34                     	;# 
  1686     1E35                     	;# 
  1687     1E36                     	;# 
  1688     1E37                     	;# 
  1689     1E8F                     	;# 
  1690     1E90                     	;# 
  1691     1E91                     	;# 
  1692     1E92                     	;# 
  1693     1E93                     	;# 
  1694     1E9C                     	;# 
  1695     1EA1                     	;# 
  1696     1EA2                     	;# 
  1697     1EB1                     	;# 
  1698     1EBB                     	;# 
  1699     1EBC                     	;# 
  1700     1EBD                     	;# 
  1701     1EBE                     	;# 
  1702     1EC3                     	;# 
  1703     1EC5                     	;# 
  1704     1EC6                     	;# 
  1705     1EC7                     	;# 
  1706     1ECB                     	;# 
  1707     1ECC                     	;# 
  1708     1ECD                     	;# 
  1709     1ECE                     	;# 
  1710     1F10                     	;# 
  1711     1F11                     	;# 
  1712     1F12                     	;# 
  1713     1F13                     	;# 
  1714     1F14                     	;# 
  1715     1F15                     	;# 
  1716     1F1C                     	;# 
  1717     1F1D                     	;# 
  1718     1F1E                     	;# 
  1719     1F1F                     	;# 
  1720     1F20                     	;# 
  1721     1F21                     	;# 
  1722     1F22                     	;# 
  1723     1F23                     	;# 
  1724     1F24                     	;# 
  1725     1F25                     	;# 
  1726     1F26                     	;# 
  1727     1F27                     	;# 
  1728     1F38                     	;# 
  1729     1F39                     	;# 
  1730     1F3A                     	;# 
  1731     1F3B                     	;# 
  1732     1F3C                     	;# 
  1733     1F3D                     	;# 
  1734     1F3E                     	;# 
  1735     1F3F                     	;# 
  1736     1F43                     	;# 
  1737     1F44                     	;# 
  1738     1F45                     	;# 
  1739     1F46                     	;# 
  1740     1F47                     	;# 
  1741     1F48                     	;# 
  1742     1F49                     	;# 
  1743     1F4A                     	;# 
  1744     1F4E                     	;# 
  1745     1F4F                     	;# 
  1746     1F50                     	;# 
  1747     1F51                     	;# 
  1748     1F52                     	;# 
  1749     1F53                     	;# 
  1750     1F54                     	;# 
  1751     1F55                     	;# 
  1752     1FE4                     	;# 
  1753     1FE5                     	;# 
  1754     1FE6                     	;# 
  1755     1FE7                     	;# 
  1756     1FE8                     	;# 
  1757     1FE8                     	;# 
  1758     1FE9                     	;# 
  1759     1FEA                     	;# 
  1760     1FEA                     	;# 
  1761     1FEB                     	;# 
  1762     1FED                     	;# 
  1763     1FEE                     	;# 
  1764     1FEF                     	;# 
  1765     0000                     	;# 
  1766     0001                     	;# 
  1767     0002                     	;# 
  1768     0003                     	;# 
  1769     0004                     	;# 
  1770     0005                     	;# 
  1771     0006                     	;# 
  1772     0007                     	;# 
  1773     0008                     	;# 
  1774     0009                     	;# 
  1775     000A                     	;# 
  1776     000B                     	;# 
  1777     000C                     	;# 
  1778     000D                     	;# 
  1779     000E                     	;# 
  1780     0012                     	;# 
  1781     0013                     	;# 
  1782     0014                     	;# 
  1783     0018                     	;# 
  1784     0019                     	;# 
  1785     001A                     	;# 
  1786     009B                     	;# 
  1787     009B                     	;# 
  1788     009C                     	;# 
  1789     009D                     	;# 
  1790     009E                     	;# 
  1791     009F                     	;# 
  1792     0119                     	;# 
  1793     0119                     	;# 
  1794     0119                     	;# 
  1795     011A                     	;# 
  1796     011A                     	;# 
  1797     011A                     	;# 
  1798     011B                     	;# 
  1799     011B                     	;# 
  1800     011B                     	;# 
  1801     011B                     	;# 
  1802     011B                     	;# 
  1803     011C                     	;# 
  1804     011C                     	;# 
  1805     011C                     	;# 
  1806     011D                     	;# 
  1807     011D                     	;# 
  1808     011D                     	;# 
  1809     011E                     	;# 
  1810     011E                     	;# 
  1811     011E                     	;# 
  1812     011F                     	;# 
  1813     011F                     	;# 
  1814     011F                     	;# 
  1815     011F                     	;# 
  1816     011F                     	;# 
  1817     018C                     	;# 
  1818     018D                     	;# 
  1819     018E                     	;# 
  1820     018F                     	;# 
  1821     0190                     	;# 
  1822     0191                     	;# 
  1823     0192                     	;# 
  1824     020C                     	;# 
  1825     020C                     	;# 
  1826     020D                     	;# 
  1827     020E                     	;# 
  1828     020F                     	;# 
  1829     020F                     	;# 
  1830     0210                     	;# 
  1831     0210                     	;# 
  1832     0211                     	;# 
  1833     0211                     	;# 
  1834     028C                     	;# 
  1835     028C                     	;# 
  1836     028D                     	;# 
  1837     028D                     	;# 
  1838     028E                     	;# 
  1839     028F                     	;# 
  1840     0290                     	;# 
  1841     0291                     	;# 
  1842     030C                     	;# 
  1843     030C                     	;# 
  1844     030D                     	;# 
  1845     030E                     	;# 
  1846     030F                     	;# 
  1847     0310                     	;# 
  1848     0310                     	;# 
  1849     0311                     	;# 
  1850     0312                     	;# 
  1851     0313                     	;# 
  1852     0314                     	;# 
  1853     0314                     	;# 
  1854     0315                     	;# 
  1855     0316                     	;# 
  1856     0318                     	;# 
  1857     0318                     	;# 
  1858     0319                     	;# 
  1859     031A                     	;# 
  1860     031C                     	;# 
  1861     031C                     	;# 
  1862     031D                     	;# 
  1863     031E                     	;# 
  1864     038C                     	;# 
  1865     038C                     	;# 
  1866     038D                     	;# 
  1867     038E                     	;# 
  1868     058C                     	;# 
  1869     058C                     	;# 
  1870     058D                     	;# 
  1871     058E                     	;# 
  1872     058F                     	;# 
  1873     058F                     	;# 
  1874     0590                     	;# 
  1875     0591                     	;# 
  1876     0592                     	;# 
  1877     0593                     	;# 
  1878     059C                     	;# 
  1879     059C                     	;# 
  1880     059D                     	;# 
  1881     059D                     	;# 
  1882     059E                     	;# 
  1883     059F                     	;# 
  1884     060C                     	;# 
  1885     060D                     	;# 
  1886     060E                     	;# 
  1887     060F                     	;# 
  1888     0610                     	;# 
  1889     0611                     	;# 
  1890     0612                     	;# 
  1891     0613                     	;# 
  1892     0614                     	;# 
  1893     070C                     	;# 
  1894     070D                     	;# 
  1895     070E                     	;# 
  1896     070F                     	;# 
  1897     0710                     	;# 
  1898     0711                     	;# 
  1899     0712                     	;# 
  1900     0713                     	;# 
  1901     0716                     	;# 
  1902     0717                     	;# 
  1903     0718                     	;# 
  1904     0719                     	;# 
  1905     071A                     	;# 
  1906     071B                     	;# 
  1907     071C                     	;# 
  1908     071D                     	;# 
  1909     0796                     	;# 
  1910     0797                     	;# 
  1911     0798                     	;# 
  1912     0799                     	;# 
  1913     079A                     	;# 
  1914     079B                     	;# 
  1915     080C                     	;# 
  1916     080D                     	;# 
  1917     080E                     	;# 
  1918     080F                     	;# 
  1919     0810                     	;# 
  1920     0811                     	;# 
  1921     0812                     	;# 
  1922     0813                     	;# 
  1923     0814                     	;# 
  1924     081A                     	;# 
  1925     081A                     	;# 
  1926     081B                     	;# 
  1927     081C                     	;# 
  1928     081C                     	;# 
  1929     081D                     	;# 
  1930     081E                     	;# 
  1931     081F                     	;# 
  1932     088C                     	;# 
  1933     088D                     	;# 
  1934     088E                     	;# 
  1935     088F                     	;# 
  1936     0890                     	;# 
  1937     0891                     	;# 
  1938     0892                     	;# 
  1939     0893                     	;# 
  1940     0895                     	;# 
  1941     0896                     	;# 
  1942     090C                     	;# 
  1943     090E                     	;# 
  1944     090F                     	;# 
  1945     091F                     	;# 
  1946     098F                     	;# 
  1947     098F                     	;# 
  1948     0990                     	;# 
  1949     0991                     	;# 
  1950     0992                     	;# 
  1951     0993                     	;# 
  1952     0994                     	;# 
  1953     0995                     	;# 
  1954     0996                     	;# 
  1955     0997                     	;# 
  1956     0A19                     	;# 
  1957     0A19                     	;# 
  1958     0A1A                     	;# 
  1959     0A1A                     	;# 
  1960     0A1B                     	;# 
  1961     0A1B                     	;# 
  1962     0A1B                     	;# 
  1963     0A1C                     	;# 
  1964     0A1C                     	;# 
  1965     0A1D                     	;# 
  1966     0A1D                     	;# 
  1967     0A1E                     	;# 
  1968     0A1E                     	;# 
  1969     0A1F                     	;# 
  1970     0A1F                     	;# 
  1971     0A1F                     	;# 
  1972     1E0F                     	;# 
  1973     1E10                     	;# 
  1974     1E11                     	;# 
  1975     1E12                     	;# 
  1976     1E13                     	;# 
  1977     1E14                     	;# 
  1978     1E15                     	;# 
  1979     1E16                     	;# 
  1980     1E17                     	;# 
  1981     1E18                     	;# 
  1982     1E19                     	;# 
  1983     1E1A                     	;# 
  1984     1E1B                     	;# 
  1985     1E1C                     	;# 
  1986     1E1D                     	;# 
  1987     1E1E                     	;# 
  1988     1E1F                     	;# 
  1989     1E20                     	;# 
  1990     1E21                     	;# 
  1991     1E22                     	;# 
  1992     1E23                     	;# 
  1993     1E24                     	;# 
  1994     1E25                     	;# 
  1995     1E26                     	;# 
  1996     1E27                     	;# 
  1997     1E28                     	;# 
  1998     1E29                     	;# 
  1999     1E2A                     	;# 
  2000     1E2B                     	;# 
  2001     1E2C                     	;# 
  2002     1E2D                     	;# 
  2003     1E2E                     	;# 
  2004     1E2F                     	;# 
  2005     1E30                     	;# 
  2006     1E31                     	;# 
  2007     1E32                     	;# 
  2008     1E33                     	;# 
  2009     1E34                     	;# 
  2010     1E35                     	;# 
  2011     1E36                     	;# 
  2012     1E37                     	;# 
  2013     1E8F                     	;# 
  2014     1E90                     	;# 
  2015     1E91                     	;# 
  2016     1E92                     	;# 
  2017     1E93                     	;# 
  2018     1E9C                     	;# 
  2019     1EA1                     	;# 
  2020     1EA2                     	;# 
  2021     1EB1                     	;# 
  2022     1EBB                     	;# 
  2023     1EBC                     	;# 
  2024     1EBD                     	;# 
  2025     1EBE                     	;# 
  2026     1EC3                     	;# 
  2027     1EC5                     	;# 
  2028     1EC6                     	;# 
  2029     1EC7                     	;# 
  2030     1ECB                     	;# 
  2031     1ECC                     	;# 
  2032     1ECD                     	;# 
  2033     1ECE                     	;# 
  2034     1F10                     	;# 
  2035     1F11                     	;# 
  2036     1F12                     	;# 
  2037     1F13                     	;# 
  2038     1F14                     	;# 
  2039     1F15                     	;# 
  2040     1F1C                     	;# 
  2041     1F1D                     	;# 
  2042     1F1E                     	;# 
  2043     1F1F                     	;# 
  2044     1F20                     	;# 
  2045     1F21                     	;# 
  2046     1F22                     	;# 
  2047     1F23                     	;# 
  2048     1F24                     	;# 
  2049     1F25                     	;# 
  2050     1F26                     	;# 
  2051     1F27                     	;# 
  2052     1F38                     	;# 
  2053     1F39                     	;# 
  2054     1F3A                     	;# 
  2055     1F3B                     	;# 
  2056     1F3C                     	;# 
  2057     1F3D                     	;# 
  2058     1F3E                     	;# 
  2059     1F3F                     	;# 
  2060     1F43                     	;# 
  2061     1F44                     	;# 
  2062     1F45                     	;# 
  2063     1F46                     	;# 
  2064     1F47                     	;# 
  2065     1F48                     	;# 
  2066     1F49                     	;# 
  2067     1F4A                     	;# 
  2068     1F4E                     	;# 
  2069     1F4F                     	;# 
  2070     1F50                     	;# 
  2071     1F51                     	;# 
  2072     1F52                     	;# 
  2073     1F53                     	;# 
  2074     1F54                     	;# 
  2075     1F55                     	;# 
  2076     1FE4                     	;# 
  2077     1FE5                     	;# 
  2078     1FE6                     	;# 
  2079     1FE7                     	;# 
  2080     1FE8                     	;# 
  2081     1FE8                     	;# 
  2082     1FE9                     	;# 
  2083     1FEA                     	;# 
  2084     1FEA                     	;# 
  2085     1FEB                     	;# 
  2086     1FED                     	;# 
  2087     1FEE                     	;# 
  2088     1FEF                     	;# 
  2089     0000                     	;# 
  2090     0001                     	;# 
  2091     0002                     	;# 
  2092     0003                     	;# 
  2093     0004                     	;# 
  2094     0005                     	;# 
  2095     0006                     	;# 
  2096     0007                     	;# 
  2097     0008                     	;# 
  2098     0009                     	;# 
  2099     000A                     	;# 
  2100     000B                     	;# 
  2101     000C                     	;# 
  2102     000D                     	;# 
  2103     000E                     	;# 
  2104     0012                     	;# 
  2105     0013                     	;# 
  2106     0014                     	;# 
  2107     0018                     	;# 
  2108     0019                     	;# 
  2109     001A                     	;# 
  2110     009B                     	;# 
  2111     009B                     	;# 
  2112     009C                     	;# 
  2113     009D                     	;# 
  2114     009E                     	;# 
  2115     009F                     	;# 
  2116     0119                     	;# 
  2117     0119                     	;# 
  2118     0119                     	;# 
  2119     011A                     	;# 
  2120     011A                     	;# 
  2121     011A                     	;# 
  2122     011B                     	;# 
  2123     011B                     	;# 
  2124     011B                     	;# 
  2125     011B                     	;# 
  2126     011B                     	;# 
  2127     011C                     	;# 
  2128     011C                     	;# 
  2129     011C                     	;# 
  2130     011D                     	;# 
  2131     011D                     	;# 
  2132     011D                     	;# 
  2133     011E                     	;# 
  2134     011E                     	;# 
  2135     011E                     	;# 
  2136     011F                     	;# 
  2137     011F                     	;# 
  2138     011F                     	;# 
  2139     011F                     	;# 
  2140     011F                     	;# 
  2141     018C                     	;# 
  2142     018D                     	;# 
  2143     018E                     	;# 
  2144     018F                     	;# 
  2145     0190                     	;# 
  2146     0191                     	;# 
  2147     0192                     	;# 
  2148     020C                     	;# 
  2149     020C                     	;# 
  2150     020D                     	;# 
  2151     020E                     	;# 
  2152     020F                     	;# 
  2153     020F                     	;# 
  2154     0210                     	;# 
  2155     0210                     	;# 
  2156     0211                     	;# 
  2157     0211                     	;# 
  2158     028C                     	;# 
  2159     028C                     	;# 
  2160     028D                     	;# 
  2161     028D                     	;# 
  2162     028E                     	;# 
  2163     028F                     	;# 
  2164     0290                     	;# 
  2165     0291                     	;# 
  2166     030C                     	;# 
  2167     030C                     	;# 
  2168     030D                     	;# 
  2169     030E                     	;# 
  2170     030F                     	;# 
  2171     0310                     	;# 
  2172     0310                     	;# 
  2173     0311                     	;# 
  2174     0312                     	;# 
  2175     0313                     	;# 
  2176     0314                     	;# 
  2177     0314                     	;# 
  2178     0315                     	;# 
  2179     0316                     	;# 
  2180     0318                     	;# 
  2181     0318                     	;# 
  2182     0319                     	;# 
  2183     031A                     	;# 
  2184     031C                     	;# 
  2185     031C                     	;# 
  2186     031D                     	;# 
  2187     031E                     	;# 
  2188     038C                     	;# 
  2189     038C                     	;# 
  2190     038D                     	;# 
  2191     038E                     	;# 
  2192     058C                     	;# 
  2193     058C                     	;# 
  2194     058D                     	;# 
  2195     058E                     	;# 
  2196     058F                     	;# 
  2197     058F                     	;# 
  2198     0590                     	;# 
  2199     0591                     	;# 
  2200     0592                     	;# 
  2201     0593                     	;# 
  2202     059C                     	;# 
  2203     059C                     	;# 
  2204     059D                     	;# 
  2205     059D                     	;# 
  2206     059E                     	;# 
  2207     059F                     	;# 
  2208     060C                     	;# 
  2209     060D                     	;# 
  2210     060E                     	;# 
  2211     060F                     	;# 
  2212     0610                     	;# 
  2213     0611                     	;# 
  2214     0612                     	;# 
  2215     0613                     	;# 
  2216     0614                     	;# 
  2217     070C                     	;# 
  2218     070D                     	;# 
  2219     070E                     	;# 
  2220     070F                     	;# 
  2221     0710                     	;# 
  2222     0711                     	;# 
  2223     0712                     	;# 
  2224     0713                     	;# 
  2225     0716                     	;# 
  2226     0717                     	;# 
  2227     0718                     	;# 
  2228     0719                     	;# 
  2229     071A                     	;# 
  2230     071B                     	;# 
  2231     071C                     	;# 
  2232     071D                     	;# 
  2233     0796                     	;# 
  2234     0797                     	;# 
  2235     0798                     	;# 
  2236     0799                     	;# 
  2237     079A                     	;# 
  2238     079B                     	;# 
  2239     080C                     	;# 
  2240     080D                     	;# 
  2241     080E                     	;# 
  2242     080F                     	;# 
  2243     0810                     	;# 
  2244     0811                     	;# 
  2245     0812                     	;# 
  2246     0813                     	;# 
  2247     0814                     	;# 
  2248     081A                     	;# 
  2249     081A                     	;# 
  2250     081B                     	;# 
  2251     081C                     	;# 
  2252     081C                     	;# 
  2253     081D                     	;# 
  2254     081E                     	;# 
  2255     081F                     	;# 
  2256     088C                     	;# 
  2257     088D                     	;# 
  2258     088E                     	;# 
  2259     088F                     	;# 
  2260     0890                     	;# 
  2261     0891                     	;# 
  2262     0892                     	;# 
  2263     0893                     	;# 
  2264     0895                     	;# 
  2265     0896                     	;# 
  2266     090C                     	;# 
  2267     090E                     	;# 
  2268     090F                     	;# 
  2269     091F                     	;# 
  2270     098F                     	;# 
  2271     098F                     	;# 
  2272     0990                     	;# 
  2273     0991                     	;# 
  2274     0992                     	;# 
  2275     0993                     	;# 
  2276     0994                     	;# 
  2277     0995                     	;# 
  2278     0996                     	;# 
  2279     0997                     	;# 
  2280     0A19                     	;# 
  2281     0A19                     	;# 
  2282     0A1A                     	;# 
  2283     0A1A                     	;# 
  2284     0A1B                     	;# 
  2285     0A1B                     	;# 
  2286     0A1B                     	;# 
  2287     0A1C                     	;# 
  2288     0A1C                     	;# 
  2289     0A1D                     	;# 
  2290     0A1D                     	;# 
  2291     0A1E                     	;# 
  2292     0A1E                     	;# 
  2293     0A1F                     	;# 
  2294     0A1F                     	;# 
  2295     0A1F                     	;# 
  2296     1E0F                     	;# 
  2297     1E10                     	;# 
  2298     1E11                     	;# 
  2299     1E12                     	;# 
  2300     1E13                     	;# 
  2301     1E14                     	;# 
  2302     1E15                     	;# 
  2303     1E16                     	;# 
  2304     1E17                     	;# 
  2305     1E18                     	;# 
  2306     1E19                     	;# 
  2307     1E1A                     	;# 
  2308     1E1B                     	;# 
  2309     1E1C                     	;# 
  2310     1E1D                     	;# 
  2311     1E1E                     	;# 
  2312     1E1F                     	;# 
  2313     1E20                     	;# 
  2314     1E21                     	;# 
  2315     1E22                     	;# 
  2316     1E23                     	;# 
  2317     1E24                     	;# 
  2318     1E25                     	;# 
  2319     1E26                     	;# 
  2320     1E27                     	;# 
  2321     1E28                     	;# 
  2322     1E29                     	;# 
  2323     1E2A                     	;# 
  2324     1E2B                     	;# 
  2325     1E2C                     	;# 
  2326     1E2D                     	;# 
  2327     1E2E                     	;# 
  2328     1E2F                     	;# 
  2329     1E30                     	;# 
  2330     1E31                     	;# 
  2331     1E32                     	;# 
  2332     1E33                     	;# 
  2333     1E34                     	;# 
  2334     1E35                     	;# 
  2335     1E36                     	;# 
  2336     1E37                     	;# 
  2337     1E8F                     	;# 
  2338     1E90                     	;# 
  2339     1E91                     	;# 
  2340     1E92                     	;# 
  2341     1E93                     	;# 
  2342     1E9C                     	;# 
  2343     1EA1                     	;# 
  2344     1EA2                     	;# 
  2345     1EB1                     	;# 
  2346     1EBB                     	;# 
  2347     1EBC                     	;# 
  2348     1EBD                     	;# 
  2349     1EBE                     	;# 
  2350     1EC3                     	;# 
  2351     1EC5                     	;# 
  2352     1EC6                     	;# 
  2353     1EC7                     	;# 
  2354     1ECB                     	;# 
  2355     1ECC                     	;# 
  2356     1ECD                     	;# 
  2357     1ECE                     	;# 
  2358     1F10                     	;# 
  2359     1F11                     	;# 
  2360     1F12                     	;# 
  2361     1F13                     	;# 
  2362     1F14                     	;# 
  2363     1F15                     	;# 
  2364     1F1C                     	;# 
  2365     1F1D                     	;# 
  2366     1F1E                     	;# 
  2367     1F1F                     	;# 
  2368     1F20                     	;# 
  2369     1F21                     	;# 
  2370     1F22                     	;# 
  2371     1F23                     	;# 
  2372     1F24                     	;# 
  2373     1F25                     	;# 
  2374     1F26                     	;# 
  2375     1F27                     	;# 
  2376     1F38                     	;# 
  2377     1F39                     	;# 
  2378     1F3A                     	;# 
  2379     1F3B                     	;# 
  2380     1F3C                     	;# 
  2381     1F3D                     	;# 
  2382     1F3E                     	;# 
  2383     1F3F                     	;# 
  2384     1F43                     	;# 
  2385     1F44                     	;# 
  2386     1F45                     	;# 
  2387     1F46                     	;# 
  2388     1F47                     	;# 
  2389     1F48                     	;# 
  2390     1F49                     	;# 
  2391     1F4A                     	;# 
  2392     1F4E                     	;# 
  2393     1F4F                     	;# 
  2394     1F50                     	;# 
  2395     1F51                     	;# 
  2396     1F52                     	;# 
  2397     1F53                     	;# 
  2398     1F54                     	;# 
  2399     1F55                     	;# 
  2400     1FE4                     	;# 
  2401     1FE5                     	;# 
  2402     1FE6                     	;# 
  2403     1FE7                     	;# 
  2404     1FE8                     	;# 
  2405     1FE8                     	;# 
  2406     1FE9                     	;# 
  2407     1FEA                     	;# 
  2408     1FEA                     	;# 
  2409     1FEB                     	;# 
  2410     1FED                     	;# 
  2411     1FEE                     	;# 
  2412     1FEF                     	;# 
  2413     0000                     	;# 
  2414     0001                     	;# 
  2415     0002                     	;# 
  2416     0003                     	;# 
  2417     0004                     	;# 
  2418     0005                     	;# 
  2419     0006                     	;# 
  2420     0007                     	;# 
  2421     0008                     	;# 
  2422     0009                     	;# 
  2423     000A                     	;# 
  2424     000B                     	;# 
  2425     000C                     	;# 
  2426     000D                     	;# 
  2427     000E                     	;# 
  2428     0012                     	;# 
  2429     0013                     	;# 
  2430     0014                     	;# 
  2431     0018                     	;# 
  2432     0019                     	;# 
  2433     001A                     	;# 
  2434     009B                     	;# 
  2435     009B                     	;# 
  2436     009C                     	;# 
  2437     009D                     	;# 
  2438     009E                     	;# 
  2439     009F                     	;# 
  2440     0119                     	;# 
  2441     0119                     	;# 
  2442     0119                     	;# 
  2443     011A                     	;# 
  2444     011A                     	;# 
  2445     011A                     	;# 
  2446     011B                     	;# 
  2447     011B                     	;# 
  2448     011B                     	;# 
  2449     011B                     	;# 
  2450     011B                     	;# 
  2451     011C                     	;# 
  2452     011C                     	;# 
  2453     011C                     	;# 
  2454     011D                     	;# 
  2455     011D                     	;# 
  2456     011D                     	;# 
  2457     011E                     	;# 
  2458     011E                     	;# 
  2459     011E                     	;# 
  2460     011F                     	;# 
  2461     011F                     	;# 
  2462     011F                     	;# 
  2463     011F                     	;# 
  2464     011F                     	;# 
  2465     018C                     	;# 
  2466     018D                     	;# 
  2467     018E                     	;# 
  2468     018F                     	;# 
  2469     0190                     	;# 
  2470     0191                     	;# 
  2471     0192                     	;# 
  2472     020C                     	;# 
  2473     020C                     	;# 
  2474     020D                     	;# 
  2475     020E                     	;# 
  2476     020F                     	;# 
  2477     020F                     	;# 
  2478     0210                     	;# 
  2479     0210                     	;# 
  2480     0211                     	;# 
  2481     0211                     	;# 
  2482     028C                     	;# 
  2483     028C                     	;# 
  2484     028D                     	;# 
  2485     028D                     	;# 
  2486     028E                     	;# 
  2487     028F                     	;# 
  2488     0290                     	;# 
  2489     0291                     	;# 
  2490     030C                     	;# 
  2491     030C                     	;# 
  2492     030D                     	;# 
  2493     030E                     	;# 
  2494     030F                     	;# 
  2495     0310                     	;# 
  2496     0310                     	;# 
  2497     0311                     	;# 
  2498     0312                     	;# 
  2499     0313                     	;# 
  2500     0314                     	;# 
  2501     0314                     	;# 
  2502     0315                     	;# 
  2503     0316                     	;# 
  2504     0318                     	;# 
  2505     0318                     	;# 
  2506     0319                     	;# 
  2507     031A                     	;# 
  2508     031C                     	;# 
  2509     031C                     	;# 
  2510     031D                     	;# 
  2511     031E                     	;# 
  2512     038C                     	;# 
  2513     038C                     	;# 
  2514     038D                     	;# 
  2515     038E                     	;# 
  2516     058C                     	;# 
  2517     058C                     	;# 
  2518     058D                     	;# 
  2519     058E                     	;# 
  2520     058F                     	;# 
  2521     058F                     	;# 
  2522     0590                     	;# 
  2523     0591                     	;# 
  2524     0592                     	;# 
  2525     0593                     	;# 
  2526     059C                     	;# 
  2527     059C                     	;# 
  2528     059D                     	;# 
  2529     059D                     	;# 
  2530     059E                     	;# 
  2531     059F                     	;# 
  2532     060C                     	;# 
  2533     060D                     	;# 
  2534     060E                     	;# 
  2535     060F                     	;# 
  2536     0610                     	;# 
  2537     0611                     	;# 
  2538     0612                     	;# 
  2539     0613                     	;# 
  2540     0614                     	;# 
  2541     070C                     	;# 
  2542     070D                     	;# 
  2543     070E                     	;# 
  2544     070F                     	;# 
  2545     0710                     	;# 
  2546     0711                     	;# 
  2547     0712                     	;# 
  2548     0713                     	;# 
  2549     0716                     	;# 
  2550     0717                     	;# 
  2551     0718                     	;# 
  2552     0719                     	;# 
  2553     071A                     	;# 
  2554     071B                     	;# 
  2555     071C                     	;# 
  2556     071D                     	;# 
  2557     0796                     	;# 
  2558     0797                     	;# 
  2559     0798                     	;# 
  2560     0799                     	;# 
  2561     079A                     	;# 
  2562     079B                     	;# 
  2563     080C                     	;# 
  2564     080D                     	;# 
  2565     080E                     	;# 
  2566     080F                     	;# 
  2567     0810                     	;# 
  2568     0811                     	;# 
  2569     0812                     	;# 
  2570     0813                     	;# 
  2571     0814                     	;# 
  2572     081A                     	;# 
  2573     081A                     	;# 
  2574     081B                     	;# 
  2575     081C                     	;# 
  2576     081C                     	;# 
  2577     081D                     	;# 
  2578     081E                     	;# 
  2579     081F                     	;# 
  2580     088C                     	;# 
  2581     088D                     	;# 
  2582     088E                     	;# 
  2583     088F                     	;# 
  2584     0890                     	;# 
  2585     0891                     	;# 
  2586     0892                     	;# 
  2587     0893                     	;# 
  2588     0895                     	;# 
  2589     0896                     	;# 
  2590     090C                     	;# 
  2591     090E                     	;# 
  2592     090F                     	;# 
  2593     091F                     	;# 
  2594     098F                     	;# 
  2595     098F                     	;# 
  2596     0990                     	;# 
  2597     0991                     	;# 
  2598     0992                     	;# 
  2599     0993                     	;# 
  2600     0994                     	;# 
  2601     0995                     	;# 
  2602     0996                     	;# 
  2603     0997                     	;# 
  2604     0A19                     	;# 
  2605     0A19                     	;# 
  2606     0A1A                     	;# 
  2607     0A1A                     	;# 
  2608     0A1B                     	;# 
  2609     0A1B                     	;# 
  2610     0A1B                     	;# 
  2611     0A1C                     	;# 
  2612     0A1C                     	;# 
  2613     0A1D                     	;# 
  2614     0A1D                     	;# 
  2615     0A1E                     	;# 
  2616     0A1E                     	;# 
  2617     0A1F                     	;# 
  2618     0A1F                     	;# 
  2619     0A1F                     	;# 
  2620     1E0F                     	;# 
  2621     1E10                     	;# 
  2622     1E11                     	;# 
  2623     1E12                     	;# 
  2624     1E13                     	;# 
  2625     1E14                     	;# 
  2626     1E15                     	;# 
  2627     1E16                     	;# 
  2628     1E17                     	;# 
  2629     1E18                     	;# 
  2630     1E19                     	;# 
  2631     1E1A                     	;# 
  2632     1E1B                     	;# 
  2633     1E1C                     	;# 
  2634     1E1D                     	;# 
  2635     1E1E                     	;# 
  2636     1E1F                     	;# 
  2637     1E20                     	;# 
  2638     1E21                     	;# 
  2639     1E22                     	;# 
  2640     1E23                     	;# 
  2641     1E24                     	;# 
  2642     1E25                     	;# 
  2643     1E26                     	;# 
  2644     1E27                     	;# 
  2645     1E28                     	;# 
  2646     1E29                     	;# 
  2647     1E2A                     	;# 
  2648     1E2B                     	;# 
  2649     1E2C                     	;# 
  2650     1E2D                     	;# 
  2651     1E2E                     	;# 
  2652     1E2F                     	;# 
  2653     1E30                     	;# 
  2654     1E31                     	;# 
  2655     1E32                     	;# 
  2656     1E33                     	;# 
  2657     1E34                     	;# 
  2658     1E35                     	;# 
  2659     1E36                     	;# 
  2660     1E37                     	;# 
  2661     1E8F                     	;# 
  2662     1E90                     	;# 
  2663     1E91                     	;# 
  2664     1E92                     	;# 
  2665     1E93                     	;# 
  2666     1E9C                     	;# 
  2667     1EA1                     	;# 
  2668     1EA2                     	;# 
  2669     1EB1                     	;# 
  2670     1EBB                     	;# 
  2671     1EBC                     	;# 
  2672     1EBD                     	;# 
  2673     1EBE                     	;# 
  2674     1EC3                     	;# 
  2675     1EC5                     	;# 
  2676     1EC6                     	;# 
  2677     1EC7                     	;# 
  2678     1ECB                     	;# 
  2679     1ECC                     	;# 
  2680     1ECD                     	;# 
  2681     1ECE                     	;# 
  2682     1F10                     	;# 
  2683     1F11                     	;# 
  2684     1F12                     	;# 
  2685     1F13                     	;# 
  2686     1F14                     	;# 
  2687     1F15                     	;# 
  2688     1F1C                     	;# 
  2689     1F1D                     	;# 
  2690     1F1E                     	;# 
  2691     1F1F                     	;# 
  2692     1F20                     	;# 
  2693     1F21                     	;# 
  2694     1F22                     	;# 
  2695     1F23                     	;# 
  2696     1F24                     	;# 
  2697     1F25                     	;# 
  2698     1F26                     	;# 
  2699     1F27                     	;# 
  2700     1F38                     	;# 
  2701     1F39                     	;# 
  2702     1F3A                     	;# 
  2703     1F3B                     	;# 
  2704     1F3C                     	;# 
  2705     1F3D                     	;# 
  2706     1F3E                     	;# 
  2707     1F3F                     	;# 
  2708     1F43                     	;# 
  2709     1F44                     	;# 
  2710     1F45                     	;# 
  2711     1F46                     	;# 
  2712     1F47                     	;# 
  2713     1F48                     	;# 
  2714     1F49                     	;# 
  2715     1F4A                     	;# 
  2716     1F4E                     	;# 
  2717     1F4F                     	;# 
  2718     1F50                     	;# 
  2719     1F51                     	;# 
  2720     1F52                     	;# 
  2721     1F53                     	;# 
  2722     1F54                     	;# 
  2723     1F55                     	;# 
  2724     1FE4                     	;# 
  2725     1FE5                     	;# 
  2726     1FE6                     	;# 
  2727     1FE7                     	;# 
  2728     1FE8                     	;# 
  2729     1FE8                     	;# 
  2730     1FE9                     	;# 
  2731     1FEA                     	;# 
  2732     1FEA                     	;# 
  2733     1FEB                     	;# 
  2734     1FED                     	;# 
  2735     1FEE                     	;# 
  2736     1FEF                     	;# 
  2737     0000                     	;# 
  2738     0001                     	;# 
  2739     0002                     	;# 
  2740     0003                     	;# 
  2741     0004                     	;# 
  2742     0005                     	;# 
  2743     0006                     	;# 
  2744     0007                     	;# 
  2745     0008                     	;# 
  2746     0009                     	;# 
  2747     000A                     	;# 
  2748     000B                     	;# 
  2749     000C                     	;# 
  2750     000D                     	;# 
  2751     000E                     	;# 
  2752     0012                     	;# 
  2753     0013                     	;# 
  2754     0014                     	;# 
  2755     0018                     	;# 
  2756     0019                     	;# 
  2757     001A                     	;# 
  2758     009B                     	;# 
  2759     009B                     	;# 
  2760     009C                     	;# 
  2761     009D                     	;# 
  2762     009E                     	;# 
  2763     009F                     	;# 
  2764     0119                     	;# 
  2765     0119                     	;# 
  2766     0119                     	;# 
  2767     011A                     	;# 
  2768     011A                     	;# 
  2769     011A                     	;# 
  2770     011B                     	;# 
  2771     011B                     	;# 
  2772     011B                     	;# 
  2773     011B                     	;# 
  2774     011B                     	;# 
  2775     011C                     	;# 
  2776     011C                     	;# 
  2777     011C                     	;# 
  2778     011D                     	;# 
  2779     011D                     	;# 
  2780     011D                     	;# 
  2781     011E                     	;# 
  2782     011E                     	;# 
  2783     011E                     	;# 
  2784     011F                     	;# 
  2785     011F                     	;# 
  2786     011F                     	;# 
  2787     011F                     	;# 
  2788     011F                     	;# 
  2789     018C                     	;# 
  2790     018D                     	;# 
  2791     018E                     	;# 
  2792     018F                     	;# 
  2793     0190                     	;# 
  2794     0191                     	;# 
  2795     0192                     	;# 
  2796     020C                     	;# 
  2797     020C                     	;# 
  2798     020D                     	;# 
  2799     020E                     	;# 
  2800     020F                     	;# 
  2801     020F                     	;# 
  2802     0210                     	;# 
  2803     0210                     	;# 
  2804     0211                     	;# 
  2805     0211                     	;# 
  2806     028C                     	;# 
  2807     028C                     	;# 
  2808     028D                     	;# 
  2809     028D                     	;# 
  2810     028E                     	;# 
  2811     028F                     	;# 
  2812     0290                     	;# 
  2813     0291                     	;# 
  2814     030C                     	;# 
  2815     030C                     	;# 
  2816     030D                     	;# 
  2817     030E                     	;# 
  2818     030F                     	;# 
  2819     0310                     	;# 
  2820     0310                     	;# 
  2821     0311                     	;# 
  2822     0312                     	;# 
  2823     0313                     	;# 
  2824     0314                     	;# 
  2825     0314                     	;# 
  2826     0315                     	;# 
  2827     0316                     	;# 
  2828     0318                     	;# 
  2829     0318                     	;# 
  2830     0319                     	;# 
  2831     031A                     	;# 
  2832     031C                     	;# 
  2833     031C                     	;# 
  2834     031D                     	;# 
  2835     031E                     	;# 
  2836     038C                     	;# 
  2837     038C                     	;# 
  2838     038D                     	;# 
  2839     038E                     	;# 
  2840     058C                     	;# 
  2841     058C                     	;# 
  2842     058D                     	;# 
  2843     058E                     	;# 
  2844     058F                     	;# 
  2845     058F                     	;# 
  2846     0590                     	;# 
  2847     0591                     	;# 
  2848     0592                     	;# 
  2849     0593                     	;# 
  2850     059C                     	;# 
  2851     059C                     	;# 
  2852     059D                     	;# 
  2853     059D                     	;# 
  2854     059E                     	;# 
  2855     059F                     	;# 
  2856     060C                     	;# 
  2857     060D                     	;# 
  2858     060E                     	;# 
  2859     060F                     	;# 
  2860     0610                     	;# 
  2861     0611                     	;# 
  2862     0612                     	;# 
  2863     0613                     	;# 
  2864     0614                     	;# 
  2865     070C                     	;# 
  2866     070D                     	;# 
  2867     070E                     	;# 
  2868     070F                     	;# 
  2869     0710                     	;# 
  2870     0711                     	;# 
  2871     0712                     	;# 
  2872     0713                     	;# 
  2873     0716                     	;# 
  2874     0717                     	;# 
  2875     0718                     	;# 
  2876     0719                     	;# 
  2877     071A                     	;# 
  2878     071B                     	;# 
  2879     071C                     	;# 
  2880     071D                     	;# 
  2881     0796                     	;# 
  2882     0797                     	;# 
  2883     0798                     	;# 
  2884     0799                     	;# 
  2885     079A                     	;# 
  2886     079B                     	;# 
  2887     080C                     	;# 
  2888     080D                     	;# 
  2889     080E                     	;# 
  2890     080F                     	;# 
  2891     0810                     	;# 
  2892     0811                     	;# 
  2893     0812                     	;# 
  2894     0813                     	;# 
  2895     0814                     	;# 
  2896     081A                     	;# 
  2897     081A                     	;# 
  2898     081B                     	;# 
  2899     081C                     	;# 
  2900     081C                     	;# 
  2901     081D                     	;# 
  2902     081E                     	;# 
  2903     081F                     	;# 
  2904     088C                     	;# 
  2905     088D                     	;# 
  2906     088E                     	;# 
  2907     088F                     	;# 
  2908     0890                     	;# 
  2909     0891                     	;# 
  2910     0892                     	;# 
  2911     0893                     	;# 
  2912     0895                     	;# 
  2913     0896                     	;# 
  2914     090C                     	;# 
  2915     090E                     	;# 
  2916     090F                     	;# 
  2917     091F                     	;# 
  2918     098F                     	;# 
  2919     098F                     	;# 
  2920     0990                     	;# 
  2921     0991                     	;# 
  2922     0992                     	;# 
  2923     0993                     	;# 
  2924     0994                     	;# 
  2925     0995                     	;# 
  2926     0996                     	;# 
  2927     0997                     	;# 
  2928     0A19                     	;# 
  2929     0A19                     	;# 
  2930     0A1A                     	;# 
  2931     0A1A                     	;# 
  2932     0A1B                     	;# 
  2933     0A1B                     	;# 
  2934     0A1B                     	;# 
  2935     0A1C                     	;# 
  2936     0A1C                     	;# 
  2937     0A1D                     	;# 
  2938     0A1D                     	;# 
  2939     0A1E                     	;# 
  2940     0A1E                     	;# 
  2941     0A1F                     	;# 
  2942     0A1F                     	;# 
  2943     0A1F                     	;# 
  2944     1E0F                     	;# 
  2945     1E10                     	;# 
  2946     1E11                     	;# 
  2947     1E12                     	;# 
  2948     1E13                     	;# 
  2949     1E14                     	;# 
  2950     1E15                     	;# 
  2951     1E16                     	;# 
  2952     1E17                     	;# 
  2953     1E18                     	;# 
  2954     1E19                     	;# 
  2955     1E1A                     	;# 
  2956     1E1B                     	;# 
  2957     1E1C                     	;# 
  2958     1E1D                     	;# 
  2959     1E1E                     	;# 
  2960     1E1F                     	;# 
  2961     1E20                     	;# 
  2962     1E21                     	;# 
  2963     1E22                     	;# 
  2964     1E23                     	;# 
  2965     1E24                     	;# 
  2966     1E25                     	;# 
  2967     1E26                     	;# 
  2968     1E27                     	;# 
  2969     1E28                     	;# 
  2970     1E29                     	;# 
  2971     1E2A                     	;# 
  2972     1E2B                     	;# 
  2973     1E2C                     	;# 
  2974     1E2D                     	;# 
  2975     1E2E                     	;# 
  2976     1E2F                     	;# 
  2977     1E30                     	;# 
  2978     1E31                     	;# 
  2979     1E32                     	;# 
  2980     1E33                     	;# 
  2981     1E34                     	;# 
  2982     1E35                     	;# 
  2983     1E36                     	;# 
  2984     1E37                     	;# 
  2985     1E8F                     	;# 
  2986     1E90                     	;# 
  2987     1E91                     	;# 
  2988     1E92                     	;# 
  2989     1E93                     	;# 
  2990     1E9C                     	;# 
  2991     1EA1                     	;# 
  2992     1EA2                     	;# 
  2993     1EB1                     	;# 
  2994     1EBB                     	;# 
  2995     1EBC                     	;# 
  2996     1EBD                     	;# 
  2997     1EBE                     	;# 
  2998     1EC3                     	;# 
  2999     1EC5                     	;# 
  3000     1EC6                     	;# 
  3001     1EC7                     	;# 
  3002     1ECB                     	;# 
  3003     1ECC                     	;# 
  3004     1ECD                     	;# 
  3005     1ECE                     	;# 
  3006     1F10                     	;# 
  3007     1F11                     	;# 
  3008     1F12                     	;# 
  3009     1F13                     	;# 
  3010     1F14                     	;# 
  3011     1F15                     	;# 
  3012     1F1C                     	;# 
  3013     1F1D                     	;# 
  3014     1F1E                     	;# 
  3015     1F1F                     	;# 
  3016     1F20                     	;# 
  3017     1F21                     	;# 
  3018     1F22                     	;# 
  3019     1F23                     	;# 
  3020     1F24                     	;# 
  3021     1F25                     	;# 
  3022     1F26                     	;# 
  3023     1F27                     	;# 
  3024     1F38                     	;# 
  3025     1F39                     	;# 
  3026     1F3A                     	;# 
  3027     1F3B                     	;# 
  3028     1F3C                     	;# 
  3029     1F3D                     	;# 
  3030     1F3E                     	;# 
  3031     1F3F                     	;# 
  3032     1F43                     	;# 
  3033     1F44                     	;# 
  3034     1F45                     	;# 
  3035     1F46                     	;# 
  3036     1F47                     	;# 
  3037     1F48                     	;# 
  3038     1F49                     	;# 
  3039     1F4A                     	;# 
  3040     1F4E                     	;# 
  3041     1F4F                     	;# 
  3042     1F50                     	;# 
  3043     1F51                     	;# 
  3044     1F52                     	;# 
  3045     1F53                     	;# 
  3046     1F54                     	;# 
  3047     1F55                     	;# 
  3048     1FE4                     	;# 
  3049     1FE5                     	;# 
  3050     1FE6                     	;# 
  3051     1FE7                     	;# 
  3052     1FE8                     	;# 
  3053     1FE8                     	;# 
  3054     1FE9                     	;# 
  3055     1FEA                     	;# 
  3056     1FEA                     	;# 
  3057     1FEB                     	;# 
  3058     1FED                     	;# 
  3059     1FEE                     	;# 
  3060     1FEF                     	;# 
  3061     0000                     	;# 
  3062     0001                     	;# 
  3063     0002                     	;# 
  3064     0003                     	;# 
  3065     0004                     	;# 
  3066     0005                     	;# 
  3067     0006                     	;# 
  3068     0007                     	;# 
  3069     0008                     	;# 
  3070     0009                     	;# 
  3071     000A                     	;# 
  3072     000B                     	;# 
  3073     000C                     	;# 
  3074     000D                     	;# 
  3075     000E                     	;# 
  3076     0012                     	;# 
  3077     0013                     	;# 
  3078     0014                     	;# 
  3079     0018                     	;# 
  3080     0019                     	;# 
  3081     001A                     	;# 
  3082     009B                     	;# 
  3083     009B                     	;# 
  3084     009C                     	;# 
  3085     009D                     	;# 
  3086     009E                     	;# 
  3087     009F                     	;# 
  3088     0119                     	;# 
  3089     0119                     	;# 
  3090     0119                     	;# 
  3091     011A                     	;# 
  3092     011A                     	;# 
  3093     011A                     	;# 
  3094     011B                     	;# 
  3095     011B                     	;# 
  3096     011B                     	;# 
  3097     011B                     	;# 
  3098     011B                     	;# 
  3099     011C                     	;# 
  3100     011C                     	;# 
  3101     011C                     	;# 
  3102     011D                     	;# 
  3103     011D                     	;# 
  3104     011D                     	;# 
  3105     011E                     	;# 
  3106     011E                     	;# 
  3107     011E                     	;# 
  3108     011F                     	;# 
  3109     011F                     	;# 
  3110     011F                     	;# 
  3111     011F                     	;# 
  3112     011F                     	;# 
  3113     018C                     	;# 
  3114     018D                     	;# 
  3115     018E                     	;# 
  3116     018F                     	;# 
  3117     0190                     	;# 
  3118     0191                     	;# 
  3119     0192                     	;# 
  3120     020C                     	;# 
  3121     020C                     	;# 
  3122     020D                     	;# 
  3123     020E                     	;# 
  3124     020F                     	;# 
  3125     020F                     	;# 
  3126     0210                     	;# 
  3127     0210                     	;# 
  3128     0211                     	;# 
  3129     0211                     	;# 
  3130     028C                     	;# 
  3131     028C                     	;# 
  3132     028D                     	;# 
  3133     028D                     	;# 
  3134     028E                     	;# 
  3135     028F                     	;# 
  3136     0290                     	;# 
  3137     0291                     	;# 
  3138     030C                     	;# 
  3139     030C                     	;# 
  3140     030D                     	;# 
  3141     030E                     	;# 
  3142     030F                     	;# 
  3143     0310                     	;# 
  3144     0310                     	;# 
  3145     0311                     	;# 
  3146     0312                     	;# 
  3147     0313                     	;# 
  3148     0314                     	;# 
  3149     0314                     	;# 
  3150     0315                     	;# 
  3151     0316                     	;# 
  3152     0318                     	;# 
  3153     0318                     	;# 
  3154     0319                     	;# 
  3155     031A                     	;# 
  3156     031C                     	;# 
  3157     031C                     	;# 
  3158     031D                     	;# 
  3159     031E                     	;# 
  3160     038C                     	;# 
  3161     038C                     	;# 
  3162     038D                     	;# 
  3163     038E                     	;# 
  3164     058C                     	;# 
  3165     058C                     	;# 
  3166     058D                     	;# 
  3167     058E                     	;# 
  3168     058F                     	;# 
  3169     058F                     	;# 
  3170     0590                     	;# 
  3171     0591                     	;# 
  3172     0592                     	;# 
  3173     0593                     	;# 
  3174     059C                     	;# 
  3175     059C                     	;# 
  3176     059D                     	;# 
  3177     059D                     	;# 
  3178     059E                     	;# 
  3179     059F                     	;# 
  3180     060C                     	;# 
  3181     060D                     	;# 
  3182     060E                     	;# 
  3183     060F                     	;# 
  3184     0610                     	;# 
  3185     0611                     	;# 
  3186     0612                     	;# 
  3187     0613                     	;# 
  3188     0614                     	;# 
  3189     070C                     	;# 
  3190     070D                     	;# 
  3191     070E                     	;# 
  3192     070F                     	;# 
  3193     0710                     	;# 
  3194     0711                     	;# 
  3195     0712                     	;# 
  3196     0713                     	;# 
  3197     0716                     	;# 
  3198     0717                     	;# 
  3199     0718                     	;# 
  3200     0719                     	;# 
  3201     071A                     	;# 
  3202     071B                     	;# 
  3203     071C                     	;# 
  3204     071D                     	;# 
  3205     0796                     	;# 
  3206     0797                     	;# 
  3207     0798                     	;# 
  3208     0799                     	;# 
  3209     079A                     	;# 
  3210     079B                     	;# 
  3211     080C                     	;# 
  3212     080D                     	;# 
  3213     080E                     	;# 
  3214     080F                     	;# 
  3215     0810                     	;# 
  3216     0811                     	;# 
  3217     0812                     	;# 
  3218     0813                     	;# 
  3219     0814                     	;# 
  3220     081A                     	;# 
  3221     081A                     	;# 
  3222     081B                     	;# 
  3223     081C                     	;# 
  3224     081C                     	;# 
  3225     081D                     	;# 
  3226     081E                     	;# 
  3227     081F                     	;# 
  3228     088C                     	;# 
  3229     088D                     	;# 
  3230     088E                     	;# 
  3231     088F                     	;# 
  3232     0890                     	;# 
  3233     0891                     	;# 
  3234     0892                     	;# 
  3235     0893                     	;# 
  3236     0895                     	;# 
  3237     0896                     	;# 
  3238     090C                     	;# 
  3239     090E                     	;# 
  3240     090F                     	;# 
  3241     091F                     	;# 
  3242     098F                     	;# 
  3243     098F                     	;# 
  3244     0990                     	;# 
  3245     0991                     	;# 
  3246     0992                     	;# 
  3247     0993                     	;# 
  3248     0994                     	;# 
  3249     0995                     	;# 
  3250     0996                     	;# 
  3251     0997                     	;# 
  3252     0A19                     	;# 
  3253     0A19                     	;# 
  3254     0A1A                     	;# 
  3255     0A1A                     	;# 
  3256     0A1B                     	;# 
  3257     0A1B                     	;# 
  3258     0A1B                     	;# 
  3259     0A1C                     	;# 
  3260     0A1C                     	;# 
  3261     0A1D                     	;# 
  3262     0A1D                     	;# 
  3263     0A1E                     	;# 
  3264     0A1E                     	;# 
  3265     0A1F                     	;# 
  3266     0A1F                     	;# 
  3267     0A1F                     	;# 
  3268     1E0F                     	;# 
  3269     1E10                     	;# 
  3270     1E11                     	;# 
  3271     1E12                     	;# 
  3272     1E13                     	;# 
  3273     1E14                     	;# 
  3274     1E15                     	;# 
  3275     1E16                     	;# 
  3276     1E17                     	;# 
  3277     1E18                     	;# 
  3278     1E19                     	;# 
  3279     1E1A                     	;# 
  3280     1E1B                     	;# 
  3281     1E1C                     	;# 
  3282     1E1D                     	;# 
  3283     1E1E                     	;# 
  3284     1E1F                     	;# 
  3285     1E20                     	;# 
  3286     1E21                     	;# 
  3287     1E22                     	;# 
  3288     1E23                     	;# 
  3289     1E24                     	;# 
  3290     1E25                     	;# 
  3291     1E26                     	;# 
  3292     1E27                     	;# 
  3293     1E28                     	;# 
  3294     1E29                     	;# 
  3295     1E2A                     	;# 
  3296     1E2B                     	;# 
  3297     1E2C                     	;# 
  3298     1E2D                     	;# 
  3299     1E2E                     	;# 
  3300     1E2F                     	;# 
  3301     1E30                     	;# 
  3302     1E31                     	;# 
  3303     1E32                     	;# 
  3304     1E33                     	;# 
  3305     1E34                     	;# 
  3306     1E35                     	;# 
  3307     1E36                     	;# 
  3308     1E37                     	;# 
  3309     1E8F                     	;# 
  3310     1E90                     	;# 
  3311     1E91                     	;# 
  3312     1E92                     	;# 
  3313     1E93                     	;# 
  3314     1E9C                     	;# 
  3315     1EA1                     	;# 
  3316     1EA2                     	;# 
  3317     1EB1                     	;# 
  3318     1EBB                     	;# 
  3319     1EBC                     	;# 
  3320     1EBD                     	;# 
  3321     1EBE                     	;# 
  3322     1EC3                     	;# 
  3323     1EC5                     	;# 
  3324     1EC6                     	;# 
  3325     1EC7                     	;# 
  3326     1ECB                     	;# 
  3327     1ECC                     	;# 
  3328     1ECD                     	;# 
  3329     1ECE                     	;# 
  3330     1F10                     	;# 
  3331     1F11                     	;# 
  3332     1F12                     	;# 
  3333     1F13                     	;# 
  3334     1F14                     	;# 
  3335     1F15                     	;# 
  3336     1F1C                     	;# 
  3337     1F1D                     	;# 
  3338     1F1E                     	;# 
  3339     1F1F                     	;# 
  3340     1F20                     	;# 
  3341     1F21                     	;# 
  3342     1F22                     	;# 
  3343     1F23                     	;# 
  3344     1F24                     	;# 
  3345     1F25                     	;# 
  3346     1F26                     	;# 
  3347     1F27                     	;# 
  3348     1F38                     	;# 
  3349     1F39                     	;# 
  3350     1F3A                     	;# 
  3351     1F3B                     	;# 
  3352     1F3C                     	;# 
  3353     1F3D                     	;# 
  3354     1F3E                     	;# 
  3355     1F3F                     	;# 
  3356     1F43                     	;# 
  3357     1F44                     	;# 
  3358     1F45                     	;# 
  3359     1F46                     	;# 
  3360     1F47                     	;# 
  3361     1F48                     	;# 
  3362     1F49                     	;# 
  3363     1F4A                     	;# 
  3364     1F4E                     	;# 
  3365     1F4F                     	;# 
  3366     1F50                     	;# 
  3367     1F51                     	;# 
  3368     1F52                     	;# 
  3369     1F53                     	;# 
  3370     1F54                     	;# 
  3371     1F55                     	;# 
  3372     1FE4                     	;# 
  3373     1FE5                     	;# 
  3374     1FE6                     	;# 
  3375     1FE7                     	;# 
  3376     1FE8                     	;# 
  3377     1FE8                     	;# 
  3378     1FE9                     	;# 
  3379     1FEA                     	;# 
  3380     1FEA                     	;# 
  3381     1FEB                     	;# 
  3382     1FED                     	;# 
  3383     1FEE                     	;# 
  3384     1FEF                     	;# 
  3385     0000                     	;# 
  3386     0001                     	;# 
  3387     0002                     	;# 
  3388     0003                     	;# 
  3389     0004                     	;# 
  3390     0005                     	;# 
  3391     0006                     	;# 
  3392     0007                     	;# 
  3393     0008                     	;# 
  3394     0009                     	;# 
  3395     000A                     	;# 
  3396     000B                     	;# 
  3397     000C                     	;# 
  3398     000D                     	;# 
  3399     000E                     	;# 
  3400     0012                     	;# 
  3401     0013                     	;# 
  3402     0014                     	;# 
  3403     0018                     	;# 
  3404     0019                     	;# 
  3405     001A                     	;# 
  3406     009B                     	;# 
  3407     009B                     	;# 
  3408     009C                     	;# 
  3409     009D                     	;# 
  3410     009E                     	;# 
  3411     009F                     	;# 
  3412     0119                     	;# 
  3413     0119                     	;# 
  3414     0119                     	;# 
  3415     011A                     	;# 
  3416     011A                     	;# 
  3417     011A                     	;# 
  3418     011B                     	;# 
  3419     011B                     	;# 
  3420     011B                     	;# 
  3421     011B                     	;# 
  3422     011B                     	;# 
  3423     011C                     	;# 
  3424     011C                     	;# 
  3425     011C                     	;# 
  3426     011D                     	;# 
  3427     011D                     	;# 
  3428     011D                     	;# 
  3429     011E                     	;# 
  3430     011E                     	;# 
  3431     011E                     	;# 
  3432     011F                     	;# 
  3433     011F                     	;# 
  3434     011F                     	;# 
  3435     011F                     	;# 
  3436     011F                     	;# 
  3437     018C                     	;# 
  3438     018D                     	;# 
  3439     018E                     	;# 
  3440     018F                     	;# 
  3441     0190                     	;# 
  3442     0191                     	;# 
  3443     0192                     	;# 
  3444     020C                     	;# 
  3445     020C                     	;# 
  3446     020D                     	;# 
  3447     020E                     	;# 
  3448     020F                     	;# 
  3449     020F                     	;# 
  3450     0210                     	;# 
  3451     0210                     	;# 
  3452     0211                     	;# 
  3453     0211                     	;# 
  3454     028C                     	;# 
  3455     028C                     	;# 
  3456     028D                     	;# 
  3457     028D                     	;# 
  3458     028E                     	;# 
  3459     028F                     	;# 
  3460     0290                     	;# 
  3461     0291                     	;# 
  3462     030C                     	;# 
  3463     030C                     	;# 
  3464     030D                     	;# 
  3465     030E                     	;# 
  3466     030F                     	;# 
  3467     0310                     	;# 
  3468     0310                     	;# 
  3469     0311                     	;# 
  3470     0312                     	;# 
  3471     0313                     	;# 
  3472     0314                     	;# 
  3473     0314                     	;# 
  3474     0315                     	;# 
  3475     0316                     	;# 
  3476     0318                     	;# 
  3477     0318                     	;# 
  3478     0319                     	;# 
  3479     031A                     	;# 
  3480     031C                     	;# 
  3481     031C                     	;# 
  3482     031D                     	;# 
  3483     031E                     	;# 
  3484     038C                     	;# 
  3485     038C                     	;# 
  3486     038D                     	;# 
  3487     038E                     	;# 
  3488     058C                     	;# 
  3489     058C                     	;# 
  3490     058D                     	;# 
  3491     058E                     	;# 
  3492     058F                     	;# 
  3493     058F                     	;# 
  3494     0590                     	;# 
  3495     0591                     	;# 
  3496     0592                     	;# 
  3497     0593                     	;# 
  3498     059C                     	;# 
  3499     059C                     	;# 
  3500     059D                     	;# 
  3501     059D                     	;# 
  3502     059E                     	;# 
  3503     059F                     	;# 
  3504     060C                     	;# 
  3505     060D                     	;# 
  3506     060E                     	;# 
  3507     060F                     	;# 
  3508     0610                     	;# 
  3509     0611                     	;# 
  3510     0612                     	;# 
  3511     0613                     	;# 
  3512     0614                     	;# 
  3513     070C                     	;# 
  3514     070D                     	;# 
  3515     070E                     	;# 
  3516     070F                     	;# 
  3517     0710                     	;# 
  3518     0711                     	;# 
  3519     0712                     	;# 
  3520     0713                     	;# 
  3521     0716                     	;# 
  3522     0717                     	;# 
  3523     0718                     	;# 
  3524     0719                     	;# 
  3525     071A                     	;# 
  3526     071B                     	;# 
  3527     071C                     	;# 
  3528     071D                     	;# 
  3529     0796                     	;# 
  3530     0797                     	;# 
  3531     0798                     	;# 
  3532     0799                     	;# 
  3533     079A                     	;# 
  3534     079B                     	;# 
  3535     080C                     	;# 
  3536     080D                     	;# 
  3537     080E                     	;# 
  3538     080F                     	;# 
  3539     0810                     	;# 
  3540     0811                     	;# 
  3541     0812                     	;# 
  3542     0813                     	;# 
  3543     0814                     	;# 
  3544     081A                     	;# 
  3545     081A                     	;# 
  3546     081B                     	;# 
  3547     081C                     	;# 
  3548     081C                     	;# 
  3549     081D                     	;# 
  3550     081E                     	;# 
  3551     081F                     	;# 
  3552     088C                     	;# 
  3553     088D                     	;# 
  3554     088E                     	;# 
  3555     088F                     	;# 
  3556     0890                     	;# 
  3557     0891                     	;# 
  3558     0892                     	;# 
  3559     0893                     	;# 
  3560     0895                     	;# 
  3561     0896                     	;# 
  3562     090C                     	;# 
  3563     090E                     	;# 
  3564     090F                     	;# 
  3565     091F                     	;# 
  3566     098F                     	;# 
  3567     098F                     	;# 
  3568     0990                     	;# 
  3569     0991                     	;# 
  3570     0992                     	;# 
  3571     0993                     	;# 
  3572     0994                     	;# 
  3573     0995                     	;# 
  3574     0996                     	;# 
  3575     0997                     	;# 
  3576     0A19                     	;# 
  3577     0A19                     	;# 
  3578     0A1A                     	;# 
  3579     0A1A                     	;# 
  3580     0A1B                     	;# 
  3581     0A1B                     	;# 
  3582     0A1B                     	;# 
  3583     0A1C                     	;# 
  3584     0A1C                     	;# 
  3585     0A1D                     	;# 
  3586     0A1D                     	;# 
  3587     0A1E                     	;# 
  3588     0A1E                     	;# 
  3589     0A1F                     	;# 
  3590     0A1F                     	;# 
  3591     0A1F                     	;# 
  3592     1E0F                     	;# 
  3593     1E10                     	;# 
  3594     1E11                     	;# 
  3595     1E12                     	;# 
  3596     1E13                     	;# 
  3597     1E14                     	;# 
  3598     1E15                     	;# 
  3599     1E16                     	;# 
  3600     1E17                     	;# 
  3601     1E18                     	;# 
  3602     1E19                     	;# 
  3603     1E1A                     	;# 
  3604     1E1B                     	;# 
  3605     1E1C                     	;# 
  3606     1E1D                     	;# 
  3607     1E1E                     	;# 
  3608     1E1F                     	;# 
  3609     1E20                     	;# 
  3610     1E21                     	;# 
  3611     1E22                     	;# 
  3612     1E23                     	;# 
  3613     1E24                     	;# 
  3614     1E25                     	;# 
  3615     1E26                     	;# 
  3616     1E27                     	;# 
  3617     1E28                     	;# 
  3618     1E29                     	;# 
  3619     1E2A                     	;# 
  3620     1E2B                     	;# 
  3621     1E2C                     	;# 
  3622     1E2D                     	;# 
  3623     1E2E                     	;# 
  3624     1E2F                     	;# 
  3625     1E30                     	;# 
  3626     1E31                     	;# 
  3627     1E32                     	;# 
  3628     1E33                     	;# 
  3629     1E34                     	;# 
  3630     1E35                     	;# 
  3631     1E36                     	;# 
  3632     1E37                     	;# 
  3633     1E8F                     	;# 
  3634     1E90                     	;# 
  3635     1E91                     	;# 
  3636     1E92                     	;# 
  3637     1E93                     	;# 
  3638     1E9C                     	;# 
  3639     1EA1                     	;# 
  3640     1EA2                     	;# 
  3641     1EB1                     	;# 
  3642     1EBB                     	;# 
  3643     1EBC                     	;# 
  3644     1EBD                     	;# 
  3645     1EBE                     	;# 
  3646     1EC3                     	;# 
  3647     1EC5                     	;# 
  3648     1EC6                     	;# 
  3649     1EC7                     	;# 
  3650     1ECB                     	;# 
  3651     1ECC                     	;# 
  3652     1ECD                     	;# 
  3653     1ECE                     	;# 
  3654     1F10                     	;# 
  3655     1F11                     	;# 
  3656     1F12                     	;# 
  3657     1F13                     	;# 
  3658     1F14                     	;# 
  3659     1F15                     	;# 
  3660     1F1C                     	;# 
  3661     1F1D                     	;# 
  3662     1F1E                     	;# 
  3663     1F1F                     	;# 
  3664     1F20                     	;# 
  3665     1F21                     	;# 
  3666     1F22                     	;# 
  3667     1F23                     	;# 
  3668     1F24                     	;# 
  3669     1F25                     	;# 
  3670     1F26                     	;# 
  3671     1F27                     	;# 
  3672     1F38                     	;# 
  3673     1F39                     	;# 
  3674     1F3A                     	;# 
  3675     1F3B                     	;# 
  3676     1F3C                     	;# 
  3677     1F3D                     	;# 
  3678     1F3E                     	;# 
  3679     1F3F                     	;# 
  3680     1F43                     	;# 
  3681     1F44                     	;# 
  3682     1F45                     	;# 
  3683     1F46                     	;# 
  3684     1F47                     	;# 
  3685     1F48                     	;# 
  3686     1F49                     	;# 
  3687     1F4A                     	;# 
  3688     1F4E                     	;# 
  3689     1F4F                     	;# 
  3690     1F50                     	;# 
  3691     1F51                     	;# 
  3692     1F52                     	;# 
  3693     1F53                     	;# 
  3694     1F54                     	;# 
  3695     1F55                     	;# 
  3696     1FE4                     	;# 
  3697     1FE5                     	;# 
  3698     1FE6                     	;# 
  3699     1FE7                     	;# 
  3700     1FE8                     	;# 
  3701     1FE8                     	;# 
  3702     1FE9                     	;# 
  3703     1FEA                     	;# 
  3704     1FEA                     	;# 
  3705     1FEB                     	;# 
  3706     1FED                     	;# 
  3707     1FEE                     	;# 
  3708     1FEF                     	;# 
  3709     0000                     	;# 
  3710     0001                     	;# 
  3711     0002                     	;# 
  3712     0003                     	;# 
  3713     0004                     	;# 
  3714     0005                     	;# 
  3715     0006                     	;# 
  3716     0007                     	;# 
  3717     0008                     	;# 
  3718     0009                     	;# 
  3719     000A                     	;# 
  3720     000B                     	;# 
  3721     000C                     	;# 
  3722     000D                     	;# 
  3723     000E                     	;# 
  3724     0012                     	;# 
  3725     0013                     	;# 
  3726     0014                     	;# 
  3727     0018                     	;# 
  3728     0019                     	;# 
  3729     001A                     	;# 
  3730     009B                     	;# 
  3731     009B                     	;# 
  3732     009C                     	;# 
  3733     009D                     	;# 
  3734     009E                     	;# 
  3735     009F                     	;# 
  3736     0119                     	;# 
  3737     0119                     	;# 
  3738     0119                     	;# 
  3739     011A                     	;# 
  3740     011A                     	;# 
  3741     011A                     	;# 
  3742     011B                     	;# 
  3743     011B                     	;# 
  3744     011B                     	;# 
  3745     011B                     	;# 
  3746     011B                     	;# 
  3747     011C                     	;# 
  3748     011C                     	;# 
  3749     011C                     	;# 
  3750     011D                     	;# 
  3751     011D                     	;# 
  3752     011D                     	;# 
  3753     011E                     	;# 
  3754     011E                     	;# 
  3755     011E                     	;# 
  3756     011F                     	;# 
  3757     011F                     	;# 
  3758     011F                     	;# 
  3759     011F                     	;# 
  3760     011F                     	;# 
  3761     018C                     	;# 
  3762     018D                     	;# 
  3763     018E                     	;# 
  3764     018F                     	;# 
  3765     0190                     	;# 
  3766     0191                     	;# 
  3767     0192                     	;# 
  3768     020C                     	;# 
  3769     020C                     	;# 
  3770     020D                     	;# 
  3771     020E                     	;# 
  3772     020F                     	;# 
  3773     020F                     	;# 
  3774     0210                     	;# 
  3775     0210                     	;# 
  3776     0211                     	;# 
  3777     0211                     	;# 
  3778     028C                     	;# 
  3779     028C                     	;# 
  3780     028D                     	;# 
  3781     028D                     	;# 
  3782     028E                     	;# 
  3783     028F                     	;# 
  3784     0290                     	;# 
  3785     0291                     	;# 
  3786     030C                     	;# 
  3787     030C                     	;# 
  3788     030D                     	;# 
  3789     030E                     	;# 
  3790     030F                     	;# 
  3791     0310                     	;# 
  3792     0310                     	;# 
  3793     0311                     	;# 
  3794     0312                     	;# 
  3795     0313                     	;# 
  3796     0314                     	;# 
  3797     0314                     	;# 
  3798     0315                     	;# 
  3799     0316                     	;# 
  3800     0318                     	;# 
  3801     0318                     	;# 
  3802     0319                     	;# 
  3803     031A                     	;# 
  3804     031C                     	;# 
  3805     031C                     	;# 
  3806     031D                     	;# 
  3807     031E                     	;# 
  3808     038C                     	;# 
  3809     038C                     	;# 
  3810     038D                     	;# 
  3811     038E                     	;# 
  3812     058C                     	;# 
  3813     058C                     	;# 
  3814     058D                     	;# 
  3815     058E                     	;# 
  3816     058F                     	;# 
  3817     058F                     	;# 
  3818     0590                     	;# 
  3819     0591                     	;# 
  3820     0592                     	;# 
  3821     0593                     	;# 
  3822     059C                     	;# 
  3823     059C                     	;# 
  3824     059D                     	;# 
  3825     059D                     	;# 
  3826     059E                     	;# 
  3827     059F                     	;# 
  3828     060C                     	;# 
  3829     060D                     	;# 
  3830     060E                     	;# 
  3831     060F                     	;# 
  3832     0610                     	;# 
  3833     0611                     	;# 
  3834     0612                     	;# 
  3835     0613                     	;# 
  3836     0614                     	;# 
  3837     070C                     	;# 
  3838     070D                     	;# 
  3839     070E                     	;# 
  3840     070F                     	;# 
  3841     0710                     	;# 
  3842     0711                     	;# 
  3843     0712                     	;# 
  3844     0713                     	;# 
  3845     0716                     	;# 
  3846     0717                     	;# 
  3847     0718                     	;# 
  3848     0719                     	;# 
  3849     071A                     	;# 
  3850     071B                     	;# 
  3851     071C                     	;# 
  3852     071D                     	;# 
  3853     0796                     	;# 
  3854     0797                     	;# 
  3855     0798                     	;# 
  3856     0799                     	;# 
  3857     079A                     	;# 
  3858     079B                     	;# 
  3859     080C                     	;# 
  3860     080D                     	;# 
  3861     080E                     	;# 
  3862     080F                     	;# 
  3863     0810                     	;# 
  3864     0811                     	;# 
  3865     0812                     	;# 
  3866     0813                     	;# 
  3867     0814                     	;# 
  3868     081A                     	;# 
  3869     081A                     	;# 
  3870     081B                     	;# 
  3871     081C                     	;# 
  3872     081C                     	;# 
  3873     081D                     	;# 
  3874     081E                     	;# 
  3875     081F                     	;# 
  3876     088C                     	;# 
  3877     088D                     	;# 
  3878     088E                     	;# 
  3879     088F                     	;# 
  3880     0890                     	;# 
  3881     0891                     	;# 
  3882     0892                     	;# 
  3883     0893                     	;# 
  3884     0895                     	;# 
  3885     0896                     	;# 
  3886     090C                     	;# 
  3887     090E                     	;# 
  3888     090F                     	;# 
  3889     091F                     	;# 
  3890     098F                     	;# 
  3891     098F                     	;# 
  3892     0990                     	;# 
  3893     0991                     	;# 
  3894     0992                     	;# 
  3895     0993                     	;# 
  3896     0994                     	;# 
  3897     0995                     	;# 
  3898     0996                     	;# 
  3899     0997                     	;# 
  3900     0A19                     	;# 
  3901     0A19                     	;# 
  3902     0A1A                     	;# 
  3903     0A1A                     	;# 
  3904     0A1B                     	;# 
  3905     0A1B                     	;# 
  3906     0A1B                     	;# 
  3907     0A1C                     	;# 
  3908     0A1C                     	;# 
  3909     0A1D                     	;# 
  3910     0A1D                     	;# 
  3911     0A1E                     	;# 
  3912     0A1E                     	;# 
  3913     0A1F                     	;# 
  3914     0A1F                     	;# 
  3915     0A1F                     	;# 
  3916     1E0F                     	;# 
  3917     1E10                     	;# 
  3918     1E11                     	;# 
  3919     1E12                     	;# 
  3920     1E13                     	;# 
  3921     1E14                     	;# 
  3922     1E15                     	;# 
  3923     1E16                     	;# 
  3924     1E17                     	;# 
  3925     1E18                     	;# 
  3926     1E19                     	;# 
  3927     1E1A                     	;# 
  3928     1E1B                     	;# 
  3929     1E1C                     	;# 
  3930     1E1D                     	;# 
  3931     1E1E                     	;# 
  3932     1E1F                     	;# 
  3933     1E20                     	;# 
  3934     1E21                     	;# 
  3935     1E22                     	;# 
  3936     1E23                     	;# 
  3937     1E24                     	;# 
  3938     1E25                     	;# 
  3939     1E26                     	;# 
  3940     1E27                     	;# 
  3941     1E28                     	;# 
  3942     1E29                     	;# 
  3943     1E2A                     	;# 
  3944     1E2B                     	;# 
  3945     1E2C                     	;# 
  3946     1E2D                     	;# 
  3947     1E2E                     	;# 
  3948     1E2F                     	;# 
  3949     1E30                     	;# 
  3950     1E31                     	;# 
  3951     1E32                     	;# 
  3952     1E33                     	;# 
  3953     1E34                     	;# 
  3954     1E35                     	;# 
  3955     1E36                     	;# 
  3956     1E37                     	;# 
  3957     1E8F                     	;# 
  3958     1E90                     	;# 
  3959     1E91                     	;# 
  3960     1E92                     	;# 
  3961     1E93                     	;# 
  3962     1E9C                     	;# 
  3963     1EA1                     	;# 
  3964     1EA2                     	;# 
  3965     1EB1                     	;# 
  3966     1EBB                     	;# 
  3967     1EBC                     	;# 
  3968     1EBD                     	;# 
  3969     1EBE                     	;# 
  3970     1EC3                     	;# 
  3971     1EC5                     	;# 
  3972     1EC6                     	;# 
  3973     1EC7                     	;# 
  3974     1ECB                     	;# 
  3975     1ECC                     	;# 
  3976     1ECD                     	;# 
  3977     1ECE                     	;# 
  3978     1F10                     	;# 
  3979     1F11                     	;# 
  3980     1F12                     	;# 
  3981     1F13                     	;# 
  3982     1F14                     	;# 
  3983     1F15                     	;# 
  3984     1F1C                     	;# 
  3985     1F1D                     	;# 
  3986     1F1E                     	;# 
  3987     1F1F                     	;# 
  3988     1F20                     	;# 
  3989     1F21                     	;# 
  3990     1F22                     	;# 
  3991     1F23                     	;# 
  3992     1F24                     	;# 
  3993     1F25                     	;# 
  3994     1F26                     	;# 
  3995     1F27                     	;# 
  3996     1F38                     	;# 
  3997     1F39                     	;# 
  3998     1F3A                     	;# 
  3999     1F3B                     	;# 
  4000     1F3C                     	;# 
  4001     1F3D                     	;# 
  4002     1F3E                     	;# 
  4003     1F3F                     	;# 
  4004     1F43                     	;# 
  4005     1F44                     	;# 
  4006     1F45                     	;# 
  4007     1F46                     	;# 
  4008     1F47                     	;# 
  4009     1F48                     	;# 
  4010     1F49                     	;# 
  4011     1F4A                     	;# 
  4012     1F4E                     	;# 
  4013     1F4F                     	;# 
  4014     1F50                     	;# 
  4015     1F51                     	;# 
  4016     1F52                     	;# 
  4017     1F53                     	;# 
  4018     1F54                     	;# 
  4019     1F55                     	;# 
  4020     1FE4                     	;# 
  4021     1FE5                     	;# 
  4022     1FE6                     	;# 
  4023     1FE7                     	;# 
  4024     1FE8                     	;# 
  4025     1FE8                     	;# 
  4026     1FE9                     	;# 
  4027     1FEA                     	;# 
  4028     1FEA                     	;# 
  4029     1FEB                     	;# 
  4030     1FED                     	;# 
  4031     1FEE                     	;# 
  4032     1FEF                     	;# 
  4033     0000                     	;# 
  4034     0001                     	;# 
  4035     0002                     	;# 
  4036     0003                     	;# 
  4037     0004                     	;# 
  4038     0005                     	;# 
  4039     0006                     	;# 
  4040     0007                     	;# 
  4041     0008                     	;# 
  4042     0009                     	;# 
  4043     000A                     	;# 
  4044     000B                     	;# 
  4045     000C                     	;# 
  4046     000D                     	;# 
  4047     000E                     	;# 
  4048     0012                     	;# 
  4049     0013                     	;# 
  4050     0014                     	;# 
  4051     0018                     	;# 
  4052     0019                     	;# 
  4053     001A                     	;# 
  4054     009B                     	;# 
  4055     009B                     	;# 
  4056     009C                     	;# 
  4057     009D                     	;# 
  4058     009E                     	;# 
  4059     009F                     	;# 
  4060     0119                     	;# 
  4061     0119                     	;# 
  4062     0119                     	;# 
  4063     011A                     	;# 
  4064     011A                     	;# 
  4065     011A                     	;# 
  4066     011B                     	;# 
  4067     011B                     	;# 
  4068     011B                     	;# 
  4069     011B                     	;# 
  4070     011B                     	;# 
  4071     011C                     	;# 
  4072     011C                     	;# 
  4073     011C                     	;# 
  4074     011D                     	;# 
  4075     011D                     	;# 
  4076     011D                     	;# 
  4077     011E                     	;# 
  4078     011E                     	;# 
  4079     011E                     	;# 
  4080     011F                     	;# 
  4081     011F                     	;# 
  4082     011F                     	;# 
  4083     011F                     	;# 
  4084     011F                     	;# 
  4085     018C                     	;# 
  4086     018D                     	;# 
  4087     018E                     	;# 
  4088     018F                     	;# 
  4089     0190                     	;# 
  4090     0191                     	;# 
  4091     0192                     	;# 
  4092     020C                     	;# 
  4093     020C                     	;# 
  4094     020D                     	;# 
  4095     020E                     	;# 
  4096     020F                     	;# 
  4097     020F                     	;# 
  4098     0210                     	;# 
  4099     0210                     	;# 
  4100     0211                     	;# 
  4101     0211                     	;# 
  4102     028C                     	;# 
  4103     028C                     	;# 
  4104     028D                     	;# 
  4105     028D                     	;# 
  4106     028E                     	;# 
  4107     028F                     	;# 
  4108     0290                     	;# 
  4109     0291                     	;# 
  4110     030C                     	;# 
  4111     030C                     	;# 
  4112     030D                     	;# 
  4113     030E                     	;# 
  4114     030F                     	;# 
  4115     0310                     	;# 
  4116     0310                     	;# 
  4117     0311                     	;# 
  4118     0312                     	;# 
  4119     0313                     	;# 
  4120     0314                     	;# 
  4121     0314                     	;# 
  4122     0315                     	;# 
  4123     0316                     	;# 
  4124     0318                     	;# 
  4125     0318                     	;# 
  4126     0319                     	;# 
  4127     031A                     	;# 
  4128     031C                     	;# 
  4129     031C                     	;# 
  4130     031D                     	;# 
  4131     031E                     	;# 
  4132     038C                     	;# 
  4133     038C                     	;# 
  4134     038D                     	;# 
  4135     038E                     	;# 
  4136     058C                     	;# 
  4137     058C                     	;# 
  4138     058D                     	;# 
  4139     058E                     	;# 
  4140     058F                     	;# 
  4141     058F                     	;# 
  4142     0590                     	;# 
  4143     0591                     	;# 
  4144     0592                     	;# 
  4145     0593                     	;# 
  4146     059C                     	;# 
  4147     059C                     	;# 
  4148     059D                     	;# 
  4149     059D                     	;# 
  4150     059E                     	;# 
  4151     059F                     	;# 
  4152     060C                     	;# 
  4153     060D                     	;# 
  4154     060E                     	;# 
  4155     060F                     	;# 
  4156     0610                     	;# 
  4157     0611                     	;# 
  4158     0612                     	;# 
  4159     0613                     	;# 
  4160     0614                     	;# 
  4161     070C                     	;# 
  4162     070D                     	;# 
  4163     070E                     	;# 
  4164     070F                     	;# 
  4165     0710                     	;# 
  4166     0711                     	;# 
  4167     0712                     	;# 
  4168     0713                     	;# 
  4169     0716                     	;# 
  4170     0717                     	;# 
  4171     0718                     	;# 
  4172     0719                     	;# 
  4173     071A                     	;# 
  4174     071B                     	;# 
  4175     071C                     	;# 
  4176     071D                     	;# 
  4177     0796                     	;# 
  4178     0797                     	;# 
  4179     0798                     	;# 
  4180     0799                     	;# 
  4181     079A                     	;# 
  4182     079B                     	;# 
  4183     080C                     	;# 
  4184     080D                     	;# 
  4185     080E                     	;# 
  4186     080F                     	;# 
  4187     0810                     	;# 
  4188     0811                     	;# 
  4189     0812                     	;# 
  4190     0813                     	;# 
  4191     0814                     	;# 
  4192     081A                     	;# 
  4193     081A                     	;# 
  4194     081B                     	;# 
  4195     081C                     	;# 
  4196     081C                     	;# 
  4197     081D                     	;# 
  4198     081E                     	;# 
  4199     081F                     	;# 
  4200     088C                     	;# 
  4201     088D                     	;# 
  4202     088E                     	;# 
  4203     088F                     	;# 
  4204     0890                     	;# 
  4205     0891                     	;# 
  4206     0892                     	;# 
  4207     0893                     	;# 
  4208     0895                     	;# 
  4209     0896                     	;# 
  4210     090C                     	;# 
  4211     090E                     	;# 
  4212     090F                     	;# 
  4213     091F                     	;# 
  4214     098F                     	;# 
  4215     098F                     	;# 
  4216     0990                     	;# 
  4217     0991                     	;# 
  4218     0992                     	;# 
  4219     0993                     	;# 
  4220     0994                     	;# 
  4221     0995                     	;# 
  4222     0996                     	;# 
  4223     0997                     	;# 
  4224     0A19                     	;# 
  4225     0A19                     	;# 
  4226     0A1A                     	;# 
  4227     0A1A                     	;# 
  4228     0A1B                     	;# 
  4229     0A1B                     	;# 
  4230     0A1B                     	;# 
  4231     0A1C                     	;# 
  4232     0A1C                     	;# 
  4233     0A1D                     	;# 
  4234     0A1D                     	;# 
  4235     0A1E                     	;# 
  4236     0A1E                     	;# 
  4237     0A1F                     	;# 
  4238     0A1F                     	;# 
  4239     0A1F                     	;# 
  4240     1E0F                     	;# 
  4241     1E10                     	;# 
  4242     1E11                     	;# 
  4243     1E12                     	;# 
  4244     1E13                     	;# 
  4245     1E14                     	;# 
  4246     1E15                     	;# 
  4247     1E16                     	;# 
  4248     1E17                     	;# 
  4249     1E18                     	;# 
  4250     1E19                     	;# 
  4251     1E1A                     	;# 
  4252     1E1B                     	;# 
  4253     1E1C                     	;# 
  4254     1E1D                     	;# 
  4255     1E1E                     	;# 
  4256     1E1F                     	;# 
  4257     1E20                     	;# 
  4258     1E21                     	;# 
  4259     1E22                     	;# 
  4260     1E23                     	;# 
  4261     1E24                     	;# 
  4262     1E25                     	;# 
  4263     1E26                     	;# 
  4264     1E27                     	;# 
  4265     1E28                     	;# 
  4266     1E29                     	;# 
  4267     1E2A                     	;# 
  4268     1E2B                     	;# 
  4269     1E2C                     	;# 
  4270     1E2D                     	;# 
  4271     1E2E                     	;# 
  4272     1E2F                     	;# 
  4273     1E30                     	;# 
  4274     1E31                     	;# 
  4275     1E32                     	;# 
  4276     1E33                     	;# 
  4277     1E34                     	;# 
  4278     1E35                     	;# 
  4279     1E36                     	;# 
  4280     1E37                     	;# 
  4281     1E8F                     	;# 
  4282     1E90                     	;# 
  4283     1E91                     	;# 
  4284     1E92                     	;# 
  4285     1E93                     	;# 
  4286     1E9C                     	;# 
  4287     1EA1                     	;# 
  4288     1EA2                     	;# 
  4289     1EB1                     	;# 
  4290     1EBB                     	;# 
  4291     1EBC                     	;# 
  4292     1EBD                     	;# 
  4293     1EBE                     	;# 
  4294     1EC3                     	;# 
  4295     1EC5                     	;# 
  4296     1EC6                     	;# 
  4297     1EC7                     	;# 
  4298     1ECB                     	;# 
  4299     1ECC                     	;# 
  4300     1ECD                     	;# 
  4301     1ECE                     	;# 
  4302     1F10                     	;# 
  4303     1F11                     	;# 
  4304     1F12                     	;# 
  4305     1F13                     	;# 
  4306     1F14                     	;# 
  4307     1F15                     	;# 
  4308     1F1C                     	;# 
  4309     1F1D                     	;# 
  4310     1F1E                     	;# 
  4311     1F1F                     	;# 
  4312     1F20                     	;# 
  4313     1F21                     	;# 
  4314     1F22                     	;# 
  4315     1F23                     	;# 
  4316     1F24                     	;# 
  4317     1F25                     	;# 
  4318     1F26                     	;# 
  4319     1F27                     	;# 
  4320     1F38                     	;# 
  4321     1F39                     	;# 
  4322     1F3A                     	;# 
  4323     1F3B                     	;# 
  4324     1F3C                     	;# 
  4325     1F3D                     	;# 
  4326     1F3E                     	;# 
  4327     1F3F                     	;# 
  4328     1F43                     	;# 
  4329     1F44                     	;# 
  4330     1F45                     	;# 
  4331     1F46                     	;# 
  4332     1F47                     	;# 
  4333     1F48                     	;# 
  4334     1F49                     	;# 
  4335     1F4A                     	;# 
  4336     1F4E                     	;# 
  4337     1F4F                     	;# 
  4338     1F50                     	;# 
  4339     1F51                     	;# 
  4340     1F52                     	;# 
  4341     1F53                     	;# 
  4342     1F54                     	;# 
  4343     1F55                     	;# 
  4344     1FE4                     	;# 
  4345     1FE5                     	;# 
  4346     1FE6                     	;# 
  4347     1FE7                     	;# 
  4348     1FE8                     	;# 
  4349     1FE8                     	;# 
  4350     1FE9                     	;# 
  4351     1FEA                     	;# 
  4352     1FEA                     	;# 
  4353     1FEB                     	;# 
  4354     1FED                     	;# 
  4355     1FEE                     	;# 
  4356     1FEF                     	;# 
  4357     0000                     	;# 
  4358     0001                     	;# 
  4359     0002                     	;# 
  4360     0003                     	;# 
  4361     0004                     	;# 
  4362     0005                     	;# 
  4363     0006                     	;# 
  4364     0007                     	;# 
  4365     0008                     	;# 
  4366     0009                     	;# 
  4367     000A                     	;# 
  4368     000B                     	;# 
  4369     000C                     	;# 
  4370     000D                     	;# 
  4371     000E                     	;# 
  4372     0012                     	;# 
  4373     0013                     	;# 
  4374     0014                     	;# 
  4375     0018                     	;# 
  4376     0019                     	;# 
  4377     001A                     	;# 
  4378     009B                     	;# 
  4379     009B                     	;# 
  4380     009C                     	;# 
  4381     009D                     	;# 
  4382     009E                     	;# 
  4383     009F                     	;# 
  4384     0119                     	;# 
  4385     0119                     	;# 
  4386     0119                     	;# 
  4387     011A                     	;# 
  4388     011A                     	;# 
  4389     011A                     	;# 
  4390     011B                     	;# 
  4391     011B                     	;# 
  4392     011B                     	;# 
  4393     011B                     	;# 
  4394     011B                     	;# 
  4395     011C                     	;# 
  4396     011C                     	;# 
  4397     011C                     	;# 
  4398     011D                     	;# 
  4399     011D                     	;# 
  4400     011D                     	;# 
  4401     011E                     	;# 
  4402     011E                     	;# 
  4403     011E                     	;# 
  4404     011F                     	;# 
  4405     011F                     	;# 
  4406     011F                     	;# 
  4407     011F                     	;# 
  4408     011F                     	;# 
  4409     018C                     	;# 
  4410     018D                     	;# 
  4411     018E                     	;# 
  4412     018F                     	;# 
  4413     0190                     	;# 
  4414     0191                     	;# 
  4415     0192                     	;# 
  4416     020C                     	;# 
  4417     020C                     	;# 
  4418     020D                     	;# 
  4419     020E                     	;# 
  4420     020F                     	;# 
  4421     020F                     	;# 
  4422     0210                     	;# 
  4423     0210                     	;# 
  4424     0211                     	;# 
  4425     0211                     	;# 
  4426     028C                     	;# 
  4427     028C                     	;# 
  4428     028D                     	;# 
  4429     028D                     	;# 
  4430     028E                     	;# 
  4431     028F                     	;# 
  4432     0290                     	;# 
  4433     0291                     	;# 
  4434     030C                     	;# 
  4435     030C                     	;# 
  4436     030D                     	;# 
  4437     030E                     	;# 
  4438     030F                     	;# 
  4439     0310                     	;# 
  4440     0310                     	;# 
  4441     0311                     	;# 
  4442     0312                     	;# 
  4443     0313                     	;# 
  4444     0314                     	;# 
  4445     0314                     	;# 
  4446     0315                     	;# 
  4447     0316                     	;# 
  4448     0318                     	;# 
  4449     0318                     	;# 
  4450     0319                     	;# 
  4451     031A                     	;# 
  4452     031C                     	;# 
  4453     031C                     	;# 
  4454     031D                     	;# 
  4455     031E                     	;# 
  4456     038C                     	;# 
  4457     038C                     	;# 
  4458     038D                     	;# 
  4459     038E                     	;# 
  4460     058C                     	;# 
  4461     058C                     	;# 
  4462     058D                     	;# 
  4463     058E                     	;# 
  4464     058F                     	;# 
  4465     058F                     	;# 
  4466     0590                     	;# 
  4467     0591                     	;# 
  4468     0592                     	;# 
  4469     0593                     	;# 
  4470     059C                     	;# 
  4471     059C                     	;# 
  4472     059D                     	;# 
  4473     059D                     	;# 
  4474     059E                     	;# 
  4475     059F                     	;# 
  4476     060C                     	;# 
  4477     060D                     	;# 
  4478     060E                     	;# 
  4479     060F                     	;# 
  4480     0610                     	;# 
  4481     0611                     	;# 
  4482     0612                     	;# 
  4483     0613                     	;# 
  4484     0614                     	;# 
  4485     070C                     	;# 
  4486     070D                     	;# 
  4487     070E                     	;# 
  4488     070F                     	;# 
  4489     0710                     	;# 
  4490     0711                     	;# 
  4491     0712                     	;# 
  4492     0713                     	;# 
  4493     0716                     	;# 
  4494     0717                     	;# 
  4495     0718                     	;# 
  4496     0719                     	;# 
  4497     071A                     	;# 
  4498     071B                     	;# 
  4499     071C                     	;# 
  4500     071D                     	;# 
  4501     0796                     	;# 
  4502     0797                     	;# 
  4503     0798                     	;# 
  4504     0799                     	;# 
  4505     079A                     	;# 
  4506     079B                     	;# 
  4507     080C                     	;# 
  4508     080D                     	;# 
  4509     080E                     	;# 
  4510     080F                     	;# 
  4511     0810                     	;# 
  4512     0811                     	;# 
  4513     0812                     	;# 
  4514     0813                     	;# 
  4515     0814                     	;# 
  4516     081A                     	;# 
  4517     081A                     	;# 
  4518     081B                     	;# 
  4519     081C                     	;# 
  4520     081C                     	;# 
  4521     081D                     	;# 
  4522     081E                     	;# 
  4523     081F                     	;# 
  4524     088C                     	;# 
  4525     088D                     	;# 
  4526     088E                     	;# 
  4527     088F                     	;# 
  4528     0890                     	;# 
  4529     0891                     	;# 
  4530     0892                     	;# 
  4531     0893                     	;# 
  4532     0895                     	;# 
  4533     0896                     	;# 
  4534     090C                     	;# 
  4535     090E                     	;# 
  4536     090F                     	;# 
  4537     091F                     	;# 
  4538     098F                     	;# 
  4539     098F                     	;# 
  4540     0990                     	;# 
  4541     0991                     	;# 
  4542     0992                     	;# 
  4543     0993                     	;# 
  4544     0994                     	;# 
  4545     0995                     	;# 
  4546     0996                     	;# 
  4547     0997                     	;# 
  4548     0A19                     	;# 
  4549     0A19                     	;# 
  4550     0A1A                     	;# 
  4551     0A1A                     	;# 
  4552     0A1B                     	;# 
  4553     0A1B                     	;# 
  4554     0A1B                     	;# 
  4555     0A1C                     	;# 
  4556     0A1C                     	;# 
  4557     0A1D                     	;# 
  4558     0A1D                     	;# 
  4559     0A1E                     	;# 
  4560     0A1E                     	;# 
  4561     0A1F                     	;# 
  4562     0A1F                     	;# 
  4563     0A1F                     	;# 
  4564     1E0F                     	;# 
  4565     1E10                     	;# 
  4566     1E11                     	;# 
  4567     1E12                     	;# 
  4568     1E13                     	;# 
  4569     1E14                     	;# 
  4570     1E15                     	;# 
  4571     1E16                     	;# 
  4572     1E17                     	;# 
  4573     1E18                     	;# 
  4574     1E19                     	;# 
  4575     1E1A                     	;# 
  4576     1E1B                     	;# 
  4577     1E1C                     	;# 
  4578     1E1D                     	;# 
  4579     1E1E                     	;# 
  4580     1E1F                     	;# 
  4581     1E20                     	;# 
  4582     1E21                     	;# 
  4583     1E22                     	;# 
  4584     1E23                     	;# 
  4585     1E24                     	;# 
  4586     1E25                     	;# 
  4587     1E26                     	;# 
  4588     1E27                     	;# 
  4589     1E28                     	;# 
  4590     1E29                     	;# 
  4591     1E2A                     	;# 
  4592     1E2B                     	;# 
  4593     1E2C                     	;# 
  4594     1E2D                     	;# 
  4595     1E2E                     	;# 
  4596     1E2F                     	;# 
  4597     1E30                     	;# 
  4598     1E31                     	;# 
  4599     1E32                     	;# 
  4600     1E33                     	;# 
  4601     1E34                     	;# 
  4602     1E35                     	;# 
  4603     1E36                     	;# 
  4604     1E37                     	;# 
  4605     1E8F                     	;# 
  4606     1E90                     	;# 
  4607     1E91                     	;# 
  4608     1E92                     	;# 
  4609     1E93                     	;# 
  4610     1E9C                     	;# 
  4611     1EA1                     	;# 
  4612     1EA2                     	;# 
  4613     1EB1                     	;# 
  4614     1EBB                     	;# 
  4615     1EBC                     	;# 
  4616     1EBD                     	;# 
  4617     1EBE                     	;# 
  4618     1EC3                     	;# 
  4619     1EC5                     	;# 
  4620     1EC6                     	;# 
  4621     1EC7                     	;# 
  4622     1ECB                     	;# 
  4623     1ECC                     	;# 
  4624     1ECD                     	;# 
  4625     1ECE                     	;# 
  4626     1F10                     	;# 
  4627     1F11                     	;# 
  4628     1F12                     	;# 
  4629     1F13                     	;# 
  4630     1F14                     	;# 
  4631     1F15                     	;# 
  4632     1F1C                     	;# 
  4633     1F1D                     	;# 
  4634     1F1E                     	;# 
  4635     1F1F                     	;# 
  4636     1F20                     	;# 
  4637     1F21                     	;# 
  4638     1F22                     	;# 
  4639     1F23                     	;# 
  4640     1F24                     	;# 
  4641     1F25                     	;# 
  4642     1F26                     	;# 
  4643     1F27                     	;# 
  4644     1F38                     	;# 
  4645     1F39                     	;# 
  4646     1F3A                     	;# 
  4647     1F3B                     	;# 
  4648     1F3C                     	;# 
  4649     1F3D                     	;# 
  4650     1F3E                     	;# 
  4651     1F3F                     	;# 
  4652     1F43                     	;# 
  4653     1F44                     	;# 
  4654     1F45                     	;# 
  4655     1F46                     	;# 
  4656     1F47                     	;# 
  4657     1F48                     	;# 
  4658     1F49                     	;# 
  4659     1F4A                     	;# 
  4660     1F4E                     	;# 
  4661     1F4F                     	;# 
  4662     1F50                     	;# 
  4663     1F51                     	;# 
  4664     1F52                     	;# 
  4665     1F53                     	;# 
  4666     1F54                     	;# 
  4667     1F55                     	;# 
  4668     1FE4                     	;# 
  4669     1FE5                     	;# 
  4670     1FE6                     	;# 
  4671     1FE7                     	;# 
  4672     1FE8                     	;# 
  4673     1FE8                     	;# 
  4674     1FE9                     	;# 
  4675     1FEA                     	;# 
  4676     1FEA                     	;# 
  4677     1FEB                     	;# 
  4678     1FED                     	;# 
  4679     1FEE                     	;# 
  4680     1FEF                     	;# 
  4681     0000                     	;# 
  4682     0001                     	;# 
  4683     0002                     	;# 
  4684     0003                     	;# 
  4685     0004                     	;# 
  4686     0005                     	;# 
  4687     0006                     	;# 
  4688     0007                     	;# 
  4689     0008                     	;# 
  4690     0009                     	;# 
  4691     000A                     	;# 
  4692     000B                     	;# 
  4693     000C                     	;# 
  4694     000D                     	;# 
  4695     000E                     	;# 
  4696     0012                     	;# 
  4697     0013                     	;# 
  4698     0014                     	;# 
  4699     0018                     	;# 
  4700     0019                     	;# 
  4701     001A                     	;# 
  4702     009B                     	;# 
  4703     009B                     	;# 
  4704     009C                     	;# 
  4705     009D                     	;# 
  4706     009E                     	;# 
  4707     009F                     	;# 
  4708     0119                     	;# 
  4709     0119                     	;# 
  4710     0119                     	;# 
  4711     011A                     	;# 
  4712     011A                     	;# 
  4713     011A                     	;# 
  4714     011B                     	;# 
  4715     011B                     	;# 
  4716     011B                     	;# 
  4717     011B                     	;# 
  4718     011B                     	;# 
  4719     011C                     	;# 
  4720     011C                     	;# 
  4721     011C                     	;# 
  4722     011D                     	;# 
  4723     011D                     	;# 
  4724     011D                     	;# 
  4725     011E                     	;# 
  4726     011E                     	;# 
  4727     011E                     	;# 
  4728     011F                     	;# 
  4729     011F                     	;# 
  4730     011F                     	;# 
  4731     011F                     	;# 
  4732     011F                     	;# 
  4733     018C                     	;# 
  4734     018D                     	;# 
  4735     018E                     	;# 
  4736     018F                     	;# 
  4737     0190                     	;# 
  4738     0191                     	;# 
  4739     0192                     	;# 
  4740     020C                     	;# 
  4741     020C                     	;# 
  4742     020D                     	;# 
  4743     020E                     	;# 
  4744     020F                     	;# 
  4745     020F                     	;# 
  4746     0210                     	;# 
  4747     0210                     	;# 
  4748     0211                     	;# 
  4749     0211                     	;# 
  4750     028C                     	;# 
  4751     028C                     	;# 
  4752     028D                     	;# 
  4753     028D                     	;# 
  4754     028E                     	;# 
  4755     028F                     	;# 
  4756     0290                     	;# 
  4757     0291                     	;# 
  4758     030C                     	;# 
  4759     030C                     	;# 
  4760     030D                     	;# 
  4761     030E                     	;# 
  4762     030F                     	;# 
  4763     0310                     	;# 
  4764     0310                     	;# 
  4765     0311                     	;# 
  4766     0312                     	;# 
  4767     0313                     	;# 
  4768     0314                     	;# 
  4769     0314                     	;# 
  4770     0315                     	;# 
  4771     0316                     	;# 
  4772     0318                     	;# 
  4773     0318                     	;# 
  4774     0319                     	;# 
  4775     031A                     	;# 
  4776     031C                     	;# 
  4777     031C                     	;# 
  4778     031D                     	;# 
  4779     031E                     	;# 
  4780     038C                     	;# 
  4781     038C                     	;# 
  4782     038D                     	;# 
  4783     038E                     	;# 
  4784     058C                     	;# 
  4785     058C                     	;# 
  4786     058D                     	;# 
  4787     058E                     	;# 
  4788     058F                     	;# 
  4789     058F                     	;# 
  4790     0590                     	;# 
  4791     0591                     	;# 
  4792     0592                     	;# 
  4793     0593                     	;# 
  4794     059C                     	;# 
  4795     059C                     	;# 
  4796     059D                     	;# 
  4797     059D                     	;# 
  4798     059E                     	;# 
  4799     059F                     	;# 
  4800     060C                     	;# 
  4801     060D                     	;# 
  4802     060E                     	;# 
  4803     060F                     	;# 
  4804     0610                     	;# 
  4805     0611                     	;# 
  4806     0612                     	;# 
  4807     0613                     	;# 
  4808     0614                     	;# 
  4809     070C                     	;# 
  4810     070D                     	;# 
  4811     070E                     	;# 
  4812     070F                     	;# 
  4813     0710                     	;# 
  4814     0711                     	;# 
  4815     0712                     	;# 
  4816     0713                     	;# 
  4817     0716                     	;# 
  4818     0717                     	;# 
  4819     0718                     	;# 
  4820     0719                     	;# 
  4821     071A                     	;# 
  4822     071B                     	;# 
  4823     071C                     	;# 
  4824     071D                     	;# 
  4825     0796                     	;# 
  4826     0797                     	;# 
  4827     0798                     	;# 
  4828     0799                     	;# 
  4829     079A                     	;# 
  4830     079B                     	;# 
  4831     080C                     	;# 
  4832     080D                     	;# 
  4833     080E                     	;# 
  4834     080F                     	;# 
  4835     0810                     	;# 
  4836     0811                     	;# 
  4837     0812                     	;# 
  4838     0813                     	;# 
  4839     0814                     	;# 
  4840     081A                     	;# 
  4841     081A                     	;# 
  4842     081B                     	;# 
  4843     081C                     	;# 
  4844     081C                     	;# 
  4845     081D                     	;# 
  4846     081E                     	;# 
  4847     081F                     	;# 
  4848     088C                     	;# 
  4849     088D                     	;# 
  4850     088E                     	;# 
  4851     088F                     	;# 
  4852     0890                     	;# 
  4853     0891                     	;# 
  4854     0892                     	;# 
  4855     0893                     	;# 
  4856     0895                     	;# 
  4857     0896                     	;# 
  4858     090C                     	;# 
  4859     090E                     	;# 
  4860     090F                     	;# 
  4861     091F                     	;# 
  4862     098F                     	;# 
  4863     098F                     	;# 
  4864     0990                     	;# 
  4865     0991                     	;# 
  4866     0992                     	;# 
  4867     0993                     	;# 
  4868     0994                     	;# 
  4869     0995                     	;# 
  4870     0996                     	;# 
  4871     0997                     	;# 
  4872     0A19                     	;# 
  4873     0A19                     	;# 
  4874     0A1A                     	;# 
  4875     0A1A                     	;# 
  4876     0A1B                     	;# 
  4877     0A1B                     	;# 
  4878     0A1B                     	;# 
  4879     0A1C                     	;# 
  4880     0A1C                     	;# 
  4881     0A1D                     	;# 
  4882     0A1D                     	;# 
  4883     0A1E                     	;# 
  4884     0A1E                     	;# 
  4885     0A1F                     	;# 
  4886     0A1F                     	;# 
  4887     0A1F                     	;# 
  4888     1E0F                     	;# 
  4889     1E10                     	;# 
  4890     1E11                     	;# 
  4891     1E12                     	;# 
  4892     1E13                     	;# 
  4893     1E14                     	;# 
  4894     1E15                     	;# 
  4895     1E16                     	;# 
  4896     1E17                     	;# 
  4897     1E18                     	;# 
  4898     1E19                     	;# 
  4899     1E1A                     	;# 
  4900     1E1B                     	;# 
  4901     1E1C                     	;# 
  4902     1E1D                     	;# 
  4903     1E1E                     	;# 
  4904     1E1F                     	;# 
  4905     1E20                     	;# 
  4906     1E21                     	;# 
  4907     1E22                     	;# 
  4908     1E23                     	;# 
  4909     1E24                     	;# 
  4910     1E25                     	;# 
  4911     1E26                     	;# 
  4912     1E27                     	;# 
  4913     1E28                     	;# 
  4914     1E29                     	;# 
  4915     1E2A                     	;# 
  4916     1E2B                     	;# 
  4917     1E2C                     	;# 
  4918     1E2D                     	;# 
  4919     1E2E                     	;# 
  4920     1E2F                     	;# 
  4921     1E30                     	;# 
  4922     1E31                     	;# 
  4923     1E32                     	;# 
  4924     1E33                     	;# 
  4925     1E34                     	;# 
  4926     1E35                     	;# 
  4927     1E36                     	;# 
  4928     1E37                     	;# 
  4929     1E8F                     	;# 
  4930     1E90                     	;# 
  4931     1E91                     	;# 
  4932     1E92                     	;# 
  4933     1E93                     	;# 
  4934     1E9C                     	;# 
  4935     1EA1                     	;# 
  4936     1EA2                     	;# 
  4937     1EB1                     	;# 
  4938     1EBB                     	;# 
  4939     1EBC                     	;# 
  4940     1EBD                     	;# 
  4941     1EBE                     	;# 
  4942     1EC3                     	;# 
  4943     1EC5                     	;# 
  4944     1EC6                     	;# 
  4945     1EC7                     	;# 
  4946     1ECB                     	;# 
  4947     1ECC                     	;# 
  4948     1ECD                     	;# 
  4949     1ECE                     	;# 
  4950     1F10                     	;# 
  4951     1F11                     	;# 
  4952     1F12                     	;# 
  4953     1F13                     	;# 
  4954     1F14                     	;# 
  4955     1F15                     	;# 
  4956     1F1C                     	;# 
  4957     1F1D                     	;# 
  4958     1F1E                     	;# 
  4959     1F1F                     	;# 
  4960     1F20                     	;# 
  4961     1F21                     	;# 
  4962     1F22                     	;# 
  4963     1F23                     	;# 
  4964     1F24                     	;# 
  4965     1F25                     	;# 
  4966     1F26                     	;# 
  4967     1F27                     	;# 
  4968     1F38                     	;# 
  4969     1F39                     	;# 
  4970     1F3A                     	;# 
  4971     1F3B                     	;# 
  4972     1F3C                     	;# 
  4973     1F3D                     	;# 
  4974     1F3E                     	;# 
  4975     1F3F                     	;# 
  4976     1F43                     	;# 
  4977     1F44                     	;# 
  4978     1F45                     	;# 
  4979     1F46                     	;# 
  4980     1F47                     	;# 
  4981     1F48                     	;# 
  4982     1F49                     	;# 
  4983     1F4A                     	;# 
  4984     1F4E                     	;# 
  4985     1F4F                     	;# 
  4986     1F50                     	;# 
  4987     1F51                     	;# 
  4988     1F52                     	;# 
  4989     1F53                     	;# 
  4990     1F54                     	;# 
  4991     1F55                     	;# 
  4992     1FE4                     	;# 
  4993     1FE5                     	;# 
  4994     1FE6                     	;# 
  4995     1FE7                     	;# 
  4996     1FE8                     	;# 
  4997     1FE8                     	;# 
  4998     1FE9                     	;# 
  4999     1FEA                     	;# 
  5000     1FEA                     	;# 
  5001     1FEB                     	;# 
  5002     1FED                     	;# 
  5003     1FEE                     	;# 
  5004     1FEF                     	;# 
  5005     0000                     	;# 
  5006     0001                     	;# 
  5007     0002                     	;# 
  5008     0003                     	;# 
  5009     0004                     	;# 
  5010     0005                     	;# 
  5011     0006                     	;# 
  5012     0007                     	;# 
  5013     0008                     	;# 
  5014     0009                     	;# 
  5015     000A                     	;# 
  5016     000B                     	;# 
  5017     000C                     	;# 
  5018     000D                     	;# 
  5019     000E                     	;# 
  5020     0012                     	;# 
  5021     0013                     	;# 
  5022     0014                     	;# 
  5023     0018                     	;# 
  5024     0019                     	;# 
  5025     001A                     	;# 
  5026     009B                     	;# 
  5027     009B                     	;# 
  5028     009C                     	;# 
  5029     009D                     	;# 
  5030     009E                     	;# 
  5031     009F                     	;# 
  5032     0119                     	;# 
  5033     0119                     	;# 
  5034     0119                     	;# 
  5035     011A                     	;# 
  5036     011A                     	;# 
  5037     011A                     	;# 
  5038     011B                     	;# 
  5039     011B                     	;# 
  5040     011B                     	;# 
  5041     011B                     	;# 
  5042     011B                     	;# 
  5043     011C                     	;# 
  5044     011C                     	;# 
  5045     011C                     	;# 
  5046     011D                     	;# 
  5047     011D                     	;# 
  5048     011D                     	;# 
  5049     011E                     	;# 
  5050     011E                     	;# 
  5051     011E                     	;# 
  5052     011F                     	;# 
  5053     011F                     	;# 
  5054     011F                     	;# 
  5055     011F                     	;# 
  5056     011F                     	;# 
  5057     018C                     	;# 
  5058     018D                     	;# 
  5059     018E                     	;# 
  5060     018F                     	;# 
  5061     0190                     	;# 
  5062     0191                     	;# 
  5063     0192                     	;# 
  5064     020C                     	;# 
  5065     020C                     	;# 
  5066     020D                     	;# 
  5067     020E                     	;# 
  5068     020F                     	;# 
  5069     020F                     	;# 
  5070     0210                     	;# 
  5071     0210                     	;# 
  5072     0211                     	;# 
  5073     0211                     	;# 
  5074     028C                     	;# 
  5075     028C                     	;# 
  5076     028D                     	;# 
  5077     028D                     	;# 
  5078     028E                     	;# 
  5079     028F                     	;# 
  5080     0290                     	;# 
  5081     0291                     	;# 
  5082     030C                     	;# 
  5083     030C                     	;# 
  5084     030D                     	;# 
  5085     030E                     	;# 
  5086     030F                     	;# 
  5087     0310                     	;# 
  5088     0310                     	;# 
  5089     0311                     	;# 
  5090     0312                     	;# 
  5091     0313                     	;# 
  5092     0314                     	;# 
  5093     0314                     	;# 
  5094     0315                     	;# 
  5095     0316                     	;# 
  5096     0318                     	;# 
  5097     0318                     	;# 
  5098     0319                     	;# 
  5099     031A                     	;# 
  5100     031C                     	;# 
  5101     031C                     	;# 
  5102     031D                     	;# 
  5103     031E                     	;# 
  5104     038C                     	;# 
  5105     038C                     	;# 
  5106     038D                     	;# 
  5107     038E                     	;# 
  5108     058C                     	;# 
  5109     058C                     	;# 
  5110     058D                     	;# 
  5111     058E                     	;# 
  5112     058F                     	;# 
  5113     058F                     	;# 
  5114     0590                     	;# 
  5115     0591                     	;# 
  5116     0592                     	;# 
  5117     0593                     	;# 
  5118     059C                     	;# 
  5119     059C                     	;# 
  5120     059D                     	;# 
  5121     059D                     	;# 
  5122     059E                     	;# 
  5123     059F                     	;# 
  5124     060C                     	;# 
  5125     060D                     	;# 
  5126     060E                     	;# 
  5127     060F                     	;# 
  5128     0610                     	;# 
  5129     0611                     	;# 
  5130     0612                     	;# 
  5131     0613                     	;# 
  5132     0614                     	;# 
  5133     070C                     	;# 
  5134     070D                     	;# 
  5135     070E                     	;# 
  5136     070F                     	;# 
  5137     0710                     	;# 
  5138     0711                     	;# 
  5139     0712                     	;# 
  5140     0713                     	;# 
  5141     0716                     	;# 
  5142     0717                     	;# 
  5143     0718                     	;# 
  5144     0719                     	;# 
  5145     071A                     	;# 
  5146     071B                     	;# 
  5147     071C                     	;# 
  5148     071D                     	;# 
  5149     0796                     	;# 
  5150     0797                     	;# 
  5151     0798                     	;# 
  5152     0799                     	;# 
  5153     079A                     	;# 
  5154     079B                     	;# 
  5155     080C                     	;# 
  5156     080D                     	;# 
  5157     080E                     	;# 
  5158     080F                     	;# 
  5159     0810                     	;# 
  5160     0811                     	;# 
  5161     0812                     	;# 
  5162     0813                     	;# 
  5163     0814                     	;# 
  5164     081A                     	;# 
  5165     081A                     	;# 
  5166     081B                     	;# 
  5167     081C                     	;# 
  5168     081C                     	;# 
  5169     081D                     	;# 
  5170     081E                     	;# 
  5171     081F                     	;# 
  5172     088C                     	;# 
  5173     088D                     	;# 
  5174     088E                     	;# 
  5175     088F                     	;# 
  5176     0890                     	;# 
  5177     0891                     	;# 
  5178     0892                     	;# 
  5179     0893                     	;# 
  5180     0895                     	;# 
  5181     0896                     	;# 
  5182     090C                     	;# 
  5183     090E                     	;# 
  5184     090F                     	;# 
  5185     091F                     	;# 
  5186     098F                     	;# 
  5187     098F                     	;# 
  5188     0990                     	;# 
  5189     0991                     	;# 
  5190     0992                     	;# 
  5191     0993                     	;# 
  5192     0994                     	;# 
  5193     0995                     	;# 
  5194     0996                     	;# 
  5195     0997                     	;# 
  5196     0A19                     	;# 
  5197     0A19                     	;# 
  5198     0A1A                     	;# 
  5199     0A1A                     	;# 
  5200     0A1B                     	;# 
  5201     0A1B                     	;# 
  5202     0A1B                     	;# 
  5203     0A1C                     	;# 
  5204     0A1C                     	;# 
  5205     0A1D                     	;# 
  5206     0A1D                     	;# 
  5207     0A1E                     	;# 
  5208     0A1E                     	;# 
  5209     0A1F                     	;# 
  5210     0A1F                     	;# 
  5211     0A1F                     	;# 
  5212     1E0F                     	;# 
  5213     1E10                     	;# 
  5214     1E11                     	;# 
  5215     1E12                     	;# 
  5216     1E13                     	;# 
  5217     1E14                     	;# 
  5218     1E15                     	;# 
  5219     1E16                     	;# 
  5220     1E17                     	;# 
  5221     1E18                     	;# 
  5222     1E19                     	;# 
  5223     1E1A                     	;# 
  5224     1E1B                     	;# 
  5225     1E1C                     	;# 
  5226     1E1D                     	;# 
  5227     1E1E                     	;# 
  5228     1E1F                     	;# 
  5229     1E20                     	;# 
  5230     1E21                     	;# 
  5231     1E22                     	;# 
  5232     1E23                     	;# 
  5233     1E24                     	;# 
  5234     1E25                     	;# 
  5235     1E26                     	;# 
  5236     1E27                     	;# 
  5237     1E28                     	;# 
  5238     1E29                     	;# 
  5239     1E2A                     	;# 
  5240     1E2B                     	;# 
  5241     1E2C                     	;# 
  5242     1E2D                     	;# 
  5243     1E2E                     	;# 
  5244     1E2F                     	;# 
  5245     1E30                     	;# 
  5246     1E31                     	;# 
  5247     1E32                     	;# 
  5248     1E33                     	;# 
  5249     1E34                     	;# 
  5250     1E35                     	;# 
  5251     1E36                     	;# 
  5252     1E37                     	;# 
  5253     1E8F                     	;# 
  5254     1E90                     	;# 
  5255     1E91                     	;# 
  5256     1E92                     	;# 
  5257     1E93                     	;# 
  5258     1E9C                     	;# 
  5259     1EA1                     	;# 
  5260     1EA2                     	;# 
  5261     1EB1                     	;# 
  5262     1EBB                     	;# 
  5263     1EBC                     	;# 
  5264     1EBD                     	;# 
  5265     1EBE                     	;# 
  5266     1EC3                     	;# 
  5267     1EC5                     	;# 
  5268     1EC6                     	;# 
  5269     1EC7                     	;# 
  5270     1ECB                     	;# 
  5271     1ECC                     	;# 
  5272     1ECD                     	;# 
  5273     1ECE                     	;# 
  5274     1F10                     	;# 
  5275     1F11                     	;# 
  5276     1F12                     	;# 
  5277     1F13                     	;# 
  5278     1F14                     	;# 
  5279     1F15                     	;# 
  5280     1F1C                     	;# 
  5281     1F1D                     	;# 
  5282     1F1E                     	;# 
  5283     1F1F                     	;# 
  5284     1F20                     	;# 
  5285     1F21                     	;# 
  5286     1F22                     	;# 
  5287     1F23                     	;# 
  5288     1F24                     	;# 
  5289     1F25                     	;# 
  5290     1F26                     	;# 
  5291     1F27                     	;# 
  5292     1F38                     	;# 
  5293     1F39                     	;# 
  5294     1F3A                     	;# 
  5295     1F3B                     	;# 
  5296     1F3C                     	;# 
  5297     1F3D                     	;# 
  5298     1F3E                     	;# 
  5299     1F3F                     	;# 
  5300     1F43                     	;# 
  5301     1F44                     	;# 
  5302     1F45                     	;# 
  5303     1F46                     	;# 
  5304     1F47                     	;# 
  5305     1F48                     	;# 
  5306     1F49                     	;# 
  5307     1F4A                     	;# 
  5308     1F4E                     	;# 
  5309     1F4F                     	;# 
  5310     1F50                     	;# 
  5311     1F51                     	;# 
  5312     1F52                     	;# 
  5313     1F53                     	;# 
  5314     1F54                     	;# 
  5315     1F55                     	;# 
  5316     1FE4                     	;# 
  5317     1FE5                     	;# 
  5318     1FE6                     	;# 
  5319     1FE7                     	;# 
  5320     1FE8                     	;# 
  5321     1FE8                     	;# 
  5322     1FE9                     	;# 
  5323     1FEA                     	;# 
  5324     1FEA                     	;# 
  5325     1FEB                     	;# 
  5326     1FED                     	;# 
  5327     1FEE                     	;# 
  5328     1FEF                     	;# 
  5329     0000                     	;# 
  5330     0001                     	;# 
  5331     0002                     	;# 
  5332     0003                     	;# 
  5333     0004                     	;# 
  5334     0005                     	;# 
  5335     0006                     	;# 
  5336     0007                     	;# 
  5337     0008                     	;# 
  5338     0009                     	;# 
  5339     000A                     	;# 
  5340     000B                     	;# 
  5341     000C                     	;# 
  5342     000D                     	;# 
  5343     000E                     	;# 
  5344     0012                     	;# 
  5345     0013                     	;# 
  5346     0014                     	;# 
  5347     0018                     	;# 
  5348     0019                     	;# 
  5349     001A                     	;# 
  5350     009B                     	;# 
  5351     009B                     	;# 
  5352     009C                     	;# 
  5353     009D                     	;# 
  5354     009E                     	;# 
  5355     009F                     	;# 
  5356     0119                     	;# 
  5357     0119                     	;# 
  5358     0119                     	;# 
  5359     011A                     	;# 
  5360     011A                     	;# 
  5361     011A                     	;# 
  5362     011B                     	;# 
  5363     011B                     	;# 
  5364     011B                     	;# 
  5365     011B                     	;# 
  5366     011B                     	;# 
  5367     011C                     	;# 
  5368     011C                     	;# 
  5369     011C                     	;# 
  5370     011D                     	;# 
  5371     011D                     	;# 
  5372     011D                     	;# 
  5373     011E                     	;# 
  5374     011E                     	;# 
  5375     011E                     	;# 
  5376     011F                     	;# 
  5377     011F                     	;# 
  5378     011F                     	;# 
  5379     011F                     	;# 
  5380     011F                     	;# 
  5381     018C                     	;# 
  5382     018D                     	;# 
  5383     018E                     	;# 
  5384     018F                     	;# 
  5385     0190                     	;# 
  5386     0191                     	;# 
  5387     0192                     	;# 
  5388     020C                     	;# 
  5389     020C                     	;# 
  5390     020D                     	;# 
  5391     020E                     	;# 
  5392     020F                     	;# 
  5393     020F                     	;# 
  5394     0210                     	;# 
  5395     0210                     	;# 
  5396     0211                     	;# 
  5397     0211                     	;# 
  5398     028C                     	;# 
  5399     028C                     	;# 
  5400     028D                     	;# 
  5401     028D                     	;# 
  5402     028E                     	;# 
  5403     028F                     	;# 
  5404     0290                     	;# 
  5405     0291                     	;# 
  5406     030C                     	;# 
  5407     030C                     	;# 
  5408     030D                     	;# 
  5409     030E                     	;# 
  5410     030F                     	;# 
  5411     0310                     	;# 
  5412     0310                     	;# 
  5413     0311                     	;# 
  5414     0312                     	;# 
  5415     0313                     	;# 
  5416     0314                     	;# 
  5417     0314                     	;# 
  5418     0315                     	;# 
  5419     0316                     	;# 
  5420     0318                     	;# 
  5421     0318                     	;# 
  5422     0319                     	;# 
  5423     031A                     	;# 
  5424     031C                     	;# 
  5425     031C                     	;# 
  5426     031D                     	;# 
  5427     031E                     	;# 
  5428     038C                     	;# 
  5429     038C                     	;# 
  5430     038D                     	;# 
  5431     038E                     	;# 
  5432     058C                     	;# 
  5433     058C                     	;# 
  5434     058D                     	;# 
  5435     058E                     	;# 
  5436     058F                     	;# 
  5437     058F                     	;# 
  5438     0590                     	;# 
  5439     0591                     	;# 
  5440     0592                     	;# 
  5441     0593                     	;# 
  5442     059C                     	;# 
  5443     059C                     	;# 
  5444     059D                     	;# 
  5445     059D                     	;# 
  5446     059E                     	;# 
  5447     059F                     	;# 
  5448     060C                     	;# 
  5449     060D                     	;# 
  5450     060E                     	;# 
  5451     060F                     	;# 
  5452     0610                     	;# 
  5453     0611                     	;# 
  5454     0612                     	;# 
  5455     0613                     	;# 
  5456     0614                     	;# 
  5457     070C                     	;# 
  5458     070D                     	;# 
  5459     070E                     	;# 
  5460     070F                     	;# 
  5461     0710                     	;# 
  5462     0711                     	;# 
  5463     0712                     	;# 
  5464     0713                     	;# 
  5465     0716                     	;# 
  5466     0717                     	;# 
  5467     0718                     	;# 
  5468     0719                     	;# 
  5469     071A                     	;# 
  5470     071B                     	;# 
  5471     071C                     	;# 
  5472     071D                     	;# 
  5473     0796                     	;# 
  5474     0797                     	;# 
  5475     0798                     	;# 
  5476     0799                     	;# 
  5477     079A                     	;# 
  5478     079B                     	;# 
  5479     080C                     	;# 
  5480     080D                     	;# 
  5481     080E                     	;# 
  5482     080F                     	;# 
  5483     0810                     	;# 
  5484     0811                     	;# 
  5485     0812                     	;# 
  5486     0813                     	;# 
  5487     0814                     	;# 
  5488     081A                     	;# 
  5489     081A                     	;# 
  5490     081B                     	;# 
  5491     081C                     	;# 
  5492     081C                     	;# 
  5493     081D                     	;# 
  5494     081E                     	;# 
  5495     081F                     	;# 
  5496     088C                     	;# 
  5497     088D                     	;# 
  5498     088E                     	;# 
  5499     088F                     	;# 
  5500     0890                     	;# 
  5501     0891                     	;# 
  5502     0892                     	;# 
  5503     0893                     	;# 
  5504     0895                     	;# 
  5505     0896                     	;# 
  5506     090C                     	;# 
  5507     090E                     	;# 
  5508     090F                     	;# 
  5509     091F                     	;# 
  5510     098F                     	;# 
  5511     098F                     	;# 
  5512     0990                     	;# 
  5513     0991                     	;# 
  5514     0992                     	;# 
  5515     0993                     	;# 
  5516     0994                     	;# 
  5517     0995                     	;# 
  5518     0996                     	;# 
  5519     0997                     	;# 
  5520     0A19                     	;# 
  5521     0A19                     	;# 
  5522     0A1A                     	;# 
  5523     0A1A                     	;# 
  5524     0A1B                     	;# 
  5525     0A1B                     	;# 
  5526     0A1B                     	;# 
  5527     0A1C                     	;# 
  5528     0A1C                     	;# 
  5529     0A1D                     	;# 
  5530     0A1D                     	;# 
  5531     0A1E                     	;# 
  5532     0A1E                     	;# 
  5533     0A1F                     	;# 
  5534     0A1F                     	;# 
  5535     0A1F                     	;# 
  5536     1E0F                     	;# 
  5537     1E10                     	;# 
  5538     1E11                     	;# 
  5539     1E12                     	;# 
  5540     1E13                     	;# 
  5541     1E14                     	;# 
  5542     1E15                     	;# 
  5543     1E16                     	;# 
  5544     1E17                     	;# 
  5545     1E18                     	;# 
  5546     1E19                     	;# 
  5547     1E1A                     	;# 
  5548     1E1B                     	;# 
  5549     1E1C                     	;# 
  5550     1E1D                     	;# 
  5551     1E1E                     	;# 
  5552     1E1F                     	;# 
  5553     1E20                     	;# 
  5554     1E21                     	;# 
  5555     1E22                     	;# 
  5556     1E23                     	;# 
  5557     1E24                     	;# 
  5558     1E25                     	;# 
  5559     1E26                     	;# 
  5560     1E27                     	;# 
  5561     1E28                     	;# 
  5562     1E29                     	;# 
  5563     1E2A                     	;# 
  5564     1E2B                     	;# 
  5565     1E2C                     	;# 
  5566     1E2D                     	;# 
  5567     1E2E                     	;# 
  5568     1E2F                     	;# 
  5569     1E30                     	;# 
  5570     1E31                     	;# 
  5571     1E32                     	;# 
  5572     1E33                     	;# 
  5573     1E34                     	;# 
  5574     1E35                     	;# 
  5575     1E36                     	;# 
  5576     1E37                     	;# 
  5577     1E8F                     	;# 
  5578     1E90                     	;# 
  5579     1E91                     	;# 
  5580     1E92                     	;# 
  5581     1E93                     	;# 
  5582     1E9C                     	;# 
  5583     1EA1                     	;# 
  5584     1EA2                     	;# 
  5585     1EB1                     	;# 
  5586     1EBB                     	;# 
  5587     1EBC                     	;# 
  5588     1EBD                     	;# 
  5589     1EBE                     	;# 
  5590     1EC3                     	;# 
  5591     1EC5                     	;# 
  5592     1EC6                     	;# 
  5593     1EC7                     	;# 
  5594     1ECB                     	;# 
  5595     1ECC                     	;# 
  5596     1ECD                     	;# 
  5597     1ECE                     	;# 
  5598     1F10                     	;# 
  5599     1F11                     	;# 
  5600     1F12                     	;# 
  5601     1F13                     	;# 
  5602     1F14                     	;# 
  5603     1F15                     	;# 
  5604     1F1C                     	;# 
  5605     1F1D                     	;# 
  5606     1F1E                     	;# 
  5607     1F1F                     	;# 
  5608     1F20                     	;# 
  5609     1F21                     	;# 
  5610     1F22                     	;# 
  5611     1F23                     	;# 
  5612     1F24                     	;# 
  5613     1F25                     	;# 
  5614     1F26                     	;# 
  5615     1F27                     	;# 
  5616     1F38                     	;# 
  5617     1F39                     	;# 
  5618     1F3A                     	;# 
  5619     1F3B                     	;# 
  5620     1F3C                     	;# 
  5621     1F3D                     	;# 
  5622     1F3E                     	;# 
  5623     1F3F                     	;# 
  5624     1F43                     	;# 
  5625     1F44                     	;# 
  5626     1F45                     	;# 
  5627     1F46                     	;# 
  5628     1F47                     	;# 
  5629     1F48                     	;# 
  5630     1F49                     	;# 
  5631     1F4A                     	;# 
  5632     1F4E                     	;# 
  5633     1F4F                     	;# 
  5634     1F50                     	;# 
  5635     1F51                     	;# 
  5636     1F52                     	;# 
  5637     1F53                     	;# 
  5638     1F54                     	;# 
  5639     1F55                     	;# 
  5640     1FE4                     	;# 
  5641     1FE5                     	;# 
  5642     1FE6                     	;# 
  5643     1FE7                     	;# 
  5644     1FE8                     	;# 
  5645     1FE8                     	;# 
  5646     1FE9                     	;# 
  5647     1FEA                     	;# 
  5648     1FEA                     	;# 
  5649     1FEB                     	;# 
  5650     1FED                     	;# 
  5651     1FEE                     	;# 
  5652     1FEF                     	;# 
  5653     0000                     	;# 
  5654     0001                     	;# 
  5655     0002                     	;# 
  5656     0003                     	;# 
  5657     0004                     	;# 
  5658     0005                     	;# 
  5659     0006                     	;# 
  5660     0007                     	;# 
  5661     0008                     	;# 
  5662     0009                     	;# 
  5663     000A                     	;# 
  5664     000B                     	;# 
  5665     000C                     	;# 
  5666     000D                     	;# 
  5667     000E                     	;# 
  5668     0012                     	;# 
  5669     0013                     	;# 
  5670     0014                     	;# 
  5671     0018                     	;# 
  5672     0019                     	;# 
  5673     001A                     	;# 
  5674     009B                     	;# 
  5675     009B                     	;# 
  5676     009C                     	;# 
  5677     009D                     	;# 
  5678     009E                     	;# 
  5679     009F                     	;# 
  5680     0119                     	;# 
  5681     0119                     	;# 
  5682     0119                     	;# 
  5683     011A                     	;# 
  5684     011A                     	;# 
  5685     011A                     	;# 
  5686     011B                     	;# 
  5687     011B                     	;# 
  5688     011B                     	;# 
  5689     011B                     	;# 
  5690     011B                     	;# 
  5691     011C                     	;# 
  5692     011C                     	;# 
  5693     011C                     	;# 
  5694     011D                     	;# 
  5695     011D                     	;# 
  5696     011D                     	;# 
  5697     011E                     	;# 
  5698     011E                     	;# 
  5699     011E                     	;# 
  5700     011F                     	;# 
  5701     011F                     	;# 
  5702     011F                     	;# 
  5703     011F                     	;# 
  5704     011F                     	;# 
  5705     018C                     	;# 
  5706     018D                     	;# 
  5707     018E                     	;# 
  5708     018F                     	;# 
  5709     0190                     	;# 
  5710     0191                     	;# 
  5711     0192                     	;# 
  5712     020C                     	;# 
  5713     020C                     	;# 
  5714     020D                     	;# 
  5715     020E                     	;# 
  5716     020F                     	;# 
  5717     020F                     	;# 
  5718     0210                     	;# 
  5719     0210                     	;# 
  5720     0211                     	;# 
  5721     0211                     	;# 
  5722     028C                     	;# 
  5723     028C                     	;# 
  5724     028D                     	;# 
  5725     028D                     	;# 
  5726     028E                     	;# 
  5727     028F                     	;# 
  5728     0290                     	;# 
  5729     0291                     	;# 
  5730     030C                     	;# 
  5731     030C                     	;# 
  5732     030D                     	;# 
  5733     030E                     	;# 
  5734     030F                     	;# 
  5735     0310                     	;# 
  5736     0310                     	;# 
  5737     0311                     	;# 
  5738     0312                     	;# 
  5739     0313                     	;# 
  5740     0314                     	;# 
  5741     0314                     	;# 
  5742     0315                     	;# 
  5743     0316                     	;# 
  5744     0318                     	;# 
  5745     0318                     	;# 
  5746     0319                     	;# 
  5747     031A                     	;# 
  5748     031C                     	;# 
  5749     031C                     	;# 
  5750     031D                     	;# 
  5751     031E                     	;# 
  5752     038C                     	;# 
  5753     038C                     	;# 
  5754     038D                     	;# 
  5755     038E                     	;# 
  5756     058C                     	;# 
  5757     058C                     	;# 
  5758     058D                     	;# 
  5759     058E                     	;# 
  5760     058F                     	;# 
  5761     058F                     	;# 
  5762     0590                     	;# 
  5763     0591                     	;# 
  5764     0592                     	;# 
  5765     0593                     	;# 
  5766     059C                     	;# 
  5767     059C                     	;# 
  5768     059D                     	;# 
  5769     059D                     	;# 
  5770     059E                     	;# 
  5771     059F                     	;# 
  5772     060C                     	;# 
  5773     060D                     	;# 
  5774     060E                     	;# 
  5775     060F                     	;# 
  5776     0610                     	;# 
  5777     0611                     	;# 
  5778     0612                     	;# 
  5779     0613                     	;# 
  5780     0614                     	;# 
  5781     070C                     	;# 
  5782     070D                     	;# 
  5783     070E                     	;# 
  5784     070F                     	;# 
  5785     0710                     	;# 
  5786     0711                     	;# 
  5787     0712                     	;# 
  5788     0713                     	;# 
  5789     0716                     	;# 
  5790     0717                     	;# 
  5791     0718                     	;# 
  5792     0719                     	;# 
  5793     071A                     	;# 
  5794     071B                     	;# 
  5795     071C                     	;# 
  5796     071D                     	;# 
  5797     0796                     	;# 
  5798     0797                     	;# 
  5799     0798                     	;# 
  5800     0799                     	;# 
  5801     079A                     	;# 
  5802     079B                     	;# 
  5803     080C                     	;# 
  5804     080D                     	;# 
  5805     080E                     	;# 
  5806     080F                     	;# 
  5807     0810                     	;# 
  5808     0811                     	;# 
  5809     0812                     	;# 
  5810     0813                     	;# 
  5811     0814                     	;# 
  5812     081A                     	;# 
  5813     081A                     	;# 
  5814     081B                     	;# 
  5815     081C                     	;# 
  5816     081C                     	;# 
  5817     081D                     	;# 
  5818     081E                     	;# 
  5819     081F                     	;# 
  5820     088C                     	;# 
  5821     088D                     	;# 
  5822     088E                     	;# 
  5823     088F                     	;# 
  5824     0890                     	;# 
  5825     0891                     	;# 
  5826     0892                     	;# 
  5827     0893                     	;# 
  5828     0895                     	;# 
  5829     0896                     	;# 
  5830     090C                     	;# 
  5831     090E                     	;# 
  5832     090F                     	;# 
  5833     091F                     	;# 
  5834     098F                     	;# 
  5835     098F                     	;# 
  5836     0990                     	;# 
  5837     0991                     	;# 
  5838     0992                     	;# 
  5839     0993                     	;# 
  5840     0994                     	;# 
  5841     0995                     	;# 
  5842     0996                     	;# 
  5843     0997                     	;# 
  5844     0A19                     	;# 
  5845     0A19                     	;# 
  5846     0A1A                     	;# 
  5847     0A1A                     	;# 
  5848     0A1B                     	;# 
  5849     0A1B                     	;# 
  5850     0A1B                     	;# 
  5851     0A1C                     	;# 
  5852     0A1C                     	;# 
  5853     0A1D                     	;# 
  5854     0A1D                     	;# 
  5855     0A1E                     	;# 
  5856     0A1E                     	;# 
  5857     0A1F                     	;# 
  5858     0A1F                     	;# 
  5859     0A1F                     	;# 
  5860     1E0F                     	;# 
  5861     1E10                     	;# 
  5862     1E11                     	;# 
  5863     1E12                     	;# 
  5864     1E13                     	;# 
  5865     1E14                     	;# 
  5866     1E15                     	;# 
  5867     1E16                     	;# 
  5868     1E17                     	;# 
  5869     1E18                     	;# 
  5870     1E19                     	;# 
  5871     1E1A                     	;# 
  5872     1E1B                     	;# 
  5873     1E1C                     	;# 
  5874     1E1D                     	;# 
  5875     1E1E                     	;# 
  5876     1E1F                     	;# 
  5877     1E20                     	;# 
  5878     1E21                     	;# 
  5879     1E22                     	;# 
  5880     1E23                     	;# 
  5881     1E24                     	;# 
  5882     1E25                     	;# 
  5883     1E26                     	;# 
  5884     1E27                     	;# 
  5885     1E28                     	;# 
  5886     1E29                     	;# 
  5887     1E2A                     	;# 
  5888     1E2B                     	;# 
  5889     1E2C                     	;# 
  5890     1E2D                     	;# 
  5891     1E2E                     	;# 
  5892     1E2F                     	;# 
  5893     1E30                     	;# 
  5894     1E31                     	;# 
  5895     1E32                     	;# 
  5896     1E33                     	;# 
  5897     1E34                     	;# 
  5898     1E35                     	;# 
  5899     1E36                     	;# 
  5900     1E37                     	;# 
  5901     1E8F                     	;# 
  5902     1E90                     	;# 
  5903     1E91                     	;# 
  5904     1E92                     	;# 
  5905     1E93                     	;# 
  5906     1E9C                     	;# 
  5907     1EA1                     	;# 
  5908     1EA2                     	;# 
  5909     1EB1                     	;# 
  5910     1EBB                     	;# 
  5911     1EBC                     	;# 
  5912     1EBD                     	;# 
  5913     1EBE                     	;# 
  5914     1EC3                     	;# 
  5915     1EC5                     	;# 
  5916     1EC6                     	;# 
  5917     1EC7                     	;# 
  5918     1ECB                     	;# 
  5919     1ECC                     	;# 
  5920     1ECD                     	;# 
  5921     1ECE                     	;# 
  5922     1F10                     	;# 
  5923     1F11                     	;# 
  5924     1F12                     	;# 
  5925     1F13                     	;# 
  5926     1F14                     	;# 
  5927     1F15                     	;# 
  5928     1F1C                     	;# 
  5929     1F1D                     	;# 
  5930     1F1E                     	;# 
  5931     1F1F                     	;# 
  5932     1F20                     	;# 
  5933     1F21                     	;# 
  5934     1F22                     	;# 
  5935     1F23                     	;# 
  5936     1F24                     	;# 
  5937     1F25                     	;# 
  5938     1F26                     	;# 
  5939     1F27                     	;# 
  5940     1F38                     	;# 
  5941     1F39                     	;# 
  5942     1F3A                     	;# 
  5943     1F3B                     	;# 
  5944     1F3C                     	;# 
  5945     1F3D                     	;# 
  5946     1F3E                     	;# 
  5947     1F3F                     	;# 
  5948     1F43                     	;# 
  5949     1F44                     	;# 
  5950     1F45                     	;# 
  5951     1F46                     	;# 
  5952     1F47                     	;# 
  5953     1F48                     	;# 
  5954     1F49                     	;# 
  5955     1F4A                     	;# 
  5956     1F4E                     	;# 
  5957     1F4F                     	;# 
  5958     1F50                     	;# 
  5959     1F51                     	;# 
  5960     1F52                     	;# 
  5961     1F53                     	;# 
  5962     1F54                     	;# 
  5963     1F55                     	;# 
  5964     1FE4                     	;# 
  5965     1FE5                     	;# 
  5966     1FE6                     	;# 
  5967     1FE7                     	;# 
  5968     1FE8                     	;# 
  5969     1FE8                     	;# 
  5970     1FE9                     	;# 
  5971     1FEA                     	;# 
  5972     1FEA                     	;# 
  5973     1FEB                     	;# 
  5974     1FED                     	;# 
  5975     1FEE                     	;# 
  5976     1FEF                     	;# 
  5977     0000                     	;# 
  5978     0001                     	;# 
  5979     0002                     	;# 
  5980     0003                     	;# 
  5981     0004                     	;# 
  5982     0005                     	;# 
  5983     0006                     	;# 
  5984     0007                     	;# 
  5985     0008                     	;# 
  5986     0009                     	;# 
  5987     000A                     	;# 
  5988     000B                     	;# 
  5989     000C                     	;# 
  5990     000D                     	;# 
  5991     000E                     	;# 
  5992     0012                     	;# 
  5993     0013                     	;# 
  5994     0014                     	;# 
  5995     0018                     	;# 
  5996     0019                     	;# 
  5997     001A                     	;# 
  5998     009B                     	;# 
  5999     009B                     	;# 
  6000     009C                     	;# 
  6001     009D                     	;# 
  6002     009E                     	;# 
  6003     009F                     	;# 
  6004     0119                     	;# 
  6005     0119                     	;# 
  6006     0119                     	;# 
  6007     011A                     	;# 
  6008     011A                     	;# 
  6009     011A                     	;# 
  6010     011B                     	;# 
  6011     011B                     	;# 
  6012     011B                     	;# 
  6013     011B                     	;# 
  6014     011B                     	;# 
  6015     011C                     	;# 
  6016     011C                     	;# 
  6017     011C                     	;# 
  6018     011D                     	;# 
  6019     011D                     	;# 
  6020     011D                     	;# 
  6021     011E                     	;# 
  6022     011E                     	;# 
  6023     011E                     	;# 
  6024     011F                     	;# 
  6025     011F                     	;# 
  6026     011F                     	;# 
  6027     011F                     	;# 
  6028     011F                     	;# 
  6029     018C                     	;# 
  6030     018D                     	;# 
  6031     018E                     	;# 
  6032     018F                     	;# 
  6033     0190                     	;# 
  6034     0191                     	;# 
  6035     0192                     	;# 
  6036     020C                     	;# 
  6037     020C                     	;# 
  6038     020D                     	;# 
  6039     020E                     	;# 
  6040     020F                     	;# 
  6041     020F                     	;# 
  6042     0210                     	;# 
  6043     0210                     	;# 
  6044     0211                     	;# 
  6045     0211                     	;# 
  6046     028C                     	;# 
  6047     028C                     	;# 
  6048     028D                     	;# 
  6049     028D                     	;# 
  6050     028E                     	;# 
  6051     028F                     	;# 
  6052     0290                     	;# 
  6053     0291                     	;# 
  6054     030C                     	;# 
  6055     030C                     	;# 
  6056     030D                     	;# 
  6057     030E                     	;# 
  6058     030F                     	;# 
  6059     0310                     	;# 
  6060     0310                     	;# 
  6061     0311                     	;# 
  6062     0312                     	;# 
  6063     0313                     	;# 
  6064     0314                     	;# 
  6065     0314                     	;# 
  6066     0315                     	;# 
  6067     0316                     	;# 
  6068     0318                     	;# 
  6069     0318                     	;# 
  6070     0319                     	;# 
  6071     031A                     	;# 
  6072     031C                     	;# 
  6073     031C                     	;# 
  6074     031D                     	;# 
  6075     031E                     	;# 
  6076     038C                     	;# 
  6077     038C                     	;# 
  6078     038D                     	;# 
  6079     038E                     	;# 
  6080     058C                     	;# 
  6081     058C                     	;# 
  6082     058D                     	;# 
  6083     058E                     	;# 
  6084     058F                     	;# 
  6085     058F                     	;# 
  6086     0590                     	;# 
  6087     0591                     	;# 
  6088     0592                     	;# 
  6089     0593                     	;# 
  6090     059C                     	;# 
  6091     059C                     	;# 
  6092     059D                     	;# 
  6093     059D                     	;# 
  6094     059E                     	;# 
  6095     059F                     	;# 
  6096     060C                     	;# 
  6097     060D                     	;# 
  6098     060E                     	;# 
  6099     060F                     	;# 
  6100     0610                     	;# 
  6101     0611                     	;# 
  6102     0612                     	;# 
  6103     0613                     	;# 
  6104     0614                     	;# 
  6105     070C                     	;# 
  6106     070D                     	;# 
  6107     070E                     	;# 
  6108     070F                     	;# 
  6109     0710                     	;# 
  6110     0711                     	;# 
  6111     0712                     	;# 
  6112     0713                     	;# 
  6113     0716                     	;# 
  6114     0717                     	;# 
  6115     0718                     	;# 
  6116     0719                     	;# 
  6117     071A                     	;# 
  6118     071B                     	;# 
  6119     071C                     	;# 
  6120     071D                     	;# 
  6121     0796                     	;# 
  6122     0797                     	;# 
  6123     0798                     	;# 
  6124     0799                     	;# 
  6125     079A                     	;# 
  6126     079B                     	;# 
  6127     080C                     	;# 
  6128     080D                     	;# 
  6129     080E                     	;# 
  6130     080F                     	;# 
  6131     0810                     	;# 
  6132     0811                     	;# 
  6133     0812                     	;# 
  6134     0813                     	;# 
  6135     0814                     	;# 
  6136     081A                     	;# 
  6137     081A                     	;# 
  6138     081B                     	;# 
  6139     081C                     	;# 
  6140     081C                     	;# 
  6141     081D                     	;# 
  6142     081E                     	;# 
  6143     081F                     	;# 
  6144     088C                     	;# 
  6145     088D                     	;# 
  6146     088E                     	;# 
  6147     088F                     	;# 
  6148     0890                     	;# 
  6149     0891                     	;# 
  6150     0892                     	;# 
  6151     0893                     	;# 
  6152     0895                     	;# 
  6153     0896                     	;# 
  6154     090C                     	;# 
  6155     090E                     	;# 
  6156     090F                     	;# 
  6157     091F                     	;# 
  6158     098F                     	;# 
  6159     098F                     	;# 
  6160     0990                     	;# 
  6161     0991                     	;# 
  6162     0992                     	;# 
  6163     0993                     	;# 
  6164     0994                     	;# 
  6165     0995                     	;# 
  6166     0996                     	;# 
  6167     0997                     	;# 
  6168     0A19                     	;# 
  6169     0A19                     	;# 
  6170     0A1A                     	;# 
  6171     0A1A                     	;# 
  6172     0A1B                     	;# 
  6173     0A1B                     	;# 
  6174     0A1B                     	;# 
  6175     0A1C                     	;# 
  6176     0A1C                     	;# 
  6177     0A1D                     	;# 
  6178     0A1D                     	;# 
  6179     0A1E                     	;# 
  6180     0A1E                     	;# 
  6181     0A1F                     	;# 
  6182     0A1F                     	;# 
  6183     0A1F                     	;# 
  6184     1E0F                     	;# 
  6185     1E10                     	;# 
  6186     1E11                     	;# 
  6187     1E12                     	;# 
  6188     1E13                     	;# 
  6189     1E14                     	;# 
  6190     1E15                     	;# 
  6191     1E16                     	;# 
  6192     1E17                     	;# 
  6193     1E18                     	;# 
  6194     1E19                     	;# 
  6195     1E1A                     	;# 
  6196     1E1B                     	;# 
  6197     1E1C                     	;# 
  6198     1E1D                     	;# 
  6199     1E1E                     	;# 
  6200     1E1F                     	;# 
  6201     1E20                     	;# 
  6202     1E21                     	;# 
  6203     1E22                     	;# 
  6204     1E23                     	;# 
  6205     1E24                     	;# 
  6206     1E25                     	;# 
  6207     1E26                     	;# 
  6208     1E27                     	;# 
  6209     1E28                     	;# 
  6210     1E29                     	;# 
  6211     1E2A                     	;# 
  6212     1E2B                     	;# 
  6213     1E2C                     	;# 
  6214     1E2D                     	;# 
  6215     1E2E                     	;# 
  6216     1E2F                     	;# 
  6217     1E30                     	;# 
  6218     1E31                     	;# 
  6219     1E32                     	;# 
  6220     1E33                     	;# 
  6221     1E34                     	;# 
  6222     1E35                     	;# 
  6223     1E36                     	;# 
  6224     1E37                     	;# 
  6225     1E8F                     	;# 
  6226     1E90                     	;# 
  6227     1E91                     	;# 
  6228     1E92                     	;# 
  6229     1E93                     	;# 
  6230     1E9C                     	;# 
  6231     1EA1                     	;# 
  6232     1EA2                     	;# 
  6233     1EB1                     	;# 
  6234     1EBB                     	;# 
  6235     1EBC                     	;# 
  6236     1EBD                     	;# 
  6237     1EBE                     	;# 
  6238     1EC3                     	;# 
  6239     1EC5                     	;# 
  6240     1EC6                     	;# 
  6241     1EC7                     	;# 
  6242     1ECB                     	;# 
  6243     1ECC                     	;# 
  6244     1ECD                     	;# 
  6245     1ECE                     	;# 
  6246     1F10                     	;# 
  6247     1F11                     	;# 
  6248     1F12                     	;# 
  6249     1F13                     	;# 
  6250     1F14                     	;# 
  6251     1F15                     	;# 
  6252     1F1C                     	;# 
  6253     1F1D                     	;# 
  6254     1F1E                     	;# 
  6255     1F1F                     	;# 
  6256     1F20                     	;# 
  6257     1F21                     	;# 
  6258     1F22                     	;# 
  6259     1F23                     	;# 
  6260     1F24                     	;# 
  6261     1F25                     	;# 
  6262     1F26                     	;# 
  6263     1F27                     	;# 
  6264     1F38                     	;# 
  6265     1F39                     	;# 
  6266     1F3A                     	;# 
  6267     1F3B                     	;# 
  6268     1F3C                     	;# 
  6269     1F3D                     	;# 
  6270     1F3E                     	;# 
  6271     1F3F                     	;# 
  6272     1F43                     	;# 
  6273     1F44                     	;# 
  6274     1F45                     	;# 
  6275     1F46                     	;# 
  6276     1F47                     	;# 
  6277     1F48                     	;# 
  6278     1F49                     	;# 
  6279     1F4A                     	;# 
  6280     1F4E                     	;# 
  6281     1F4F                     	;# 
  6282     1F50                     	;# 
  6283     1F51                     	;# 
  6284     1F52                     	;# 
  6285     1F53                     	;# 
  6286     1F54                     	;# 
  6287     1F55                     	;# 
  6288     1FE4                     	;# 
  6289     1FE5                     	;# 
  6290     1FE6                     	;# 
  6291     1FE7                     	;# 
  6292     1FE8                     	;# 
  6293     1FE8                     	;# 
  6294     1FE9                     	;# 
  6295     1FEA                     	;# 
  6296     1FEA                     	;# 
  6297     1FEB                     	;# 
  6298     1FED                     	;# 
  6299     1FEE                     	;# 
  6300     1FEF                     	;# 
  6301                           
  6302                           	psect	idataBANK0
  6303     08F8                     __pidataBANK0:
  6304                           
  6305                           ;initializer for _isense_max
  6306     08F8  34A1               	retlw	161
  6307     08F9  3401               	retlw	1
  6308                           
  6309                           ;initializer for _LIN_timeout
  6310     08FA  340A               	retlw	10
  6311                           
  6312                           ;initializer for _b1_coef
  6313     08FB  3469               	retlw	105
  6314                           
  6315                           ;initializer for _dac_i_hw_trip
  6316     08FC  3403               	retlw	3
  6317                           
  6318                           ;initializer for _tj_limit
  6319     08FD  34AF               	retlw	175
  6320                           
  6321                           ;initializer for _Tambient
  6322     08FE  3455               	retlw	85
  6323     08FF  3400               	retlw	0
  6324                           
  6325                           	psect	idataBANK1
  6326     0914                     __pidataBANK1:
  6327                           
  6328                           ;initializer for _tcc_sample_time
  6329     0914  34E8               	retlw	232
  6330     0915  3403               	retlw	3
  6331                           
  6332                           ;initializer for _a1_coef
  6333     0916  342E               	retlw	46
  6334     0917  34FF               	retlw	255
  6335                           
  6336                           ;initializer for _current2counts_squared
  6337     0918  349E               	retlw	158
  6338     0919  3402               	retlw	2
  6339                           
  6340                           ;initializer for _factor_rdson_rthsa
  6341     091A  34C1               	retlw	193
  6342     091B  3405               	retlw	5
  6343                           
  6344                           ;initializer for _factor_rdson_rthjs
  6345     091C  3413               	retlw	19
  6346     091D  3403               	retlw	3
  6347                           
  6348                           	psect	stringtext1
  6349     0252                     __pstringtext1:
  6350     0252                     _temperatureLUT:
  6351     0252  3468               	retlw	104
  6352     0253  3400               	retlw	0
  6353     0254  346A               	retlw	106
  6354     0255  3400               	retlw	0
  6355     0256  346C               	retlw	108
  6356     0257  3400               	retlw	0
  6357     0258  346F               	retlw	111
  6358     0259  3400               	retlw	0
  6359     025A  3471               	retlw	113
  6360     025B  3400               	retlw	0
  6361     025C  3473               	retlw	115
  6362     025D  3400               	retlw	0
  6363     025E  3476               	retlw	118
  6364     025F  3400               	retlw	0
  6365     0260  3478               	retlw	120
  6366     0261  3400               	retlw	0
  6367     0262  347B               	retlw	123
  6368     0263  3400               	retlw	0
  6369     0264  347D               	retlw	125
  6370     0265  3400               	retlw	0
  6371     0266  3480               	retlw	128
  6372     0267  3400               	retlw	0
  6373     0268  3483               	retlw	131
  6374     0269  3400               	retlw	0
  6375     026A  3485               	retlw	133
  6376     026B  3400               	retlw	0
  6377     026C  3488               	retlw	136
  6378     026D  3400               	retlw	0
  6379     026E  348B               	retlw	139
  6380     026F  3400               	retlw	0
  6381     0270  348E               	retlw	142
  6382     0271  3400               	retlw	0
  6383     0272  3491               	retlw	145
  6384     0273  3400               	retlw	0
  6385     0274  3494               	retlw	148
  6386     0275  3400               	retlw	0
  6387     0276  3497               	retlw	151
  6388     0277  3400               	retlw	0
  6389     0278  349B               	retlw	155
  6390     0279  3400               	retlw	0
  6391     027A  349E               	retlw	158
  6392     027B  3400               	retlw	0
  6393     027C  34A1               	retlw	161
  6394     027D  3400               	retlw	0
  6395     027E  34A5               	retlw	165
  6396     027F  3400               	retlw	0
  6397     0280  34A8               	retlw	168
  6398     0281  3400               	retlw	0
  6399     0282  34AC               	retlw	172
  6400     0283  3400               	retlw	0
  6401     0284  34B0               	retlw	176
  6402     0285  3400               	retlw	0
  6403     0286  34B3               	retlw	179
  6404     0287  3400               	retlw	0
  6405     0288  34B7               	retlw	183
  6406     0289  3400               	retlw	0
  6407     028A  34BB               	retlw	187
  6408     028B  3400               	retlw	0
  6409     028C  34BF               	retlw	191
  6410     028D  3400               	retlw	0
  6411     028E  34C3               	retlw	195
  6412     028F  3400               	retlw	0
  6413     0290  34C8               	retlw	200
  6414     0291  3400               	retlw	0
  6415     0292  34CC               	retlw	204
  6416     0293  3400               	retlw	0
  6417     0294  34D0               	retlw	208
  6418     0295  3400               	retlw	0
  6419     0296  34D5               	retlw	213
  6420     0297  3400               	retlw	0
  6421     0298  34D9               	retlw	217
  6422     0299  3400               	retlw	0
  6423     029A  34DE               	retlw	222
  6424     029B  3400               	retlw	0
  6425     029C  34E3               	retlw	227
  6426     029D  3400               	retlw	0
  6427     029E  34E8               	retlw	232
  6428     029F  3400               	retlw	0
  6429     02A0  34EC               	retlw	236
  6430     02A1  3400               	retlw	0
  6431     02A2  34F1               	retlw	241
  6432     02A3  3400               	retlw	0
  6433     02A4  34F7               	retlw	247
  6434     02A5  3400               	retlw	0
  6435     02A6  34FC               	retlw	252
  6436     02A7  3400               	retlw	0
  6437     02A8  3401               	retlw	1
  6438     02A9  3401               	retlw	1
  6439     02AA  3407               	retlw	7
  6440     02AB  3401               	retlw	1
  6441     02AC  340C               	retlw	12
  6442     02AD  3401               	retlw	1
  6443     02AE  3412               	retlw	18
  6444     02AF  3401               	retlw	1
  6445     02B0  3417               	retlw	23
  6446     02B1  3401               	retlw	1
  6447     02B2  341D               	retlw	29
  6448     02B3  3401               	retlw	1
  6449     02B4  3423               	retlw	35
  6450     02B5  3401               	retlw	1
  6451     02B6  3429               	retlw	41
  6452     02B7  3401               	retlw	1
  6453     02B8  342F               	retlw	47
  6454     02B9  3401               	retlw	1
  6455     02BA  3436               	retlw	54
  6456     02BB  3401               	retlw	1
  6457     02BC  343C               	retlw	60
  6458     02BD  3401               	retlw	1
  6459     02BE  3442               	retlw	66
  6460     02BF  3401               	retlw	1
  6461     02C0  3449               	retlw	73
  6462     02C1  3401               	retlw	1
  6463     02C2  3450               	retlw	80
  6464     02C3  3401               	retlw	1
  6465     02C4  3456               	retlw	86
  6466     02C5  3401               	retlw	1
  6467     02C6  345D               	retlw	93
  6468     02C7  3401               	retlw	1
  6469     02C8  3464               	retlw	100
  6470     02C9  3401               	retlw	1
  6471     02CA  346B               	retlw	107
  6472     02CB  3401               	retlw	1
  6473     02CC  3472               	retlw	114
  6474     02CD  3401               	retlw	1
  6475     02CE  3479               	retlw	121
  6476     02CF  3401               	retlw	1
  6477     02D0  3481               	retlw	129
  6478     02D1  3401               	retlw	1
  6479     02D2  3488               	retlw	136
  6480     02D3  3401               	retlw	1
  6481     02D4  3490               	retlw	144
  6482     02D5  3401               	retlw	1
  6483     02D6  3497               	retlw	151
  6484     02D7  3401               	retlw	1
  6485     02D8  349F               	retlw	159
  6486     02D9  3401               	retlw	1
  6487     02DA  34A7               	retlw	167
  6488     02DB  3401               	retlw	1
  6489     02DC  34AF               	retlw	175
  6490     02DD  3401               	retlw	1
  6491     02DE  34B7               	retlw	183
  6492     02DF  3401               	retlw	1
  6493     02E0  34BF               	retlw	191
  6494     02E1  3401               	retlw	1
  6495     02E2  34C7               	retlw	199
  6496     02E3  3401               	retlw	1
  6497     02E4  34D0               	retlw	208
  6498     02E5  3401               	retlw	1
  6499     02E6  34D8               	retlw	216
  6500     02E7  3401               	retlw	1
  6501     02E8  34E0               	retlw	224
  6502     02E9  3401               	retlw	1
  6503     02EA  34E9               	retlw	233
  6504     02EB  3401               	retlw	1
  6505     02EC  34F1               	retlw	241
  6506     02ED  3401               	retlw	1
  6507     02EE  34FA               	retlw	250
  6508     02EF  3401               	retlw	1
  6509     02F0  3402               	retlw	2
  6510     02F1  3402               	retlw	2
  6511     02F2  340B               	retlw	11
  6512     02F3  3402               	retlw	2
  6513     02F4  3414               	retlw	20
  6514     02F5  3402               	retlw	2
  6515     02F6  341C               	retlw	28
  6516     02F7  3402               	retlw	2
  6517     02F8  3425               	retlw	37
  6518     02F9  3402               	retlw	2
  6519     02FA  342E               	retlw	46
  6520     02FB  3402               	retlw	2
  6521     02FC  3437               	retlw	55
  6522     02FD  3402               	retlw	2
  6523     02FE  343F               	retlw	63
  6524     02FF  3402               	retlw	2
  6525     0300  3448               	retlw	72
  6526     0301  3402               	retlw	2
  6527     0302  3451               	retlw	81
  6528     0303  3402               	retlw	2
  6529     0304  3459               	retlw	89
  6530     0305  3402               	retlw	2
  6531     0306  3462               	retlw	98
  6532     0307  3402               	retlw	2
  6533     0308  346B               	retlw	107
  6534     0309  3402               	retlw	2
  6535     030A  3474               	retlw	116
  6536     030B  3402               	retlw	2
  6537     030C  347C               	retlw	124
  6538     030D  3402               	retlw	2
  6539     030E  3485               	retlw	133
  6540     030F  3402               	retlw	2
  6541     0310  348E               	retlw	142
  6542     0311  3402               	retlw	2
  6543     0312  3496               	retlw	150
  6544     0313  3402               	retlw	2
  6545     0314  349F               	retlw	159
  6546     0315  3402               	retlw	2
  6547     0316  34A7               	retlw	167
  6548     0317  3402               	retlw	2
  6549     0318  34B0               	retlw	176
  6550     0319  3402               	retlw	2
  6551     031A  34B8               	retlw	184
  6552     031B  3402               	retlw	2
  6553     031C  34C0               	retlw	192
  6554     031D  3402               	retlw	2
  6555     031E  34C8               	retlw	200
  6556     031F  3402               	retlw	2
  6557     0320  34D1               	retlw	209
  6558     0321  3402               	retlw	2
  6559     0322  34D9               	retlw	217
  6560     0323  3402               	retlw	2
  6561     0324  34E0               	retlw	224
  6562     0325  3402               	retlw	2
  6563     0326  34E8               	retlw	232
  6564     0327  3402               	retlw	2
  6565     0328  34F0               	retlw	240
  6566     0329  3402               	retlw	2
  6567     032A  34F8               	retlw	248
  6568     032B  3402               	retlw	2
  6569     032C  34FF               	retlw	255
  6570     032D  3402               	retlw	2
  6571     032E  3407               	retlw	7
  6572     032F  3403               	retlw	3
  6573     0330  340E               	retlw	14
  6574     0331  3403               	retlw	3
  6575     0332  3415               	retlw	21
  6576     0333  3403               	retlw	3
  6577     0334  341D               	retlw	29
  6578     0335  3403               	retlw	3
  6579     0336  3424               	retlw	36
  6580     0337  3403               	retlw	3
  6581     0338  342A               	retlw	42
  6582     0339  3403               	retlw	3
  6583     033A  3431               	retlw	49
  6584     033B  3403               	retlw	3
  6585     033C  3438               	retlw	56
  6586     033D  3403               	retlw	3
  6587     033E  343E               	retlw	62
  6588     033F  3403               	retlw	3
  6589     0340  3445               	retlw	69
  6590     0341  3403               	retlw	3
  6591     0342  344B               	retlw	75
  6592     0343  3403               	retlw	3
  6593     0344  3451               	retlw	81
  6594     0345  3403               	retlw	3
  6595     0346  3457               	retlw	87
  6596     0347  3403               	retlw	3
  6597     0348  345D               	retlw	93
  6598     0349  3403               	retlw	3
  6599     034A  3463               	retlw	99
  6600     034B  3403               	retlw	3
  6601     034C  3468               	retlw	104
  6602     034D  3403               	retlw	3
  6603     034E  346E               	retlw	110
  6604     034F  3403               	retlw	3
  6605     0350  3473               	retlw	115
  6606     0351  3403               	retlw	3
  6607     0352  3478               	retlw	120
  6608     0353  3403               	retlw	3
  6609     0354  347D               	retlw	125
  6610     0355  3403               	retlw	3
  6611     0356  3482               	retlw	130
  6612     0357  3403               	retlw	3
  6613     0358  3487               	retlw	135
  6614     0359  3403               	retlw	3
  6615     035A  348C               	retlw	140
  6616     035B  3403               	retlw	3
  6617     035C  3490               	retlw	144
  6618     035D  3403               	retlw	3
  6619     035E  3495               	retlw	149
  6620     035F  3403               	retlw	3
  6621     0360  3499               	retlw	153
  6622     0361  3403               	retlw	3
  6623     0362  349D               	retlw	157
  6624     0363  3403               	retlw	3
  6625     0364  34A1               	retlw	161
  6626     0365  3403               	retlw	3
  6627     0366  34A5               	retlw	165
  6628     0367  3403               	retlw	3
  6629     0368  34A9               	retlw	169
  6630     0369  3403               	retlw	3
  6631     036A  34AD               	retlw	173
  6632     036B  3403               	retlw	3
  6633     036C  34B0               	retlw	176
  6634     036D  3403               	retlw	3
  6635     036E  34B4               	retlw	180
  6636     036F  3403               	retlw	3
  6637     0370  34B7               	retlw	183
  6638     0371  3403               	retlw	3
  6639     0372  34BA               	retlw	186
  6640     0373  3403               	retlw	3
  6641     0374  34BD               	retlw	189
  6642     0375  3403               	retlw	3
  6643     0376  34C0               	retlw	192
  6644     0377  3403               	retlw	3
  6645     0378  34C3               	retlw	195
  6646     0379  3403               	retlw	3
  6647     037A  34C6               	retlw	198
  6648     037B  3403               	retlw	3
  6649     037C  34C8               	retlw	200
  6650     037D  3403               	retlw	3
  6651     037E  34CB               	retlw	203
  6652     037F  3403               	retlw	3
  6653     0380  34CD               	retlw	205
  6654     0381  3403               	retlw	3
  6655     0382  34D0               	retlw	208
  6656     0383  3403               	retlw	3
  6657     0384  34D2               	retlw	210
  6658     0385  3403               	retlw	3
  6659     0386  34D4               	retlw	212
  6660     0387  3403               	retlw	3
  6661     0388  34D6               	retlw	214
  6662     0389  3403               	retlw	3
  6663     038A  34D8               	retlw	216
  6664     038B  3403               	retlw	3
  6665     038C  34DA               	retlw	218
  6666     038D  3403               	retlw	3
  6667     038E  34DC               	retlw	220
  6668     038F  3403               	retlw	3
  6669     0390  34DE               	retlw	222
  6670     0391  3403               	retlw	3
  6671     0392  34E0               	retlw	224
  6672     0393  3403               	retlw	3
  6673     0394  34E1               	retlw	225
  6674     0395  3403               	retlw	3
  6675     0396  34E3               	retlw	227
  6676     0397  3403               	retlw	3
  6677     0398  34E4               	retlw	228
  6678     0399  3403               	retlw	3
  6679     039A  34E6               	retlw	230
  6680     039B  3403               	retlw	3
  6681     039C  34E7               	retlw	231
  6682     039D  3403               	retlw	3
  6683     039E                     __end_of_temperatureLUT:
  6684                           
  6685                           	psect	stringtext2
  6686     06EF                     __pstringtext2:
  6687     06EF                     _scheduleTable:
  6688     06EF  3400               	retlw	0
  6689     06F0  3401               	retlw	1
  6690     06F1  3401               	retlw	1
  6691     06F2  344D               	retlw	low (_LIN_COMMAND_Data| 0)
  6692     06F3  3400               	retlw	high (_LIN_COMMAND_Data| 0)
  6693     06F4  3401               	retlw	1
  6694     06F5  3401               	retlw	1
  6695     06F6  3401               	retlw	1
  6696     06F7  344C               	retlw	low (_LIN_TRIGGER_TYPE_Data| 0)
  6697     06F8  3400               	retlw	high (_LIN_TRIGGER_TYPE_Data| 0)
  6698     06F9  3402               	retlw	2
  6699     06FA  3401               	retlw	1
  6700     06FB  3401               	retlw	1
  6701     06FC  344B               	retlw	low (_LIN_ENTER_SLEEP_MODE_Data| 0)
  6702     06FD  3400               	retlw	high (_LIN_ENTER_SLEEP_MODE_Data| 0)
  6703     06FE  3410               	retlw	16
  6704     06FF  3401               	retlw	1
  6705     0700  3401               	retlw	1
  6706     0701  344A               	retlw	low (_LIN_TJ_LIMIT_Data| 0)
  6707     0702  3400               	retlw	high (_LIN_TJ_LIMIT_Data| 0)
  6708     0703  3411               	retlw	17
  6709     0704  3401               	retlw	1
  6710     0705  3402               	retlw	2
  6711     0706  34E1               	retlw	low (_LIN_FACTOR_RDSON_RTHJS_Data| 0)
  6712     0707  3400               	retlw	high (_LIN_FACTOR_RDSON_RTHJS_Data| 0)
  6713     0708  3412               	retlw	18
  6714     0709  3401               	retlw	1
  6715     070A  3402               	retlw	2
  6716     070B  34DF               	retlw	low (_LIN_FACTOR_RDSON_RTHSA_Data| 0)
  6717     070C  3400               	retlw	high (_LIN_FACTOR_RDSON_RTHSA_Data| 0)
  6718     070D  3413               	retlw	19
  6719     070E  3401               	retlw	1
  6720     070F  3402               	retlw	2
  6721     0710  34DD               	retlw	low (_LIN_CURRENT2COUNTS_SQUARED_Data| 0)
  6722     0711  3400               	retlw	high (_LIN_CURRENT2COUNTS_SQUARED_Data| 0)
  6723     0712  3414               	retlw	20
  6724     0713  3401               	retlw	1
  6725     0714  3402               	retlw	2
  6726     0715  34DB               	retlw	low (_LIN_ISENSE_MAX_Data| 0)
  6727     0716  3400               	retlw	high (_LIN_ISENSE_MAX_Data| 0)
  6728     0717  3415               	retlw	21
  6729     0718  3401               	retlw	1
  6730     0719  3401               	retlw	1
  6731     071A  3449               	retlw	low (_LIN_DAC_I_HW_TRIP_Data| 0)
  6732     071B  3400               	retlw	high (_LIN_DAC_I_HW_TRIP_Data| 0)
  6733     071C  3416               	retlw	22
  6734     071D  3401               	retlw	1
  6735     071E  3401               	retlw	1
  6736     071F  3448               	retlw	low (_LIN_B1_COEF_Data| 0)
  6737     0720  3400               	retlw	high (_LIN_B1_COEF_Data| 0)
  6738     0721  3417               	retlw	23
  6739     0722  3401               	retlw	1
  6740     0723  3401               	retlw	1
  6741     0724  3447               	retlw	low (_LIN_REDUCED_DRIVE_TIME_Data| 0)
  6742     0725  3400               	retlw	high (_LIN_REDUCED_DRIVE_TIME_Data| 0)
  6743     0726  3418               	retlw	24
  6744     0727  3401               	retlw	1
  6745     0728  3402               	retlw	2
  6746     0729  34D9               	retlw	low (_LIN_TCC_SAMPLE_TIME_Data| 0)
  6747     072A  3400               	retlw	high (_LIN_TCC_SAMPLE_TIME_Data| 0)
  6748     072B  3420               	retlw	32
  6749     072C  3400               	retlw	0
  6750     072D  3401               	retlw	1
  6751     072E  3446               	retlw	low (_LIN_OUTPUT_STATE_Data| 0)
  6752     072F  3400               	retlw	high (_LIN_OUTPUT_STATE_Data| 0)
  6753     0730  3421               	retlw	33
  6754     0731  3400               	retlw	0
  6755     0732  3401               	retlw	1
  6756     0733  3445               	retlw	low (_LIN_GET_TRIGGER_TYPE_Data| 0)
  6757     0734  3400               	retlw	high (_LIN_GET_TRIGGER_TYPE_Data| 0)
  6758     0735  3422               	retlw	34
  6759     0736  3400               	retlw	0
  6760     0737  3401               	retlw	1
  6761     0738  3444               	retlw	low (_LIN_OVER_CURRENT_FAULT_Data| 0)
  6762     0739  3400               	retlw	high (_LIN_OVER_CURRENT_FAULT_Data| 0)
  6763     073A  3423               	retlw	35
  6764     073B  3400               	retlw	0
  6765     073C  3401               	retlw	1
  6766     073D  3443               	retlw	low (_LIN_UVLO_FAULT_Data| 0)
  6767     073E  3400               	retlw	high (_LIN_UVLO_FAULT_Data| 0)
  6768     073F  3424               	retlw	36
  6769     0740  3400               	retlw	0
  6770     0741  3401               	retlw	1
  6771     0742  3442               	retlw	low (_LIN_OVER_TEMP_FAULT_Data| 0)
  6772     0743  3400               	retlw	high (_LIN_OVER_TEMP_FAULT_Data| 0)
  6773     0744  3425               	retlw	37
  6774     0745  3400               	retlw	0
  6775     0746  3402               	retlw	2
  6776     0747  34D7               	retlw	low (_LIN_ADC_VCC_SENSE_Data| 0)
  6777     0748  3400               	retlw	high (_LIN_ADC_VCC_SENSE_Data| 0)
  6778     0749  3426               	retlw	38
  6779     074A  3400               	retlw	0
  6780     074B  3402               	retlw	2
  6781     074C  34D5               	retlw	low (_LIN_ADC_CURRENT_SENSE_UNCORRECTED_Data| 0)
  6782     074D  3400               	retlw	high (_LIN_ADC_CURRENT_SENSE_UNCORRECTED_Data| 0)
  6783     074E  3427               	retlw	39
  6784     074F  3400               	retlw	0
  6785     0750  3402               	retlw	2
  6786     0751  34D3               	retlw	low (_LIN_ADC_TEMP_SENSE_Data| 0)
  6787     0752  3400               	retlw	high (_LIN_ADC_TEMP_SENSE_Data| 0)
  6788     0753  3428               	retlw	40
  6789     0754  3400               	retlw	0
  6790     0755  3402               	retlw	2
  6791     0756  34D1               	retlw	low (_LIN_ADC_CURRENT_SENSE_CORRECTED_Data| 0)
  6792     0757  3400               	retlw	high (_LIN_ADC_CURRENT_SENSE_CORRECTED_Data| 0)
  6793     0758  3429               	retlw	41
  6794     0759  3400               	retlw	0
  6795     075A  3402               	retlw	2
  6796     075B  34CF               	retlw	low (_LIN_CURRENT_SENSE_OFFSET_Data| 0)
  6797     075C  3400               	retlw	high (_LIN_CURRENT_SENSE_OFFSET_Data| 0)
  6798     075D  342A               	retlw	42
  6799     075E  3400               	retlw	0
  6800     075F  3402               	retlw	2
  6801     0760  34CD               	retlw	low (_LIN_AMBIENT_TEMPERATURE_Data| 0)
  6802     0761  3400               	retlw	high (_LIN_AMBIENT_TEMPERATURE_Data| 0)
  6803     0762  342B               	retlw	43
  6804     0763  3400               	retlw	0
  6805     0764  3402               	retlw	2
  6806     0765  34CB               	retlw	low (_LIN_HEATSINK_TEMPERATURE_Data| 0)
  6807     0766  3400               	retlw	high (_LIN_HEATSINK_TEMPERATURE_Data| 0)
  6808     0767  342C               	retlw	44
  6809     0768  3400               	retlw	0
  6810     0769  3402               	retlw	2
  6811     076A  34C9               	retlw	low (_LIN_JUNCTION_TEMPERATURE_Data| 0)
  6812     076B  3400               	retlw	high (_LIN_JUNCTION_TEMPERATURE_Data| 0)
  6813     076C  342D               	retlw	45
  6814     076D  3400               	retlw	0
  6815     076E  3402               	retlw	2
  6816     076F  34C7               	retlw	low (_LIN_TEMPERATURE_RISE_JS_Data| 0)
  6817     0770  3400               	retlw	high (_LIN_TEMPERATURE_RISE_JS_Data| 0)
  6818     0771  342E               	retlw	46
  6819     0772  3400               	retlw	0
  6820     0773  3402               	retlw	2
  6821     0774  34C5               	retlw	low (_LIN_TEMPERATURE_RISE_SA_Data| 0)
  6822     0775  3400               	retlw	high (_LIN_TEMPERATURE_RISE_SA_Data| 0)
  6823     0776  342F               	retlw	47
  6824     0777  3400               	retlw	0
  6825     0778  3408               	retlw	8
  6826     0779  3459               	retlw	low (_LIN_DIAGNOSTIC_Data| (0+256))
  6827     077A  3401               	retlw	high (_LIN_DIAGNOSTIC_Data| (0+256))
  6828     077B                     __end_of_scheduleTable:
  6829                           
  6830                           	psect	nvBANK0
  6831     006F                     __pnvBANK0:
  6832     006F                     _LIN_rxCommandLength:
  6833     006F                     	ds	1
  6834                           
  6835                           	psect	nvBANK1
  6836     00ED                     __pnvBANK1:
  6837     00ED                     _LIN_rxCommand:
  6838     00ED                     	ds	2
  6839                           
  6840                           	psect	nvBANK2
  6841     0161                     __pnvBANK2:
  6842     0161                     _TMR0_InterruptHandler:
  6843     0161                     	ds	2
  6844     0163                     _EUSART1_ErrorHandler:
  6845     0163                     	ds	2
  6846     0165                     _EUSART1_OverrunErrorHandler:
  6847     0165                     	ds	2
  6848     0167                     _EUSART1_FramingErrorHandler:
  6849     0167                     	ds	2
  6850     0169                     _EUSART1_RxDefaultInterruptHandler:
  6851     0169                     	ds	2
  6852     016B                     _EUSART1_TxDefaultInterruptHandler:
  6853     016B                     	ds	2
  6854     016D                     _LIN_processData:
  6855     016D                     	ds	2
  6856     0014                     _TRISCbits	set	20
  6857     0014                     _TRISC	set	20
  6858     0013                     _TRISB	set	19
  6859     0012                     _TRISA	set	18
  6860     001A                     _LATC	set	26
  6861     0019                     _LATB	set	25
  6862     0018                     _LATA	set	24
  6863     000B                     _INTCONbits	set	11
  6864     0019                     _LATBbits	set	25
  6865     009D                     _ADCON0bits	set	157
  6866     009D                     _ADCON0	set	157
  6867     009C                     _ADRESH	set	156
  6868     009B                     _ADRESL	set	155
  6869     009E                     _ADCON1	set	158
  6870     0119                     _RC1REG	set	281
  6871     011A                     _TX1REG	set	282
  6872     011C                     _SP1BRGH	set	284
  6873     011B                     _SP1BRGL	set	283
  6874     011E                     _TX1STA	set	286
  6875     011D                     _RC1STA	set	285
  6876     011F                     _BAUD1CON	set	287
  6877     011D                     _RC1STAbits	set	285
  6878     011E                     _TX1STAbits	set	286
  6879     020E                     _T1CONbits	set	526
  6880     020E                     _T1CON	set	526
  6881     020C                     _TMR1L	set	524
  6882     020D                     _TMR1H	set	525
  6883     0211                     _T1CLK	set	529
  6884     0210                     _T1GATE	set	528
  6885     020F                     _T1GCON	set	527
  6886     028E                     _T2CONbits	set	654
  6887     028E                     _T2CON	set	654
  6888     028C                     _T2TMR	set	652
  6889     028D                     _T2PR	set	653
  6890     0291                     _T2RST	set	657
  6891     028F                     _T2HLT	set	655
  6892     0290                     _T2CLKCON	set	656
  6893     059E                     _T0CON0	set	1438
  6894     059C                     _TMR0L	set	1436
  6895     059D                     _TMR0H	set	1437
  6896     059F                     _T0CON1	set	1439
  6897     070E                     _PIR2bits	set	1806
  6898     070F                     _PIR3bits	set	1807
  6899     0710                     _PIR4bits	set	1808
  6900     0716                     _PIE0bits	set	1814
  6901     070C                     _PIR0bits	set	1804
  6902     071B                     _PIE5bits	set	1819
  6903     0711                     _PIR5bits	set	1809
  6904     0719                     _PIE3bits	set	1817
  6905     079B                     _PMD5	set	1947
  6906     079A                     _PMD4	set	1946
  6907     0799                     _PMD3	set	1945
  6908     0798                     _PMD2	set	1944
  6909     0797                     _PMD1	set	1943
  6910     0796                     _PMD0	set	1942
  6911     0892                     _OSCTUNE	set	2194
  6912     0890                     _OSCSTAT	set	2192
  6913     0893                     _OSCFRQ	set	2195
  6914     0891                     _OSCEN	set	2193
  6915     088F                     _OSCCON3	set	2191
  6916     088D                     _OSCCON1	set	2189
  6917     090F                     _DAC1CON1bits	set	2319
  6918     090C                     _FVRCON	set	2316
  6919     090F                     _DAC1CON1	set	2319
  6920     090E                     _DAC1CON0	set	2318
  6921     0994                     _CM2CON0bits	set	2452
  6922     0997                     _CM2PCH	set	2455
  6923     0996                     _CM2NCH	set	2454
  6924     0995                     _CM2CON1	set	2453
  6925     0994                     _CM2CON0	set	2452
  6926     1E1B                     _CLC2POLbits	set	7707
  6927     1E19                     _CLC1GLS3bits	set	7705
  6928     1E11                     _CLC1POLbits	set	7697
  6929     1E0F                     _CLCDATAbits	set	7695
  6930     1E17                     _CLC1GLS1bits	set	7703
  6931     1E10                     _CLC1CONbits	set	7696
  6932     1E10                     _CLC1CON	set	7696
  6933     1E19                     _CLC1GLS3	set	7705
  6934     1E18                     _CLC1GLS2	set	7704
  6935     1E17                     _CLC1GLS1	set	7703
  6936     1E16                     _CLC1GLS0	set	7702
  6937     1E15                     _CLC1SEL3	set	7701
  6938     1E14                     _CLC1SEL2	set	7700
  6939     1E13                     _CLC1SEL1	set	7699
  6940     1E12                     _CLC1SEL0	set	7698
  6941     1E11                     _CLC1POL	set	7697
  6942     1E24                     _CLC3CONbits	set	7716
  6943     1E24                     _CLC3CON	set	7716
  6944     1E2D                     _CLC3GLS3	set	7725
  6945     1E2C                     _CLC3GLS2	set	7724
  6946     1E2B                     _CLC3GLS1	set	7723
  6947     1E2A                     _CLC3GLS0	set	7722
  6948     1E29                     _CLC3SEL3	set	7721
  6949     1E28                     _CLC3SEL2	set	7720
  6950     1E27                     _CLC3SEL1	set	7719
  6951     1E26                     _CLC3SEL0	set	7718
  6952     1E25                     _CLC3POL	set	7717
  6953     1E1A                     _CLC2CON	set	7706
  6954     1E23                     _CLC2GLS3	set	7715
  6955     1E22                     _CLC2GLS2	set	7714
  6956     1E21                     _CLC2GLS1	set	7713
  6957     1E20                     _CLC2GLS0	set	7712
  6958     1E1F                     _CLC2SEL3	set	7711
  6959     1E1E                     _CLC2SEL2	set	7710
  6960     1E1D                     _CLC2SEL1	set	7709
  6961     1E1C                     _CLC2SEL0	set	7708
  6962     1E1B                     _CLC2POL	set	7707
  6963     1E2E                     _CLC4CON	set	7726
  6964     1E37                     _CLC4GLS3	set	7735
  6965     1E36                     _CLC4GLS2	set	7734
  6966     1E35                     _CLC4GLS1	set	7733
  6967     1E34                     _CLC4GLS0	set	7732
  6968     1E33                     _CLC4SEL3	set	7731
  6969     1E32                     _CLC4SEL2	set	7730
  6970     1E31                     _CLC4SEL1	set	7729
  6971     1E30                     _CLC4SEL0	set	7728
  6972     1E2F                     _CLC4POL	set	7727
  6973     1ECB                     _RX1DTPPS	set	7883
  6974     1EBB                     _CLCIN0PPS	set	7867
  6975     1F27                     _RC7PPS	set	7975
  6976     1F26                     _RC6PPS	set	7974
  6977     1F1F                     _RB7PPS	set	7967
  6978     1F52                     _INLVLC	set	8018
  6979     1F47                     _INLVLB	set	8007
  6980     1F3C                     _INLVLA	set	7996
  6981     1F51                     _SLRCONC	set	8017
  6982     1F46                     _SLRCONB	set	8006
  6983     1F3B                     _SLRCONA	set	7995
  6984     1F50                     _ODCONC	set	8016
  6985     1F45                     _ODCONB	set	8005
  6986     1F3A                     _ODCONA	set	7994
  6987     1F4F                     _WPUC	set	8015
  6988     1F39                     _WPUA	set	7993
  6989     1F44                     _WPUB	set	8004
  6990     1F38                     _ANSELA	set	7992
  6991     1F43                     _ANSELB	set	8003
  6992     1F4E                     _ANSELC	set	8014
  6993                           
  6994                           	psect	cinit
  6995     002E                     start_initialization:	
  6996                           ; #config settings
  6997                           
  6998     002E                     __initialization:
  6999                           
  7000                           ; Initialize objects allocated to BANK0
  7001     002E  30F8               	movlw	low __pidataBANK0
  7002     002F  0084               	movwf	4
  7003     0030  3088               	movlw	(high __pidataBANK0)| (0+128)
  7004     0031  0085               	movwf	5
  7005     0032  3067               	movlw	low __pdataBANK0
  7006     0033  0086               	movwf	6
  7007     0034  3000               	movlw	high __pdataBANK0
  7008     0035  0087               	movwf	7
  7009     0036  3008               	movlw	8
  7010     0037  3188  209A  3180   	fcall	init_ram
  7011                           
  7012                           ; Initialize objects allocated to BANK1
  7013     003A  3014               	movlw	low __pidataBANK1
  7014     003B  0084               	movwf	4
  7015     003C  3089               	movlw	(high __pidataBANK1)| (0+128)
  7016     003D  0085               	movwf	5
  7017     003E  30E3               	movlw	low __pdataBANK1
  7018     003F  0086               	movwf	6
  7019     0040  3000               	movlw	high __pdataBANK1
  7020     0041  0087               	movwf	7
  7021     0042  300A               	movlw	10
  7022     0043  3188  209A  3180   	fcall	init_ram
  7023                           
  7024                           ; Clear objects allocated to COMMON
  7025     0046  01F0               	clrf	__pbssCOMMON& (0+127)
  7026     0047  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  7027     0048  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  7028     0049  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  7029     004A  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  7030     004B  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  7031                           
  7032                           ; Clear objects allocated to BANK0
  7033     004C  3020               	movlw	low __pbssBANK0
  7034     004D  0084               	movwf	4
  7035     004E  3000               	movlw	high __pbssBANK0
  7036     004F  0085               	movwf	5
  7037     0050  302E               	movlw	46
  7038     0051  3188  2094  3180   	fcall	clear_ram0
  7039                           
  7040                           ; Clear objects allocated to BANK1
  7041     0054  30A0               	movlw	low __pbssBANK1
  7042     0055  0084               	movwf	4
  7043     0056  3000               	movlw	high __pbssBANK1
  7044     0057  0085               	movwf	5
  7045     0058  3043               	movlw	67
  7046     0059  3188  2094  3180   	fcall	clear_ram0
  7047                           
  7048                           ; Clear objects allocated to BANK2
  7049     005C  3041               	movlw	low __pbssBANK2
  7050     005D  0084               	movwf	4
  7051     005E  3001               	movlw	high __pbssBANK2
  7052     005F  0085               	movwf	5
  7053     0060  3020               	movlw	32
  7054     0061  3188  2094         	fcall	clear_ram0
  7055     0063                     end_of_initialization:	
  7056                           ;End of C runtime variable initialization code
  7057                           
  7058     0063                     __end_of__initialization:
  7059     0063  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  7060     0064  0140               	movlb	0
  7061     0065  318B  2B9C         	ljmp	_main	;jump to C main() function
  7062                           
  7063                           	psect	bssCOMMON
  7064     0070                     __pbssCOMMON:
  7065     0070                     _timer0ReloadVal16bit:
  7066     0070                     	ds	2
  7067     0072                     _eusart1RxTail:
  7068     0072                     	ds	1
  7069     0073                     _eusart1RxHead:
  7070     0073                     	ds	1
  7071     0074                     _adcTSense_curr:
  7072     0074                     	ds	2
  7073                           
  7074                           	psect	bssBANK0
  7075     0020                     __pbssBANK0:
  7076     0020                     _adcTSense_prev:
  7077     0020                     	ds	2
  7078     0022                     _eusart1RxLastError:
  7079     0022                     	ds	1
  7080     0023                     _eusart1RxCount:
  7081     0023                     	ds	1
  7082     0024                     _eusart1TxBufferRemaining:
  7083     0024                     	ds	1
  7084     0025                     _eusart1TxTail:
  7085     0025                     	ds	1
  7086     0026                     _eusart1TxHead:
  7087     0026                     	ds	1
  7088     0027                     LIN_handler@rxDataIndex:
  7089     0027                     	ds	1
  7090     0028                     LIN_handler@LIN_rxState:
  7091     0028                     	ds	1
  7092     0029                     _CountCallBack:
  7093     0029                     	ds	1
  7094     002A                     _LIN_timerRunning:
  7095     002A                     	ds	1
  7096     002B                     _LIN_rxInProgress:
  7097     002B                     	ds	1
  7098     002C                     _overTempFault:
  7099     002C                     	ds	1
  7100     002D                     _uvloFault:
  7101     002D                     	ds	1
  7102     002E                     _overCurrentFault:
  7103     002E                     	ds	1
  7104     002F                     _outputState:
  7105     002F                     	ds	1
  7106     0030                     _reduced_drive_time:
  7107     0030                     	ds	1
  7108     0031                     _triggerType:
  7109     0031                     	ds	1
  7110     0032                     _Trise_sa:
  7111     0032                     	ds	2
  7112     0034                     _Trise_js:
  7113     0034                     	ds	2
  7114     0036                     _Tjunction:
  7115     0036                     	ds	2
  7116     0038                     _Tsink:
  7117     0038                     	ds	2
  7118     003A                     _iSenseOffset:
  7119     003A                     	ds	2
  7120     003C                     _adcISense_corr:
  7121     003C                     	ds	2
  7122     003E                     _adcISense_curr:
  7123     003E                     	ds	2
  7124     0040                     _adcVccSense_curr:
  7125     0040                     	ds	2
  7126     0042                     _LIN_OVER_TEMP_FAULT_Data:
  7127     0042                     	ds	1
  7128     0043                     _LIN_UVLO_FAULT_Data:
  7129     0043                     	ds	1
  7130     0044                     _LIN_OVER_CURRENT_FAULT_Data:
  7131     0044                     	ds	1
  7132     0045                     _LIN_GET_TRIGGER_TYPE_Data:
  7133     0045                     	ds	1
  7134     0046                     _LIN_OUTPUT_STATE_Data:
  7135     0046                     	ds	1
  7136     0047                     _LIN_REDUCED_DRIVE_TIME_Data:
  7137     0047                     	ds	1
  7138     0048                     _LIN_B1_COEF_Data:
  7139     0048                     	ds	1
  7140     0049                     _LIN_DAC_I_HW_TRIP_Data:
  7141     0049                     	ds	1
  7142     004A                     _LIN_TJ_LIMIT_Data:
  7143     004A                     	ds	1
  7144     004B                     _LIN_ENTER_SLEEP_MODE_Data:
  7145     004B                     	ds	1
  7146     004C                     _LIN_TRIGGER_TYPE_Data:
  7147     004C                     	ds	1
  7148     004D                     _LIN_COMMAND_Data:
  7149     004D                     	ds	1
  7150                           
  7151                           	psect	dataBANK0
  7152     0067                     __pdataBANK0:
  7153     0067                     _isense_max:
  7154     0067                     	ds	2
  7155     0069                     _LIN_timeout:
  7156     0069                     	ds	1
  7157     006A                     _b1_coef:
  7158     006A                     	ds	1
  7159     006B                     _dac_i_hw_trip:
  7160     006B                     	ds	1
  7161     006C                     _tj_limit:
  7162     006C                     	ds	1
  7163     006D                     _Tambient:
  7164     006D                     	ds	2
  7165                           
  7166                           	psect	bssBANK1
  7167     00A0                     __pbssBANK1:
  7168     00A0                     _Trise_raw_prev:
  7169     00A0                     	ds	4
  7170     00A4                     _Trise_raw_curr:
  7171     00A4                     	ds	4
  7172     00A8                     _Trise_filtered:
  7173     00A8                     	ds	4
  7174     00AC                     _adcISense_prev:
  7175     00AC                     	ds	2
  7176     00AE                     _adcISense_OneMOSFET:
  7177     00AE                     	ds	2
  7178     00B0                     _adcVccSense_prev:
  7179     00B0                     	ds	2
  7180     00B2                     _ADC_InterruptHandler:
  7181     00B2                     	ds	2
  7182     00B4                     _timer1ReloadVal:
  7183     00B4                     	ds	2
  7184     00B6                     _ticks_1ms:
  7185     00B6                     	ds	2
  7186     00B8                     _LIN_packet:
  7187     00B8                     	ds	13
  7188     00C5                     _LIN_TEMPERATURE_RISE_SA_Data:
  7189     00C5                     	ds	2
  7190     00C7                     _LIN_TEMPERATURE_RISE_JS_Data:
  7191     00C7                     	ds	2
  7192     00C9                     _LIN_JUNCTION_TEMPERATURE_Data:
  7193     00C9                     	ds	2
  7194     00CB                     _LIN_HEATSINK_TEMPERATURE_Data:
  7195     00CB                     	ds	2
  7196     00CD                     _LIN_AMBIENT_TEMPERATURE_Data:
  7197     00CD                     	ds	2
  7198     00CF                     _LIN_CURRENT_SENSE_OFFSET_Data:
  7199     00CF                     	ds	2
  7200     00D1                     _LIN_ADC_CURRENT_SENSE_CORRECTED_Data:
  7201     00D1                     	ds	2
  7202     00D3                     _LIN_ADC_TEMP_SENSE_Data:
  7203     00D3                     	ds	2
  7204     00D5                     _LIN_ADC_CURRENT_SENSE_UNCORRECTED_Data:
  7205     00D5                     	ds	2
  7206     00D7                     _LIN_ADC_VCC_SENSE_Data:
  7207     00D7                     	ds	2
  7208     00D9                     _LIN_TCC_SAMPLE_TIME_Data:
  7209     00D9                     	ds	2
  7210     00DB                     _LIN_ISENSE_MAX_Data:
  7211     00DB                     	ds	2
  7212     00DD                     _LIN_CURRENT2COUNTS_SQUARED_Data:
  7213     00DD                     	ds	2
  7214     00DF                     _LIN_FACTOR_RDSON_RTHSA_Data:
  7215     00DF                     	ds	2
  7216     00E1                     _LIN_FACTOR_RDSON_RTHJS_Data:
  7217     00E1                     	ds	2
  7218                           
  7219                           	psect	dataBANK1
  7220     00E3                     __pdataBANK1:
  7221     00E3                     _tcc_sample_time:
  7222     00E3                     	ds	2
  7223     00E5                     _a1_coef:
  7224     00E5                     	ds	2
  7225     00E7                     _current2counts_squared:
  7226     00E7                     	ds	2
  7227     00E9                     _factor_rdson_rthsa:
  7228     00E9                     	ds	2
  7229     00EB                     _factor_rdson_rthjs:
  7230     00EB                     	ds	2
  7231                           
  7232                           	psect	bssBANK2
  7233     0141                     __pbssBANK2:
  7234     0141                     _eusart1RxStatusBuffer:
  7235     0141                     	ds	8
  7236     0149                     _eusart1RxBuffer:
  7237     0149                     	ds	8
  7238     0151                     _eusart1TxBuffer:
  7239     0151                     	ds	8
  7240     0159                     _LIN_DIAGNOSTIC_Data:
  7241     0159                     	ds	8
  7242                           
  7243                           	psect	inittext
  7244     089A                     init_ram:
  7245     089A  00FE               	movwf	126
  7246     089B                     initloop:
  7247     089B  0012               	moviw fsr0++
  7248     089C  001E               	movwi fsr1++
  7249     089D  0BFE               	decfsz	126,f
  7250     089E  289B               	goto	initloop
  7251     089F  3400               	retlw	0
  7252                           
  7253                           	psect	clrtext
  7254     0894                     clear_ram0:	
  7255                           ;	Called with FSR0 containing the base address, and
  7256                           ;	WREG with the size to clear
  7257                           
  7258     0894  0064               	clrwdt	;clear the watchdog before getting into this loop
  7259     0895                     clrloop0:
  7260     0895  0180               	clrf	0	;clear RAM location pointed to by FSR
  7261     0896  3101               	addfsr 0,1
  7262     0897  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  7263     0898  2895               	goto	clrloop0	;have we reached the end yet?
  7264     0899  3400               	retlw	0	;all done for this memory range, return
  7265                           
  7266                           	psect	cstackBANK2
  7267     0120                     __pcstackBANK2:
  7268     0120                     processLIN@cmd:
  7269     0120                     ___lldiv@quotient:	
  7270                           ; 1 bytes @ 0x0
  7271                           
  7272                           
  7273                           ; 4 bytes @ 0x0
  7274     0120                     	ds	1
  7275     0121                     processLIN@tempRxData:
  7276                           
  7277                           ; 8 bytes @ 0x1
  7278     0121                     	ds	3
  7279     0124                     ___lldiv@counter:
  7280                           
  7281                           ; 1 bytes @ 0x4
  7282     0124                     	ds	1
  7283     0125                     ??_TCC_Curve:
  7284                           
  7285                           ; 1 bytes @ 0x5
  7286     0125                     	ds	12
  7287     0131                     _TCC_Curve$3309:
  7288                           
  7289                           ; 8 bytes @ 0x11
  7290     0131                     	ds	8
  7291     0139                     _TCC_Curve$3310:
  7292                           
  7293                           ; 4 bytes @ 0x19
  7294     0139                     	ds	4
  7295     013D                     ??_EFuse:
  7296                           
  7297                           ; 1 bytes @ 0x1D
  7298     013D                     	ds	2
  7299     013F                     ??_main:
  7300                           
  7301                           ; 1 bytes @ 0x1F
  7302     013F                     	ds	2
  7303                           
  7304                           	psect	cstackCOMMON
  7305     0076                     __pcstackCOMMON:
  7306     0076                     ?_processLIN:
  7307     0076                     ?_LIN_getPacket:	
  7308                           ; 1 bytes @ 0x0
  7309                           
  7310     0076                     ?_CmdOutput:	
  7311                           ; 1 bytes @ 0x0
  7312                           
  7313     0076                     ?_EFuseInit:	
  7314                           ; 1 bytes @ 0x0
  7315                           
  7316     0076                     ?_LIN_stopTimer:	
  7317                           ; 1 bytes @ 0x0
  7318                           
  7319     0076                     ?_LIN_enableRx:	
  7320                           ; 1 bytes @ 0x0
  7321                           
  7322     0076                     ?_LIN_setTimerHandler:	
  7323                           ; 1 bytes @ 0x0
  7324                           
  7325     0076                     ?_EUSART1_is_rx_ready:	
  7326                           ; 1 bytes @ 0x0
  7327                           
  7328     0076                     ?_LIN_startTimer:	
  7329                           ; 1 bytes @ 0x0
  7330                           
  7331     0076                     ?_LIN_breakCheck:	
  7332                           ; 1 bytes @ 0x0
  7333                           
  7334     0076                     ?_EUSART1_Read:	
  7335                           ; 1 bytes @ 0x0
  7336                           
  7337     0076                     ?_LIN_checkPID:	
  7338                           ; 1 bytes @ 0x0
  7339                           
  7340     0076                     ?_LIN_disableRx:	
  7341                           ; 1 bytes @ 0x0
  7342                           
  7343     0076                     ?_EUSART1_Write:	
  7344                           ; 1 bytes @ 0x0
  7345                           
  7346     0076                     ?_LIN_calcParity:	
  7347                           ; 1 bytes @ 0x0
  7348                           
  7349     0076                     ?_EUSART1_get_last_status:	
  7350                           ; 1 bytes @ 0x0
  7351                           
  7352     0076                     ?_PMD_Initialize:	
  7353                           ; 1 bytes @ 0x0
  7354                           
  7355     0076                     ?_PIN_MANAGER_Initialize:	
  7356                           ; 1 bytes @ 0x0
  7357                           
  7358     0076                     ?_OSCILLATOR_Initialize:	
  7359                           ; 1 bytes @ 0x0
  7360                           
  7361     0076                     ?_FVR_Initialize:	
  7362                           ; 1 bytes @ 0x0
  7363                           
  7364     0076                     ?_TMR2_Initialize:	
  7365                           ; 1 bytes @ 0x0
  7366                           
  7367     0076                     ?_TMR0_Initialize:	
  7368                           ; 1 bytes @ 0x0
  7369                           
  7370     0076                     ?_CLC1_Initialize:	
  7371                           ; 1 bytes @ 0x0
  7372                           
  7373     0076                     ?_ADC_Initialize:	
  7374                           ; 1 bytes @ 0x0
  7375                           
  7376     0076                     ?_CLC3_Initialize:	
  7377                           ; 1 bytes @ 0x0
  7378                           
  7379     0076                     ?_DAC1_Initialize:	
  7380                           ; 1 bytes @ 0x0
  7381                           
  7382     0076                     ?_TMR1_Initialize:	
  7383                           ; 1 bytes @ 0x0
  7384                           
  7385     0076                     ?_EUSART1_Initialize:	
  7386                           ; 1 bytes @ 0x0
  7387                           
  7388     0076                     ?_EUSART1_Receive_ISR:	
  7389                           ; 1 bytes @ 0x0
  7390                           
  7391     0076                     ?_EUSART1_Transmit_ISR:	
  7392                           ; 1 bytes @ 0x0
  7393                           
  7394     0076                     ??_EUSART1_Transmit_ISR:	
  7395                           ; 1 bytes @ 0x0
  7396                           
  7397     0076                     ?_EUSART1_DefaultFramingErrorHandler:	
  7398                           ; 1 bytes @ 0x0
  7399                           
  7400     0076                     ??_EUSART1_DefaultFramingErrorHandler:	
  7401                           ; 1 bytes @ 0x0
  7402                           
  7403     0076                     ?_EUSART1_DefaultOverrunErrorHandler:	
  7404                           ; 1 bytes @ 0x0
  7405                           
  7406     0076                     ??_EUSART1_DefaultOverrunErrorHandler:	
  7407                           ; 1 bytes @ 0x0
  7408                           
  7409     0076                     ?_EUSART1_DefaultErrorHandler:	
  7410                           ; 1 bytes @ 0x0
  7411                           
  7412     0076                     ?_EUSART1_RxDataHandler:	
  7413                           ; 1 bytes @ 0x0
  7414                           
  7415     0076                     ??_EUSART1_RxDataHandler:	
  7416                           ; 1 bytes @ 0x0
  7417                           
  7418     0076                     ?_TMR0_DefaultInterruptHandler:	
  7419                           ; 1 bytes @ 0x0
  7420                           
  7421     0076                     ??_TMR0_DefaultInterruptHandler:	
  7422                           ; 1 bytes @ 0x0
  7423                           
  7424     0076                     ?_ProcessAnalogInputs:	
  7425                           ; 1 bytes @ 0x0
  7426                           
  7427     0076                     ?_EFuse:	
  7428                           ; 1 bytes @ 0x0
  7429                           
  7430     0076                     ?_TCC_Curve:	
  7431                           ; 1 bytes @ 0x0
  7432                           
  7433     0076                     ?_LIN_Slave_Initialize:	
  7434                           ; 1 bytes @ 0x0
  7435                           
  7436     0076                     ?_Update_LIN_Data:	
  7437                           ; 1 bytes @ 0x0
  7438                           
  7439     0076                     ?_LIN_queuePacket:	
  7440                           ; 1 bytes @ 0x0
  7441                           
  7442     0076                     ?_LIN_handler:	
  7443                           ; 1 bytes @ 0x0
  7444                           
  7445     0076                     ?_LIN_timerHandler:	
  7446                           ; 1 bytes @ 0x0
  7447                           
  7448     0076                     ??_LIN_timerHandler:	
  7449                           ; 1 bytes @ 0x0
  7450                           
  7451     0076                     ?_CLC4_Initialize:	
  7452                           ; 1 bytes @ 0x0
  7453                           
  7454     0076                     ?_CMP2_Initialize:	
  7455                           ; 1 bytes @ 0x0
  7456                           
  7457     0076                     ?_CLC2_Initialize:	
  7458                           ; 1 bytes @ 0x0
  7459                           
  7460     0076                     ?_CLC2_ISR:	
  7461                           ; 1 bytes @ 0x0
  7462                           
  7463     0076                     ??_CLC2_ISR:	
  7464                           ; 1 bytes @ 0x0
  7465                           
  7466     0076                     ?_SYSTEM_Initialize:	
  7467                           ; 1 bytes @ 0x0
  7468                           
  7469     0076                     ?_TMR0_Reload:	
  7470                           ; 1 bytes @ 0x0
  7471                           
  7472     0076                     ?_TMR0_ISR:	
  7473                           ; 1 bytes @ 0x0
  7474                           
  7475     0076                     ?_TMR2_Start:	
  7476                           ; 1 bytes @ 0x0
  7477                           
  7478     0076                     ?_TMR2_Stop:	
  7479                           ; 1 bytes @ 0x0
  7480                           
  7481     0076                     ?_TMR1_StartTimer:	
  7482                           ; 1 bytes @ 0x0
  7483                           
  7484     0076                     ?_TMR1_StopTimer:	
  7485                           ; 1 bytes @ 0x0
  7486                           
  7487     0076                     ?_INTERRUPT_InterruptManager:	
  7488                           ; 1 bytes @ 0x0
  7489                           
  7490     0076                     ?_ADC_SelectChannel:	
  7491                           ; 1 bytes @ 0x0
  7492                           
  7493     0076                     ??_ADC_SelectChannel:	
  7494                           ; 1 bytes @ 0x0
  7495                           
  7496     0076                     ?_main:	
  7497                           ; 1 bytes @ 0x0
  7498                           
  7499     0076                     ?i1_LIN_stopTimer:	
  7500                           ; 1 bytes @ 0x0
  7501                           
  7502     0076                     ??i1_LIN_stopTimer:	
  7503                           ; 1 bytes @ 0x0
  7504                           
  7505     0076                     ?i1_TMR2_Initialize:	
  7506                           ; 1 bytes @ 0x0
  7507                           
  7508     0076                     ??i1_TMR2_Initialize:	
  7509                           ; 1 bytes @ 0x0
  7510                           
  7511     0076                     ?i1_TMR2_Start:	
  7512                           ; 1 bytes @ 0x0
  7513                           
  7514     0076                     ??i1_TMR2_Start:	
  7515                           ; 1 bytes @ 0x0
  7516                           
  7517     0076                     ?i1_TMR2_Stop:	
  7518                           ; 1 bytes @ 0x0
  7519                           
  7520     0076                     ??i1_TMR2_Stop:	
  7521                           ; 1 bytes @ 0x0
  7522                           
  7523     0076                     ?i1_TMR1_StartTimer:	
  7524                           ; 1 bytes @ 0x0
  7525                           
  7526     0076                     ??i1_TMR1_StartTimer:	
  7527                           ; 1 bytes @ 0x0
  7528                           
  7529     0076                     ?i1_TMR1_StopTimer:	
  7530                           ; 1 bytes @ 0x0
  7531                           
  7532     0076                     ??i1_TMR1_StopTimer:	
  7533                           ; 1 bytes @ 0x0
  7534                           
  7535     0076                     ?i1_TMR1_WriteTimer:	
  7536                           ; 1 bytes @ 0x0
  7537                           
  7538     0076                     ?i1_CmdOutput:	
  7539                           ; 1 bytes @ 0x0
  7540                           
  7541     0076                     ?_ADC_GetConversion:	
  7542                           ; 1 bytes @ 0x0
  7543                           
  7544     0076                     i1TMR1_WriteTimer@timerVal:	
  7545                           ; 2 bytes @ 0x0
  7546                           
  7547                           
  7548                           ; 2 bytes @ 0x0
  7549     0076                     	ds	1
  7550     0077                     ??_EUSART1_Receive_ISR:
  7551     0077                     ??_EUSART1_DefaultErrorHandler:	
  7552                           ; 1 bytes @ 0x1
  7553                           
  7554     0077                     ADC_SelectChannel@channel:	
  7555                           ; 1 bytes @ 0x1
  7556                           
  7557                           
  7558                           ; 1 bytes @ 0x1
  7559     0077                     	ds	1
  7560     0078                     ??_ADC_GetConversion:
  7561     0078                     ??i1_TMR1_WriteTimer:	
  7562                           ; 1 bytes @ 0x2
  7563                           
  7564     0078                     ??i1_CmdOutput:	
  7565                           ; 1 bytes @ 0x2
  7566                           
  7567                           
  7568                           ; 1 bytes @ 0x2
  7569     0078                     	ds	1
  7570     0079                     ADC_GetConversion@channel:
  7571                           
  7572                           ; 1 bytes @ 0x3
  7573     0079                     	ds	1
  7574     007A                     i1CmdOutput@enable:
  7575                           
  7576                           ; 1 bytes @ 0x4
  7577     007A                     	ds	1
  7578     007B                     ??_ProcessAnalogInputs:
  7579     007B                     ??_TMR0_ISR:	
  7580                           ; 1 bytes @ 0x5
  7581                           
  7582     007B                     ??_INTERRUPT_InterruptManager:	
  7583                           ; 1 bytes @ 0x5
  7584                           
  7585                           
  7586                           	psect	cstackBANK0
  7587     004E                     __pcstackBANK0:	
  7588                           ; 1 bytes @ 0x5
  7589                           
  7590     004E                     ??_LIN_stopTimer:
  7591     004E                     ??_LIN_enableRx:	
  7592                           ; 1 bytes @ 0x0
  7593                           
  7594     004E                     ?_LIN_getChecksum:	
  7595                           ; 1 bytes @ 0x0
  7596                           
  7597     004E                     ??_EUSART1_is_rx_ready:	
  7598                           ; 1 bytes @ 0x0
  7599                           
  7600     004E                     ??_EUSART1_Read:	
  7601                           ; 1 bytes @ 0x0
  7602                           
  7603     004E                     ?_LIN_getFromTable:	
  7604                           ; 1 bytes @ 0x0
  7605                           
  7606     004E                     ??_LIN_disableRx:	
  7607                           ; 1 bytes @ 0x0
  7608                           
  7609     004E                     ?_memset:	
  7610                           ; 1 bytes @ 0x0
  7611                           
  7612     004E                     ??_EUSART1_Write:	
  7613                           ; 1 bytes @ 0x0
  7614                           
  7615     004E                     ??_LIN_calcParity:	
  7616                           ; 1 bytes @ 0x0
  7617                           
  7618     004E                     ?_TMR0_WriteTimer:	
  7619                           ; 1 bytes @ 0x0
  7620                           
  7621     004E                     ?_TMR0_SetInterruptHandler:	
  7622                           ; 1 bytes @ 0x0
  7623                           
  7624     004E                     ??_EUSART1_get_last_status:	
  7625                           ; 1 bytes @ 0x0
  7626                           
  7627     004E                     ??_PMD_Initialize:	
  7628                           ; 1 bytes @ 0x0
  7629                           
  7630     004E                     ??_PIN_MANAGER_Initialize:	
  7631                           ; 1 bytes @ 0x0
  7632                           
  7633     004E                     ??_OSCILLATOR_Initialize:	
  7634                           ; 1 bytes @ 0x0
  7635                           
  7636     004E                     ??_FVR_Initialize:	
  7637                           ; 1 bytes @ 0x0
  7638                           
  7639     004E                     ??_TMR2_Initialize:	
  7640                           ; 1 bytes @ 0x0
  7641                           
  7642     004E                     ??_CLC1_Initialize:	
  7643                           ; 1 bytes @ 0x0
  7644                           
  7645     004E                     ??_ADC_Initialize:	
  7646                           ; 1 bytes @ 0x0
  7647                           
  7648     004E                     ??_CLC3_Initialize:	
  7649                           ; 1 bytes @ 0x0
  7650                           
  7651     004E                     ??_DAC1_Initialize:	
  7652                           ; 1 bytes @ 0x0
  7653                           
  7654     004E                     ??_TMR1_Initialize:	
  7655                           ; 1 bytes @ 0x0
  7656                           
  7657     004E                     ?_EUSART1_SetRxInterruptHandler:	
  7658                           ; 1 bytes @ 0x0
  7659                           
  7660     004E                     ?_EUSART1_SetTxInterruptHandler:	
  7661                           ; 1 bytes @ 0x0
  7662                           
  7663     004E                     ?_EUSART1_SetFramingErrorHandler:	
  7664                           ; 1 bytes @ 0x0
  7665                           
  7666     004E                     ?_EUSART1_SetOverrunErrorHandler:	
  7667                           ; 1 bytes @ 0x0
  7668                           
  7669     004E                     ?_EUSART1_SetErrorHandler:	
  7670                           ; 1 bytes @ 0x0
  7671                           
  7672     004E                     ??_Update_LIN_Data:	
  7673                           ; 1 bytes @ 0x0
  7674                           
  7675     004E                     ??_CLC4_Initialize:	
  7676                           ; 1 bytes @ 0x0
  7677                           
  7678     004E                     ??_CMP2_Initialize:	
  7679                           ; 1 bytes @ 0x0
  7680                           
  7681     004E                     ??_CLC2_Initialize:	
  7682                           ; 1 bytes @ 0x0
  7683                           
  7684     004E                     ??_TMR0_Reload:	
  7685                           ; 1 bytes @ 0x0
  7686                           
  7687     004E                     ??_TMR2_Start:	
  7688                           ; 1 bytes @ 0x0
  7689                           
  7690     004E                     ??_TMR2_Stop:	
  7691                           ; 1 bytes @ 0x0
  7692                           
  7693     004E                     ??_TMR1_StartTimer:	
  7694                           ; 1 bytes @ 0x0
  7695                           
  7696     004E                     ??_TMR1_StopTimer:	
  7697                           ; 1 bytes @ 0x0
  7698                           
  7699     004E                     ?_TMR1_WriteTimer:	
  7700                           ; 1 bytes @ 0x0
  7701                           
  7702     004E                     ?_memcpy:	
  7703                           ; 1 bytes @ 0x0
  7704                           
  7705     004E                     ?_GetAmbientTemperature:	
  7706                           ; 2 bytes @ 0x0
  7707                           
  7708     004E                     ?___lmul:	
  7709                           ; 2 bytes @ 0x0
  7710                           
  7711     004E                     ?___omul:	
  7712                           ; 4 bytes @ 0x0
  7713                           
  7714     004E                     LIN_getFromTable@param:	
  7715                           ; 8 bytes @ 0x0
  7716                           
  7717     004E                     LIN_getChecksum@pid:	
  7718                           ; 1 bytes @ 0x0
  7719                           
  7720     004E                     EUSART1_SetFramingErrorHandler@interruptHandler:	
  7721                           ; 1 bytes @ 0x0
  7722                           
  7723     004E                     EUSART1_SetOverrunErrorHandler@interruptHandler:	
  7724                           ; 2 bytes @ 0x0
  7725                           
  7726     004E                     EUSART1_SetErrorHandler@interruptHandler:	
  7727                           ; 2 bytes @ 0x0
  7728                           
  7729     004E                     EUSART1_SetTxInterruptHandler@interruptHandler:	
  7730                           ; 2 bytes @ 0x0
  7731                           
  7732     004E                     EUSART1_SetRxInterruptHandler@interruptHandler:	
  7733                           ; 2 bytes @ 0x0
  7734                           
  7735     004E                     TMR0_WriteTimer@timerVal:	
  7736                           ; 2 bytes @ 0x0
  7737                           
  7738     004E                     TMR0_SetInterruptHandler@InterruptHandler:	
  7739                           ; 2 bytes @ 0x0
  7740                           
  7741     004E                     TMR1_WriteTimer@timerVal:	
  7742                           ; 2 bytes @ 0x0
  7743                           
  7744     004E                     memcpy@d1:	
  7745                           ; 2 bytes @ 0x0
  7746                           
  7747     004E                     memset@c:	
  7748                           ; 2 bytes @ 0x0
  7749                           
  7750     004E                     ___lmul@multiplier:	
  7751                           ; 2 bytes @ 0x0
  7752                           
  7753     004E                     ___omul@multiplier:	
  7754                           ; 4 bytes @ 0x0
  7755                           
  7756                           
  7757                           ; 8 bytes @ 0x0
  7758     004E                     	ds	1
  7759     004F                     ??_LIN_getFromTable:
  7760     004F                     LIN_calcParity@CMD:	
  7761                           ; 1 bytes @ 0x1
  7762                           
  7763     004F                     LIN_getChecksum@data:	
  7764                           ; 1 bytes @ 0x1
  7765                           
  7766     004F                     EUSART1_Read@readValue:	
  7767                           ; 1 bytes @ 0x1
  7768                           
  7769     004F                     EUSART1_Write@txData:	
  7770                           ; 1 bytes @ 0x1
  7771                           
  7772                           
  7773                           ; 1 bytes @ 0x1
  7774     004F                     	ds	1
  7775     0050                     ?_LIN_init:
  7776     0050                     ??_CmdOutput:	
  7777                           ; 1 bytes @ 0x2
  7778                           
  7779     0050                     ??_LIN_setTimerHandler:	
  7780                           ; 1 bytes @ 0x2
  7781                           
  7782     0050                     ??_LIN_getChecksum:	
  7783                           ; 1 bytes @ 0x2
  7784                           
  7785     0050                     ??_LIN_startTimer:	
  7786                           ; 1 bytes @ 0x2
  7787                           
  7788     0050                     ??_LIN_breakCheck:	
  7789                           ; 1 bytes @ 0x2
  7790                           
  7791     0050                     ??_TMR0_WriteTimer:	
  7792                           ; 1 bytes @ 0x2
  7793                           
  7794     0050                     ??_TMR0_SetInterruptHandler:	
  7795                           ; 1 bytes @ 0x2
  7796                           
  7797     0050                     ??_TMR0_Initialize:	
  7798                           ; 1 bytes @ 0x2
  7799                           
  7800     0050                     ??_EUSART1_Initialize:	
  7801                           ; 1 bytes @ 0x2
  7802                           
  7803     0050                     ??_EUSART1_SetRxInterruptHandler:	
  7804                           ; 1 bytes @ 0x2
  7805                           
  7806     0050                     ??_EUSART1_SetTxInterruptHandler:	
  7807                           ; 1 bytes @ 0x2
  7808                           
  7809     0050                     ??_EUSART1_SetFramingErrorHandler:	
  7810                           ; 1 bytes @ 0x2
  7811                           
  7812     0050                     ??_EUSART1_SetOverrunErrorHandler:	
  7813                           ; 1 bytes @ 0x2
  7814                           
  7815     0050                     ??_EUSART1_SetErrorHandler:	
  7816                           ; 1 bytes @ 0x2
  7817                           
  7818     0050                     ??_GetAmbientTemperature:	
  7819                           ; 1 bytes @ 0x2
  7820                           
  7821     0050                     ??_TMR1_WriteTimer:	
  7822                           ; 1 bytes @ 0x2
  7823                           
  7824     0050                     LIN_calcParity@PID:	
  7825                           ; 1 bytes @ 0x2
  7826                           
  7827     0050                     LIN_startTimer@timeout:	
  7828                           ; 1 bytes @ 0x2
  7829                           
  7830     0050                     LIN_init@command:	
  7831                           ; 1 bytes @ 0x2
  7832                           
  7833     0050                     memcpy@s1:	
  7834                           ; 2 bytes @ 0x2
  7835                           
  7836     0050                     memset@n:	
  7837                           ; 2 bytes @ 0x2
  7838                           
  7839                           
  7840                           ; 2 bytes @ 0x2
  7841     0050                     	ds	1
  7842     0051                     LIN_getFromTable@cmd:
  7843                           
  7844                           ; 1 bytes @ 0x3
  7845     0051                     	ds	1
  7846     0052                     ??_memset:
  7847     0052                     LIN_getFromTable@length:	
  7848                           ; 1 bytes @ 0x4
  7849                           
  7850     0052                     LIN_getChecksum@length:	
  7851                           ; 1 bytes @ 0x4
  7852                           
  7853     0052                     CmdOutput@enable:	
  7854                           ; 1 bytes @ 0x4
  7855                           
  7856     0052                     LIN_init@processData:	
  7857                           ; 1 bytes @ 0x4
  7858                           
  7859     0052                     memcpy@n:	
  7860                           ; 2 bytes @ 0x4
  7861                           
  7862     0052                     ___lmul@multiplicand:	
  7863                           ; 2 bytes @ 0x4
  7864                           
  7865                           
  7866                           ; 4 bytes @ 0x4
  7867     0052                     	ds	1
  7868     0053                     ??_EFuseInit:
  7869     0053                     LIN_getChecksum@i:	
  7870                           ; 1 bytes @ 0x5
  7871                           
  7872     0053                     memset@p:	
  7873                           ; 1 bytes @ 0x5
  7874                           
  7875     0053                     LIN_getFromTable@rxCommand:	
  7876                           ; 1 bytes @ 0x5
  7877                           
  7878                           
  7879                           ; 2 bytes @ 0x5
  7880     0053                     	ds	1
  7881     0054                     ??_LIN_init:
  7882     0054                     ??_memcpy:	
  7883                           ; 1 bytes @ 0x6
  7884                           
  7885     0054                     LIN_init@tableLength:	
  7886                           ; 1 bytes @ 0x6
  7887                           
  7888     0054                     memcpy@tmp:	
  7889                           ; 1 bytes @ 0x6
  7890                           
  7891     0054                     memset@dest:	
  7892                           ; 1 bytes @ 0x6
  7893                           
  7894     0054                     LIN_getChecksum@checksum:	
  7895                           ; 1 bytes @ 0x6
  7896                           
  7897     0054                     GetAmbientTemperature@adcTemp:	
  7898                           ; 2 bytes @ 0x6
  7899                           
  7900                           
  7901                           ; 2 bytes @ 0x6
  7902     0054                     	ds	1
  7903     0055                     ??_LIN_checkPID:
  7904     0055                     ??_LIN_Slave_Initialize:	
  7905                           ; 1 bytes @ 0x7
  7906                           
  7907     0055                     ??_SYSTEM_Initialize:	
  7908                           ; 1 bytes @ 0x7
  7909                           
  7910     0055                     LIN_checkPID@pid:	
  7911                           ; 1 bytes @ 0x7
  7912                           
  7913     0055                     memcpy@d:	
  7914                           ; 1 bytes @ 0x7
  7915                           
  7916                           
  7917                           ; 2 bytes @ 0x7
  7918     0055                     	ds	1
  7919     0056                     ?_LIN_sendPacket:
  7920     0056                     ??___lmul:	
  7921                           ; 1 bytes @ 0x8
  7922                           
  7923     0056                     LIN_sendPacket@pid:	
  7924                           ; 1 bytes @ 0x8
  7925                           
  7926     0056                     GetAmbientTemperature@i:	
  7927                           ; 1 bytes @ 0x8
  7928                           
  7929     0056                     ___lmul@product:	
  7930                           ; 1 bytes @ 0x8
  7931                           
  7932     0056                     ___omul@multiplicand:	
  7933                           ; 4 bytes @ 0x8
  7934                           
  7935                           
  7936                           ; 8 bytes @ 0x8
  7937     0056                     	ds	1
  7938     0057                     LIN_sendPacket@data:
  7939     0057                     GetAmbientTemperature@temperature:	
  7940                           ; 1 bytes @ 0x9
  7941                           
  7942     0057                     memcpy@s:	
  7943                           ; 2 bytes @ 0x9
  7944                           
  7945                           
  7946                           ; 2 bytes @ 0x9
  7947     0057                     	ds	1
  7948     0058                     ??_LIN_sendPacket:
  7949                           
  7950                           ; 1 bytes @ 0xA
  7951     0058                     	ds	1
  7952     0059                     ??_LIN_getPacket:
  7953     0059                     LIN_sendPacket@length:	
  7954                           ; 1 bytes @ 0xB
  7955                           
  7956     0059                     LIN_getPacket@data:	
  7957                           ; 1 bytes @ 0xB
  7958                           
  7959                           
  7960                           ; 1 bytes @ 0xB
  7961     0059                     	ds	1
  7962     005A                     ?___lldiv:
  7963     005A                     LIN_sendPacket@i:	
  7964                           ; 4 bytes @ 0xC
  7965                           
  7966     005A                     LIN_getPacket@cmd:	
  7967                           ; 1 bytes @ 0xC
  7968                           
  7969     005A                     ___lldiv@divisor:	
  7970                           ; 1 bytes @ 0xC
  7971                           
  7972                           
  7973                           ; 4 bytes @ 0xC
  7974     005A                     	ds	1
  7975     005B                     ??_processLIN:
  7976     005B                     ??_LIN_queuePacket:	
  7977                           ; 1 bytes @ 0xD
  7978                           
  7979                           
  7980                           ; 1 bytes @ 0xD
  7981     005B                     	ds	3
  7982     005E                     ??___omul:
  7983     005E                     LIN_queuePacket@cmd:	
  7984                           ; 1 bytes @ 0x10
  7985                           
  7986     005E                     ___lldiv@dividend:	
  7987                           ; 1 bytes @ 0x10
  7988                           
  7989                           
  7990                           ; 4 bytes @ 0x10
  7991     005E                     	ds	1
  7992     005F                     LIN_queuePacket@i:
  7993     005F                     ___omul@product:	
  7994                           ; 1 bytes @ 0x11
  7995                           
  7996                           
  7997                           ; 8 bytes @ 0x11
  7998     005F                     	ds	1
  7999     0060                     LIN_queuePacket@tempSchedule:
  8000                           
  8001                           ; 2 bytes @ 0x12
  8002     0060                     	ds	2
  8003     0062                     ??_LIN_handler:
  8004     0062                     ??___lldiv:	
  8005                           ; 1 bytes @ 0x14
  8006                           
  8007                           
  8008                           ; 1 bytes @ 0x14
  8009     0062                     	ds	5
  8010                           
  8011                           	psect	maintext
  8012     0B9C                     __pmaintext:	
  8013 ;;
  8014 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  8015 ;;
  8016 ;; *************** function _main *****************
  8017 ;; Defined at:
  8018 ;;		line 55 in file "main.c"
  8019 ;; Parameters:    Size  Location     Type
  8020 ;;		None
  8021 ;; Auto vars:     Size  Location     Type
  8022 ;;		None
  8023 ;; Return value:  Size  Location     Type
  8024 ;;                  1    wreg      void 
  8025 ;; Registers used:
  8026 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8027 ;; Tracked objects:
  8028 ;;		On entry : B3F/0
  8029 ;;		On exit  : 3C/0
  8030 ;;		Unchanged: 0/0
  8031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8034 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  8035 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  8036 ;;Total ram usage:        2 bytes
  8037 ;; Hardware stack levels required when called: 10
  8038 ;; This function calls:
  8039 ;;		_CmdOutput
  8040 ;;		_EFuse
  8041 ;;		_EFuseInit
  8042 ;;		_LIN_handler
  8043 ;;		_SYSTEM_Initialize
  8044 ;; This function is called by:
  8045 ;;		Startup code after reset
  8046 ;; This function uses a non-reentrant model
  8047 ;;
  8048                           
  8049     0B9C                     _main:	
  8050                           ;psect for function _main
  8051                           
  8052                           
  8053                           ;main.c: 57:     SYSTEM_Initialize();
  8054                           
  8055                           ;incstack = 0
  8056                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8057     0B9C  318C  2456  318B   	fcall	_SYSTEM_Initialize
  8058                           
  8059                           ;main.c: 59:     EFuseInit();
  8060     0B9F  318B  2353  318B   	fcall	_EFuseInit
  8061     0BA2  1719               	bsf	25,6	;volatile
  8062                           
  8063                           ;main.c: 61:     _delay((unsigned long)((1000)*(32000000/4000.0)));
  8064     0BA3  3029               	movlw	41
  8065     0BA4  0142               	movlb	2	; select bank2
  8066     0BA5  00C0               	movwf	(??_main^(0+256)+1)
  8067     0BA6  3096               	movlw	150
  8068     0BA7  00BF               	movwf	??_main^(0+256)
  8069     0BA8  307F               	movlw	127
  8070     0BA9                     u3477:
  8071     0BA9  0B89               	decfsz	9,f
  8072     0BAA  2BA9               	goto	u3477
  8073     0BAB  0BBF               	decfsz	??_main^(0+256),f
  8074     0BAC  2BA9               	goto	u3477
  8075     0BAD  0BC0               	decfsz	(??_main^(0+256)+1),f
  8076     0BAE  2BA9               	goto	u3477
  8077                           
  8078                           ;main.c: 63:     (INTCONbits.GIE = 1);
  8079     0BAF  178B               	bsf	11,7	;volatile
  8080                           
  8081                           ;main.c: 64:     (INTCONbits.PEIE = 1);
  8082     0BB0  170B               	bsf	11,6	;volatile
  8083                           
  8084                           ;main.c: 66:     _delay((unsigned long)((100)*(32000000/4000.0)));
  8085     0BB1  3005               	movlw	5
  8086     0BB2  0142               	movlb	2	; select bank2
  8087     0BB3  00C0               	movwf	(??_main^(0+256)+1)
  8088     0BB4  300F               	movlw	15
  8089     0BB5  00BF               	movwf	??_main^(0+256)
  8090     0BB6  30F1               	movlw	241
  8091     0BB7                     u3487:
  8092     0BB7  0B89               	decfsz	9,f
  8093     0BB8  2BB7               	goto	u3487
  8094     0BB9  0BBF               	decfsz	??_main^(0+256),f
  8095     0BBA  2BB7               	goto	u3487
  8096     0BBB  0BC0               	decfsz	(??_main^(0+256)+1),f
  8097     0BBC  2BB7               	goto	u3487
  8098                           
  8099                           ;main.c: 67:     CmdOutput(OUTPUT_ON);
  8100     0BBD  3001               	movlw	1
  8101     0BBE  318D  25EC  318B   	fcall	_CmdOutput
  8102     0BC1                     l5526:
  8103                           
  8104                           ;main.c: 70:     {;main.c: 71:         LIN_handler();
  8105     0BC1  3184  24AB  318B   	fcall	_LIN_handler
  8106                           
  8107                           ;main.c: 72:         EFuse();
  8108     0BC4  3186  2662  318B   	fcall	_EFuse
  8109     0BC7  2BC1               	goto	l5526
  8110     0BC8                     __end_of_main:
  8111                           
  8112                           	psect	text1
  8113     0C56                     __ptext1:	
  8114 ;; *************** function _SYSTEM_Initialize *****************
  8115 ;; Defined at:
  8116 ;;		line 50 in file "mcc_generated_files/mcc.c"
  8117 ;; Parameters:    Size  Location     Type
  8118 ;;		None
  8119 ;; Auto vars:     Size  Location     Type
  8120 ;;		None
  8121 ;; Return value:  Size  Location     Type
  8122 ;;                  1    wreg      void 
  8123 ;; Registers used:
  8124 ;;		wreg, status,2, status,0, pclath, cstack
  8125 ;; Tracked objects:
  8126 ;;		On entry : B3F/0
  8127 ;;		On exit  : 3F/2
  8128 ;;		Unchanged: 0/0
  8129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8133 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8134 ;;Total ram usage:        0 bytes
  8135 ;; Hardware stack levels used: 1
  8136 ;; Hardware stack levels required when called: 9
  8137 ;; This function calls:
  8138 ;;		_ADC_Initialize
  8139 ;;		_CLC1_Initialize
  8140 ;;		_CLC2_Initialize
  8141 ;;		_CLC3_Initialize
  8142 ;;		_CLC4_Initialize
  8143 ;;		_CMP2_Initialize
  8144 ;;		_DAC1_Initialize
  8145 ;;		_EUSART1_Initialize
  8146 ;;		_FVR_Initialize
  8147 ;;		_LIN_Slave_Initialize
  8148 ;;		_OSCILLATOR_Initialize
  8149 ;;		_PIN_MANAGER_Initialize
  8150 ;;		_PMD_Initialize
  8151 ;;		_TMR0_Initialize
  8152 ;;		_TMR1_Initialize
  8153 ;;		_TMR2_Initialize
  8154 ;; This function is called by:
  8155 ;;		_main
  8156 ;; This function uses a non-reentrant model
  8157 ;;
  8158                           
  8159     0C56                     _SYSTEM_Initialize:	
  8160                           ;psect for function _SYSTEM_Initialize
  8161                           
  8162                           
  8163                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
  8164                           
  8165                           ;incstack = 0
  8166                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8167     0C56  3188  20F0  318C   	fcall	_PMD_Initialize
  8168                           
  8169                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  8170     0C59  318B  23F7  318C   	fcall	_PIN_MANAGER_Initialize
  8171                           
  8172                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  8173     0C5C  3189  210A  318C   	fcall	_OSCILLATOR_Initialize
  8174                           
  8175                           ;mcc_generated_files/mcc.c: 55:     CMP2_Initialize();
  8176     0C5F  3189  2100  318C   	fcall	_CMP2_Initialize
  8177                           
  8178                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
  8179     0C62  3187  27FC  318C   	fcall	_FVR_Initialize
  8180                           
  8181                           ;mcc_generated_files/mcc.c: 57:     CLC2_Initialize();
  8182     0C65  3189  21BF  318C   	fcall	_CLC2_Initialize
  8183                           
  8184                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
  8185     0C68  3189  215F  318C   	fcall	_TMR2_Initialize
  8186                           
  8187                           ;mcc_generated_files/mcc.c: 59:     TMR0_Initialize();
  8188     0C6B  318A  225F  318C   	fcall	_TMR0_Initialize
  8189                           
  8190                           ;mcc_generated_files/mcc.c: 60:     CLC1_Initialize();
  8191     0C6E  3189  21AB  318C   	fcall	_CLC1_Initialize
  8192                           
  8193                           ;mcc_generated_files/mcc.c: 61:     CLC4_Initialize();
  8194     0C71  3189  218B  318C   	fcall	_CLC4_Initialize
  8195                           
  8196                           ;mcc_generated_files/mcc.c: 62:     ADC_Initialize();
  8197     0C74  3188  20B0  318C   	fcall	_ADC_Initialize
  8198                           
  8199                           ;mcc_generated_files/mcc.c: 63:     CLC3_Initialize();
  8200     0C77  3189  219A  318C   	fcall	_CLC3_Initialize
  8201                           
  8202                           ;mcc_generated_files/mcc.c: 64:     DAC1_Initialize();
  8203     0C7A  3188  208E  318C   	fcall	_DAC1_Initialize
  8204                           
  8205                           ;mcc_generated_files/mcc.c: 65:     TMR1_Initialize();
  8206     0C7D  318A  2278  318C   	fcall	_TMR1_Initialize
  8207                           
  8208                           ;mcc_generated_files/mcc.c: 66:     EUSART1_Initialize();
  8209     0C80  318C  24B9  318C   	fcall	_EUSART1_Initialize
  8210                           
  8211                           ;mcc_generated_files/mcc.c: 67:     LIN_Slave_Initialize();
  8212     0C83  3189  2144         	fcall	_LIN_Slave_Initialize
  8213     0C85  0008               	return
  8214     0C86                     __end_of_SYSTEM_Initialize:
  8215                           
  8216                           	psect	text2
  8217     0A78                     __ptext2:	
  8218 ;; *************** function _TMR1_Initialize *****************
  8219 ;; Defined at:
  8220 ;;		line 63 in file "mcc_generated_files/tmr1.c"
  8221 ;; Parameters:    Size  Location     Type
  8222 ;;		None
  8223 ;; Auto vars:     Size  Location     Type
  8224 ;;		None
  8225 ;; Return value:  Size  Location     Type
  8226 ;;                  1    wreg      void 
  8227 ;; Registers used:
  8228 ;;		wreg
  8229 ;; Tracked objects:
  8230 ;;		On entry : 3F/12
  8231 ;;		On exit  : 3F/4
  8232 ;;		Unchanged: 0/0
  8233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8237 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8238 ;;Total ram usage:        0 bytes
  8239 ;; Hardware stack levels used: 1
  8240 ;; Hardware stack levels required when called: 5
  8241 ;; This function calls:
  8242 ;;		Nothing
  8243 ;; This function is called by:
  8244 ;;		_SYSTEM_Initialize
  8245 ;; This function uses a non-reentrant model
  8246 ;;
  8247                           
  8248     0A78                     _TMR1_Initialize:	
  8249                           ;psect for function _TMR1_Initialize
  8250                           
  8251                           
  8252                           ;mcc_generated_files/tmr1.c: 68:     T1GCON = 0x80;
  8253                           
  8254                           ;incstack = 0
  8255                           ; Regs used in _TMR1_Initialize: [wreg]
  8256     0A78  3080               	movlw	128
  8257     0A79  0144               	movlb	4	; select bank4
  8258     0A7A  008F               	movwf	15	;volatile
  8259                           
  8260                           ;mcc_generated_files/tmr1.c: 71:     T1GATE = 0x0D;
  8261     0A7B  300D               	movlw	13
  8262     0A7C  0090               	movwf	16	;volatile
  8263                           
  8264                           ;mcc_generated_files/tmr1.c: 74:     T1CLK = 0x03;
  8265     0A7D  3003               	movlw	3
  8266     0A7E  0091               	movwf	17	;volatile
  8267                           
  8268                           ;mcc_generated_files/tmr1.c: 77:     TMR1H = 0xFF;
  8269     0A7F  30FF               	movlw	255
  8270     0A80  008D               	movwf	13	;volatile
  8271                           
  8272                           ;mcc_generated_files/tmr1.c: 80:     TMR1L = 0xD8;
  8273     0A81  30D8               	movlw	216
  8274     0A82  008C               	movwf	12	;volatile
  8275                           
  8276                           ;mcc_generated_files/tmr1.c: 83:     PIR4bits.TMR1IF = 0;
  8277     0A83  014E               	movlb	14	; select bank14
  8278     0A84  1010               	bcf	16,0	;volatile
  8279                           
  8280                           ;mcc_generated_files/tmr1.c: 86:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  8281     0A85  0144               	movlb	4	; select bank4
  8282     0A86  080D               	movf	13,w	;volatile
  8283     0A87  0141               	movlb	1	; select bank1
  8284     0A88  00B5               	movwf	(_timer1ReloadVal+1)^(0+128)	;volatile
  8285     0A89  0144               	movlb	4	; select bank4
  8286     0A8A  080C               	movf	12,w	;volatile
  8287     0A8B  0141               	movlb	1	; select bank1
  8288     0A8C  00B4               	movwf	_timer1ReloadVal^(0+128)	;volatile
  8289                           
  8290                           ;mcc_generated_files/tmr1.c: 89:     T1CON = 0x35;
  8291     0A8D  3035               	movlw	53
  8292     0A8E  0144               	movlb	4	; select bank4
  8293     0A8F  008E               	movwf	14	;volatile
  8294     0A90  0008               	return
  8295     0A91                     __end_of_TMR1_Initialize:
  8296                           
  8297                           	psect	text3
  8298     0A5F                     __ptext3:	
  8299 ;; *************** function _TMR0_Initialize *****************
  8300 ;; Defined at:
  8301 ;;		line 68 in file "mcc_generated_files/tmr0.c"
  8302 ;; Parameters:    Size  Location     Type
  8303 ;;		None
  8304 ;; Auto vars:     Size  Location     Type
  8305 ;;		None
  8306 ;; Return value:  Size  Location     Type
  8307 ;;                  1    wreg      void 
  8308 ;; Registers used:
  8309 ;;		wreg, status,2, status,0, pclath, cstack
  8310 ;; Tracked objects:
  8311 ;;		On entry : 3F/5
  8312 ;;		On exit  : 3F/B
  8313 ;;		Unchanged: 0/0
  8314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8319 ;;Total ram usage:        0 bytes
  8320 ;; Hardware stack levels used: 1
  8321 ;; Hardware stack levels required when called: 6
  8322 ;; This function calls:
  8323 ;;		_TMR0_SetInterruptHandler
  8324 ;; This function is called by:
  8325 ;;		_SYSTEM_Initialize
  8326 ;; This function uses a non-reentrant model
  8327 ;;
  8328                           
  8329     0A5F                     _TMR0_Initialize:	
  8330                           ;psect for function _TMR0_Initialize
  8331                           
  8332                           
  8333                           ;mcc_generated_files/tmr0.c: 73:     T0CON1 = 0x56;
  8334                           
  8335                           ;incstack = 0
  8336                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8337     0A5F  3056               	movlw	86
  8338     0A60  014B               	movlb	11	; select bank11
  8339     0A61  009F               	movwf	31	;volatile
  8340                           
  8341                           ;mcc_generated_files/tmr0.c: 76:     TMR0H = 0xFF;
  8342     0A62  30FF               	movlw	255
  8343     0A63  009D               	movwf	29	;volatile
  8344                           
  8345                           ;mcc_generated_files/tmr0.c: 79:     TMR0L = 0x83;
  8346     0A64  3083               	movlw	131
  8347     0A65  009C               	movwf	28	;volatile
  8348                           
  8349                           ;mcc_generated_files/tmr0.c: 82:     timer0ReloadVal16bit = (uint16_t) (TMR0H << 8) | TM
      +                          R0L;
  8350     0A66  081D               	movf	29,w	;volatile
  8351     0A67  00F1               	movwf	_timer0ReloadVal16bit+1	;volatile
  8352     0A68  081C               	movf	28,w	;volatile
  8353     0A69  00F0               	movwf	_timer0ReloadVal16bit	;volatile
  8354                           
  8355                           ;mcc_generated_files/tmr0.c: 85:     PIR0bits.TMR0IF = 0;
  8356     0A6A  014E               	movlb	14	; select bank14
  8357     0A6B  128C               	bcf	12,5	;volatile
  8358                           
  8359                           ;mcc_generated_files/tmr0.c: 88:     PIE0bits.TMR0IE = 1;
  8360     0A6C  1696               	bsf	22,5	;volatile
  8361                           
  8362                           ;mcc_generated_files/tmr0.c: 91:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  8363     0A6D  3055               	movlw	low _TMR0_DefaultInterruptHandler
  8364     0A6E  0140               	movlb	0	; select bank0
  8365     0A6F  00CE               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  8366     0A70  3008               	movlw	high _TMR0_DefaultInterruptHandler
  8367     0A71  00CF               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  8368     0A72  3188  20E0         	fcall	_TMR0_SetInterruptHandler
  8369                           
  8370                           ;mcc_generated_files/tmr0.c: 94:     T0CON0 = 0x90;
  8371     0A74  3090               	movlw	144
  8372     0A75  014B               	movlb	11	; select bank11
  8373     0A76  009E               	movwf	30	;volatile
  8374     0A77  0008               	return
  8375     0A78                     __end_of_TMR0_Initialize:
  8376                           
  8377                           	psect	text4
  8378     08F0                     __ptext4:	
  8379 ;; *************** function _PMD_Initialize *****************
  8380 ;; Defined at:
  8381 ;;		line 86 in file "mcc_generated_files/mcc.c"
  8382 ;; Parameters:    Size  Location     Type
  8383 ;;		None
  8384 ;; Auto vars:     Size  Location     Type
  8385 ;;		None
  8386 ;; Return value:  Size  Location     Type
  8387 ;;                  1    wreg      void 
  8388 ;; Registers used:
  8389 ;;		status,2
  8390 ;; Tracked objects:
  8391 ;;		On entry : B3F/0
  8392 ;;		On exit  : B3F/F
  8393 ;;		Unchanged: B00/0
  8394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8398 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8399 ;;Total ram usage:        0 bytes
  8400 ;; Hardware stack levels used: 1
  8401 ;; Hardware stack levels required when called: 5
  8402 ;; This function calls:
  8403 ;;		Nothing
  8404 ;; This function is called by:
  8405 ;;		_SYSTEM_Initialize
  8406 ;; This function uses a non-reentrant model
  8407 ;;
  8408                           
  8409     08F0                     _PMD_Initialize:	
  8410                           ;psect for function _PMD_Initialize
  8411                           
  8412                           
  8413                           ;mcc_generated_files/mcc.c: 89:     PMD0 = 0x00;
  8414                           
  8415                           ;incstack = 0
  8416                           ; Regs used in _PMD_Initialize: [status,2]
  8417     08F0  014F               	movlb	15	; select bank15
  8418     08F1  0196               	clrf	22	;volatile
  8419                           
  8420                           ;mcc_generated_files/mcc.c: 91:     PMD1 = 0x00;
  8421     08F2  0197               	clrf	23	;volatile
  8422                           
  8423                           ;mcc_generated_files/mcc.c: 93:     PMD2 = 0x00;
  8424     08F3  0198               	clrf	24	;volatile
  8425                           
  8426                           ;mcc_generated_files/mcc.c: 95:     PMD3 = 0x00;
  8427     08F4  0199               	clrf	25	;volatile
  8428                           
  8429                           ;mcc_generated_files/mcc.c: 97:     PMD4 = 0x00;
  8430     08F5  019A               	clrf	26	;volatile
  8431                           
  8432                           ;mcc_generated_files/mcc.c: 99:     PMD5 = 0x00;
  8433     08F6  019B               	clrf	27	;volatile
  8434     08F7  0008               	return
  8435     08F8                     __end_of_PMD_Initialize:
  8436                           
  8437                           	psect	text5
  8438     0BF7                     __ptext5:	
  8439 ;; *************** function _PIN_MANAGER_Initialize *****************
  8440 ;; Defined at:
  8441 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  8442 ;; Parameters:    Size  Location     Type
  8443 ;;		None
  8444 ;; Auto vars:     Size  Location     Type
  8445 ;;		None
  8446 ;; Return value:  Size  Location     Type
  8447 ;;                  1    wreg      void 
  8448 ;; Registers used:
  8449 ;;		wreg, status,2
  8450 ;; Tracked objects:
  8451 ;;		On entry : B3F/F
  8452 ;;		On exit  : B3F/3D
  8453 ;;		Unchanged: B00/0
  8454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8458 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8459 ;;Total ram usage:        0 bytes
  8460 ;; Hardware stack levels used: 1
  8461 ;; Hardware stack levels required when called: 5
  8462 ;; This function calls:
  8463 ;;		Nothing
  8464 ;; This function is called by:
  8465 ;;		_SYSTEM_Initialize
  8466 ;; This function uses a non-reentrant model
  8467 ;;
  8468                           
  8469     0BF7                     _PIN_MANAGER_Initialize:	
  8470                           ;psect for function _PIN_MANAGER_Initialize
  8471                           
  8472                           
  8473                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  8474                           
  8475                           ;incstack = 0
  8476                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  8477     0BF7  0140               	movlb	0	; select bank0
  8478     0BF8  0198               	clrf	24	;volatile
  8479                           
  8480                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  8481     0BF9  0199               	clrf	25	;volatile
  8482                           
  8483                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  8484     0BFA  019A               	clrf	26	;volatile
  8485                           
  8486                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x37;
  8487     0BFB  3037               	movlw	55
  8488     0BFC  0092               	movwf	18	;volatile
  8489                           
  8490                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0x30;
  8491     0BFD  3030               	movlw	48
  8492     0BFE  0093               	movwf	19	;volatile
  8493                           
  8494                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xBF;
  8495     0BFF  30BF               	movlw	191
  8496     0C00  0094               	movwf	20	;volatile
  8497                           
  8498                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x1F;
  8499     0C01  301F               	movlw	31
  8500     0C02  017E               	movlb	62	; select bank62
  8501     0C03  00CE               	movwf	78	;volatile
  8502                           
  8503                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x10;
  8504     0C04  3010               	movlw	16
  8505     0C05  00C3               	movwf	67	;volatile
  8506                           
  8507                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x07;
  8508     0C06  3007               	movlw	7
  8509     0C07  00B8               	movwf	56	;volatile
  8510                           
  8511                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  8512     0C08  01C4               	clrf	68	;volatile
  8513                           
  8514                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
  8515     0C09  01B9               	clrf	57	;volatile
  8516                           
  8517                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x00;
  8518     0C0A  01CF               	clrf	79	;volatile
  8519                           
  8520                           ;mcc_generated_files/pin_manager.c: 88:     ODCONA = 0x00;
  8521     0C0B  01BA               	clrf	58	;volatile
  8522                           
  8523                           ;mcc_generated_files/pin_manager.c: 89:     ODCONB = 0x00;
  8524     0C0C  01C5               	clrf	69	;volatile
  8525                           
  8526                           ;mcc_generated_files/pin_manager.c: 90:     ODCONC = 0x00;
  8527     0C0D  01D0               	clrf	80	;volatile
  8528                           
  8529                           ;mcc_generated_files/pin_manager.c: 95:     SLRCONA = 0x1F;
  8530     0C0E  301F               	movlw	31
  8531     0C0F  00BB               	movwf	59	;volatile
  8532                           
  8533                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONB = 0x00;
  8534     0C10  01C6               	clrf	70	;volatile
  8535                           
  8536                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONC = 0x3F;
  8537     0C11  303F               	movlw	63
  8538     0C12  00D1               	movwf	81	;volatile
  8539                           
  8540                           ;mcc_generated_files/pin_manager.c: 102:     INLVLA = 0x3F;
  8541     0C13  303F               	movlw	63
  8542     0C14  00BC               	movwf	60	;volatile
  8543                           
  8544                           ;mcc_generated_files/pin_manager.c: 103:     INLVLB = 0x00;
  8545     0C15  01C7               	clrf	71	;volatile
  8546                           
  8547                           ;mcc_generated_files/pin_manager.c: 104:     INLVLC = 0x3F;
  8548     0C16  303F               	movlw	63
  8549     0C17  00D2               	movwf	82	;volatile
  8550                           
  8551                           ;mcc_generated_files/pin_manager.c: 113:     CLCIN0PPS = 0x17;
  8552     0C18  3017               	movlw	23
  8553     0C19  017D               	movlb	61	; select bank61
  8554     0C1A  00BB               	movwf	59	;volatile
  8555                           
  8556                           ;mcc_generated_files/pin_manager.c: 114:     RB7PPS = 0x0F;
  8557     0C1B  300F               	movlw	15
  8558     0C1C  017E               	movlb	62	; select bank62
  8559     0C1D  009F               	movwf	31	;volatile
  8560                           
  8561                           ;mcc_generated_files/pin_manager.c: 115:     RC6PPS = 0x02;
  8562     0C1E  3002               	movlw	2
  8563     0C1F  00A6               	movwf	38	;volatile
  8564                           
  8565                           ;mcc_generated_files/pin_manager.c: 116:     RC7PPS = 0x01;
  8566     0C20  3001               	movlw	1
  8567     0C21  00A7               	movwf	39	;volatile
  8568                           
  8569                           ;mcc_generated_files/pin_manager.c: 117:     RX1DTPPS = 0x0D;
  8570     0C22  300D               	movlw	13
  8571     0C23  017D               	movlb	61	; select bank61
  8572     0C24  00CB               	movwf	75	;volatile
  8573     0C25  0008               	return
  8574     0C26                     __end_of_PIN_MANAGER_Initialize:
  8575                           
  8576                           	psect	text6
  8577     090A                     __ptext6:	
  8578 ;; *************** function _OSCILLATOR_Initialize *****************
  8579 ;; Defined at:
  8580 ;;		line 70 in file "mcc_generated_files/mcc.c"
  8581 ;; Parameters:    Size  Location     Type
  8582 ;;		None
  8583 ;; Auto vars:     Size  Location     Type
  8584 ;;		None
  8585 ;; Return value:  Size  Location     Type
  8586 ;;                  1    wreg      void 
  8587 ;; Registers used:
  8588 ;;		wreg, status,2
  8589 ;; Tracked objects:
  8590 ;;		On entry : B3F/3D
  8591 ;;		On exit  : B3F/11
  8592 ;;		Unchanged: B00/0
  8593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8597 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8598 ;;Total ram usage:        0 bytes
  8599 ;; Hardware stack levels used: 1
  8600 ;; Hardware stack levels required when called: 5
  8601 ;; This function calls:
  8602 ;;		Nothing
  8603 ;; This function is called by:
  8604 ;;		_SYSTEM_Initialize
  8605 ;; This function uses a non-reentrant model
  8606 ;;
  8607                           
  8608     090A                     _OSCILLATOR_Initialize:	
  8609                           ;psect for function _OSCILLATOR_Initialize
  8610                           
  8611                           
  8612                           ;mcc_generated_files/mcc.c: 73:     OSCCON1 = 0x60;
  8613                           
  8614                           ;incstack = 0
  8615                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  8616     090A  3060               	movlw	96
  8617     090B  0151               	movlb	17	; select bank17
  8618     090C  008D               	movwf	13	;volatile
  8619                           
  8620                           ;mcc_generated_files/mcc.c: 75:     OSCCON3 = 0x00;
  8621     090D  018F               	clrf	15	;volatile
  8622                           
  8623                           ;mcc_generated_files/mcc.c: 77:     OSCEN = 0x00;
  8624     090E  0191               	clrf	17	;volatile
  8625                           
  8626                           ;mcc_generated_files/mcc.c: 79:     OSCFRQ = 0x06;
  8627     090F  3006               	movlw	6
  8628     0910  0093               	movwf	19	;volatile
  8629                           
  8630                           ;mcc_generated_files/mcc.c: 81:     OSCSTAT = 0x00;
  8631     0911  0190               	clrf	16	;volatile
  8632                           
  8633                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
  8634     0912  0192               	clrf	18	;volatile
  8635     0913  0008               	return
  8636     0914                     __end_of_OSCILLATOR_Initialize:
  8637                           
  8638                           	psect	text7
  8639     0944                     __ptext7:	
  8640 ;; *************** function _LIN_Slave_Initialize *****************
  8641 ;; Defined at:
  8642 ;;		line 45 in file "mcc_generated_files/LINDrivers/lin_app.c"
  8643 ;; Parameters:    Size  Location     Type
  8644 ;;		None
  8645 ;; Auto vars:     Size  Location     Type
  8646 ;;		None
  8647 ;; Return value:  Size  Location     Type
  8648 ;;                  1    wreg      void 
  8649 ;; Registers used:
  8650 ;;		wreg, status,2, status,0, pclath, cstack
  8651 ;; Tracked objects:
  8652 ;;		On entry : 3F/E
  8653 ;;		On exit  : 3F/2
  8654 ;;		Unchanged: 0/0
  8655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8660 ;;Total ram usage:        0 bytes
  8661 ;; Hardware stack levels used: 1
  8662 ;; Hardware stack levels required when called: 8
  8663 ;; This function calls:
  8664 ;;		_LIN_init
  8665 ;; This function is called by:
  8666 ;;		_SYSTEM_Initialize
  8667 ;; This function uses a non-reentrant model
  8668 ;;
  8669                           
  8670     0944                     _LIN_Slave_Initialize:	
  8671                           ;psect for function _LIN_Slave_Initialize
  8672                           
  8673                           
  8674                           ;mcc_generated_files/LINDrivers/lin_app.c: 47:     LIN_init((sizeof(scheduleTable)/sizeo
      +                          f(lin_rx_cmd_t)), scheduleTable, processLIN);
  8675                           
  8676                           ;incstack = 0
  8677                           ; Regs used in _LIN_Slave_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8678     0944  30EF               	movlw	low (_scheduleTable| (0+32768))
  8679     0945  0140               	movlb	0	; select bank0
  8680     0946  00D0               	movwf	LIN_init@command
  8681     0947  3086               	movlw	high (_scheduleTable| (0+32768))
  8682     0948  00D1               	movwf	LIN_init@command+1
  8683     0949  309E               	movlw	low _processLIN
  8684     094A  00D2               	movwf	LIN_init@processData
  8685     094B  3003               	movlw	high _processLIN
  8686     094C  00D3               	movwf	LIN_init@processData+1
  8687     094D  301C               	movlw	28
  8688     094E  318A  2291         	fcall	_LIN_init
  8689     0950  0008               	return
  8690     0951                     __end_of_LIN_Slave_Initialize:
  8691                           
  8692                           	psect	text8
  8693     0A91                     __ptext8:	
  8694 ;; *************** function _LIN_init *****************
  8695 ;; Defined at:
  8696 ;;		line 57 in file "mcc_generated_files/LINDrivers/lin_slave.c"
  8697 ;; Parameters:    Size  Location     Type
  8698 ;;  tableLength     1    wreg     unsigned char 
  8699 ;;  command         2    2[BANK0 ] const PTR const struct .
  8700 ;;		 -> scheduleTable(140), 
  8701 ;;  processData     2    4[BANK0 ] PTR FTN()void 
  8702 ;;		 -> processLIN(1), 
  8703 ;; Auto vars:     Size  Location     Type
  8704 ;;  tableLength     1    6[BANK0 ] unsigned char 
  8705 ;; Return value:  Size  Location     Type
  8706 ;;                  1    wreg      void 
  8707 ;; Registers used:
  8708 ;;		wreg, status,2, status,0, pclath, cstack
  8709 ;; Tracked objects:
  8710 ;;		On entry : 3F/0
  8711 ;;		On exit  : 3F/2
  8712 ;;		Unchanged: 0/0
  8713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8714 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8715 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8717 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8718 ;;Total ram usage:        5 bytes
  8719 ;; Hardware stack levels used: 1
  8720 ;; Hardware stack levels required when called: 7
  8721 ;; This function calls:
  8722 ;;		_LIN_enableRx
  8723 ;;		_LIN_setTimerHandler
  8724 ;;		_LIN_stopTimer
  8725 ;; This function is called by:
  8726 ;;		_LIN_Slave_Initialize
  8727 ;; This function uses a non-reentrant model
  8728 ;;
  8729                           
  8730     0A91                     _LIN_init:	
  8731                           ;psect for function _LIN_init
  8732                           
  8733                           
  8734                           ;incstack = 0
  8735                           ; Regs used in _LIN_init: [wreg+status,2+status,0+pclath+cstack]
  8736                           ;LIN_init@tableLength stored from wreg
  8737     0A91  00D4               	movwf	LIN_init@tableLength
  8738                           
  8739                           ;mcc_generated_files/LINDrivers/lin_slave.c: 58:     LIN_rxCommand = command;
  8740     0A92  0851               	movf	LIN_init@command+1,w
  8741     0A93  0141               	movlb	1	; select bank1
  8742     0A94  00EE               	movwf	(_LIN_rxCommand+1)^(0+128)
  8743     0A95  0140               	movlb	0	; select bank0
  8744     0A96  0850               	movf	LIN_init@command,w
  8745     0A97  0141               	movlb	1	; select bank1
  8746     0A98  00ED               	movwf	_LIN_rxCommand^(0+128)
  8747                           
  8748                           ;mcc_generated_files/LINDrivers/lin_slave.c: 59:     LIN_rxCommandLength = tableLength;
  8749     0A99  0140               	movlb	0	; select bank0
  8750     0A9A  0854               	movf	LIN_init@tableLength,w
  8751     0A9B  00EF               	movwf	_LIN_rxCommandLength
  8752                           
  8753                           ;mcc_generated_files/LINDrivers/lin_slave.c: 60:     LIN_processData = processData;
  8754     0A9C  0853               	movf	LIN_init@processData+1,w
  8755     0A9D  0142               	movlb	2	; select bank2
  8756     0A9E  00EE               	movwf	(_LIN_processData+1)^(0+256)
  8757     0A9F  0140               	movlb	0	; select bank0
  8758     0AA0  0852               	movf	LIN_init@processData,w
  8759     0AA1  0142               	movlb	2	; select bank2
  8760     0AA2  00ED               	movwf	_LIN_processData^(0+256)
  8761                           
  8762                           ;mcc_generated_files/LINDrivers/lin_slave.c: 61:     LIN_stopTimer();
  8763     0AA3  3188  2083  318A   	fcall	_LIN_stopTimer
  8764                           
  8765                           ;mcc_generated_files/LINDrivers/lin_slave.c: 62:     LIN_enableRx();
  8766     0AA6  3188  207E  318A   	fcall	_LIN_enableRx
  8767                           
  8768                           ;mcc_generated_files/LINDrivers/lin_slave.c: 63:     LIN_setTimerHandler();
  8769     0AA9  3188  20E8         	fcall	_LIN_setTimerHandler
  8770     0AAB  0008               	return
  8771     0AAC                     __end_of_LIN_init:
  8772                           
  8773                           	psect	text9
  8774     08E8                     __ptext9:	
  8775 ;; *************** function _LIN_setTimerHandler *****************
  8776 ;; Defined at:
  8777 ;;		line 300 in file "mcc_generated_files/LINDrivers/lin_slave.c"
  8778 ;; Parameters:    Size  Location     Type
  8779 ;;		None
  8780 ;; Auto vars:     Size  Location     Type
  8781 ;;		None
  8782 ;; Return value:  Size  Location     Type
  8783 ;;                  1    wreg      void 
  8784 ;; Registers used:
  8785 ;;		wreg, status,2, status,0, pclath, cstack
  8786 ;; Tracked objects:
  8787 ;;		On entry : 3F/E
  8788 ;;		On exit  : 3F/2
  8789 ;;		Unchanged: 0/0
  8790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8794 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8795 ;;Total ram usage:        0 bytes
  8796 ;; Hardware stack levels used: 1
  8797 ;; Hardware stack levels required when called: 6
  8798 ;; This function calls:
  8799 ;;		_TMR0_SetInterruptHandler
  8800 ;; This function is called by:
  8801 ;;		_LIN_init
  8802 ;; This function uses a non-reentrant model
  8803 ;;
  8804                           
  8805     08E8                     _LIN_setTimerHandler:	
  8806                           ;psect for function _LIN_setTimerHandler
  8807                           
  8808                           
  8809                           ;mcc_generated_files/LINDrivers/lin_slave.c: 301:     TMR0_SetInterruptHandler(LIN_timer
      +                          Handler);
  8810                           
  8811                           ;incstack = 0
  8812                           ; Regs used in _LIN_setTimerHandler: [wreg+status,2+status,0+pclath+cstack]
  8813     08E8  301E               	movlw	low _LIN_timerHandler
  8814     08E9  0140               	movlb	0	; select bank0
  8815     08EA  00CE               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  8816     08EB  3009               	movlw	high _LIN_timerHandler
  8817     08EC  00CF               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  8818     08ED  3188  20E0         	fcall	_TMR0_SetInterruptHandler
  8819     08EF  0008               	return
  8820     08F0                     __end_of_LIN_setTimerHandler:
  8821                           
  8822                           	psect	text10
  8823     08E0                     __ptext10:	
  8824 ;; *************** function _TMR0_SetInterruptHandler *****************
  8825 ;; Defined at:
  8826 ;;		line 155 in file "mcc_generated_files/tmr0.c"
  8827 ;; Parameters:    Size  Location     Type
  8828 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  8829 ;;		 -> TMR0_DefaultInterruptHandler(1), LIN_timerHandler(1), 
  8830 ;; Auto vars:     Size  Location     Type
  8831 ;;		None
  8832 ;; Return value:  Size  Location     Type
  8833 ;;                  1    wreg      void 
  8834 ;; Registers used:
  8835 ;;		wreg
  8836 ;; Tracked objects:
  8837 ;;		On entry : 3F/0
  8838 ;;		On exit  : 3F/2
  8839 ;;		Unchanged: 0/0
  8840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8841 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8844 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8845 ;;Total ram usage:        2 bytes
  8846 ;; Hardware stack levels used: 1
  8847 ;; Hardware stack levels required when called: 5
  8848 ;; This function calls:
  8849 ;;		Nothing
  8850 ;; This function is called by:
  8851 ;;		_LIN_setTimerHandler
  8852 ;;		_TMR0_Initialize
  8853 ;; This function uses a non-reentrant model
  8854 ;;
  8855                           
  8856     08E0                     _TMR0_SetInterruptHandler:	
  8857                           ;psect for function _TMR0_SetInterruptHandler
  8858                           
  8859                           
  8860                           ;mcc_generated_files/tmr0.c: 156:     TMR0_InterruptHandler = InterruptHandler;
  8861                           
  8862                           ;incstack = 0
  8863                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  8864     08E0  084F               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  8865     08E1  0142               	movlb	2	; select bank2
  8866     08E2  00E2               	movwf	(_TMR0_InterruptHandler+1)^(0+256)
  8867     08E3  0140               	movlb	0	; select bank0
  8868     08E4  084E               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  8869     08E5  0142               	movlb	2	; select bank2
  8870     08E6  00E1               	movwf	_TMR0_InterruptHandler^(0+256)
  8871     08E7  0008               	return
  8872     08E8                     __end_of_TMR0_SetInterruptHandler:
  8873                           
  8874                           	psect	text11
  8875     07FC                     __ptext11:	
  8876 ;; *************** function _FVR_Initialize *****************
  8877 ;; Defined at:
  8878 ;;		line 58 in file "mcc_generated_files/fvr.c"
  8879 ;; Parameters:    Size  Location     Type
  8880 ;;		None
  8881 ;; Auto vars:     Size  Location     Type
  8882 ;;		None
  8883 ;; Return value:  Size  Location     Type
  8884 ;;                  1    wreg      void 
  8885 ;; Registers used:
  8886 ;;		wreg
  8887 ;; Tracked objects:
  8888 ;;		On entry : B3F/13
  8889 ;;		On exit  : B3F/12
  8890 ;;		Unchanged: B00/0
  8891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8895 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8896 ;;Total ram usage:        0 bytes
  8897 ;; Hardware stack levels used: 1
  8898 ;; Hardware stack levels required when called: 5
  8899 ;; This function calls:
  8900 ;;		Nothing
  8901 ;; This function is called by:
  8902 ;;		_SYSTEM_Initialize
  8903 ;; This function uses a non-reentrant model
  8904 ;;
  8905                           
  8906     07FC                     _FVR_Initialize:	
  8907                           ;psect for function _FVR_Initialize
  8908                           
  8909                           
  8910                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0x84;
  8911                           
  8912                           ;incstack = 0
  8913                           ; Regs used in _FVR_Initialize: [wreg]
  8914     07FC  3084               	movlw	132
  8915     07FD  0152               	movlb	18	; select bank18
  8916     07FE  008C               	movwf	12	;volatile
  8917     07FF  0008               	return
  8918     0800                     __end_of_FVR_Initialize:
  8919                           
  8920                           	psect	text12
  8921     0CB9                     __ptext12:	
  8922 ;; *************** function _EUSART1_Initialize *****************
  8923 ;; Defined at:
  8924 ;;		line 88 in file "mcc_generated_files/eusart1.c"
  8925 ;; Parameters:    Size  Location     Type
  8926 ;;		None
  8927 ;; Auto vars:     Size  Location     Type
  8928 ;;		None
  8929 ;; Return value:  Size  Location     Type
  8930 ;;                  1    wreg      void 
  8931 ;; Registers used:
  8932 ;;		wreg, status,2, status,0, pclath, cstack
  8933 ;; Tracked objects:
  8934 ;;		On entry : 3F/4
  8935 ;;		On exit  : 3F/E
  8936 ;;		Unchanged: 0/0
  8937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8941 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8942 ;;Total ram usage:        0 bytes
  8943 ;; Hardware stack levels used: 1
  8944 ;; Hardware stack levels required when called: 6
  8945 ;; This function calls:
  8946 ;;		_EUSART1_SetErrorHandler
  8947 ;;		_EUSART1_SetFramingErrorHandler
  8948 ;;		_EUSART1_SetOverrunErrorHandler
  8949 ;;		_EUSART1_SetRxInterruptHandler
  8950 ;;		_EUSART1_SetTxInterruptHandler
  8951 ;; This function is called by:
  8952 ;;		_SYSTEM_Initialize
  8953 ;; This function uses a non-reentrant model
  8954 ;;
  8955                           
  8956     0CB9                     _EUSART1_Initialize:	
  8957                           ;psect for function _EUSART1_Initialize
  8958                           
  8959                           
  8960                           ;mcc_generated_files/eusart1.c: 91:     PIE3bits.RC1IE = 0;
  8961                           
  8962                           ;incstack = 0
  8963                           ; Regs used in _EUSART1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8964     0CB9  014E               	movlb	14	; select bank14
  8965     0CBA  1299               	bcf	25,5	;volatile
  8966                           
  8967                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
  8968     0CBB  3086               	movlw	low _EUSART1_Receive_ISR
  8969     0CBC  0140               	movlb	0	; select bank0
  8970     0CBD  00CE               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
  8971     0CBE  300C               	movlw	high _EUSART1_Receive_ISR
  8972     0CBF  00CF               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
  8973     0CC0  3188  20D0  318C   	fcall	_EUSART1_SetRxInterruptHandler
  8974                           
  8975                           ;mcc_generated_files/eusart1.c: 93:     PIE3bits.TX1IE = 0;
  8976     0CC3  014E               	movlb	14	; select bank14
  8977     0CC4  1219               	bcf	25,4	;volatile
  8978                           
  8979                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
  8980     0CC5  30AC               	movlw	low _EUSART1_Transmit_ISR
  8981     0CC6  0140               	movlb	0	; select bank0
  8982     0CC7  00CE               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler
  8983     0CC8  300A               	movlw	high _EUSART1_Transmit_ISR
  8984     0CC9  00CF               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler+1
  8985     0CCA  3188  20D8  318C   	fcall	_EUSART1_SetTxInterruptHandler
  8986                           
  8987                           ;mcc_generated_files/eusart1.c: 98:     BAUD1CON = 0x08;
  8988     0CCD  3008               	movlw	8
  8989     0CCE  009F               	movwf	31	;volatile
  8990                           
  8991                           ;mcc_generated_files/eusart1.c: 101:     RC1STA = 0x90;
  8992     0CCF  3090               	movlw	144
  8993     0CD0  009D               	movwf	29	;volatile
  8994                           
  8995                           ;mcc_generated_files/eusart1.c: 104:     TX1STA = 0x24;
  8996     0CD1  3024               	movlw	36
  8997     0CD2  009E               	movwf	30	;volatile
  8998                           
  8999                           ;mcc_generated_files/eusart1.c: 107:     SP1BRGL = 0xA0;
  9000     0CD3  30A0               	movlw	160
  9001     0CD4  009B               	movwf	27	;volatile
  9002                           
  9003                           ;mcc_generated_files/eusart1.c: 110:     SP1BRGH = 0x01;
  9004     0CD5  3001               	movlw	1
  9005     0CD6  009C               	movwf	28	;volatile
  9006                           
  9007                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
  9008     0CD7  3054               	movlw	low _EUSART1_DefaultFramingErrorHandler
  9009     0CD8  0140               	movlb	0	; select bank0
  9010     0CD9  00CE               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler
  9011     0CDA  3008               	movlw	high _EUSART1_DefaultFramingErrorHandler
  9012     0CDB  00CF               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1
  9013     0CDC  3188  20C0  318C   	fcall	_EUSART1_SetFramingErrorHandler
  9014                           
  9015                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
  9016     0CDF  305F               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  9017     0CE0  0140               	movlb	0	; select bank0
  9018     0CE1  00CE               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler
  9019     0CE2  3008               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  9020     0CE3  00CF               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1
  9021     0CE4  3188  20C8  318C   	fcall	_EUSART1_SetOverrunErrorHandler
  9022                           
  9023                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
  9024     0CE7  305C               	movlw	low _EUSART1_DefaultErrorHandler
  9025     0CE8  0140               	movlb	0	; select bank0
  9026     0CE9  00CE               	movwf	EUSART1_SetErrorHandler@interruptHandler
  9027     0CEA  3008               	movlw	high _EUSART1_DefaultErrorHandler
  9028     0CEB  00CF               	movwf	EUSART1_SetErrorHandler@interruptHandler+1
  9029     0CEC  3188  20B8         	fcall	_EUSART1_SetErrorHandler
  9030                           
  9031                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
  9032     0CEE  0140               	movlb	0	; select bank0
  9033     0CEF  01A2               	clrf	_eusart1RxLastError	;volatile
  9034                           
  9035                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
  9036     0CF0  01A6               	clrf	_eusart1TxHead	;volatile
  9037                           
  9038                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
  9039     0CF1  01A5               	clrf	_eusart1TxTail	;volatile
  9040                           
  9041                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
  9042     0CF2  3008               	movlw	8
  9043     0CF3  00A4               	movwf	_eusart1TxBufferRemaining	;volatile
  9044                           
  9045                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
  9046     0CF4  01F3               	clrf	_eusart1RxHead	;volatile
  9047                           
  9048                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
  9049     0CF5  01F2               	clrf	_eusart1RxTail	;volatile
  9050                           
  9051                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
  9052     0CF6  01A3               	clrf	_eusart1RxCount	;volatile
  9053                           
  9054                           ;mcc_generated_files/eusart1.c: 129:     PIE3bits.RC1IE = 1;
  9055     0CF7  014E               	movlb	14	; select bank14
  9056     0CF8  1699               	bsf	25,5	;volatile
  9057     0CF9  0008               	return
  9058     0CFA                     __end_of_EUSART1_Initialize:
  9059                           
  9060                           	psect	text13
  9061     08D8                     __ptext13:	
  9062 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  9063 ;; Defined at:
  9064 ;;		line 276 in file "mcc_generated_files/eusart1.c"
  9065 ;; Parameters:    Size  Location     Type
  9066 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9067 ;;		 -> EUSART1_Transmit_ISR(1), 
  9068 ;; Auto vars:     Size  Location     Type
  9069 ;;		None
  9070 ;; Return value:  Size  Location     Type
  9071 ;;                  1    wreg      void 
  9072 ;; Registers used:
  9073 ;;		wreg
  9074 ;; Tracked objects:
  9075 ;;		On entry : 3F/0
  9076 ;;		On exit  : 3F/2
  9077 ;;		Unchanged: 0/0
  9078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9079 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9082 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9083 ;;Total ram usage:        2 bytes
  9084 ;; Hardware stack levels used: 1
  9085 ;; Hardware stack levels required when called: 5
  9086 ;; This function calls:
  9087 ;;		Nothing
  9088 ;; This function is called by:
  9089 ;;		_EUSART1_Initialize
  9090 ;; This function uses a non-reentrant model
  9091 ;;
  9092                           
  9093     08D8                     _EUSART1_SetTxInterruptHandler:	
  9094                           ;psect for function _EUSART1_SetTxInterruptHandler
  9095                           
  9096                           
  9097                           ;mcc_generated_files/eusart1.c: 277:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  9098                           
  9099                           ;incstack = 0
  9100                           ; Regs used in _EUSART1_SetTxInterruptHandler: [wreg]
  9101     08D8  084F               	movf	EUSART1_SetTxInterruptHandler@interruptHandler+1,w
  9102     08D9  0142               	movlb	2	; select bank2
  9103     08DA  00EC               	movwf	(_EUSART1_TxDefaultInterruptHandler+1)^(0+256)
  9104     08DB  0140               	movlb	0	; select bank0
  9105     08DC  084E               	movf	EUSART1_SetTxInterruptHandler@interruptHandler,w
  9106     08DD  0142               	movlb	2	; select bank2
  9107     08DE  00EB               	movwf	_EUSART1_TxDefaultInterruptHandler^(0+256)
  9108     08DF  0008               	return
  9109     08E0                     __end_of_EUSART1_SetTxInterruptHandler:
  9110                           
  9111                           	psect	text14
  9112     08D0                     __ptext14:	
  9113 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  9114 ;; Defined at:
  9115 ;;		line 280 in file "mcc_generated_files/eusart1.c"
  9116 ;; Parameters:    Size  Location     Type
  9117 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9118 ;;		 -> EUSART1_Receive_ISR(1), 
  9119 ;; Auto vars:     Size  Location     Type
  9120 ;;		None
  9121 ;; Return value:  Size  Location     Type
  9122 ;;                  1    wreg      void 
  9123 ;; Registers used:
  9124 ;;		wreg
  9125 ;; Tracked objects:
  9126 ;;		On entry : 3F/0
  9127 ;;		On exit  : 3F/2
  9128 ;;		Unchanged: 0/0
  9129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9130 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9133 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9134 ;;Total ram usage:        2 bytes
  9135 ;; Hardware stack levels used: 1
  9136 ;; Hardware stack levels required when called: 5
  9137 ;; This function calls:
  9138 ;;		Nothing
  9139 ;; This function is called by:
  9140 ;;		_EUSART1_Initialize
  9141 ;; This function uses a non-reentrant model
  9142 ;;
  9143                           
  9144     08D0                     _EUSART1_SetRxInterruptHandler:	
  9145                           ;psect for function _EUSART1_SetRxInterruptHandler
  9146                           
  9147                           
  9148                           ;mcc_generated_files/eusart1.c: 281:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  9149                           
  9150                           ;incstack = 0
  9151                           ; Regs used in _EUSART1_SetRxInterruptHandler: [wreg]
  9152     08D0  084F               	movf	EUSART1_SetRxInterruptHandler@interruptHandler+1,w
  9153     08D1  0142               	movlb	2	; select bank2
  9154     08D2  00EA               	movwf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+256)
  9155     08D3  0140               	movlb	0	; select bank0
  9156     08D4  084E               	movf	EUSART1_SetRxInterruptHandler@interruptHandler,w
  9157     08D5  0142               	movlb	2	; select bank2
  9158     08D6  00E9               	movwf	_EUSART1_RxDefaultInterruptHandler^(0+256)
  9159     08D7  0008               	return
  9160     08D8                     __end_of_EUSART1_SetRxInterruptHandler:
  9161                           
  9162                           	psect	text15
  9163     08C8                     __ptext15:	
  9164 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  9165 ;; Defined at:
  9166 ;;		line 268 in file "mcc_generated_files/eusart1.c"
  9167 ;; Parameters:    Size  Location     Type
  9168 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9169 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  9170 ;; Auto vars:     Size  Location     Type
  9171 ;;		None
  9172 ;; Return value:  Size  Location     Type
  9173 ;;                  1    wreg      void 
  9174 ;; Registers used:
  9175 ;;		wreg
  9176 ;; Tracked objects:
  9177 ;;		On entry : 3F/0
  9178 ;;		On exit  : 3F/2
  9179 ;;		Unchanged: 0/0
  9180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9181 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9184 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9185 ;;Total ram usage:        2 bytes
  9186 ;; Hardware stack levels used: 1
  9187 ;; Hardware stack levels required when called: 5
  9188 ;; This function calls:
  9189 ;;		Nothing
  9190 ;; This function is called by:
  9191 ;;		_EUSART1_Initialize
  9192 ;; This function uses a non-reentrant model
  9193 ;;
  9194                           
  9195     08C8                     _EUSART1_SetOverrunErrorHandler:	
  9196                           ;psect for function _EUSART1_SetOverrunErrorHandler
  9197                           
  9198                           
  9199                           ;mcc_generated_files/eusart1.c: 269:     EUSART1_OverrunErrorHandler = interruptHandler;
  9200                           
  9201                           ;incstack = 0
  9202                           ; Regs used in _EUSART1_SetOverrunErrorHandler: [wreg]
  9203     08C8  084F               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,w
  9204     08C9  0142               	movlb	2	; select bank2
  9205     08CA  00E6               	movwf	(_EUSART1_OverrunErrorHandler+1)^(0+256)
  9206     08CB  0140               	movlb	0	; select bank0
  9207     08CC  084E               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler,w
  9208     08CD  0142               	movlb	2	; select bank2
  9209     08CE  00E5               	movwf	_EUSART1_OverrunErrorHandler^(0+256)
  9210     08CF  0008               	return
  9211     08D0                     __end_of_EUSART1_SetOverrunErrorHandler:
  9212                           
  9213                           	psect	text16
  9214     08C0                     __ptext16:	
  9215 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  9216 ;; Defined at:
  9217 ;;		line 264 in file "mcc_generated_files/eusart1.c"
  9218 ;; Parameters:    Size  Location     Type
  9219 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9220 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  9221 ;; Auto vars:     Size  Location     Type
  9222 ;;		None
  9223 ;; Return value:  Size  Location     Type
  9224 ;;                  1    wreg      void 
  9225 ;; Registers used:
  9226 ;;		wreg
  9227 ;; Tracked objects:
  9228 ;;		On entry : 3F/0
  9229 ;;		On exit  : 3F/2
  9230 ;;		Unchanged: 0/0
  9231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9232 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9235 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9236 ;;Total ram usage:        2 bytes
  9237 ;; Hardware stack levels used: 1
  9238 ;; Hardware stack levels required when called: 5
  9239 ;; This function calls:
  9240 ;;		Nothing
  9241 ;; This function is called by:
  9242 ;;		_EUSART1_Initialize
  9243 ;; This function uses a non-reentrant model
  9244 ;;
  9245                           
  9246     08C0                     _EUSART1_SetFramingErrorHandler:	
  9247                           ;psect for function _EUSART1_SetFramingErrorHandler
  9248                           
  9249                           
  9250                           ;mcc_generated_files/eusart1.c: 265:     EUSART1_FramingErrorHandler = interruptHandler;
  9251                           
  9252                           ;incstack = 0
  9253                           ; Regs used in _EUSART1_SetFramingErrorHandler: [wreg]
  9254     08C0  084F               	movf	EUSART1_SetFramingErrorHandler@interruptHandler+1,w
  9255     08C1  0142               	movlb	2	; select bank2
  9256     08C2  00E8               	movwf	(_EUSART1_FramingErrorHandler+1)^(0+256)
  9257     08C3  0140               	movlb	0	; select bank0
  9258     08C4  084E               	movf	EUSART1_SetFramingErrorHandler@interruptHandler,w
  9259     08C5  0142               	movlb	2	; select bank2
  9260     08C6  00E7               	movwf	_EUSART1_FramingErrorHandler^(0+256)
  9261     08C7  0008               	return
  9262     08C8                     __end_of_EUSART1_SetFramingErrorHandler:
  9263                           
  9264                           	psect	text17
  9265     08B8                     __ptext17:	
  9266 ;; *************** function _EUSART1_SetErrorHandler *****************
  9267 ;; Defined at:
  9268 ;;		line 272 in file "mcc_generated_files/eusart1.c"
  9269 ;; Parameters:    Size  Location     Type
  9270 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9271 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  9272 ;; Auto vars:     Size  Location     Type
  9273 ;;		None
  9274 ;; Return value:  Size  Location     Type
  9275 ;;                  1    wreg      void 
  9276 ;; Registers used:
  9277 ;;		wreg
  9278 ;; Tracked objects:
  9279 ;;		On entry : 3F/0
  9280 ;;		On exit  : 3F/2
  9281 ;;		Unchanged: 0/0
  9282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9283 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9286 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9287 ;;Total ram usage:        2 bytes
  9288 ;; Hardware stack levels used: 1
  9289 ;; Hardware stack levels required when called: 5
  9290 ;; This function calls:
  9291 ;;		Nothing
  9292 ;; This function is called by:
  9293 ;;		_EUSART1_Initialize
  9294 ;; This function uses a non-reentrant model
  9295 ;;
  9296                           
  9297     08B8                     _EUSART1_SetErrorHandler:	
  9298                           ;psect for function _EUSART1_SetErrorHandler
  9299                           
  9300                           
  9301                           ;mcc_generated_files/eusart1.c: 273:     EUSART1_ErrorHandler = interruptHandler;
  9302                           
  9303                           ;incstack = 0
  9304                           ; Regs used in _EUSART1_SetErrorHandler: [wreg]
  9305     08B8  084F               	movf	EUSART1_SetErrorHandler@interruptHandler+1,w
  9306     08B9  0142               	movlb	2	; select bank2
  9307     08BA  00E4               	movwf	(_EUSART1_ErrorHandler+1)^(0+256)
  9308     08BB  0140               	movlb	0	; select bank0
  9309     08BC  084E               	movf	EUSART1_SetErrorHandler@interruptHandler,w
  9310     08BD  0142               	movlb	2	; select bank2
  9311     08BE  00E3               	movwf	_EUSART1_ErrorHandler^(0+256)
  9312     08BF  0008               	return
  9313     08C0                     __end_of_EUSART1_SetErrorHandler:
  9314                           
  9315                           	psect	text18
  9316     088E                     __ptext18:	
  9317 ;; *************** function _DAC1_Initialize *****************
  9318 ;; Defined at:
  9319 ;;		line 58 in file "mcc_generated_files/dac1.c"
  9320 ;; Parameters:    Size  Location     Type
  9321 ;;		None
  9322 ;; Auto vars:     Size  Location     Type
  9323 ;;		None
  9324 ;; Return value:  Size  Location     Type
  9325 ;;                  1    wreg      void 
  9326 ;; Registers used:
  9327 ;;		wreg
  9328 ;; Tracked objects:
  9329 ;;		On entry : 3F/3C
  9330 ;;		On exit  : 3F/12
  9331 ;;		Unchanged: 0/0
  9332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9336 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9337 ;;Total ram usage:        0 bytes
  9338 ;; Hardware stack levels used: 1
  9339 ;; Hardware stack levels required when called: 5
  9340 ;; This function calls:
  9341 ;;		Nothing
  9342 ;; This function is called by:
  9343 ;;		_SYSTEM_Initialize
  9344 ;; This function uses a non-reentrant model
  9345 ;;
  9346                           
  9347     088E                     _DAC1_Initialize:	
  9348                           ;psect for function _DAC1_Initialize
  9349                           
  9350                           
  9351                           ;mcc_generated_files/dac1.c: 61:     DAC1CON0 = 0x88;
  9352                           
  9353                           ;incstack = 0
  9354                           ; Regs used in _DAC1_Initialize: [wreg]
  9355     088E  3088               	movlw	136
  9356     088F  0152               	movlb	18	; select bank18
  9357     0890  008E               	movwf	14	;volatile
  9358                           
  9359                           ;mcc_generated_files/dac1.c: 63:     DAC1CON1 = 0x02;
  9360     0891  3002               	movlw	2
  9361     0892  008F               	movwf	15	;volatile
  9362     0893  0008               	return
  9363     0894                     __end_of_DAC1_Initialize:
  9364                           
  9365                           	psect	text19
  9366     0900                     __ptext19:	
  9367 ;; *************** function _CMP2_Initialize *****************
  9368 ;; Defined at:
  9369 ;;		line 58 in file "mcc_generated_files/cmp2.c"
  9370 ;; Parameters:    Size  Location     Type
  9371 ;;		None
  9372 ;; Auto vars:     Size  Location     Type
  9373 ;;		None
  9374 ;; Return value:  Size  Location     Type
  9375 ;;                  1    wreg      void 
  9376 ;; Registers used:
  9377 ;;		wreg
  9378 ;; Tracked objects:
  9379 ;;		On entry : B3F/11
  9380 ;;		On exit  : B3F/13
  9381 ;;		Unchanged: B00/0
  9382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9386 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9387 ;;Total ram usage:        0 bytes
  9388 ;; Hardware stack levels used: 1
  9389 ;; Hardware stack levels required when called: 5
  9390 ;; This function calls:
  9391 ;;		Nothing
  9392 ;; This function is called by:
  9393 ;;		_SYSTEM_Initialize
  9394 ;; This function uses a non-reentrant model
  9395 ;;
  9396                           
  9397     0900                     _CMP2_Initialize:	
  9398                           ;psect for function _CMP2_Initialize
  9399                           
  9400                           
  9401                           ;mcc_generated_files/cmp2.c: 62:     CM2CON0 = 0x90;
  9402                           
  9403                           ;incstack = 0
  9404                           ; Regs used in _CMP2_Initialize: [wreg]
  9405     0900  3090               	movlw	144
  9406     0901  0153               	movlb	19	; select bank19
  9407     0902  0094               	movwf	20	;volatile
  9408                           
  9409                           ;mcc_generated_files/cmp2.c: 65:     CM2CON1 = 0x02;
  9410     0903  3002               	movlw	2
  9411     0904  0095               	movwf	21	;volatile
  9412                           
  9413                           ;mcc_generated_files/cmp2.c: 68:     CM2NCH = 0x03;
  9414     0905  3003               	movlw	3
  9415     0906  0096               	movwf	22	;volatile
  9416                           
  9417                           ;mcc_generated_files/cmp2.c: 71:     CM2PCH = 0x05;
  9418     0907  3005               	movlw	5
  9419     0908  0097               	movwf	23	;volatile
  9420     0909  0008               	return
  9421     090A                     __end_of_CMP2_Initialize:
  9422                           
  9423                           	psect	text20
  9424     098B                     __ptext20:	
  9425 ;; *************** function _CLC4_Initialize *****************
  9426 ;; Defined at:
  9427 ;;		line 58 in file "mcc_generated_files/clc4.c"
  9428 ;; Parameters:    Size  Location     Type
  9429 ;;		None
  9430 ;; Auto vars:     Size  Location     Type
  9431 ;;		None
  9432 ;; Return value:  Size  Location     Type
  9433 ;;                  1    wreg      void 
  9434 ;; Registers used:
  9435 ;;		wreg, status,2
  9436 ;; Tracked objects:
  9437 ;;		On entry : 3F/3C
  9438 ;;		On exit  : 3F/3C
  9439 ;;		Unchanged: 0/0
  9440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9444 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9445 ;;Total ram usage:        0 bytes
  9446 ;; Hardware stack levels used: 1
  9447 ;; Hardware stack levels required when called: 5
  9448 ;; This function calls:
  9449 ;;		Nothing
  9450 ;; This function is called by:
  9451 ;;		_SYSTEM_Initialize
  9452 ;; This function uses a non-reentrant model
  9453 ;;
  9454                           
  9455     098B                     _CLC4_Initialize:	
  9456                           ;psect for function _CLC4_Initialize
  9457                           
  9458                           
  9459                           ;mcc_generated_files/clc4.c: 63:     CLC4POL = 0x00;
  9460                           
  9461                           ;incstack = 0
  9462                           ; Regs used in _CLC4_Initialize: [wreg+status,2]
  9463     098B  01AF               	clrf	47	;volatile
  9464                           
  9465                           ;mcc_generated_files/clc4.c: 65:     CLC4SEL0 = 0x0E;
  9466     098C  300E               	movlw	14
  9467     098D  00B0               	movwf	48	;volatile
  9468                           
  9469                           ;mcc_generated_files/clc4.c: 67:     CLC4SEL1 = 0x00;
  9470     098E  01B1               	clrf	49	;volatile
  9471                           
  9472                           ;mcc_generated_files/clc4.c: 69:     CLC4SEL2 = 0x00;
  9473     098F  01B2               	clrf	50	;volatile
  9474                           
  9475                           ;mcc_generated_files/clc4.c: 71:     CLC4SEL3 = 0x00;
  9476     0990  01B3               	clrf	51	;volatile
  9477                           
  9478                           ;mcc_generated_files/clc4.c: 73:     CLC4GLS0 = 0x02;
  9479     0991  3002               	movlw	2
  9480     0992  00B4               	movwf	52	;volatile
  9481                           
  9482                           ;mcc_generated_files/clc4.c: 75:     CLC4GLS1 = 0x02;
  9483     0993  3002               	movlw	2
  9484     0994  00B5               	movwf	53	;volatile
  9485                           
  9486                           ;mcc_generated_files/clc4.c: 77:     CLC4GLS2 = 0x00;
  9487     0995  01B6               	clrf	54	;volatile
  9488                           
  9489                           ;mcc_generated_files/clc4.c: 79:     CLC4GLS3 = 0x00;
  9490     0996  01B7               	clrf	55	;volatile
  9491                           
  9492                           ;mcc_generated_files/clc4.c: 81:     CLC4CON = 0x80;
  9493     0997  3080               	movlw	128
  9494     0998  00AE               	movwf	46	;volatile
  9495     0999  0008               	return
  9496     099A                     __end_of_CLC4_Initialize:
  9497                           
  9498                           	psect	text21
  9499     099A                     __ptext21:	
  9500 ;; *************** function _CLC3_Initialize *****************
  9501 ;; Defined at:
  9502 ;;		line 58 in file "mcc_generated_files/clc3.c"
  9503 ;; Parameters:    Size  Location     Type
  9504 ;;		None
  9505 ;; Auto vars:     Size  Location     Type
  9506 ;;		None
  9507 ;; Return value:  Size  Location     Type
  9508 ;;                  1    wreg      void 
  9509 ;; Registers used:
  9510 ;;		wreg, status,2
  9511 ;; Tracked objects:
  9512 ;;		On entry : 3F/1
  9513 ;;		On exit  : 3F/3C
  9514 ;;		Unchanged: 0/0
  9515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9519 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9520 ;;Total ram usage:        0 bytes
  9521 ;; Hardware stack levels used: 1
  9522 ;; Hardware stack levels required when called: 5
  9523 ;; This function calls:
  9524 ;;		Nothing
  9525 ;; This function is called by:
  9526 ;;		_SYSTEM_Initialize
  9527 ;; This function uses a non-reentrant model
  9528 ;;
  9529                           
  9530     099A                     _CLC3_Initialize:	
  9531                           ;psect for function _CLC3_Initialize
  9532                           
  9533                           
  9534                           ;mcc_generated_files/clc3.c: 63:     CLC3POL = 0x00;
  9535                           
  9536                           ;incstack = 0
  9537                           ; Regs used in _CLC3_Initialize: [wreg+status,2]
  9538     099A  017C               	movlb	60	; select bank60
  9539     099B  01A5               	clrf	37	;volatile
  9540                           
  9541                           ;mcc_generated_files/clc3.c: 65:     CLC3SEL0 = 0x1A;
  9542     099C  301A               	movlw	26
  9543     099D  00A6               	movwf	38	;volatile
  9544                           
  9545                           ;mcc_generated_files/clc3.c: 67:     CLC3SEL1 = 0x05;
  9546     099E  3005               	movlw	5
  9547     099F  00A7               	movwf	39	;volatile
  9548                           
  9549                           ;mcc_generated_files/clc3.c: 69:     CLC3SEL2 = 0x00;
  9550     09A0  01A8               	clrf	40	;volatile
  9551                           
  9552                           ;mcc_generated_files/clc3.c: 71:     CLC3SEL3 = 0x00;
  9553     09A1  01A9               	clrf	41	;volatile
  9554                           
  9555                           ;mcc_generated_files/clc3.c: 73:     CLC3GLS0 = 0x01;
  9556     09A2  3001               	movlw	1
  9557     09A3  00AA               	movwf	42	;volatile
  9558                           
  9559                           ;mcc_generated_files/clc3.c: 75:     CLC3GLS1 = 0x08;
  9560     09A4  3008               	movlw	8
  9561     09A5  00AB               	movwf	43	;volatile
  9562                           
  9563                           ;mcc_generated_files/clc3.c: 77:     CLC3GLS2 = 0x00;
  9564     09A6  01AC               	clrf	44	;volatile
  9565                           
  9566                           ;mcc_generated_files/clc3.c: 79:     CLC3GLS3 = 0x00;
  9567     09A7  01AD               	clrf	45	;volatile
  9568                           
  9569                           ;mcc_generated_files/clc3.c: 81:     CLC3CON = 0x80;
  9570     09A8  3080               	movlw	128
  9571     09A9  00A4               	movwf	36	;volatile
  9572     09AA  0008               	return
  9573     09AB                     __end_of_CLC3_Initialize:
  9574                           
  9575                           	psect	text22
  9576     09BF                     __ptext22:	
  9577 ;; *************** function _CLC2_Initialize *****************
  9578 ;; Defined at:
  9579 ;;		line 58 in file "mcc_generated_files/clc2.c"
  9580 ;; Parameters:    Size  Location     Type
  9581 ;;		None
  9582 ;; Auto vars:     Size  Location     Type
  9583 ;;		None
  9584 ;; Return value:  Size  Location     Type
  9585 ;;                  1    wreg      void 
  9586 ;; Registers used:
  9587 ;;		wreg, status,2
  9588 ;; Tracked objects:
  9589 ;;		On entry : B3F/12
  9590 ;;		On exit  : B3F/E
  9591 ;;		Unchanged: B00/0
  9592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9596 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9597 ;;Total ram usage:        0 bytes
  9598 ;; Hardware stack levels used: 1
  9599 ;; Hardware stack levels required when called: 5
  9600 ;; This function calls:
  9601 ;;		Nothing
  9602 ;; This function is called by:
  9603 ;;		_SYSTEM_Initialize
  9604 ;; This function uses a non-reentrant model
  9605 ;;
  9606                           
  9607     09BF                     _CLC2_Initialize:	
  9608                           ;psect for function _CLC2_Initialize
  9609                           
  9610                           
  9611                           ;mcc_generated_files/clc2.c: 63:     CLC2POL = 0x00;
  9612                           
  9613                           ;incstack = 0
  9614                           ; Regs used in _CLC2_Initialize: [wreg+status,2]
  9615     09BF  017C               	movlb	60	; select bank60
  9616     09C0  019B               	clrf	27	;volatile
  9617                           
  9618                           ;mcc_generated_files/clc2.c: 65:     CLC2SEL0 = 0x0D;
  9619     09C1  300D               	movlw	13
  9620     09C2  009C               	movwf	28	;volatile
  9621                           
  9622                           ;mcc_generated_files/clc2.c: 67:     CLC2SEL1 = 0x0D;
  9623     09C3  300D               	movlw	13
  9624     09C4  009D               	movwf	29	;volatile
  9625                           
  9626                           ;mcc_generated_files/clc2.c: 69:     CLC2SEL2 = 0x0D;
  9627     09C5  300D               	movlw	13
  9628     09C6  009E               	movwf	30	;volatile
  9629                           
  9630                           ;mcc_generated_files/clc2.c: 71:     CLC2SEL3 = 0x0D;
  9631     09C7  300D               	movlw	13
  9632     09C8  009F               	movwf	31	;volatile
  9633                           
  9634                           ;mcc_generated_files/clc2.c: 73:     CLC2GLS0 = 0x02;
  9635     09C9  3002               	movlw	2
  9636     09CA  00A0               	movwf	32	;volatile
  9637                           
  9638                           ;mcc_generated_files/clc2.c: 75:     CLC2GLS1 = 0x00;
  9639     09CB  01A1               	clrf	33	;volatile
  9640                           
  9641                           ;mcc_generated_files/clc2.c: 77:     CLC2GLS2 = 0x00;
  9642     09CC  01A2               	clrf	34	;volatile
  9643                           
  9644                           ;mcc_generated_files/clc2.c: 79:     CLC2GLS3 = 0x00;
  9645     09CD  01A3               	clrf	35	;volatile
  9646                           
  9647                           ;mcc_generated_files/clc2.c: 81:     CLC2CON = 0x83;
  9648     09CE  3083               	movlw	131
  9649     09CF  009A               	movwf	26	;volatile
  9650                           
  9651                           ;mcc_generated_files/clc2.c: 84:     PIR5bits.CLC2IF = 0;
  9652     09D0  014E               	movlb	14	; select bank14
  9653     09D1  1291               	bcf	17,5	;volatile
  9654                           
  9655                           ;mcc_generated_files/clc2.c: 86:     PIE5bits.CLC2IE = 1;
  9656     09D2  169B               	bsf	27,5	;volatile
  9657     09D3  0008               	return
  9658     09D4                     __end_of_CLC2_Initialize:
  9659                           
  9660                           	psect	text23
  9661     09AB                     __ptext23:	
  9662 ;; *************** function _CLC1_Initialize *****************
  9663 ;; Defined at:
  9664 ;;		line 58 in file "mcc_generated_files/clc1.c"
  9665 ;; Parameters:    Size  Location     Type
  9666 ;;		None
  9667 ;; Auto vars:     Size  Location     Type
  9668 ;;		None
  9669 ;; Return value:  Size  Location     Type
  9670 ;;                  1    wreg      void 
  9671 ;; Registers used:
  9672 ;;		wreg, status,2
  9673 ;; Tracked objects:
  9674 ;;		On entry : 3F/B
  9675 ;;		On exit  : 3F/3C
  9676 ;;		Unchanged: 0/0
  9677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9681 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9682 ;;Total ram usage:        0 bytes
  9683 ;; Hardware stack levels used: 1
  9684 ;; Hardware stack levels required when called: 5
  9685 ;; This function calls:
  9686 ;;		Nothing
  9687 ;; This function is called by:
  9688 ;;		_SYSTEM_Initialize
  9689 ;; This function uses a non-reentrant model
  9690 ;;
  9691                           
  9692     09AB                     _CLC1_Initialize:	
  9693                           ;psect for function _CLC1_Initialize
  9694                           
  9695                           
  9696                           ;mcc_generated_files/clc1.c: 63:     CLC1POL = 0x88;
  9697                           
  9698                           ;incstack = 0
  9699                           ; Regs used in _CLC1_Initialize: [wreg+status,2]
  9700     09AB  3088               	movlw	136
  9701     09AC  017C               	movlb	60	; select bank60
  9702     09AD  0091               	movwf	17	;volatile
  9703                           
  9704                           ;mcc_generated_files/clc1.c: 65:     CLC1SEL0 = 0x17;
  9705     09AE  3017               	movlw	23
  9706     09AF  0092               	movwf	18	;volatile
  9707                           
  9708                           ;mcc_generated_files/clc1.c: 67:     CLC1SEL1 = 0x17;
  9709     09B0  3017               	movlw	23
  9710     09B1  0093               	movwf	19	;volatile
  9711                           
  9712                           ;mcc_generated_files/clc1.c: 69:     CLC1SEL2 = 0x0E;
  9713     09B2  300E               	movlw	14
  9714     09B3  0094               	movwf	20	;volatile
  9715                           
  9716                           ;mcc_generated_files/clc1.c: 71:     CLC1SEL3 = 0x1B;
  9717     09B4  301B               	movlw	27
  9718     09B5  0095               	movwf	21	;volatile
  9719                           
  9720                           ;mcc_generated_files/clc1.c: 73:     CLC1GLS0 = 0x02;
  9721     09B6  3002               	movlw	2
  9722     09B7  0096               	movwf	22	;volatile
  9723                           
  9724                           ;mcc_generated_files/clc1.c: 75:     CLC1GLS1 = 0x00;
  9725     09B8  0197               	clrf	23	;volatile
  9726                           
  9727                           ;mcc_generated_files/clc1.c: 77:     CLC1GLS2 = 0x00;
  9728     09B9  0198               	clrf	24	;volatile
  9729                           
  9730                           ;mcc_generated_files/clc1.c: 79:     CLC1GLS3 = 0x90;
  9731     09BA  3090               	movlw	144
  9732     09BB  0099               	movwf	25	;volatile
  9733                           
  9734                           ;mcc_generated_files/clc1.c: 81:     CLC1CON = 0x03;
  9735     09BC  3003               	movlw	3
  9736     09BD  0090               	movwf	16	;volatile
  9737     09BE  0008               	return
  9738     09BF                     __end_of_CLC1_Initialize:
  9739                           
  9740                           	psect	text24
  9741     08B0                     __ptext24:	
  9742 ;; *************** function _ADC_Initialize *****************
  9743 ;; Defined at:
  9744 ;;		line 67 in file "mcc_generated_files/adc.c"
  9745 ;; Parameters:    Size  Location     Type
  9746 ;;		None
  9747 ;; Auto vars:     Size  Location     Type
  9748 ;;		None
  9749 ;; Return value:  Size  Location     Type
  9750 ;;                  1    wreg      void 
  9751 ;; Registers used:
  9752 ;;		wreg, status,2
  9753 ;; Tracked objects:
  9754 ;;		On entry : 3F/3C
  9755 ;;		On exit  : 3F/1
  9756 ;;		Unchanged: 0/0
  9757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9762 ;;Total ram usage:        0 bytes
  9763 ;; Hardware stack levels used: 1
  9764 ;; Hardware stack levels required when called: 5
  9765 ;; This function calls:
  9766 ;;		Nothing
  9767 ;; This function is called by:
  9768 ;;		_SYSTEM_Initialize
  9769 ;; This function uses a non-reentrant model
  9770 ;;
  9771                           
  9772     08B0                     _ADC_Initialize:	
  9773                           ;psect for function _ADC_Initialize
  9774                           
  9775                           
  9776                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0xF0;
  9777                           
  9778                           ;incstack = 0
  9779                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  9780     08B0  30F0               	movlw	240
  9781     08B1  0141               	movlb	1	; select bank1
  9782     08B2  009E               	movwf	30	;volatile
  9783                           
  9784                           ;mcc_generated_files/adc.c: 75:     ADRESL = 0x00;
  9785     08B3  019B               	clrf	27	;volatile
  9786                           
  9787                           ;mcc_generated_files/adc.c: 78:     ADRESH = 0x00;
  9788     08B4  019C               	clrf	28	;volatile
  9789                           
  9790                           ;mcc_generated_files/adc.c: 81:     ADCON0 = 0x01;
  9791     08B5  3001               	movlw	1
  9792     08B6  009D               	movwf	29	;volatile
  9793     08B7  0008               	return
  9794     08B8                     __end_of_ADC_Initialize:
  9795                           
  9796                           	psect	text25
  9797     04AB                     __ptext25:	
  9798 ;; *************** function _LIN_handler *****************
  9799 ;; Defined at:
  9800 ;;		line 91 in file "mcc_generated_files/LINDrivers/lin_slave.c"
  9801 ;; Parameters:    Size  Location     Type
  9802 ;;		None
  9803 ;; Auto vars:     Size  Location     Type
  9804 ;;		None
  9805 ;; Return value:  Size  Location     Type
  9806 ;;                  1    wreg      enum E204
  9807 ;; Registers used:
  9808 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9809 ;; Tracked objects:
  9810 ;;		On entry : 3C/0
  9811 ;;		On exit  : 0/0
  9812 ;;		Unchanged: 0/0
  9813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9816 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9817 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9818 ;;Total ram usage:        3 bytes
  9819 ;; Hardware stack levels used: 1
  9820 ;; Hardware stack levels required when called: 9
  9821 ;; This function calls:
  9822 ;;		NULL
  9823 ;;		_EUSART1_Read
  9824 ;;		_EUSART1_is_rx_ready
  9825 ;;		_LIN_breakCheck
  9826 ;;		_LIN_checkPID
  9827 ;;		_LIN_disableRx
  9828 ;;		_LIN_enableRx
  9829 ;;		_LIN_getChecksum
  9830 ;;		_LIN_getFromTable
  9831 ;;		_LIN_queuePacket
  9832 ;;		_LIN_startTimer
  9833 ;;		_LIN_stopTimer
  9834 ;;		_memset
  9835 ;;		_processLIN
  9836 ;; This function is called by:
  9837 ;;		_main
  9838 ;; This function uses a non-reentrant model
  9839 ;;
  9840                           
  9841     04AB                     _LIN_handler:	
  9842                           ;psect for function _LIN_handler
  9843                           
  9844                           
  9845                           ;mcc_generated_files/LINDrivers/lin_slave.c: 92:     static lin_rx_state_t LIN_rxState =
      +                           LIN_RX_IDLE;;mcc_generated_files/LINDrivers/lin_slave.c: 93:     static uint8_t rxDataI
      +                          ndex = 0;;mcc_generated_files/LINDrivers/lin_slave.c: 95:     if(LIN_rxInProgress == 1){
  9846                           
  9847                           ;incstack = 0
  9848                           ; Regs used in _LIN_handler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9849     04AB  0140               	movlb	0	; select bank0
  9850     04AC  032B               	decf	_LIN_rxInProgress,w
  9851     04AD  1D03               	btfss	3,2
  9852     04AE  2D86               	goto	l5424
  9853                           
  9854                           ;mcc_generated_files/LINDrivers/lin_slave.c: 96:         if(LIN_timerRunning == 0){
  9855     04AF  082A               	movf	_LIN_timerRunning,w
  9856     04B0  1D03               	btfss	3,2
  9857     04B1  2D86               	goto	l5424
  9858                           
  9859                           ;mcc_generated_files/LINDrivers/lin_slave.c: 98:             LIN_rxState = LIN_RX_ERROR;
  9860     04B2  3008               	movlw	8
  9861     04B3  00A8               	movwf	LIN_handler@LIN_rxState
  9862     04B4  2D86               	goto	l5424
  9863     04B5                     l5338:
  9864                           
  9865                           ;mcc_generated_files/LINDrivers/lin_slave.c: 104:             if(EUSART1_is_rx_ready() >
      +                           0){
  9866     04B5  3188  20A0  3184   	fcall	_EUSART1_is_rx_ready
  9867     04B8  3A00               	xorlw	0
  9868     04B9  1903               	skipnz
  9869     04BA  0008               	return
  9870                           
  9871                           ;mcc_generated_files/LINDrivers/lin_slave.c: 106:                 LIN_startTimer(15);
  9872     04BB  300F               	movlw	15
  9873     04BC  3189  2137         	fcall	_LIN_startTimer
  9874                           
  9875                           ;mcc_generated_files/LINDrivers/lin_slave.c: 107:                 LIN_rxInProgress = 1;
  9876     04BE  01AB               	clrf	_LIN_rxInProgress
  9877     04BF  0AAB               	incf	_LIN_rxInProgress,f
  9878                           
  9879                           ;mcc_generated_files/LINDrivers/lin_slave.c: 108:                 LIN_rxState = LIN_RX_B
      +                          REAK;
  9880     04C0  01A8               	clrf	LIN_handler@LIN_rxState
  9881     04C1  0AA8               	incf	LIN_handler@LIN_rxState,f
  9882     04C2  0008               	return
  9883     04C3                     l5346:
  9884                           
  9885                           ;mcc_generated_files/LINDrivers/lin_slave.c: 112:             if(EUSART1_is_rx_ready() >
      +                           0){
  9886     04C3  3188  20A0  3184   	fcall	_EUSART1_is_rx_ready
  9887     04C6  3A00               	xorlw	0
  9888     04C7  1903               	skipnz
  9889     04C8  0008               	return
  9890                           
  9891                           ;mcc_generated_files/LINDrivers/lin_slave.c: 113:                 if(LIN_breakCheck() ==
      +                           1){
  9892     04C9  3189  217C  3184   	fcall	_LIN_breakCheck
  9893     04CC  3A01               	xorlw	1
  9894     04CD  1D03               	skipz
  9895     04CE  2CD2               	goto	l5352
  9896                           
  9897                           ;mcc_generated_files/LINDrivers/lin_slave.c: 114:                     LIN_rxState = LIN_
      +                          RX_SYNC;
  9898     04CF  3002               	movlw	2
  9899     04D0  00A8               	movwf	LIN_handler@LIN_rxState
  9900                           
  9901                           ;mcc_generated_files/LINDrivers/lin_slave.c: 115:                 } else {
  9902     04D1  0008               	return
  9903     04D2                     l5352:
  9904                           
  9905                           ;mcc_generated_files/LINDrivers/lin_slave.c: 116:                     LIN_rxState = LIN_
      +                          RX_ERROR;
  9906     04D2  3008               	movlw	8
  9907     04D3  0140               	movlb	0	; select bank0
  9908     04D4  00A8               	movwf	LIN_handler@LIN_rxState
  9909     04D5  0008               	return
  9910     04D6                     l5354:
  9911                           
  9912                           ;mcc_generated_files/LINDrivers/lin_slave.c: 121:             if(EUSART1_is_rx_ready() >
      +                           0){
  9913     04D6  3188  20A0  3184   	fcall	_EUSART1_is_rx_ready
  9914     04D9  3A00               	xorlw	0
  9915     04DA  1903               	skipnz
  9916     04DB  0008               	return
  9917                           
  9918                           ;mcc_generated_files/LINDrivers/lin_slave.c: 122:                 if(EUSART1_Read() == 0
      +                          x55){
  9919     04DC  318B  2330  3184   	fcall	_EUSART1_Read
  9920     04DF  3A55               	xorlw	85
  9921     04E0  1D03               	skipz
  9922     04E1  2CD2               	goto	l5352
  9923                           
  9924                           ;mcc_generated_files/LINDrivers/lin_slave.c: 123:                     LIN_rxState = LIN_
      +                          RX_PID;
  9925     04E2  3003               	movlw	3
  9926     04E3  00A8               	movwf	LIN_handler@LIN_rxState
  9927                           
  9928                           ;mcc_generated_files/LINDrivers/lin_slave.c: 124:                 } else {
  9929     04E4  0008               	return
  9930     04E5                     l5362:
  9931                           
  9932                           ;mcc_generated_files/LINDrivers/lin_slave.c: 130:             if(EUSART1_is_rx_ready() >
      +                           0){
  9933     04E5  3188  20A0  3184   	fcall	_EUSART1_is_rx_ready
  9934     04E8  3A00               	xorlw	0
  9935     04E9  1903               	skipnz
  9936     04EA  0008               	return
  9937                           
  9938                           ;mcc_generated_files/LINDrivers/lin_slave.c: 131:                 LIN_packet.PID = EUSAR
      +                          T1_Read();
  9939     04EB  318B  2330  3184   	fcall	_EUSART1_Read
  9940     04EE  0141               	movlb	1	; select bank1
  9941     04EF  00B8               	movwf	_LIN_packet^(0+128)
  9942                           
  9943                           ;mcc_generated_files/LINDrivers/lin_slave.c: 134:                 if(LIN_checkPID(LIN_pa
      +                          cket.PID) == 0){
  9944     04F0  0838               	movf	_LIN_packet^(0+128),w
  9945     04F1  318A  2217  3184   	fcall	_LIN_checkPID
  9946     04F4  3A00               	xorlw	0
  9947     04F5  1903               	btfsc	3,2
  9948     04F6  2CD2               	goto	l5352
  9949                           
  9950                           ;mcc_generated_files/LINDrivers/lin_slave.c: 138:                 LIN_packet.type = LIN_
      +                          getFromTable(LIN_packet.PID, TYPE);
  9951     04F7  01CE               	clrf	LIN_getFromTable@param
  9952     04F8  0ACE               	incf	LIN_getFromTable@param,f
  9953     04F9  0141               	movlb	1	; select bank1
  9954     04FA  0838               	movf	_LIN_packet^(0+128),w
  9955     04FB  318E  26AD  3184   	fcall	_LIN_getFromTable
  9956     04FE  0141               	movlb	1	; select bank1
  9957     04FF  00C2               	movwf	(_LIN_packet^(0+128)+10)
  9958                           
  9959                           ;mcc_generated_files/LINDrivers/lin_slave.c: 139:                 if(LIN_packet.type == 
      +                          RECEIVE){
  9960     0500  0342               	decf	(_LIN_packet^(0+128)+10),w
  9961     0501  1D03               	btfss	3,2
  9962     0502  2D10               	goto	l5378
  9963                           
  9964                           ;mcc_generated_files/LINDrivers/lin_slave.c: 140:                     LIN_packet.length 
      +                          = LIN_getFromTable(LIN_packet.PID, LENGTH);
  9965     0503  3002               	movlw	2
  9966     0504  0140               	movlb	0	; select bank0
  9967     0505  00CE               	movwf	LIN_getFromTable@param
  9968     0506  0141               	movlb	1	; select bank1
  9969     0507  0838               	movf	_LIN_packet^(0+128),w
  9970     0508  318E  26AD         	fcall	_LIN_getFromTable
  9971     050A  0141               	movlb	1	; select bank1
  9972     050B  00C3               	movwf	(_LIN_packet^(0+128)+11)
  9973                           
  9974                           ;mcc_generated_files/LINDrivers/lin_slave.c: 141:                     LIN_rxState = LIN_
      +                          RX_DATA;
  9975     050C  3004               	movlw	4
  9976     050D  0140               	movlb	0	; select bank0
  9977     050E  00A8               	movwf	LIN_handler@LIN_rxState
  9978                           
  9979                           ;mcc_generated_files/LINDrivers/lin_slave.c: 142:                 }
  9980     050F  0008               	return
  9981     0510                     l5378:
  9982                           
  9983                           ;mcc_generated_files/LINDrivers/lin_slave.c: 144:                     LIN_disableRx();
  9984     0510  3188  2079         	fcall	_LIN_disableRx
  9985                           
  9986                           ;mcc_generated_files/LINDrivers/lin_slave.c: 145:                     LIN_rxState = LIN_
      +                          RX_TX_DATA;
  9987     0512  3006               	movlw	6
  9988     0513  0140               	movlb	0	; select bank0
  9989     0514  00A8               	movwf	LIN_handler@LIN_rxState
  9990     0515  0008               	return
  9991     0516                     l5382:
  9992                           
  9993                           ;mcc_generated_files/LINDrivers/lin_slave.c: 150:             if(EUSART1_is_rx_ready() >
      +                           0){
  9994     0516  3188  20A0  3184   	fcall	_EUSART1_is_rx_ready
  9995     0519  3A00               	xorlw	0
  9996     051A  1903               	skipnz
  9997     051B  0008               	return
  9998                           
  9999                           ;mcc_generated_files/LINDrivers/lin_slave.c: 151:                 LIN_packet.data[rxData
      +                          Index] = EUSART1_Read();
 10000     051C  318B  2330  3184   	fcall	_EUSART1_Read
 10001     051F  00E2               	movwf	??_LIN_handler
 10002     0520  0827               	movf	LIN_handler@rxDataIndex,w
 10003     0521  3EB9               	addlw	(low ((_LIN_packet| 0+1)))& (0+255)
 10004     0522  0086               	movwf	6
 10005     0523  0187               	clrf	7
 10006     0524  0862               	movf	??_LIN_handler,w
 10007     0525  0081               	movwf	1
 10008                           
 10009                           ;mcc_generated_files/LINDrivers/lin_slave.c: 152:                 if(++rxDataIndex >= LI
      +                          N_packet.length){
 10010     0526  0141               	movlb	1	; select bank1
 10011     0527  0843               	movf	(_LIN_packet^(0+128)+11),w
 10012     0528  0140               	movlb	0	; select bank0
 10013     0529  00E2               	movwf	??_LIN_handler
 10014     052A  01E3               	clrf	??_LIN_handler+1
 10015     052B  1BE2               	btfsc	??_LIN_handler,7
 10016     052C  03E3               	decf	??_LIN_handler+1,f
 10017     052D  3001               	movlw	1
 10018     052E  00E4               	movwf	??_LIN_handler+2
 10019     052F  0864               	movf	??_LIN_handler+2,w
 10020     0530  07A7               	addwf	LIN_handler@rxDataIndex,f
 10021     0531  0863               	movf	??_LIN_handler+1,w
 10022     0532  3A80               	xorlw	128
 10023     0533  3C80               	sublw	128
 10024     0534  1D03               	skipz
 10025     0535  2D38               	goto	u3345
 10026     0536  0862               	movf	??_LIN_handler,w
 10027     0537  0227               	subwf	LIN_handler@rxDataIndex,w
 10028     0538                     u3345:
 10029     0538  1C03               	skipc
 10030     0539  0008               	return
 10031                           
 10032                           ;mcc_generated_files/LINDrivers/lin_slave.c: 154:                     rxDataIndex = 0;
 10033     053A  0140               	movlb	0	; select bank0
 10034     053B  01A7               	clrf	LIN_handler@rxDataIndex
 10035                           
 10036                           ;mcc_generated_files/LINDrivers/lin_slave.c: 155:                     LIN_rxState = LIN_
      +                          RX_CHECKSUM;
 10037     053C  3005               	movlw	5
 10038     053D  00A8               	movwf	LIN_handler@LIN_rxState
 10039     053E  0008               	return
 10040     053F                     l5392:
 10041                           
 10042                           ;mcc_generated_files/LINDrivers/lin_slave.c: 160:             if(EUSART1_is_rx_ready() >
      +                           0){
 10043     053F  3188  20A0  3184   	fcall	_EUSART1_is_rx_ready
 10044     0542  3A00               	xorlw	0
 10045     0543  1903               	skipnz
 10046     0544  0008               	return
 10047                           
 10048                           ;mcc_generated_files/LINDrivers/lin_slave.c: 161:                 LIN_packet.checksum = 
      +                          EUSART1_Read();
 10049     0545  318B  2330  3184   	fcall	_EUSART1_Read
 10050     0548  0141               	movlb	1	; select bank1
 10051     0549  00C1               	movwf	(_LIN_packet^(0+128)+9)
 10052                           
 10053                           ;mcc_generated_files/LINDrivers/lin_slave.c: 162:                 if(LIN_packet.checksum
      +                           != LIN_getChecksum(LIN_packet.length, LIN_packet.PID, LIN_packet.data)) {
 10054     054A  0838               	movf	_LIN_packet^(0+128),w
 10055     054B  0140               	movlb	0	; select bank0
 10056     054C  00CE               	movwf	LIN_getChecksum@pid
 10057     054D  30B9               	movlw	(low ((_LIN_packet| 0+1)))& (0+255)
 10058     054E  00CF               	movwf	LIN_getChecksum@data
 10059     054F  0141               	movlb	1	; select bank1
 10060     0550  0843               	movf	(_LIN_packet^(0+128)+11),w
 10061     0551  318C  2426  3184   	fcall	_LIN_getChecksum
 10062     0554  0141               	movlb	1	; select bank1
 10063     0555  0641               	xorwf	(_LIN_packet^(0+128)+9),w
 10064     0556  1D03               	btfss	3,2
 10065     0557  2CD2               	goto	l5352
 10066                           
 10067                           ;mcc_generated_files/LINDrivers/lin_slave.c: 166:                     LIN_rxState = LIN_
      +                          RX_RDY;
 10068     0558  3007               	movlw	7
 10069     0559  0140               	movlb	0	; select bank0
 10070     055A  00A8               	movwf	LIN_handler@LIN_rxState
 10071     055B  0008               	return
 10072     055C                     l5400:
 10073                           
 10074                           ;mcc_generated_files/LINDrivers/lin_slave.c: 171:             LIN_queuePacket(LIN_packet
      +                          .PID);
 10075     055C  0141               	movlb	1	; select bank1
 10076     055D  0838               	movf	_LIN_packet^(0+128),w
 10077     055E  318F  2713  3184   	fcall	_LIN_queuePacket
 10078                           
 10079                           ;mcc_generated_files/LINDrivers/lin_slave.c: 172:             LIN_rxState = LIN_RX_RDY;
 10080     0561  3007               	movlw	7
 10081     0562  0140               	movlb	0	; select bank0
 10082     0563  00A8               	movwf	LIN_handler@LIN_rxState
 10083     0564                     l5404:
 10084                           
 10085                           ;mcc_generated_files/LINDrivers/lin_slave.c: 174:             LIN_processData();
 10086     0564  0142               	movlb	2	; select bank2
 10087     0565  086E               	movf	(_LIN_processData+1)^(0+256),w
 10088     0566  008A               	movwf	10
 10089     0567  086D               	movf	_LIN_processData^(0+256),w
 10090     0568  000A               	callw
 10091     0569  3184               	pagesel	$
 10092     056A                     l5406:
 10093                           
 10094                           ;mcc_generated_files/LINDrivers/lin_slave.c: 176:             LIN_stopTimer();
 10095     056A  3188  2083  3184   	fcall	_LIN_stopTimer
 10096                           
 10097                           ;mcc_generated_files/LINDrivers/lin_slave.c: 177:             rxDataIndex = 0;
 10098     056D  01A7               	clrf	LIN_handler@rxDataIndex
 10099                           
 10100                           ;mcc_generated_files/LINDrivers/lin_slave.c: 178:             LIN_rxInProgress = 0;
 10101     056E  01AB               	clrf	_LIN_rxInProgress
 10102                           
 10103                           ;mcc_generated_files/LINDrivers/lin_slave.c: 179:             memset(LIN_packet.rawPacke
      +                          t, 0, sizeof(LIN_packet.rawPacket));
 10104     056F  3000               	movlw	0
 10105     0570  00CE               	movwf	memset@c
 10106     0571  00CF               	movwf	memset@c+1
 10107     0572  300D               	movlw	13
 10108     0573  00D0               	movwf	memset@n
 10109     0574  3000               	movlw	0
 10110     0575  00D1               	movwf	memset@n+1
 10111     0576  30B8               	movlw	(low (_LIN_packet| 0))& (0+255)
 10112     0577  3189  21EA  3184   	fcall	_memset
 10113     057A                     l5414:
 10114                           
 10115                           ;mcc_generated_files/LINDrivers/lin_slave.c: 181:             if(TX1STAbits.TRMT){
 10116     057A  0142               	movlb	2	; select bank2
 10117     057B  1C9E               	btfss	30,1	;volatile
 10118     057C  2D82               	goto	l5420
 10119                           
 10120                           ;mcc_generated_files/LINDrivers/lin_slave.c: 182:                 LIN_enableRx();
 10121     057D  3188  207E         	fcall	_LIN_enableRx
 10122                           
 10123                           ;mcc_generated_files/LINDrivers/lin_slave.c: 183:                 LIN_rxState = LIN_RX_I
      +                          DLE;
 10124     057F  0140               	movlb	0	; select bank0
 10125     0580  01A8               	clrf	LIN_handler@LIN_rxState
 10126                           
 10127                           ;mcc_generated_files/LINDrivers/lin_slave.c: 184:             } else {
 10128     0581  0008               	return
 10129     0582                     l5420:
 10130                           
 10131                           ;mcc_generated_files/LINDrivers/lin_slave.c: 185:                 LIN_rxState = LIN_RX_W
      +                          AIT;
 10132     0582  3009               	movlw	9
 10133     0583  0140               	movlb	0	; select bank0
 10134     0584  00A8               	movwf	LIN_handler@LIN_rxState
 10135     0585  0008               	return
 10136     0586                     l5424:
 10137     0586  0828               	movf	LIN_handler@LIN_rxState,w
 10138     0587  00E2               	movwf	??_LIN_handler
 10139     0588  01E3               	clrf	??_LIN_handler+1
 10140                           
 10141                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10142                           ; Switch size 1, requested type "simple"
 10143                           ; Number of cases is 1, Range of values is 0 to 0
 10144                           ; switch strategies available:
 10145                           ; Name         Instructions Cycles
 10146                           ; simple_byte            4     3 (average)
 10147                           ; direct_byte            8     6 (fixed)
 10148                           ; jumptable            260     6 (fixed)
 10149                           ;	Chosen strategy is simple_byte
 10150     0589  0863               	movf	??_LIN_handler+1,w
 10151     058A  3A00               	xorlw	0	; case 0
 10152     058B  1903               	skipnz
 10153     058C  2D8E               	goto	l5590
 10154     058D  2DAE               	goto	l273
 10155     058E                     l5590:
 10156                           
 10157                           ; Switch size 1, requested type "simple"
 10158                           ; Number of cases is 10, Range of values is 0 to 9
 10159                           ; switch strategies available:
 10160                           ; Name         Instructions Cycles
 10161                           ; direct_byte           26     6 (fixed)
 10162                           ; simple_byte           31    16 (average)
 10163                           ; jumptable            260     6 (fixed)
 10164                           ;	Chosen strategy is simple_byte
 10165     058E  0862               	movf	??_LIN_handler,w
 10166     058F  3A00               	xorlw	0	; case 0
 10167     0590  1903               	skipnz
 10168     0591  2CB5               	goto	l5338
 10169     0592  3A01               	xorlw	1	; case 1
 10170     0593  1903               	skipnz
 10171     0594  2CC3               	goto	l5346
 10172     0595  3A03               	xorlw	3	; case 2
 10173     0596  1903               	skipnz
 10174     0597  2CD6               	goto	l5354
 10175     0598  3A01               	xorlw	1	; case 3
 10176     0599  1903               	skipnz
 10177     059A  2CE5               	goto	l5362
 10178     059B  3A07               	xorlw	7	; case 4
 10179     059C  1903               	skipnz
 10180     059D  2D16               	goto	l5382
 10181     059E  3A01               	xorlw	1	; case 5
 10182     059F  1903               	skipnz
 10183     05A0  2D3F               	goto	l5392
 10184     05A1  3A03               	xorlw	3	; case 6
 10185     05A2  1903               	skipnz
 10186     05A3  2D5C               	goto	l5400
 10187     05A4  3A01               	xorlw	1	; case 7
 10188     05A5  1903               	skipnz
 10189     05A6  2D64               	goto	l5404
 10190     05A7  3A0F               	xorlw	15	; case 8
 10191     05A8  1903               	skipnz
 10192     05A9  2D6A               	goto	l5406
 10193     05AA  3A01               	xorlw	1	; case 9
 10194     05AB  1903               	skipnz
 10195     05AC  2D7A               	goto	l5414
 10196     05AD  2DAE               	goto	l273
 10197     05AE                     l273:
 10198     05AE  0008               	return
 10199     05AF                     __end_of_LIN_handler:
 10200                           
 10201                           	psect	text26
 10202     039E                     __ptext26:	
 10203 ;; *************** function _processLIN *****************
 10204 ;; Defined at:
 10205 ;;		line 51 in file "mcc_generated_files/LINDrivers/lin_app.c"
 10206 ;; Parameters:    Size  Location     Type
 10207 ;;		None
 10208 ;; Auto vars:     Size  Location     Type
 10209 ;;  tempRxData      8    1[BANK2 ] unsigned char [8]
 10210 ;;  cmd             1    0[BANK2 ] unsigned char 
 10211 ;; Return value:  Size  Location     Type
 10212 ;;                  1    wreg      void 
 10213 ;; Registers used:
 10214 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10215 ;; Tracked objects:
 10216 ;;		On entry : 3F/2
 10217 ;;		On exit  : 3E/0
 10218 ;;		Unchanged: 0/0
 10219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10221 ;;      Locals:         0       0       0       9       0       0       0       0       0       0       0       0       
      +0       0
 10222 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10223 ;;      Totals:         0       5       0       9       0       0       0       0       0       0       0       0       
      +0       0
 10224 ;;Total ram usage:       14 bytes
 10225 ;; Hardware stack levels used: 1
 10226 ;; Hardware stack levels required when called: 8
 10227 ;; This function calls:
 10228 ;;		_CmdOutput
 10229 ;;		_EFuseInit
 10230 ;;		_LIN_getPacket
 10231 ;; This function is called by:
 10232 ;;		_LIN_Slave_Initialize
 10233 ;;		_LIN_handler
 10234 ;; This function uses a non-reentrant model
 10235 ;;
 10236                           
 10237     039E                     _processLIN:	
 10238                           ;psect for function _processLIN
 10239                           
 10240                           
 10241                           ;mcc_generated_files/LINDrivers/lin_app.c: 52:     uint8_t tempRxData[8];;mcc_generated_
      +                          files/LINDrivers/lin_app.c: 53:     uint8_t cmd;;mcc_generated_files/LINDrivers/lin_app.
      +                          c: 55:     cmd = LIN_getPacket(tempRxData);
 10242                           
 10243                           ;incstack = 0
 10244                           ; Regs used in _processLIN: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10245     039E  3021               	movlw	(low (processLIN@tempRxData| (0+256)))& (0+255)
 10246     039F  318B  230E  3183   	fcall	_LIN_getPacket
 10247     03A2  0142               	movlb	2	; select bank2
 10248     03A3  00A0               	movwf	processLIN@cmd^(0+256)
 10249                           
 10250                           ;mcc_generated_files/LINDrivers/lin_app.c: 56:     switch(cmd){
 10251     03A4  2C4B               	goto	l5284
 10252     03A5                     l5252:
 10253                           
 10254                           ;mcc_generated_files/LINDrivers/lin_app.c: 58:             CmdOutput(tempRxData[0]);
 10255     03A5  0142               	movlb	2	; select bank2
 10256     03A6  0821               	movf	processLIN@tempRxData^(0+256),w
 10257     03A7  318D  25EC         	fcall	_CmdOutput
 10258                           
 10259                           ;mcc_generated_files/LINDrivers/lin_app.c: 59:             break;
 10260     03A9  0008               	return
 10261     03AA                     l5254:
 10262                           
 10263                           ;mcc_generated_files/LINDrivers/lin_app.c: 61:             triggerType = tempRxData[0];
 10264     03AA  0142               	movlb	2	; select bank2
 10265     03AB  0821               	movf	processLIN@tempRxData^(0+256),w
 10266     03AC  0140               	movlb	0	; select bank0
 10267     03AD  00B1               	movwf	_triggerType
 10268                           
 10269                           ;mcc_generated_files/LINDrivers/lin_app.c: 62:             break;
 10270     03AE  0008               	return
 10271     03AF                     l5256:
 10272                           
 10273                           ;mcc_generated_files/LINDrivers/lin_app.c: 64:             CmdOutput(0);
 10274     03AF  3000               	movlw	0
 10275     03B0  318D  25EC         	fcall	_CmdOutput
 10276     03B2  1319               	bcf	25,6	;volatile
 10277     03B3  0008               	return
 10278     03B4                     l5260:
 10279                           
 10280                           ;mcc_generated_files/LINDrivers/lin_app.c: 68:             tj_limit = tempRxData[0];
 10281     03B4  0142               	movlb	2	; select bank2
 10282     03B5  0821               	movf	processLIN@tempRxData^(0+256),w
 10283     03B6  0140               	movlb	0	; select bank0
 10284     03B7  00EC               	movwf	_tj_limit
 10285                           
 10286                           ;mcc_generated_files/LINDrivers/lin_app.c: 69:             break;
 10287     03B8  0008               	return
 10288     03B9                     l5262:
 10289                           
 10290                           ;mcc_generated_files/LINDrivers/lin_app.c: 71:             factor_rdson_rthjs = (uint16_
      +                          t) (tempRxData[1] << 8) | tempRxData[0];
 10291     03B9  0142               	movlb	2	; select bank2
 10292     03BA  0821               	movf	processLIN@tempRxData^(0+256),w
 10293     03BB  0140               	movlb	0	; select bank0
 10294     03BC  00DB               	movwf	??_processLIN
 10295     03BD  01DC               	clrf	??_processLIN+1
 10296     03BE  0142               	movlb	2	; select bank2
 10297     03BF  0822               	movf	(processLIN@tempRxData^(0+256)+1),w
 10298     03C0  0140               	movlb	0	; select bank0
 10299     03C1  00DD               	movwf	??_processLIN+2
 10300     03C2  01DE               	clrf	??_processLIN+3
 10301     03C3  085D               	movf	??_processLIN+2,w
 10302     03C4  00DE               	movwf	??_processLIN+3
 10303     03C5  01DD               	clrf	??_processLIN+2
 10304     03C6  085B               	movf	??_processLIN,w
 10305     03C7  045D               	iorwf	??_processLIN+2,w
 10306     03C8  0141               	movlb	1	; select bank1
 10307     03C9  00EB               	movwf	_factor_rdson_rthjs^(0+128)
 10308     03CA  0140               	movlb	0	; select bank0
 10309     03CB  085C               	movf	??_processLIN+1,w
 10310     03CC  045E               	iorwf	??_processLIN+3,w
 10311     03CD  0141               	movlb	1	; select bank1
 10312     03CE  00EC               	movwf	(_factor_rdson_rthjs+1)^(0+128)
 10313                           
 10314                           ;mcc_generated_files/LINDrivers/lin_app.c: 72:             break;
 10315     03CF  0008               	return
 10316     03D0                     l5264:
 10317                           
 10318                           ;mcc_generated_files/LINDrivers/lin_app.c: 74:             factor_rdson_rthsa = (uint16_
      +                          t) (tempRxData[1] << 8) | tempRxData[0];
 10319     03D0  0142               	movlb	2	; select bank2
 10320     03D1  0821               	movf	processLIN@tempRxData^(0+256),w
 10321     03D2  0140               	movlb	0	; select bank0
 10322     03D3  00DB               	movwf	??_processLIN
 10323     03D4  01DC               	clrf	??_processLIN+1
 10324     03D5  0142               	movlb	2	; select bank2
 10325     03D6  0822               	movf	(processLIN@tempRxData^(0+256)+1),w
 10326     03D7  0140               	movlb	0	; select bank0
 10327     03D8  00DD               	movwf	??_processLIN+2
 10328     03D9  01DE               	clrf	??_processLIN+3
 10329     03DA  085D               	movf	??_processLIN+2,w
 10330     03DB  00DE               	movwf	??_processLIN+3
 10331     03DC  01DD               	clrf	??_processLIN+2
 10332     03DD  085B               	movf	??_processLIN,w
 10333     03DE  045D               	iorwf	??_processLIN+2,w
 10334     03DF  0141               	movlb	1	; select bank1
 10335     03E0  00E9               	movwf	_factor_rdson_rthsa^(0+128)
 10336     03E1  0140               	movlb	0	; select bank0
 10337     03E2  085C               	movf	??_processLIN+1,w
 10338     03E3  045E               	iorwf	??_processLIN+3,w
 10339     03E4  0141               	movlb	1	; select bank1
 10340     03E5  00EA               	movwf	(_factor_rdson_rthsa+1)^(0+128)
 10341                           
 10342                           ;mcc_generated_files/LINDrivers/lin_app.c: 75:             break;
 10343     03E6  0008               	return
 10344     03E7                     l5266:
 10345                           
 10346                           ;mcc_generated_files/LINDrivers/lin_app.c: 77:             current2counts_squared = (uin
      +                          t16_t) (tempRxData[1] << 8) | tempRxData[0];
 10347     03E7  0142               	movlb	2	; select bank2
 10348     03E8  0821               	movf	processLIN@tempRxData^(0+256),w
 10349     03E9  0140               	movlb	0	; select bank0
 10350     03EA  00DB               	movwf	??_processLIN
 10351     03EB  01DC               	clrf	??_processLIN+1
 10352     03EC  0142               	movlb	2	; select bank2
 10353     03ED  0822               	movf	(processLIN@tempRxData^(0+256)+1),w
 10354     03EE  0140               	movlb	0	; select bank0
 10355     03EF  00DD               	movwf	??_processLIN+2
 10356     03F0  01DE               	clrf	??_processLIN+3
 10357     03F1  085D               	movf	??_processLIN+2,w
 10358     03F2  00DE               	movwf	??_processLIN+3
 10359     03F3  01DD               	clrf	??_processLIN+2
 10360     03F4  085B               	movf	??_processLIN,w
 10361     03F5  045D               	iorwf	??_processLIN+2,w
 10362     03F6  0141               	movlb	1	; select bank1
 10363     03F7  00E7               	movwf	_current2counts_squared^(0+128)
 10364     03F8  0140               	movlb	0	; select bank0
 10365     03F9  085C               	movf	??_processLIN+1,w
 10366     03FA  045E               	iorwf	??_processLIN+3,w
 10367     03FB  0141               	movlb	1	; select bank1
 10368     03FC  00E8               	movwf	(_current2counts_squared+1)^(0+128)
 10369                           
 10370                           ;mcc_generated_files/LINDrivers/lin_app.c: 78:             break;
 10371     03FD  0008               	return
 10372     03FE                     l5268:
 10373                           
 10374                           ;mcc_generated_files/LINDrivers/lin_app.c: 80:             isense_max = (uint16_t) (temp
      +                          RxData[1] << 8) | tempRxData[0];
 10375     03FE  0142               	movlb	2	; select bank2
 10376     03FF  0821               	movf	processLIN@tempRxData^(0+256),w
 10377     0400  0140               	movlb	0	; select bank0
 10378     0401  00DB               	movwf	??_processLIN
 10379     0402  01DC               	clrf	??_processLIN+1
 10380     0403  0142               	movlb	2	; select bank2
 10381     0404  0822               	movf	(processLIN@tempRxData^(0+256)+1),w
 10382     0405  0140               	movlb	0	; select bank0
 10383     0406  00DD               	movwf	??_processLIN+2
 10384     0407  01DE               	clrf	??_processLIN+3
 10385     0408  085D               	movf	??_processLIN+2,w
 10386     0409  00DE               	movwf	??_processLIN+3
 10387     040A  01DD               	clrf	??_processLIN+2
 10388     040B  085B               	movf	??_processLIN,w
 10389     040C  045D               	iorwf	??_processLIN+2,w
 10390     040D  00E7               	movwf	_isense_max
 10391     040E  085C               	movf	??_processLIN+1,w
 10392     040F  045E               	iorwf	??_processLIN+3,w
 10393     0410  00E8               	movwf	_isense_max+1
 10394                           
 10395                           ;mcc_generated_files/LINDrivers/lin_app.c: 81:             break;
 10396     0411  0008               	return
 10397     0412                     l5270:
 10398                           
 10399                           ;mcc_generated_files/LINDrivers/lin_app.c: 83:             dac_i_hw_trip = tempRxData[0]
      +                          ;
 10400     0412  0142               	movlb	2	; select bank2
 10401     0413  0821               	movf	processLIN@tempRxData^(0+256),w
 10402     0414  0140               	movlb	0	; select bank0
 10403     0415  00EB               	movwf	_dac_i_hw_trip
 10404                           
 10405                           ;mcc_generated_files/LINDrivers/lin_app.c: 84:             EFuseInit();
 10406     0416  318B  2353         	fcall	_EFuseInit
 10407                           
 10408                           ;mcc_generated_files/LINDrivers/lin_app.c: 85:             break;
 10409     0418  0008               	return
 10410     0419                     l5274:
 10411                           
 10412                           ;mcc_generated_files/LINDrivers/lin_app.c: 87:             b1_coef = tempRxData[0];
 10413     0419  0142               	movlb	2	; select bank2
 10414     041A  0821               	movf	processLIN@tempRxData^(0+256),w
 10415     041B  0140               	movlb	0	; select bank0
 10416     041C  00EA               	movwf	_b1_coef
 10417                           
 10418                           ;mcc_generated_files/LINDrivers/lin_app.c: 88:             a1_coef = 0xffff - (2 * b1_co
      +                          ef) + 1;
 10419     041D  086A               	movf	_b1_coef,w
 10420     041E  00DB               	movwf	??_processLIN
 10421     041F  01DC               	clrf	??_processLIN+1
 10422     0420  35DB               	lslf	??_processLIN,f
 10423     0421  0DDC               	rlf	??_processLIN+1,f
 10424     0422  09DB               	comf	??_processLIN,f
 10425     0423  09DC               	comf	??_processLIN+1,f
 10426     0424  0ADB               	incf	??_processLIN,f
 10427     0425  1903               	skipnz
 10428     0426  0ADC               	incf	??_processLIN+1,f
 10429     0427  085B               	movf	??_processLIN,w
 10430     0428  0141               	movlb	1	; select bank1
 10431     0429  00E5               	movwf	_a1_coef^(0+128)
 10432     042A  0140               	movlb	0	; select bank0
 10433     042B  085C               	movf	??_processLIN+1,w
 10434     042C  0141               	movlb	1	; select bank1
 10435     042D  00E6               	movwf	(_a1_coef+1)^(0+128)
 10436                           
 10437                           ;mcc_generated_files/LINDrivers/lin_app.c: 89:             break;
 10438     042E  0008               	return
 10439     042F                     l5278:
 10440                           
 10441                           ;mcc_generated_files/LINDrivers/lin_app.c: 91:             reduced_drive_time = tempRxDa
      +                          ta[0];
 10442     042F  0142               	movlb	2	; select bank2
 10443     0430  0821               	movf	processLIN@tempRxData^(0+256),w
 10444     0431  0140               	movlb	0	; select bank0
 10445     0432  00B0               	movwf	_reduced_drive_time
 10446                           
 10447                           ;mcc_generated_files/LINDrivers/lin_app.c: 92:             break;
 10448     0433  0008               	return
 10449     0434                     l5280:
 10450                           
 10451                           ;mcc_generated_files/LINDrivers/lin_app.c: 94:             tcc_sample_time = (uint16_t) 
      +                          (tempRxData[1] << 8) | tempRxData[0];
 10452     0434  0142               	movlb	2	; select bank2
 10453     0435  0821               	movf	processLIN@tempRxData^(0+256),w
 10454     0436  0140               	movlb	0	; select bank0
 10455     0437  00DB               	movwf	??_processLIN
 10456     0438  01DC               	clrf	??_processLIN+1
 10457     0439  0142               	movlb	2	; select bank2
 10458     043A  0822               	movf	(processLIN@tempRxData^(0+256)+1),w
 10459     043B  0140               	movlb	0	; select bank0
 10460     043C  00DD               	movwf	??_processLIN+2
 10461     043D  01DE               	clrf	??_processLIN+3
 10462     043E  085D               	movf	??_processLIN+2,w
 10463     043F  00DE               	movwf	??_processLIN+3
 10464     0440  01DD               	clrf	??_processLIN+2
 10465     0441  085B               	movf	??_processLIN,w
 10466     0442  045D               	iorwf	??_processLIN+2,w
 10467     0443  0141               	movlb	1	; select bank1
 10468     0444  00E3               	movwf	_tcc_sample_time^(0+128)
 10469     0445  0140               	movlb	0	; select bank0
 10470     0446  085C               	movf	??_processLIN+1,w
 10471     0447  045E               	iorwf	??_processLIN+3,w
 10472     0448  0141               	movlb	1	; select bank1
 10473     0449  00E4               	movwf	(_tcc_sample_time+1)^(0+128)
 10474                           
 10475                           ;mcc_generated_files/LINDrivers/lin_app.c: 95:             break;
 10476     044A  0008               	return
 10477     044B                     l5284:
 10478     044B  0820               	movf	processLIN@cmd^(0+256),w
 10479     044C  0140               	movlb	0	; select bank0
 10480     044D  00DB               	movwf	??_processLIN
 10481     044E  01DC               	clrf	??_processLIN+1
 10482                           
 10483                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10484                           ; Switch size 1, requested type "simple"
 10485                           ; Number of cases is 1, Range of values is 0 to 0
 10486                           ; switch strategies available:
 10487                           ; Name         Instructions Cycles
 10488                           ; simple_byte            4     3 (average)
 10489                           ; direct_byte            8     6 (fixed)
 10490                           ; jumptable            260     6 (fixed)
 10491                           ;	Chosen strategy is simple_byte
 10492     044F  085C               	movf	??_processLIN+1,w
 10493     0450  3A00               	xorlw	0	; case 0
 10494     0451  1903               	skipnz
 10495     0452  2C54               	goto	l5592
 10496     0453  2CAA               	goto	l159
 10497     0454                     l5592:
 10498                           
 10499                           ; Switch size 1, requested type "simple"
 10500                           ; Number of cases is 28, Range of values is 0 to 47
 10501                           ; switch strategies available:
 10502                           ; Name         Instructions Cycles
 10503                           ; simple_byte           85    43 (average)
 10504                           ; direct_byte          102     6 (fixed)
 10505                           ; jumptable            260     6 (fixed)
 10506                           ;	Chosen strategy is simple_byte
 10507     0454  085B               	movf	??_processLIN,w
 10508     0455  3A00               	xorlw	0	; case 0
 10509     0456  1903               	skipnz
 10510     0457  2BA5               	goto	l5252
 10511     0458  3A01               	xorlw	1	; case 1
 10512     0459  1903               	skipnz
 10513     045A  2BAA               	goto	l5254
 10514     045B  3A03               	xorlw	3	; case 2
 10515     045C  1903               	skipnz
 10516     045D  2BAF               	goto	l5256
 10517     045E  3A12               	xorlw	18	; case 16
 10518     045F  1903               	skipnz
 10519     0460  2BB4               	goto	l5260
 10520     0461  3A01               	xorlw	1	; case 17
 10521     0462  1903               	skipnz
 10522     0463  2BB9               	goto	l5262
 10523     0464  3A03               	xorlw	3	; case 18
 10524     0465  1903               	skipnz
 10525     0466  2BD0               	goto	l5264
 10526     0467  3A01               	xorlw	1	; case 19
 10527     0468  1903               	skipnz
 10528     0469  2BE7               	goto	l5266
 10529     046A  3A07               	xorlw	7	; case 20
 10530     046B  1903               	skipnz
 10531     046C  2BFE               	goto	l5268
 10532     046D  3A01               	xorlw	1	; case 21
 10533     046E  1903               	skipnz
 10534     046F  2C12               	goto	l5270
 10535     0470  3A03               	xorlw	3	; case 22
 10536     0471  1903               	skipnz
 10537     0472  2C19               	goto	l5274
 10538     0473  3A01               	xorlw	1	; case 23
 10539     0474  1903               	skipnz
 10540     0475  2C2F               	goto	l5278
 10541     0476  3A0F               	xorlw	15	; case 24
 10542     0477  1903               	skipnz
 10543     0478  2C34               	goto	l5280
 10544     0479  3A38               	xorlw	56	; case 32
 10545     047A  1903               	skipnz
 10546     047B  2CAA               	goto	l159
 10547     047C  3A01               	xorlw	1	; case 33
 10548     047D  1903               	skipnz
 10549     047E  2CAA               	goto	l159
 10550     047F  3A03               	xorlw	3	; case 34
 10551     0480  1903               	skipnz
 10552     0481  2CAA               	goto	l159
 10553     0482  3A01               	xorlw	1	; case 35
 10554     0483  1903               	skipnz
 10555     0484  2CAA               	goto	l159
 10556     0485  3A07               	xorlw	7	; case 36
 10557     0486  1903               	skipnz
 10558     0487  2CAA               	goto	l159
 10559     0488  3A01               	xorlw	1	; case 37
 10560     0489  1903               	skipnz
 10561     048A  2CAA               	goto	l159
 10562     048B  3A03               	xorlw	3	; case 38
 10563     048C  1903               	skipnz
 10564     048D  2CAA               	goto	l159
 10565     048E  3A01               	xorlw	1	; case 39
 10566     048F  1903               	skipnz
 10567     0490  2CAA               	goto	l159
 10568     0491  3A0F               	xorlw	15	; case 40
 10569     0492  1903               	skipnz
 10570     0493  2CAA               	goto	l159
 10571     0494  3A01               	xorlw	1	; case 41
 10572     0495  1903               	skipnz
 10573     0496  2CAA               	goto	l159
 10574     0497  3A03               	xorlw	3	; case 42
 10575     0498  1903               	skipnz
 10576     0499  2CAA               	goto	l159
 10577     049A  3A01               	xorlw	1	; case 43
 10578     049B  1903               	skipnz
 10579     049C  2CAA               	goto	l159
 10580     049D  3A07               	xorlw	7	; case 44
 10581     049E  1903               	skipnz
 10582     049F  2CAA               	goto	l159
 10583     04A0  3A01               	xorlw	1	; case 45
 10584     04A1  1903               	skipnz
 10585     04A2  2CAA               	goto	l159
 10586     04A3  3A03               	xorlw	3	; case 46
 10587     04A4  1903               	skipnz
 10588     04A5  2CAA               	goto	l159
 10589     04A6  3A01               	xorlw	1	; case 47
 10590     04A7  1903               	skipnz
 10591     04A8  2CAA               	goto	l159
 10592     04A9  2CAA               	goto	l159
 10593     04AA                     l159:
 10594     04AA  0008               	return
 10595     04AB                     __end_of_processLIN:
 10596                           
 10597                           	psect	text27
 10598     0B0E                     __ptext27:	
 10599 ;; *************** function _LIN_getPacket *****************
 10600 ;; Defined at:
 10601 ;;		line 202 in file "mcc_generated_files/LINDrivers/lin_slave.c"
 10602 ;; Parameters:    Size  Location     Type
 10603 ;;  data            1    wreg     PTR unsigned char 
 10604 ;;		 -> processLIN@tempRxData(8), 
 10605 ;; Auto vars:     Size  Location     Type
 10606 ;;  data            1   11[BANK0 ] PTR unsigned char 
 10607 ;;		 -> processLIN@tempRxData(8), 
 10608 ;;  cmd             1   12[BANK0 ] unsigned char 
 10609 ;; Return value:  Size  Location     Type
 10610 ;;                  1    wreg      unsigned char 
 10611 ;; Registers used:
 10612 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10613 ;; Tracked objects:
 10614 ;;		On entry : 3F/2
 10615 ;;		On exit  : 3F/0
 10616 ;;		Unchanged: 0/0
 10617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10619 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10621 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10622 ;;Total ram usage:        2 bytes
 10623 ;; Hardware stack levels used: 1
 10624 ;; Hardware stack levels required when called: 6
 10625 ;; This function calls:
 10626 ;;		_memcpy
 10627 ;;		_memset
 10628 ;; This function is called by:
 10629 ;;		_processLIN
 10630 ;; This function uses a non-reentrant model
 10631 ;;
 10632                           
 10633     0B0E                     _LIN_getPacket:	
 10634                           ;psect for function _LIN_getPacket
 10635                           
 10636                           
 10637                           ;incstack = 0
 10638                           ; Regs used in _LIN_getPacket: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10639                           ;LIN_getPacket@data stored from wreg
 10640     0B0E  0140               	movlb	0	; select bank0
 10641     0B0F  00D9               	movwf	LIN_getPacket@data
 10642                           
 10643                           ;mcc_generated_files/LINDrivers/lin_slave.c: 203:     uint8_t cmd = LIN_packet.PID & 0x3
      +                          F;
 10644     0B10  0141               	movlb	1	; select bank1
 10645     0B11  0838               	movf	_LIN_packet^(0+128),w
 10646     0B12  393F               	andlw	63
 10647     0B13  0140               	movlb	0	; select bank0
 10648     0B14  00DA               	movwf	LIN_getPacket@cmd
 10649                           
 10650                           ;mcc_generated_files/LINDrivers/lin_slave.c: 205:     memcpy(data, LIN_packet.data, size
      +                          of(LIN_packet.data));
 10651     0B15  0859               	movf	LIN_getPacket@data,w
 10652     0B16  00CE               	movwf	memcpy@d1
 10653     0B17  3001               	movlw	1
 10654     0B18  00CF               	movwf	memcpy@d1+1
 10655     0B19  30B9               	movlw	low (_LIN_packet+1)
 10656     0B1A  00D0               	movwf	memcpy@s1
 10657     0B1B  3000               	movlw	high (_LIN_packet+1)
 10658     0B1C  00D1               	movwf	memcpy@s1+1
 10659     0B1D  3008               	movlw	8
 10660     0B1E  00D2               	movwf	memcpy@n
 10661     0B1F  3000               	movlw	0
 10662     0B20  00D3               	movwf	memcpy@n+1
 10663     0B21  318B  2376  318B   	fcall	_memcpy
 10664                           
 10665                           ;mcc_generated_files/LINDrivers/lin_slave.c: 206:     memset(LIN_packet.rawPacket, 0, si
      +                          zeof(LIN_packet.rawPacket));
 10666     0B24  3000               	movlw	0
 10667     0B25  00CE               	movwf	memset@c
 10668     0B26  00CF               	movwf	memset@c+1
 10669     0B27  300D               	movlw	13
 10670     0B28  00D0               	movwf	memset@n
 10671     0B29  3000               	movlw	0
 10672     0B2A  00D1               	movwf	memset@n+1
 10673     0B2B  30B8               	movlw	(low (_LIN_packet| 0))& (0+255)
 10674     0B2C  3189  21EA         	fcall	_memset
 10675                           
 10676                           ;mcc_generated_files/LINDrivers/lin_slave.c: 208:     return cmd;
 10677     0B2E  085A               	movf	LIN_getPacket@cmd,w
 10678     0B2F  0008               	return
 10679     0B30                     __end_of_LIN_getPacket:
 10680                           
 10681                           	psect	text28
 10682     09EA                     __ptext28:	
 10683 ;; *************** function _memset *****************
 10684 ;; Defined at:
 10685 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\memset.c"
 10686 ;; Parameters:    Size  Location     Type
 10687 ;;  dest            1    wreg     PTR void 
 10688 ;;		 -> LIN_packet(13), 
 10689 ;;  c               2    0[BANK0 ] int 
 10690 ;;  n               2    2[BANK0 ] unsigned int 
 10691 ;; Auto vars:     Size  Location     Type
 10692 ;;  dest            1    6[BANK0 ] PTR void 
 10693 ;;		 -> LIN_packet(13), 
 10694 ;;  p               1    5[BANK0 ] PTR unsigned char 
 10695 ;;		 -> LIN_packet(13), 
 10696 ;; Return value:  Size  Location     Type
 10697 ;;                  1    wreg      PTR void 
 10698 ;; Registers used:
 10699 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10700 ;; Tracked objects:
 10701 ;;		On entry : 3F/0
 10702 ;;		On exit  : 3F/0
 10703 ;;		Unchanged: 0/0
 10704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10705 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10706 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10707 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10708 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10709 ;;Total ram usage:        7 bytes
 10710 ;; Hardware stack levels used: 1
 10711 ;; Hardware stack levels required when called: 5
 10712 ;; This function calls:
 10713 ;;		Nothing
 10714 ;; This function is called by:
 10715 ;;		_LIN_handler
 10716 ;;		_LIN_getPacket
 10717 ;; This function uses a non-reentrant model
 10718 ;;
 10719                           
 10720     09EA                     _memset:	
 10721                           ;psect for function _memset
 10722                           
 10723                           
 10724                           ;incstack = 0
 10725                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
 10726                           ;memset@dest stored from wreg
 10727     09EA  00D4               	movwf	memset@dest
 10728     09EB  0854               	movf	memset@dest,w
 10729     09EC  00D3               	movwf	memset@p
 10730     09ED                     l4388:
 10731     09ED  3001               	movlw	1
 10732     09EE  02D0               	subwf	memset@n,f
 10733     09EF  3000               	movlw	0
 10734     09F0  3BD1               	subwfb	memset@n+1,f
 10735     09F1  0A50               	incf	memset@n,w
 10736     09F2  1903               	btfsc	3,2
 10737     09F3  0A51               	incf	memset@n+1,w
 10738     09F4  1903               	btfsc	3,2
 10739     09F5  0008               	return
 10740     09F6  0853               	movf	memset@p,w
 10741     09F7  0086               	movwf	6
 10742     09F8  0187               	clrf	7
 10743     09F9  084E               	movf	memset@c,w
 10744     09FA  0081               	movwf	1
 10745     09FB  3001               	movlw	1
 10746     09FC  00D2               	movwf	??_memset
 10747     09FD  0852               	movf	??_memset,w
 10748     09FE  07D3               	addwf	memset@p,f
 10749     09FF  29ED               	goto	l4388
 10750     0A00                     __end_of_memset:
 10751                           
 10752                           	psect	text29
 10753     0B53                     __ptext29:	
 10754 ;; *************** function _EFuseInit *****************
 10755 ;; Defined at:
 10756 ;;		line 247 in file "efuse.c"
 10757 ;; Parameters:    Size  Location     Type
 10758 ;;		None
 10759 ;; Auto vars:     Size  Location     Type
 10760 ;;		None
 10761 ;; Return value:  Size  Location     Type
 10762 ;;                  1    wreg      void 
 10763 ;; Registers used:
 10764 ;;		wreg, status,2, status,0, pclath, cstack
 10765 ;; Tracked objects:
 10766 ;;		On entry : 3D/2
 10767 ;;		On exit  : 3F/0
 10768 ;;		Unchanged: 0/0
 10769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10773 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10774 ;;Total ram usage:        0 bytes
 10775 ;; Hardware stack levels used: 1
 10776 ;; Hardware stack levels required when called: 7
 10777 ;; This function calls:
 10778 ;;		_CmdOutput
 10779 ;;		_TMR0_Reload
 10780 ;; This function is called by:
 10781 ;;		_processLIN
 10782 ;;		_main
 10783 ;; This function uses a non-reentrant model
 10784 ;;
 10785                           
 10786     0B53                     _EFuseInit:	
 10787                           ;psect for function _EFuseInit
 10788                           
 10789                           
 10790                           ;efuse.c: 249:     CmdOutput(OUTPUT_OFF);
 10791                           
 10792                           ;incstack = 0
 10793                           ; Regs used in _EFuseInit: [wreg+status,2+status,0+pclath+cstack]
 10794     0B53  3000               	movlw	0
 10795     0B54  318D  25EC  318B   	fcall	_CmdOutput
 10796                           
 10797                           ;efuse.c: 252:     CM2CON0bits.C2EN = 1;
 10798     0B57  0153               	movlb	19	; select bank19
 10799     0B58  1794               	bsf	20,7	;volatile
 10800                           
 10801                           ;efuse.c: 253:     CLC1GLS1bits.LC1G2D2T = 1;
 10802     0B59  017C               	movlb	60	; select bank60
 10803     0B5A  1597               	bsf	23,3	;volatile
 10804                           
 10805                           ;efuse.c: 254:     PIR2bits.C2IF = 0;
 10806     0B5B  014E               	movlb	14	; select bank14
 10807     0B5C  108E               	bcf	14,1	;volatile
 10808                           
 10809                           ;efuse.c: 256:     DAC1CON1bits.DAC1R = dac_i_hw_trip;
 10810     0B5D  0152               	movlb	18	; select bank18
 10811     0B5E  080F               	movf	15,w	;volatile
 10812     0B5F  0140               	movlb	0	; select bank0
 10813     0B60  066B               	xorwf	_dac_i_hw_trip,w
 10814     0B61  39E0               	andlw	-32
 10815     0B62  066B               	xorwf	_dac_i_hw_trip,w
 10816     0B63  0152               	movlb	18	; select bank18
 10817     0B64  008F               	movwf	15	;volatile
 10818                           
 10819                           ;efuse.c: 257:     _delay((unsigned long)((20)*(32000000/4000000.0)));
 10820     0B65  3035               	movlw	53
 10821     0B66                     u3497:
 10822     0B66  0B89               	decfsz	9,f
 10823     0B67  2B66               	goto	u3497
 10824     0B68  0000               	nop
 10825                           
 10826                           ;efuse.c: 260:     TMR0_Reload();
 10827     0B69  3188  2088         	fcall	_TMR0_Reload
 10828                           
 10829                           ;efuse.c: 261:     PIR0bits.TMR0IF = 0;
 10830     0B6B  014E               	movlb	14	; select bank14
 10831     0B6C  128C               	bcf	12,5	;volatile
 10832                           
 10833                           ;efuse.c: 262:     PIR5bits.CLC2IF = 0;
 10834     0B6D  1291               	bcf	17,5	;volatile
 10835                           
 10836                           ;efuse.c: 263:     PIR2bits.C1IF = 0;
 10837     0B6E  100E               	bcf	14,0	;volatile
 10838                           
 10839                           ;efuse.c: 264:     PIR2bits.C2IF = 0;
 10840     0B6F  108E               	bcf	14,1	;volatile
 10841                           
 10842                           ;efuse.c: 266:     ticks_1ms = 0;
 10843     0B70  0141               	movlb	1	; select bank1
 10844     0B71  01B6               	clrf	_ticks_1ms^(0+128)
 10845     0B72  01B7               	clrf	(_ticks_1ms+1)^(0+128)
 10846                           
 10847                           ;efuse.c: 268:     triggerType = TRIGGER_EDGE;
 10848     0B73  0140               	movlb	0	; select bank0
 10849     0B74  01B1               	clrf	_triggerType
 10850     0B75  0008               	return
 10851     0B76                     __end_of_EFuseInit:
 10852                           
 10853                           	psect	text30
 10854     0888                     __ptext30:	
 10855 ;; *************** function _TMR0_Reload *****************
 10856 ;; Defined at:
 10857 ;;		line 129 in file "mcc_generated_files/tmr0.c"
 10858 ;; Parameters:    Size  Location     Type
 10859 ;;		None
 10860 ;; Auto vars:     Size  Location     Type
 10861 ;;		None
 10862 ;; Return value:  Size  Location     Type
 10863 ;;                  1    wreg      void 
 10864 ;; Registers used:
 10865 ;;		wreg
 10866 ;; Tracked objects:
 10867 ;;		On entry : 0/12
 10868 ;;		On exit  : 3F/B
 10869 ;;		Unchanged: 0/0
 10870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10874 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10875 ;;Total ram usage:        0 bytes
 10876 ;; Hardware stack levels used: 1
 10877 ;; Hardware stack levels required when called: 5
 10878 ;; This function calls:
 10879 ;;		Nothing
 10880 ;; This function is called by:
 10881 ;;		_EFuseInit
 10882 ;; This function uses a non-reentrant model
 10883 ;;
 10884                           
 10885     0888                     _TMR0_Reload:	
 10886                           ;psect for function _TMR0_Reload
 10887                           
 10888                           
 10889                           ;mcc_generated_files/tmr0.c: 132:     TMR0H = timer0ReloadVal16bit >> 8;
 10890                           
 10891                           ;incstack = 0
 10892                           ; Regs used in _TMR0_Reload: [wreg]
 10893     0888  0871               	movf	_timer0ReloadVal16bit+1,w	;volatile
 10894     0889  014B               	movlb	11	; select bank11
 10895     088A  009D               	movwf	29	;volatile
 10896                           
 10897                           ;mcc_generated_files/tmr0.c: 133:     TMR0L = (uint8_t) timer0ReloadVal16bit;
 10898     088B  0870               	movf	_timer0ReloadVal16bit,w	;volatile
 10899     088C  009C               	movwf	28	;volatile
 10900     088D  0008               	return
 10901     088E                     __end_of_TMR0_Reload:
 10902                           
 10903                           	psect	text31
 10904     0883                     __ptext31:	
 10905 ;; *************** function _LIN_stopTimer *****************
 10906 ;; Defined at:
 10907 ;;		line 304 in file "mcc_generated_files/LINDrivers/lin_slave.c"
 10908 ;; Parameters:    Size  Location     Type
 10909 ;;		None
 10910 ;; Auto vars:     Size  Location     Type
 10911 ;;		None
 10912 ;; Return value:  Size  Location     Type
 10913 ;;                  1    wreg      void 
 10914 ;; Registers used:
 10915 ;;		status,2
 10916 ;; Tracked objects:
 10917 ;;		On entry : 0/2
 10918 ;;		On exit  : 3F/0
 10919 ;;		Unchanged: 0/0
 10920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10924 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10925 ;;Total ram usage:        0 bytes
 10926 ;; Hardware stack levels used: 1
 10927 ;; Hardware stack levels required when called: 5
 10928 ;; This function calls:
 10929 ;;		Nothing
 10930 ;; This function is called by:
 10931 ;;		_LIN_init
 10932 ;;		_LIN_handler
 10933 ;; This function uses a non-reentrant model
 10934 ;;
 10935                           
 10936     0883                     _LIN_stopTimer:	
 10937                           ;psect for function _LIN_stopTimer
 10938                           
 10939                           
 10940                           ;mcc_generated_files/LINDrivers/lin_slave.c: 305:     __nop();
 10941                           
 10942                           ;incstack = 0
 10943                           ; Regs used in _LIN_stopTimer: [status,2]
 10944     0883  0000               	nop
 10945                           
 10946                           ;mcc_generated_files/LINDrivers/lin_slave.c: 307:     CountCallBack = 0;
 10947     0884  0140               	movlb	0	; select bank0
 10948     0885  01A9               	clrf	_CountCallBack	;volatile
 10949                           
 10950                           ;mcc_generated_files/LINDrivers/lin_slave.c: 308:     LIN_timerRunning = 0;
 10951     0886  01AA               	clrf	_LIN_timerRunning
 10952     0887  0008               	return
 10953     0888                     __end_of_LIN_stopTimer:
 10954                           
 10955                           	psect	text32
 10956     0937                     __ptext32:	
 10957 ;; *************** function _LIN_startTimer *****************
 10958 ;; Defined at:
 10959 ;;		line 283 in file "mcc_generated_files/LINDrivers/lin_slave.c"
 10960 ;; Parameters:    Size  Location     Type
 10961 ;;  timeout         1    wreg     unsigned char 
 10962 ;; Auto vars:     Size  Location     Type
 10963 ;;  timeout         1    2[BANK0 ] unsigned char 
 10964 ;; Return value:  Size  Location     Type
 10965 ;;                  1    wreg      void 
 10966 ;; Registers used:
 10967 ;;		wreg, status,2, status,0, pclath, cstack
 10968 ;; Tracked objects:
 10969 ;;		On entry : 3F/0
 10970 ;;		On exit  : 3F/0
 10971 ;;		Unchanged: 0/0
 10972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10974 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10976 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10977 ;;Total ram usage:        1 bytes
 10978 ;; Hardware stack levels used: 1
 10979 ;; Hardware stack levels required when called: 6
 10980 ;; This function calls:
 10981 ;;		_TMR0_WriteTimer
 10982 ;; This function is called by:
 10983 ;;		_LIN_handler
 10984 ;; This function uses a non-reentrant model
 10985 ;;
 10986                           
 10987     0937                     _LIN_startTimer:	
 10988                           ;psect for function _LIN_startTimer
 10989                           
 10990                           
 10991                           ;incstack = 0
 10992                           ; Regs used in _LIN_startTimer: [wreg+status,2+status,0+pclath+cstack]
 10993                           ;LIN_startTimer@timeout stored from wreg
 10994     0937  00D0               	movwf	LIN_startTimer@timeout
 10995                           
 10996                           ;mcc_generated_files/LINDrivers/lin_slave.c: 284:     LIN_timeout = timeout;
 10997     0938  0850               	movf	LIN_startTimer@timeout,w
 10998     0939  00E9               	movwf	_LIN_timeout
 10999                           
 11000                           ;mcc_generated_files/LINDrivers/lin_slave.c: 285:     TMR0_WriteTimer(0);
 11001     093A  3000               	movlw	0
 11002     093B  00CE               	movwf	TMR0_WriteTimer@timerVal
 11003     093C  00CF               	movwf	TMR0_WriteTimer@timerVal+1
 11004     093D  3188  20A8         	fcall	_TMR0_WriteTimer
 11005                           
 11006                           ;mcc_generated_files/LINDrivers/lin_slave.c: 286:     __nop();
 11007     093F  0000               	nop
 11008                           
 11009                           ;mcc_generated_files/LINDrivers/lin_slave.c: 287:     LIN_timerRunning = 1;
 11010     0940  0140               	movlb	0	; select bank0
 11011     0941  01AA               	clrf	_LIN_timerRunning
 11012     0942  0AAA               	incf	_LIN_timerRunning,f
 11013     0943  0008               	return
 11014     0944                     __end_of_LIN_startTimer:
 11015                           
 11016                           	psect	text33
 11017     08A8                     __ptext33:	
 11018 ;; *************** function _TMR0_WriteTimer *****************
 11019 ;; Defined at:
 11020 ;;		line 122 in file "mcc_generated_files/tmr0.c"
 11021 ;; Parameters:    Size  Location     Type
 11022 ;;  timerVal        2    0[BANK0 ] unsigned short 
 11023 ;; Auto vars:     Size  Location     Type
 11024 ;;		None
 11025 ;; Return value:  Size  Location     Type
 11026 ;;                  1    wreg      void 
 11027 ;; Registers used:
 11028 ;;		wreg
 11029 ;; Tracked objects:
 11030 ;;		On entry : 3F/0
 11031 ;;		On exit  : 3F/B
 11032 ;;		Unchanged: 0/0
 11033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11034 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11037 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11038 ;;Total ram usage:        2 bytes
 11039 ;; Hardware stack levels used: 1
 11040 ;; Hardware stack levels required when called: 5
 11041 ;; This function calls:
 11042 ;;		Nothing
 11043 ;; This function is called by:
 11044 ;;		_LIN_startTimer
 11045 ;; This function uses a non-reentrant model
 11046 ;;
 11047                           
 11048     08A8                     _TMR0_WriteTimer:	
 11049                           ;psect for function _TMR0_WriteTimer
 11050                           
 11051                           
 11052                           ;mcc_generated_files/tmr0.c: 122: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr0.c: 123: {;mcc_generated_files/tmr0.c: 125:     TMR0H = timerVal >> 8;
 11053                           
 11054                           ;incstack = 0
 11055                           ; Regs used in _TMR0_WriteTimer: [wreg]
 11056     08A8  084F               	movf	TMR0_WriteTimer@timerVal+1,w
 11057     08A9  014B               	movlb	11	; select bank11
 11058     08AA  009D               	movwf	29	;volatile
 11059                           
 11060                           ;mcc_generated_files/tmr0.c: 126:     TMR0L = (uint8_t) timerVal;
 11061     08AB  0140               	movlb	0	; select bank0
 11062     08AC  084E               	movf	TMR0_WriteTimer@timerVal,w
 11063     08AD  014B               	movlb	11	; select bank11
 11064     08AE  009C               	movwf	28	;volatile
 11065     08AF  0008               	return
 11066     08B0                     __end_of_TMR0_WriteTimer:
 11067                           
 11068                           	psect	text34
 11069     0F13                     __ptext34:	
 11070 ;; *************** function _LIN_queuePacket *****************
 11071 ;; Defined at:
 11072 ;;		line 66 in file "mcc_generated_files/LINDrivers/lin_slave.c"
 11073 ;; Parameters:    Size  Location     Type
 11074 ;;  cmd             1    wreg     unsigned char 
 11075 ;; Auto vars:     Size  Location     Type
 11076 ;;  cmd             1   16[BANK0 ] unsigned char 
 11077 ;;  i               1   17[BANK0 ] unsigned char 
 11078 ;;  tempSchedule    2   18[BANK0 ] PTR const struct .
 11079 ;;		 -> NULL(0), scheduleTable(140), 
 11080 ;; Return value:  Size  Location     Type
 11081 ;;                  1    wreg      void 
 11082 ;; Registers used:
 11083 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11084 ;; Tracked objects:
 11085 ;;		On entry : 3F/1
 11086 ;;		On exit  : 3F/E
 11087 ;;		Unchanged: 0/0
 11088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11090 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11091 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11092 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11093 ;;Total ram usage:        7 bytes
 11094 ;; Hardware stack levels used: 1
 11095 ;; Hardware stack levels required when called: 7
 11096 ;; This function calls:
 11097 ;;		_LIN_getChecksum
 11098 ;;		_LIN_sendPacket
 11099 ;;		_memcpy
 11100 ;; This function is called by:
 11101 ;;		_LIN_handler
 11102 ;; This function uses a non-reentrant model
 11103 ;;
 11104                           
 11105     0F13                     _LIN_queuePacket:	
 11106                           ;psect for function _LIN_queuePacket
 11107                           
 11108                           
 11109                           ;incstack = 0
 11110                           ; Regs used in _LIN_queuePacket: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11111                           ;LIN_queuePacket@cmd stored from wreg
 11112     0F13  0140               	movlb	0	; select bank0
 11113     0F14  00DE               	movwf	LIN_queuePacket@cmd
 11114                           
 11115                           ;mcc_generated_files/LINDrivers/lin_slave.c: 67:     const lin_rx_cmd_t* tempSchedule = 
      +                          LIN_rxCommand;
 11116     0F15  0141               	movlb	1	; select bank1
 11117     0F16  086E               	movf	(_LIN_rxCommand+1)^(0+128),w
 11118     0F17  0140               	movlb	0	; select bank0
 11119     0F18  00E1               	movwf	LIN_queuePacket@tempSchedule+1
 11120     0F19  0141               	movlb	1	; select bank1
 11121     0F1A  086D               	movf	_LIN_rxCommand^(0+128),w
 11122     0F1B  0140               	movlb	0	; select bank0
 11123     0F1C  00E0               	movwf	LIN_queuePacket@tempSchedule
 11124                           
 11125                           ;mcc_generated_files/LINDrivers/lin_slave.c: 69:     cmd &= 0x3F;
 11126     0F1D  303F               	movlw	63
 11127     0F1E  00DB               	movwf	??_LIN_queuePacket
 11128     0F1F  085B               	movf	??_LIN_queuePacket,w
 11129     0F20  05DE               	andwf	LIN_queuePacket@cmd,f
 11130                           
 11131                           ;mcc_generated_files/LINDrivers/lin_slave.c: 70:     for(uint8_t i = 0; i < LIN_rxComman
      +                          dLength; i++){
 11132     0F21  01DF               	clrf	LIN_queuePacket@i
 11133     0F22                     l5304:
 11134     0F22  086F               	movf	_LIN_rxCommandLength,w
 11135     0F23  025F               	subwf	LIN_queuePacket@i,w
 11136     0F24  1803               	btfsc	3,0
 11137     0F25  2F37               	goto	l5306
 11138                           
 11139                           ;mcc_generated_files/LINDrivers/lin_slave.c: 71:         if(cmd == tempSchedule->cmd){
 11140     0F26  0860               	movf	LIN_queuePacket@tempSchedule,w
 11141     0F27  0084               	movwf	4
 11142     0F28  0861               	movf	LIN_queuePacket@tempSchedule+1,w
 11143     0F29  0085               	movwf	5
 11144     0F2A  0800               	movf	0,w	;code access
 11145     0F2B  065E               	xorwf	LIN_queuePacket@cmd,w
 11146     0F2C  1903               	btfsc	3,2
 11147     0F2D  2F37               	goto	l5306
 11148                           
 11149                           ;mcc_generated_files/LINDrivers/lin_slave.c: 74:         tempSchedule++;
 11150     0F2E  3005               	movlw	5
 11151     0F2F  07E0               	addwf	LIN_queuePacket@tempSchedule,f
 11152     0F30  3000               	movlw	0
 11153     0F31  3DE1               	addwfc	LIN_queuePacket@tempSchedule+1,f
 11154                           
 11155                           ;mcc_generated_files/LINDrivers/lin_slave.c: 75:     }
 11156     0F32  3001               	movlw	1
 11157     0F33  00DB               	movwf	??_LIN_queuePacket
 11158     0F34  085B               	movf	??_LIN_queuePacket,w
 11159     0F35  07DF               	addwf	LIN_queuePacket@i,f
 11160     0F36  2F22               	goto	l5304
 11161     0F37                     l5306:
 11162                           
 11163                           ;mcc_generated_files/LINDrivers/lin_slave.c: 77:     LIN_packet.type = tempSchedule->typ
      +                          e;
 11164     0F37  0861               	movf	LIN_queuePacket@tempSchedule+1,w
 11165     0F38  00DC               	movwf	??_LIN_queuePacket+1
 11166     0F39  0860               	movf	LIN_queuePacket@tempSchedule,w
 11167     0F3A  00DB               	movwf	??_LIN_queuePacket
 11168     0F3B  3001               	movlw	1
 11169     0F3C  075B               	addwf	??_LIN_queuePacket,w
 11170     0F3D  0084               	movwf	4
 11171     0F3E  085C               	movf	??_LIN_queuePacket+1,w
 11172     0F3F  1803               	skipnc
 11173     0F40  0A5C               	incf	??_LIN_queuePacket+1,w
 11174     0F41  0085               	movwf	5
 11175     0F42  0800               	movf	0,w	;code access
 11176     0F43  0141               	movlb	1	; select bank1
 11177     0F44  00C2               	movwf	(_LIN_packet^(0+128)+10)
 11178                           
 11179                           ;mcc_generated_files/LINDrivers/lin_slave.c: 78:     LIN_packet.length = tempSchedule->l
      +                          ength;
 11180     0F45  0140               	movlb	0	; select bank0
 11181     0F46  0861               	movf	LIN_queuePacket@tempSchedule+1,w
 11182     0F47  00DC               	movwf	??_LIN_queuePacket+1
 11183     0F48  0860               	movf	LIN_queuePacket@tempSchedule,w
 11184     0F49  00DB               	movwf	??_LIN_queuePacket
 11185     0F4A  3002               	movlw	2
 11186     0F4B  075B               	addwf	??_LIN_queuePacket,w
 11187     0F4C  0084               	movwf	4
 11188     0F4D  085C               	movf	??_LIN_queuePacket+1,w
 11189     0F4E  1803               	skipnc
 11190     0F4F  0A5C               	incf	??_LIN_queuePacket+1,w
 11191     0F50  0085               	movwf	5
 11192     0F51  0800               	movf	0,w	;code access
 11193     0F52  0141               	movlb	1	; select bank1
 11194     0F53  00C3               	movwf	(_LIN_packet^(0+128)+11)
 11195                           
 11196                           ;mcc_generated_files/LINDrivers/lin_slave.c: 82:     memcpy(LIN_packet.data, tempSchedul
      +                          e->data, LIN_packet.length);
 11197     0F54  30B9               	movlw	low (_LIN_packet+1)
 11198     0F55  0140               	movlb	0	; select bank0
 11199     0F56  00CE               	movwf	memcpy@d1
 11200     0F57  3000               	movlw	high (_LIN_packet+1)
 11201     0F58  00CF               	movwf	memcpy@d1+1
 11202     0F59  0861               	movf	LIN_queuePacket@tempSchedule+1,w
 11203     0F5A  00DC               	movwf	??_LIN_queuePacket+1
 11204     0F5B  0860               	movf	LIN_queuePacket@tempSchedule,w
 11205     0F5C  00DB               	movwf	??_LIN_queuePacket
 11206     0F5D  3003               	movlw	3
 11207     0F5E  075B               	addwf	??_LIN_queuePacket,w
 11208     0F5F  0084               	movwf	4
 11209     0F60  085C               	movf	??_LIN_queuePacket+1,w
 11210     0F61  1803               	skipnc
 11211     0F62  0A5C               	incf	??_LIN_queuePacket+1,w
 11212     0F63  0085               	movwf	5
 11213     0F64  3F00               	moviw [0]fsr0
 11214     0F65  00D0               	movwf	memcpy@s1
 11215     0F66  3F01               	moviw [1]fsr0
 11216     0F67  00D1               	movwf	memcpy@s1+1
 11217     0F68  0141               	movlb	1	; select bank1
 11218     0F69  0843               	movf	(_LIN_packet^(0+128)+11),w
 11219     0F6A  0140               	movlb	0	; select bank0
 11220     0F6B  00D2               	movwf	memcpy@n
 11221     0F6C  01D3               	clrf	memcpy@n+1
 11222     0F6D  1BD2               	btfsc	memcpy@n,7
 11223     0F6E  03D3               	decf	memcpy@n+1,f
 11224     0F6F  318B  2376  318F   	fcall	_memcpy
 11225                           
 11226                           ;mcc_generated_files/LINDrivers/lin_slave.c: 85:     LIN_packet.checksum = LIN_getChecks
      +                          um(LIN_packet.length, LIN_packet.PID, LIN_packet.data);
 11227     0F72  0141               	movlb	1	; select bank1
 11228     0F73  0838               	movf	_LIN_packet^(0+128),w
 11229     0F74  0140               	movlb	0	; select bank0
 11230     0F75  00CE               	movwf	LIN_getChecksum@pid
 11231     0F76  30B9               	movlw	(low ((_LIN_packet| 0+1)))& (0+255)
 11232     0F77  00CF               	movwf	LIN_getChecksum@data
 11233     0F78  0141               	movlb	1	; select bank1
 11234     0F79  0843               	movf	(_LIN_packet^(0+128)+11),w
 11235     0F7A  318C  2426  318F   	fcall	_LIN_getChecksum
 11236     0F7D  0141               	movlb	1	; select bank1
 11237     0F7E  00C1               	movwf	(_LIN_packet^(0+128)+9)
 11238                           
 11239                           ;mcc_generated_files/LINDrivers/lin_slave.c: 86:     LIN_sendPacket(LIN_packet.length, L
      +                          IN_packet.PID, LIN_packet.data);
 11240     0F7F  0838               	movf	_LIN_packet^(0+128),w
 11241     0F80  0140               	movlb	0	; select bank0
 11242     0F81  00D6               	movwf	LIN_sendPacket@pid
 11243     0F82  30B9               	movlw	(low ((_LIN_packet| 0+1)))& (0+255)
 11244     0F83  00D7               	movwf	LIN_sendPacket@data
 11245     0F84  0141               	movlb	1	; select bank1
 11246     0F85  0843               	movf	(_LIN_packet^(0+128)+11),w
 11247     0F86  318A  22EC         	fcall	_LIN_sendPacket
 11248     0F88  0008               	return
 11249     0F89                     __end_of_LIN_queuePacket:
 11250                           
 11251                           	psect	text35
 11252     0B76                     __ptext35:	
 11253 ;; *************** function _memcpy *****************
 11254 ;; Defined at:
 11255 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\memcpy.c"
 11256 ;; Parameters:    Size  Location     Type
 11257 ;;  d1              2    0[BANK0 ] PTR void 
 11258 ;;		 -> LIN_packet(13), processLIN@tempRxData(8), 
 11259 ;;  s1              2    2[BANK0 ] PTR const void 
 11260 ;;		 -> LIN_packet$data(8), LIN_packet(13), LIN_DIAGNOSTIC_Data(8), LIN_TEMPERATURE_RISE_SA_Data(2), 
 11261 ;;		 -> LIN_TEMPERATURE_RISE_JS_Data(2), LIN_JUNCTION_TEMPERATURE_Data(2), LIN_HEATSINK_TEMPERATURE_Data(2), LIN_AMBIENT
      +_TEMPERATURE_Data(2), 
 11262 ;;		 -> LIN_CURRENT_SENSE_OFFSET_Data(2), LIN_ADC_CURRENT_SENSE_CORRECTED_Data(2), LIN_ADC_TEMP_SENSE_Data(2), LIN_ADC_C
      +URRENT_SENSE_UNCORRECTED_Data(2), 
 11263 ;;		 -> LIN_ADC_VCC_SENSE_Data(2), LIN_OVER_TEMP_FAULT_Data(1), LIN_UVLO_FAULT_Data(1), LIN_OVER_CURRENT_FAULT_Data(1), 
 11264 ;;		 -> LIN_GET_TRIGGER_TYPE_Data(1), LIN_OUTPUT_STATE_Data(1), LIN_TCC_SAMPLE_TIME_Data(2), LIN_REDUCED_DRIVE_TIME_Data
      +(1), 
 11265 ;;		 -> LIN_B1_COEF_Data(1), LIN_DAC_I_HW_TRIP_Data(1), LIN_ISENSE_MAX_Data(2), LIN_CURRENT2COUNTS_SQUARED_Data(2), 
 11266 ;;		 -> LIN_FACTOR_RDSON_RTHSA_Data(2), LIN_FACTOR_RDSON_RTHJS_Data(2), LIN_TJ_LIMIT_Data(1), LIN_ENTER_SLEEP_MODE_Data(
      +1), 
 11267 ;;		 -> LIN_TRIGGER_TYPE_Data(1), LIN_COMMAND_Data(1), 
 11268 ;;  n               2    4[BANK0 ] unsigned int 
 11269 ;; Auto vars:     Size  Location     Type
 11270 ;;  s               2    9[BANK0 ] PTR const unsigned char 
 11271 ;;		 -> LIN_packet$data(8), LIN_packet(13), LIN_DIAGNOSTIC_Data(8), LIN_TEMPERATURE_RISE_SA_Data(2), 
 11272 ;;		 -> LIN_TEMPERATURE_RISE_JS_Data(2), LIN_JUNCTION_TEMPERATURE_Data(2), LIN_HEATSINK_TEMPERATURE_Data(2), LIN_AMBIENT
      +_TEMPERATURE_Data(2), 
 11273 ;;		 -> LIN_CURRENT_SENSE_OFFSET_Data(2), LIN_ADC_CURRENT_SENSE_CORRECTED_Data(2), LIN_ADC_TEMP_SENSE_Data(2), LIN_ADC_C
      +URRENT_SENSE_UNCORRECTED_Data(2), 
 11274 ;;		 -> LIN_ADC_VCC_SENSE_Data(2), LIN_OVER_TEMP_FAULT_Data(1), LIN_UVLO_FAULT_Data(1), LIN_OVER_CURRENT_FAULT_Data(1), 
 11275 ;;		 -> LIN_GET_TRIGGER_TYPE_Data(1), LIN_OUTPUT_STATE_Data(1), LIN_TCC_SAMPLE_TIME_Data(2), LIN_REDUCED_DRIVE_TIME_Data
      +(1), 
 11276 ;;		 -> LIN_B1_COEF_Data(1), LIN_DAC_I_HW_TRIP_Data(1), LIN_ISENSE_MAX_Data(2), LIN_CURRENT2COUNTS_SQUARED_Data(2), 
 11277 ;;		 -> LIN_FACTOR_RDSON_RTHSA_Data(2), LIN_FACTOR_RDSON_RTHJS_Data(2), LIN_TJ_LIMIT_Data(1), LIN_ENTER_SLEEP_MODE_Data(
      +1), 
 11278 ;;		 -> LIN_TRIGGER_TYPE_Data(1), LIN_COMMAND_Data(1), 
 11279 ;;  d               2    7[BANK0 ] PTR unsigned char 
 11280 ;;		 -> LIN_packet(13), processLIN@tempRxData(8), 
 11281 ;;  tmp             1    6[BANK0 ] unsigned char 
 11282 ;; Return value:  Size  Location     Type
 11283 ;;                  2    0[BANK0 ] PTR void 
 11284 ;; Registers used:
 11285 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11286 ;; Tracked objects:
 11287 ;;		On entry : 3F/0
 11288 ;;		On exit  : 3F/0
 11289 ;;		Unchanged: 0/0
 11290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11291 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11292 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11294 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11295 ;;Total ram usage:       11 bytes
 11296 ;; Hardware stack levels used: 1
 11297 ;; Hardware stack levels required when called: 5
 11298 ;; This function calls:
 11299 ;;		Nothing
 11300 ;; This function is called by:
 11301 ;;		_LIN_queuePacket
 11302 ;;		_LIN_getPacket
 11303 ;; This function uses a non-reentrant model
 11304 ;;
 11305                           
 11306     0B76                     _memcpy:	
 11307                           ;psect for function _memcpy
 11308                           
 11309                           
 11310                           ;incstack = 0
 11311                           ; Regs used in _memcpy: [wreg+fsr1l+fsr1h+status,2+status,0]
 11312     0B76  0851               	movf	memcpy@s1+1,w
 11313     0B77  00D8               	movwf	memcpy@s+1
 11314     0B78  0850               	movf	memcpy@s1,w
 11315     0B79  00D7               	movwf	memcpy@s
 11316     0B7A  084F               	movf	memcpy@d1+1,w
 11317     0B7B  00D6               	movwf	memcpy@d+1
 11318     0B7C  084E               	movf	memcpy@d1,w
 11319     0B7D  00D5               	movwf	memcpy@d
 11320     0B7E                     l5202:
 11321     0B7E  3001               	movlw	1
 11322     0B7F  02D2               	subwf	memcpy@n,f
 11323     0B80  3000               	movlw	0
 11324     0B81  3BD3               	subwfb	memcpy@n+1,f
 11325     0B82  0A52               	incf	memcpy@n,w
 11326     0B83  1903               	btfsc	3,2
 11327     0B84  0A53               	incf	memcpy@n+1,w
 11328     0B85  1903               	btfsc	3,2
 11329     0B86  0008               	return
 11330     0B87  0857               	movf	memcpy@s,w
 11331     0B88  0086               	movwf	6
 11332     0B89  0858               	movf	memcpy@s+1,w
 11333     0B8A  0087               	movwf	7
 11334     0B8B  0801               	movf	1,w
 11335     0B8C  00D4               	movwf	memcpy@tmp
 11336     0B8D  3001               	movlw	1
 11337     0B8E  07D7               	addwf	memcpy@s,f
 11338     0B8F  3000               	movlw	0
 11339     0B90  3DD8               	addwfc	memcpy@s+1,f
 11340     0B91  0855               	movf	memcpy@d,w
 11341     0B92  0086               	movwf	6
 11342     0B93  0856               	movf	memcpy@d+1,w
 11343     0B94  0087               	movwf	7
 11344     0B95  0854               	movf	memcpy@tmp,w
 11345     0B96  0081               	movwf	1
 11346     0B97  3001               	movlw	1
 11347     0B98  07D5               	addwf	memcpy@d,f
 11348     0B99  3000               	movlw	0
 11349     0B9A  3DD6               	addwfc	memcpy@d+1,f
 11350     0B9B  2B7E               	goto	l5202
 11351     0B9C                     __end_of_memcpy:
 11352                           
 11353                           	psect	text36
 11354     0AEC                     __ptext36:	
 11355 ;; *************** function _LIN_sendPacket *****************
 11356 ;; Defined at:
 11357 ;;		line 192 in file "mcc_generated_files/LINDrivers/lin_slave.c"
 11358 ;; Parameters:    Size  Location     Type
 11359 ;;  length          1    wreg     unsigned char 
 11360 ;;  pid             1    8[BANK0 ] unsigned char 
 11361 ;;  data            1    9[BANK0 ] PTR unsigned char 
 11362 ;;		 -> LIN_packet(13), 
 11363 ;; Auto vars:     Size  Location     Type
 11364 ;;  length          1   11[BANK0 ] unsigned char 
 11365 ;;  i               1   12[BANK0 ] unsigned char 
 11366 ;; Return value:  Size  Location     Type
 11367 ;;                  1    wreg      void 
 11368 ;; Registers used:
 11369 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11370 ;; Tracked objects:
 11371 ;;		On entry : 3F/1
 11372 ;;		On exit  : 3F/E
 11373 ;;		Unchanged: 0/0
 11374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11375 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11376 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11377 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11378 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11379 ;;Total ram usage:        5 bytes
 11380 ;; Hardware stack levels used: 1
 11381 ;; Hardware stack levels required when called: 6
 11382 ;; This function calls:
 11383 ;;		_EUSART1_Write
 11384 ;;		_LIN_getChecksum
 11385 ;; This function is called by:
 11386 ;;		_LIN_queuePacket
 11387 ;; This function uses a non-reentrant model
 11388 ;;
 11389                           
 11390     0AEC                     _LIN_sendPacket:	
 11391                           ;psect for function _LIN_sendPacket
 11392                           
 11393                           
 11394                           ;incstack = 0
 11395                           ; Regs used in _LIN_sendPacket: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11396                           ;LIN_sendPacket@length stored from wreg
 11397     0AEC  0140               	movlb	0	; select bank0
 11398     0AED  00D9               	movwf	LIN_sendPacket@length
 11399                           
 11400                           ;mcc_generated_files/LINDrivers/lin_slave.c: 195:     for(uint8_t i = 0; i < length; i++
      +                          ){
 11401     0AEE  01DA               	clrf	LIN_sendPacket@i
 11402     0AEF                     l4460:
 11403     0AEF  0859               	movf	LIN_sendPacket@length,w
 11404     0AF0  025A               	subwf	LIN_sendPacket@i,w
 11405     0AF1  1803               	btfsc	3,0
 11406     0AF2  2B03               	goto	l4462
 11407                           
 11408                           ;mcc_generated_files/LINDrivers/lin_slave.c: 196:         EUSART1_Write(*(data + i));
 11409     0AF3  085A               	movf	LIN_sendPacket@i,w
 11410     0AF4  0757               	addwf	LIN_sendPacket@data,w
 11411     0AF5  00D8               	movwf	??_LIN_sendPacket
 11412     0AF6  0858               	movf	??_LIN_sendPacket,w
 11413     0AF7  0086               	movwf	6
 11414     0AF8  0187               	clrf	7
 11415     0AF9  0801               	movf	1,w
 11416     0AFA  318A  22CA  318A   	fcall	_EUSART1_Write
 11417                           
 11418                           ;mcc_generated_files/LINDrivers/lin_slave.c: 197:     }
 11419     0AFD  3001               	movlw	1
 11420     0AFE  0140               	movlb	0	; select bank0
 11421     0AFF  00D8               	movwf	??_LIN_sendPacket
 11422     0B00  0858               	movf	??_LIN_sendPacket,w
 11423     0B01  07DA               	addwf	LIN_sendPacket@i,f
 11424     0B02  2AEF               	goto	l4460
 11425     0B03                     l4462:
 11426                           
 11427                           ;mcc_generated_files/LINDrivers/lin_slave.c: 199:     EUSART1_Write(LIN_getChecksum(leng
      +                          th, pid, data));
 11428     0B03  0856               	movf	LIN_sendPacket@pid,w
 11429     0B04  00CE               	movwf	LIN_getChecksum@pid
 11430     0B05  0857               	movf	LIN_sendPacket@data,w
 11431     0B06  00CF               	movwf	LIN_getChecksum@data
 11432     0B07  0859               	movf	LIN_sendPacket@length,w
 11433     0B08  318C  2426  318A   	fcall	_LIN_getChecksum
 11434     0B0B  318A  22CA         	fcall	_EUSART1_Write
 11435     0B0D  0008               	return
 11436     0B0E                     __end_of_LIN_sendPacket:
 11437                           
 11438                           	psect	text37
 11439     0C26                     __ptext37:	
 11440 ;; *************** function _LIN_getChecksum *****************
 11441 ;; Defined at:
 11442 ;;		line 270 in file "mcc_generated_files/LINDrivers/lin_slave.c"
 11443 ;; Parameters:    Size  Location     Type
 11444 ;;  length          1    wreg     unsigned char 
 11445 ;;  pid             1    0[BANK0 ] unsigned char 
 11446 ;;  data            1    1[BANK0 ] PTR unsigned char 
 11447 ;;		 -> LIN_packet(13), 
 11448 ;; Auto vars:     Size  Location     Type
 11449 ;;  length          1    4[BANK0 ] unsigned char 
 11450 ;;  i               1    5[BANK0 ] unsigned char 
 11451 ;;  checksum        2    6[BANK0 ] unsigned short 
 11452 ;; Return value:  Size  Location     Type
 11453 ;;                  1    wreg      unsigned char 
 11454 ;; Registers used:
 11455 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11456 ;; Tracked objects:
 11457 ;;		On entry : 3E/1
 11458 ;;		On exit  : 3F/0
 11459 ;;		Unchanged: 0/0
 11460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11461 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11462 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11463 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11464 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11465 ;;Total ram usage:        8 bytes
 11466 ;; Hardware stack levels used: 1
 11467 ;; Hardware stack levels required when called: 5
 11468 ;; This function calls:
 11469 ;;		Nothing
 11470 ;; This function is called by:
 11471 ;;		_LIN_queuePacket
 11472 ;;		_LIN_handler
 11473 ;;		_LIN_sendPacket
 11474 ;; This function uses a non-reentrant model
 11475 ;;
 11476                           
 11477     0C26                     _LIN_getChecksum:	
 11478                           ;psect for function _LIN_getChecksum
 11479                           
 11480                           
 11481                           ;incstack = 0
 11482                           ; Regs used in _LIN_getChecksum: [wreg+fsr1l+fsr1h+status,2+status,0]
 11483                           ;LIN_getChecksum@length stored from wreg
 11484     0C26  0140               	movlb	0	; select bank0
 11485     0C27  00D2               	movwf	LIN_getChecksum@length
 11486                           
 11487                           ;mcc_generated_files/LINDrivers/lin_slave.c: 271:     uint16_t checksum = pid;
 11488     0C28  084E               	movf	LIN_getChecksum@pid,w
 11489     0C29  00D0               	movwf	??_LIN_getChecksum
 11490     0C2A  01D1               	clrf	??_LIN_getChecksum+1
 11491     0C2B  0850               	movf	??_LIN_getChecksum,w
 11492     0C2C  00D4               	movwf	LIN_getChecksum@checksum
 11493     0C2D  0851               	movf	??_LIN_getChecksum+1,w
 11494     0C2E  00D5               	movwf	LIN_getChecksum@checksum+1
 11495                           
 11496                           ;mcc_generated_files/LINDrivers/lin_slave.c: 273:     for (uint8_t i = 0; i < length; i+
      +                          +){
 11497     0C2F  01D3               	clrf	LIN_getChecksum@i
 11498     0C30                     l4376:
 11499     0C30  0852               	movf	LIN_getChecksum@length,w
 11500     0C31  0253               	subwf	LIN_getChecksum@i,w
 11501     0C32  1803               	btfsc	3,0
 11502     0C33  2C52               	goto	l310
 11503                           
 11504                           ;mcc_generated_files/LINDrivers/lin_slave.c: 274:         checksum = checksum + *data++;
 11505     0C34  084F               	movf	LIN_getChecksum@data,w
 11506     0C35  0086               	movwf	6
 11507     0C36  0187               	clrf	7
 11508     0C37  0801               	movf	1,w
 11509     0C38  0754               	addwf	LIN_getChecksum@checksum,w
 11510     0C39  00D4               	movwf	LIN_getChecksum@checksum
 11511     0C3A  0855               	movf	LIN_getChecksum@checksum+1,w
 11512     0C3B  1803               	skipnc
 11513     0C3C  0A55               	incf	LIN_getChecksum@checksum+1,w
 11514     0C3D  00D5               	movwf	LIN_getChecksum@checksum+1
 11515     0C3E  3001               	movlw	1
 11516     0C3F  00D0               	movwf	??_LIN_getChecksum
 11517     0C40  0850               	movf	??_LIN_getChecksum,w
 11518     0C41  07CF               	addwf	LIN_getChecksum@data,f
 11519                           
 11520                           ;mcc_generated_files/LINDrivers/lin_slave.c: 275:         if(checksum > 0xFF)
 11521     0C42  3001               	movlw	1
 11522     0C43  0255               	subwf	LIN_getChecksum@checksum+1,w
 11523     0C44  3000               	movlw	0
 11524     0C45  1903               	skipnz
 11525     0C46  0254               	subwf	LIN_getChecksum@checksum,w
 11526     0C47  1C03               	skipc
 11527     0C48  2C4D               	goto	l4374
 11528                           
 11529                           ;mcc_generated_files/LINDrivers/lin_slave.c: 276:             checksum -= 0xFF;
 11530     0C49  30FF               	movlw	255
 11531     0C4A  02D4               	subwf	LIN_getChecksum@checksum,f
 11532     0C4B  3000               	movlw	0
 11533     0C4C  3BD5               	subwfb	LIN_getChecksum@checksum+1,f
 11534     0C4D                     l4374:
 11535                           
 11536                           ;mcc_generated_files/LINDrivers/lin_slave.c: 277:     }
 11537     0C4D  3001               	movlw	1
 11538     0C4E  00D0               	movwf	??_LIN_getChecksum
 11539     0C4F  0850               	movf	??_LIN_getChecksum,w
 11540     0C50  07D3               	addwf	LIN_getChecksum@i,f
 11541     0C51  2C30               	goto	l4376
 11542     0C52                     l310:
 11543                           
 11544                           ;mcc_generated_files/LINDrivers/lin_slave.c: 278:     checksum = ~checksum;
 11545     0C52  09D4               	comf	LIN_getChecksum@checksum,f
 11546     0C53  09D5               	comf	LIN_getChecksum@checksum+1,f
 11547                           
 11548                           ;mcc_generated_files/LINDrivers/lin_slave.c: 280:     return (uint8_t)checksum;
 11549     0C54  0854               	movf	LIN_getChecksum@checksum,w
 11550     0C55  0008               	return
 11551     0C56                     __end_of_LIN_getChecksum:
 11552                           
 11553                           	psect	text38
 11554     0ACA                     __ptext38:	
 11555 ;; *************** function _EUSART1_Write *****************
 11556 ;; Defined at:
 11557 ;;		line 173 in file "mcc_generated_files/eusart1.c"
 11558 ;; Parameters:    Size  Location     Type
 11559 ;;  txData          1    wreg     unsigned char 
 11560 ;; Auto vars:     Size  Location     Type
 11561 ;;  txData          1    1[BANK0 ] unsigned char 
 11562 ;; Return value:  Size  Location     Type
 11563 ;;                  1    wreg      void 
 11564 ;; Registers used:
 11565 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11566 ;; Tracked objects:
 11567 ;;		On entry : 3F/0
 11568 ;;		On exit  : 3F/E
 11569 ;;		Unchanged: 0/0
 11570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11572 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11573 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11574 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11575 ;;Total ram usage:        2 bytes
 11576 ;; Hardware stack levels used: 1
 11577 ;; Hardware stack levels required when called: 5
 11578 ;; This function calls:
 11579 ;;		Nothing
 11580 ;; This function is called by:
 11581 ;;		_LIN_sendPacket
 11582 ;; This function uses a non-reentrant model
 11583 ;;
 11584                           
 11585     0ACA                     _EUSART1_Write:	
 11586                           ;psect for function _EUSART1_Write
 11587                           
 11588                           
 11589                           ;incstack = 0
 11590                           ; Regs used in _EUSART1_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
 11591                           ;EUSART1_Write@txData stored from wreg
 11592     0ACA  00CF               	movwf	EUSART1_Write@txData
 11593     0ACB                     l4392:	
 11594                           ;mcc_generated_files/eusart1.c: 173: void EUSART1_Write(uint8_t txData);mcc_generated_fi
      +                          les/eusart1.c: 174: {;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBuffer
      +                          Remaining)
 11595                           
 11596                           
 11597                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
 11598     0ACB  0824               	movf	_eusart1TxBufferRemaining,w	;volatile
 11599     0ACC  1903               	btfsc	3,2
 11600     0ACD  2ACB               	goto	l4392
 11601                           
 11602                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE3bits.TX1IE)
 11603     0ACE  014E               	movlb	14	; select bank14
 11604     0ACF  1A19               	btfsc	25,4	;volatile
 11605     0AD0  2AD6               	goto	l705
 11606                           
 11607                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          X1REG = txData;
 11608     0AD1  0140               	movlb	0	; select bank0
 11609     0AD2  084F               	movf	EUSART1_Write@txData,w
 11610     0AD3  0142               	movlb	2	; select bank2
 11611     0AD4  009A               	movwf	26	;volatile
 11612                           
 11613                           ;mcc_generated_files/eusart1.c: 182:     }
 11614     0AD5  2AE9               	goto	l4406
 11615     0AD6                     l705:	
 11616                           ;mcc_generated_files/eusart1.c: 183:     else
 11617                           
 11618                           
 11619                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE3bits.TX1IE = 0;
 11620     0AD6  1219               	bcf	25,4	;volatile
 11621                           
 11622                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
 11623     0AD7  0140               	movlb	0	; select bank0
 11624     0AD8  0826               	movf	_eusart1TxHead,w
 11625     0AD9  3E51               	addlw	(low (_eusart1TxBuffer| (0+256)))& (0+255)
 11626     0ADA  0086               	movwf	6
 11627     0ADB  3001               	movlw	1	; select bank2/3
 11628     0ADC  0087               	movwf	7
 11629     0ADD  084F               	movf	EUSART1_Write@txData,w
 11630     0ADE  0081               	movwf	1
 11631     0ADF  3001               	movlw	1
 11632     0AE0  00CE               	movwf	??_EUSART1_Write
 11633     0AE1  084E               	movf	??_EUSART1_Write,w
 11634     0AE2  07A6               	addwf	_eusart1TxHead,f	;volatile
 11635                           
 11636                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
 11637     0AE3  3008               	movlw	8
 11638     0AE4  0226               	subwf	_eusart1TxHead,w
 11639     0AE5  1803               	btfsc	3,0
 11640                           
 11641                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
 11642     0AE6  01A6               	clrf	_eusart1TxHead	;volatile
 11643                           
 11644                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
 11645     0AE7  3001               	movlw	1
 11646     0AE8  02A4               	subwf	_eusart1TxBufferRemaining,f	;volatile
 11647     0AE9                     l4406:
 11648                           
 11649                           ;mcc_generated_files/eusart1.c: 193:     PIE3bits.TX1IE = 1;
 11650     0AE9  014E               	movlb	14	; select bank14
 11651     0AEA  1619               	bsf	25,4	;volatile
 11652     0AEB  0008               	return
 11653     0AEC                     __end_of_EUSART1_Write:
 11654                           
 11655                           	psect	text39
 11656     087E                     __ptext39:	
 11657 ;; *************** function _LIN_enableRx *****************
 11658 ;; Defined at:
 11659 ;;		line 311 in file "mcc_generated_files/LINDrivers/lin_slave.c"
 11660 ;; Parameters:    Size  Location     Type
 11661 ;;		None
 11662 ;; Auto vars:     Size  Location     Type
 11663 ;;		None
 11664 ;; Return value:  Size  Location     Type
 11665 ;;                  1    wreg      void 
 11666 ;; Registers used:
 11667 ;;		None
 11668 ;; Tracked objects:
 11669 ;;		On entry : 3D/0
 11670 ;;		On exit  : 3F/E
 11671 ;;		Unchanged: 0/0
 11672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11677 ;;Total ram usage:        0 bytes
 11678 ;; Hardware stack levels used: 1
 11679 ;; Hardware stack levels required when called: 5
 11680 ;; This function calls:
 11681 ;;		Nothing
 11682 ;; This function is called by:
 11683 ;;		_LIN_init
 11684 ;;		_LIN_handler
 11685 ;; This function uses a non-reentrant model
 11686 ;;
 11687                           
 11688     087E                     _LIN_enableRx:	
 11689                           ;psect for function _LIN_enableRx
 11690                           
 11691                           
 11692                           ;mcc_generated_files/LINDrivers/lin_slave.c: 312:     RC1STAbits.CREN = 1;
 11693                           
 11694                           ;incstack = 0
 11695                           ; Regs used in _LIN_enableRx: []
 11696     087E  0142               	movlb	2	; select bank2
 11697     087F  161D               	bsf	29,4	;volatile
 11698                           
 11699                           ;mcc_generated_files/LINDrivers/lin_slave.c: 313:     PIE3bits.RC1IE = 1;
 11700     0880  014E               	movlb	14	; select bank14
 11701     0881  1699               	bsf	25,5	;volatile
 11702     0882  0008               	return
 11703     0883                     __end_of_LIN_enableRx:
 11704                           
 11705                           	psect	text40
 11706     0879                     __ptext40:	
 11707 ;; *************** function _LIN_disableRx *****************
 11708 ;; Defined at:
 11709 ;;		line 316 in file "mcc_generated_files/LINDrivers/lin_slave.c"
 11710 ;; Parameters:    Size  Location     Type
 11711 ;;		None
 11712 ;; Auto vars:     Size  Location     Type
 11713 ;;		None
 11714 ;; Return value:  Size  Location     Type
 11715 ;;                  1    wreg      void 
 11716 ;; Registers used:
 11717 ;;		None
 11718 ;; Tracked objects:
 11719 ;;		On entry : 3F/1
 11720 ;;		On exit  : 3F/E
 11721 ;;		Unchanged: 0/0
 11722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11726 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11727 ;;Total ram usage:        0 bytes
 11728 ;; Hardware stack levels used: 1
 11729 ;; Hardware stack levels required when called: 5
 11730 ;; This function calls:
 11731 ;;		Nothing
 11732 ;; This function is called by:
 11733 ;;		_LIN_handler
 11734 ;; This function uses a non-reentrant model
 11735 ;;
 11736                           
 11737     0879                     _LIN_disableRx:	
 11738                           ;psect for function _LIN_disableRx
 11739                           
 11740                           
 11741                           ;mcc_generated_files/LINDrivers/lin_slave.c: 317:     RC1STAbits.CREN = 0;
 11742                           
 11743                           ;incstack = 0
 11744                           ; Regs used in _LIN_disableRx: []
 11745     0879  0142               	movlb	2	; select bank2
 11746     087A  121D               	bcf	29,4	;volatile
 11747                           
 11748                           ;mcc_generated_files/LINDrivers/lin_slave.c: 318:     PIE3bits.RC1IE = 0;
 11749     087B  014E               	movlb	14	; select bank14
 11750     087C  1299               	bcf	25,5	;volatile
 11751     087D  0008               	return
 11752     087E                     __end_of_LIN_disableRx:
 11753                           
 11754                           	psect	text41
 11755     0A17                     __ptext41:	
 11756 ;; *************** function _LIN_checkPID *****************
 11757 ;; Defined at:
 11758 ;;		line 241 in file "mcc_generated_files/LINDrivers/lin_slave.c"
 11759 ;; Parameters:    Size  Location     Type
 11760 ;;  pid             1    wreg     unsigned char 
 11761 ;; Auto vars:     Size  Location     Type
 11762 ;;  pid             1    7[BANK0 ] unsigned char 
 11763 ;; Return value:  Size  Location     Type
 11764 ;;                  1    wreg      _Bool 
 11765 ;; Registers used:
 11766 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11767 ;; Tracked objects:
 11768 ;;		On entry : 3F/1
 11769 ;;		On exit  : 3F/0
 11770 ;;		Unchanged: 0/0
 11771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11773 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11775 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11776 ;;Total ram usage:        1 bytes
 11777 ;; Hardware stack levels used: 1
 11778 ;; Hardware stack levels required when called: 6
 11779 ;; This function calls:
 11780 ;;		_LIN_calcParity
 11781 ;;		_LIN_getFromTable
 11782 ;; This function is called by:
 11783 ;;		_LIN_handler
 11784 ;; This function uses a non-reentrant model
 11785 ;;
 11786                           
 11787     0A17                     _LIN_checkPID:	
 11788                           ;psect for function _LIN_checkPID
 11789                           
 11790                           
 11791                           ;incstack = 0
 11792                           ; Regs used in _LIN_checkPID: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11793                           ;LIN_checkPID@pid stored from wreg
 11794     0A17  0140               	movlb	0	; select bank0
 11795     0A18  00D5               	movwf	LIN_checkPID@pid
 11796                           
 11797                           ;mcc_generated_files/LINDrivers/lin_slave.c: 242:     if(LIN_getFromTable(pid, TYPE) == 
      +                          ERROR)
 11798     0A19  01CE               	clrf	LIN_getFromTable@param
 11799     0A1A  0ACE               	incf	LIN_getFromTable@param,f
 11800     0A1B  0855               	movf	LIN_checkPID@pid,w
 11801     0A1C  318E  26AD  318A   	fcall	_LIN_getFromTable
 11802     0A1F  3A02               	xorlw	2
 11803     0A20  1D03               	skipz
 11804     0A21  2A24               	goto	l4724
 11805     0A22                     l4720:
 11806                           
 11807                           ;mcc_generated_files/LINDrivers/lin_slave.c: 243:         return 0;
 11808     0A22  3000               	movlw	0
 11809     0A23  0008               	return
 11810     0A24                     l4724:
 11811                           
 11812                           ;mcc_generated_files/LINDrivers/lin_slave.c: 245:     if(pid == LIN_calcParity(pid & 0x3
      +                          F))
 11813     0A24  0855               	movf	LIN_checkPID@pid,w
 11814     0A25  393F               	andlw	63
 11815     0A26  3187  277B  318A   	fcall	_LIN_calcParity
 11816     0A29  0655               	xorwf	LIN_checkPID@pid,w
 11817     0A2A  1D03               	skipz
 11818     0A2B  2A22               	goto	l4720
 11819                           
 11820                           ;mcc_generated_files/LINDrivers/lin_slave.c: 246:         return 1;
 11821     0A2C  3001               	movlw	1
 11822     0A2D  0008               	return
 11823     0A2E                     __end_of_LIN_checkPID:
 11824                           
 11825                           	psect	text42
 11826     0EAD                     __ptext42:	
 11827 ;; *************** function _LIN_getFromTable *****************
 11828 ;; Defined at:
 11829 ;;		line 211 in file "mcc_generated_files/LINDrivers/lin_slave.c"
 11830 ;; Parameters:    Size  Location     Type
 11831 ;;  cmd             1    wreg     unsigned char 
 11832 ;;  param           1    0[BANK0 ] enum E221
 11833 ;; Auto vars:     Size  Location     Type
 11834 ;;  cmd             1    3[BANK0 ] unsigned char 
 11835 ;;  length          1    4[BANK0 ] unsigned char 
 11836 ;;  rxCommand       2    5[BANK0 ] PTR const struct .
 11837 ;;		 -> NULL(0), scheduleTable(140), 
 11838 ;; Return value:  Size  Location     Type
 11839 ;;                  1    wreg      unsigned char 
 11840 ;; Registers used:
 11841 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
 11842 ;; Tracked objects:
 11843 ;;		On entry : 3E/1
 11844 ;;		On exit  : 3F/0
 11845 ;;		Unchanged: 0/0
 11846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11847 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11848 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11849 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11850 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11851 ;;Total ram usage:        7 bytes
 11852 ;; Hardware stack levels used: 1
 11853 ;; Hardware stack levels required when called: 5
 11854 ;; This function calls:
 11855 ;;		Nothing
 11856 ;; This function is called by:
 11857 ;;		_LIN_handler
 11858 ;;		_LIN_checkPID
 11859 ;; This function uses a non-reentrant model
 11860 ;;
 11861                           
 11862     0EAD                     _LIN_getFromTable:	
 11863                           ;psect for function _LIN_getFromTable
 11864                           
 11865                           
 11866                           ;incstack = 0
 11867                           ; Regs used in _LIN_getFromTable: [wreg-fsr0h+status,2+status,0+pclath]
 11868                           ;LIN_getFromTable@cmd stored from wreg
 11869     0EAD  0140               	movlb	0	; select bank0
 11870     0EAE  00D1               	movwf	LIN_getFromTable@cmd
 11871                           
 11872                           ;mcc_generated_files/LINDrivers/lin_slave.c: 212:     const lin_rx_cmd_t* rxCommand = LI
      +                          N_rxCommand;
 11873     0EAF  0141               	movlb	1	; select bank1
 11874     0EB0  086E               	movf	(_LIN_rxCommand+1)^(0+128),w
 11875     0EB1  0140               	movlb	0	; select bank0
 11876     0EB2  00D4               	movwf	LIN_getFromTable@rxCommand+1
 11877     0EB3  0141               	movlb	1	; select bank1
 11878     0EB4  086D               	movf	_LIN_rxCommand^(0+128),w
 11879     0EB5  0140               	movlb	0	; select bank0
 11880     0EB6  00D3               	movwf	LIN_getFromTable@rxCommand
 11881                           
 11882                           ;mcc_generated_files/LINDrivers/lin_slave.c: 214:     cmd &= 0x3F;
 11883     0EB7  303F               	movlw	63
 11884     0EB8  00CF               	movwf	??_LIN_getFromTable
 11885     0EB9  084F               	movf	??_LIN_getFromTable,w
 11886     0EBA  05D1               	andwf	LIN_getFromTable@cmd,f
 11887                           
 11888                           ;mcc_generated_files/LINDrivers/lin_slave.c: 216:     for(uint8_t length = 0; length < L
      +                          IN_rxCommandLength; length++){
 11889     0EBB  01D2               	clrf	LIN_getFromTable@length
 11890     0EBC                     l4504:
 11891     0EBC  086F               	movf	_LIN_rxCommandLength,w
 11892     0EBD  0252               	subwf	LIN_getFromTable@length,w
 11893     0EBE  1803               	btfsc	3,0
 11894     0EBF  2EFF               	goto	l4520
 11895                           
 11896                           ;mcc_generated_files/LINDrivers/lin_slave.c: 217:         if(cmd == rxCommand->cmd){
 11897     0EC0  0853               	movf	LIN_getFromTable@rxCommand,w
 11898     0EC1  0084               	movwf	4
 11899     0EC2  0854               	movf	LIN_getFromTable@rxCommand+1,w
 11900     0EC3  0085               	movwf	5
 11901     0EC4  0800               	movf	0,w	;code access
 11902     0EC5  0651               	xorwf	LIN_getFromTable@cmd,w
 11903     0EC6  1903               	btfsc	3,2
 11904     0EC7  2EFF               	goto	l4520
 11905                           
 11906                           ;mcc_generated_files/LINDrivers/lin_slave.c: 220:         rxCommand++;
 11907     0EC8  3005               	movlw	5
 11908     0EC9  07D3               	addwf	LIN_getFromTable@rxCommand,f
 11909     0ECA  3000               	movlw	0
 11910     0ECB  3DD4               	addwfc	LIN_getFromTable@rxCommand+1,f
 11911                           
 11912                           ;mcc_generated_files/LINDrivers/lin_slave.c: 222:         if(length == (LIN_rxCommandLen
      +                          gth-1)){
 11913     0ECC  086F               	movf	_LIN_rxCommandLength,w
 11914     0ECD  3EFF               	addlw	255
 11915     0ECE  00CF               	movwf	??_LIN_getFromTable
 11916     0ECF  30FF               	movlw	255
 11917     0ED0  1803               	skipnc
 11918     0ED1  3000               	movlw	0
 11919     0ED2  00D0               	movwf	??_LIN_getFromTable+1
 11920     0ED3  0852               	movf	LIN_getFromTable@length,w
 11921     0ED4  064F               	xorwf	??_LIN_getFromTable,w
 11922     0ED5  0450               	iorwf	??_LIN_getFromTable+1,w
 11923     0ED6  1D03               	skipz
 11924     0ED7  2EDA               	goto	l4502
 11925     0ED8                     l4498:
 11926                           
 11927                           ;mcc_generated_files/LINDrivers/lin_slave.c: 223:             return ERROR;
 11928     0ED8  3002               	movlw	2
 11929     0ED9  0008               	return
 11930     0EDA                     l4502:
 11931                           
 11932                           ;mcc_generated_files/LINDrivers/lin_slave.c: 225:     }
 11933     0EDA  3001               	movlw	1
 11934     0EDB  00CF               	movwf	??_LIN_getFromTable
 11935     0EDC  084F               	movf	??_LIN_getFromTable,w
 11936     0EDD  07D2               	addwf	LIN_getFromTable@length,f
 11937     0EDE  2EBC               	goto	l4504
 11938     0EDF                     l4506:
 11939                           
 11940                           ;mcc_generated_files/LINDrivers/lin_slave.c: 229:             return rxCommand->cmd;
 11941     0EDF  0853               	movf	LIN_getFromTable@rxCommand,w
 11942     0EE0  0084               	movwf	4
 11943     0EE1  0854               	movf	LIN_getFromTable@rxCommand+1,w
 11944     0EE2  0085               	movwf	5
 11945     0EE3  0800               	movf	0,w	;code access
 11946     0EE4  0008               	return
 11947     0EE5                     l4510:
 11948                           
 11949                           ;mcc_generated_files/LINDrivers/lin_slave.c: 231:             return rxCommand->type;
 11950     0EE5  0854               	movf	LIN_getFromTable@rxCommand+1,w
 11951     0EE6  00D0               	movwf	??_LIN_getFromTable+1
 11952     0EE7  0853               	movf	LIN_getFromTable@rxCommand,w
 11953     0EE8  00CF               	movwf	??_LIN_getFromTable
 11954     0EE9  3001               	movlw	1
 11955     0EEA  074F               	addwf	??_LIN_getFromTable,w
 11956     0EEB  0084               	movwf	4
 11957     0EEC  0850               	movf	??_LIN_getFromTable+1,w
 11958     0EED  1803               	skipnc
 11959     0EEE  0A50               	incf	??_LIN_getFromTable+1,w
 11960     0EEF  0085               	movwf	5
 11961     0EF0  0800               	movf	0,w	;code access
 11962     0EF1  0008               	return
 11963     0EF2                     l4514:
 11964                           
 11965                           ;mcc_generated_files/LINDrivers/lin_slave.c: 233:             return rxCommand->length;
 11966     0EF2  0854               	movf	LIN_getFromTable@rxCommand+1,w
 11967     0EF3  00D0               	movwf	??_LIN_getFromTable+1
 11968     0EF4  0853               	movf	LIN_getFromTable@rxCommand,w
 11969     0EF5  00CF               	movwf	??_LIN_getFromTable
 11970     0EF6  3002               	movlw	2
 11971     0EF7  074F               	addwf	??_LIN_getFromTable,w
 11972     0EF8  0084               	movwf	4
 11973     0EF9  0850               	movf	??_LIN_getFromTable+1,w
 11974     0EFA  1803               	skipnc
 11975     0EFB  0A50               	incf	??_LIN_getFromTable+1,w
 11976     0EFC  0085               	movwf	5
 11977     0EFD  0800               	movf	0,w	;code access
 11978     0EFE  0008               	return
 11979     0EFF                     l4520:
 11980     0EFF  084E               	movf	LIN_getFromTable@param,w
 11981     0F00  00CF               	movwf	??_LIN_getFromTable
 11982     0F01  01D0               	clrf	??_LIN_getFromTable+1
 11983                           
 11984                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11985                           ; Switch size 1, requested type "simple"
 11986                           ; Number of cases is 1, Range of values is 0 to 0
 11987                           ; switch strategies available:
 11988                           ; Name         Instructions Cycles
 11989                           ; simple_byte            4     3 (average)
 11990                           ; direct_byte            8     6 (fixed)
 11991                           ; jumptable            260     6 (fixed)
 11992                           ;	Chosen strategy is simple_byte
 11993     0F02  0850               	movf	??_LIN_getFromTable+1,w
 11994     0F03  3A00               	xorlw	0	; case 0
 11995     0F04  1903               	skipnz
 11996     0F05  2F07               	goto	l5594
 11997     0F06  2ED8               	goto	l4498
 11998     0F07                     l5594:
 11999                           
 12000                           ; Switch size 1, requested type "simple"
 12001                           ; Number of cases is 3, Range of values is 0 to 2
 12002                           ; switch strategies available:
 12003                           ; Name         Instructions Cycles
 12004                           ; simple_byte           10     6 (average)
 12005                           ; direct_byte           12     6 (fixed)
 12006                           ; jumptable            260     6 (fixed)
 12007                           ;	Chosen strategy is simple_byte
 12008     0F07  084F               	movf	??_LIN_getFromTable,w
 12009     0F08  3A00               	xorlw	0	; case 0
 12010     0F09  1903               	skipnz
 12011     0F0A  2EDF               	goto	l4506
 12012     0F0B  3A01               	xorlw	1	; case 1
 12013     0F0C  1903               	skipnz
 12014     0F0D  2EE5               	goto	l4510
 12015     0F0E  3A03               	xorlw	3	; case 2
 12016     0F0F  1903               	skipnz
 12017     0F10  2EF2               	goto	l4514
 12018     0F11  2ED8               	goto	l4498
 12019     0F12  0008               	return
 12020     0F13                     __end_of_LIN_getFromTable:
 12021                           
 12022                           	psect	text43
 12023     077B                     __ptext43:	
 12024 ;; *************** function _LIN_calcParity *****************
 12025 ;; Defined at:
 12026 ;;		line 252 in file "mcc_generated_files/LINDrivers/lin_slave.c"
 12027 ;; Parameters:    Size  Location     Type
 12028 ;;  CMD             1    wreg     unsigned char 
 12029 ;; Auto vars:     Size  Location     Type
 12030 ;;  CMD             1    1[BANK0 ] unsigned char 
 12031 ;;  PID             1    2[BANK0 ] struct .
 12032 ;; Return value:  Size  Location     Type
 12033 ;;                  1    wreg      unsigned char 
 12034 ;; Registers used:
 12035 ;;		wreg, status,0
 12036 ;; Tracked objects:
 12037 ;;		On entry : 3F/0
 12038 ;;		On exit  : 3F/0
 12039 ;;		Unchanged: 0/0
 12040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12042 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12043 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12044 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12045 ;;Total ram usage:        3 bytes
 12046 ;; Hardware stack levels used: 1
 12047 ;; Hardware stack levels required when called: 5
 12048 ;; This function calls:
 12049 ;;		Nothing
 12050 ;; This function is called by:
 12051 ;;		_LIN_checkPID
 12052 ;; This function uses a non-reentrant model
 12053 ;;
 12054                           
 12055     077B                     _LIN_calcParity:	
 12056                           ;psect for function _LIN_calcParity
 12057                           
 12058                           
 12059                           ;incstack = 0
 12060                           ; Regs used in _LIN_calcParity: [wreg+status,0]
 12061                           ;LIN_calcParity@CMD stored from wreg
 12062     077B  00CF               	movwf	LIN_calcParity@CMD
 12063                           
 12064                           ;mcc_generated_files/LINDrivers/lin_slave.c: 253:     lin_pid_t PID;;mcc_generated_files
      +                          /LINDrivers/lin_slave.c: 254:     PID.rawPID = CMD;
 12065     077C  084F               	movf	LIN_calcParity@CMD,w
 12066     077D  00D0               	movwf	LIN_calcParity@PID
 12067                           
 12068                           ;mcc_generated_files/LINDrivers/lin_slave.c: 259:     PID.P0 = PID.ID0 ^ PID.ID1;
 12069     077E  1CD0               	btfss	LIN_calcParity@PID,1
 12070     077F  2F82               	goto	u2290
 12071     0780  3001               	movlw	1
 12072     0781  2F83               	goto	u2292
 12073     0782                     u2290:
 12074     0782  3000               	movlw	0
 12075     0783                     u2292:
 12076     0783  00CE               	movwf	??_LIN_calcParity
 12077     0784  1C50               	btfss	LIN_calcParity@PID,0
 12078     0785  2F88               	goto	u2300
 12079     0786  3001               	movlw	1
 12080     0787  2F89               	goto	u2302
 12081     0788                     u2300:
 12082     0788  3000               	movlw	0
 12083     0789                     u2302:
 12084     0789  064E               	xorwf	??_LIN_calcParity,w
 12085     078A  1903               	btfsc	3,2
 12086     078B  2F8F               	goto	u2310
 12087     078C  0140               	movlb	0	; select bank0
 12088     078D  1750               	bsf	LIN_calcParity@PID,6
 12089     078E  2F91               	goto	u2324
 12090     078F                     u2310:
 12091     078F  0140               	movlb	0	; select bank0
 12092     0790  1350               	bcf	LIN_calcParity@PID,6
 12093     0791                     u2324:
 12094                           
 12095                           ;mcc_generated_files/LINDrivers/lin_slave.c: 260:     PID.P0 = PID.P0 ^ PID.ID2;
 12096     0791  1D50               	btfss	LIN_calcParity@PID,2
 12097     0792  2F95               	goto	u2330
 12098     0793  3001               	movlw	1
 12099     0794  2F96               	goto	u2332
 12100     0795                     u2330:
 12101     0795  3000               	movlw	0
 12102     0796                     u2332:
 12103     0796  00CE               	movwf	??_LIN_calcParity
 12104     0797  1F50               	btfss	LIN_calcParity@PID,6
 12105     0798  2F9B               	goto	u2340
 12106     0799  3001               	movlw	1
 12107     079A  2F9C               	goto	u2342
 12108     079B                     u2340:
 12109     079B  3000               	movlw	0
 12110     079C                     u2342:
 12111     079C  064E               	xorwf	??_LIN_calcParity,w
 12112     079D  1903               	btfsc	3,2
 12113     079E  2FA2               	goto	u2350
 12114     079F  0140               	movlb	0	; select bank0
 12115     07A0  1750               	bsf	LIN_calcParity@PID,6
 12116     07A1  2FA4               	goto	u2364
 12117     07A2                     u2350:
 12118     07A2  0140               	movlb	0	; select bank0
 12119     07A3  1350               	bcf	LIN_calcParity@PID,6
 12120     07A4                     u2364:
 12121                           
 12122                           ;mcc_generated_files/LINDrivers/lin_slave.c: 261:     PID.P0 = PID.P0 ^ PID.ID4;
 12123     07A4  1E50               	btfss	LIN_calcParity@PID,4
 12124     07A5  2FA8               	goto	u2370
 12125     07A6  3001               	movlw	1
 12126     07A7  2FA9               	goto	u2372
 12127     07A8                     u2370:
 12128     07A8  3000               	movlw	0
 12129     07A9                     u2372:
 12130     07A9  00CE               	movwf	??_LIN_calcParity
 12131     07AA  1F50               	btfss	LIN_calcParity@PID,6
 12132     07AB  2FAE               	goto	u2380
 12133     07AC  3001               	movlw	1
 12134     07AD  2FAF               	goto	u2382
 12135     07AE                     u2380:
 12136     07AE  3000               	movlw	0
 12137     07AF                     u2382:
 12138     07AF  064E               	xorwf	??_LIN_calcParity,w
 12139     07B0  1903               	btfsc	3,2
 12140     07B1  2FB5               	goto	u2390
 12141     07B2  0140               	movlb	0	; select bank0
 12142     07B3  1750               	bsf	LIN_calcParity@PID,6
 12143     07B4  2FB7               	goto	u2404
 12144     07B5                     u2390:
 12145     07B5  0140               	movlb	0	; select bank0
 12146     07B6  1350               	bcf	LIN_calcParity@PID,6
 12147     07B7                     u2404:
 12148                           
 12149                           ;mcc_generated_files/LINDrivers/lin_slave.c: 262:     PID.P1 = PID.ID1 ^ PID.ID3;
 12150     07B7  1DD0               	btfss	LIN_calcParity@PID,3
 12151     07B8  2FBB               	goto	u2410
 12152     07B9  3001               	movlw	1
 12153     07BA  2FBC               	goto	u2412
 12154     07BB                     u2410:
 12155     07BB  3000               	movlw	0
 12156     07BC                     u2412:
 12157     07BC  00CE               	movwf	??_LIN_calcParity
 12158     07BD  1CD0               	btfss	LIN_calcParity@PID,1
 12159     07BE  2FC1               	goto	u2420
 12160     07BF  3001               	movlw	1
 12161     07C0  2FC2               	goto	u2422
 12162     07C1                     u2420:
 12163     07C1  3000               	movlw	0
 12164     07C2                     u2422:
 12165     07C2  064E               	xorwf	??_LIN_calcParity,w
 12166     07C3  1903               	btfsc	3,2
 12167     07C4  2FC8               	goto	u2430
 12168     07C5  0140               	movlb	0	; select bank0
 12169     07C6  17D0               	bsf	LIN_calcParity@PID,7
 12170     07C7  2FCA               	goto	u2444
 12171     07C8                     u2430:
 12172     07C8  0140               	movlb	0	; select bank0
 12173     07C9  13D0               	bcf	LIN_calcParity@PID,7
 12174     07CA                     u2444:
 12175                           
 12176                           ;mcc_generated_files/LINDrivers/lin_slave.c: 263:     PID.P1 = PID.P1 ^ PID.ID4;
 12177     07CA  1E50               	btfss	LIN_calcParity@PID,4
 12178     07CB  2FCE               	goto	u2450
 12179     07CC  3001               	movlw	1
 12180     07CD  2FCF               	goto	u2452
 12181     07CE                     u2450:
 12182     07CE  3000               	movlw	0
 12183     07CF                     u2452:
 12184     07CF  00CE               	movwf	??_LIN_calcParity
 12185     07D0  1FD0               	btfss	LIN_calcParity@PID,7
 12186     07D1  2FD4               	goto	u2460
 12187     07D2  3001               	movlw	1
 12188     07D3  2FD5               	goto	u2462
 12189     07D4                     u2460:
 12190     07D4  3000               	movlw	0
 12191     07D5                     u2462:
 12192     07D5  064E               	xorwf	??_LIN_calcParity,w
 12193     07D6  1903               	btfsc	3,2
 12194     07D7  2FDB               	goto	u2470
 12195     07D8  0140               	movlb	0	; select bank0
 12196     07D9  17D0               	bsf	LIN_calcParity@PID,7
 12197     07DA  2FDD               	goto	u2484
 12198     07DB                     u2470:
 12199     07DB  0140               	movlb	0	; select bank0
 12200     07DC  13D0               	bcf	LIN_calcParity@PID,7
 12201     07DD                     u2484:
 12202                           
 12203                           ;mcc_generated_files/LINDrivers/lin_slave.c: 264:     PID.P1 = PID.P1 ^ PID.ID5;
 12204     07DD  1ED0               	btfss	LIN_calcParity@PID,5
 12205     07DE  2FE1               	goto	u2490
 12206     07DF  3001               	movlw	1
 12207     07E0  2FE2               	goto	u2492
 12208     07E1                     u2490:
 12209     07E1  3000               	movlw	0
 12210     07E2                     u2492:
 12211     07E2  00CE               	movwf	??_LIN_calcParity
 12212     07E3  1FD0               	btfss	LIN_calcParity@PID,7
 12213     07E4  2FE7               	goto	u2500
 12214     07E5  3001               	movlw	1
 12215     07E6  2FE8               	goto	u2502
 12216     07E7                     u2500:
 12217     07E7  3000               	movlw	0
 12218     07E8                     u2502:
 12219     07E8  064E               	xorwf	??_LIN_calcParity,w
 12220     07E9  1903               	btfsc	3,2
 12221     07EA  2FEE               	goto	u2510
 12222     07EB  0140               	movlb	0	; select bank0
 12223     07EC  17D0               	bsf	LIN_calcParity@PID,7
 12224     07ED  2FF0               	goto	l4532
 12225     07EE                     u2510:
 12226     07EE  0140               	movlb	0	; select bank0
 12227     07EF  13D0               	bcf	LIN_calcParity@PID,7
 12228     07F0                     l4532:
 12229                           
 12230                           ;mcc_generated_files/LINDrivers/lin_slave.c: 265:     PID.P1 = ~PID.P1;
 12231     07F0  1003               	clrc
 12232     07F1  1FD0               	btfss	LIN_calcParity@PID,7
 12233     07F2  1403               	setc
 12234     07F3  1C03               	btfss	3,0
 12235     07F4  2FF8               	goto	u2530
 12236     07F5  0140               	movlb	0	; select bank0
 12237     07F6  17D0               	bsf	LIN_calcParity@PID,7
 12238     07F7  2FFA               	goto	l4534
 12239     07F8                     u2530:
 12240     07F8  0140               	movlb	0	; select bank0
 12241     07F9  13D0               	bcf	LIN_calcParity@PID,7
 12242     07FA                     l4534:
 12243                           
 12244                           ;mcc_generated_files/LINDrivers/lin_slave.c: 267:     return PID.rawPID;
 12245     07FA  0850               	movf	LIN_calcParity@PID,w
 12246     07FB  0008               	return
 12247     07FC                     __end_of_LIN_calcParity:
 12248                           
 12249                           	psect	text44
 12250     097C                     __ptext44:	
 12251 ;; *************** function _LIN_breakCheck *****************
 12252 ;; Defined at:
 12253 ;;		line 321 in file "mcc_generated_files/LINDrivers/lin_slave.c"
 12254 ;; Parameters:    Size  Location     Type
 12255 ;;		None
 12256 ;; Auto vars:     Size  Location     Type
 12257 ;;		None
 12258 ;; Return value:  Size  Location     Type
 12259 ;;                  1    wreg      _Bool 
 12260 ;; Registers used:
 12261 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12262 ;; Tracked objects:
 12263 ;;		On entry : 3F/0
 12264 ;;		On exit  : 3F/0
 12265 ;;		Unchanged: 0/0
 12266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12271 ;;Total ram usage:        0 bytes
 12272 ;; Hardware stack levels used: 1
 12273 ;; Hardware stack levels required when called: 6
 12274 ;; This function calls:
 12275 ;;		_EUSART1_Read
 12276 ;;		_EUSART1_get_last_status
 12277 ;; This function is called by:
 12278 ;;		_LIN_handler
 12279 ;; This function uses a non-reentrant model
 12280 ;;
 12281                           
 12282     097C                     _LIN_breakCheck:	
 12283                           ;psect for function _LIN_breakCheck
 12284                           
 12285                           
 12286                           ;mcc_generated_files/LINDrivers/lin_slave.c: 323:     if((EUSART1_Read() == 0x00) && (EU
      +                          SART1_get_last_status().ferr == 1)){
 12287                           
 12288                           ;incstack = 0
 12289                           ; Regs used in _LIN_breakCheck: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12290     097C  318B  2330  3189   	fcall	_EUSART1_Read
 12291     097F  3A00               	xorlw	0
 12292     0980  1D03               	skipz
 12293     0981  2989               	goto	l4714
 12294     0982  3180  2002  3189   	fcall	_EUSART1_get_last_status
 12295     0985  1C89               	btfss	9,1
 12296     0986  2989               	goto	l4714
 12297                           
 12298                           ;mcc_generated_files/LINDrivers/lin_slave.c: 324:         return 1;
 12299     0987  3001               	movlw	1
 12300     0988  0008               	return
 12301     0989                     l4714:
 12302                           
 12303                           ;mcc_generated_files/LINDrivers/lin_slave.c: 327:     return 0;
 12304     0989  3000               	movlw	0
 12305     098A  0008               	return
 12306     098B                     __end_of_LIN_breakCheck:
 12307                           
 12308                           	psect	text45
 12309     0002                     __ptext45:	
 12310 ;; *************** function _EUSART1_get_last_status *****************
 12311 ;; Defined at:
 12312 ;;		line 147 in file "mcc_generated_files/eusart1.c"
 12313 ;; Parameters:    Size  Location     Type
 12314 ;;		None
 12315 ;; Auto vars:     Size  Location     Type
 12316 ;;		None
 12317 ;; Return value:  Size  Location     Type
 12318 ;;                  1    wreg      struct .
 12319 ;; Registers used:
 12320 ;;		wreg
 12321 ;; Tracked objects:
 12322 ;;		On entry : 3F/0
 12323 ;;		On exit  : 3F/0
 12324 ;;		Unchanged: 0/0
 12325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12329 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12330 ;;Total ram usage:        0 bytes
 12331 ;; Hardware stack levels used: 1
 12332 ;; Hardware stack levels required when called: 5
 12333 ;; This function calls:
 12334 ;;		Nothing
 12335 ;; This function is called by:
 12336 ;;		_LIN_breakCheck
 12337 ;; This function uses a non-reentrant model
 12338 ;;
 12339                           
 12340     0002                     _EUSART1_get_last_status:	
 12341                           ;psect for function _EUSART1_get_last_status
 12342                           
 12343                           
 12344                           ;mcc_generated_files/eusart1.c: 148:     return eusart1RxLastError;
 12345                           
 12346                           ;incstack = 0
 12347                           ; Regs used in _EUSART1_get_last_status: [wreg]
 12348     0002  0822               	movf	_eusart1RxLastError,w	;volatile
 12349     0003  0008               	return
 12350     0004                     __end_of_EUSART1_get_last_status:
 12351                           
 12352                           	psect	text46
 12353     0B30                     __ptext46:	
 12354 ;; *************** function _EUSART1_Read *****************
 12355 ;; Defined at:
 12356 ;;		line 151 in file "mcc_generated_files/eusart1.c"
 12357 ;; Parameters:    Size  Location     Type
 12358 ;;		None
 12359 ;; Auto vars:     Size  Location     Type
 12360 ;;  readValue       1    1[BANK0 ] unsigned char 
 12361 ;; Return value:  Size  Location     Type
 12362 ;;                  1    wreg      unsigned char 
 12363 ;; Registers used:
 12364 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12365 ;; Tracked objects:
 12366 ;;		On entry : 3F/0
 12367 ;;		On exit  : 3F/0
 12368 ;;		Unchanged: 0/0
 12369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12371 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12372 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12373 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12374 ;;Total ram usage:        2 bytes
 12375 ;; Hardware stack levels used: 1
 12376 ;; Hardware stack levels required when called: 5
 12377 ;; This function calls:
 12378 ;;		Nothing
 12379 ;; This function is called by:
 12380 ;;		_LIN_handler
 12381 ;;		_LIN_breakCheck
 12382 ;; This function uses a non-reentrant model
 12383 ;;
 12384                           
 12385     0B30                     _EUSART1_Read:	
 12386                           ;psect for function _EUSART1_Read
 12387                           
 12388     0B30                     l4466:	
 12389                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
 12390                           
 12391                           ;incstack = 0
 12392                           ; Regs used in _EUSART1_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
 12393                           
 12394                           
 12395                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
 12396     0B30  0823               	movf	_eusart1RxCount,w	;volatile
 12397     0B31  1903               	btfsc	3,2
 12398     0B32  2B30               	goto	l4466
 12399                           
 12400                           ;mcc_generated_files/eusart1.c: 159:     eusart1RxLastError = eusart1RxStatusBuffer[eusa
      +                          rt1RxTail];
 12401     0B33  0872               	movf	_eusart1RxTail,w	;volatile
 12402     0B34  3E41               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 12403     0B35  0086               	movwf	6
 12404     0B36  3001               	movlw	1	; select bank2/3
 12405     0B37  0087               	movwf	7
 12406     0B38  0801               	movf	1,w
 12407     0B39  00A2               	movwf	_eusart1RxLastError	;volatile
 12408                           
 12409                           ;mcc_generated_files/eusart1.c: 161:     readValue = eusart1RxBuffer[eusart1RxTail++];
 12410     0B3A  0872               	movf	_eusart1RxTail,w
 12411     0B3B  3E49               	addlw	(low (_eusart1RxBuffer| (0+256)))& (0+255)
 12412     0B3C  0086               	movwf	6
 12413     0B3D  3001               	movlw	1	; select bank2/3
 12414     0B3E  0087               	movwf	7
 12415     0B3F  0801               	movf	1,w
 12416     0B40  00CF               	movwf	EUSART1_Read@readValue
 12417     0B41  3001               	movlw	1
 12418     0B42  00CE               	movwf	??_EUSART1_Read
 12419     0B43  084E               	movf	??_EUSART1_Read,w
 12420     0B44  07F2               	addwf	_eusart1RxTail,f	;volatile
 12421                           
 12422                           ;mcc_generated_files/eusart1.c: 162:     if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
 12423     0B45  3008               	movlw	8
 12424     0B46  0272               	subwf	_eusart1RxTail,w
 12425     0B47  1803               	btfsc	3,0
 12426                           
 12427                           ;mcc_generated_files/eusart1.c: 163:     {;mcc_generated_files/eusart1.c: 164:         e
      +                          usart1RxTail = 0;
 12428     0B48  01F2               	clrf	_eusart1RxTail	;volatile
 12429                           
 12430                           ;mcc_generated_files/eusart1.c: 166:     PIE3bits.RC1IE = 0;
 12431     0B49  014E               	movlb	14	; select bank14
 12432     0B4A  1299               	bcf	25,5	;volatile
 12433                           
 12434                           ;mcc_generated_files/eusart1.c: 167:     eusart1RxCount--;
 12435     0B4B  3001               	movlw	1
 12436     0B4C  0140               	movlb	0	; select bank0
 12437     0B4D  02A3               	subwf	_eusart1RxCount,f	;volatile
 12438                           
 12439                           ;mcc_generated_files/eusart1.c: 168:     PIE3bits.RC1IE = 1;
 12440     0B4E  014E               	movlb	14	; select bank14
 12441     0B4F  1699               	bsf	25,5	;volatile
 12442                           
 12443                           ;mcc_generated_files/eusart1.c: 170:     return readValue;
 12444     0B50  0140               	movlb	0	; select bank0
 12445     0B51  084F               	movf	EUSART1_Read@readValue,w
 12446     0B52  0008               	return
 12447     0B53                     __end_of_EUSART1_Read:
 12448                           
 12449                           	psect	text47
 12450     08A0                     __ptext47:	
 12451 ;; *************** function _EUSART1_is_rx_ready *****************
 12452 ;; Defined at:
 12453 ;;		line 137 in file "mcc_generated_files/eusart1.c"
 12454 ;; Parameters:    Size  Location     Type
 12455 ;;		None
 12456 ;; Auto vars:     Size  Location     Type
 12457 ;;		None
 12458 ;; Return value:  Size  Location     Type
 12459 ;;                  1    wreg      _Bool 
 12460 ;; Registers used:
 12461 ;;		wreg, status,2, status,0
 12462 ;; Tracked objects:
 12463 ;;		On entry : 3C/0
 12464 ;;		On exit  : 3F/0
 12465 ;;		Unchanged: 0/0
 12466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12471 ;;Total ram usage:        0 bytes
 12472 ;; Hardware stack levels used: 1
 12473 ;; Hardware stack levels required when called: 5
 12474 ;; This function calls:
 12475 ;;		Nothing
 12476 ;; This function is called by:
 12477 ;;		_LIN_handler
 12478 ;; This function uses a non-reentrant model
 12479 ;;
 12480                           
 12481     08A0                     _EUSART1_is_rx_ready:	
 12482                           ;psect for function _EUSART1_is_rx_ready
 12483                           
 12484                           
 12485                           ;mcc_generated_files/eusart1.c: 139:     return (eusart1RxCount ? 1 : 0);
 12486                           
 12487                           ;incstack = 0
 12488                           ; Regs used in _EUSART1_is_rx_ready: [wreg+status,2+status,0]
 12489     08A0  0140               	movlb	0	; select bank0
 12490     08A1  0823               	movf	_eusart1RxCount,w	;volatile
 12491     08A2  1903               	btfsc	3,2
 12492     08A3  28A6               	goto	u2710
 12493     08A4  3001               	movlw	1
 12494     08A5  0008               	return
 12495     08A6                     u2710:
 12496     08A6  3000               	movlw	0
 12497     08A7  0008               	return
 12498     08A8                     __end_of_EUSART1_is_rx_ready:
 12499                           
 12500                           	psect	text48
 12501     0662                     __ptext48:	
 12502 ;; *************** function _EFuse *****************
 12503 ;; Defined at:
 12504 ;;		line 271 in file "efuse.c"
 12505 ;; Parameters:    Size  Location     Type
 12506 ;;		None
 12507 ;; Auto vars:     Size  Location     Type
 12508 ;;		None
 12509 ;; Return value:  Size  Location     Type
 12510 ;;                  1    wreg      void 
 12511 ;; Registers used:
 12512 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12513 ;; Tracked objects:
 12514 ;;		On entry : 0/0
 12515 ;;		On exit  : 3C/0
 12516 ;;		Unchanged: 0/0
 12517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12520 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
 12521 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
 12522 ;;Total ram usage:        2 bytes
 12523 ;; Hardware stack levels used: 1
 12524 ;; Hardware stack levels required when called: 7
 12525 ;; This function calls:
 12526 ;;		_CmdOutput
 12527 ;;		_GetAmbientTemperature
 12528 ;;		_TCC_Curve
 12529 ;;		_Update_LIN_Data
 12530 ;; This function is called by:
 12531 ;;		_main
 12532 ;; This function uses a non-reentrant model
 12533 ;;
 12534                           
 12535     0662                     _EFuse:	
 12536                           ;psect for function _EFuse
 12537                           
 12538                           
 12539                           ;efuse.c: 274:     if(PIR4bits.TMR1IF && (outputState == OUTPUT_ON))
 12540                           
 12541                           ;incstack = 0
 12542                           ; Regs used in _EFuse: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12543     0662  014E               	movlb	14	; select bank14
 12544     0663  1C10               	btfss	16,0	;volatile
 12545     0664  2E71               	goto	l5472
 12546     0665  0140               	movlb	0	; select bank0
 12547     0666  032F               	decf	_outputState,w
 12548     0667  1D03               	btfss	3,2
 12549     0668  2E71               	goto	l5472
 12550                           
 12551                           ;efuse.c: 275:     {;efuse.c: 276:        overCurrentFault = SHORT_CIRCUIT;
 12552     0669  3003               	movlw	3
 12553     066A  00AE               	movwf	_overCurrentFault
 12554                           
 12555                           ;efuse.c: 277:        CmdOutput(OUTPUT_OFF);
 12556     066B  3000               	movlw	0
 12557     066C  318D  25EC  3186   	fcall	_CmdOutput
 12558                           
 12559                           ;efuse.c: 278:        PIR4bits.TMR1IF = 0;
 12560     066F  014E               	movlb	14	; select bank14
 12561     0670  1010               	bcf	16,0	;volatile
 12562     0671                     l5472:
 12563                           
 12564                           ;efuse.c: 281:     if(ticks_1ms >= tcc_sample_time)
 12565     0671  0141               	movlb	1	; select bank1
 12566     0672  0864               	movf	(_tcc_sample_time+1)^(0+128),w
 12567     0673  0237               	subwf	(_ticks_1ms+1)^(0+128),w
 12568     0674  1D03               	skipz
 12569     0675  2E78               	goto	u3405
 12570     0676  0863               	movf	_tcc_sample_time^(0+128),w
 12571     0677  0236               	subwf	_ticks_1ms^(0+128),w
 12572     0678                     u3405:
 12573     0678  1C03               	skipc
 12574     0679  0008               	return
 12575                           
 12576                           ;efuse.c: 282:     {;efuse.c: 283:         ticks_1ms = 0;
 12577     067A  01B6               	clrf	_ticks_1ms^(0+128)
 12578     067B  01B7               	clrf	(_ticks_1ms+1)^(0+128)
 12579                           
 12580                           ;efuse.c: 286:         if(CLCDATAbits.MLC4OUT && (outputState == OUTPUT_ON))
 12581     067C  017C               	movlb	60	; select bank60
 12582     067D  1D8F               	btfss	15,3	;volatile
 12583     067E  2E8E               	goto	l5486
 12584     067F  0140               	movlb	0	; select bank0
 12585     0680  032F               	decf	_outputState,w
 12586     0681  1D03               	btfss	3,2
 12587     0682  2E8E               	goto	l5486
 12588                           
 12589                           ;efuse.c: 287:         {;efuse.c: 289:             CLC3GLS1 = 0x00;
 12590     0683  017C               	movlb	60	; select bank60
 12591     0684  01AB               	clrf	43	;volatile
 12592                           
 12593                           ;efuse.c: 290:             T2TMR = 0x00;
 12594     0685  0145               	movlb	5	; select bank5
 12595     0686  018C               	clrf	12	;volatile
 12596                           
 12597                           ;efuse.c: 291:             CLC3POL = 0x00;
 12598     0687  017C               	movlb	60	; select bank60
 12599     0688  01A5               	clrf	37	;volatile
 12600                           
 12601                           ;efuse.c: 292:             CLC3POL = 0x03;
 12602     0689  3003               	movlw	3
 12603     068A  00A5               	movwf	37	;volatile
 12604                           
 12605                           ;efuse.c: 293:             CLC3POL = 0x00;
 12606     068B  01A5               	clrf	37	;volatile
 12607                           
 12608                           ;efuse.c: 294:             CLC3GLS1 = 0x08;
 12609     068C  3008               	movlw	8
 12610     068D  00AB               	movwf	43	;volatile
 12611     068E                     l5486:
 12612                           
 12613                           ;efuse.c: 296:         Tambient=GetAmbientTemperature();
 12614     068E  318D  2541  3186   	fcall	_GetAmbientTemperature
 12615     0691  084F               	movf	?_GetAmbientTemperature+1,w
 12616     0692  00EE               	movwf	_Tambient+1
 12617     0693  084E               	movf	?_GetAmbientTemperature,w
 12618     0694  00ED               	movwf	_Tambient
 12619                           
 12620                           ;efuse.c: 297:         if(Tambient >= 115)
 12621     0695  086E               	movf	_Tambient+1,w
 12622     0696  3A80               	xorlw	128
 12623     0697  0142               	movlb	2	; select bank2
 12624     0698  00BD               	movwf	??_EFuse^(0+256)
 12625     0699  3080               	movlw	128
 12626     069A  023D               	subwf	??_EFuse^(0+256),w
 12627     069B  1D03               	skipz
 12628     069C  2EA0               	goto	u3435
 12629     069D  3073               	movlw	115
 12630     069E  0140               	movlb	0	; select bank0
 12631     069F  026D               	subwf	_Tambient,w
 12632     06A0                     u3435:
 12633     06A0  1C03               	skipc
 12634     06A1  2EAA               	goto	l5496
 12635                           
 12636                           ;efuse.c: 298:         {;efuse.c: 299:             Tambient = 115;
 12637     06A2  3073               	movlw	115
 12638     06A3  0140               	movlb	0	; select bank0
 12639     06A4  00ED               	movwf	_Tambient
 12640     06A5  3000               	movlw	0
 12641     06A6  00EE               	movwf	_Tambient+1
 12642                           
 12643                           ;efuse.c: 300:             overTempFault = TEMP_FAULT;
 12644     06A7  01AC               	clrf	_overTempFault
 12645     06A8  0AAC               	incf	_overTempFault,f
 12646     06A9  2EE8               	goto	l5512
 12647     06AA                     l5496:	
 12648                           ;efuse.c: 302:         }
 12649                           
 12650                           ;efuse.c: 301:             CmdOutput(OUTPUT_OFF);
 12651                           
 12652                           
 12653                           ;efuse.c: 304:         {;efuse.c: 305:             if((adcISense_curr >= iSenseOffset) &
      +                          & (iSenseOffset < 10))
 12654     06AA  0140               	movlb	0	; select bank0
 12655     06AB  083B               	movf	_iSenseOffset+1,w
 12656     06AC  023F               	subwf	_adcISense_curr+1,w
 12657     06AD  1D03               	skipz
 12658     06AE  2EB1               	goto	u3445
 12659     06AF  083A               	movf	_iSenseOffset,w
 12660     06B0  023E               	subwf	_adcISense_curr,w
 12661     06B1                     u3445:
 12662     06B1  1C03               	skipc
 12663     06B2  2EC1               	goto	l5502
 12664     06B3  3000               	movlw	0
 12665     06B4  023B               	subwf	_iSenseOffset+1,w
 12666     06B5  300A               	movlw	10
 12667     06B6  1903               	skipnz
 12668     06B7  023A               	subwf	_iSenseOffset,w
 12669     06B8  1803               	skipnc
 12670     06B9  2EC1               	goto	l5502
 12671                           
 12672                           ;efuse.c: 306:             {;efuse.c: 307:                 adcISense_corr = adcISense_cu
      +                          rr - iSenseOffset;
 12673     06BA  083A               	movf	_iSenseOffset,w
 12674     06BB  023E               	subwf	_adcISense_curr,w
 12675     06BC  00BC               	movwf	_adcISense_corr
 12676     06BD  083B               	movf	_iSenseOffset+1,w
 12677     06BE  3B3F               	subwfb	_adcISense_curr+1,w
 12678     06BF  00BD               	movwf	_adcISense_corr+1
 12679                           
 12680                           ;efuse.c: 308:             }
 12681     06C0  2EC5               	goto	l5504
 12682     06C1                     l5502:
 12683                           
 12684                           ;efuse.c: 310:             {;efuse.c: 311:                 adcISense_corr = adcISense_cu
      +                          rr;
 12685     06C1  083F               	movf	_adcISense_curr+1,w
 12686     06C2  00BD               	movwf	_adcISense_corr+1
 12687     06C3  083E               	movf	_adcISense_curr,w
 12688     06C4  00BC               	movwf	_adcISense_corr
 12689     06C5                     l5504:
 12690                           
 12691                           ;efuse.c: 313:             adcISense_OneMOSFET = adcISense_corr / 2;
 12692     06C5  083D               	movf	_adcISense_corr+1,w
 12693     06C6  0142               	movlb	2	; select bank2
 12694     06C7  00BE               	movwf	(??_EFuse^(0+256)+1)
 12695     06C8  0140               	movlb	0	; select bank0
 12696     06C9  083C               	movf	_adcISense_corr,w
 12697     06CA  0142               	movlb	2	; select bank2
 12698     06CB  00BD               	movwf	??_EFuse^(0+256)
 12699     06CC  36BE               	lsrf	(??_EFuse^(0+256)+1),f
 12700     06CD  0CBD               	rrf	??_EFuse^(0+256),f
 12701     06CE  083D               	movf	??_EFuse^(0+256),w
 12702     06CF  0141               	movlb	1	; select bank1
 12703     06D0  00AE               	movwf	_adcISense_OneMOSFET^(0+128)
 12704     06D1  0142               	movlb	2	; select bank2
 12705     06D2  083E               	movf	(??_EFuse+1)^(0+256),w
 12706     06D3  0141               	movlb	1	; select bank1
 12707     06D4  00AF               	movwf	(_adcISense_OneMOSFET+1)^(0+128)
 12708                           
 12709                           ;efuse.c: 314:             TCC_Curve();
 12710     06D5  3180  2067  3186   	fcall	_TCC_Curve
 12711                           
 12712                           ;efuse.c: 315:             if(Tjunction >= tj_limit)
 12713     06D8  0837               	movf	_Tjunction+1,w
 12714     06D9  3A80               	xorlw	128
 12715     06DA  0142               	movlb	2	; select bank2
 12716     06DB  00BD               	movwf	??_EFuse^(0+256)
 12717     06DC  3080               	movlw	128
 12718     06DD  023D               	subwf	??_EFuse^(0+256),w
 12719     06DE  1D03               	skipz
 12720     06DF  2EE3               	goto	u3465
 12721     06E0  0140               	movlb	0	; select bank0
 12722     06E1  086C               	movf	_tj_limit,w
 12723     06E2  0236               	subwf	_Tjunction,w
 12724     06E3                     u3465:
 12725     06E3  1C03               	skipc
 12726     06E4  2EEC               	goto	l1464
 12727                           
 12728                           ;efuse.c: 316:             {;efuse.c: 317:                 overCurrentFault = SLOW_OVER_
      +                          CURRENT_FAULT;
 12729     06E5  0140               	movlb	0	; select bank0
 12730     06E6  01AE               	clrf	_overCurrentFault
 12731     06E7  0AAE               	incf	_overCurrentFault,f
 12732     06E8                     l5512:
 12733                           
 12734                           ;efuse.c: 318:                 CmdOutput(OUTPUT_OFF);
 12735     06E8  3000               	movlw	0
 12736     06E9  318D  25EC  3186   	fcall	_CmdOutput
 12737     06EC                     l1464:	
 12738                           ;efuse.c: 320:         }
 12739                           
 12740                           
 12741                           ;efuse.c: 321:         Update_LIN_Data();
 12742     06EC  318F  2789         	fcall	_Update_LIN_Data
 12743     06EE  0008               	return
 12744     06EF                     __end_of_EFuse:
 12745                           
 12746                           	psect	text49
 12747     0F89                     __ptext49:	
 12748 ;; *************** function _Update_LIN_Data *****************
 12749 ;; Defined at:
 12750 ;;		line 133 in file "mcc_generated_files/LINDrivers/lin_app.c"
 12751 ;; Parameters:    Size  Location     Type
 12752 ;;		None
 12753 ;; Auto vars:     Size  Location     Type
 12754 ;;		None
 12755 ;; Return value:  Size  Location     Type
 12756 ;;                  1    wreg      void 
 12757 ;; Registers used:
 12758 ;;		wreg, status,2
 12759 ;; Tracked objects:
 12760 ;;		On entry : 0/0
 12761 ;;		On exit  : 3F/2
 12762 ;;		Unchanged: 0/0
 12763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12768 ;;Total ram usage:        0 bytes
 12769 ;; Hardware stack levels used: 1
 12770 ;; Hardware stack levels required when called: 5
 12771 ;; This function calls:
 12772 ;;		Nothing
 12773 ;; This function is called by:
 12774 ;;		_EFuse
 12775 ;; This function uses a non-reentrant model
 12776 ;;
 12777                           
 12778     0F89                     _Update_LIN_Data:	
 12779                           ;psect for function _Update_LIN_Data
 12780                           
 12781                           
 12782                           ;mcc_generated_files/LINDrivers/lin_app.c: 135:             LIN_OUTPUT_STATE_Data[0] = o
      +                          utputState;
 12783                           
 12784                           ;incstack = 0
 12785                           ; Regs used in _Update_LIN_Data: [wreg+status,2]
 12786     0F89  0140               	movlb	0	; select bank0
 12787     0F8A  082F               	movf	_outputState,w
 12788     0F8B  00C6               	movwf	_LIN_OUTPUT_STATE_Data
 12789                           
 12790                           ;mcc_generated_files/LINDrivers/lin_app.c: 137:             LIN_GET_TRIGGER_TYPE_Data[0]
      +                           = triggerType;
 12791     0F8C  0831               	movf	_triggerType,w
 12792     0F8D  00C5               	movwf	_LIN_GET_TRIGGER_TYPE_Data
 12793                           
 12794                           ;mcc_generated_files/LINDrivers/lin_app.c: 139:             LIN_OVER_CURRENT_FAULT_Data[
      +                          0] = overCurrentFault;
 12795     0F8E  082E               	movf	_overCurrentFault,w
 12796     0F8F  00C4               	movwf	_LIN_OVER_CURRENT_FAULT_Data
 12797                           
 12798                           ;mcc_generated_files/LINDrivers/lin_app.c: 141:             LIN_UVLO_FAULT_Data[0] = uvl
      +                          oFault;
 12799     0F90  082D               	movf	_uvloFault,w
 12800     0F91  00C3               	movwf	_LIN_UVLO_FAULT_Data
 12801                           
 12802                           ;mcc_generated_files/LINDrivers/lin_app.c: 143:             LIN_OVER_TEMP_FAULT_Data[0] 
      +                          = overTempFault;
 12803     0F92  082C               	movf	_overTempFault,w
 12804     0F93  00C2               	movwf	_LIN_OVER_TEMP_FAULT_Data
 12805                           
 12806                           ;mcc_generated_files/LINDrivers/lin_app.c: 145:             LIN_ADC_VCC_SENSE_Data[0] = 
      +                          0xff & adcVccSense_curr;
 12807     0F94  0840               	movf	_adcVccSense_curr,w
 12808     0F95  0141               	movlb	1	; select bank1
 12809     0F96  00D7               	movwf	_LIN_ADC_VCC_SENSE_Data^(0+128)
 12810                           
 12811                           ;mcc_generated_files/LINDrivers/lin_app.c: 146:             LIN_ADC_VCC_SENSE_Data[1] = 
      +                          0xff & (adcVccSense_curr >> 8);
 12812     0F97  0140               	movlb	0	; select bank0
 12813     0F98  0841               	movf	_adcVccSense_curr+1,w
 12814     0F99  0141               	movlb	1	; select bank1
 12815     0F9A  00D8               	movwf	(_LIN_ADC_VCC_SENSE_Data^(0+128)+1)
 12816                           
 12817                           ;mcc_generated_files/LINDrivers/lin_app.c: 148:             LIN_ADC_CURRENT_SENSE_UNCORR
      +                          ECTED_Data[0] = 0xff & adcISense_curr;
 12818     0F9B  0140               	movlb	0	; select bank0
 12819     0F9C  083E               	movf	_adcISense_curr,w
 12820     0F9D  0141               	movlb	1	; select bank1
 12821     0F9E  00D5               	movwf	_LIN_ADC_CURRENT_SENSE_UNCORRECTED_Data^(0+128)
 12822                           
 12823                           ;mcc_generated_files/LINDrivers/lin_app.c: 149:             LIN_ADC_CURRENT_SENSE_UNCORR
      +                          ECTED_Data[1] = 0xff & (adcISense_curr >> 8);
 12824     0F9F  0140               	movlb	0	; select bank0
 12825     0FA0  083F               	movf	_adcISense_curr+1,w
 12826     0FA1  0141               	movlb	1	; select bank1
 12827     0FA2  00D6               	movwf	(_LIN_ADC_CURRENT_SENSE_UNCORRECTED_Data^(0+128)+1)
 12828                           
 12829                           ;mcc_generated_files/LINDrivers/lin_app.c: 151:             LIN_ADC_TEMP_SENSE_Data[0] =
      +                           0xff & adcTSense_curr;
 12830     0FA3  0874               	movf	_adcTSense_curr,w
 12831     0FA4  00D3               	movwf	_LIN_ADC_TEMP_SENSE_Data^(0+128)
 12832                           
 12833                           ;mcc_generated_files/LINDrivers/lin_app.c: 152:             LIN_ADC_TEMP_SENSE_Data[1] =
      +                           0xff & (adcTSense_curr >> 8);
 12834     0FA5  0875               	movf	_adcTSense_curr+1,w
 12835     0FA6  00D4               	movwf	(_LIN_ADC_TEMP_SENSE_Data^(0+128)+1)
 12836                           
 12837                           ;mcc_generated_files/LINDrivers/lin_app.c: 154:             LIN_ADC_CURRENT_SENSE_CORREC
      +                          TED_Data[0] = 0xff & adcISense_corr;
 12838     0FA7  0140               	movlb	0	; select bank0
 12839     0FA8  083C               	movf	_adcISense_corr,w
 12840     0FA9  0141               	movlb	1	; select bank1
 12841     0FAA  00D1               	movwf	_LIN_ADC_CURRENT_SENSE_CORRECTED_Data^(0+128)
 12842                           
 12843                           ;mcc_generated_files/LINDrivers/lin_app.c: 155:             LIN_ADC_CURRENT_SENSE_CORREC
      +                          TED_Data[1] = 0xff & (adcISense_corr >> 8);
 12844     0FAB  0140               	movlb	0	; select bank0
 12845     0FAC  083D               	movf	_adcISense_corr+1,w
 12846     0FAD  0141               	movlb	1	; select bank1
 12847     0FAE  00D2               	movwf	(_LIN_ADC_CURRENT_SENSE_CORRECTED_Data^(0+128)+1)
 12848                           
 12849                           ;mcc_generated_files/LINDrivers/lin_app.c: 157:             LIN_CURRENT_SENSE_OFFSET_Dat
      +                          a[0] = 0xff & iSenseOffset;
 12850     0FAF  0140               	movlb	0	; select bank0
 12851     0FB0  083A               	movf	_iSenseOffset,w
 12852     0FB1  0141               	movlb	1	; select bank1
 12853     0FB2  00CF               	movwf	_LIN_CURRENT_SENSE_OFFSET_Data^(0+128)
 12854                           
 12855                           ;mcc_generated_files/LINDrivers/lin_app.c: 158:             LIN_CURRENT_SENSE_OFFSET_Dat
      +                          a[1] = 0xff & (iSenseOffset >> 8);
 12856     0FB3  0140               	movlb	0	; select bank0
 12857     0FB4  083B               	movf	_iSenseOffset+1,w
 12858     0FB5  0141               	movlb	1	; select bank1
 12859     0FB6  00D0               	movwf	(_LIN_CURRENT_SENSE_OFFSET_Data^(0+128)+1)
 12860                           
 12861                           ;mcc_generated_files/LINDrivers/lin_app.c: 160:             LIN_AMBIENT_TEMPERATURE_Data
      +                          [0] = 0xff & Tambient;
 12862     0FB7  0140               	movlb	0	; select bank0
 12863     0FB8  086D               	movf	_Tambient,w
 12864     0FB9  0141               	movlb	1	; select bank1
 12865     0FBA  00CD               	movwf	_LIN_AMBIENT_TEMPERATURE_Data^(0+128)
 12866                           
 12867                           ;mcc_generated_files/LINDrivers/lin_app.c: 161:             LIN_AMBIENT_TEMPERATURE_Data
      +                          [1] = 0xff & (Tambient >> 8);
 12868     0FBB  0140               	movlb	0	; select bank0
 12869     0FBC  086E               	movf	_Tambient+1,w
 12870     0FBD  0141               	movlb	1	; select bank1
 12871     0FBE  00CE               	movwf	(_LIN_AMBIENT_TEMPERATURE_Data^(0+128)+1)
 12872                           
 12873                           ;mcc_generated_files/LINDrivers/lin_app.c: 163:             LIN_HEATSINK_TEMPERATURE_Dat
      +                          a[0] = 0xff & Tsink;
 12874     0FBF  0140               	movlb	0	; select bank0
 12875     0FC0  0838               	movf	_Tsink,w
 12876     0FC1  0141               	movlb	1	; select bank1
 12877     0FC2  00CB               	movwf	_LIN_HEATSINK_TEMPERATURE_Data^(0+128)
 12878                           
 12879                           ;mcc_generated_files/LINDrivers/lin_app.c: 164:             LIN_HEATSINK_TEMPERATURE_Dat
      +                          a[1] = 0xff & (Tsink >> 8);
 12880     0FC3  0140               	movlb	0	; select bank0
 12881     0FC4  0839               	movf	_Tsink+1,w
 12882     0FC5  0141               	movlb	1	; select bank1
 12883     0FC6  00CC               	movwf	(_LIN_HEATSINK_TEMPERATURE_Data^(0+128)+1)
 12884                           
 12885                           ;mcc_generated_files/LINDrivers/lin_app.c: 166:             LIN_JUNCTION_TEMPERATURE_Dat
      +                          a[0] = 0xff & Tjunction;
 12886     0FC7  0140               	movlb	0	; select bank0
 12887     0FC8  0836               	movf	_Tjunction,w
 12888     0FC9  0141               	movlb	1	; select bank1
 12889     0FCA  00C9               	movwf	_LIN_JUNCTION_TEMPERATURE_Data^(0+128)
 12890                           
 12891                           ;mcc_generated_files/LINDrivers/lin_app.c: 167:             LIN_JUNCTION_TEMPERATURE_Dat
      +                          a[1] = 0xff & (Tjunction >> 8);
 12892     0FCB  0140               	movlb	0	; select bank0
 12893     0FCC  0837               	movf	_Tjunction+1,w
 12894     0FCD  0141               	movlb	1	; select bank1
 12895     0FCE  00CA               	movwf	(_LIN_JUNCTION_TEMPERATURE_Data^(0+128)+1)
 12896                           
 12897                           ;mcc_generated_files/LINDrivers/lin_app.c: 169:             LIN_TEMPERATURE_RISE_JS_Data
      +                          [0] = 0xff & Trise_js;
 12898     0FCF  0140               	movlb	0	; select bank0
 12899     0FD0  0834               	movf	_Trise_js,w
 12900     0FD1  0141               	movlb	1	; select bank1
 12901     0FD2  00C7               	movwf	_LIN_TEMPERATURE_RISE_JS_Data^(0+128)
 12902                           
 12903                           ;mcc_generated_files/LINDrivers/lin_app.c: 170:             LIN_TEMPERATURE_RISE_JS_Data
      +                          [1] = 0xff & (Trise_js >> 8);
 12904     0FD3  0140               	movlb	0	; select bank0
 12905     0FD4  0835               	movf	_Trise_js+1,w
 12906     0FD5  0141               	movlb	1	; select bank1
 12907     0FD6  00C8               	movwf	(_LIN_TEMPERATURE_RISE_JS_Data^(0+128)+1)
 12908                           
 12909                           ;mcc_generated_files/LINDrivers/lin_app.c: 172:             LIN_TEMPERATURE_RISE_SA_Data
      +                          [0] = 0xff & Trise_sa;
 12910     0FD7  0140               	movlb	0	; select bank0
 12911     0FD8  0832               	movf	_Trise_sa,w
 12912     0FD9  0141               	movlb	1	; select bank1
 12913     0FDA  00C5               	movwf	_LIN_TEMPERATURE_RISE_SA_Data^(0+128)
 12914                           
 12915                           ;mcc_generated_files/LINDrivers/lin_app.c: 173:             LIN_TEMPERATURE_RISE_SA_Data
      +                          [1] = 0xff & (Trise_sa >> 8);
 12916     0FDB  0140               	movlb	0	; select bank0
 12917     0FDC  0833               	movf	_Trise_sa+1,w
 12918     0FDD  0141               	movlb	1	; select bank1
 12919     0FDE  00C6               	movwf	(_LIN_TEMPERATURE_RISE_SA_Data^(0+128)+1)
 12920                           
 12921                           ;mcc_generated_files/LINDrivers/lin_app.c: 175:             LIN_DIAGNOSTIC_Data[0] = 0xf
      +                          f & adcISense_corr;
 12922     0FDF  0140               	movlb	0	; select bank0
 12923     0FE0  083C               	movf	_adcISense_corr,w
 12924     0FE1  0142               	movlb	2	; select bank2
 12925     0FE2  00D9               	movwf	_LIN_DIAGNOSTIC_Data^(0+256)
 12926                           
 12927                           ;mcc_generated_files/LINDrivers/lin_app.c: 176:             LIN_DIAGNOSTIC_Data[1] = 0xf
      +                          f & (adcISense_corr >> 8);
 12928     0FE3  0140               	movlb	0	; select bank0
 12929     0FE4  083D               	movf	_adcISense_corr+1,w
 12930     0FE5  0142               	movlb	2	; select bank2
 12931     0FE6  00DA               	movwf	(_LIN_DIAGNOSTIC_Data^(0+256)+1)
 12932                           
 12933                           ;mcc_generated_files/LINDrivers/lin_app.c: 177:             LIN_DIAGNOSTIC_Data[2] = 0xf
      +                          f & Tambient;
 12934     0FE7  0140               	movlb	0	; select bank0
 12935     0FE8  086D               	movf	_Tambient,w
 12936     0FE9  0142               	movlb	2	; select bank2
 12937     0FEA  00DB               	movwf	(_LIN_DIAGNOSTIC_Data^(0+256)+2)
 12938                           
 12939                           ;mcc_generated_files/LINDrivers/lin_app.c: 178:             LIN_DIAGNOSTIC_Data[3] = 0xf
      +                          f & (Tambient >> 8);
 12940     0FEB  0140               	movlb	0	; select bank0
 12941     0FEC  086E               	movf	_Tambient+1,w
 12942     0FED  0142               	movlb	2	; select bank2
 12943     0FEE  00DC               	movwf	(_LIN_DIAGNOSTIC_Data^(0+256)+3)
 12944                           
 12945                           ;mcc_generated_files/LINDrivers/lin_app.c: 179:             LIN_DIAGNOSTIC_Data[4] = 0xf
      +                          f & Tsink;
 12946     0FEF  0140               	movlb	0	; select bank0
 12947     0FF0  0838               	movf	_Tsink,w
 12948     0FF1  0142               	movlb	2	; select bank2
 12949     0FF2  00DD               	movwf	(_LIN_DIAGNOSTIC_Data^(0+256)+4)
 12950                           
 12951                           ;mcc_generated_files/LINDrivers/lin_app.c: 180:             LIN_DIAGNOSTIC_Data[5] = 0xf
      +                          f & (Tsink >> 8);
 12952     0FF3  0140               	movlb	0	; select bank0
 12953     0FF4  0839               	movf	_Tsink+1,w
 12954     0FF5  0142               	movlb	2	; select bank2
 12955     0FF6  00DE               	movwf	(_LIN_DIAGNOSTIC_Data^(0+256)+5)
 12956                           
 12957                           ;mcc_generated_files/LINDrivers/lin_app.c: 181:             LIN_DIAGNOSTIC_Data[6] = 0xf
      +                          f & Tjunction;
 12958     0FF7  0140               	movlb	0	; select bank0
 12959     0FF8  0836               	movf	_Tjunction,w
 12960     0FF9  0142               	movlb	2	; select bank2
 12961     0FFA  00DF               	movwf	(_LIN_DIAGNOSTIC_Data^(0+256)+6)
 12962                           
 12963                           ;mcc_generated_files/LINDrivers/lin_app.c: 182:             LIN_DIAGNOSTIC_Data[7] = 0xf
      +                          f & (Tjunction >> 8);
 12964     0FFB  0140               	movlb	0	; select bank0
 12965     0FFC  0837               	movf	_Tjunction+1,w
 12966     0FFD  0142               	movlb	2	; select bank2
 12967     0FFE  00E0               	movwf	(_LIN_DIAGNOSTIC_Data^(0+256)+7)
 12968     0FFF  0008               	return
 12969     1000                     __end_of_Update_LIN_Data:
 12970                           
 12971                           	psect	text50
 12972     0067                     __ptext50:	
 12973 ;; *************** function _TCC_Curve *****************
 12974 ;; Defined at:
 12975 ;;		line 476 in file "efuse.c"
 12976 ;; Parameters:    Size  Location     Type
 12977 ;;		None
 12978 ;; Auto vars:     Size  Location     Type
 12979 ;;		None
 12980 ;; Return value:  Size  Location     Type
 12981 ;;                  1    wreg      void 
 12982 ;; Registers used:
 12983 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12984 ;; Tracked objects:
 12985 ;;		On entry : 3F/1
 12986 ;;		On exit  : 3F/0
 12987 ;;		Unchanged: 0/0
 12988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12990 ;;      Locals:         0       0       0      12       0       0       0       0       0       0       0       0       
      +0       0
 12991 ;;      Temps:          0       0       0      12       0       0       0       0       0       0       0       0       
      +0       0
 12992 ;;      Totals:         0       0       0      24       0       0       0       0       0       0       0       0       
      +0       0
 12993 ;;Total ram usage:       24 bytes
 12994 ;; Hardware stack levels used: 1
 12995 ;; Hardware stack levels required when called: 6
 12996 ;; This function calls:
 12997 ;;		___lldiv
 12998 ;;		___lmul
 12999 ;;		___omul
 13000 ;; This function is called by:
 13001 ;;		_EFuse
 13002 ;; This function uses a non-reentrant model
 13003 ;;
 13004                           
 13005     0067                     _TCC_Curve:	
 13006                           ;psect for function _TCC_Curve
 13007                           
 13008                           
 13009                           ;efuse.c: 478:     Trise_raw_prev = Trise_raw_curr;
 13010                           
 13011                           ;incstack = 0
 13012                           ; Regs used in _TCC_Curve: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13013     0067  0827               	movf	(_Trise_raw_curr+3)^(0+128),w
 13014     0068  00A3               	movwf	(_Trise_raw_prev+3)^(0+128)
 13015     0069  0826               	movf	(_Trise_raw_curr+2)^(0+128),w
 13016     006A  00A2               	movwf	(_Trise_raw_prev+2)^(0+128)
 13017     006B  0825               	movf	(_Trise_raw_curr+1)^(0+128),w
 13018     006C  00A1               	movwf	(_Trise_raw_prev+1)^(0+128)
 13019     006D  0824               	movf	_Trise_raw_curr^(0+128),w
 13020     006E  00A0               	movwf	_Trise_raw_prev^(0+128)
 13021                           
 13022                           ;efuse.c: 479:     Trise_raw_curr = (uint32_t) ((((uint64_t) adcISense_corr * (uint64_t)
      +                           adcISense_corr) * factor_rdson_rthsa) >> 10);
 13023     006F  0140               	movlb	0	; select bank0
 13024     0070  083D               	movf	_adcISense_corr+1,w
 13025     0071  0142               	movlb	2	; select bank2
 13026     0072  00A6               	movwf	(??_TCC_Curve^(0+256)+1)
 13027     0073  0140               	movlb	0	; select bank0
 13028     0074  083C               	movf	_adcISense_corr,w
 13029     0075  0142               	movlb	2	; select bank2
 13030     0076  00A5               	movwf	??_TCC_Curve^(0+256)
 13031     0077  0825               	movf	??_TCC_Curve^(0+256),w
 13032     0078  0140               	movlb	0	; select bank0
 13033     0079  00CE               	movwf	___omul@multiplier
 13034     007A  0142               	movlb	2	; select bank2
 13035     007B  0826               	movf	(??_TCC_Curve^(0+256)+1),w
 13036     007C  0140               	movlb	0	; select bank0
 13037     007D  00CF               	movwf	___omul@multiplier+1
 13038     007E  01D0               	clrf	___omul@multiplier+2
 13039     007F  01D1               	clrf	___omul@multiplier+3
 13040     0080  01D2               	clrf	___omul@multiplier+4
 13041     0081  01D3               	clrf	___omul@multiplier+5
 13042     0082  01D4               	clrf	___omul@multiplier+6
 13043     0083  01D5               	clrf	___omul@multiplier+7
 13044     0084  083D               	movf	_adcISense_corr+1,w
 13045     0085  0142               	movlb	2	; select bank2
 13046     0086  00A8               	movwf	((??_TCC_Curve+2)^(0+256)+1)
 13047     0087  0140               	movlb	0	; select bank0
 13048     0088  083C               	movf	_adcISense_corr,w
 13049     0089  0142               	movlb	2	; select bank2
 13050     008A  00A7               	movwf	(??_TCC_Curve+2)^(0+256)
 13051     008B  0827               	movf	(??_TCC_Curve+2)^(0+256),w
 13052     008C  0140               	movlb	0	; select bank0
 13053     008D  00D6               	movwf	___omul@multiplicand
 13054     008E  0142               	movlb	2	; select bank2
 13055     008F  0828               	movf	((??_TCC_Curve+2)^(0+256)+1),w
 13056     0090  0140               	movlb	0	; select bank0
 13057     0091  00D7               	movwf	___omul@multiplicand+1
 13058     0092  01D8               	clrf	___omul@multiplicand+2
 13059     0093  01D9               	clrf	___omul@multiplicand+3
 13060     0094  01DA               	clrf	___omul@multiplicand+4
 13061     0095  01DB               	clrf	___omul@multiplicand+5
 13062     0096  01DC               	clrf	___omul@multiplicand+6
 13063     0097  01DD               	clrf	___omul@multiplicand+7
 13064     0098  318C  24FA  3180   	fcall	___omul
 13065     009B  084E               	movf	?___omul,w
 13066     009C  0142               	movlb	2	; select bank2
 13067     009D  00B1               	movwf	_TCC_Curve$3309^(0+256)
 13068     009E  0140               	movlb	0	; select bank0
 13069     009F  084F               	movf	?___omul+1,w
 13070     00A0  0142               	movlb	2	; select bank2
 13071     00A1  00B2               	movwf	(_TCC_Curve$3309+1)^(0+256)
 13072     00A2  0140               	movlb	0	; select bank0
 13073     00A3  0850               	movf	?___omul+2,w
 13074     00A4  0142               	movlb	2	; select bank2
 13075     00A5  00B3               	movwf	(_TCC_Curve$3309+2)^(0+256)
 13076     00A6  0140               	movlb	0	; select bank0
 13077     00A7  0851               	movf	?___omul+3,w
 13078     00A8  0142               	movlb	2	; select bank2
 13079     00A9  00B4               	movwf	(_TCC_Curve$3309+3)^(0+256)
 13080     00AA  0140               	movlb	0	; select bank0
 13081     00AB  0852               	movf	?___omul+4,w
 13082     00AC  0142               	movlb	2	; select bank2
 13083     00AD  00B5               	movwf	(_TCC_Curve$3309+4)^(0+256)
 13084     00AE  0140               	movlb	0	; select bank0
 13085     00AF  0853               	movf	?___omul+5,w
 13086     00B0  0142               	movlb	2	; select bank2
 13087     00B1  00B6               	movwf	(_TCC_Curve$3309+5)^(0+256)
 13088     00B2  0140               	movlb	0	; select bank0
 13089     00B3  0854               	movf	?___omul+6,w
 13090     00B4  0142               	movlb	2	; select bank2
 13091     00B5  00B7               	movwf	(_TCC_Curve$3309+6)^(0+256)
 13092     00B6  0140               	movlb	0	; select bank0
 13093     00B7  0855               	movf	?___omul+7,w
 13094     00B8  0142               	movlb	2	; select bank2
 13095     00B9  00B8               	movwf	(_TCC_Curve$3309+7)^(0+256)
 13096                           
 13097                           ;efuse.c: 479:     Trise_raw_curr = (uint32_t) ((((uint64_t) adcISense_corr * (uint64_t)
      +                           adcISense_corr) * factor_rdson_rthsa) >> 10);
 13098     00BA  0831               	movf	_TCC_Curve$3309^(0+256),w
 13099     00BB  0140               	movlb	0	; select bank0
 13100     00BC  00CE               	movwf	___omul@multiplier
 13101     00BD  0142               	movlb	2	; select bank2
 13102     00BE  0832               	movf	(_TCC_Curve$3309+1)^(0+256),w
 13103     00BF  0140               	movlb	0	; select bank0
 13104     00C0  00CF               	movwf	___omul@multiplier+1
 13105     00C1  0142               	movlb	2	; select bank2
 13106     00C2  0833               	movf	(_TCC_Curve$3309+2)^(0+256),w
 13107     00C3  0140               	movlb	0	; select bank0
 13108     00C4  00D0               	movwf	___omul@multiplier+2
 13109     00C5  0142               	movlb	2	; select bank2
 13110     00C6  0834               	movf	(_TCC_Curve$3309+3)^(0+256),w
 13111     00C7  0140               	movlb	0	; select bank0
 13112     00C8  00D1               	movwf	___omul@multiplier+3
 13113     00C9  0142               	movlb	2	; select bank2
 13114     00CA  0835               	movf	(_TCC_Curve$3309+4)^(0+256),w
 13115     00CB  0140               	movlb	0	; select bank0
 13116     00CC  00D2               	movwf	___omul@multiplier+4
 13117     00CD  0142               	movlb	2	; select bank2
 13118     00CE  0836               	movf	(_TCC_Curve$3309+5)^(0+256),w
 13119     00CF  0140               	movlb	0	; select bank0
 13120     00D0  00D3               	movwf	___omul@multiplier+5
 13121     00D1  0142               	movlb	2	; select bank2
 13122     00D2  0837               	movf	(_TCC_Curve$3309+6)^(0+256),w
 13123     00D3  0140               	movlb	0	; select bank0
 13124     00D4  00D4               	movwf	___omul@multiplier+6
 13125     00D5  0142               	movlb	2	; select bank2
 13126     00D6  0838               	movf	(_TCC_Curve$3309+7)^(0+256),w
 13127     00D7  0140               	movlb	0	; select bank0
 13128     00D8  00D5               	movwf	___omul@multiplier+7
 13129     00D9  0141               	movlb	1	; select bank1
 13130     00DA  086A               	movf	(_factor_rdson_rthsa+1)^(0+128),w
 13131     00DB  0142               	movlb	2	; select bank2
 13132     00DC  00A6               	movwf	(??_TCC_Curve^(0+256)+1)
 13133     00DD  0141               	movlb	1	; select bank1
 13134     00DE  0869               	movf	_factor_rdson_rthsa^(0+128),w
 13135     00DF  0142               	movlb	2	; select bank2
 13136     00E0  00A5               	movwf	??_TCC_Curve^(0+256)
 13137     00E1  0825               	movf	??_TCC_Curve^(0+256),w
 13138     00E2  0140               	movlb	0	; select bank0
 13139     00E3  00D6               	movwf	___omul@multiplicand
 13140     00E4  0142               	movlb	2	; select bank2
 13141     00E5  0826               	movf	(??_TCC_Curve^(0+256)+1),w
 13142     00E6  0140               	movlb	0	; select bank0
 13143     00E7  00D7               	movwf	___omul@multiplicand+1
 13144     00E8  01D8               	clrf	___omul@multiplicand+2
 13145     00E9  01D9               	clrf	___omul@multiplicand+3
 13146     00EA  01DA               	clrf	___omul@multiplicand+4
 13147     00EB  01DB               	clrf	___omul@multiplicand+5
 13148     00EC  01DC               	clrf	___omul@multiplicand+6
 13149     00ED  01DD               	clrf	___omul@multiplicand+7
 13150     00EE  318C  24FA  3180   	fcall	___omul
 13151     00F1  304E               	movlw	low ?___omul
 13152     00F2  0086               	movwf	6
 13153     00F3  3000               	movlw	high ?___omul
 13154     00F4  0087               	movwf	7
 13155     00F5  3F40               	moviw [0]fsr1
 13156     00F6  0142               	movlb	2	; select bank2
 13157     00F7  00A7               	movwf	(??_TCC_Curve+2)^(0+256)
 13158     00F8  3F41               	moviw [1]fsr1
 13159     00F9  00A8               	movwf	((??_TCC_Curve+2)^(0+256)+1)
 13160     00FA  3F42               	moviw [2]fsr1
 13161     00FB  00A9               	movwf	((??_TCC_Curve+2)^(0+256)+2)
 13162     00FC  3F43               	moviw [3]fsr1
 13163     00FD  00AA               	movwf	((??_TCC_Curve+2)^(0+256)+3)
 13164     00FE  3F44               	moviw [4]fsr1
 13165     00FF  00AB               	movwf	((??_TCC_Curve+2)^(0+256)+4)
 13166     0100  3F45               	moviw [5]fsr1
 13167     0101  00AC               	movwf	((??_TCC_Curve+2)^(0+256)+5)
 13168     0102  3F46               	moviw [6]fsr1
 13169     0103  00AD               	movwf	((??_TCC_Curve+2)^(0+256)+6)
 13170     0104  3F47               	moviw [7]fsr1
 13171     0105  00AE               	movwf	((??_TCC_Curve+2)^(0+256)+7)
 13172     0106  300A               	movlw	10
 13173     0107                     u3205:
 13174     0107  0142               	movlb	2	; select bank2
 13175     0108  36AE               	lsrf	((??_TCC_Curve+2)^(0+256)+7),f
 13176     0109  0CAD               	rrf	((??_TCC_Curve+2)^(0+256)+6),f
 13177     010A  0CAC               	rrf	((??_TCC_Curve+2)^(0+256)+5),f
 13178     010B  0CAB               	rrf	((??_TCC_Curve+2)^(0+256)+4),f
 13179     010C  0CAA               	rrf	((??_TCC_Curve+2)^(0+256)+3),f
 13180     010D  0CA9               	rrf	((??_TCC_Curve+2)^(0+256)+2),f
 13181     010E  0CA8               	rrf	((??_TCC_Curve+2)^(0+256)+1),f
 13182     010F  0CA7               	rrf	(??_TCC_Curve+2)^(0+256),f
 13183     0110  0B89               	decfsz	9,f
 13184     0111  2907               	goto	u3205
 13185     0112  0142               	movlb	2	; select bank2
 13186     0113  082A               	movf	((??_TCC_Curve+2)^(0+256)+3),w
 13187     0114  0141               	movlb	1	; select bank1
 13188     0115  00A7               	movwf	(_Trise_raw_curr+3)^(0+128)
 13189     0116  0142               	movlb	2	; select bank2
 13190     0117  0829               	movf	((??_TCC_Curve+2)^(0+256)+2),w
 13191     0118  0141               	movlb	1	; select bank1
 13192     0119  00A6               	movwf	(_Trise_raw_curr+2)^(0+128)
 13193     011A  0142               	movlb	2	; select bank2
 13194     011B  0828               	movf	((??_TCC_Curve+2)^(0+256)+1),w
 13195     011C  0141               	movlb	1	; select bank1
 13196     011D  00A5               	movwf	(_Trise_raw_curr+1)^(0+128)
 13197     011E  0142               	movlb	2	; select bank2
 13198     011F  0827               	movf	(??_TCC_Curve+2)^(0+256),w
 13199     0120  0141               	movlb	1	; select bank1
 13200     0121  00A4               	movwf	_Trise_raw_curr^(0+128)
 13201                           
 13202                           ;efuse.c: 480:     Trise_filtered = (uint32_t) ((uint64_t) a1_coef * Trise_filtered + (u
      +                          int32_t) b1_coef * (Trise_raw_prev + Trise_raw_curr)) >> 16;
 13203     0122  0820               	movf	_Trise_raw_prev^(0+128),w
 13204     0123  0724               	addwf	_Trise_raw_curr^(0+128),w
 13205     0124  0142               	movlb	2	; select bank2
 13206     0125  00A5               	movwf	??_TCC_Curve^(0+256)
 13207     0126  0141               	movlb	1	; select bank1
 13208     0127  0821               	movf	(_Trise_raw_prev+1)^(0+128),w
 13209     0128  3D25               	addwfc	(_Trise_raw_curr+1)^(0+128),w
 13210     0129  0142               	movlb	2	; select bank2
 13211     012A  00A6               	movwf	(??_TCC_Curve^(0+256)+1)
 13212     012B  0141               	movlb	1	; select bank1
 13213     012C  0822               	movf	(_Trise_raw_prev+2)^(0+128),w
 13214     012D  3D26               	addwfc	(_Trise_raw_curr+2)^(0+128),w
 13215     012E  0142               	movlb	2	; select bank2
 13216     012F  00A7               	movwf	(??_TCC_Curve^(0+256)+2)
 13217     0130  0141               	movlb	1	; select bank1
 13218     0131  0823               	movf	(_Trise_raw_prev+3)^(0+128),w
 13219     0132  3D27               	addwfc	(_Trise_raw_curr+3)^(0+128),w
 13220     0133  0142               	movlb	2	; select bank2
 13221     0134  00A8               	movwf	(??_TCC_Curve^(0+256)+3)
 13222     0135  0828               	movf	(??_TCC_Curve+3)^(0+256),w
 13223     0136  0140               	movlb	0	; select bank0
 13224     0137  00D1               	movwf	___lmul@multiplier+3
 13225     0138  0142               	movlb	2	; select bank2
 13226     0139  0827               	movf	(??_TCC_Curve+2)^(0+256),w
 13227     013A  0140               	movlb	0	; select bank0
 13228     013B  00D0               	movwf	___lmul@multiplier+2
 13229     013C  0142               	movlb	2	; select bank2
 13230     013D  0826               	movf	(??_TCC_Curve+1)^(0+256),w
 13231     013E  0140               	movlb	0	; select bank0
 13232     013F  00CF               	movwf	___lmul@multiplier+1
 13233     0140  0142               	movlb	2	; select bank2
 13234     0141  0825               	movf	??_TCC_Curve^(0+256),w
 13235     0142  0140               	movlb	0	; select bank0
 13236     0143  00CE               	movwf	___lmul@multiplier
 13237     0144  086A               	movf	_b1_coef,w
 13238     0145  0142               	movlb	2	; select bank2
 13239     0146  00A9               	movwf	(??_TCC_Curve+4)^(0+256)
 13240     0147  01AA               	clrf	((??_TCC_Curve+4)^(0+256)+1)
 13241     0148  01AB               	clrf	((??_TCC_Curve+4)^(0+256)+2)
 13242     0149  01AC               	clrf	((??_TCC_Curve+4)^(0+256)+3)
 13243     014A  082C               	movf	(??_TCC_Curve+7)^(0+256),w
 13244     014B  0140               	movlb	0	; select bank0
 13245     014C  00D5               	movwf	___lmul@multiplicand+3
 13246     014D  0142               	movlb	2	; select bank2
 13247     014E  082B               	movf	(??_TCC_Curve+6)^(0+256),w
 13248     014F  0140               	movlb	0	; select bank0
 13249     0150  00D4               	movwf	___lmul@multiplicand+2
 13250     0151  0142               	movlb	2	; select bank2
 13251     0152  082A               	movf	(??_TCC_Curve+5)^(0+256),w
 13252     0153  0140               	movlb	0	; select bank0
 13253     0154  00D3               	movwf	___lmul@multiplicand+1
 13254     0155  0142               	movlb	2	; select bank2
 13255     0156  0829               	movf	(??_TCC_Curve+4)^(0+256),w
 13256     0157  0140               	movlb	0	; select bank0
 13257     0158  00D2               	movwf	___lmul@multiplicand
 13258     0159  318B  23C8  3180   	fcall	___lmul
 13259     015C  084E               	movf	?___lmul,w
 13260     015D  0142               	movlb	2	; select bank2
 13261     015E  00AD               	movwf	(??_TCC_Curve+8)^(0+256)
 13262     015F  0140               	movlb	0	; select bank0
 13263     0160  084F               	movf	?___lmul+1,w
 13264     0161  0142               	movlb	2	; select bank2
 13265     0162  00AE               	movwf	((??_TCC_Curve+8)^(0+256)+1)
 13266     0163  0140               	movlb	0	; select bank0
 13267     0164  0850               	movf	?___lmul+2,w
 13268     0165  0142               	movlb	2	; select bank2
 13269     0166  00AF               	movwf	((??_TCC_Curve+8)^(0+256)+2)
 13270     0167  0140               	movlb	0	; select bank0
 13271     0168  0851               	movf	?___lmul+3,w
 13272     0169  0142               	movlb	2	; select bank2
 13273     016A  00B0               	movwf	((??_TCC_Curve+8)^(0+256)+3)
 13274     016B  0141               	movlb	1	; select bank1
 13275     016C  0865               	movf	_a1_coef^(0+128),w
 13276     016D  0140               	movlb	0	; select bank0
 13277     016E  00CE               	movwf	___lmul@multiplier
 13278     016F  0141               	movlb	1	; select bank1
 13279     0170  0866               	movf	(_a1_coef+1)^(0+128),w
 13280     0171  0140               	movlb	0	; select bank0
 13281     0172  00CF               	movwf	___lmul@multiplier+1
 13282     0173  01D0               	clrf	___lmul@multiplier+2
 13283     0174  01D1               	clrf	___lmul@multiplier+3
 13284     0175  0141               	movlb	1	; select bank1
 13285     0176  082B               	movf	(_Trise_filtered+3)^(0+128),w
 13286     0177  0140               	movlb	0	; select bank0
 13287     0178  00D5               	movwf	___lmul@multiplicand+3
 13288     0179  0141               	movlb	1	; select bank1
 13289     017A  082A               	movf	(_Trise_filtered+2)^(0+128),w
 13290     017B  0140               	movlb	0	; select bank0
 13291     017C  00D4               	movwf	___lmul@multiplicand+2
 13292     017D  0141               	movlb	1	; select bank1
 13293     017E  0829               	movf	(_Trise_filtered+1)^(0+128),w
 13294     017F  0140               	movlb	0	; select bank0
 13295     0180  00D3               	movwf	___lmul@multiplicand+1
 13296     0181  0141               	movlb	1	; select bank1
 13297     0182  0828               	movf	_Trise_filtered^(0+128),w
 13298     0183  0140               	movlb	0	; select bank0
 13299     0184  00D2               	movwf	___lmul@multiplicand
 13300     0185  318B  23C8  3180   	fcall	___lmul
 13301     0188  084E               	movf	?___lmul,w
 13302     0189  0142               	movlb	2	; select bank2
 13303     018A  07AD               	addwf	(??_TCC_Curve+8)^(0+256),f
 13304     018B  0140               	movlb	0	; select bank0
 13305     018C  084F               	movf	?___lmul+1,w
 13306     018D  0142               	movlb	2	; select bank2
 13307     018E  3DAE               	addwfc	((??_TCC_Curve+8)^(0+256)+1),f
 13308     018F  0140               	movlb	0	; select bank0
 13309     0190  0850               	movf	?___lmul+2,w
 13310     0191  0142               	movlb	2	; select bank2
 13311     0192  3DAF               	addwfc	((??_TCC_Curve+8)^(0+256)+2),f
 13312     0193  0140               	movlb	0	; select bank0
 13313     0194  0851               	movf	?___lmul+3,w
 13314     0195  0142               	movlb	2	; select bank2
 13315     0196  3DB0               	addwfc	((??_TCC_Curve+8)^(0+256)+3),f
 13316     0197  3010               	movlw	16
 13317     0198                     u3215:
 13318     0198  36B0               	lsrf	((??_TCC_Curve+8)^(0+256)+3),f
 13319     0199  0CAF               	rrf	((??_TCC_Curve+8)^(0+256)+2),f
 13320     019A  0CAE               	rrf	((??_TCC_Curve+8)^(0+256)+1),f
 13321     019B  0CAD               	rrf	(??_TCC_Curve+8)^(0+256),f
 13322     019C  0B89               	decfsz	9,f
 13323     019D  2998               	goto	u3215
 13324     019E  0830               	movf	(??_TCC_Curve+11)^(0+256),w
 13325     019F  0141               	movlb	1	; select bank1
 13326     01A0  00AB               	movwf	(_Trise_filtered+3)^(0+128)
 13327     01A1  0142               	movlb	2	; select bank2
 13328     01A2  082F               	movf	(??_TCC_Curve+10)^(0+256),w
 13329     01A3  0141               	movlb	1	; select bank1
 13330     01A4  00AA               	movwf	(_Trise_filtered+2)^(0+128)
 13331     01A5  0142               	movlb	2	; select bank2
 13332     01A6  082E               	movf	(??_TCC_Curve+9)^(0+256),w
 13333     01A7  0141               	movlb	1	; select bank1
 13334     01A8  00A9               	movwf	(_Trise_filtered+1)^(0+128)
 13335     01A9  0142               	movlb	2	; select bank2
 13336     01AA  082D               	movf	(??_TCC_Curve+8)^(0+256),w
 13337     01AB  0141               	movlb	1	; select bank1
 13338     01AC  00A8               	movwf	_Trise_filtered^(0+128)
 13339                           
 13340                           ;efuse.c: 482:     Trise_sa = (int16_t) (Trise_filtered / current2counts_squared);
 13341     01AD  0867               	movf	_current2counts_squared^(0+128),w
 13342     01AE  0140               	movlb	0	; select bank0
 13343     01AF  00DA               	movwf	___lldiv@divisor
 13344     01B0  0141               	movlb	1	; select bank1
 13345     01B1  0868               	movf	(_current2counts_squared+1)^(0+128),w
 13346     01B2  0140               	movlb	0	; select bank0
 13347     01B3  00DB               	movwf	___lldiv@divisor+1
 13348     01B4  01DC               	clrf	___lldiv@divisor+2
 13349     01B5  01DD               	clrf	___lldiv@divisor+3
 13350     01B6  0141               	movlb	1	; select bank1
 13351     01B7  082B               	movf	(_Trise_filtered+3)^(0+128),w
 13352     01B8  0140               	movlb	0	; select bank0
 13353     01B9  00E1               	movwf	___lldiv@dividend+3
 13354     01BA  0141               	movlb	1	; select bank1
 13355     01BB  082A               	movf	(_Trise_filtered+2)^(0+128),w
 13356     01BC  0140               	movlb	0	; select bank0
 13357     01BD  00E0               	movwf	___lldiv@dividend+2
 13358     01BE  0141               	movlb	1	; select bank1
 13359     01BF  0829               	movf	(_Trise_filtered+1)^(0+128),w
 13360     01C0  0140               	movlb	0	; select bank0
 13361     01C1  00DF               	movwf	___lldiv@dividend+1
 13362     01C2  0141               	movlb	1	; select bank1
 13363     01C3  0828               	movf	_Trise_filtered^(0+128),w
 13364     01C4  0140               	movlb	0	; select bank0
 13365     01C5  00DE               	movwf	___lldiv@dividend
 13366     01C6  318E  2649  3180   	fcall	___lldiv
 13367     01C9  085B               	movf	?___lldiv+1,w
 13368     01CA  00B3               	movwf	_Trise_sa+1
 13369     01CB  085A               	movf	?___lldiv,w
 13370     01CC  00B2               	movwf	_Trise_sa
 13371                           
 13372                           ;efuse.c: 483:     Tsink = Tambient + Trise_sa;
 13373     01CD  0832               	movf	_Trise_sa,w
 13374     01CE  076D               	addwf	_Tambient,w
 13375     01CF  00B8               	movwf	_Tsink
 13376     01D0  0833               	movf	_Trise_sa+1,w
 13377     01D1  3D6E               	addwfc	_Tambient+1,w
 13378     01D2  00B9               	movwf	_Tsink+1
 13379                           
 13380                           ;efuse.c: 485:     Trise_js = (int16_t) (((((uint32_t) adcISense_OneMOSFET * (uint32_t) 
      +                          adcISense_OneMOSFET) * factor_rdson_rthjs) >> 10) / current2counts_squared);
 13381     01D3  0141               	movlb	1	; select bank1
 13382     01D4  082E               	movf	_adcISense_OneMOSFET^(0+128),w
 13383     01D5  0140               	movlb	0	; select bank0
 13384     01D6  00D2               	movwf	___lmul@multiplicand
 13385     01D7  0141               	movlb	1	; select bank1
 13386     01D8  082F               	movf	(_adcISense_OneMOSFET+1)^(0+128),w
 13387     01D9  0140               	movlb	0	; select bank0
 13388     01DA  00D3               	movwf	___lmul@multiplicand+1
 13389     01DB  01D4               	clrf	___lmul@multiplicand+2
 13390     01DC  01D5               	clrf	___lmul@multiplicand+3
 13391     01DD  0141               	movlb	1	; select bank1
 13392     01DE  082E               	movf	_adcISense_OneMOSFET^(0+128),w
 13393     01DF  0140               	movlb	0	; select bank0
 13394     01E0  00CE               	movwf	___lmul@multiplier
 13395     01E1  0141               	movlb	1	; select bank1
 13396     01E2  082F               	movf	(_adcISense_OneMOSFET+1)^(0+128),w
 13397     01E3  0140               	movlb	0	; select bank0
 13398     01E4  00CF               	movwf	___lmul@multiplier+1
 13399     01E5  01D0               	clrf	___lmul@multiplier+2
 13400     01E6  01D1               	clrf	___lmul@multiplier+3
 13401     01E7  318B  23C8  3180   	fcall	___lmul
 13402     01EA  0851               	movf	?___lmul+3,w
 13403     01EB  0142               	movlb	2	; select bank2
 13404     01EC  00BC               	movwf	(_TCC_Curve$3310+3)^(0+256)
 13405     01ED  0140               	movlb	0	; select bank0
 13406     01EE  0850               	movf	?___lmul+2,w
 13407     01EF  0142               	movlb	2	; select bank2
 13408     01F0  00BB               	movwf	(_TCC_Curve$3310+2)^(0+256)
 13409     01F1  0140               	movlb	0	; select bank0
 13410     01F2  084F               	movf	?___lmul+1,w
 13411     01F3  0142               	movlb	2	; select bank2
 13412     01F4  00BA               	movwf	(_TCC_Curve$3310+1)^(0+256)
 13413     01F5  0140               	movlb	0	; select bank0
 13414     01F6  084E               	movf	?___lmul,w
 13415     01F7  0142               	movlb	2	; select bank2
 13416     01F8  00B9               	movwf	_TCC_Curve$3310^(0+256)
 13417                           
 13418                           ;efuse.c: 485:     Trise_js = (int16_t) (((((uint32_t) adcISense_OneMOSFET * (uint32_t) 
      +                          adcISense_OneMOSFET) * factor_rdson_rthjs) >> 10) / current2counts_squared);
 13419     01F9  0141               	movlb	1	; select bank1
 13420     01FA  0867               	movf	_current2counts_squared^(0+128),w
 13421     01FB  0140               	movlb	0	; select bank0
 13422     01FC  00DA               	movwf	___lldiv@divisor
 13423     01FD  0141               	movlb	1	; select bank1
 13424     01FE  0868               	movf	(_current2counts_squared+1)^(0+128),w
 13425     01FF  0140               	movlb	0	; select bank0
 13426     0200  00DB               	movwf	___lldiv@divisor+1
 13427     0201  01DC               	clrf	___lldiv@divisor+2
 13428     0202  01DD               	clrf	___lldiv@divisor+3
 13429     0203  0141               	movlb	1	; select bank1
 13430     0204  086B               	movf	_factor_rdson_rthjs^(0+128),w
 13431     0205  0140               	movlb	0	; select bank0
 13432     0206  00D2               	movwf	___lmul@multiplicand
 13433     0207  0141               	movlb	1	; select bank1
 13434     0208  086C               	movf	(_factor_rdson_rthjs+1)^(0+128),w
 13435     0209  0140               	movlb	0	; select bank0
 13436     020A  00D3               	movwf	___lmul@multiplicand+1
 13437     020B  01D4               	clrf	___lmul@multiplicand+2
 13438     020C  01D5               	clrf	___lmul@multiplicand+3
 13439     020D  0142               	movlb	2	; select bank2
 13440     020E  083C               	movf	(_TCC_Curve$3310+3)^(0+256),w
 13441     020F  0140               	movlb	0	; select bank0
 13442     0210  00D1               	movwf	___lmul@multiplier+3
 13443     0211  0142               	movlb	2	; select bank2
 13444     0212  083B               	movf	(_TCC_Curve$3310+2)^(0+256),w
 13445     0213  0140               	movlb	0	; select bank0
 13446     0214  00D0               	movwf	___lmul@multiplier+2
 13447     0215  0142               	movlb	2	; select bank2
 13448     0216  083A               	movf	(_TCC_Curve$3310+1)^(0+256),w
 13449     0217  0140               	movlb	0	; select bank0
 13450     0218  00CF               	movwf	___lmul@multiplier+1
 13451     0219  0142               	movlb	2	; select bank2
 13452     021A  0839               	movf	_TCC_Curve$3310^(0+256),w
 13453     021B  0140               	movlb	0	; select bank0
 13454     021C  00CE               	movwf	___lmul@multiplier
 13455     021D  318B  23C8  3180   	fcall	___lmul
 13456     0220  084E               	movf	?___lmul,w
 13457     0221  0142               	movlb	2	; select bank2
 13458     0222  00A5               	movwf	??_TCC_Curve^(0+256)
 13459     0223  0140               	movlb	0	; select bank0
 13460     0224  084F               	movf	?___lmul+1,w
 13461     0225  0142               	movlb	2	; select bank2
 13462     0226  00A6               	movwf	(??_TCC_Curve^(0+256)+1)
 13463     0227  0140               	movlb	0	; select bank0
 13464     0228  0850               	movf	?___lmul+2,w
 13465     0229  0142               	movlb	2	; select bank2
 13466     022A  00A7               	movwf	(??_TCC_Curve^(0+256)+2)
 13467     022B  0140               	movlb	0	; select bank0
 13468     022C  0851               	movf	?___lmul+3,w
 13469     022D  0142               	movlb	2	; select bank2
 13470     022E  00A8               	movwf	(??_TCC_Curve^(0+256)+3)
 13471     022F  300A               	movlw	10
 13472     0230                     u3225:
 13473     0230  36A8               	lsrf	(??_TCC_Curve^(0+256)+3),f
 13474     0231  0CA7               	rrf	(??_TCC_Curve^(0+256)+2),f
 13475     0232  0CA6               	rrf	(??_TCC_Curve^(0+256)+1),f
 13476     0233  0CA5               	rrf	??_TCC_Curve^(0+256),f
 13477     0234  0B89               	decfsz	9,f
 13478     0235  2A30               	goto	u3225
 13479     0236  0828               	movf	(??_TCC_Curve+3)^(0+256),w
 13480     0237  0140               	movlb	0	; select bank0
 13481     0238  00E1               	movwf	___lldiv@dividend+3
 13482     0239  0142               	movlb	2	; select bank2
 13483     023A  0827               	movf	(??_TCC_Curve+2)^(0+256),w
 13484     023B  0140               	movlb	0	; select bank0
 13485     023C  00E0               	movwf	___lldiv@dividend+2
 13486     023D  0142               	movlb	2	; select bank2
 13487     023E  0826               	movf	(??_TCC_Curve+1)^(0+256),w
 13488     023F  0140               	movlb	0	; select bank0
 13489     0240  00DF               	movwf	___lldiv@dividend+1
 13490     0241  0142               	movlb	2	; select bank2
 13491     0242  0825               	movf	??_TCC_Curve^(0+256),w
 13492     0243  0140               	movlb	0	; select bank0
 13493     0244  00DE               	movwf	___lldiv@dividend
 13494     0245  318E  2649         	fcall	___lldiv
 13495     0247  085B               	movf	?___lldiv+1,w
 13496     0248  00B5               	movwf	_Trise_js+1
 13497     0249  085A               	movf	?___lldiv,w
 13498     024A  00B4               	movwf	_Trise_js
 13499                           
 13500                           ;efuse.c: 486:     Tjunction = Tsink + Trise_js;
 13501     024B  0834               	movf	_Trise_js,w
 13502     024C  0738               	addwf	_Tsink,w
 13503     024D  00B6               	movwf	_Tjunction
 13504     024E  0835               	movf	_Trise_js+1,w
 13505     024F  3D39               	addwfc	_Tsink+1,w
 13506     0250  00B7               	movwf	_Tjunction+1
 13507     0251  0008               	return
 13508     0252                     __end_of_TCC_Curve:
 13509                           
 13510                           	psect	text51
 13511     0CFA                     __ptext51:	
 13512 ;; *************** function ___omul *****************
 13513 ;; Defined at:
 13514 ;;		line 91 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul64.c"
 13515 ;; Parameters:    Size  Location     Type
 13516 ;;  multiplier      8    0[BANK0 ] unsigned long long 
 13517 ;;  multiplicand    8    8[BANK0 ] unsigned long long 
 13518 ;; Auto vars:     Size  Location     Type
 13519 ;;  product         8   17[BANK0 ] unsigned long long 
 13520 ;; Return value:  Size  Location     Type
 13521 ;;                  8    0[BANK0 ] unsigned long long 
 13522 ;; Registers used:
 13523 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13524 ;; Tracked objects:
 13525 ;;		On entry : 3F/0
 13526 ;;		On exit  : 3F/0
 13527 ;;		Unchanged: 0/0
 13528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13529 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13530 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13531 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13532 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13533 ;;Total ram usage:       25 bytes
 13534 ;; Hardware stack levels used: 1
 13535 ;; Hardware stack levels required when called: 5
 13536 ;; This function calls:
 13537 ;;		Nothing
 13538 ;; This function is called by:
 13539 ;;		_TCC_Curve
 13540 ;; This function uses a non-reentrant model
 13541 ;;
 13542                           
 13543     0CFA                     ___omul:	
 13544                           ;psect for function ___omul
 13545                           
 13546                           
 13547                           ;incstack = 0
 13548                           ; Regs used in ___omul: [wreg+fsr1l+fsr1h+status,2+status,0]
 13549     0CFA  305F               	movlw	low ___omul@product
 13550     0CFB  0086               	movwf	6
 13551     0CFC  3000               	movlw	high ___omul@product
 13552     0CFD  0087               	movwf	7
 13553     0CFE  3008               	movlw	8
 13554     0CFF  00DE               	movwf	??___omul
 13555     0D00  3000               	movlw	0
 13556     0D01                     u3080:
 13557     0D01  001E               	movwi fsr1++
 13558     0D02  0BDE               	decfsz	??___omul,f
 13559     0D03  2D01               	goto	u3080
 13560     0D04                     l5216:
 13561     0D04  1C4E               	btfss	___omul@multiplier,0
 13562     0D05  2D16               	goto	l5220
 13563     0D06  0856               	movf	___omul@multiplicand,w
 13564     0D07  07DF               	addwf	___omul@product,f
 13565     0D08  0857               	movf	___omul@multiplicand+1,w
 13566     0D09  3DE0               	addwfc	___omul@product+1,f
 13567     0D0A  0858               	movf	___omul@multiplicand+2,w
 13568     0D0B  3DE1               	addwfc	___omul@product+2,f
 13569     0D0C  0859               	movf	___omul@multiplicand+3,w
 13570     0D0D  3DE2               	addwfc	___omul@product+3,f
 13571     0D0E  085A               	movf	___omul@multiplicand+4,w
 13572     0D0F  3DE3               	addwfc	___omul@product+4,f
 13573     0D10  085B               	movf	___omul@multiplicand+5,w
 13574     0D11  3DE4               	addwfc	___omul@product+5,f
 13575     0D12  085C               	movf	___omul@multiplicand+6,w
 13576     0D13  3DE5               	addwfc	___omul@product+6,f
 13577     0D14  085D               	movf	___omul@multiplicand+7,w
 13578     0D15  3DE6               	addwfc	___omul@product+7,f
 13579     0D16                     l5220:
 13580     0D16  35D6               	lslf	___omul@multiplicand,f
 13581     0D17  0DD7               	rlf	___omul@multiplicand+1,f
 13582     0D18  0DD8               	rlf	___omul@multiplicand+2,f
 13583     0D19  0DD9               	rlf	___omul@multiplicand+3,f
 13584     0D1A  0DDA               	rlf	___omul@multiplicand+4,f
 13585     0D1B  0DDB               	rlf	___omul@multiplicand+5,f
 13586     0D1C  0DDC               	rlf	___omul@multiplicand+6,f
 13587     0D1D  0DDD               	rlf	___omul@multiplicand+7,f
 13588     0D1E  36D5               	lsrf	___omul@multiplier+7,f
 13589     0D1F  0CD4               	rrf	___omul@multiplier+6,f
 13590     0D20  0CD3               	rrf	___omul@multiplier+5,f
 13591     0D21  0CD2               	rrf	___omul@multiplier+4,f
 13592     0D22  0CD1               	rrf	___omul@multiplier+3,f
 13593     0D23  0CD0               	rrf	___omul@multiplier+2,f
 13594     0D24  0CCF               	rrf	___omul@multiplier+1,f
 13595     0D25  0CCE               	rrf	___omul@multiplier,f
 13596     0D26  084E               	movf	___omul@multiplier,w
 13597     0D27  044F               	iorwf	___omul@multiplier+1,w
 13598     0D28  0450               	iorwf	___omul@multiplier+2,w
 13599     0D29  0451               	iorwf	___omul@multiplier+3,w
 13600     0D2A  0452               	iorwf	___omul@multiplier+4,w
 13601     0D2B  0453               	iorwf	___omul@multiplier+5,w
 13602     0D2C  0454               	iorwf	___omul@multiplier+6,w
 13603     0D2D  0455               	iorwf	___omul@multiplier+7,w
 13604     0D2E  1D03               	skipz
 13605     0D2F  2D04               	goto	l5216
 13606     0D30  085F               	movf	___omul@product,w
 13607     0D31  00CE               	movwf	?___omul
 13608     0D32  0860               	movf	___omul@product+1,w
 13609     0D33  00CF               	movwf	?___omul+1
 13610     0D34  0861               	movf	___omul@product+2,w
 13611     0D35  00D0               	movwf	?___omul+2
 13612     0D36  0862               	movf	___omul@product+3,w
 13613     0D37  00D1               	movwf	?___omul+3
 13614     0D38  0863               	movf	___omul@product+4,w
 13615     0D39  00D2               	movwf	?___omul+4
 13616     0D3A  0864               	movf	___omul@product+5,w
 13617     0D3B  00D3               	movwf	?___omul+5
 13618     0D3C  0865               	movf	___omul@product+6,w
 13619     0D3D  00D4               	movwf	?___omul+6
 13620     0D3E  0866               	movf	___omul@product+7,w
 13621     0D3F  00D5               	movwf	?___omul+7
 13622     0D40  0008               	return
 13623     0D41                     __end_of___omul:
 13624                           
 13625                           	psect	text52
 13626     0BC8                     __ptext52:	
 13627 ;; *************** function ___lmul *****************
 13628 ;; Defined at:
 13629 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul32.c"
 13630 ;; Parameters:    Size  Location     Type
 13631 ;;  multiplier      4    0[BANK0 ] unsigned long 
 13632 ;;  multiplicand    4    4[BANK0 ] unsigned long 
 13633 ;; Auto vars:     Size  Location     Type
 13634 ;;  product         4    8[BANK0 ] unsigned long 
 13635 ;; Return value:  Size  Location     Type
 13636 ;;                  4    0[BANK0 ] unsigned long 
 13637 ;; Registers used:
 13638 ;;		wreg, status,2, status,0
 13639 ;; Tracked objects:
 13640 ;;		On entry : 3F/0
 13641 ;;		On exit  : 3F/0
 13642 ;;		Unchanged: 0/0
 13643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13644 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13645 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13647 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13648 ;;Total ram usage:       12 bytes
 13649 ;; Hardware stack levels used: 1
 13650 ;; Hardware stack levels required when called: 5
 13651 ;; This function calls:
 13652 ;;		Nothing
 13653 ;; This function is called by:
 13654 ;;		_TCC_Curve
 13655 ;; This function uses a non-reentrant model
 13656 ;;
 13657                           
 13658     0BC8                     ___lmul:	
 13659                           ;psect for function ___lmul
 13660                           
 13661                           
 13662                           ;incstack = 0
 13663                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 13664     0BC8  3000               	movlw	0
 13665     0BC9  00D9               	movwf	___lmul@product+3
 13666     0BCA  3000               	movlw	0
 13667     0BCB  00D8               	movwf	___lmul@product+2
 13668     0BCC  3000               	movlw	0
 13669     0BCD  00D7               	movwf	___lmul@product+1
 13670     0BCE  3000               	movlw	0
 13671     0BCF  00D6               	movwf	___lmul@product
 13672     0BD0                     l4556:
 13673     0BD0  1C4E               	btfss	___lmul@multiplier,0
 13674     0BD1  2BDA               	goto	l4560
 13675     0BD2  0852               	movf	___lmul@multiplicand,w
 13676     0BD3  07D6               	addwf	___lmul@product,f
 13677     0BD4  0853               	movf	___lmul@multiplicand+1,w
 13678     0BD5  3DD7               	addwfc	___lmul@product+1,f
 13679     0BD6  0854               	movf	___lmul@multiplicand+2,w
 13680     0BD7  3DD8               	addwfc	___lmul@product+2,f
 13681     0BD8  0855               	movf	___lmul@multiplicand+3,w
 13682     0BD9  3DD9               	addwfc	___lmul@product+3,f
 13683     0BDA                     l4560:
 13684     0BDA  3001               	movlw	1
 13685     0BDB                     u2565:
 13686     0BDB  35D2               	lslf	___lmul@multiplicand,f
 13687     0BDC  0DD3               	rlf	___lmul@multiplicand+1,f
 13688     0BDD  0DD4               	rlf	___lmul@multiplicand+2,f
 13689     0BDE  0DD5               	rlf	___lmul@multiplicand+3,f
 13690     0BDF  0B89               	decfsz	9,f
 13691     0BE0  2BDB               	goto	u2565
 13692     0BE1  3001               	movlw	1
 13693     0BE2                     u2575:
 13694     0BE2  36D1               	lsrf	___lmul@multiplier+3,f
 13695     0BE3  0CD0               	rrf	___lmul@multiplier+2,f
 13696     0BE4  0CCF               	rrf	___lmul@multiplier+1,f
 13697     0BE5  0CCE               	rrf	___lmul@multiplier,f
 13698     0BE6  0B89               	decfsz	9,f
 13699     0BE7  2BE2               	goto	u2575
 13700     0BE8  0851               	movf	___lmul@multiplier+3,w
 13701     0BE9  0450               	iorwf	___lmul@multiplier+2,w
 13702     0BEA  044F               	iorwf	___lmul@multiplier+1,w
 13703     0BEB  044E               	iorwf	___lmul@multiplier,w
 13704     0BEC  1D03               	skipz
 13705     0BED  2BD0               	goto	l4556
 13706     0BEE  0859               	movf	___lmul@product+3,w
 13707     0BEF  00D1               	movwf	?___lmul+3
 13708     0BF0  0858               	movf	___lmul@product+2,w
 13709     0BF1  00D0               	movwf	?___lmul+2
 13710     0BF2  0857               	movf	___lmul@product+1,w
 13711     0BF3  00CF               	movwf	?___lmul+1
 13712     0BF4  0856               	movf	___lmul@product,w
 13713     0BF5  00CE               	movwf	?___lmul
 13714     0BF6  0008               	return
 13715     0BF7                     __end_of___lmul:
 13716                           
 13717                           	psect	text53
 13718     0E49                     __ptext53:	
 13719 ;; *************** function ___lldiv *****************
 13720 ;; Defined at:
 13721 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\__lldiv.c"
 13722 ;; Parameters:    Size  Location     Type
 13723 ;;  divisor         4   12[BANK0 ] unsigned long 
 13724 ;;  dividend        4   16[BANK0 ] unsigned long 
 13725 ;; Auto vars:     Size  Location     Type
 13726 ;;  quotient        4    0[BANK2 ] unsigned long 
 13727 ;;  counter         1    4[BANK2 ] unsigned char 
 13728 ;; Return value:  Size  Location     Type
 13729 ;;                  4   12[BANK0 ] unsigned long 
 13730 ;; Registers used:
 13731 ;;		wreg, status,2, status,0
 13732 ;; Tracked objects:
 13733 ;;		On entry : 3F/0
 13734 ;;		On exit  : 3F/0
 13735 ;;		Unchanged: 0/0
 13736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13737 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13738 ;;      Locals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0
 13739 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13740 ;;      Totals:         0       9       0       5       0       0       0       0       0       0       0       0       
      +0       0
 13741 ;;Total ram usage:       14 bytes
 13742 ;; Hardware stack levels used: 1
 13743 ;; Hardware stack levels required when called: 5
 13744 ;; This function calls:
 13745 ;;		Nothing
 13746 ;; This function is called by:
 13747 ;;		_TCC_Curve
 13748 ;; This function uses a non-reentrant model
 13749 ;;
 13750                           
 13751     0E49                     ___lldiv:	
 13752                           ;psect for function ___lldiv
 13753                           
 13754                           
 13755                           ;incstack = 0
 13756                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
 13757     0E49  3000               	movlw	0
 13758     0E4A  0142               	movlb	2	; select bank2
 13759     0E4B  00A3               	movwf	(___lldiv@quotient+3)^(0+256)
 13760     0E4C  3000               	movlw	0
 13761     0E4D  00A2               	movwf	(___lldiv@quotient+2)^(0+256)
 13762     0E4E  3000               	movlw	0
 13763     0E4F  00A1               	movwf	(___lldiv@quotient+1)^(0+256)
 13764     0E50  3000               	movlw	0
 13765     0E51  00A0               	movwf	___lldiv@quotient^(0+256)
 13766     0E52  0140               	movlb	0	; select bank0
 13767     0E53  085D               	movf	___lldiv@divisor+3,w
 13768     0E54  045C               	iorwf	___lldiv@divisor+2,w
 13769     0E55  045B               	iorwf	___lldiv@divisor+1,w
 13770     0E56  045A               	iorwf	___lldiv@divisor,w
 13771     0E57  1903               	skipnz
 13772     0E58  2E9C               	goto	l5244
 13773     0E59  0142               	movlb	2	; select bank2
 13774     0E5A  01A4               	clrf	___lldiv@counter^(0+256)
 13775     0E5B  0AA4               	incf	___lldiv@counter^(0+256),f
 13776     0E5C                     l5230:
 13777     0E5C  0140               	movlb	0	; select bank0
 13778     0E5D  1BDD               	btfsc	___lldiv@divisor+3,7
 13779     0E5E  2E6C               	goto	l5232
 13780     0E5F  3001               	movlw	1
 13781     0E60                     u3125:
 13782     0E60  35DA               	lslf	___lldiv@divisor,f
 13783     0E61  0DDB               	rlf	___lldiv@divisor+1,f
 13784     0E62  0DDC               	rlf	___lldiv@divisor+2,f
 13785     0E63  0DDD               	rlf	___lldiv@divisor+3,f
 13786     0E64  0B89               	decfsz	9,f
 13787     0E65  2E60               	goto	u3125
 13788     0E66  3001               	movlw	1
 13789     0E67  00E2               	movwf	??___lldiv
 13790     0E68  0862               	movf	??___lldiv,w
 13791     0E69  0142               	movlb	2	; select bank2
 13792     0E6A  07A4               	addwf	___lldiv@counter^(0+256),f
 13793     0E6B  2E5C               	goto	l5230
 13794     0E6C                     l5232:
 13795     0E6C  3001               	movlw	1
 13796     0E6D                     u3145:
 13797     0E6D  0142               	movlb	2	; select bank2
 13798     0E6E  35A0               	lslf	___lldiv@quotient^(0+256),f
 13799     0E6F  0DA1               	rlf	(___lldiv@quotient+1)^(0+256),f
 13800     0E70  0DA2               	rlf	(___lldiv@quotient+2)^(0+256),f
 13801     0E71  0DA3               	rlf	(___lldiv@quotient+3)^(0+256),f
 13802     0E72  0B89               	decfsz	9,f
 13803     0E73  2E6D               	goto	u3145
 13804     0E74  0140               	movlb	0	; select bank0
 13805     0E75  085D               	movf	___lldiv@divisor+3,w
 13806     0E76  0261               	subwf	___lldiv@dividend+3,w
 13807     0E77  1D03               	skipz
 13808     0E78  2E83               	goto	u3155
 13809     0E79  085C               	movf	___lldiv@divisor+2,w
 13810     0E7A  0260               	subwf	___lldiv@dividend+2,w
 13811     0E7B  1D03               	skipz
 13812     0E7C  2E83               	goto	u3155
 13813     0E7D  085B               	movf	___lldiv@divisor+1,w
 13814     0E7E  025F               	subwf	___lldiv@dividend+1,w
 13815     0E7F  1D03               	skipz
 13816     0E80  2E83               	goto	u3155
 13817     0E81  085A               	movf	___lldiv@divisor,w
 13818     0E82  025E               	subwf	___lldiv@dividend,w
 13819     0E83                     u3155:
 13820     0E83  1C03               	skipc
 13821     0E84  2E8F               	goto	l5240
 13822     0E85  085A               	movf	___lldiv@divisor,w
 13823     0E86  02DE               	subwf	___lldiv@dividend,f
 13824     0E87  085B               	movf	___lldiv@divisor+1,w
 13825     0E88  3BDF               	subwfb	___lldiv@dividend+1,f
 13826     0E89  085C               	movf	___lldiv@divisor+2,w
 13827     0E8A  3BE0               	subwfb	___lldiv@dividend+2,f
 13828     0E8B  085D               	movf	___lldiv@divisor+3,w
 13829     0E8C  3BE1               	subwfb	___lldiv@dividend+3,f
 13830     0E8D  0142               	movlb	2	; select bank2
 13831     0E8E  1420               	bsf	___lldiv@quotient^(0+256),0
 13832     0E8F                     l5240:
 13833     0E8F  3001               	movlw	1
 13834     0E90                     u3165:
 13835     0E90  0140               	movlb	0	; select bank0
 13836     0E91  36DD               	lsrf	___lldiv@divisor+3,f
 13837     0E92  0CDC               	rrf	___lldiv@divisor+2,f
 13838     0E93  0CDB               	rrf	___lldiv@divisor+1,f
 13839     0E94  0CDA               	rrf	___lldiv@divisor,f
 13840     0E95  0B89               	decfsz	9,f
 13841     0E96  2E90               	goto	u3165
 13842     0E97  3001               	movlw	1
 13843     0E98  0142               	movlb	2	; select bank2
 13844     0E99  02A4               	subwf	___lldiv@counter^(0+256),f
 13845     0E9A  1D03               	btfss	3,2
 13846     0E9B  2E6C               	goto	l5232
 13847     0E9C                     l5244:
 13848     0E9C  0142               	movlb	2	; select bank2
 13849     0E9D  0823               	movf	(___lldiv@quotient+3)^(0+256),w
 13850     0E9E  0140               	movlb	0	; select bank0
 13851     0E9F  00DD               	movwf	?___lldiv+3
 13852     0EA0  0142               	movlb	2	; select bank2
 13853     0EA1  0822               	movf	(___lldiv@quotient+2)^(0+256),w
 13854     0EA2  0140               	movlb	0	; select bank0
 13855     0EA3  00DC               	movwf	?___lldiv+2
 13856     0EA4  0142               	movlb	2	; select bank2
 13857     0EA5  0821               	movf	(___lldiv@quotient+1)^(0+256),w
 13858     0EA6  0140               	movlb	0	; select bank0
 13859     0EA7  00DB               	movwf	?___lldiv+1
 13860     0EA8  0142               	movlb	2	; select bank2
 13861     0EA9  0820               	movf	___lldiv@quotient^(0+256),w
 13862     0EAA  0140               	movlb	0	; select bank0
 13863     0EAB  00DA               	movwf	?___lldiv
 13864     0EAC  0008               	return
 13865     0EAD                     __end_of___lldiv:
 13866                           
 13867                           	psect	text54
 13868     0D41                     __ptext54:	
 13869 ;; *************** function _GetAmbientTemperature *****************
 13870 ;; Defined at:
 13871 ;;		line 490 in file "efuse.c"
 13872 ;; Parameters:    Size  Location     Type
 13873 ;;		None
 13874 ;; Auto vars:     Size  Location     Type
 13875 ;;  temperature     2    9[BANK0 ] short 
 13876 ;;  adcTemp         2    6[BANK0 ] unsigned short 
 13877 ;;  i               1    8[BANK0 ] unsigned char 
 13878 ;; Return value:  Size  Location     Type
 13879 ;;                  2    0[BANK0 ] short 
 13880 ;; Registers used:
 13881 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
 13882 ;; Tracked objects:
 13883 ;;		On entry : 3/3C
 13884 ;;		On exit  : 3F/0
 13885 ;;		Unchanged: 0/0
 13886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13887 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13888 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13889 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13890 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13891 ;;Total ram usage:       11 bytes
 13892 ;; Hardware stack levels used: 1
 13893 ;; Hardware stack levels required when called: 5
 13894 ;; This function calls:
 13895 ;;		Nothing
 13896 ;; This function is called by:
 13897 ;;		_EFuse
 13898 ;; This function uses a non-reentrant model
 13899 ;;
 13900                           
 13901     0D41                     _GetAmbientTemperature:	
 13902                           ;psect for function _GetAmbientTemperature
 13903                           
 13904                           
 13905                           ;efuse.c: 493:     uint16_t adcTemp = 0;
 13906                           
 13907                           ;incstack = 0
 13908                           ; Regs used in _GetAmbientTemperature: [wreg-fsr0h+status,2+status,0+pclath]
 13909     0D41  0140               	movlb	0	; select bank0
 13910     0D42  01D4               	clrf	GetAmbientTemperature@adcTemp
 13911     0D43  01D5               	clrf	GetAmbientTemperature@adcTemp+1
 13912                           
 13913                           ;efuse.c: 494:     int16_t temperature = 0;
 13914     0D44  01D7               	clrf	GetAmbientTemperature@temperature
 13915     0D45  01D8               	clrf	GetAmbientTemperature@temperature+1
 13916                           
 13917                           ;efuse.c: 496:     adcTemp = adcTSense_prev;
 13918     0D46  0821               	movf	_adcTSense_prev+1,w
 13919     0D47  00D5               	movwf	GetAmbientTemperature@adcTemp+1
 13920     0D48  0820               	movf	_adcTSense_prev,w
 13921     0D49  00D4               	movwf	GetAmbientTemperature@adcTemp
 13922                           
 13923                           ;efuse.c: 497:     if (adcTSense_curr > adcTSense_prev)
 13924     0D4A  0875               	movf	_adcTSense_curr+1,w
 13925     0D4B  0221               	subwf	_adcTSense_prev+1,w
 13926     0D4C  1D03               	skipz
 13927     0D4D  2D50               	goto	u2775
 13928     0D4E  0874               	movf	_adcTSense_curr,w
 13929     0D4F  0220               	subwf	_adcTSense_prev,w
 13930     0D50                     u2775:
 13931     0D50  1803               	skipnc
 13932     0D51  2D56               	goto	l1494
 13933                           
 13934                           ;efuse.c: 498:     {;efuse.c: 499:         adcTemp = adcTSense_curr;
 13935     0D52  0875               	movf	_adcTSense_curr+1,w
 13936     0D53  00D5               	movwf	GetAmbientTemperature@adcTemp+1
 13937     0D54  0874               	movf	_adcTSense_curr,w
 13938     0D55  00D4               	movwf	GetAmbientTemperature@adcTemp
 13939     0D56                     l1494:	
 13940                           ;efuse.c: 500:     }
 13941                           
 13942                           
 13943                           ;efuse.c: 502:     temperature = 125;
 13944     0D56  307D               	movlw	125
 13945     0D57  00D7               	movwf	GetAmbientTemperature@temperature
 13946     0D58  3000               	movlw	0
 13947     0D59  00D8               	movwf	GetAmbientTemperature@temperature+1
 13948                           
 13949                           ;efuse.c: 503:     i = 0;
 13950     0D5A  01D6               	clrf	GetAmbientTemperature@i
 13951     0D5B                     l4912:	
 13952                           ;efuse.c: 504:     while(temperature > -40)
 13953                           
 13954                           
 13955                           ;efuse.c: 504:     while(temperature > -40)
 13956     0D5B  0858               	movf	GetAmbientTemperature@temperature+1,w
 13957     0D5C  3A80               	xorlw	128
 13958     0D5D  00D0               	movwf	??_GetAmbientTemperature
 13959     0D5E  307F               	movlw	127
 13960     0D5F  0250               	subwf	??_GetAmbientTemperature,w
 13961     0D60  1D03               	skipz
 13962     0D61  2D64               	goto	u2795
 13963     0D62  30D9               	movlw	217
 13964     0D63  0257               	subwf	GetAmbientTemperature@temperature,w
 13965     0D64                     u2795:
 13966     0D64  1C03               	btfss	3,0
 13967     0D65  2D7F               	goto	l4904
 13968                           
 13969                           ;efuse.c: 505:     {;efuse.c: 506:         if(adcTemp <= temperatureLUT[i])
 13970     0D66  0140               	movlb	0	; select bank0
 13971     0D67  0856               	movf	GetAmbientTemperature@i,w
 13972     0D68  00D0               	movwf	??_GetAmbientTemperature
 13973     0D69  01D1               	clrf	??_GetAmbientTemperature+1
 13974     0D6A  35D0               	lslf	??_GetAmbientTemperature,f
 13975     0D6B  0DD1               	rlf	??_GetAmbientTemperature+1,f
 13976     0D6C  3052               	movlw	low _temperatureLUT
 13977     0D6D  0750               	addwf	??_GetAmbientTemperature,w
 13978     0D6E  0084               	movwf	4
 13979     0D6F  3002               	movlw	high _temperatureLUT
 13980     0D70  3D51               	addwfc	??_GetAmbientTemperature+1,w
 13981     0D71  3880               	iorlw	128
 13982     0D72  0085               	movwf	5
 13983     0D73  3F00               	moviw [0]fsr0
 13984     0D74  00D2               	movwf	??_GetAmbientTemperature+2
 13985     0D75  3F01               	moviw [1]fsr0
 13986     0D76  00D3               	movwf	??_GetAmbientTemperature+3
 13987     0D77  0855               	movf	GetAmbientTemperature@adcTemp+1,w
 13988     0D78  0253               	subwf	??_GetAmbientTemperature+3,w
 13989     0D79  1D03               	skipz
 13990     0D7A  2D7D               	goto	u2785
 13991     0D7B  0854               	movf	GetAmbientTemperature@adcTemp,w
 13992     0D7C  0252               	subwf	??_GetAmbientTemperature+2,w
 13993     0D7D                     u2785:
 13994     0D7D  1C03               	skipc
 13995     0D7E  2D85               	goto	l4910
 13996     0D7F                     l4904:
 13997                           
 13998                           ;efuse.c: 507:         {;efuse.c: 508:             return temperature;
 13999     0D7F  0140               	movlb	0	; select bank0
 14000     0D80  0858               	movf	GetAmbientTemperature@temperature+1,w
 14001     0D81  00CF               	movwf	?_GetAmbientTemperature+1
 14002     0D82  0857               	movf	GetAmbientTemperature@temperature,w
 14003     0D83  00CE               	movwf	?_GetAmbientTemperature
 14004     0D84  0008               	return
 14005     0D85                     l4910:
 14006                           
 14007                           ;efuse.c: 511:         {;efuse.c: 512:             temperature = temperature + -1;
 14008     0D85  0857               	movf	GetAmbientTemperature@temperature,w
 14009     0D86  3EFF               	addlw	255
 14010     0D87  00D7               	movwf	GetAmbientTemperature@temperature
 14011     0D88  30FF               	movlw	255
 14012     0D89  3D58               	addwfc	GetAmbientTemperature@temperature+1,w
 14013     0D8A  00D8               	movwf	GetAmbientTemperature@temperature+1
 14014                           
 14015                           ;efuse.c: 513:             i++;
 14016     0D8B  3001               	movlw	1
 14017     0D8C  00D0               	movwf	??_GetAmbientTemperature
 14018     0D8D  0850               	movf	??_GetAmbientTemperature,w
 14019     0D8E  07D6               	addwf	GetAmbientTemperature@i,f
 14020     0D8F  2D5B               	goto	l4912
 14021     0D90                     __end_of_GetAmbientTemperature:
 14022                           
 14023                           	psect	text55
 14024     0DEC                     __ptext55:	
 14025 ;; *************** function _CmdOutput *****************
 14026 ;; Defined at:
 14027 ;;		line 390 in file "efuse.c"
 14028 ;; Parameters:    Size  Location     Type
 14029 ;;  enable          1    wreg     unsigned char 
 14030 ;; Auto vars:     Size  Location     Type
 14031 ;;  enable          1    4[BANK0 ] unsigned char 
 14032 ;; Return value:  Size  Location     Type
 14033 ;;                  1    wreg      void 
 14034 ;; Registers used:
 14035 ;;		wreg, status,2, status,0, pclath, cstack
 14036 ;; Tracked objects:
 14037 ;;		On entry : 0/0
 14038 ;;		On exit  : 3F/0
 14039 ;;		Unchanged: 0/0
 14040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14042 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14043 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14044 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14045 ;;Total ram usage:        3 bytes
 14046 ;; Hardware stack levels used: 1
 14047 ;; Hardware stack levels required when called: 6
 14048 ;; This function calls:
 14049 ;;		_TMR1_StartTimer
 14050 ;;		_TMR1_StopTimer
 14051 ;;		_TMR1_WriteTimer
 14052 ;;		_TMR2_Initialize
 14053 ;;		_TMR2_Start
 14054 ;;		_TMR2_Stop
 14055 ;; This function is called by:
 14056 ;;		_processLIN
 14057 ;;		_main
 14058 ;;		_EFuseInit
 14059 ;;		_EFuse
 14060 ;; This function uses a non-reentrant model
 14061 ;;
 14062                           
 14063     0DEC                     _CmdOutput:	
 14064                           ;psect for function _CmdOutput
 14065                           
 14066                           
 14067                           ;incstack = 0
 14068                           ; Regs used in _CmdOutput: [wreg+status,2+status,0+pclath+cstack]
 14069                           ;CmdOutput@enable stored from wreg
 14070     0DEC  0140               	movlb	0	; select bank0
 14071     0DED  00D2               	movwf	CmdOutput@enable
 14072                           
 14073                           ;efuse.c: 390: void CmdOutput(uint8_t enable);efuse.c: 391: {;efuse.c: 392:     TMR2_Sto
      +                          p();
 14074     0DEE  3188  2071  318D   	fcall	_TMR2_Stop
 14075                           
 14076                           ;efuse.c: 395:     CLC1POLbits.LC1G4POL = 0;
 14077     0DF1  017C               	movlb	60	; select bank60
 14078     0DF2  1191               	bcf	17,3	;volatile
 14079                           
 14080                           ;efuse.c: 396:     CLC1GLS3bits.LC1G4D3N = 0;
 14081     0DF3  1219               	bcf	25,4	;volatile
 14082                           
 14083                           ;efuse.c: 397:     CLC1GLS3bits.LC1G4D4T = 0;
 14084     0DF4  1399               	bcf	25,7	;volatile
 14085                           
 14086                           ;efuse.c: 401:     T1GCON = 0x80;
 14087     0DF5  3080               	movlw	128
 14088     0DF6  0144               	movlb	4	; select bank4
 14089     0DF7  008F               	movwf	15	;volatile
 14090                           
 14091                           ;efuse.c: 404:     T1GATE = 0x0D;
 14092     0DF8  300D               	movlw	13
 14093     0DF9  0090               	movwf	16	;volatile
 14094                           
 14095                           ;efuse.c: 406:     CLC3CONbits.EN = 0;
 14096     0DFA  017C               	movlb	60	; select bank60
 14097     0DFB  13A4               	bcf	36,7	;volatile
 14098                           
 14099                           ;efuse.c: 409:     CLC1POLbits.LC1G2POL = 1;
 14100     0DFC  1491               	bsf	17,1	;volatile
 14101                           
 14102                           ;efuse.c: 410:     CLC1POLbits.LC1G2POL = 0;
 14103     0DFD  1091               	bcf	17,1	;volatile
 14104                           
 14105                           ;efuse.c: 412:     _delay((unsigned long)((1)*(32000000/4000000.0)));
 14106     0DFE  3200               	nop2	;2 cycle nop
 14107     0DFF  3200               	nop2	;2 cycle nop
 14108     0E00  3200               	nop2	;2 cycle nop
 14109     0E01  3200               	nop2	;2 cycle nop
 14110                           
 14111                           ;efuse.c: 415:     CLC2POLbits.LC2G2POL = 1;
 14112     0E02  017C               	movlb	60	; select bank60
 14113     0E03  149B               	bsf	27,1	;volatile
 14114                           
 14115                           ;efuse.c: 416:     CLC2POLbits.LC2G2POL = 0;
 14116     0E04  109B               	bcf	27,1	;volatile
 14117                           
 14118                           ;efuse.c: 418:     outputState = OUTPUT_OFF;
 14119     0E05  0140               	movlb	0	; select bank0
 14120     0E06  01AF               	clrf	_outputState
 14121                           
 14122                           ;efuse.c: 421:     if (enable)
 14123     0E07  0852               	movf	CmdOutput@enable,w
 14124     0E08  1903               	btfsc	3,2
 14125     0E09  0008               	return
 14126                           
 14127                           ;efuse.c: 422:     {;efuse.c: 423:         overCurrentFault = NO_OVER_CURRENT_FAULT;
 14128     0E0A  01AE               	clrf	_overCurrentFault
 14129                           
 14130                           ;efuse.c: 424:         uvloFault = NO_UVLO_FAULT;
 14131     0E0B  01AD               	clrf	_uvloFault
 14132                           
 14133                           ;efuse.c: 425:         overTempFault = NO_TEMP_FAULT;
 14134     0E0C  01AC               	clrf	_overTempFault
 14135     0E0D  1794               	bsf	20,7	;volatile
 14136                           
 14137                           ;efuse.c: 430:         CLC1CONbits.LC1EN = 1;
 14138     0E0E  017C               	movlb	60	; select bank60
 14139     0E0F  1790               	bsf	16,7	;volatile
 14140                           
 14141                           ;efuse.c: 431:         CLC1POLbits.LC1G4POL = 0;
 14142     0E10  1191               	bcf	17,3	;volatile
 14143                           
 14144                           ;efuse.c: 432:         CLC1POLbits.LC1G3POL = 0;
 14145     0E11  1111               	bcf	17,2	;volatile
 14146                           
 14147                           ;efuse.c: 433:         CLC1POLbits.LC1G3POL = 1;
 14148     0E12  1511               	bsf	17,2	;volatile
 14149                           
 14150                           ;efuse.c: 434:         CLC1POLbits.LC1G3POL = 0;
 14151     0E13  1111               	bcf	17,2	;volatile
 14152                           
 14153                           ;efuse.c: 435:         CLC1POLbits.LC1POL = 1;
 14154     0E14  1791               	bsf	17,7	;volatile
 14155                           
 14156                           ;efuse.c: 438:         CLC2POLbits.LC2G4POL = 0;
 14157     0E15  119B               	bcf	27,3	;volatile
 14158                           
 14159                           ;efuse.c: 439:         CLC2POLbits.LC2G3POL = 0;
 14160     0E16  111B               	bcf	27,2	;volatile
 14161                           
 14162                           ;efuse.c: 440:         CLC2POLbits.LC2G3POL = 1;
 14163     0E17  151B               	bsf	27,2	;volatile
 14164                           
 14165                           ;efuse.c: 441:         CLC2POLbits.LC2G3POL = 0;
 14166     0E18  111B               	bcf	27,2	;volatile
 14167                           
 14168                           ;efuse.c: 443:         if(triggerType == TRIGGER_TIMER_OVERFLOW)
 14169     0E19  0140               	movlb	0	; select bank0
 14170     0E1A  0331               	decf	_triggerType,w
 14171     0E1B  1D03               	btfss	3,2
 14172     0E1C  2E2E               	goto	l1485
 14173                           
 14174                           ;efuse.c: 444:         {;efuse.c: 447:             CLC1POLbits.LC1G4POL = 1;
 14175     0E1D  017C               	movlb	60	; select bank60
 14176     0E1E  1591               	bsf	17,3	;volatile
 14177                           
 14178                           ;efuse.c: 448:             CLC1GLS3bits.LC1G4D3N = 1;
 14179     0E1F  1619               	bsf	25,4	;volatile
 14180                           
 14181                           ;efuse.c: 449:             CLC1GLS3bits.LC1G4D4T = 1;
 14182     0E20  1799               	bsf	25,7	;volatile
 14183                           
 14184                           ;efuse.c: 452:             T1GCON = 0xC0;
 14185     0E21  30C0               	movlw	192
 14186     0E22  0144               	movlb	4	; select bank4
 14187     0E23  008F               	movwf	15	;volatile
 14188                           
 14189                           ;efuse.c: 455:             T1GATE = 0x0B;
 14190     0E24  300B               	movlw	11
 14191     0E25  0090               	movwf	16	;volatile
 14192                           
 14193                           ;efuse.c: 457:             TMR2_Initialize();
 14194     0E26  3189  215F  318D   	fcall	_TMR2_Initialize
 14195                           
 14196                           ;efuse.c: 458:             TMR2_Start();
 14197     0E29  3188  205A  318D   	fcall	_TMR2_Start
 14198                           
 14199                           ;efuse.c: 460:             CLC3CONbits.EN = 1;
 14200     0E2C  017C               	movlb	60	; select bank60
 14201     0E2D  17A4               	bsf	36,7	;volatile
 14202     0E2E                     l1485:	
 14203                           ;efuse.c: 461:         }
 14204                           
 14205                           
 14206                           ;efuse.c: 464:         TMR1_StopTimer();
 14207     0E2E  3188  206E  318D   	fcall	_TMR1_StopTimer
 14208                           
 14209                           ;efuse.c: 465:         TMR1_WriteTimer( 0xffff - reduced_drive_time );
 14210     0E31  0140               	movlb	0	; select bank0
 14211     0E32  0830               	movf	_reduced_drive_time,w
 14212     0E33  00D0               	movwf	??_CmdOutput
 14213     0E34  01D1               	clrf	??_CmdOutput+1
 14214     0E35  0950               	comf	??_CmdOutput,w
 14215     0E36  00CE               	movwf	TMR1_WriteTimer@timerVal
 14216     0E37  0951               	comf	??_CmdOutput+1,w
 14217     0E38  00CF               	movwf	TMR1_WriteTimer@timerVal+1
 14218     0E39  318A  2200  318D   	fcall	_TMR1_WriteTimer
 14219                           
 14220                           ;efuse.c: 466:         PIR4bits.TMR1IF = 0;
 14221     0E3C  014E               	movlb	14	; select bank14
 14222     0E3D  1010               	bcf	16,0	;volatile
 14223                           
 14224                           ;efuse.c: 467:         TMR1_StartTimer();
 14225     0E3E  3188  206B         	fcall	_TMR1_StartTimer
 14226                           
 14227                           ;efuse.c: 469:         iSenseOffset = adcISense_curr;
 14228     0E40  0140               	movlb	0	; select bank0
 14229     0E41  083F               	movf	_adcISense_curr+1,w
 14230     0E42  00BB               	movwf	_iSenseOffset+1
 14231     0E43  083E               	movf	_adcISense_curr,w
 14232     0E44  00BA               	movwf	_iSenseOffset
 14233                           
 14234                           ;efuse.c: 470:         outputState = OUTPUT_ON;
 14235     0E45  01AF               	clrf	_outputState
 14236     0E46  0AAF               	incf	_outputState,f
 14237     0E47  1394               	bcf	20,7	;volatile
 14238     0E48  0008               	return
 14239     0E49                     __end_of_CmdOutput:
 14240                           
 14241                           	psect	text56
 14242     0871                     __ptext56:	
 14243 ;; *************** function _TMR2_Stop *****************
 14244 ;; Defined at:
 14245 ;;		line 111 in file "mcc_generated_files/tmr2.c"
 14246 ;; Parameters:    Size  Location     Type
 14247 ;;		None
 14248 ;; Auto vars:     Size  Location     Type
 14249 ;;		None
 14250 ;; Return value:  Size  Location     Type
 14251 ;;                  1    wreg      void 
 14252 ;; Registers used:
 14253 ;;		None
 14254 ;; Tracked objects:
 14255 ;;		On entry : 3F/0
 14256 ;;		On exit  : 3F/5
 14257 ;;		Unchanged: 0/0
 14258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14262 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14263 ;;Total ram usage:        0 bytes
 14264 ;; Hardware stack levels used: 1
 14265 ;; Hardware stack levels required when called: 5
 14266 ;; This function calls:
 14267 ;;		Nothing
 14268 ;; This function is called by:
 14269 ;;		_CmdOutput
 14270 ;; This function uses a non-reentrant model
 14271 ;;
 14272                           
 14273     0871                     _TMR2_Stop:	
 14274                           ;psect for function _TMR2_Stop
 14275                           
 14276                           
 14277                           ;mcc_generated_files/tmr2.c: 114:     T2CONbits.TMR2ON = 0;
 14278                           
 14279                           ;incstack = 0
 14280                           ; Regs used in _TMR2_Stop: []
 14281     0871  0145               	movlb	5	; select bank5
 14282     0872  138E               	bcf	14,7	;volatile
 14283     0873  0008               	return
 14284     0874                     __end_of_TMR2_Stop:
 14285                           
 14286                           	psect	text57
 14287     085A                     __ptext57:	
 14288 ;; *************** function _TMR2_Start *****************
 14289 ;; Defined at:
 14290 ;;		line 100 in file "mcc_generated_files/tmr2.c"
 14291 ;; Parameters:    Size  Location     Type
 14292 ;;		None
 14293 ;; Auto vars:     Size  Location     Type
 14294 ;;		None
 14295 ;; Return value:  Size  Location     Type
 14296 ;;                  1    wreg      void 
 14297 ;; Registers used:
 14298 ;;		None
 14299 ;; Tracked objects:
 14300 ;;		On entry : 3F/5
 14301 ;;		On exit  : 3F/5
 14302 ;;		Unchanged: 0/0
 14303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14307 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14308 ;;Total ram usage:        0 bytes
 14309 ;; Hardware stack levels used: 1
 14310 ;; Hardware stack levels required when called: 5
 14311 ;; This function calls:
 14312 ;;		Nothing
 14313 ;; This function is called by:
 14314 ;;		_CmdOutput
 14315 ;; This function uses a non-reentrant model
 14316 ;;
 14317                           
 14318     085A                     _TMR2_Start:	
 14319                           ;psect for function _TMR2_Start
 14320                           
 14321                           
 14322                           ;mcc_generated_files/tmr2.c: 103:     T2CONbits.TMR2ON = 1;
 14323                           
 14324                           ;incstack = 0
 14325                           ; Regs used in _TMR2_Start: []
 14326     085A  178E               	bsf	14,7	;volatile
 14327     085B  0008               	return
 14328     085C                     __end_of_TMR2_Start:
 14329                           
 14330                           	psect	text58
 14331     095F                     __ptext58:	
 14332 ;; *************** function _TMR2_Initialize *****************
 14333 ;; Defined at:
 14334 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 14335 ;; Parameters:    Size  Location     Type
 14336 ;;		None
 14337 ;; Auto vars:     Size  Location     Type
 14338 ;;		None
 14339 ;; Return value:  Size  Location     Type
 14340 ;;                  1    wreg      void 
 14341 ;; Registers used:
 14342 ;;		wreg, status,2
 14343 ;; Tracked objects:
 14344 ;;		On entry : 35/E
 14345 ;;		On exit  : 3F/5
 14346 ;;		Unchanged: 0/0
 14347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14351 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14352 ;;Total ram usage:        0 bytes
 14353 ;; Hardware stack levels used: 1
 14354 ;; Hardware stack levels required when called: 5
 14355 ;; This function calls:
 14356 ;;		Nothing
 14357 ;; This function is called by:
 14358 ;;		_SYSTEM_Initialize
 14359 ;;		_CmdOutput
 14360 ;; This function uses a non-reentrant model
 14361 ;;
 14362                           
 14363     095F                     _TMR2_Initialize:	
 14364                           ;psect for function _TMR2_Initialize
 14365                           
 14366                           
 14367                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x0D;
 14368                           
 14369                           ;incstack = 0
 14370                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 14371     095F  300D               	movlw	13
 14372     0960  0145               	movlb	5	; select bank5
 14373     0961  0090               	movwf	16	;volatile
 14374                           
 14375                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 14376     0962  018F               	clrf	15	;volatile
 14377                           
 14378                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 14379     0963  0191               	clrf	17	;volatile
 14380                           
 14381                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x27;
 14382     0964  3027               	movlw	39
 14383     0965  008D               	movwf	13	;volatile
 14384                           
 14385                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 14386     0966  018C               	clrf	12	;volatile
 14387                           
 14388                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 14389     0967  014E               	movlb	14	; select bank14
 14390     0968  1090               	bcf	16,1	;volatile
 14391                           
 14392                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xB0;
 14393     0969  30B0               	movlw	176
 14394     096A  0145               	movlb	5	; select bank5
 14395     096B  008E               	movwf	14	;volatile
 14396     096C  0008               	return
 14397     096D                     __end_of_TMR2_Initialize:
 14398                           
 14399                           	psect	text59
 14400     0A00                     __ptext59:	
 14401 ;; *************** function _TMR1_WriteTimer *****************
 14402 ;; Defined at:
 14403 ;;		line 120 in file "mcc_generated_files/tmr1.c"
 14404 ;; Parameters:    Size  Location     Type
 14405 ;;  timerVal        2    0[BANK0 ] unsigned short 
 14406 ;; Auto vars:     Size  Location     Type
 14407 ;;		None
 14408 ;; Return value:  Size  Location     Type
 14409 ;;                  1    wreg      void 
 14410 ;; Registers used:
 14411 ;;		wreg
 14412 ;; Tracked objects:
 14413 ;;		On entry : 3F/0
 14414 ;;		On exit  : 3F/4
 14415 ;;		Unchanged: 0/0
 14416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14417 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14420 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14421 ;;Total ram usage:        2 bytes
 14422 ;; Hardware stack levels used: 1
 14423 ;; Hardware stack levels required when called: 5
 14424 ;; This function calls:
 14425 ;;		Nothing
 14426 ;; This function is called by:
 14427 ;;		_CmdOutput
 14428 ;; This function uses a non-reentrant model
 14429 ;;
 14430                           
 14431     0A00                     _TMR1_WriteTimer:	
 14432                           ;psect for function _TMR1_WriteTimer
 14433                           
 14434                           
 14435                           ;mcc_generated_files/tmr1.c: 120: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 121: {;mcc_generated_files/tmr1.c: 122:     if (T1CONbits.nT1SYNC == 1)
 14436                           
 14437                           ;incstack = 0
 14438                           ; Regs used in _TMR1_WriteTimer: [wreg]
 14439     0A00  0144               	movlb	4	; select bank4
 14440     0A01  1D0E               	btfss	14,2	;volatile
 14441     0A02  2A0E               	goto	l4268
 14442                           
 14443                           ;mcc_generated_files/tmr1.c: 123:     {;mcc_generated_files/tmr1.c: 125:         T1CONbi
      +                          ts.TMR1ON = 0;
 14444     0A03  100E               	bcf	14,0	;volatile
 14445                           
 14446                           ;mcc_generated_files/tmr1.c: 128:         TMR1H = (uint8_t)(timerVal >> 8);
 14447     0A04  0140               	movlb	0	; select bank0
 14448     0A05  084F               	movf	TMR1_WriteTimer@timerVal+1,w
 14449     0A06  0144               	movlb	4	; select bank4
 14450     0A07  008D               	movwf	13	;volatile
 14451                           
 14452                           ;mcc_generated_files/tmr1.c: 129:         TMR1L = (uint8_t)timerVal;
 14453     0A08  0140               	movlb	0	; select bank0
 14454     0A09  084E               	movf	TMR1_WriteTimer@timerVal,w
 14455     0A0A  0144               	movlb	4	; select bank4
 14456     0A0B  008C               	movwf	12	;volatile
 14457                           
 14458                           ;mcc_generated_files/tmr1.c: 132:         T1CONbits.TMR1ON =1;
 14459     0A0C  140E               	bsf	14,0	;volatile
 14460                           
 14461                           ;mcc_generated_files/tmr1.c: 133:     }
 14462     0A0D  0008               	return
 14463     0A0E                     l4268:
 14464                           
 14465                           ;mcc_generated_files/tmr1.c: 135:     {;mcc_generated_files/tmr1.c: 137:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
 14466     0A0E  0140               	movlb	0	; select bank0
 14467     0A0F  084F               	movf	TMR1_WriteTimer@timerVal+1,w
 14468     0A10  0144               	movlb	4	; select bank4
 14469     0A11  008D               	movwf	13	;volatile
 14470                           
 14471                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = (uint8_t)timerVal;
 14472     0A12  0140               	movlb	0	; select bank0
 14473     0A13  084E               	movf	TMR1_WriteTimer@timerVal,w
 14474     0A14  0144               	movlb	4	; select bank4
 14475     0A15  008C               	movwf	12	;volatile
 14476     0A16  0008               	return
 14477     0A17                     __end_of_TMR1_WriteTimer:
 14478                           
 14479                           	psect	text60
 14480     086E                     __ptext60:	
 14481 ;; *************** function _TMR1_StopTimer *****************
 14482 ;; Defined at:
 14483 ;;		line 98 in file "mcc_generated_files/tmr1.c"
 14484 ;; Parameters:    Size  Location     Type
 14485 ;;		None
 14486 ;; Auto vars:     Size  Location     Type
 14487 ;;		None
 14488 ;; Return value:  Size  Location     Type
 14489 ;;                  1    wreg      void 
 14490 ;; Registers used:
 14491 ;;		None
 14492 ;; Tracked objects:
 14493 ;;		On entry : 3/0
 14494 ;;		On exit  : 3F/4
 14495 ;;		Unchanged: 0/0
 14496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14500 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14501 ;;Total ram usage:        0 bytes
 14502 ;; Hardware stack levels used: 1
 14503 ;; Hardware stack levels required when called: 5
 14504 ;; This function calls:
 14505 ;;		Nothing
 14506 ;; This function is called by:
 14507 ;;		_CmdOutput
 14508 ;; This function uses a non-reentrant model
 14509 ;;
 14510                           
 14511     086E                     _TMR1_StopTimer:	
 14512                           ;psect for function _TMR1_StopTimer
 14513                           
 14514                           
 14515                           ;mcc_generated_files/tmr1.c: 101:     T1CONbits.TMR1ON = 0;
 14516                           
 14517                           ;incstack = 0
 14518                           ; Regs used in _TMR1_StopTimer: []
 14519     086E  0144               	movlb	4	; select bank4
 14520     086F  100E               	bcf	14,0	;volatile
 14521     0870  0008               	return
 14522     0871                     __end_of_TMR1_StopTimer:
 14523                           
 14524                           	psect	text61
 14525     086B                     __ptext61:	
 14526 ;; *************** function _TMR1_StartTimer *****************
 14527 ;; Defined at:
 14528 ;;		line 92 in file "mcc_generated_files/tmr1.c"
 14529 ;; Parameters:    Size  Location     Type
 14530 ;;		None
 14531 ;; Auto vars:     Size  Location     Type
 14532 ;;		None
 14533 ;; Return value:  Size  Location     Type
 14534 ;;                  1    wreg      void 
 14535 ;; Registers used:
 14536 ;;		None
 14537 ;; Tracked objects:
 14538 ;;		On entry : 3F/E
 14539 ;;		On exit  : 3F/4
 14540 ;;		Unchanged: 0/0
 14541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14545 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14546 ;;Total ram usage:        0 bytes
 14547 ;; Hardware stack levels used: 1
 14548 ;; Hardware stack levels required when called: 5
 14549 ;; This function calls:
 14550 ;;		Nothing
 14551 ;; This function is called by:
 14552 ;;		_CmdOutput
 14553 ;; This function uses a non-reentrant model
 14554 ;;
 14555                           
 14556     086B                     _TMR1_StartTimer:	
 14557                           ;psect for function _TMR1_StartTimer
 14558                           
 14559                           
 14560                           ;mcc_generated_files/tmr1.c: 95:     T1CONbits.TMR1ON = 1;
 14561                           
 14562                           ;incstack = 0
 14563                           ; Regs used in _TMR1_StartTimer: []
 14564     086B  0144               	movlb	4	; select bank4
 14565     086C  140E               	bsf	14,0	;volatile
 14566     086D  0008               	return
 14567     086E                     __end_of_TMR1_StartTimer:
 14568                           
 14569                           	psect	intentry
 14570     0004                     __pintentry:	
 14571 ;; *************** function _INTERRUPT_InterruptManager *****************
 14572 ;; Defined at:
 14573 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 14574 ;; Parameters:    Size  Location     Type
 14575 ;;		None
 14576 ;; Auto vars:     Size  Location     Type
 14577 ;;		None
 14578 ;; Return value:  Size  Location     Type
 14579 ;;                  1    wreg      void 
 14580 ;; Registers used:
 14581 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14582 ;; Tracked objects:
 14583 ;;		On entry : 0/0
 14584 ;;		On exit  : 0/0
 14585 ;;		Unchanged: 0/0
 14586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14590 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14591 ;;Total ram usage:        0 bytes
 14592 ;; Hardware stack levels used: 1
 14593 ;; Hardware stack levels required when called: 4
 14594 ;; This function calls:
 14595 ;;		NULL
 14596 ;;		_CLC2_ISR
 14597 ;;		_EUSART1_Receive_ISR
 14598 ;;		_EUSART1_Transmit_ISR
 14599 ;;		_TMR0_ISR
 14600 ;; This function is called by:
 14601 ;;		Interrupt level 1
 14602 ;; This function uses a non-reentrant model
 14603 ;;
 14604                           
 14605     0004                     _INTERRUPT_InterruptManager:
 14606                           
 14607                           ;incstack = 0
 14608     0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 14609                           
 14610                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 14611     0005  3180               	pagesel	$
 14612                           
 14613                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
 14614     0006  014E               	movlb	14	; select bank14
 14615     0007  1A96               	btfsc	22,5	;volatile
 14616     0008  1E8C               	btfss	12,5	;volatile
 14617     0009  280E               	goto	i1l1062
 14618                           
 14619                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
 14620     000A  318A  222E  3180   	fcall	_TMR0_ISR
 14621                           
 14622                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 14623     000D  282A               	goto	i1l1072
 14624     000E                     i1l1062:	
 14625                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
 14626                           
 14627     000E  1F0B               	btfss	11,6	;volatile
 14628     000F  282A               	goto	i1l1072
 14629                           
 14630                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE5bits.CLC2IE == 1 && PIR5bits.CLC2IF == 1)
 14631     0010  1A9B               	btfsc	27,5	;volatile
 14632     0011  1E91               	btfss	17,5	;volatile
 14633     0012  2817               	goto	i1l1065
 14634                           
 14635                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             CLC2_ISR();
 14636     0013  3188  2056  3180   	fcall	_CLC2_ISR
 14637                           
 14638                           ;mcc_generated_files/interrupt_manager.c: 64:         }
 14639     0016  282A               	goto	i1l1072
 14640     0017                     i1l1065:	
 14641                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE3bits.TX1IE == 1 && PIR
      +                          3bits.TX1IF == 1)
 14642                           
 14643     0017  1A19               	btfsc	25,4	;volatile
 14644     0018  1E0F               	btfss	15,4	;volatile
 14645     0019  2821               	goto	i1l1067
 14646                           
 14647                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             EUSART1_TxDefaultInterruptHandler();
 14648     001A  0142               	movlb	2	; select bank2
 14649     001B  086C               	movf	(_EUSART1_TxDefaultInterruptHandler+1)^(0+256),w
 14650     001C  008A               	movwf	10
 14651     001D  086B               	movf	_EUSART1_TxDefaultInterruptHandler^(0+256),w
 14652     001E  000A               	callw
 14653     001F  3180               	pagesel	$
 14654                           
 14655                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 14656     0020  282A               	goto	i1l1072
 14657     0021                     i1l1067:	
 14658                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE3bits.RC1IE == 1 && PIR
      +                          3bits.RC1IF == 1)
 14659                           
 14660     0021  1A99               	btfsc	25,5	;volatile
 14661     0022  1E8F               	btfss	15,5	;volatile
 14662     0023  282A               	goto	i1l1072
 14663                           
 14664                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             EUSART1_RxDefaultInterruptHandler();
 14665     0024  0142               	movlb	2	; select bank2
 14666     0025  086A               	movf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+256),w
 14667     0026  008A               	movwf	10
 14668     0027  0869               	movf	_EUSART1_RxDefaultInterruptHandler^(0+256),w
 14669     0028  000A               	callw
 14670     0029  3180               	pagesel	$
 14671     002A                     i1l1072:	
 14672                           ;mcc_generated_files/interrupt_manager.c: 77:     }
 14673                           
 14674                           ;mcc_generated_files/interrupt_manager.c: 72:         }
 14675                           
 14676     002A  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 14677     002B  0009               	retfie
 14678     002C                     __end_of_INTERRUPT_InterruptManager:
 14679                           
 14680                           	psect	text63
 14681     0A2E                     __ptext63:	
 14682 ;; *************** function _TMR0_ISR *****************
 14683 ;; Defined at:
 14684 ;;		line 136 in file "mcc_generated_files/tmr0.c"
 14685 ;; Parameters:    Size  Location     Type
 14686 ;;		None
 14687 ;; Auto vars:     Size  Location     Type
 14688 ;;		None
 14689 ;; Return value:  Size  Location     Type
 14690 ;;                  1    wreg      void 
 14691 ;; Registers used:
 14692 ;;		wreg, status,2, status,0, pclath, cstack
 14693 ;; Tracked objects:
 14694 ;;		On entry : 3F/E
 14695 ;;		On exit  : 3F/1
 14696 ;;		Unchanged: 0/0
 14697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14701 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14702 ;;Total ram usage:        0 bytes
 14703 ;; Hardware stack levels used: 1
 14704 ;; Hardware stack levels required when called: 3
 14705 ;; This function calls:
 14706 ;;		NULL
 14707 ;;		_LIN_timerHandler
 14708 ;;		_ProcessAnalogInputs
 14709 ;;		_TMR0_DefaultInterruptHandler
 14710 ;; This function is called by:
 14711 ;;		_INTERRUPT_InterruptManager
 14712 ;; This function uses a non-reentrant model
 14713 ;;
 14714                           
 14715     0A2E                     _TMR0_ISR:	
 14716                           ;psect for function _TMR0_ISR
 14717                           
 14718                           
 14719                           ;mcc_generated_files/tmr0.c: 139:     PIR0bits.TMR0IF = 0;
 14720                           
 14721                           ;incstack = 0
 14722                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 14723     0A2E  128C               	bcf	12,5	;volatile
 14724                           
 14725                           ;mcc_generated_files/tmr0.c: 141:     TMR0H = timer0ReloadVal16bit >> 8;
 14726     0A2F  0871               	movf	_timer0ReloadVal16bit+1,w	;volatile
 14727     0A30  014B               	movlb	11	; select bank11
 14728     0A31  009D               	movwf	29	;volatile
 14729                           
 14730                           ;mcc_generated_files/tmr0.c: 142:     TMR0L = (uint8_t) timer0ReloadVal16bit;
 14731     0A32  0870               	movf	_timer0ReloadVal16bit,w	;volatile
 14732     0A33  009C               	movwf	28	;volatile
 14733                           
 14734                           ;mcc_generated_files/tmr0.c: 144:     if(TMR0_InterruptHandler)
 14735     0A34  0142               	movlb	2	; select bank2
 14736     0A35  0861               	movf	_TMR0_InterruptHandler^(0+256),w
 14737     0A36  0462               	iorwf	(_TMR0_InterruptHandler+1)^(0+256),w
 14738     0A37  1903               	btfsc	3,2
 14739     0A38  2A3E               	goto	i1l854
 14740                           
 14741                           ;mcc_generated_files/tmr0.c: 145:     {;mcc_generated_files/tmr0.c: 146:         TMR0_In
      +                          terruptHandler();
 14742     0A39  0862               	movf	(_TMR0_InterruptHandler+1)^(0+256),w
 14743     0A3A  008A               	movwf	10
 14744     0A3B  0861               	movf	_TMR0_InterruptHandler^(0+256),w
 14745     0A3C  000A               	callw
 14746     0A3D  318A               	pagesel	$
 14747     0A3E                     i1l854:	
 14748                           ;mcc_generated_files/tmr0.c: 147:     }
 14749                           
 14750                           
 14751                           ;mcc_generated_files/tmr0.c: 150:     ProcessAnalogInputs();
 14752     0A3E  3185  25AF         	fcall	_ProcessAnalogInputs
 14753                           
 14754                           ;mcc_generated_files/tmr0.c: 151:     ticks_1ms++;
 14755     0A40  3001               	movlw	1
 14756     0A41  0141               	movlb	1	; select bank1
 14757     0A42  07B6               	addwf	_ticks_1ms^(0+128),f
 14758     0A43  3000               	movlw	0
 14759     0A44  3DB7               	addwfc	(_ticks_1ms+1)^(0+128),f
 14760     0A45  0008               	return
 14761     0A46                     __end_of_TMR0_ISR:
 14762                           
 14763                           	psect	text64
 14764     091E                     __ptext64:	
 14765 ;; *************** function _LIN_timerHandler *****************
 14766 ;; Defined at:
 14767 ;;		line 290 in file "mcc_generated_files/LINDrivers/lin_slave.c"
 14768 ;; Parameters:    Size  Location     Type
 14769 ;;		None
 14770 ;; Auto vars:     Size  Location     Type
 14771 ;;		None
 14772 ;; Return value:  Size  Location     Type
 14773 ;;                  1    wreg      void 
 14774 ;; Registers used:
 14775 ;;		wreg, status,2, status,0, pclath, cstack
 14776 ;; Tracked objects:
 14777 ;;		On entry : 3F/2
 14778 ;;		On exit  : 3F/0
 14779 ;;		Unchanged: 0/0
 14780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14783 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14784 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14785 ;;Total ram usage:        1 bytes
 14786 ;; Hardware stack levels used: 1
 14787 ;; Hardware stack levels required when called: 1
 14788 ;; This function calls:
 14789 ;;		i1_LIN_stopTimer
 14790 ;; This function is called by:
 14791 ;;		_LIN_setTimerHandler
 14792 ;;		_TMR0_ISR
 14793 ;; This function uses a non-reentrant model
 14794 ;;
 14795                           
 14796     091E                     _LIN_timerHandler:	
 14797                           ;psect for function _LIN_timerHandler
 14798                           
 14799                           
 14800                           ;mcc_generated_files/LINDrivers/lin_slave.c: 293:     if (++CountCallBack >= LIN_timeout
      +                          )
 14801                           
 14802                           ;incstack = 0
 14803                           ; Regs used in _LIN_timerHandler: [wreg+status,2+status,0+pclath+cstack]
 14804     091E  3001               	movlw	1
 14805     091F  00F6               	movwf	??_LIN_timerHandler
 14806     0920  0876               	movf	??_LIN_timerHandler,w
 14807     0921  0140               	movlb	0	; select bank0
 14808     0922  07A9               	addwf	_CountCallBack,f	;volatile
 14809     0923  0869               	movf	_LIN_timeout,w
 14810     0924  0229               	subwf	_CountCallBack,w	;volatile
 14811     0925  1C03               	skipc
 14812     0926  0008               	return
 14813                           
 14814                           ;mcc_generated_files/LINDrivers/lin_slave.c: 294:     {;mcc_generated_files/LINDrivers/l
      +                          in_slave.c: 296:         LIN_stopTimer();
 14815     0927  3188  2074         	fcall	i1_LIN_stopTimer
 14816     0929  0008               	return
 14817     092A                     __end_of_LIN_timerHandler:
 14818                           
 14819                           	psect	text65
 14820     0855                     __ptext65:	
 14821 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 14822 ;; Defined at:
 14823 ;;		line 159 in file "mcc_generated_files/tmr0.c"
 14824 ;; Parameters:    Size  Location     Type
 14825 ;;		None
 14826 ;; Auto vars:     Size  Location     Type
 14827 ;;		None
 14828 ;; Return value:  Size  Location     Type
 14829 ;;                  1    wreg      void 
 14830 ;; Registers used:
 14831 ;;		None
 14832 ;; Tracked objects:
 14833 ;;		On entry : 3F/2
 14834 ;;		On exit  : 3F/2
 14835 ;;		Unchanged: 3F/0
 14836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14840 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14841 ;;Total ram usage:        0 bytes
 14842 ;; Hardware stack levels used: 1
 14843 ;; This function calls:
 14844 ;;		Nothing
 14845 ;; This function is called by:
 14846 ;;		_TMR0_Initialize
 14847 ;;		_TMR0_ISR
 14848 ;; This function uses a non-reentrant model
 14849 ;;
 14850                           
 14851     0855                     _TMR0_DefaultInterruptHandler:	
 14852                           ;psect for function _TMR0_DefaultInterruptHandler
 14853                           
 14854                           
 14855                           ;incstack = 0
 14856                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 14857     0855  0008               	return
 14858     0856                     __end_of_TMR0_DefaultInterruptHandler:
 14859                           
 14860                           	psect	text66
 14861     05AF                     __ptext66:	
 14862 ;; *************** function _ProcessAnalogInputs *****************
 14863 ;; Defined at:
 14864 ;;		line 326 in file "efuse.c"
 14865 ;; Parameters:    Size  Location     Type
 14866 ;;		None
 14867 ;; Auto vars:     Size  Location     Type
 14868 ;;		None
 14869 ;; Return value:  Size  Location     Type
 14870 ;;                  1    wreg      void 
 14871 ;; Registers used:
 14872 ;;		wreg, status,2, status,0, pclath, cstack
 14873 ;; Tracked objects:
 14874 ;;		On entry : 0/2
 14875 ;;		On exit  : 3E/0
 14876 ;;		Unchanged: 0/0
 14877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14881 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14882 ;;Total ram usage:        0 bytes
 14883 ;; Hardware stack levels used: 1
 14884 ;; Hardware stack levels required when called: 2
 14885 ;; This function calls:
 14886 ;;		_ADC_GetConversion
 14887 ;;		_ADC_SelectChannel
 14888 ;;		i1_CmdOutput
 14889 ;; This function is called by:
 14890 ;;		_TMR0_ISR
 14891 ;; This function uses a non-reentrant model
 14892 ;;
 14893                           
 14894     05AF                     _ProcessAnalogInputs:	
 14895                           ;psect for function _ProcessAnalogInputs
 14896                           
 14897                           
 14898                           ;efuse.c: 339:     adcISense_prev = adcISense_curr;
 14899                           
 14900                           ;incstack = 0
 14901                           ; Regs used in _ProcessAnalogInputs: [wreg+status,2+status,0+pclath+cstack]
 14902     05AF  0140               	movlb	0	; select bank0
 14903     05B0  083F               	movf	_adcISense_curr+1,w
 14904     05B1  0141               	movlb	1	; select bank1
 14905     05B2  00AD               	movwf	(_adcISense_prev+1)^(0+128)
 14906     05B3  0140               	movlb	0	; select bank0
 14907     05B4  083E               	movf	_adcISense_curr,w
 14908     05B5  0141               	movlb	1	; select bank1
 14909     05B6  00AC               	movwf	_adcISense_prev^(0+128)
 14910                           
 14911                           ;efuse.c: 340:     adcISense_curr = ADC_GetConversion(ISENSE_ANB4);
 14912     05B7  300C               	movlw	12
 14913     05B8  318A  2246  3185   	fcall	_ADC_GetConversion
 14914     05BB  0877               	movf	?_ADC_GetConversion+1,w
 14915     05BC  0140               	movlb	0	; select bank0
 14916     05BD  00BF               	movwf	_adcISense_curr+1
 14917     05BE  0876               	movf	?_ADC_GetConversion,w
 14918     05BF  00BE               	movwf	_adcISense_curr
 14919                           
 14920                           ;efuse.c: 341:     ADC_SelectChannel(channel_AVSS);
 14921     05C0  303B               	movlw	59
 14922     05C1  3189  212A  3185   	fcall	_ADC_SelectChannel
 14923                           
 14924                           ;efuse.c: 342:     _delay((unsigned long)((5)*(32000000/4000000.0)));
 14925     05C4  300D               	movlw	13
 14926     05C5                     u350_27:
 14927     05C5  0B89               	decfsz	9,f
 14928     05C6  2DC5               	goto	u350_27
 14929     05C7  0000               	nop
 14930                           
 14931                           ;efuse.c: 344:     if (isense_max > 422)
 14932     05C8  3001               	movlw	1
 14933     05C9  0140               	movlb	0	; select bank0
 14934     05CA  0268               	subwf	_isense_max+1,w
 14935     05CB  30A7               	movlw	167
 14936     05CC  1903               	skipnz
 14937     05CD  0267               	subwf	_isense_max,w
 14938     05CE  1C03               	skipc
 14939     05CF  2DD4               	goto	i1l1471
 14940                           
 14941                           ;efuse.c: 345:     {;efuse.c: 346:         isense_max = 422;
 14942     05D0  30A6               	movlw	166
 14943     05D1  00E7               	movwf	_isense_max
 14944     05D2  3001               	movlw	1
 14945     05D3  00E8               	movwf	_isense_max+1
 14946     05D4                     i1l1471:	
 14947                           ;efuse.c: 347:     }
 14948                           
 14949                           
 14950                           ;efuse.c: 349:     if((adcISense_prev > isense_max) && (adcISense_curr > isense_max) && 
      +                          (outputState == OUTPUT_ON))
 14951     05D4  0141               	movlb	1	; select bank1
 14952     05D5  082D               	movf	(_adcISense_prev+1)^(0+128),w
 14953     05D6  0140               	movlb	0	; select bank0
 14954     05D7  0268               	subwf	_isense_max+1,w
 14955     05D8  1D03               	skipz
 14956     05D9  2DDE               	goto	u157_25
 14957     05DA  0141               	movlb	1	; select bank1
 14958     05DB  082C               	movf	_adcISense_prev^(0+128),w
 14959     05DC  0140               	movlb	0	; select bank0
 14960     05DD  0267               	subwf	_isense_max,w
 14961     05DE                     u157_25:
 14962     05DE  1803               	skipnc
 14963     05DF  2DF1               	goto	i1l3836
 14964     05E0  083F               	movf	_adcISense_curr+1,w
 14965     05E1  0268               	subwf	_isense_max+1,w
 14966     05E2  1D03               	skipz
 14967     05E3  2DE6               	goto	u158_25
 14968     05E4  083E               	movf	_adcISense_curr,w
 14969     05E5  0267               	subwf	_isense_max,w
 14970     05E6                     u158_25:
 14971     05E6  1803               	skipnc
 14972     05E7  2DF1               	goto	i1l3836
 14973     05E8  032F               	decf	_outputState,w
 14974     05E9  1D03               	btfss	3,2
 14975     05EA  2DF1               	goto	i1l3836
 14976                           
 14977                           ;efuse.c: 350:     {;efuse.c: 351:         overCurrentFault = FAST_OVER_CURRENT_FAULT;
 14978     05EB  3002               	movlw	2
 14979     05EC  00AE               	movwf	_overCurrentFault
 14980                           
 14981                           ;efuse.c: 352:         CmdOutput(OUTPUT_OFF);
 14982     05ED  3000               	movlw	0
 14983     05EE  318D  2590  3185   	fcall	i1_CmdOutput
 14984     05F1                     i1l3836:
 14985                           
 14986                           ;efuse.c: 356:     if(ticks_1ms)
 14987     05F1  0141               	movlb	1	; select bank1
 14988     05F2  0836               	movf	_ticks_1ms^(0+128),w
 14989     05F3  0437               	iorwf	(_ticks_1ms+1)^(0+128),w
 14990     05F4  1903               	btfsc	3,2
 14991     05F5  2E28               	goto	i1l3852
 14992                           
 14993                           ;efuse.c: 357:     {;efuse.c: 358:         adcVccSense_prev = adcVccSense_curr;
 14994     05F6  0140               	movlb	0	; select bank0
 14995     05F7  0841               	movf	_adcVccSense_curr+1,w
 14996     05F8  0141               	movlb	1	; select bank1
 14997     05F9  00B1               	movwf	(_adcVccSense_prev+1)^(0+128)
 14998     05FA  0140               	movlb	0	; select bank0
 14999     05FB  0840               	movf	_adcVccSense_curr,w
 15000     05FC  0141               	movlb	1	; select bank1
 15001     05FD  00B0               	movwf	_adcVccSense_prev^(0+128)
 15002                           
 15003                           ;efuse.c: 359:         adcVccSense_curr = ADC_GetConversion(VCCSENSE_ANA2);
 15004     05FE  3002               	movlw	2
 15005     05FF  318A  2246  3185   	fcall	_ADC_GetConversion
 15006     0602  0877               	movf	?_ADC_GetConversion+1,w
 15007     0603  0140               	movlb	0	; select bank0
 15008     0604  00C1               	movwf	_adcVccSense_curr+1
 15009     0605  0876               	movf	?_ADC_GetConversion,w
 15010     0606  00C0               	movwf	_adcVccSense_curr
 15011                           
 15012                           ;efuse.c: 360:         ADC_SelectChannel(channel_AVSS);
 15013     0607  303B               	movlw	59
 15014     0608  3189  212A  3185   	fcall	_ADC_SelectChannel
 15015                           
 15016                           ;efuse.c: 361:         _delay((unsigned long)((5)*(32000000/4000000.0)));
 15017     060B  300D               	movlw	13
 15018     060C                     u351_27:
 15019     060C  0B89               	decfsz	9,f
 15020     060D  2E0C               	goto	u351_27
 15021     060E  0000               	nop
 15022                           
 15023                           ;efuse.c: 364:         if((adcVccSense_prev < 372) && (adcVccSense_curr < 372) && (outpu
      +                          tState == OUTPUT_ON))
 15024     060F  3001               	movlw	1
 15025     0610  0141               	movlb	1	; select bank1
 15026     0611  0231               	subwf	(_adcVccSense_prev+1)^(0+128),w
 15027     0612  3074               	movlw	116
 15028     0613  1903               	skipnz
 15029     0614  0230               	subwf	_adcVccSense_prev^(0+128),w
 15030     0615  1803               	skipnc
 15031     0616  0008               	return
 15032     0617  3001               	movlw	1
 15033     0618  0140               	movlb	0	; select bank0
 15034     0619  0241               	subwf	_adcVccSense_curr+1,w
 15035     061A  3074               	movlw	116
 15036     061B  1903               	skipnz
 15037     061C  0240               	subwf	_adcVccSense_curr,w
 15038     061D  1803               	skipnc
 15039     061E  0008               	return
 15040     061F  032F               	decf	_outputState,w
 15041     0620  1D03               	btfss	3,2
 15042     0621  0008               	return
 15043                           
 15044                           ;efuse.c: 365:         {;efuse.c: 366:             uvloFault = UVLO_FAULT;
 15045     0622  01AD               	clrf	_uvloFault
 15046     0623  0AAD               	incf	_uvloFault,f
 15047                           
 15048                           ;efuse.c: 367:             CmdOutput(OUTPUT_OFF);
 15049     0624  3000               	movlw	0
 15050     0625  318D  2590         	fcall	i1_CmdOutput
 15051     0627  0008               	return
 15052     0628                     i1l3852:
 15053                           
 15054                           ;efuse.c: 371:     {;efuse.c: 372:         adcTSense_prev = adcTSense_curr;
 15055     0628  0875               	movf	_adcTSense_curr+1,w
 15056     0629  0140               	movlb	0	; select bank0
 15057     062A  00A1               	movwf	_adcTSense_prev+1
 15058     062B  0874               	movf	_adcTSense_curr,w
 15059     062C  00A0               	movwf	_adcTSense_prev
 15060                           
 15061                           ;efuse.c: 373:         adcTSense_curr = ADC_GetConversion(TSENSE_ANC4);
 15062     062D  3014               	movlw	20
 15063     062E  318A  2246  3185   	fcall	_ADC_GetConversion
 15064     0631  0877               	movf	?_ADC_GetConversion+1,w
 15065     0632  00F5               	movwf	_adcTSense_curr+1
 15066     0633  0876               	movf	?_ADC_GetConversion,w
 15067     0634  00F4               	movwf	_adcTSense_curr
 15068                           
 15069                           ;efuse.c: 374:         ADC_SelectChannel(channel_AVSS);
 15070     0635  303B               	movlw	59
 15071     0636  3189  212A  3185   	fcall	_ADC_SelectChannel
 15072                           
 15073                           ;efuse.c: 376:         if((adcTSense_prev < 10) && (adcTSense_curr < 10))
 15074     0639  3000               	movlw	0
 15075     063A  0140               	movlb	0	; select bank0
 15076     063B  0221               	subwf	_adcTSense_prev+1,w
 15077     063C  300A               	movlw	10
 15078     063D  1903               	skipnz
 15079     063E  0220               	subwf	_adcTSense_prev,w
 15080     063F  1803               	skipnc
 15081     0640  2E4E               	goto	i1l3864
 15082     0641  3000               	movlw	0
 15083     0642  0275               	subwf	_adcTSense_curr+1,w
 15084     0643  300A               	movlw	10
 15085     0644  1903               	skipnz
 15086     0645  0274               	subwf	_adcTSense_curr,w
 15087     0646  1803               	skipnc
 15088     0647  2E4E               	goto	i1l3864
 15089                           
 15090                           ;efuse.c: 377:         {;efuse.c: 378:             overTempFault = TEMP_SENSOR_OORL;
 15091     0648  3002               	movlw	2
 15092     0649  00AC               	movwf	_overTempFault
 15093                           
 15094                           ;efuse.c: 379:             CmdOutput(OUTPUT_OFF);
 15095     064A  3000               	movlw	0
 15096     064B  318D  2590         	fcall	i1_CmdOutput
 15097                           
 15098                           ;efuse.c: 380:         }
 15099     064D  0008               	return
 15100     064E                     i1l3864:
 15101     064E  3003               	movlw	3
 15102     064F  0221               	subwf	_adcTSense_prev+1,w
 15103     0650  30F6               	movlw	246
 15104     0651  1903               	skipnz
 15105     0652  0220               	subwf	_adcTSense_prev,w
 15106     0653  1C03               	skipc
 15107     0654  0008               	return
 15108     0655  3003               	movlw	3
 15109     0656  0275               	subwf	_adcTSense_curr+1,w
 15110     0657  30F6               	movlw	246
 15111     0658  1903               	skipnz
 15112     0659  0274               	subwf	_adcTSense_curr,w
 15113     065A  1C03               	skipc
 15114     065B  0008               	return
 15115                           
 15116                           ;efuse.c: 382:         {;efuse.c: 383:             overTempFault = TEMP_SENSOR_OORH;
 15117     065C  3003               	movlw	3
 15118     065D  00AC               	movwf	_overTempFault
 15119                           
 15120                           ;efuse.c: 384:             CmdOutput(OUTPUT_OFF);
 15121     065E  3000               	movlw	0
 15122     065F  318D  2590         	fcall	i1_CmdOutput
 15123     0661  0008               	return
 15124     0662                     __end_of_ProcessAnalogInputs:
 15125                           
 15126                           	psect	text67
 15127     0D90                     __ptext67:	
 15128 ;; *************** function i1_CmdOutput *****************
 15129 ;; Defined at:
 15130 ;;		line 390 in file "efuse.c"
 15131 ;; Parameters:    Size  Location     Type
 15132 ;;  enable          1    wreg     unsigned char 
 15133 ;; Auto vars:     Size  Location     Type
 15134 ;;  enable          1    4[COMMON] unsigned char 
 15135 ;; Return value:  Size  Location     Type
 15136 ;;                  1    wreg      void 
 15137 ;; Registers used:
 15138 ;;		wreg, status,2, status,0, pclath, cstack
 15139 ;; Tracked objects:
 15140 ;;		On entry : 3F/0
 15141 ;;		On exit  : 3F/0
 15142 ;;		Unchanged: 0/0
 15143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15145 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15146 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15147 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15148 ;;Total ram usage:        3 bytes
 15149 ;; Hardware stack levels used: 1
 15150 ;; Hardware stack levels required when called: 1
 15151 ;; This function calls:
 15152 ;;		i1_TMR1_StartTimer
 15153 ;;		i1_TMR1_StopTimer
 15154 ;;		i1_TMR1_WriteTimer
 15155 ;;		i1_TMR2_Initialize
 15156 ;;		i1_TMR2_Start
 15157 ;;		i1_TMR2_Stop
 15158 ;; This function is called by:
 15159 ;;		_ProcessAnalogInputs
 15160 ;; This function uses a non-reentrant model
 15161 ;;
 15162                           
 15163     0D90                     i1_CmdOutput:	
 15164                           ;psect for function i1_CmdOutput
 15165                           
 15166                           
 15167                           ;incstack = 0
 15168                           ; Regs used in i1_CmdOutput: [wreg+status,2+status,0+pclath+cstack]
 15169                           ;i1CmdOutput@enable stored from wreg
 15170     0D90  00FA               	movwf	i1CmdOutput@enable
 15171                           
 15172                           ;efuse.c: 390: void CmdOutput(uint8_t enable);efuse.c: 391: {;efuse.c: 392:     TMR2_Sto
      +                          p();
 15173     0D91  3188  2068  318D   	fcall	i1_TMR2_Stop
 15174                           
 15175                           ;efuse.c: 395:     CLC1POLbits.LC1G4POL = 0;
 15176     0D94  017C               	movlb	60	; select bank60
 15177     0D95  1191               	bcf	17,3	;volatile
 15178                           
 15179                           ;efuse.c: 396:     CLC1GLS3bits.LC1G4D3N = 0;
 15180     0D96  1219               	bcf	25,4	;volatile
 15181                           
 15182                           ;efuse.c: 397:     CLC1GLS3bits.LC1G4D4T = 0;
 15183     0D97  1399               	bcf	25,7	;volatile
 15184                           
 15185                           ;efuse.c: 401:     T1GCON = 0x80;
 15186     0D98  3080               	movlw	128
 15187     0D99  0144               	movlb	4	; select bank4
 15188     0D9A  008F               	movwf	15	;volatile
 15189                           
 15190                           ;efuse.c: 404:     T1GATE = 0x0D;
 15191     0D9B  300D               	movlw	13
 15192     0D9C  0090               	movwf	16	;volatile
 15193                           
 15194                           ;efuse.c: 406:     CLC3CONbits.EN = 0;
 15195     0D9D  017C               	movlb	60	; select bank60
 15196     0D9E  13A4               	bcf	36,7	;volatile
 15197                           
 15198                           ;efuse.c: 409:     CLC1POLbits.LC1G2POL = 1;
 15199     0D9F  1491               	bsf	17,1	;volatile
 15200                           
 15201                           ;efuse.c: 410:     CLC1POLbits.LC1G2POL = 0;
 15202     0DA0  1091               	bcf	17,1	;volatile
 15203                           
 15204                           ;efuse.c: 412:     _delay((unsigned long)((1)*(32000000/4000000.0)));
 15205     0DA1  3200               	nop2	;2 cycle nop
 15206     0DA2  3200               	nop2	;2 cycle nop
 15207     0DA3  3200               	nop2	;2 cycle nop
 15208     0DA4  3200               	nop2	;2 cycle nop
 15209                           
 15210                           ;efuse.c: 415:     CLC2POLbits.LC2G2POL = 1;
 15211     0DA5  017C               	movlb	60	; select bank60
 15212     0DA6  149B               	bsf	27,1	;volatile
 15213                           
 15214                           ;efuse.c: 416:     CLC2POLbits.LC2G2POL = 0;
 15215     0DA7  109B               	bcf	27,1	;volatile
 15216                           
 15217                           ;efuse.c: 418:     outputState = OUTPUT_OFF;
 15218     0DA8  0140               	movlb	0	; select bank0
 15219     0DA9  01AF               	clrf	_outputState
 15220                           
 15221                           ;efuse.c: 421:     if (enable)
 15222     0DAA  087A               	movf	i1CmdOutput@enable,w
 15223     0DAB  1903               	btfsc	3,2
 15224     0DAC  0008               	return
 15225                           
 15226                           ;efuse.c: 422:     {;efuse.c: 423:         overCurrentFault = NO_OVER_CURRENT_FAULT;
 15227     0DAD  01AE               	clrf	_overCurrentFault
 15228                           
 15229                           ;efuse.c: 424:         uvloFault = NO_UVLO_FAULT;
 15230     0DAE  01AD               	clrf	_uvloFault
 15231                           
 15232                           ;efuse.c: 425:         overTempFault = NO_TEMP_FAULT;
 15233     0DAF  01AC               	clrf	_overTempFault
 15234     0DB0  1794               	bsf	20,7	;volatile
 15235                           
 15236                           ;efuse.c: 430:         CLC1CONbits.LC1EN = 1;
 15237     0DB1  017C               	movlb	60	; select bank60
 15238     0DB2  1790               	bsf	16,7	;volatile
 15239                           
 15240                           ;efuse.c: 431:         CLC1POLbits.LC1G4POL = 0;
 15241     0DB3  1191               	bcf	17,3	;volatile
 15242                           
 15243                           ;efuse.c: 432:         CLC1POLbits.LC1G3POL = 0;
 15244     0DB4  1111               	bcf	17,2	;volatile
 15245                           
 15246                           ;efuse.c: 433:         CLC1POLbits.LC1G3POL = 1;
 15247     0DB5  1511               	bsf	17,2	;volatile
 15248                           
 15249                           ;efuse.c: 434:         CLC1POLbits.LC1G3POL = 0;
 15250     0DB6  1111               	bcf	17,2	;volatile
 15251                           
 15252                           ;efuse.c: 435:         CLC1POLbits.LC1POL = 1;
 15253     0DB7  1791               	bsf	17,7	;volatile
 15254                           
 15255                           ;efuse.c: 438:         CLC2POLbits.LC2G4POL = 0;
 15256     0DB8  119B               	bcf	27,3	;volatile
 15257                           
 15258                           ;efuse.c: 439:         CLC2POLbits.LC2G3POL = 0;
 15259     0DB9  111B               	bcf	27,2	;volatile
 15260                           
 15261                           ;efuse.c: 440:         CLC2POLbits.LC2G3POL = 1;
 15262     0DBA  151B               	bsf	27,2	;volatile
 15263                           
 15264                           ;efuse.c: 441:         CLC2POLbits.LC2G3POL = 0;
 15265     0DBB  111B               	bcf	27,2	;volatile
 15266                           
 15267                           ;efuse.c: 443:         if(triggerType == TRIGGER_TIMER_OVERFLOW)
 15268     0DBC  0140               	movlb	0	; select bank0
 15269     0DBD  0331               	decf	_triggerType,w
 15270     0DBE  1D03               	btfss	3,2
 15271     0DBF  2DD1               	goto	i1l1485
 15272                           
 15273                           ;efuse.c: 444:         {;efuse.c: 447:             CLC1POLbits.LC1G4POL = 1;
 15274     0DC0  017C               	movlb	60	; select bank60
 15275     0DC1  1591               	bsf	17,3	;volatile
 15276                           
 15277                           ;efuse.c: 448:             CLC1GLS3bits.LC1G4D3N = 1;
 15278     0DC2  1619               	bsf	25,4	;volatile
 15279                           
 15280                           ;efuse.c: 449:             CLC1GLS3bits.LC1G4D4T = 1;
 15281     0DC3  1799               	bsf	25,7	;volatile
 15282                           
 15283                           ;efuse.c: 452:             T1GCON = 0xC0;
 15284     0DC4  30C0               	movlw	192
 15285     0DC5  0144               	movlb	4	; select bank4
 15286     0DC6  008F               	movwf	15	;volatile
 15287                           
 15288                           ;efuse.c: 455:             T1GATE = 0x0B;
 15289     0DC7  300B               	movlw	11
 15290     0DC8  0090               	movwf	16	;volatile
 15291                           
 15292                           ;efuse.c: 457:             TMR2_Initialize();
 15293     0DC9  3189  2151  318D   	fcall	i1_TMR2_Initialize
 15294                           
 15295                           ;efuse.c: 458:             TMR2_Start();
 15296     0DCC  3188  2058  318D   	fcall	i1_TMR2_Start
 15297                           
 15298                           ;efuse.c: 460:             CLC3CONbits.EN = 1;
 15299     0DCF  017C               	movlb	60	; select bank60
 15300     0DD0  17A4               	bsf	36,7	;volatile
 15301     0DD1                     i1l1485:	
 15302                           ;efuse.c: 461:         }
 15303                           
 15304                           
 15305                           ;efuse.c: 464:         TMR1_StopTimer();
 15306     0DD1  3188  2065  318D   	fcall	i1_TMR1_StopTimer
 15307                           
 15308                           ;efuse.c: 465:         TMR1_WriteTimer( 0xffff - reduced_drive_time );
 15309     0DD4  0140               	movlb	0	; select bank0
 15310     0DD5  0830               	movf	_reduced_drive_time,w
 15311     0DD6  00F8               	movwf	??i1_CmdOutput
 15312     0DD7  01F9               	clrf	??i1_CmdOutput+1
 15313     0DD8  0978               	comf	??i1_CmdOutput,w
 15314     0DD9  00F6               	movwf	i1TMR1_WriteTimer@timerVal
 15315     0DDA  0979               	comf	??i1_CmdOutput+1,w
 15316     0DDB  00F7               	movwf	i1TMR1_WriteTimer@timerVal+1
 15317     0DDC  3189  216D  318D   	fcall	i1_TMR1_WriteTimer
 15318                           
 15319                           ;efuse.c: 466:         PIR4bits.TMR1IF = 0;
 15320     0DDF  014E               	movlb	14	; select bank14
 15321     0DE0  1010               	bcf	16,0	;volatile
 15322                           
 15323                           ;efuse.c: 467:         TMR1_StartTimer();
 15324     0DE1  3188  2062         	fcall	i1_TMR1_StartTimer
 15325                           
 15326                           ;efuse.c: 469:         iSenseOffset = adcISense_curr;
 15327     0DE3  0140               	movlb	0	; select bank0
 15328     0DE4  083F               	movf	_adcISense_curr+1,w
 15329     0DE5  00BB               	movwf	_iSenseOffset+1
 15330     0DE6  083E               	movf	_adcISense_curr,w
 15331     0DE7  00BA               	movwf	_iSenseOffset
 15332                           
 15333                           ;efuse.c: 470:         outputState = OUTPUT_ON;
 15334     0DE8  01AF               	clrf	_outputState
 15335     0DE9  0AAF               	incf	_outputState,f
 15336     0DEA  1394               	bcf	20,7	;volatile
 15337     0DEB  0008               	return
 15338     0DEC                     __end_ofi1_CmdOutput:
 15339                           
 15340                           	psect	text68
 15341     0868                     __ptext68:	
 15342 ;; *************** function i1_TMR2_Stop *****************
 15343 ;; Defined at:
 15344 ;;		line 111 in file "mcc_generated_files/tmr2.c"
 15345 ;; Parameters:    Size  Location     Type
 15346 ;;		None
 15347 ;; Auto vars:     Size  Location     Type
 15348 ;;		None
 15349 ;; Return value:  Size  Location     Type
 15350 ;;                  1    wreg      void 
 15351 ;; Registers used:
 15352 ;;		None
 15353 ;; Tracked objects:
 15354 ;;		On entry : 3F/0
 15355 ;;		On exit  : 3F/5
 15356 ;;		Unchanged: 0/0
 15357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15361 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15362 ;;Total ram usage:        0 bytes
 15363 ;; Hardware stack levels used: 1
 15364 ;; This function calls:
 15365 ;;		Nothing
 15366 ;; This function is called by:
 15367 ;;		i1_CmdOutput
 15368 ;; This function uses a non-reentrant model
 15369 ;;
 15370                           
 15371     0868                     i1_TMR2_Stop:	
 15372                           ;psect for function i1_TMR2_Stop
 15373                           
 15374                           
 15375                           ;mcc_generated_files/tmr2.c: 114:     T2CONbits.TMR2ON = 0;
 15376                           
 15377                           ;incstack = 0
 15378                           ; Regs used in i1_TMR2_Stop: []
 15379     0868  0145               	movlb	5	; select bank5
 15380     0869  138E               	bcf	14,7	;volatile
 15381     086A  0008               	return
 15382     086B                     __end_ofi1_TMR2_Stop:
 15383                           
 15384                           	psect	text69
 15385     0858                     __ptext69:	
 15386 ;; *************** function i1_TMR2_Start *****************
 15387 ;; Defined at:
 15388 ;;		line 100 in file "mcc_generated_files/tmr2.c"
 15389 ;; Parameters:    Size  Location     Type
 15390 ;;		None
 15391 ;; Auto vars:     Size  Location     Type
 15392 ;;		None
 15393 ;; Return value:  Size  Location     Type
 15394 ;;                  1    wreg      void 
 15395 ;; Registers used:
 15396 ;;		None
 15397 ;; Tracked objects:
 15398 ;;		On entry : 3F/5
 15399 ;;		On exit  : 3F/5
 15400 ;;		Unchanged: 0/0
 15401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15405 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15406 ;;Total ram usage:        0 bytes
 15407 ;; Hardware stack levels used: 1
 15408 ;; This function calls:
 15409 ;;		Nothing
 15410 ;; This function is called by:
 15411 ;;		i1_CmdOutput
 15412 ;; This function uses a non-reentrant model
 15413 ;;
 15414                           
 15415     0858                     i1_TMR2_Start:	
 15416                           ;psect for function i1_TMR2_Start
 15417                           
 15418                           
 15419                           ;mcc_generated_files/tmr2.c: 103:     T2CONbits.TMR2ON = 1;
 15420                           
 15421                           ;incstack = 0
 15422                           ; Regs used in i1_TMR2_Start: []
 15423     0858  178E               	bsf	14,7	;volatile
 15424     0859  0008               	return
 15425     085A                     __end_ofi1_TMR2_Start:
 15426                           
 15427                           	psect	text70
 15428     0951                     __ptext70:	
 15429 ;; *************** function i1_TMR2_Initialize *****************
 15430 ;; Defined at:
 15431 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 15432 ;; Parameters:    Size  Location     Type
 15433 ;;		None
 15434 ;; Auto vars:     Size  Location     Type
 15435 ;;		None
 15436 ;; Return value:  Size  Location     Type
 15437 ;;                  1    wreg      void 
 15438 ;; Registers used:
 15439 ;;		wreg, status,2
 15440 ;; Tracked objects:
 15441 ;;		On entry : 3F/4
 15442 ;;		On exit  : 3F/5
 15443 ;;		Unchanged: 0/0
 15444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15448 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15449 ;;Total ram usage:        0 bytes
 15450 ;; Hardware stack levels used: 1
 15451 ;; This function calls:
 15452 ;;		Nothing
 15453 ;; This function is called by:
 15454 ;;		i1_CmdOutput
 15455 ;; This function uses a non-reentrant model
 15456 ;;
 15457                           
 15458     0951                     i1_TMR2_Initialize:	
 15459                           ;psect for function i1_TMR2_Initialize
 15460                           
 15461                           
 15462                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x0D;
 15463                           
 15464                           ;incstack = 0
 15465                           ; Regs used in i1_TMR2_Initialize: [wreg+status,2]
 15466     0951  300D               	movlw	13
 15467     0952  0145               	movlb	5	; select bank5
 15468     0953  0090               	movwf	16	;volatile
 15469                           
 15470                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 15471     0954  018F               	clrf	15	;volatile
 15472                           
 15473                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 15474     0955  0191               	clrf	17	;volatile
 15475                           
 15476                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x27;
 15477     0956  3027               	movlw	39
 15478     0957  008D               	movwf	13	;volatile
 15479                           
 15480                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 15481     0958  018C               	clrf	12	;volatile
 15482                           
 15483                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 15484     0959  014E               	movlb	14	; select bank14
 15485     095A  1090               	bcf	16,1	;volatile
 15486                           
 15487                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xB0;
 15488     095B  30B0               	movlw	176
 15489     095C  0145               	movlb	5	; select bank5
 15490     095D  008E               	movwf	14	;volatile
 15491     095E  0008               	return
 15492     095F                     __end_ofi1_TMR2_Initialize:
 15493                           
 15494                           	psect	text71
 15495     096D                     __ptext71:	
 15496 ;; *************** function i1_TMR1_WriteTimer *****************
 15497 ;; Defined at:
 15498 ;;		line 120 in file "mcc_generated_files/tmr1.c"
 15499 ;; Parameters:    Size  Location     Type
 15500 ;;  timerVal        2    0[COMMON] unsigned short 
 15501 ;; Auto vars:     Size  Location     Type
 15502 ;;		None
 15503 ;; Return value:  Size  Location     Type
 15504 ;;                  1    wreg      void 
 15505 ;; Registers used:
 15506 ;;		wreg
 15507 ;; Tracked objects:
 15508 ;;		On entry : 3F/0
 15509 ;;		On exit  : 3F/4
 15510 ;;		Unchanged: 0/0
 15511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15512 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15515 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15516 ;;Total ram usage:        2 bytes
 15517 ;; Hardware stack levels used: 1
 15518 ;; This function calls:
 15519 ;;		Nothing
 15520 ;; This function is called by:
 15521 ;;		i1_CmdOutput
 15522 ;; This function uses a non-reentrant model
 15523 ;;
 15524                           
 15525     096D                     i1_TMR1_WriteTimer:	
 15526                           ;psect for function i1_TMR1_WriteTimer
 15527                           
 15528                           
 15529                           ;mcc_generated_files/tmr1.c: 120: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 121: {;mcc_generated_files/tmr1.c: 122:     if (T1CONbits.nT1SYNC == 1)
 15530                           
 15531                           ;incstack = 0
 15532                           ; Regs used in i1_TMR1_WriteTimer: [wreg]
 15533     096D  0144               	movlb	4	; select bank4
 15534     096E  1D0E               	btfss	14,2	;volatile
 15535     096F  2977               	goto	i1l3368
 15536                           
 15537                           ;mcc_generated_files/tmr1.c: 123:     {;mcc_generated_files/tmr1.c: 125:         T1CONbi
      +                          ts.TMR1ON = 0;
 15538     0970  100E               	bcf	14,0	;volatile
 15539                           
 15540                           ;mcc_generated_files/tmr1.c: 128:         TMR1H = (uint8_t)(timerVal >> 8);
 15541     0971  0877               	movf	i1TMR1_WriteTimer@timerVal+1,w
 15542     0972  008D               	movwf	13	;volatile
 15543                           
 15544                           ;mcc_generated_files/tmr1.c: 129:         TMR1L = (uint8_t)timerVal;
 15545     0973  0876               	movf	i1TMR1_WriteTimer@timerVal,w
 15546     0974  008C               	movwf	12	;volatile
 15547                           
 15548                           ;mcc_generated_files/tmr1.c: 132:         T1CONbits.TMR1ON =1;
 15549     0975  140E               	bsf	14,0	;volatile
 15550                           
 15551                           ;mcc_generated_files/tmr1.c: 133:     }
 15552     0976  0008               	return
 15553     0977                     i1l3368:
 15554                           
 15555                           ;mcc_generated_files/tmr1.c: 135:     {;mcc_generated_files/tmr1.c: 137:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
 15556     0977  0877               	movf	i1TMR1_WriteTimer@timerVal+1,w
 15557     0978  008D               	movwf	13	;volatile
 15558                           
 15559                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = (uint8_t)timerVal;
 15560     0979  0876               	movf	i1TMR1_WriteTimer@timerVal,w
 15561     097A  008C               	movwf	12	;volatile
 15562     097B  0008               	return
 15563     097C                     __end_ofi1_TMR1_WriteTimer:
 15564                           
 15565                           	psect	text72
 15566     0865                     __ptext72:	
 15567 ;; *************** function i1_TMR1_StopTimer *****************
 15568 ;; Defined at:
 15569 ;;		line 98 in file "mcc_generated_files/tmr1.c"
 15570 ;; Parameters:    Size  Location     Type
 15571 ;;		None
 15572 ;; Auto vars:     Size  Location     Type
 15573 ;;		None
 15574 ;; Return value:  Size  Location     Type
 15575 ;;                  1    wreg      void 
 15576 ;; Registers used:
 15577 ;;		None
 15578 ;; Tracked objects:
 15579 ;;		On entry : 3/0
 15580 ;;		On exit  : 3F/4
 15581 ;;		Unchanged: 0/0
 15582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15586 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15587 ;;Total ram usage:        0 bytes
 15588 ;; Hardware stack levels used: 1
 15589 ;; This function calls:
 15590 ;;		Nothing
 15591 ;; This function is called by:
 15592 ;;		i1_CmdOutput
 15593 ;; This function uses a non-reentrant model
 15594 ;;
 15595                           
 15596     0865                     i1_TMR1_StopTimer:	
 15597                           ;psect for function i1_TMR1_StopTimer
 15598                           
 15599                           
 15600                           ;mcc_generated_files/tmr1.c: 101:     T1CONbits.TMR1ON = 0;
 15601                           
 15602                           ;incstack = 0
 15603                           ; Regs used in i1_TMR1_StopTimer: []
 15604     0865  0144               	movlb	4	; select bank4
 15605     0866  100E               	bcf	14,0	;volatile
 15606     0867  0008               	return
 15607     0868                     __end_ofi1_TMR1_StopTimer:
 15608                           
 15609                           	psect	text73
 15610     0862                     __ptext73:	
 15611 ;; *************** function i1_TMR1_StartTimer *****************
 15612 ;; Defined at:
 15613 ;;		line 92 in file "mcc_generated_files/tmr1.c"
 15614 ;; Parameters:    Size  Location     Type
 15615 ;;		None
 15616 ;; Auto vars:     Size  Location     Type
 15617 ;;		None
 15618 ;; Return value:  Size  Location     Type
 15619 ;;                  1    wreg      void 
 15620 ;; Registers used:
 15621 ;;		None
 15622 ;; Tracked objects:
 15623 ;;		On entry : 3F/E
 15624 ;;		On exit  : 3F/4
 15625 ;;		Unchanged: 0/0
 15626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15630 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15631 ;;Total ram usage:        0 bytes
 15632 ;; Hardware stack levels used: 1
 15633 ;; This function calls:
 15634 ;;		Nothing
 15635 ;; This function is called by:
 15636 ;;		i1_CmdOutput
 15637 ;; This function uses a non-reentrant model
 15638 ;;
 15639                           
 15640     0862                     i1_TMR1_StartTimer:	
 15641                           ;psect for function i1_TMR1_StartTimer
 15642                           
 15643                           
 15644                           ;mcc_generated_files/tmr1.c: 95:     T1CONbits.TMR1ON = 1;
 15645                           
 15646                           ;incstack = 0
 15647                           ; Regs used in i1_TMR1_StartTimer: []
 15648     0862  0144               	movlb	4	; select bank4
 15649     0863  140E               	bsf	14,0	;volatile
 15650     0864  0008               	return
 15651     0865                     __end_ofi1_TMR1_StartTimer:
 15652                           
 15653                           	psect	text74
 15654     092A                     __ptext74:	
 15655 ;; *************** function _ADC_SelectChannel *****************
 15656 ;; Defined at:
 15657 ;;		line 85 in file "mcc_generated_files/adc.c"
 15658 ;; Parameters:    Size  Location     Type
 15659 ;;  channel         1    wreg     enum E6750
 15660 ;; Auto vars:     Size  Location     Type
 15661 ;;  channel         1    1[COMMON] enum E6750
 15662 ;; Return value:  Size  Location     Type
 15663 ;;                  1    wreg      void 
 15664 ;; Registers used:
 15665 ;;		wreg, status,2, status,0
 15666 ;; Tracked objects:
 15667 ;;		On entry : 3E/0
 15668 ;;		On exit  : 3F/1
 15669 ;;		Unchanged: 0/0
 15670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15672 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15673 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15674 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15675 ;;Total ram usage:        2 bytes
 15676 ;; Hardware stack levels used: 1
 15677 ;; This function calls:
 15678 ;;		Nothing
 15679 ;; This function is called by:
 15680 ;;		_ProcessAnalogInputs
 15681 ;; This function uses a non-reentrant model
 15682 ;;
 15683                           
 15684     092A                     _ADC_SelectChannel:	
 15685                           ;psect for function _ADC_SelectChannel
 15686                           
 15687                           
 15688                           ;incstack = 0
 15689                           ; Regs used in _ADC_SelectChannel: [wreg+status,2+status,0]
 15690                           ;ADC_SelectChannel@channel stored from wreg
 15691     092A  00F7               	movwf	ADC_SelectChannel@channel
 15692                           
 15693                           ;mcc_generated_files/adc.c: 85: void ADC_SelectChannel(adc_channel_t channel);mcc_genera
      +                          ted_files/adc.c: 86: {;mcc_generated_files/adc.c: 88:     ADCON0bits.CHS = channel;
 15694     092B  0877               	movf	ADC_SelectChannel@channel,w
 15695     092C  00F6               	movwf	??_ADC_SelectChannel
 15696     092D  0DF6               	rlf	??_ADC_SelectChannel,f
 15697     092E  0DF6               	rlf	??_ADC_SelectChannel,f
 15698     092F  0141               	movlb	1	; select bank1
 15699     0930  081D               	movf	29,w	;volatile
 15700     0931  0676               	xorwf	??_ADC_SelectChannel,w
 15701     0932  3903               	andlw	-253
 15702     0933  0676               	xorwf	??_ADC_SelectChannel,w
 15703     0934  009D               	movwf	29	;volatile
 15704                           
 15705                           ;mcc_generated_files/adc.c: 90:     ADCON0bits.ADON = 1;
 15706     0935  141D               	bsf	29,0	;volatile
 15707     0936  0008               	return
 15708     0937                     __end_of_ADC_SelectChannel:
 15709                           
 15710                           	psect	text75
 15711     0A46                     __ptext75:	
 15712 ;; *************** function _ADC_GetConversion *****************
 15713 ;; Defined at:
 15714 ;;		line 112 in file "mcc_generated_files/adc.c"
 15715 ;; Parameters:    Size  Location     Type
 15716 ;;  channel         1    wreg     enum E6750
 15717 ;; Auto vars:     Size  Location     Type
 15718 ;;  channel         1    3[COMMON] enum E6750
 15719 ;; Return value:  Size  Location     Type
 15720 ;;                  2    0[COMMON] unsigned short 
 15721 ;; Registers used:
 15722 ;;		wreg, status,2, status,0
 15723 ;; Tracked objects:
 15724 ;;		On entry : 3E/1
 15725 ;;		On exit  : 3F/1
 15726 ;;		Unchanged: 0/0
 15727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15728 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15729 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15730 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15731 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15732 ;;Total ram usage:        4 bytes
 15733 ;; Hardware stack levels used: 1
 15734 ;; This function calls:
 15735 ;;		Nothing
 15736 ;; This function is called by:
 15737 ;;		_ProcessAnalogInputs
 15738 ;; This function uses a non-reentrant model
 15739 ;;
 15740                           
 15741     0A46                     _ADC_GetConversion:	
 15742                           ;psect for function _ADC_GetConversion
 15743                           
 15744                           
 15745                           ;incstack = 0
 15746                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
 15747                           ;ADC_GetConversion@channel stored from wreg
 15748     0A46  00F9               	movwf	ADC_GetConversion@channel
 15749                           
 15750                           ;mcc_generated_files/adc.c: 112: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 113: {;mcc_generated_files/adc.c: 115:     ADCON0bits.CHS = ch
      +                          annel;
 15751     0A47  0879               	movf	ADC_GetConversion@channel,w
 15752     0A48  00F8               	movwf	??_ADC_GetConversion
 15753     0A49  0DF8               	rlf	??_ADC_GetConversion,f
 15754     0A4A  0DF8               	rlf	??_ADC_GetConversion,f
 15755     0A4B  0141               	movlb	1	; select bank1
 15756     0A4C  081D               	movf	29,w	;volatile
 15757     0A4D  0678               	xorwf	??_ADC_GetConversion,w
 15758     0A4E  3903               	andlw	-253
 15759     0A4F  0678               	xorwf	??_ADC_GetConversion,w
 15760     0A50  009D               	movwf	29	;volatile
 15761                           
 15762                           ;mcc_generated_files/adc.c: 118:     ADCON0bits.ADON = 1;
 15763     0A51  141D               	bsf	29,0	;volatile
 15764                           
 15765                           ;mcc_generated_files/adc.c: 121:     _delay((unsigned long)((5)*(32000000/4000000.0)));
 15766     0A52  300D               	movlw	13
 15767     0A53                     u352_27:
 15768     0A53  0B89               	decfsz	9,f
 15769     0A54  2A53               	goto	u352_27
 15770     0A55  0000               	nop
 15771                           
 15772                           ;mcc_generated_files/adc.c: 124:     ADCON0bits.GOnDONE = 1;
 15773     0A56  0141               	movlb	1	; select bank1
 15774     0A57  149D               	bsf	29,1	;volatile
 15775     0A58                     i1l1114:	
 15776                           ;mcc_generated_files/adc.c: 128:     {;mcc_generated_files/adc.c: 129:     }
 15777                           
 15778                           
 15779                           ;mcc_generated_files/adc.c: 127:     while (ADCON0bits.GOnDONE)
 15780     0A58  189D               	btfsc	29,1	;volatile
 15781     0A59  2A58               	goto	i1l1114
 15782                           
 15783                           ;mcc_generated_files/adc.c: 132:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 15784     0A5A  081C               	movf	28,w	;volatile
 15785     0A5B  00F7               	movwf	?_ADC_GetConversion+1
 15786     0A5C  081B               	movf	27,w	;volatile
 15787     0A5D  00F6               	movwf	?_ADC_GetConversion
 15788     0A5E  0008               	return
 15789     0A5F                     __end_of_ADC_GetConversion:
 15790                           
 15791                           	psect	text76
 15792     0874                     __ptext76:	
 15793 ;; *************** function i1_LIN_stopTimer *****************
 15794 ;; Defined at:
 15795 ;;		line 304 in file "mcc_generated_files/LINDrivers/lin_slave.c"
 15796 ;; Parameters:    Size  Location     Type
 15797 ;;		None
 15798 ;; Auto vars:     Size  Location     Type
 15799 ;;		None
 15800 ;; Return value:  Size  Location     Type
 15801 ;;                  1    wreg      void 
 15802 ;; Registers used:
 15803 ;;		status,2
 15804 ;; Tracked objects:
 15805 ;;		On entry : 3F/0
 15806 ;;		On exit  : 3F/0
 15807 ;;		Unchanged: 0/0
 15808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15812 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15813 ;;Total ram usage:        0 bytes
 15814 ;; Hardware stack levels used: 1
 15815 ;; This function calls:
 15816 ;;		Nothing
 15817 ;; This function is called by:
 15818 ;;		_LIN_timerHandler
 15819 ;; This function uses a non-reentrant model
 15820 ;;
 15821                           
 15822     0874                     i1_LIN_stopTimer:	
 15823                           ;psect for function i1_LIN_stopTimer
 15824                           
 15825                           
 15826                           ;mcc_generated_files/LINDrivers/lin_slave.c: 305:     __nop();
 15827                           
 15828                           ;incstack = 0
 15829                           ; Regs used in i1_LIN_stopTimer: [status,2]
 15830     0874  0000               	nop
 15831                           
 15832                           ;mcc_generated_files/LINDrivers/lin_slave.c: 307:     CountCallBack = 0;
 15833     0875  0140               	movlb	0	; select bank0
 15834     0876  01A9               	clrf	_CountCallBack	;volatile
 15835                           
 15836                           ;mcc_generated_files/LINDrivers/lin_slave.c: 308:     LIN_timerRunning = 0;
 15837     0877  01AA               	clrf	_LIN_timerRunning
 15838     0878  0008               	return
 15839     0879                     __end_ofi1_LIN_stopTimer:
 15840                           
 15841                           	psect	text77
 15842     0AAC                     __ptext77:	
 15843 ;; *************** function _EUSART1_Transmit_ISR *****************
 15844 ;; Defined at:
 15845 ;;		line 197 in file "mcc_generated_files/eusart1.c"
 15846 ;; Parameters:    Size  Location     Type
 15847 ;;		None
 15848 ;; Auto vars:     Size  Location     Type
 15849 ;;		None
 15850 ;; Return value:  Size  Location     Type
 15851 ;;                  1    wreg      void 
 15852 ;; Registers used:
 15853 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15854 ;; Tracked objects:
 15855 ;;		On entry : 3F/2
 15856 ;;		On exit  : 31/0
 15857 ;;		Unchanged: 0/0
 15858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15861 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15862 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15863 ;;Total ram usage:        1 bytes
 15864 ;; Hardware stack levels used: 1
 15865 ;; This function calls:
 15866 ;;		Nothing
 15867 ;; This function is called by:
 15868 ;;		_EUSART1_Initialize
 15869 ;;		_INTERRUPT_InterruptManager
 15870 ;; This function uses a non-reentrant model
 15871 ;;
 15872                           
 15873     0AAC                     _EUSART1_Transmit_ISR:	
 15874                           ;psect for function _EUSART1_Transmit_ISR
 15875                           
 15876                           
 15877                           ;mcc_generated_files/eusart1.c: 201:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
 15878                           
 15879                           ;incstack = 0
 15880                           ; Regs used in _EUSART1_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 15881     0AAC  3008               	movlw	8
 15882     0AAD  0140               	movlb	0	; select bank0
 15883     0AAE  0224               	subwf	_eusart1TxBufferRemaining,w
 15884     0AAF  1803               	skipnc
 15885     0AB0  2AC7               	goto	i1l711
 15886                           
 15887                           ;mcc_generated_files/eusart1.c: 202:     {;mcc_generated_files/eusart1.c: 203:         T
      +                          X1REG = eusart1TxBuffer[eusart1TxTail++];
 15888     0AB1  0825               	movf	_eusart1TxTail,w
 15889     0AB2  3E51               	addlw	(low (_eusart1TxBuffer| (0+256)))& (0+255)
 15890     0AB3  0086               	movwf	6
 15891     0AB4  3001               	movlw	1	; select bank2/3
 15892     0AB5  0087               	movwf	7
 15893     0AB6  0801               	movf	1,w
 15894     0AB7  0142               	movlb	2	; select bank2
 15895     0AB8  009A               	movwf	26	;volatile
 15896     0AB9  3001               	movlw	1
 15897     0ABA  00F6               	movwf	??_EUSART1_Transmit_ISR
 15898     0ABB  0876               	movf	??_EUSART1_Transmit_ISR,w
 15899     0ABC  0140               	movlb	0	; select bank0
 15900     0ABD  07A5               	addwf	_eusart1TxTail,f	;volatile
 15901                           
 15902                           ;mcc_generated_files/eusart1.c: 204:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
 15903     0ABE  3008               	movlw	8
 15904     0ABF  0225               	subwf	_eusart1TxTail,w
 15905     0AC0  1803               	btfsc	3,0
 15906                           
 15907                           ;mcc_generated_files/eusart1.c: 205:         {;mcc_generated_files/eusart1.c: 206:      
      +                                 eusart1TxTail = 0;
 15908     0AC1  01A5               	clrf	_eusart1TxTail	;volatile
 15909                           
 15910                           ;mcc_generated_files/eusart1.c: 208:         eusart1TxBufferRemaining++;
 15911     0AC2  3001               	movlw	1
 15912     0AC3  00F6               	movwf	??_EUSART1_Transmit_ISR
 15913     0AC4  0876               	movf	??_EUSART1_Transmit_ISR,w
 15914     0AC5  07A4               	addwf	_eusart1TxBufferRemaining,f	;volatile
 15915                           
 15916                           ;mcc_generated_files/eusart1.c: 209:     }
 15917     0AC6  0008               	return
 15918     0AC7                     i1l711:	
 15919                           ;mcc_generated_files/eusart1.c: 210:     else
 15920                           
 15921                           
 15922                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         P
      +                          IE3bits.TX1IE = 0;
 15923     0AC7  014E               	movlb	14	; select bank14
 15924     0AC8  1219               	bcf	25,4	;volatile
 15925     0AC9  0008               	return
 15926     0ACA                     __end_of_EUSART1_Transmit_ISR:
 15927                           
 15928                           	psect	text78
 15929     0C86                     __ptext78:	
 15930 ;; *************** function _EUSART1_Receive_ISR *****************
 15931 ;; Defined at:
 15932 ;;		line 216 in file "mcc_generated_files/eusart1.c"
 15933 ;; Parameters:    Size  Location     Type
 15934 ;;		None
 15935 ;; Auto vars:     Size  Location     Type
 15936 ;;		None
 15937 ;; Return value:  Size  Location     Type
 15938 ;;                  1    wreg      void 
 15939 ;; Registers used:
 15940 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15941 ;; Tracked objects:
 15942 ;;		On entry : 3F/2
 15943 ;;		On exit  : 0/0
 15944 ;;		Unchanged: 0/0
 15945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15949 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15950 ;;Total ram usage:        0 bytes
 15951 ;; Hardware stack levels used: 1
 15952 ;; Hardware stack levels required when called: 2
 15953 ;; This function calls:
 15954 ;;		NULL
 15955 ;;		_EUSART1_DefaultErrorHandler
 15956 ;;		_EUSART1_DefaultFramingErrorHandler
 15957 ;;		_EUSART1_DefaultOverrunErrorHandler
 15958 ;;		_EUSART1_RxDataHandler
 15959 ;; This function is called by:
 15960 ;;		_EUSART1_Initialize
 15961 ;;		_INTERRUPT_InterruptManager
 15962 ;; This function uses a non-reentrant model
 15963 ;;
 15964                           
 15965     0C86                     _EUSART1_Receive_ISR:	
 15966                           ;psect for function _EUSART1_Receive_ISR
 15967                           
 15968                           
 15969                           ;mcc_generated_files/eusart1.c: 219:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 15970                           
 15971                           ;incstack = 0
 15972                           ; Regs used in _EUSART1_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15973     0C86  0873               	movf	_eusart1RxHead,w	;volatile
 15974     0C87  3E41               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 15975     0C88  0086               	movwf	6
 15976     0C89  3001               	movlw	1	; select bank2/3
 15977     0C8A  0087               	movwf	7
 15978     0C8B  0181               	clrf	1
 15979                           
 15980                           ;mcc_generated_files/eusart1.c: 221:     if(RC1STAbits.FERR){
 15981     0C8C  1D1D               	btfss	29,2	;volatile
 15982     0C8D  2C99               	goto	i1l4068
 15983                           
 15984                           ;mcc_generated_files/eusart1.c: 222:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 15985     0C8E  0873               	movf	_eusart1RxHead,w	;volatile
 15986     0C8F  3E41               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 15987     0C90  0086               	movwf	6
 15988     0C91  3001               	movlw	1	; select bank2/3
 15989     0C92  0087               	movwf	7
 15990     0C93  1481               	bsf	1,1
 15991                           
 15992                           ;mcc_generated_files/eusart1.c: 223:         EUSART1_FramingErrorHandler();
 15993     0C94  0868               	movf	(_EUSART1_FramingErrorHandler+1)^(0+256),w
 15994     0C95  008A               	movwf	10
 15995     0C96  0867               	movf	_EUSART1_FramingErrorHandler^(0+256),w
 15996     0C97  000A               	callw
 15997     0C98  318C               	pagesel	$
 15998     0C99                     i1l4068:
 15999                           
 16000                           ;mcc_generated_files/eusart1.c: 226:     if(RC1STAbits.OERR){
 16001     0C99  0142               	movlb	2	; select bank2
 16002     0C9A  1C9D               	btfss	29,1	;volatile
 16003     0C9B  2CA7               	goto	i1l4074
 16004                           
 16005                           ;mcc_generated_files/eusart1.c: 227:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 16006     0C9C  0873               	movf	_eusart1RxHead,w	;volatile
 16007     0C9D  3E41               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 16008     0C9E  0086               	movwf	6
 16009     0C9F  3001               	movlw	1	; select bank2/3
 16010     0CA0  0087               	movwf	7
 16011     0CA1  1501               	bsf	1,2
 16012                           
 16013                           ;mcc_generated_files/eusart1.c: 228:         EUSART1_OverrunErrorHandler();
 16014     0CA2  0866               	movf	(_EUSART1_OverrunErrorHandler+1)^(0+256),w
 16015     0CA3  008A               	movwf	10
 16016     0CA4  0865               	movf	_EUSART1_OverrunErrorHandler^(0+256),w
 16017     0CA5  000A               	callw
 16018     0CA6  318C               	pagesel	$
 16019     0CA7                     i1l4074:
 16020                           
 16021                           ;mcc_generated_files/eusart1.c: 231:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 16022     0CA7  0873               	movf	_eusart1RxHead,w	;volatile
 16023     0CA8  3E41               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 16024     0CA9  0086               	movwf	6
 16025     0CAA  3001               	movlw	1	; select bank2/3
 16026     0CAB  0087               	movwf	7
 16027     0CAC  0801               	movf	1,w
 16028     0CAD  1903               	btfsc	3,2
 16029     0CAE  2CB6               	goto	i1l4078
 16030                           
 16031                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_ErrorHandler();
 16032     0CAF  0142               	movlb	2	; select bank2
 16033     0CB0  0864               	movf	(_EUSART1_ErrorHandler+1)^(0+256),w
 16034     0CB1  008A               	movwf	10
 16035     0CB2  0863               	movf	_EUSART1_ErrorHandler^(0+256),w
 16036     0CB3  000A               	callw
 16037     0CB4  318C               	pagesel	$
 16038                           
 16039                           ;mcc_generated_files/eusart1.c: 233:     } else {
 16040     0CB5  0008               	return
 16041     0CB6                     i1l4078:
 16042                           
 16043                           ;mcc_generated_files/eusart1.c: 234:         EUSART1_RxDataHandler();
 16044     0CB6  3189  21D4         	fcall	_EUSART1_RxDataHandler
 16045     0CB8  0008               	return
 16046     0CB9                     __end_of_EUSART1_Receive_ISR:
 16047                           
 16048                           	psect	text79
 16049     085F                     __ptext79:	
 16050 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 16051 ;; Defined at:
 16052 ;;		line 252 in file "mcc_generated_files/eusart1.c"
 16053 ;; Parameters:    Size  Location     Type
 16054 ;;		None
 16055 ;; Auto vars:     Size  Location     Type
 16056 ;;		None
 16057 ;; Return value:  Size  Location     Type
 16058 ;;                  1    wreg      void 
 16059 ;; Registers used:
 16060 ;;		None
 16061 ;; Tracked objects:
 16062 ;;		On entry : 3F/2
 16063 ;;		On exit  : 3F/2
 16064 ;;		Unchanged: 0/0
 16065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16070 ;;Total ram usage:        0 bytes
 16071 ;; Hardware stack levels used: 1
 16072 ;; This function calls:
 16073 ;;		Nothing
 16074 ;; This function is called by:
 16075 ;;		_EUSART1_Initialize
 16076 ;;		_EUSART1_Receive_ISR
 16077 ;; This function uses a non-reentrant model
 16078 ;;
 16079                           
 16080     085F                     _EUSART1_DefaultOverrunErrorHandler:	
 16081                           ;psect for function _EUSART1_DefaultOverrunErrorHandler
 16082                           
 16083                           
 16084                           ;mcc_generated_files/eusart1.c: 255:     RC1STAbits.CREN = 0;
 16085                           
 16086                           ;incstack = 0
 16087                           ; Regs used in _EUSART1_DefaultOverrunErrorHandler: []
 16088     085F  121D               	bcf	29,4	;volatile
 16089                           
 16090                           ;mcc_generated_files/eusart1.c: 256:     RC1STAbits.CREN = 1;
 16091     0860  161D               	bsf	29,4	;volatile
 16092     0861  0008               	return
 16093     0862                     __end_of_EUSART1_DefaultOverrunErrorHandler:
 16094                           
 16095                           	psect	text80
 16096     0854                     __ptext80:	
 16097 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 16098 ;; Defined at:
 16099 ;;		line 250 in file "mcc_generated_files/eusart1.c"
 16100 ;; Parameters:    Size  Location     Type
 16101 ;;		None
 16102 ;; Auto vars:     Size  Location     Type
 16103 ;;		None
 16104 ;; Return value:  Size  Location     Type
 16105 ;;                  1    wreg      void 
 16106 ;; Registers used:
 16107 ;;		None
 16108 ;; Tracked objects:
 16109 ;;		On entry : 3F/2
 16110 ;;		On exit  : 3F/2
 16111 ;;		Unchanged: 3F/0
 16112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16116 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16117 ;;Total ram usage:        0 bytes
 16118 ;; Hardware stack levels used: 1
 16119 ;; This function calls:
 16120 ;;		Nothing
 16121 ;; This function is called by:
 16122 ;;		_EUSART1_Initialize
 16123 ;;		_EUSART1_Receive_ISR
 16124 ;; This function uses a non-reentrant model
 16125 ;;
 16126                           
 16127     0854                     _EUSART1_DefaultFramingErrorHandler:	
 16128                           ;psect for function _EUSART1_DefaultFramingErrorHandler
 16129                           
 16130                           
 16131                           ;incstack = 0
 16132                           ; Regs used in _EUSART1_DefaultFramingErrorHandler: []
 16133     0854  0008               	return
 16134     0855                     __end_of_EUSART1_DefaultFramingErrorHandler:
 16135                           
 16136                           	psect	text81
 16137     085C                     __ptext81:	
 16138 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 16139 ;; Defined at:
 16140 ;;		line 260 in file "mcc_generated_files/eusart1.c"
 16141 ;; Parameters:    Size  Location     Type
 16142 ;;		None
 16143 ;; Auto vars:     Size  Location     Type
 16144 ;;		None
 16145 ;; Return value:  Size  Location     Type
 16146 ;;                  1    wreg      void 
 16147 ;; Registers used:
 16148 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16149 ;; Tracked objects:
 16150 ;;		On entry : 3F/2
 16151 ;;		On exit  : 3F/0
 16152 ;;		Unchanged: 0/0
 16153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16157 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16158 ;;Total ram usage:        0 bytes
 16159 ;; Hardware stack levels used: 1
 16160 ;; Hardware stack levels required when called: 1
 16161 ;; This function calls:
 16162 ;;		_EUSART1_RxDataHandler
 16163 ;; This function is called by:
 16164 ;;		_EUSART1_Initialize
 16165 ;;		_EUSART1_Receive_ISR
 16166 ;; This function uses a non-reentrant model
 16167 ;;
 16168                           
 16169     085C                     _EUSART1_DefaultErrorHandler:	
 16170                           ;psect for function _EUSART1_DefaultErrorHandler
 16171                           
 16172                           
 16173                           ;mcc_generated_files/eusart1.c: 261:     EUSART1_RxDataHandler();
 16174                           
 16175                           ;incstack = 0
 16176                           ; Regs used in _EUSART1_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 16177     085C  3189  21D4         	fcall	_EUSART1_RxDataHandler
 16178     085E  0008               	return
 16179     085F                     __end_of_EUSART1_DefaultErrorHandler:
 16180                           
 16181                           	psect	text82
 16182     09D4                     __ptext82:	
 16183 ;; *************** function _EUSART1_RxDataHandler *****************
 16184 ;; Defined at:
 16185 ;;		line 240 in file "mcc_generated_files/eusart1.c"
 16186 ;; Parameters:    Size  Location     Type
 16187 ;;		None
 16188 ;; Auto vars:     Size  Location     Type
 16189 ;;		None
 16190 ;; Return value:  Size  Location     Type
 16191 ;;                  1    wreg      void 
 16192 ;; Registers used:
 16193 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 16194 ;; Tracked objects:
 16195 ;;		On entry : 0/2
 16196 ;;		On exit  : 3F/0
 16197 ;;		Unchanged: 0/0
 16198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16201 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16202 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16203 ;;Total ram usage:        1 bytes
 16204 ;; Hardware stack levels used: 1
 16205 ;; This function calls:
 16206 ;;		Nothing
 16207 ;; This function is called by:
 16208 ;;		_EUSART1_Receive_ISR
 16209 ;;		_EUSART1_DefaultErrorHandler
 16210 ;; This function uses a non-reentrant model
 16211 ;;
 16212                           
 16213     09D4                     _EUSART1_RxDataHandler:	
 16214                           ;psect for function _EUSART1_RxDataHandler
 16215                           
 16216                           
 16217                           ;mcc_generated_files/eusart1.c: 242:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 16218                           
 16219                           ;incstack = 0
 16220                           ; Regs used in _EUSART1_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 16221     09D4  0873               	movf	_eusart1RxHead,w
 16222     09D5  3E49               	addlw	(low (_eusart1RxBuffer| (0+256)))& (0+255)
 16223     09D6  0086               	movwf	6
 16224     09D7  3001               	movlw	1	; select bank2/3
 16225     09D8  0087               	movwf	7
 16226     09D9  0142               	movlb	2	; select bank2
 16227     09DA  0819               	movf	25,w	;volatile
 16228     09DB  0081               	movwf	1
 16229     09DC  3001               	movlw	1
 16230     09DD  00F6               	movwf	??_EUSART1_RxDataHandler
 16231     09DE  0876               	movf	??_EUSART1_RxDataHandler,w
 16232     09DF  07F3               	addwf	_eusart1RxHead,f	;volatile
 16233                           
 16234                           ;mcc_generated_files/eusart1.c: 243:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 16235     09E0  3008               	movlw	8
 16236     09E1  0273               	subwf	_eusart1RxHead,w
 16237     09E2  1803               	btfsc	3,0
 16238                           
 16239                           ;mcc_generated_files/eusart1.c: 244:     {;mcc_generated_files/eusart1.c: 245:         e
      +                          usart1RxHead = 0;
 16240     09E3  01F3               	clrf	_eusart1RxHead	;volatile
 16241                           
 16242                           ;mcc_generated_files/eusart1.c: 247:     eusart1RxCount++;
 16243     09E4  3001               	movlw	1
 16244     09E5  00F6               	movwf	??_EUSART1_RxDataHandler
 16245     09E6  0876               	movf	??_EUSART1_RxDataHandler,w
 16246     09E7  0140               	movlb	0	; select bank0
 16247     09E8  07A3               	addwf	_eusart1RxCount,f	;volatile
 16248     09E9  0008               	return
 16249     09EA                     __end_of_EUSART1_RxDataHandler:
 16250                           
 16251                           	psect	text83
 16252     0856                     __ptext83:	
 16253 ;; *************** function _CLC2_ISR *****************
 16254 ;; Defined at:
 16255 ;;		line 89 in file "mcc_generated_files/clc2.c"
 16256 ;; Parameters:    Size  Location     Type
 16257 ;;		None
 16258 ;; Auto vars:     Size  Location     Type
 16259 ;;		None
 16260 ;; Return value:  Size  Location     Type
 16261 ;;                  1    wreg      void 
 16262 ;; Registers used:
 16263 ;;		None
 16264 ;; Tracked objects:
 16265 ;;		On entry : 3F/E
 16266 ;;		On exit  : 3F/E
 16267 ;;		Unchanged: 0/0
 16268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16272 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16273 ;;Total ram usage:        0 bytes
 16274 ;; Hardware stack levels used: 1
 16275 ;; This function calls:
 16276 ;;		Nothing
 16277 ;; This function is called by:
 16278 ;;		_INTERRUPT_InterruptManager
 16279 ;; This function uses a non-reentrant model
 16280 ;;
 16281                           
 16282     0856                     _CLC2_ISR:	
 16283                           ;psect for function _CLC2_ISR
 16284                           
 16285                           
 16286                           ;mcc_generated_files/clc2.c: 92:     PIR5bits.CLC2IF = 0;
 16287                           
 16288                           ;incstack = 0
 16289                           ; Regs used in _CLC2_ISR: []
 16290     0856  1291               	bcf	17,5	;volatile
 16291     0857  0008               	return
 16292     0858                     __end_of_CLC2_ISR:
 16293     007E                     btemp	set	126	;btemp
 16294     007E                     int$flags	set	126
 16295     007E                     wtemp0	set	126
 16296                           
 16297                           	psect	idloc
 16298                           
 16299                           ;Config register IDLOC0 @ 0x8000
 16300                           ;	unspecified, using default values
 16301     8000                     	org	32768
 16302     8000  3FFF               	dw	16383
 16303                           
 16304                           ;Config register IDLOC1 @ 0x8001
 16305                           ;	unspecified, using default values
 16306     8001                     	org	32769
 16307     8001  3FFF               	dw	16383
 16308                           
 16309                           ;Config register IDLOC2 @ 0x8002
 16310                           ;	unspecified, using default values
 16311     8002                     	org	32770
 16312     8002  3FFF               	dw	16383
 16313                           
 16314                           ;Config register IDLOC3 @ 0x8003
 16315                           ;	unspecified, using default values
 16316     8003                     	org	32771
 16317     8003  3FFF               	dw	16383
 16318                           
 16319                           	psect	config
 16320                           
 16321                           ;Config register CONFIG1 @ 0x8007
 16322                           ;	External Oscillator mode selection bits
 16323                           ;	FEXTOSC = OFF, Oscillator not enabled
 16324                           ;	Power-up default value for COSC bits
 16325                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
 16326                           ;	Clock Out Enable bit
 16327                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 16328                           ;	Clock Switch Enable bit
 16329                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 16330                           ;	Fail-Safe Clock Monitor Enable bit
 16331                           ;	FCMEN = ON, FSCM timer enabled
 16332     8007                     	org	32775
 16333     8007  3FEC               	dw	16364
 16334                           
 16335                           ;Config register CONFIG2 @ 0x8008
 16336                           ;	Master Clear Enable bit
 16337                           ;	MCLRE = ON, MCLR pin is Master Clear function
 16338                           ;	Power-up Timer Enable bit
 16339                           ;	PWRTE = OFF, PWRT disabled
 16340                           ;	Low-Power BOR enable bit
 16341                           ;	LPBOREN = OFF, ULPBOR disabled
 16342                           ;	Brown-out reset enable bits
 16343                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 16344                           ;	Brown-out Reset Voltage Selection
 16345                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
 16346                           ;	Zero-cross detect disable
 16347                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
 16348                           ;	Peripheral Pin Select one-way control
 16349                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 16350                           ;	Stack Overflow/Underflow Reset Enable bit
 16351                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 16352     8008                     	org	32776
 16353     8008  3FFF               	dw	16383
 16354                           
 16355                           ;Config register CONFIG3 @ 0x8009
 16356                           ;	WDT Period Select bits
 16357                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 16358                           ;	WDT operating mode
 16359                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
 16360                           ;	WDT Window Select bits
 16361                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 16362                           ;	WDT input clock selector
 16363                           ;	WDTCCS = SC, Software Control
 16364     8009                     	org	32777
 16365     8009  3F9F               	dw	16287
 16366                           
 16367                           ;Config register CONFIG4 @ 0x800A
 16368                           ;	Boot Block Size Selection bits
 16369                           ;	BBSIZE = BB512, 512 words boot block size
 16370                           ;	Boot Block Enable bit
 16371                           ;	BBEN = OFF, Boot Block disabled
 16372                           ;	SAF Enable bit
 16373                           ;	SAFEN = OFF, SAF disabled
 16374                           ;	Application Block Write Protection bit
 16375                           ;	WRTAPP = OFF, Application Block not write protected
 16376                           ;	Boot Block Write Protection bit
 16377                           ;	WRTB = OFF, Boot Block not write protected
 16378                           ;	Configuration Register Write Protection bit
 16379                           ;	WRTC = OFF, Configuration Register not write protected
 16380                           ;	Storage Area Flash Write Protection bit
 16381                           ;	WRTSAF = OFF, SAF not write protected
 16382                           ;	Low Voltage Programming Enable bit
 16383                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 16384     800A                     	org	32778
 16385     800A  3FFF               	dw	16383
 16386                           
 16387                           ;Config register CONFIG5 @ 0x800B
 16388                           ;	UserNVM Program memory code protection bit
 16389                           ;	CP = OFF, UserNVM code protection disabled
 16390     800B                     	org	32779
 16391     800B  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    472
    Data        18
    BSS         151
    Persistent  49
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      11
    BANK0            80     25      80
    BANK1            80      0      79
    BANK2            80     33      79
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), NULL(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), NULL(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), NULL(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), NULL(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), NULL(), 

    LIN_getChecksum@data	PTR unsigned char  size(1) Largest target is 13
		 -> LIN_packet(BANK1[13]), 

    LIN_getFromTable@rxCommand	PTR const struct . size(2) Largest target is 140
		 -> scheduleTable(CODE[140]), NULL(NULL[0]), 

    LIN_getFromTable@rxCommand$data	PTR unsigned char  size(2) Largest target is 8
		 -> LIN_ADC_CURRENT_SENSE_CORRECTED_Data(BANK1[2]), LIN_ADC_CURRENT_SENSE_UNCORRECTED_Data(BANK1[2]), LIN_ADC_TEMP_SENSE_Data(BANK1[2]), LIN_ADC_VCC_SENSE_Data(BANK1[2]), 
		 -> LIN_AMBIENT_TEMPERATURE_Data(BANK1[2]), LIN_B1_COEF_Data(BANK0[1]), LIN_COMMAND_Data(BANK0[1]), LIN_CURRENT2COUNTS_SQUARED_Data(BANK1[2]), 
		 -> LIN_CURRENT_SENSE_OFFSET_Data(BANK1[2]), LIN_DAC_I_HW_TRIP_Data(BANK0[1]), LIN_DIAGNOSTIC_Data(BANK2[8]), LIN_ENTER_SLEEP_MODE_Data(BANK0[1]), 
		 -> LIN_FACTOR_RDSON_RTHJS_Data(BANK1[2]), LIN_FACTOR_RDSON_RTHSA_Data(BANK1[2]), LIN_GET_TRIGGER_TYPE_Data(BANK0[1]), LIN_HEATSINK_TEMPERATURE_Data(BANK1[2]), 
		 -> LIN_ISENSE_MAX_Data(BANK1[2]), LIN_JUNCTION_TEMPERATURE_Data(BANK1[2]), LIN_OUTPUT_STATE_Data(BANK0[1]), LIN_OVER_CURRENT_FAULT_Data(BANK0[1]), 
		 -> LIN_OVER_TEMP_FAULT_Data(BANK0[1]), LIN_REDUCED_DRIVE_TIME_Data(BANK0[1]), LIN_TCC_SAMPLE_TIME_Data(BANK1[2]), LIN_TEMPERATURE_RISE_JS_Data(BANK1[2]), 
		 -> LIN_TEMPERATURE_RISE_SA_Data(BANK1[2]), LIN_TJ_LIMIT_Data(BANK0[1]), LIN_TRIGGER_TYPE_Data(BANK0[1]), LIN_UVLO_FAULT_Data(BANK0[1]), 

    LIN_getPacket@data	PTR unsigned char  size(1) Largest target is 8
		 -> processLIN@tempRxData(BANK2[8]), 

    LIN_init@command	const PTR const struct . size(2) Largest target is 140
		 -> scheduleTable(CODE[140]), 

    LIN_init@processData	PTR FTN()void  size(2) Largest target is 1
		 -> processLIN(), 

    LIN_processData	PTR FTN()void  size(2) Largest target is 1
		 -> processLIN(), NULL(), 

    LIN_queuePacket@tempSchedule	PTR const struct . size(2) Largest target is 140
		 -> scheduleTable(CODE[140]), NULL(NULL[0]), 

    LIN_queuePacket@tempSchedule$data	PTR unsigned char  size(2) Largest target is 8
		 -> LIN_ADC_CURRENT_SENSE_CORRECTED_Data(BANK1[2]), LIN_ADC_CURRENT_SENSE_UNCORRECTED_Data(BANK1[2]), LIN_ADC_TEMP_SENSE_Data(BANK1[2]), LIN_ADC_VCC_SENSE_Data(BANK1[2]), 
		 -> LIN_AMBIENT_TEMPERATURE_Data(BANK1[2]), LIN_B1_COEF_Data(BANK0[1]), LIN_COMMAND_Data(BANK0[1]), LIN_CURRENT2COUNTS_SQUARED_Data(BANK1[2]), 
		 -> LIN_CURRENT_SENSE_OFFSET_Data(BANK1[2]), LIN_DAC_I_HW_TRIP_Data(BANK0[1]), LIN_DIAGNOSTIC_Data(BANK2[8]), LIN_ENTER_SLEEP_MODE_Data(BANK0[1]), 
		 -> LIN_FACTOR_RDSON_RTHJS_Data(BANK1[2]), LIN_FACTOR_RDSON_RTHSA_Data(BANK1[2]), LIN_GET_TRIGGER_TYPE_Data(BANK0[1]), LIN_HEATSINK_TEMPERATURE_Data(BANK1[2]), 
		 -> LIN_ISENSE_MAX_Data(BANK1[2]), LIN_JUNCTION_TEMPERATURE_Data(BANK1[2]), LIN_OUTPUT_STATE_Data(BANK0[1]), LIN_OVER_CURRENT_FAULT_Data(BANK0[1]), 
		 -> LIN_OVER_TEMP_FAULT_Data(BANK0[1]), LIN_REDUCED_DRIVE_TIME_Data(BANK0[1]), LIN_TCC_SAMPLE_TIME_Data(BANK1[2]), LIN_TEMPERATURE_RISE_JS_Data(BANK1[2]), 
		 -> LIN_TEMPERATURE_RISE_SA_Data(BANK1[2]), LIN_TJ_LIMIT_Data(BANK0[1]), LIN_TRIGGER_TYPE_Data(BANK0[1]), LIN_UVLO_FAULT_Data(BANK0[1]), 

    LIN_rxCommand	PTR const struct . size(2) Largest target is 140
		 -> scheduleTable(CODE[140]), NULL(NULL[0]), 

    LIN_rxCommand$data	PTR unsigned char  size(2) Largest target is 8
		 -> LIN_ADC_CURRENT_SENSE_CORRECTED_Data(BANK1[2]), LIN_ADC_CURRENT_SENSE_UNCORRECTED_Data(BANK1[2]), LIN_ADC_TEMP_SENSE_Data(BANK1[2]), LIN_ADC_VCC_SENSE_Data(BANK1[2]), 
		 -> LIN_AMBIENT_TEMPERATURE_Data(BANK1[2]), LIN_B1_COEF_Data(BANK0[1]), LIN_COMMAND_Data(BANK0[1]), LIN_CURRENT2COUNTS_SQUARED_Data(BANK1[2]), 
		 -> LIN_CURRENT_SENSE_OFFSET_Data(BANK1[2]), LIN_DAC_I_HW_TRIP_Data(BANK0[1]), LIN_DIAGNOSTIC_Data(BANK2[8]), LIN_ENTER_SLEEP_MODE_Data(BANK0[1]), 
		 -> LIN_FACTOR_RDSON_RTHJS_Data(BANK1[2]), LIN_FACTOR_RDSON_RTHSA_Data(BANK1[2]), LIN_GET_TRIGGER_TYPE_Data(BANK0[1]), LIN_HEATSINK_TEMPERATURE_Data(BANK1[2]), 
		 -> LIN_ISENSE_MAX_Data(BANK1[2]), LIN_JUNCTION_TEMPERATURE_Data(BANK1[2]), LIN_OUTPUT_STATE_Data(BANK0[1]), LIN_OVER_CURRENT_FAULT_Data(BANK0[1]), 
		 -> LIN_OVER_TEMP_FAULT_Data(BANK0[1]), LIN_REDUCED_DRIVE_TIME_Data(BANK0[1]), LIN_TCC_SAMPLE_TIME_Data(BANK1[2]), LIN_TEMPERATURE_RISE_JS_Data(BANK1[2]), 
		 -> LIN_TEMPERATURE_RISE_SA_Data(BANK1[2]), LIN_TJ_LIMIT_Data(BANK0[1]), LIN_TRIGGER_TYPE_Data(BANK0[1]), LIN_UVLO_FAULT_Data(BANK0[1]), 

    LIN_sendPacket@data	PTR unsigned char  size(1) Largest target is 13
		 -> LIN_packet(BANK1[13]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 13
		 -> LIN_packet(BANK1[13]), processLIN@tempRxData(BANK2[8]), 

    memcpy@d1	PTR void  size(2) Largest target is 13
		 -> LIN_packet(BANK1[13]), processLIN@tempRxData(BANK2[8]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 13
		 -> LIN_ADC_CURRENT_SENSE_CORRECTED_Data(BANK1[2]), LIN_ADC_CURRENT_SENSE_UNCORRECTED_Data(BANK1[2]), LIN_ADC_TEMP_SENSE_Data(BANK1[2]), LIN_ADC_VCC_SENSE_Data(BANK1[2]), 
		 -> LIN_AMBIENT_TEMPERATURE_Data(BANK1[2]), LIN_B1_COEF_Data(BANK0[1]), LIN_COMMAND_Data(BANK0[1]), LIN_CURRENT2COUNTS_SQUARED_Data(BANK1[2]), 
		 -> LIN_CURRENT_SENSE_OFFSET_Data(BANK1[2]), LIN_DAC_I_HW_TRIP_Data(BANK0[1]), LIN_DIAGNOSTIC_Data(BANK2[8]), LIN_ENTER_SLEEP_MODE_Data(BANK0[1]), 
		 -> LIN_FACTOR_RDSON_RTHJS_Data(BANK1[2]), LIN_FACTOR_RDSON_RTHSA_Data(BANK1[2]), LIN_GET_TRIGGER_TYPE_Data(BANK0[1]), LIN_HEATSINK_TEMPERATURE_Data(BANK1[2]), 
		 -> LIN_ISENSE_MAX_Data(BANK1[2]), LIN_JUNCTION_TEMPERATURE_Data(BANK1[2]), LIN_OUTPUT_STATE_Data(BANK0[1]), LIN_OVER_CURRENT_FAULT_Data(BANK0[1]), 
		 -> LIN_OVER_TEMP_FAULT_Data(BANK0[1]), LIN_packet(BANK1[13]), LIN_packet$data(BANK1[8]), LIN_REDUCED_DRIVE_TIME_Data(BANK0[1]), 
		 -> LIN_TCC_SAMPLE_TIME_Data(BANK1[2]), LIN_TEMPERATURE_RISE_JS_Data(BANK1[2]), LIN_TEMPERATURE_RISE_SA_Data(BANK1[2]), LIN_TJ_LIMIT_Data(BANK0[1]), 
		 -> LIN_TRIGGER_TYPE_Data(BANK0[1]), LIN_UVLO_FAULT_Data(BANK0[1]), 

    memcpy@s1	PTR const void  size(2) Largest target is 13
		 -> LIN_ADC_CURRENT_SENSE_CORRECTED_Data(BANK1[2]), LIN_ADC_CURRENT_SENSE_UNCORRECTED_Data(BANK1[2]), LIN_ADC_TEMP_SENSE_Data(BANK1[2]), LIN_ADC_VCC_SENSE_Data(BANK1[2]), 
		 -> LIN_AMBIENT_TEMPERATURE_Data(BANK1[2]), LIN_B1_COEF_Data(BANK0[1]), LIN_COMMAND_Data(BANK0[1]), LIN_CURRENT2COUNTS_SQUARED_Data(BANK1[2]), 
		 -> LIN_CURRENT_SENSE_OFFSET_Data(BANK1[2]), LIN_DAC_I_HW_TRIP_Data(BANK0[1]), LIN_DIAGNOSTIC_Data(BANK2[8]), LIN_ENTER_SLEEP_MODE_Data(BANK0[1]), 
		 -> LIN_FACTOR_RDSON_RTHJS_Data(BANK1[2]), LIN_FACTOR_RDSON_RTHSA_Data(BANK1[2]), LIN_GET_TRIGGER_TYPE_Data(BANK0[1]), LIN_HEATSINK_TEMPERATURE_Data(BANK1[2]), 
		 -> LIN_ISENSE_MAX_Data(BANK1[2]), LIN_JUNCTION_TEMPERATURE_Data(BANK1[2]), LIN_OUTPUT_STATE_Data(BANK0[1]), LIN_OVER_CURRENT_FAULT_Data(BANK0[1]), 
		 -> LIN_OVER_TEMP_FAULT_Data(BANK0[1]), LIN_packet(BANK1[13]), LIN_packet$data(BANK1[8]), LIN_REDUCED_DRIVE_TIME_Data(BANK0[1]), 
		 -> LIN_TCC_SAMPLE_TIME_Data(BANK1[2]), LIN_TEMPERATURE_RISE_JS_Data(BANK1[2]), LIN_TEMPERATURE_RISE_SA_Data(BANK1[2]), LIN_TJ_LIMIT_Data(BANK0[1]), 
		 -> LIN_TRIGGER_TYPE_Data(BANK0[1]), LIN_UVLO_FAULT_Data(BANK0[1]), 

    memset@dest	PTR void  size(1) Largest target is 13
		 -> LIN_packet(BANK1[13]), 

    memset@p	PTR unsigned char  size(1) Largest target is 13
		 -> LIN_packet(BANK1[13]), 

    S26$data	PTR unsigned char  size(2) Largest target is 8
		 -> LIN_ADC_CURRENT_SENSE_CORRECTED_Data(BANK1[2]), LIN_ADC_CURRENT_SENSE_UNCORRECTED_Data(BANK1[2]), LIN_ADC_TEMP_SENSE_Data(BANK1[2]), LIN_ADC_VCC_SENSE_Data(BANK1[2]), 
		 -> LIN_AMBIENT_TEMPERATURE_Data(BANK1[2]), LIN_B1_COEF_Data(BANK0[1]), LIN_COMMAND_Data(BANK0[1]), LIN_CURRENT2COUNTS_SQUARED_Data(BANK1[2]), 
		 -> LIN_CURRENT_SENSE_OFFSET_Data(BANK1[2]), LIN_DAC_I_HW_TRIP_Data(BANK0[1]), LIN_DIAGNOSTIC_Data(BANK2[8]), LIN_ENTER_SLEEP_MODE_Data(BANK0[1]), 
		 -> LIN_FACTOR_RDSON_RTHJS_Data(BANK1[2]), LIN_FACTOR_RDSON_RTHSA_Data(BANK1[2]), LIN_GET_TRIGGER_TYPE_Data(BANK0[1]), LIN_HEATSINK_TEMPERATURE_Data(BANK1[2]), 
		 -> LIN_ISENSE_MAX_Data(BANK1[2]), LIN_JUNCTION_TEMPERATURE_Data(BANK1[2]), LIN_OUTPUT_STATE_Data(BANK0[1]), LIN_OVER_CURRENT_FAULT_Data(BANK0[1]), 
		 -> LIN_OVER_TEMP_FAULT_Data(BANK0[1]), LIN_REDUCED_DRIVE_TIME_Data(BANK0[1]), LIN_TCC_SAMPLE_TIME_Data(BANK1[2]), LIN_TEMPERATURE_RISE_JS_Data(BANK1[2]), 
		 -> LIN_TEMPERATURE_RISE_SA_Data(BANK1[2]), LIN_TJ_LIMIT_Data(BANK0[1]), LIN_TRIGGER_TYPE_Data(BANK0[1]), LIN_UVLO_FAULT_Data(BANK0[1]), 

    scheduleTable$data	PTR unsigned char  size(2) Largest target is 8
		 -> LIN_ADC_CURRENT_SENSE_CORRECTED_Data(BANK1[2]), LIN_ADC_CURRENT_SENSE_UNCORRECTED_Data(BANK1[2]), LIN_ADC_TEMP_SENSE_Data(BANK1[2]), LIN_ADC_VCC_SENSE_Data(BANK1[2]), 
		 -> LIN_AMBIENT_TEMPERATURE_Data(BANK1[2]), LIN_B1_COEF_Data(BANK0[1]), LIN_COMMAND_Data(BANK0[1]), LIN_CURRENT2COUNTS_SQUARED_Data(BANK1[2]), 
		 -> LIN_CURRENT_SENSE_OFFSET_Data(BANK1[2]), LIN_DAC_I_HW_TRIP_Data(BANK0[1]), LIN_DIAGNOSTIC_Data(BANK2[8]), LIN_ENTER_SLEEP_MODE_Data(BANK0[1]), 
		 -> LIN_FACTOR_RDSON_RTHJS_Data(BANK1[2]), LIN_FACTOR_RDSON_RTHSA_Data(BANK1[2]), LIN_GET_TRIGGER_TYPE_Data(BANK0[1]), LIN_HEATSINK_TEMPERATURE_Data(BANK1[2]), 
		 -> LIN_ISENSE_MAX_Data(BANK1[2]), LIN_JUNCTION_TEMPERATURE_Data(BANK1[2]), LIN_OUTPUT_STATE_Data(BANK0[1]), LIN_OVER_CURRENT_FAULT_Data(BANK0[1]), 
		 -> LIN_OVER_TEMP_FAULT_Data(BANK0[1]), LIN_REDUCED_DRIVE_TIME_Data(BANK0[1]), LIN_TCC_SAMPLE_TIME_Data(BANK1[2]), LIN_TEMPERATURE_RISE_JS_Data(BANK1[2]), 
		 -> LIN_TEMPERATURE_RISE_SA_Data(BANK1[2]), LIN_TJ_LIMIT_Data(BANK0[1]), LIN_TRIGGER_TYPE_Data(BANK0[1]), LIN_UVLO_FAULT_Data(BANK0[1]), 

    sp__memcpy	PTR void  size(2) Largest target is 13
		 -> LIN_packet(BANK1[13]), processLIN@tempRxData(BANK2[8]), 

    sp__memset	PTR void  size(1) Largest target is 13
		 -> LIN_packet(BANK1[13]), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> LIN_timerHandler(), TMR0_DefaultInterruptHandler(), NULL(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> LIN_timerHandler(), TMR0_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _ProcessAnalogInputs->i1_CmdOutput
    i1_CmdOutput->i1_TMR1_WriteTimer
    _EUSART1_Receive_ISR->_EUSART1_RxDataHandler
    _EUSART1_DefaultErrorHandler->_EUSART1_RxDataHandler

Critical Paths under _main in BANK0

    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _LIN_Slave_Initialize->_LIN_init
    _LIN_setTimerHandler->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _LIN_handler->_LIN_queuePacket
    _processLIN->_LIN_getPacket
    _LIN_getPacket->_memcpy
    _EFuseInit->_CmdOutput
    _LIN_startTimer->_TMR0_WriteTimer
    _LIN_queuePacket->_LIN_sendPacket
    _LIN_sendPacket->_LIN_getChecksum
    _LIN_checkPID->_LIN_getFromTable
    _LIN_breakCheck->_EUSART1_Read
    _TCC_Curve->___omul
    ___lldiv->___lmul
    _CmdOutput->_TMR1_WriteTimer

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_EFuse
    _LIN_handler->_processLIN
    _EFuse->_TCC_Curve
    _TCC_Curve->___lldiv

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   12355
                                             31 BANK2      2     2      0
                          _CmdOutput
                              _EFuse
                          _EFuseInit
                        _LIN_handler
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1300
                     _ADC_Initialize
                    _CLC1_Initialize
                    _CLC2_Initialize
                    _CLC3_Initialize
                    _CLC4_Initialize
                    _CMP2_Initialize
                    _DAC1_Initialize
                 _EUSART1_Initialize
                     _FVR_Initialize
               _LIN_Slave_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LIN_Slave_Initialize                                 0     0      0     484
                           _LIN_init
 ---------------------------------------------------------------------------------
 (3) _LIN_init                                             5     1      4     484
                                              2 BANK0      5     1      4
                       _LIN_enableRx
                _LIN_setTimerHandler
                      _LIN_stopTimer
 ---------------------------------------------------------------------------------
 (4) _LIN_setTimerHandler                                  0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     605
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _DAC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CMP2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLC4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLC3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLC2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LIN_handler                                          3     3      0    9395
                                             20 BANK0      3     3      0
                                NULL *
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                     _LIN_breakCheck
                       _LIN_checkPID
                      _LIN_disableRx
                       _LIN_enableRx
                    _LIN_getChecksum
                   _LIN_getFromTable
                    _LIN_queuePacket
                     _LIN_startTimer
                      _LIN_stopTimer
                             _memset
                         _processLIN *
 ---------------------------------------------------------------------------------
 (2) _processLIN                                          14    14      0    2944
                                             13 BANK0      5     5      0
                                              0 BANK2      9     9      0
                          _CmdOutput
                          _EFuseInit
                      _LIN_getPacket
 ---------------------------------------------------------------------------------
 (3) _LIN_getPacket                                        2     2      0    1498
                                             11 BANK0      2     2      0
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               7     3      4     569
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) _EFuseInit                                            0     0      0     321
                          _CmdOutput
                        _TMR0_Reload
 ---------------------------------------------------------------------------------
 (4) _TMR0_Reload                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _LIN_stopTimer                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LIN_startTimer                                       1     1      0     186
                                              2 BANK0      1     1      0
                    _TMR0_WriteTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_WriteTimer                                      2     0      2     155
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _LIN_queuePacket                                      7     7      0    3165
                                             13 BANK0      7     7      0
                    _LIN_getChecksum
                     _LIN_sendPacket
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              11     5      6     800
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (3) _LIN_sendPacket                                       5     3      2    1274
                                              8 BANK0      5     3      2
                      _EUSART1_Write
                    _LIN_getChecksum
 ---------------------------------------------------------------------------------
 (4) _LIN_getChecksum                                      8     6      2     809
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (4) _EUSART1_Write                                        2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _LIN_enableRx                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LIN_disableRx                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LIN_checkPID                                         1     1      0    1115
                                              7 BANK0      1     1      0
                     _LIN_calcParity
                   _LIN_getFromTable
 ---------------------------------------------------------------------------------
 (2) _LIN_getFromTable                                     7     6      1     533
                                              0 BANK0      7     6      1
 ---------------------------------------------------------------------------------
 (3) _LIN_calcParity                                       3     3      0     489
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _LIN_breakCheck                                       0     0      0      37
                       _EUSART1_Read
            _EUSART1_get_last_status
 ---------------------------------------------------------------------------------
 (3) _EUSART1_get_last_status                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Read                                         2     2      0      37
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (8) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EFuse                                                2     2      0    1018
                                             29 BANK2      2     2      0
                          _CmdOutput
              _GetAmbientTemperature
                          _TCC_Curve
                    _Update_LIN_Data
 ---------------------------------------------------------------------------------
 (2) _Update_LIN_Data                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TCC_Curve                                           24    24      0     484
                                              5 BANK2     24    24      0
                            ___lldiv
                             ___lmul
                             ___omul
 ---------------------------------------------------------------------------------
 (3) ___omul                                              25     9     16      52
                                              0 BANK0     25     9     16
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     340
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8      68
                                             12 BANK0      9     1      8
                                              0 BANK2      5     5      0
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _GetAmbientTemperature                               11     9      2     213
                                              0 BANK0     11     9      2
 ---------------------------------------------------------------------------------
 (4) _CmdOutput                                            3     3      0     321
                                              2 BANK0      3     3      0
                    _TMR1_StartTimer
                     _TMR1_StopTimer
                    _TMR1_WriteTimer
                    _TMR2_Initialize
                         _TMR2_Start
                          _TMR2_Stop
 ---------------------------------------------------------------------------------
 (5) _TMR2_Stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR2_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR1_WriteTimer                                      2     0      2     290
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _TMR1_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           0     0      0     182
                                NULL *
                           _CLC2_ISR
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR0_ISR                                             0     0      0     182
                                NULL *
                   _LIN_timerHandler *
                _ProcessAnalogInputs
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _ProcessAnalogInputs                                  0     0      0     182
                  _ADC_GetConversion
                  _ADC_SelectChannel
                        i1_CmdOutput
 ---------------------------------------------------------------------------------
 (9) i1_CmdOutput                                          3     3      0     138
                                              2 COMMON     3     3      0
                  i1_TMR1_StartTimer
                   i1_TMR1_StopTimer
                  i1_TMR1_WriteTimer
                  i1_TMR2_Initialize
                       i1_TMR2_Start
                        i1_TMR2_Stop
 ---------------------------------------------------------------------------------
 (10) i1_TMR2_Stop                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (10) i1_TMR2_Start                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) i1_TMR2_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (10) i1_TMR1_WriteTimer                                   2     0      2     116
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (10) i1_TMR1_StopTimer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (10) i1_TMR1_StartTimer                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _ADC_SelectChannel                                    2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (9) _ADC_GetConversion                                    4     2      2      22
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (8) _LIN_timerHandler                                     1     1      0       0
                                              0 COMMON     1     1      0
                    i1_LIN_stopTimer
 ---------------------------------------------------------------------------------
 (9) i1_LIN_stopTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _EUSART1_Transmit_ISR                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _EUSART1_Receive_ISR                                  0     0      0       0
                                NULL *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (8) _EUSART1_DefaultOverrunErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART1_DefaultFramingErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART1_DefaultErrorHandler                          0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (8) _EUSART1_RxDataHandler                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _CLC2_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CmdOutput
     _TMR1_StartTimer
     _TMR1_StopTimer
     _TMR1_WriteTimer
     _TMR2_Initialize
     _TMR2_Start
     _TMR2_Stop
   _EFuse
     _CmdOutput
     _GetAmbientTemperature
     _TCC_Curve
       ___lldiv
         ___lmul (ARG)
       ___lmul
       ___omul
     _Update_LIN_Data
   _EFuseInit
     _CmdOutput
     _TMR0_Reload
   _LIN_handler
     NULL(Fake) *
     _EUSART1_Read *
     _EUSART1_is_rx_ready *
     _LIN_breakCheck *
       _EUSART1_Read
       _EUSART1_get_last_status
     _LIN_checkPID *
       _LIN_calcParity
       _LIN_getFromTable
     _LIN_disableRx *
     _LIN_enableRx *
     _LIN_getChecksum *
     _LIN_getFromTable *
     _LIN_queuePacket *
       _LIN_getChecksum
       _LIN_sendPacket
         _EUSART1_Write
         _LIN_getChecksum
       _memcpy
     _LIN_startTimer *
       _TMR0_WriteTimer
     _LIN_stopTimer *
     _memset *
     _processLIN *
       _CmdOutput
       _EFuseInit
       _LIN_getPacket
         _memcpy
         _memset
   _SYSTEM_Initialize
     _ADC_Initialize
     _CLC1_Initialize
     _CLC2_Initialize
     _CLC3_Initialize
     _CLC4_Initialize
     _CMP2_Initialize
     _DAC1_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _FVR_Initialize
     _LIN_Slave_Initialize
       _LIN_init
         _LIN_enableRx
         _LIN_setTimerHandler
           _TMR0_SetInterruptHandler
         _LIN_stopTimer
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
     _TMR2_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _CLC2_ISR *
   _EUSART1_Receive_ISR *
     NULL(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _TMR0_ISR *
     NULL(Fake) *
     _LIN_timerHandler *
       i1_LIN_stopTimer
     _ProcessAnalogInputs *
       _ADC_GetConversion
       _ADC_SelectChannel
       i1_CmdOutput
         i1_TMR1_StartTimer
         i1_TMR1_StopTimer
         i1_TMR1_WriteTimer
         i1_TMR2_Initialize
         i1_TMR2_Start
         i1_TMR2_Stop
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      5       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      F9       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     19      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      4F       8       98.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50     21      4F      10       98.8%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      F9      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Sat Dec 09 15:49:12 2023

                        __end_of_LIN_breakCheck 098B                                  _adcTSense_prev 0020  
                         __end_of_LIN_getPacket 0B30                           ??_LIN_setTimerHandler 0050  
                      _eusart1TxBufferRemaining 0024                               ??_Update_LIN_Data 004E  
                         __end_of_LIN_disableRx 087E                          __end_of_FVR_Initialize 0800  
                               ?_LIN_calcParity 0076                                 _DAC1_Initialize 088E  
                                           l310 0C52                                             l159 04AA  
                                           l273 05AE                                             l705 0AD6  
                                _TCC_Curve$3310 0139                                  _TCC_Curve$3309 0131  
                                _Trise_filtered 00A8                                     _triggerType 0031  
                               _timer1ReloadVal 00B4                        __end_of_LIN_getFromTable 0F13  
                               _TMR2_Initialize 095F                               ??_CLC2_Initialize 004E  
                                           wreg 0009                           __end_of_scheduleTable 077B  
                                _Trise_raw_curr 00A4                                            l1464 06EC  
                                          l1485 0E2E                                            l1494 0D56  
                                          l5202 0B7E                                            l5220 0D16  
                                          l5230 0E5C                                            l4510 0EE5  
                                          l4502 0EDA                                            l4406 0AE9  
                                          l5240 0E8F                                            l5232 0E6C  
                                          l5216 0D04                                            l4520 0EFF  
                                          l4504 0EBC                                            l5304 0F22  
                                          l5400 055C                                            l4514 0EF2  
                                          l4506 0EDF                                            l5306 0F37  
                                          l4268 0A0E                                            l5244 0E9C  
                                          l4532 07F0                                            l4460 0AEF  
                                          l5260 03B4                                            l5252 03A5  
                                          l5420 0582                                            l5404 0564  
                                          l5502 06C1                                            l4534 07FA  
                                          l4374 0C4D                                            l4462 0B03  
                                          l5270 0412                                            l5262 03B9  
                                          l5254 03AA                                            l5414 057A  
                                          l5406 056A                                            l4560 0BDA  
                                          l5512 06E8                                            l5504 06C5  
                                          l4720 0A22                                            l4392 0ACB  
                                          l4376 0C30                                            l5280 0434  
                                          l5264 03D0                                            l5256 03AF  
                                          l5352 04D2                                            l5424 0586  
                                          l4466 0B30                                            l4714 0989  
                                          l5274 0419                                            l5266 03E7  
                                          l5362 04E5                                            l5354 04D6  
                                          l5346 04C3                                            l5338 04B5  
                                          l4556 0BD0                                            l4724 0A24  
                                          l4388 09ED                                            l5268 03FE  
                                          l5284 044B                                            l4910 0D85  
                                          l5278 042F                                            l5382 0516  
                                          l5526 0BC1                                            l4904 0D7F  
                                          l4912 0D5B                                            l5472 0671  
                                          l5392 053F                                            l4498 0ED8  
                                          l5378 0510                                            l5486 068E  
                                          l5590 058E                                            l5496 06AA  
                                          l5592 0454                                            l5594 0F07  
                                _Trise_raw_prev 00A0                                            u2300 0788  
                                          _LATA 0018                                            u2310 078F  
                                          u2302 0789                                            _LATB 0019  
                                          _LATC 001A                                            u2410 07BB  
                                          u2330 0795                                            u2500 07E7  
                                          u2420 07C1                                            u2412 07BC  
                                          u2404 07B7                                            u2340 079B  
                                          u2332 0796                                            u2324 0791  
                                          u3125 0E60                                            u3205 0107  
                                          u2510 07EE                                            u2502 07E8  
                                          u2430 07C8                                            u2422 07C2  
                                          u2350 07A2                                            u2342 079C  
                                          u3215 0198                                            u3080 0D01  
                                          u3145 0E6D                                            u3225 0230  
                                          u2530 07F8                                            u2450 07CE  
                                          u2370 07A8                                            u2290 0782  
                                          _T2PR 028D                                            u3155 0E83  
                                          u2460 07D4                                            u2452 07CF  
                                          u2444 07CA                                            u2380 07AE  
                                          u2372 07A9                                            u2364 07A4  
                                          u2292 0783                                            u3165 0E90  
                                          u3405 0678                                            u2710 08A6  
                                          u2470 07DB                                            u2462 07D5  
                                          u2390 07B5                                            u2382 07AF  
                                          u3345 0538                                            u2490 07E1  
                             ??_CMP2_Initialize 004E                                            u3435 06A0  
                                          u2492 07E2                                            u2484 07DD  
                                          u2565 0BDB                                            u3445 06B1  
                                          u2575 0BE2                                            u3465 06E3  
                                          _PMD0 0796                                            u3477 0BA9  
                                          _PMD1 0797                                            _PMD2 0798  
                                          u2775 0D50                                            u3487 0BB7  
                                          _PMD3 0799                                            _PMD4 079A  
                                          u2785 0D7D                                            u3497 0B66  
                                          _PMD5 079B                                            u2795 0D64  
                                          _WPUA 1F39                                            _WPUB 1F44  
                                          _WPUC 1F4F                                  _LIN_sendPacket 0AEC  
                                 _EUSART1_Write 0ACA                                     _outputState 002F  
                                          _main 0B9C                                   ?_EUSART1_Read 0076  
                                          fsr0h 0005                                            fsr1h 0007  
                                          indf0 0000                                            fsr0l 0004  
                                          indf1 0001                                            fsr1l 0006  
                                          btemp 007E                                __end_of_CLC2_ISR 0858  
                                          start 002C                               ??_CLC3_Initialize 004E  
                                 processLIN@cmd 0120                                 ?_LIN_breakCheck 0076  
                                  _CLC1GLS1bits 1E17                                    _CLC1GLS3bits 1E19  
                       __end_of_TMR0_Initialize 0A78                  ??_TMR0_DefaultInterruptHandler 0076  
                               ?_FVR_Initialize 0076                        __end_ofi1_TMR1_StopTimer 0868  
                 __end_of_OSCILLATOR_Initialize 0914                               LIN_sendPacket@pid 0056  
                         _eusart1RxStatusBuffer 0141                                           ?_main 0076  
                               LIN_init@command 0050                               i1CmdOutput@enable 007A  
                               _TMR1_StartTimer 086B                                 __end_of___lldiv 0EAD  
                                         _T1CLK 0211                                           _T1CON 020E  
                                         _T2CON 028E                                           _T2HLT 028F  
                                         _T2TMR 028C                                           _T2RST 0291  
                                         i1l711 0AC7                                 _TMR0_WriteTimer 08A8  
                                         i1l854 0A3E                 _LIN_CURRENT2COUNTS_SQUARED_Data 00DD  
                                         _OSCEN 0891                                           _TMR0H 059D  
                                         _TMR1H 020D                                           _TMR0L 059C  
                                         _TMR1L 020C                                           _EFuse 0662  
                                         _TRISA 0012                                           _TRISB 0013  
                                         _TRISC 0014                                __end_of_LIN_init 0AAC  
                         __end_of_LIN_stopTimer 0888                             ___lmul@multiplicand 0052  
                     ?_TMR0_SetInterruptHandler 004E                               ??_CLC4_Initialize 004E  
                          _EUSART1_Transmit_ISR 0AAC                                __end_of_TMR0_ISR 0A46  
                                         _Tsink 0038                          _current2counts_squared 00E7  
                                   ?_TMR2_Start 0076                          __end_of_LIN_sendPacket 0B0E  
                  _LIN_TEMPERATURE_RISE_SA_Data 00C5                    _LIN_TEMPERATURE_RISE_JS_Data 00C7  
                                ?_EUSART1_Write 0076                         __end_of_TMR1_Initialize 0A91  
                                         pclath 000A                                  _LIN_startTimer 0937  
                                ??_EUSART1_Read 004E                                           status 0003  
                                         wtemp0 007E      __end_of_EUSART1_DefaultFramingErrorHandler 0855  
          ??_EUSART1_DefaultFramingErrorHandler 0076             ?_EUSART1_DefaultFramingErrorHandler 0076  
            _EUSART1_DefaultFramingErrorHandler 0854                                 _TMR1_WriteTimer 0A00  
                         _LIN_OUTPUT_STATE_Data 0046                                ?_LIN_getChecksum 004E  
                   LIN_queuePacket@tempSchedule 0060                                 __initialization 002E  
                                  ?_LIN_handler 0076                                    ?i1_TMR2_Stop 0076  
                    __end_of_EUSART1_Initialize 0CFA                                    __end_of_main 0BC8  
                       __end_of_DAC1_Initialize 0894                         __end_of_TMR2_Initialize 096D  
                   ?_INTERRUPT_InterruptManager 0076                             _LIN_UVLO_FAULT_Data 0043  
                                        ??_main 013F                                          ?_EFuse 0076  
                                  _iSenseOffset 003A                           ?_EUSART1_Transmit_ISR 0076  
                            LIN_sendPacket@data 0057                                          _ADCON0 009D  
                                        _ADCON1 009E                                          _CM2NCH 0996  
                                        _CM2PCH 0997                          __end_of_LIN_startTimer 0944  
                                        _ADRESH 009C                                 ?_LIN_sendPacket 0056  
                                        _ADRESL 009B                                          _ANSELA 1F38  
                                        _ANSELB 1F43                                          _ANSELC 1F4E  
                                        _T0CON0 059E                                          _T0CON1 059F  
                                  ?i1_CmdOutput 0076                                          _T1GATE 0210  
                                        _T1GCON 020F                                          _RC1REG 0119  
                                        _RC1STA 011D                                          i1l1114 0A58  
                       TMR1_WriteTimer@timerVal 004E                                          i1l1062 000E  
                                        i1l1072 002A                                          i1l1065 0017  
                        _LIN_DAC_I_HW_TRIP_Data 0049                                          i1l1067 0021  
                                        _RB7PPS 1F1F                                          _ODCONA 1F3A  
                                        _ODCONB 1F45                                          _ODCONC 1F50  
                                        _RC6PPS 1F26                                          i1l1471 05D4  
                                        _RC7PPS 1F27                                          i1l1485 0DD1  
                                        i1l4074 0CA7                                          i1l4068 0C99  
                                        i1l4078 0CB6                                          i1l3368 0977  
                                        i1l3852 0628                                          i1l3836 05F1  
                                        i1l3864 064E                                          _INLVLA 1F3C  
                                        _INLVLB 1F47                                          _INLVLC 1F52  
                                        _FVRCON 090C                                          u157_25 05DE  
                                        u158_25 05E6                                          u350_27 05C5  
                                        u351_27 060C                                          u352_27 0A53  
                                        _OSCFRQ 0893                                          _TX1REG 011A  
                                        _TX1STA 011E                                 _LIN_processData 016D  
                         _LIN_TRIGGER_TYPE_Data 004C                               __end_of_TCC_Curve 0252  
                             __end_of_EFuseInit 0B76                                    ?_TMR0_Reload 0076  
                     i1TMR1_WriteTimer@timerVal 0076                                          ___lmul 0BC8  
                       __end_of_TMR1_StartTimer 086E                                          ___omul 0CFA  
                               _LIN_queuePacket 0F13                               __end_of_TMR2_Stop 0874  
                       __end_of_TMR0_WriteTimer 08B0                                       ??___lldiv 0062  
                      ?_EUSART1_SetErrorHandler 004E                                          _memcpy 0B76  
                              ?_TMR0_Initialize 0076                                          _memset 09EA  
              ??_EUSART1_SetOverrunErrorHandler 0050                 ?_EUSART1_SetOverrunErrorHandler 004E  
                                _PMD_Initialize 08F0                                       ?_CLC2_ISR 0076  
                              _LIN_rxInProgress 002B                        ADC_GetConversion@channel 0079  
                               ??_EUSART1_Write 004E        TMR0_SetInterruptHandler@InterruptHandler 004E  
                               _CLC1_Initialize 09AB                                 ?_LIN_startTimer 0076  
                       __end_of_TMR1_WriteTimer 0A17                                 _eusart1RxBuffer 0149  
                               _eusart1TxBuffer 0151                                ?_TMR1_Initialize 0076  
                             __end_of_CmdOutput 0E49                               _SYSTEM_Initialize 0C56  
                               _Update_LIN_Data 0F89                         __end_of__initialization 0063  
                       ??_GetAmbientTemperature 0050                              ?_SYSTEM_Initialize 0076  
                                 ?_LIN_checkPID 0076                                   __end_of_EFuse 06EF  
                 __end_of_EUSART1_RxDataHandler 09EA                                       ?_LIN_init 0050  
                                __pcstackCOMMON 0076                                   ?_LIN_enableRx 0076  
                              ??_LIN_calcParity 004E                                 LIN_sendPacket@i 005A  
                                  __pidataBANK0 08F8                                    __pidataBANK1 0914  
                           ??_SYSTEM_Initialize 0055                                   ?i1_TMR2_Start 0076  
                              ?_DAC1_Initialize 0076                                   _dac_i_hw_trip 006B  
                                     ?_TMR0_ISR 0076                                 _CLC2_Initialize 09BF  
                              ?_TMR2_Initialize 0076                          __end_of_PMD_Initialize 08F8  
                          __end_of_EUSART1_Read 0B53                                 _CMP2_Initialize 0900  
                        LIN_handler@rxDataIndex 0027                          ??_EUSART1_Transmit_ISR 0076  
                                       ??_EFuse 013D                                      ??_CLC2_ISR 0076  
                             ?_LIN_getFromTable 004E                     __end_of_EUSART1_Receive_ISR 0CB9  
                        LIN_handler@LIN_rxState 0028                              ??_LIN_getFromTable 004F  
                     __end_of_SYSTEM_Initialize 0C86                                 _CLC3_Initialize 099A  
                                 _eusart1RxHead 0073                                   _eusart1TxHead 0026  
                                 _eusart1RxTail 0072                                      __pbssBANK0 0020  
                                    __pbssBANK1 00A0                                      __pbssBANK2 0141  
                                 _eusart1TxTail 0025               _EUSART1_TxDefaultInterruptHandler 016B  
               ??_EUSART1_SetRxInterruptHandler 0050                        ?_EUSART1_get_last_status 0076  
                              ??_LIN_breakCheck 0050                                  ??_LIN_checkPID 0055  
                   __end_of_LIN_setTimerHandler 08F0                         __end_of_LIN_queuePacket 0F89  
                              _LIN_B1_COEF_Data 0048                 __end_of_EUSART1_SetErrorHandler 08C0  
                                ??_LIN_enableRx 004E                                ??_FVR_Initialize 004E  
                                    __pmaintext 0B9C                                _LIN_timerHandler 091E  
                                    ??_LIN_init 0054                                  ??i1_TMR2_Start 0076  
                           LIN_getChecksum@data 004F                __end_of_TMR0_SetInterruptHandler 08E8  
                                       ?___lmul 004E                                         ?___omul 004E  
                              ?_TMR1_StartTimer 0076                                      ??_TMR0_ISR 007B  
                               _CLC4_Initialize 098B                                      __pintentry 0004  
                              ?_TMR0_WriteTimer 004E                                         _CM2CON0 0994  
                                       _CM2CON1 0995                                         _CLC1CON 1E10  
                                       _CLC2CON 1E1A                                         ?_memcpy 004E  
                                       _CLC3CON 1E24                                         _CLC4CON 1E2E  
                                       ?_memset 004E                                         _CLC1POL 1E11  
                                       _CLC2POL 1E1B                                         _CLC3POL 1E25  
                           ___omul@multiplicand 0056                                  ___lmul@product 0056  
                                       _CLC4POL 1E2F                                 ?_PMD_Initialize 0076  
                         LIN_getChecksum@length 0052                               ?i1_TMR1_StopTimer 0076  
        __end_of_EUSART1_SetFramingErrorHandler 08C8                  _EUSART1_SetFramingErrorHandler 08C0  
                              _LIN_timerRunning 002A                         __end_of_CLC1_Initialize 09BF  
                       _LIN_ADC_TEMP_SENSE_Data 00D3                              ??i1_TMR1_StopTimer 0076  
        _LIN_ADC_CURRENT_SENSE_UNCORRECTED_Data 00D5                    ?_EUSART1_DefaultErrorHandler 0076  
                                       _SP1BRGH 011C                                         _SP1BRGL 011B  
                                       _OSCCON1 088D                                         _OSCCON3 088F  
                       __end_of_Update_LIN_Data 1000                                         _OSCSTAT 0890  
                                       _OSCTUNE 0892                                         _SLRCONA 1F3B  
                                       _SLRCONB 1F46                                         _SLRCONC 1F51  
                                  ??_TMR2_Start 004E                                ?_TMR1_WriteTimer 004E  
                                       _a1_coef 00E5                                         _b1_coef 006A  
                       LIN_getChecksum@checksum 0054                GetAmbientTemperature@temperature 0057  
                     _LIN_GET_TRIGGER_TYPE_Data 0045                         __end_of_CLC2_Initialize 09D4  
                              _adcVccSense_curr 0040                                       _CLCIN0PPS 1EBB  
                          _ADC_InterruptHandler 00B2                                _adcVccSense_prev 00B0  
                  __end_of_LIN_Slave_Initialize 0951                         __end_of_CMP2_Initialize 090A  
                   _LIN_REDUCED_DRIVE_TIME_Data 0047                                         ___lldiv 0E49  
                           _EUSART1_is_rx_ready 08A0                              __end_of_TMR2_Start 085C  
                     _LIN_ENTER_SLEEP_MODE_Data 004B                             _ProcessAnalogInputs 05AF  
                                       __ptext1 0C56                                         __ptext2 0A78  
                                       __ptext3 0A5F                                         __ptext4 08F0  
                                       __ptext5 0BF7                                         __ptext6 090A  
                                       __ptext7 0944                                         __ptext8 0A91  
                                       __ptext9 08E8                                       _T1CONbits 020E  
                       __end_of_CLC3_Initialize 09AB                           _OSCILLATOR_Initialize 090A  
                              ??_LIN_sendPacket 0058                                       _T2CONbits 028E  
                                    _isense_max 0067                              _EUSART1_Initialize 0CB9  
                      ??_PIN_MANAGER_Initialize 004E                   ??_EUSART1_DefaultErrorHandler 0077  
                                       clrloop0 0895                 __end_of_EUSART1_get_last_status 0004  
                     LIN_getFromTable@rxCommand 0053                            end_of_initialization 0063  
                          ?_EUSART1_is_rx_ready 0076                             ?_EUSART1_Initialize 0076  
                                ___omul@product 005F                                         memcpy@d 0055  
                                       memcpy@n 0052                                         memcpy@s 0057  
                          ?_ProcessAnalogInputs 0076                                         init_ram 089A  
                                       memset@c 004E                                         memset@n 0050  
                                       memset@p 0053                     _EUSART1_OverrunErrorHandler 0165  
                                       initloop 089B                         __end_of_CLC4_Initialize 099A  
                              ?_LIN_queuePacket 0076                                 ___lldiv@divisor 005A  
         __end_of_EUSART1_SetRxInterruptHandler 08D8                   _EUSART1_SetRxInterruptHandler 08D0  
                               ___lldiv@counter 0124                               ??i1_LIN_stopTimer 0076  
                                     _TCC_Curve 0067                                   _LIN_getPacket 0B0E  
                                 _LIN_disableRx 0879                            ??_EUSART1_Initialize 0050  
                                     _EFuseInit 0B53                               LIN_getPacket@data 0059  
                      _TMR0_SetInterruptHandler 08E0                                       _TMR2_Stop 0871  
                                    _processLIN 039E                            __end_of_LIN_checkPID 0A2E  
                              ?_CLC1_Initialize 0076            _LIN_ADC_CURRENT_SENSE_CORRECTED_Data 00D1  
                           LIN_init@tableLength 0054                                ??_LIN_startTimer 0050  
                               CmdOutput@enable 0052                                       _TRISCbits 0014  
                          __end_of_LIN_enableRx 0883                                ?_Update_LIN_Data 0076  
                                 _scheduleTable 06EF                            __end_ofi1_TMR2_Start 085A  
                            _factor_rdson_rthjs 00EB                              _factor_rdson_rthsa 00E9  
                           EUSART1_Write@txData 004F                           ??_EUSART1_is_rx_ready 004E  
                         ??_ProcessAnalogInputs 007B                                     _CM2CON0bits 0994  
                                  _EUSART1_Read 0B30                                ?_CLC2_Initialize 0076  
                                     _CmdOutput 0DEC                   __end_of_GetAmbientTemperature 0D90  
                                 _LIN_rxCommand 00ED                            _timer0ReloadVal16bit 0070  
                              _overCurrentFault 002E                                      ?_TCC_Curve 0076  
                                ?_LIN_getPacket 0076                                ?_CMP2_Initialize 0076  
                                ?_LIN_disableRx 0076                                     _CLC1CONbits 1E10  
                                __end_of___lmul 0BF7                                  __end_of___omul 0D41  
                                   _CLC3CONbits 1E24                                      ?_EFuseInit 0076  
                 _LIN_CURRENT_SENSE_OFFSET_Data 00CF                                  _ADC_Initialize 08B0  
                                _TMR1_StopTimer 086E                                      ?_TMR2_Stop 0076  
                                __end_of_memcpy 0B9C                          ?_OSCILLATOR_Initialize 0076  
                                __end_of_memset 0A00                                     _CLC1POLbits 1E11  
                                   _CLC2POLbits 1E1B                                ?_CLC3_Initialize 0076  
                           start_initialization 002E                                   _LIN_stopTimer 0883  
                      __end_of_LIN_timerHandler 092A                            _LIN_Slave_Initialize 0944  
                 _LIN_JUNCTION_TEMPERATURE_Data 00C9   EUSART1_SetRxInterruptHandler@interruptHandler 004E  
 EUSART1_SetTxInterruptHandler@interruptHandler 004E                           __end_of_EUSART1_Write 0AEC  
                                   _CLCDATAbits 1E0F                           LIN_startTimer@timeout 0050  
                             ___omul@multiplier 004E                          _LIN_ADC_VCC_SENSE_Data 00D7  
                              ?_CLC4_Initialize 0076                                      ?_CmdOutput 0076  
                             LIN_calcParity@CMD 004F                               LIN_calcParity@PID 0050  
                              ??_PMD_Initialize 004E                                        ??___lmul 0056  
                                      ??___omul 005E                           _EUSART1_RxDataHandler 09D4  
                ?_EUSART1_SetRxInterruptHandler 004E                          __end_of_ADC_Initialize 08B8  
                        __end_of_TMR1_StopTimer 0871                                     __pdataBANK0 0067  
                                   __pdataBANK1 00E3                                        ??_memcpy 0054  
                                      ??_memset 0052                            processLIN@tempRxData 0121  
                                    memset@dest 0054                             _LIN_DIAGNOSTIC_Data 0159  
                                   ?_processLIN 0076                               i1_TMR2_Initialize 0951  
                                     _Tjunction 0036                                  _eusart1RxCount 0023  
                           LIN_init@processData 0052                              ?i1_TMR2_Initialize 0076  
                                ?_LIN_stopTimer 0076                                     __pbssCOMMON 0070  
             _EUSART1_RxDefaultInterruptHandler 0169                                       ___latbits 0002  
                                 __pcstackBANK0 004E                                   __pcstackBANK2 0120  
                             ??_LIN_getChecksum 0050                           ?_LIN_Slave_Initialize 0076  
                           ??i1_TMR2_Initialize 0076                                  _temperatureLUT 0252  
               ??_EUSART1_SetTxInterruptHandler 0050                ??_EUSART1_SetFramingErrorHandler 0050  
               ?_EUSART1_SetFramingErrorHandler 004E                           _TMR0_InterruptHandler 0161  
                                     __pnvBANK0 006F                                       __pnvBANK1 00ED  
                                     __pnvBANK2 0161                                 ??_LIN_getPacket 0059  
                        _PIN_MANAGER_Initialize 0BF7                                   ??_LIN_handler 0062  
                              LIN_getChecksum@i 0053                                 ??_LIN_disableRx 004E  
                                 ??i1_TMR2_Stop 0076                              LIN_getChecksum@pid 004E  
                                   ??_TCC_Curve 0125                               _ADC_SelectChannel 092A  
                          LIN_sendPacket@length 0059                                        ?___lldiv 005A  
                               ?_ADC_Initialize 0076                                 ?_TMR1_StopTimer 0076  
                            ?_ADC_SelectChannel 0076                                     ??_EFuseInit 0053  
                     __end_ofi1_TMR2_Initialize 095F                               i1_TMR1_StartTimer 0862  
                                      _DAC1CON0 090E                                        _DAC1CON1 090F  
                  ??_INTERRUPT_InterruptManager 007B                                     ??_TMR2_Stop 004E  
                            ?i1_TMR1_StartTimer 0076                                        _BAUD1CON 011F  
                                      _CLC1GLS0 1E16                                        _CLC1GLS1 1E17  
                                      _CLC1GLS2 1E18                                        _CLC1GLS3 1E19  
                                      _CLC2GLS0 1E20                                        _CLC2GLS1 1E21  
                                      _CLC2GLS2 1E22                                        _CLC2GLS3 1E23  
                                      _CLC3GLS0 1E2A                                        _CLC3GLS1 1E2B  
                                      _CLC3GLS2 1E2C                                        _CLC3GLS3 1E2D  
                   _LIN_FACTOR_RDSON_RTHSA_Data 00DF                     _LIN_FACTOR_RDSON_RTHJS_Data 00E1  
                                      _CLC4GLS0 1E34                                        _CLC4GLS1 1E35  
                                      _CLC4GLS2 1E36                                        _CLC4GLS3 1E37  
                                      _CLC1SEL0 1E12                                        _CLC1SEL1 1E13  
                                      _CLC1SEL2 1E14                                        _CLC1SEL3 1E15  
                                      _CLC2SEL0 1E1C                                        _CLC2SEL1 1E1D  
    __end_of_EUSART1_DefaultOverrunErrorHandler 0862            ??_EUSART1_DefaultOverrunErrorHandler 0076  
           ?_EUSART1_DefaultOverrunErrorHandler 0076                                        _CLC2SEL2 1E1E  
            _EUSART1_DefaultOverrunErrorHandler 085F                                        _CLC2SEL3 1E1F  
                                      _CLC3SEL0 1E26                                        _CLC3SEL1 1E27  
                                      _CLC3SEL2 1E28                                        _CLC3SEL3 1E29  
                                      _CLC4SEL0 1E30                                        _CLC4SEL1 1E31  
                                      _CLC4SEL2 1E32                                        _CLC4SEL3 1E33  
                           ??_ADC_SelectChannel 0076                            _EUSART1_ErrorHandler 0163  
                                      _CLC2_ISR 0856                        _LIN_OVER_TEMP_FAULT_Data 0042  
                       _EUSART1_SetErrorHandler 08B8                             ??i1_TMR1_StartTimer 0076  
                        __end_of_temperatureLUT 039E                                        _T2CLKCON 0290  
                                 ??i1_CmdOutput 0078                                 LIN_checkPID@pid 0055  
                               i1_LIN_stopTimer 0874                               i1_TMR1_WriteTimer 096D  
                             ??_TMR0_Initialize 0050         EUSART1_SetErrorHandler@interruptHandler 004E  
                                      _LATBbits 0019                    _LIN_AMBIENT_TEMPERATURE_Data 00CD  
                            ?i1_TMR1_WriteTimer 0076                                       clear_ram0 0894  
                                      _PIE0bits 0716                                        _PIE3bits 0719  
                                   ??_CmdOutput 0050                                        _PIE5bits 071B  
                                  _LIN_checkPID 0A17                       __end_of_ADC_SelectChannel 0937  
                    ??_TMR0_SetInterruptHandler 0050                                       _ticks_1ms 00B6  
                                      _PIR0bits 070C                                        _PIR2bits 070E  
                                      _PIR3bits 070F                                        _PIR4bits 0710  
                                      _PIR5bits 0711                                   ??_TMR0_Reload 004E  
                                      _RX1DTPPS 1ECB                                        _LIN_init 0A91  
                        ?_EUSART1_RxDataHandler 0076                       __end_ofi1_TMR1_StartTimer 0865  
                                  _LIN_enableRx 087E                             ??i1_TMR1_WriteTimer 0078  
                                      _TMR0_ISR 0A2E                                _LIN_COMMAND_Data 004D  
                                  i1_TMR2_Start 0858                                LIN_getPacket@cmd 005A  
                             ??_TMR1_Initialize 004E                             __end_of_LIN_handler 05AF  
                                    _ADCON0bits 009D                             __end_ofi1_TMR2_Stop 086B  
                               ??_LIN_stopTimer 004E                        ADC_SelectChannel@channel 0077  
                        ??_LIN_Slave_Initialize 0055                          GetAmbientTemperature@i 0056  
                                     _uvloFault 002D                        _LIN_TCC_SAMPLE_TIME_Data 00D9  
                     __end_ofi1_TMR1_WriteTimer 097C                               ___lmul@multiplier 004E  
                             ??_DAC1_Initialize 004E                    GetAmbientTemperature@adcTemp 0054  
                             ??_TMR2_Initialize 004E                           EUSART1_Read@readValue 004F  
                           __end_ofi1_CmdOutput 0DEC                                        _Tambient 006D  
                              _LIN_getFromTable 0EAD                               _LIN_TJ_LIMIT_Data 004A  
         __end_of_EUSART1_SetTxInterruptHandler 08E0                   _EUSART1_SetTxInterruptHandler 08D8  
                                     memcpy@tmp 0054                               _ADC_GetConversion 0A46  
                       ??_OSCILLATOR_Initialize 004E                              ?_ADC_GetConversion 0076  
                       _EUSART1_get_last_status 0002                                        _Trise_js 0034  
                                      _Trise_sa 0032                                  _adcISense_corr 003C  
                                _adcISense_curr 003E                                  _adcISense_prev 00AC  
                           __end_of_TMR0_Reload 088E                       ??_EUSART1_SetErrorHandler 0050  
           __end_of_EUSART1_DefaultErrorHandler 085F                     _EUSART1_DefaultErrorHandler 085C  
                           ??_ADC_GetConversion 0078                     __end_of_EUSART1_is_rx_ready 08A8  
                       __end_ofi1_LIN_stopTimer 0879                     __end_of_ProcessAnalogInputs 0662  
                                      __ptext10 08E0                                        __ptext11 07FC  
                                      __ptext20 098B                                        __ptext12 0CB9  
                                      __ptext21 099A                                        __ptext13 08D8  
                                      __ptext30 0888                                        __ptext22 09BF  
                                      __ptext14 08D0                                        __ptext31 0883  
                                      __ptext23 09AB                                        __ptext15 08C8  
                                      __ptext40 0879                                        __ptext32 0937  
                                      __ptext24 08B0                                        __ptext16 08C0  
                                      __ptext41 0A17                                        __ptext33 08A8  
                                      __ptext25 04AB                                        __ptext17 08B8  
                                      __ptext50 0067                                        __ptext42 0EAD  
                                      __ptext34 0F13                                        __ptext26 039E  
                                      __ptext18 088E                                        __ptext51 0CFA  
                                      __ptext43 077B                                        __ptext35 0B76  
                                      __ptext27 0B0E                                        __ptext19 0900  
                                      __ptext60 086E                                        __ptext52 0BC8  
                                      __ptext44 097C                                        __ptext36 0AEC  
                                      __ptext28 09EA                                        __ptext61 086B  
                                      __ptext53 0E49                                        __ptext45 0002  
                                      __ptext37 0C26                                        __ptext29 0B53  
                                      __ptext70 0951                                        __ptext54 0D41  
                                      __ptext46 0B30                                        __ptext38 0ACA  
                                      __ptext71 096D                                        __ptext63 0A2E  
                                      __ptext55 0DEC                                        __ptext47 08A0  
                                      __ptext39 087E                                        __ptext80 0854  
                                      __ptext72 0865                                        __ptext64 091E  
                                      __ptext56 0871                                        __ptext48 0662  
                                      __ptext81 085C                                        __ptext73 0862  
                                      __ptext65 0855                                        __ptext57 085A  
                                      __ptext49 0F89                                        __ptext82 09D4  
                                      __ptext74 092A                                        __ptext66 05AF  
                                      __ptext58 095F                                        __ptext83 0856  
                                      __ptext75 0A46                                        __ptext67 0D90  
                                      __ptext59 0A00                                        __ptext76 0874  
                                      __ptext68 0868                                        __ptext77 0AAC  
                                      __ptext69 0858                                        __ptext78 0C86  
                                      __ptext79 085F                               ?_LIN_timerHandler 0076  
                                 _overTempFault 002C                               ??_TMR1_StartTimer 004E  
                       TMR0_WriteTimer@timerVal 004E                              ??_LIN_timerHandler 0076  
                             ??_TMR0_WriteTimer 0050                                i1_TMR1_StopTimer 0865  
                        LIN_getFromTable@length 0052            __end_of_TMR0_DefaultInterruptHandler 0856  
                  _TMR0_DefaultInterruptHandler 0855                       __end_of_ADC_GetConversion 0A5F  
                                    _RC1STAbits 011D                                        _tj_limit 006C  
                           _LIN_rxCommandLength 006F  EUSART1_SetOverrunErrorHandler@interruptHandler 004E  
                                   _LIN_handler 04AB                                     i1_TMR2_Stop 0868  
                         _GetAmbientTemperature 0D41                                        int$flags 007E  
                           _LIN_ISENSE_MAX_Data 00DB                                 _LIN_getChecksum 0C26  
            __end_of_INTERRUPT_InterruptManager 002C                      _INTERRUPT_InterruptManager 0004  
                             ??_TMR1_WriteTimer 0050                     _EUSART1_FramingErrorHandler 0167  
                           _EUSART1_Receive_ISR 0C86                                    ??_processLIN 005B  
                                   _LIN_timeout 0069                                 _tcc_sample_time 00E3  
                                _LIN_calcParity 077B                                      _INTCONbits 000B  
                                      memcpy@d1 004E                                        memcpy@s1 0050  
                           _LIN_setTimerHandler 08E8                                     i1_CmdOutput 0D90  
                                      intlevel1 0000                                   _CountCallBack 0029  
                          ?_EUSART1_Receive_ISR 0076                                    _DAC1CON1bits 090F  
                              ___lldiv@dividend 005E                         ?_PIN_MANAGER_Initialize 0076  
        __end_of_EUSART1_SetOverrunErrorHandler 08D0                  _EUSART1_SetOverrunErrorHandler 08C8  
                         LIN_getFromTable@param 004E                    __end_of_EUSART1_Transmit_ISR 0ACA  
                            __end_of_processLIN 04AB                                ??_ADC_Initialize 004E  
                              ??_TMR1_StopTimer 004E                   ?_TMR0_DefaultInterruptHandler 0076  
                     ??_EUSART1_get_last_status 004E                                     _TMR0_Reload 0888  
                                    _LIN_packet 00B8                            ?_LIN_setTimerHandler 0076  
                           _adcISense_OneMOSFET 00AE  EUSART1_SetFramingErrorHandler@interruptHandler 004E  
                ?_EUSART1_SetTxInterruptHandler 004E                                  _LIN_breakCheck 097C  
                   _LIN_OVER_CURRENT_FAULT_Data 0044                              _eusart1RxLastError 0022  
                        __end_of_LIN_calcParity 07FC                                   __pstringtext1 0252  
                                 __pstringtext2 06EF                              LIN_queuePacket@cmd 005E  
                                _FVR_Initialize 07FC                                ___lldiv@quotient 0120  
                               _TMR0_Initialize 0A5F                               ??_LIN_queuePacket 005B  
                              ?i1_LIN_stopTimer 0076                                      _TX1STAbits 011E  
                                    _TMR2_Start 085A                           ??_EUSART1_Receive_ISR 0077  
                __end_of_PIN_MANAGER_Initialize 0C26                   _LIN_HEATSINK_TEMPERATURE_Data 00CB  
                           LIN_getFromTable@cmd 0051                              _reduced_drive_time 0030  
                              LIN_queuePacket@i 005F                         ??_EUSART1_RxDataHandler 0076  
                       __end_of_LIN_getChecksum 0C56                                 _TMR1_Initialize 0A78  
                             ??_CLC1_Initialize 004E                          ?_GetAmbientTemperature 004E  
                                _adcTSense_curr 0074  
