

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Jun 07 21:08:19 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og9 
     1                           	processor	16F15345
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,noexec
    11                           	psect	cinit,global,class=CODE,merge=1,delta=2
    12                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    18                           	psect	inittext,global,class=CODE,delta=2
    19                           	psect	clrtext,global,class=CODE,delta=2
    20                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    21                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    23                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    24                           	psect	text1,local,class=CODE,merge=1,delta=2
    25                           	psect	text2,local,class=CODE,merge=1,delta=2
    26                           	psect	text3,local,class=CODE,merge=1,delta=2
    27                           	psect	text4,local,class=CODE,merge=1,delta=2
    28                           	psect	text5,local,class=CODE,merge=1,delta=2
    29                           	psect	text6,local,class=CODE,merge=1,delta=2
    30                           	psect	text7,local,class=CODE,merge=1,delta=2
    31                           	psect	text8,local,class=CODE,merge=1,delta=2
    32                           	psect	text9,local,class=CODE,merge=1,delta=2
    33                           	psect	text10,local,class=CODE,merge=1,delta=2
    34                           	psect	text11,local,class=CODE,merge=1,delta=2
    35                           	psect	text12,local,class=CODE,merge=1,delta=2
    36                           	psect	text13,local,class=CODE,merge=1,delta=2
    37                           	psect	text14,local,class=CODE,merge=1,delta=2
    38                           	psect	text15,local,class=CODE,merge=1,delta=2
    39                           	psect	text16,local,class=CODE,merge=1,delta=2
    40                           	psect	text17,local,class=CODE,merge=1,delta=2
    41                           	psect	text18,local,class=CODE,merge=1,delta=2
    42                           	psect	text19,local,class=CODE,merge=1,delta=2
    43                           	psect	text20,local,class=CODE,merge=1,delta=2
    44                           	psect	text21,local,class=CODE,merge=1,delta=2
    45                           	psect	text22,local,class=CODE,merge=1,delta=2
    46                           	psect	text23,local,class=CODE,merge=1,delta=2
    47                           	psect	text24,local,class=CODE,merge=1,delta=2
    48                           	psect	text25,local,class=CODE,merge=1,delta=2
    49                           	psect	text26,local,class=CODE,merge=1,delta=2
    50                           	psect	text27,local,class=CODE,merge=1,delta=2
    51                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    52                           	psect	text29,local,class=CODE,merge=1,delta=2
    53                           	psect	text30,local,class=CODE,merge=1,delta=2
    54                           	psect	text31,local,class=CODE,merge=1,delta=2
    55                           	psect	text32,local,class=CODE,merge=1,delta=2
    56                           	psect	text33,local,class=CODE,merge=1,delta=2
    57                           	psect	text34,local,class=CODE,merge=1,delta=2
    58                           	psect	text35,local,class=CODE,merge=1,delta=2,group=2
    59                           	psect	text36,local,class=CODE,merge=1,delta=2
    60                           	psect	text37,local,class=CODE,merge=1,delta=2
    61                           	psect	text38,local,class=CODE,merge=1,delta=2
    62                           	psect	text39,local,class=CODE,merge=1,delta=2
    63                           	psect	text40,local,class=CODE,merge=1,delta=2
    64                           	psect	text41,local,class=CODE,merge=1,delta=2
    65                           	psect	text42,local,class=CODE,merge=1,delta=2
    66                           	psect	text43,local,class=CODE,merge=1,delta=2
    67                           	psect	text44,local,class=CODE,merge=1,delta=2
    68                           	psect	text45,local,class=CODE,merge=1,delta=2
    69                           	psect	text46,local,class=CODE,merge=1,delta=2
    70                           	psect	text47,local,class=CODE,merge=1,delta=2
    71                           	psect	text48,local,class=CODE,merge=1,delta=2
    72                           	psect	text49,local,class=CODE,merge=1,delta=2
    73                           	psect	text50,local,class=CODE,merge=1,delta=2
    74                           	psect	text51,local,class=CODE,merge=1,delta=2,group=1
    75                           	psect	text52,local,class=CODE,merge=1,delta=2,group=1
    76                           	psect	text53,local,class=CODE,merge=1,delta=2,group=1
    77                           	psect	text54,local,class=CODE,merge=1,delta=2
    78                           	psect	text55,local,class=CODE,merge=1,delta=2
    79                           	psect	text56,local,class=CODE,merge=1,delta=2
    80                           	psect	text57,local,class=CODE,merge=1,delta=2
    81                           	psect	text58,local,class=CODE,merge=1,delta=2
    82                           	psect	text59,local,class=CODE,merge=1,delta=2
    83                           	psect	text60,local,class=CODE,merge=1,delta=2
    84                           	psect	text61,local,class=CODE,merge=1,delta=2
    85                           	psect	intentry,global,class=CODE,delta=2
    86                           	psect	text63,local,class=CODE,merge=1,delta=2
    87                           	psect	text64,local,class=CODE,merge=1,delta=2
    88                           	psect	text65,local,class=CODE,merge=1,delta=2
    89                           	psect	text66,local,class=CODE,merge=1,delta=2
    90                           	psect	text67,local,class=CODE,merge=1,delta=2
    91                           	psect	text68,local,class=CODE,merge=1,delta=2
    92                           	psect	text69,local,class=CODE,merge=1,delta=2
    93                           	psect	text70,local,class=CODE,merge=1,delta=2
    94                           	psect	text71,local,class=CODE,merge=1,delta=2
    95                           	psect	text72,local,class=CODE,merge=1,delta=2
    96                           	psect	text73,local,class=CODE,merge=1,delta=2
    97                           	psect	text74,local,class=CODE,merge=1,delta=2
    98                           	psect	text75,local,class=CODE,merge=1,delta=2
    99                           	psect	text76,local,class=CODE,merge=1,delta=2
   100                           	psect	text77,local,class=CODE,merge=1,delta=2
   101                           	psect	text78,local,class=CODE,merge=1,delta=2
   102                           	psect	text79,local,class=CODE,merge=1,delta=2
   103                           	psect	text80,local,class=CODE,merge=1,delta=2
   104                           	psect	text81,local,class=CODE,merge=1,delta=2
   105                           	psect	text82,local,class=CODE,merge=1,delta=2
   106                           	psect	text83,local,class=CODE,merge=1,delta=2
   107                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   108                           	dabs	1,0x7E,2
   109  0000                     
   110                           ; Version 2.35
   111                           ; Generated 01/06/2021 GMT
   112                           ; 
   113                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   114                           ; All rights reserved.
   115                           ; 
   116                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   117                           ; 
   118                           ; Redistribution and use in source and binary forms, with or without modification, are
   119                           ; permitted provided that the following conditions are met:
   120                           ; 
   121                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   122                           ;        conditions and the following disclaimer.
   123                           ; 
   124                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   125                           ;        of conditions and the following disclaimer in the documentation and/or other
   126                           ;        materials provided with the distribution. Publication is not required when
   127                           ;        this file is used in an embedded application.
   128                           ; 
   129                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   130                           ;        software without specific prior written permission.
   131                           ; 
   132                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   133                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   134                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   135                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   136                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   137                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   138                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   139                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   140                           ; 
   141                           ; 
   142                           ; Code-generator required, PIC16F15345 Definitions
   143                           ; 
   144                           ; SFR Addresses
   145  0000                     	;# 
   146  0001                     	;# 
   147  0002                     	;# 
   148  0003                     	;# 
   149  0004                     	;# 
   150  0005                     	;# 
   151  0006                     	;# 
   152  0007                     	;# 
   153  0008                     	;# 
   154  0009                     	;# 
   155  000A                     	;# 
   156  000B                     	;# 
   157  000C                     	;# 
   158  000D                     	;# 
   159  000E                     	;# 
   160  0012                     	;# 
   161  0013                     	;# 
   162  0014                     	;# 
   163  0018                     	;# 
   164  0019                     	;# 
   165  001A                     	;# 
   166  009B                     	;# 
   167  009B                     	;# 
   168  009C                     	;# 
   169  009D                     	;# 
   170  009E                     	;# 
   171  009F                     	;# 
   172  0119                     	;# 
   173  0119                     	;# 
   174  0119                     	;# 
   175  011A                     	;# 
   176  011A                     	;# 
   177  011A                     	;# 
   178  011B                     	;# 
   179  011B                     	;# 
   180  011B                     	;# 
   181  011B                     	;# 
   182  011B                     	;# 
   183  011C                     	;# 
   184  011C                     	;# 
   185  011C                     	;# 
   186  011D                     	;# 
   187  011D                     	;# 
   188  011D                     	;# 
   189  011E                     	;# 
   190  011E                     	;# 
   191  011E                     	;# 
   192  011F                     	;# 
   193  011F                     	;# 
   194  011F                     	;# 
   195  011F                     	;# 
   196  011F                     	;# 
   197  018C                     	;# 
   198  018D                     	;# 
   199  018E                     	;# 
   200  018F                     	;# 
   201  0190                     	;# 
   202  0191                     	;# 
   203  0192                     	;# 
   204  020C                     	;# 
   205  020C                     	;# 
   206  020D                     	;# 
   207  020E                     	;# 
   208  020F                     	;# 
   209  020F                     	;# 
   210  0210                     	;# 
   211  0210                     	;# 
   212  0211                     	;# 
   213  0211                     	;# 
   214  028C                     	;# 
   215  028C                     	;# 
   216  028D                     	;# 
   217  028D                     	;# 
   218  028E                     	;# 
   219  028F                     	;# 
   220  0290                     	;# 
   221  0291                     	;# 
   222  030C                     	;# 
   223  030C                     	;# 
   224  030D                     	;# 
   225  030E                     	;# 
   226  030F                     	;# 
   227  0310                     	;# 
   228  0310                     	;# 
   229  0311                     	;# 
   230  0312                     	;# 
   231  0313                     	;# 
   232  0314                     	;# 
   233  0314                     	;# 
   234  0315                     	;# 
   235  0316                     	;# 
   236  0318                     	;# 
   237  0318                     	;# 
   238  0319                     	;# 
   239  031A                     	;# 
   240  031C                     	;# 
   241  031C                     	;# 
   242  031D                     	;# 
   243  031E                     	;# 
   244  038C                     	;# 
   245  038C                     	;# 
   246  038D                     	;# 
   247  038E                     	;# 
   248  058C                     	;# 
   249  058C                     	;# 
   250  058D                     	;# 
   251  058E                     	;# 
   252  058F                     	;# 
   253  058F                     	;# 
   254  0590                     	;# 
   255  0591                     	;# 
   256  0592                     	;# 
   257  0593                     	;# 
   258  059C                     	;# 
   259  059C                     	;# 
   260  059D                     	;# 
   261  059D                     	;# 
   262  059E                     	;# 
   263  059F                     	;# 
   264  060C                     	;# 
   265  060D                     	;# 
   266  060E                     	;# 
   267  060F                     	;# 
   268  0610                     	;# 
   269  0611                     	;# 
   270  0612                     	;# 
   271  0613                     	;# 
   272  0614                     	;# 
   273  070C                     	;# 
   274  070D                     	;# 
   275  070E                     	;# 
   276  070F                     	;# 
   277  0710                     	;# 
   278  0711                     	;# 
   279  0712                     	;# 
   280  0713                     	;# 
   281  0716                     	;# 
   282  0717                     	;# 
   283  0718                     	;# 
   284  0719                     	;# 
   285  071A                     	;# 
   286  071B                     	;# 
   287  071C                     	;# 
   288  071D                     	;# 
   289  0796                     	;# 
   290  0797                     	;# 
   291  0798                     	;# 
   292  0799                     	;# 
   293  079A                     	;# 
   294  079B                     	;# 
   295  080C                     	;# 
   296  080D                     	;# 
   297  080E                     	;# 
   298  080F                     	;# 
   299  0810                     	;# 
   300  0811                     	;# 
   301  0812                     	;# 
   302  0813                     	;# 
   303  0814                     	;# 
   304  081A                     	;# 
   305  081A                     	;# 
   306  081B                     	;# 
   307  081C                     	;# 
   308  081C                     	;# 
   309  081D                     	;# 
   310  081E                     	;# 
   311  081F                     	;# 
   312  088C                     	;# 
   313  088D                     	;# 
   314  088E                     	;# 
   315  088F                     	;# 
   316  0890                     	;# 
   317  0891                     	;# 
   318  0892                     	;# 
   319  0893                     	;# 
   320  0895                     	;# 
   321  0896                     	;# 
   322  090C                     	;# 
   323  090E                     	;# 
   324  090F                     	;# 
   325  091F                     	;# 
   326  098F                     	;# 
   327  098F                     	;# 
   328  0990                     	;# 
   329  0991                     	;# 
   330  0992                     	;# 
   331  0993                     	;# 
   332  0994                     	;# 
   333  0995                     	;# 
   334  0996                     	;# 
   335  0997                     	;# 
   336  0A19                     	;# 
   337  0A19                     	;# 
   338  0A1A                     	;# 
   339  0A1A                     	;# 
   340  0A1B                     	;# 
   341  0A1B                     	;# 
   342  0A1B                     	;# 
   343  0A1C                     	;# 
   344  0A1C                     	;# 
   345  0A1D                     	;# 
   346  0A1D                     	;# 
   347  0A1E                     	;# 
   348  0A1E                     	;# 
   349  0A1F                     	;# 
   350  0A1F                     	;# 
   351  0A1F                     	;# 
   352  1E0F                     	;# 
   353  1E10                     	;# 
   354  1E11                     	;# 
   355  1E12                     	;# 
   356  1E13                     	;# 
   357  1E14                     	;# 
   358  1E15                     	;# 
   359  1E16                     	;# 
   360  1E17                     	;# 
   361  1E18                     	;# 
   362  1E19                     	;# 
   363  1E1A                     	;# 
   364  1E1B                     	;# 
   365  1E1C                     	;# 
   366  1E1D                     	;# 
   367  1E1E                     	;# 
   368  1E1F                     	;# 
   369  1E20                     	;# 
   370  1E21                     	;# 
   371  1E22                     	;# 
   372  1E23                     	;# 
   373  1E24                     	;# 
   374  1E25                     	;# 
   375  1E26                     	;# 
   376  1E27                     	;# 
   377  1E28                     	;# 
   378  1E29                     	;# 
   379  1E2A                     	;# 
   380  1E2B                     	;# 
   381  1E2C                     	;# 
   382  1E2D                     	;# 
   383  1E2E                     	;# 
   384  1E2F                     	;# 
   385  1E30                     	;# 
   386  1E31                     	;# 
   387  1E32                     	;# 
   388  1E33                     	;# 
   389  1E34                     	;# 
   390  1E35                     	;# 
   391  1E36                     	;# 
   392  1E37                     	;# 
   393  1E8F                     	;# 
   394  1E90                     	;# 
   395  1E91                     	;# 
   396  1E92                     	;# 
   397  1E93                     	;# 
   398  1E9C                     	;# 
   399  1EA1                     	;# 
   400  1EA2                     	;# 
   401  1EB1                     	;# 
   402  1EBB                     	;# 
   403  1EBC                     	;# 
   404  1EBD                     	;# 
   405  1EBE                     	;# 
   406  1EC3                     	;# 
   407  1EC5                     	;# 
   408  1EC6                     	;# 
   409  1EC7                     	;# 
   410  1ECB                     	;# 
   411  1ECC                     	;# 
   412  1ECD                     	;# 
   413  1ECE                     	;# 
   414  1F10                     	;# 
   415  1F11                     	;# 
   416  1F12                     	;# 
   417  1F13                     	;# 
   418  1F14                     	;# 
   419  1F15                     	;# 
   420  1F1C                     	;# 
   421  1F1D                     	;# 
   422  1F1E                     	;# 
   423  1F1F                     	;# 
   424  1F20                     	;# 
   425  1F21                     	;# 
   426  1F22                     	;# 
   427  1F23                     	;# 
   428  1F24                     	;# 
   429  1F25                     	;# 
   430  1F26                     	;# 
   431  1F27                     	;# 
   432  1F38                     	;# 
   433  1F39                     	;# 
   434  1F3A                     	;# 
   435  1F3B                     	;# 
   436  1F3C                     	;# 
   437  1F3D                     	;# 
   438  1F3E                     	;# 
   439  1F3F                     	;# 
   440  1F43                     	;# 
   441  1F44                     	;# 
   442  1F45                     	;# 
   443  1F46                     	;# 
   444  1F47                     	;# 
   445  1F48                     	;# 
   446  1F49                     	;# 
   447  1F4A                     	;# 
   448  1F4E                     	;# 
   449  1F4F                     	;# 
   450  1F50                     	;# 
   451  1F51                     	;# 
   452  1F52                     	;# 
   453  1F53                     	;# 
   454  1F54                     	;# 
   455  1F55                     	;# 
   456  1FE4                     	;# 
   457  1FE5                     	;# 
   458  1FE6                     	;# 
   459  1FE7                     	;# 
   460  1FE8                     	;# 
   461  1FE8                     	;# 
   462  1FE9                     	;# 
   463  1FEA                     	;# 
   464  1FEA                     	;# 
   465  1FEB                     	;# 
   466  1FED                     	;# 
   467  1FEE                     	;# 
   468  1FEF                     	;# 
   469  0000                     	;# 
   470  0001                     	;# 
   471  0002                     	;# 
   472  0003                     	;# 
   473  0004                     	;# 
   474  0005                     	;# 
   475  0006                     	;# 
   476  0007                     	;# 
   477  0008                     	;# 
   478  0009                     	;# 
   479  000A                     	;# 
   480  000B                     	;# 
   481  000C                     	;# 
   482  000D                     	;# 
   483  000E                     	;# 
   484  0012                     	;# 
   485  0013                     	;# 
   486  0014                     	;# 
   487  0018                     	;# 
   488  0019                     	;# 
   489  001A                     	;# 
   490  009B                     	;# 
   491  009B                     	;# 
   492  009C                     	;# 
   493  009D                     	;# 
   494  009E                     	;# 
   495  009F                     	;# 
   496  0119                     	;# 
   497  0119                     	;# 
   498  0119                     	;# 
   499  011A                     	;# 
   500  011A                     	;# 
   501  011A                     	;# 
   502  011B                     	;# 
   503  011B                     	;# 
   504  011B                     	;# 
   505  011B                     	;# 
   506  011B                     	;# 
   507  011C                     	;# 
   508  011C                     	;# 
   509  011C                     	;# 
   510  011D                     	;# 
   511  011D                     	;# 
   512  011D                     	;# 
   513  011E                     	;# 
   514  011E                     	;# 
   515  011E                     	;# 
   516  011F                     	;# 
   517  011F                     	;# 
   518  011F                     	;# 
   519  011F                     	;# 
   520  011F                     	;# 
   521  018C                     	;# 
   522  018D                     	;# 
   523  018E                     	;# 
   524  018F                     	;# 
   525  0190                     	;# 
   526  0191                     	;# 
   527  0192                     	;# 
   528  020C                     	;# 
   529  020C                     	;# 
   530  020D                     	;# 
   531  020E                     	;# 
   532  020F                     	;# 
   533  020F                     	;# 
   534  0210                     	;# 
   535  0210                     	;# 
   536  0211                     	;# 
   537  0211                     	;# 
   538  028C                     	;# 
   539  028C                     	;# 
   540  028D                     	;# 
   541  028D                     	;# 
   542  028E                     	;# 
   543  028F                     	;# 
   544  0290                     	;# 
   545  0291                     	;# 
   546  030C                     	;# 
   547  030C                     	;# 
   548  030D                     	;# 
   549  030E                     	;# 
   550  030F                     	;# 
   551  0310                     	;# 
   552  0310                     	;# 
   553  0311                     	;# 
   554  0312                     	;# 
   555  0313                     	;# 
   556  0314                     	;# 
   557  0314                     	;# 
   558  0315                     	;# 
   559  0316                     	;# 
   560  0318                     	;# 
   561  0318                     	;# 
   562  0319                     	;# 
   563  031A                     	;# 
   564  031C                     	;# 
   565  031C                     	;# 
   566  031D                     	;# 
   567  031E                     	;# 
   568  038C                     	;# 
   569  038C                     	;# 
   570  038D                     	;# 
   571  038E                     	;# 
   572  058C                     	;# 
   573  058C                     	;# 
   574  058D                     	;# 
   575  058E                     	;# 
   576  058F                     	;# 
   577  058F                     	;# 
   578  0590                     	;# 
   579  0591                     	;# 
   580  0592                     	;# 
   581  0593                     	;# 
   582  059C                     	;# 
   583  059C                     	;# 
   584  059D                     	;# 
   585  059D                     	;# 
   586  059E                     	;# 
   587  059F                     	;# 
   588  060C                     	;# 
   589  060D                     	;# 
   590  060E                     	;# 
   591  060F                     	;# 
   592  0610                     	;# 
   593  0611                     	;# 
   594  0612                     	;# 
   595  0613                     	;# 
   596  0614                     	;# 
   597  070C                     	;# 
   598  070D                     	;# 
   599  070E                     	;# 
   600  070F                     	;# 
   601  0710                     	;# 
   602  0711                     	;# 
   603  0712                     	;# 
   604  0713                     	;# 
   605  0716                     	;# 
   606  0717                     	;# 
   607  0718                     	;# 
   608  0719                     	;# 
   609  071A                     	;# 
   610  071B                     	;# 
   611  071C                     	;# 
   612  071D                     	;# 
   613  0796                     	;# 
   614  0797                     	;# 
   615  0798                     	;# 
   616  0799                     	;# 
   617  079A                     	;# 
   618  079B                     	;# 
   619  080C                     	;# 
   620  080D                     	;# 
   621  080E                     	;# 
   622  080F                     	;# 
   623  0810                     	;# 
   624  0811                     	;# 
   625  0812                     	;# 
   626  0813                     	;# 
   627  0814                     	;# 
   628  081A                     	;# 
   629  081A                     	;# 
   630  081B                     	;# 
   631  081C                     	;# 
   632  081C                     	;# 
   633  081D                     	;# 
   634  081E                     	;# 
   635  081F                     	;# 
   636  088C                     	;# 
   637  088D                     	;# 
   638  088E                     	;# 
   639  088F                     	;# 
   640  0890                     	;# 
   641  0891                     	;# 
   642  0892                     	;# 
   643  0893                     	;# 
   644  0895                     	;# 
   645  0896                     	;# 
   646  090C                     	;# 
   647  090E                     	;# 
   648  090F                     	;# 
   649  091F                     	;# 
   650  098F                     	;# 
   651  098F                     	;# 
   652  0990                     	;# 
   653  0991                     	;# 
   654  0992                     	;# 
   655  0993                     	;# 
   656  0994                     	;# 
   657  0995                     	;# 
   658  0996                     	;# 
   659  0997                     	;# 
   660  0A19                     	;# 
   661  0A19                     	;# 
   662  0A1A                     	;# 
   663  0A1A                     	;# 
   664  0A1B                     	;# 
   665  0A1B                     	;# 
   666  0A1B                     	;# 
   667  0A1C                     	;# 
   668  0A1C                     	;# 
   669  0A1D                     	;# 
   670  0A1D                     	;# 
   671  0A1E                     	;# 
   672  0A1E                     	;# 
   673  0A1F                     	;# 
   674  0A1F                     	;# 
   675  0A1F                     	;# 
   676  1E0F                     	;# 
   677  1E10                     	;# 
   678  1E11                     	;# 
   679  1E12                     	;# 
   680  1E13                     	;# 
   681  1E14                     	;# 
   682  1E15                     	;# 
   683  1E16                     	;# 
   684  1E17                     	;# 
   685  1E18                     	;# 
   686  1E19                     	;# 
   687  1E1A                     	;# 
   688  1E1B                     	;# 
   689  1E1C                     	;# 
   690  1E1D                     	;# 
   691  1E1E                     	;# 
   692  1E1F                     	;# 
   693  1E20                     	;# 
   694  1E21                     	;# 
   695  1E22                     	;# 
   696  1E23                     	;# 
   697  1E24                     	;# 
   698  1E25                     	;# 
   699  1E26                     	;# 
   700  1E27                     	;# 
   701  1E28                     	;# 
   702  1E29                     	;# 
   703  1E2A                     	;# 
   704  1E2B                     	;# 
   705  1E2C                     	;# 
   706  1E2D                     	;# 
   707  1E2E                     	;# 
   708  1E2F                     	;# 
   709  1E30                     	;# 
   710  1E31                     	;# 
   711  1E32                     	;# 
   712  1E33                     	;# 
   713  1E34                     	;# 
   714  1E35                     	;# 
   715  1E36                     	;# 
   716  1E37                     	;# 
   717  1E8F                     	;# 
   718  1E90                     	;# 
   719  1E91                     	;# 
   720  1E92                     	;# 
   721  1E93                     	;# 
   722  1E9C                     	;# 
   723  1EA1                     	;# 
   724  1EA2                     	;# 
   725  1EB1                     	;# 
   726  1EBB                     	;# 
   727  1EBC                     	;# 
   728  1EBD                     	;# 
   729  1EBE                     	;# 
   730  1EC3                     	;# 
   731  1EC5                     	;# 
   732  1EC6                     	;# 
   733  1EC7                     	;# 
   734  1ECB                     	;# 
   735  1ECC                     	;# 
   736  1ECD                     	;# 
   737  1ECE                     	;# 
   738  1F10                     	;# 
   739  1F11                     	;# 
   740  1F12                     	;# 
   741  1F13                     	;# 
   742  1F14                     	;# 
   743  1F15                     	;# 
   744  1F1C                     	;# 
   745  1F1D                     	;# 
   746  1F1E                     	;# 
   747  1F1F                     	;# 
   748  1F20                     	;# 
   749  1F21                     	;# 
   750  1F22                     	;# 
   751  1F23                     	;# 
   752  1F24                     	;# 
   753  1F25                     	;# 
   754  1F26                     	;# 
   755  1F27                     	;# 
   756  1F38                     	;# 
   757  1F39                     	;# 
   758  1F3A                     	;# 
   759  1F3B                     	;# 
   760  1F3C                     	;# 
   761  1F3D                     	;# 
   762  1F3E                     	;# 
   763  1F3F                     	;# 
   764  1F43                     	;# 
   765  1F44                     	;# 
   766  1F45                     	;# 
   767  1F46                     	;# 
   768  1F47                     	;# 
   769  1F48                     	;# 
   770  1F49                     	;# 
   771  1F4A                     	;# 
   772  1F4E                     	;# 
   773  1F4F                     	;# 
   774  1F50                     	;# 
   775  1F51                     	;# 
   776  1F52                     	;# 
   777  1F53                     	;# 
   778  1F54                     	;# 
   779  1F55                     	;# 
   780  1FE4                     	;# 
   781  1FE5                     	;# 
   782  1FE6                     	;# 
   783  1FE7                     	;# 
   784  1FE8                     	;# 
   785  1FE8                     	;# 
   786  1FE9                     	;# 
   787  1FEA                     	;# 
   788  1FEA                     	;# 
   789  1FEB                     	;# 
   790  1FED                     	;# 
   791  1FEE                     	;# 
   792  1FEF                     	;# 
   793  0000                     	;# 
   794  0001                     	;# 
   795  0002                     	;# 
   796  0003                     	;# 
   797  0004                     	;# 
   798  0005                     	;# 
   799  0006                     	;# 
   800  0007                     	;# 
   801  0008                     	;# 
   802  0009                     	;# 
   803  000A                     	;# 
   804  000B                     	;# 
   805  000C                     	;# 
   806  000D                     	;# 
   807  000E                     	;# 
   808  0012                     	;# 
   809  0013                     	;# 
   810  0014                     	;# 
   811  0018                     	;# 
   812  0019                     	;# 
   813  001A                     	;# 
   814  009B                     	;# 
   815  009B                     	;# 
   816  009C                     	;# 
   817  009D                     	;# 
   818  009E                     	;# 
   819  009F                     	;# 
   820  0119                     	;# 
   821  0119                     	;# 
   822  0119                     	;# 
   823  011A                     	;# 
   824  011A                     	;# 
   825  011A                     	;# 
   826  011B                     	;# 
   827  011B                     	;# 
   828  011B                     	;# 
   829  011B                     	;# 
   830  011B                     	;# 
   831  011C                     	;# 
   832  011C                     	;# 
   833  011C                     	;# 
   834  011D                     	;# 
   835  011D                     	;# 
   836  011D                     	;# 
   837  011E                     	;# 
   838  011E                     	;# 
   839  011E                     	;# 
   840  011F                     	;# 
   841  011F                     	;# 
   842  011F                     	;# 
   843  011F                     	;# 
   844  011F                     	;# 
   845  018C                     	;# 
   846  018D                     	;# 
   847  018E                     	;# 
   848  018F                     	;# 
   849  0190                     	;# 
   850  0191                     	;# 
   851  0192                     	;# 
   852  020C                     	;# 
   853  020C                     	;# 
   854  020D                     	;# 
   855  020E                     	;# 
   856  020F                     	;# 
   857  020F                     	;# 
   858  0210                     	;# 
   859  0210                     	;# 
   860  0211                     	;# 
   861  0211                     	;# 
   862  028C                     	;# 
   863  028C                     	;# 
   864  028D                     	;# 
   865  028D                     	;# 
   866  028E                     	;# 
   867  028F                     	;# 
   868  0290                     	;# 
   869  0291                     	;# 
   870  030C                     	;# 
   871  030C                     	;# 
   872  030D                     	;# 
   873  030E                     	;# 
   874  030F                     	;# 
   875  0310                     	;# 
   876  0310                     	;# 
   877  0311                     	;# 
   878  0312                     	;# 
   879  0313                     	;# 
   880  0314                     	;# 
   881  0314                     	;# 
   882  0315                     	;# 
   883  0316                     	;# 
   884  0318                     	;# 
   885  0318                     	;# 
   886  0319                     	;# 
   887  031A                     	;# 
   888  031C                     	;# 
   889  031C                     	;# 
   890  031D                     	;# 
   891  031E                     	;# 
   892  038C                     	;# 
   893  038C                     	;# 
   894  038D                     	;# 
   895  038E                     	;# 
   896  058C                     	;# 
   897  058C                     	;# 
   898  058D                     	;# 
   899  058E                     	;# 
   900  058F                     	;# 
   901  058F                     	;# 
   902  0590                     	;# 
   903  0591                     	;# 
   904  0592                     	;# 
   905  0593                     	;# 
   906  059C                     	;# 
   907  059C                     	;# 
   908  059D                     	;# 
   909  059D                     	;# 
   910  059E                     	;# 
   911  059F                     	;# 
   912  060C                     	;# 
   913  060D                     	;# 
   914  060E                     	;# 
   915  060F                     	;# 
   916  0610                     	;# 
   917  0611                     	;# 
   918  0612                     	;# 
   919  0613                     	;# 
   920  0614                     	;# 
   921  070C                     	;# 
   922  070D                     	;# 
   923  070E                     	;# 
   924  070F                     	;# 
   925  0710                     	;# 
   926  0711                     	;# 
   927  0712                     	;# 
   928  0713                     	;# 
   929  0716                     	;# 
   930  0717                     	;# 
   931  0718                     	;# 
   932  0719                     	;# 
   933  071A                     	;# 
   934  071B                     	;# 
   935  071C                     	;# 
   936  071D                     	;# 
   937  0796                     	;# 
   938  0797                     	;# 
   939  0798                     	;# 
   940  0799                     	;# 
   941  079A                     	;# 
   942  079B                     	;# 
   943  080C                     	;# 
   944  080D                     	;# 
   945  080E                     	;# 
   946  080F                     	;# 
   947  0810                     	;# 
   948  0811                     	;# 
   949  0812                     	;# 
   950  0813                     	;# 
   951  0814                     	;# 
   952  081A                     	;# 
   953  081A                     	;# 
   954  081B                     	;# 
   955  081C                     	;# 
   956  081C                     	;# 
   957  081D                     	;# 
   958  081E                     	;# 
   959  081F                     	;# 
   960  088C                     	;# 
   961  088D                     	;# 
   962  088E                     	;# 
   963  088F                     	;# 
   964  0890                     	;# 
   965  0891                     	;# 
   966  0892                     	;# 
   967  0893                     	;# 
   968  0895                     	;# 
   969  0896                     	;# 
   970  090C                     	;# 
   971  090E                     	;# 
   972  090F                     	;# 
   973  091F                     	;# 
   974  098F                     	;# 
   975  098F                     	;# 
   976  0990                     	;# 
   977  0991                     	;# 
   978  0992                     	;# 
   979  0993                     	;# 
   980  0994                     	;# 
   981  0995                     	;# 
   982  0996                     	;# 
   983  0997                     	;# 
   984  0A19                     	;# 
   985  0A19                     	;# 
   986  0A1A                     	;# 
   987  0A1A                     	;# 
   988  0A1B                     	;# 
   989  0A1B                     	;# 
   990  0A1B                     	;# 
   991  0A1C                     	;# 
   992  0A1C                     	;# 
   993  0A1D                     	;# 
   994  0A1D                     	;# 
   995  0A1E                     	;# 
   996  0A1E                     	;# 
   997  0A1F                     	;# 
   998  0A1F                     	;# 
   999  0A1F                     	;# 
  1000  1E0F                     	;# 
  1001  1E10                     	;# 
  1002  1E11                     	;# 
  1003  1E12                     	;# 
  1004  1E13                     	;# 
  1005  1E14                     	;# 
  1006  1E15                     	;# 
  1007  1E16                     	;# 
  1008  1E17                     	;# 
  1009  1E18                     	;# 
  1010  1E19                     	;# 
  1011  1E1A                     	;# 
  1012  1E1B                     	;# 
  1013  1E1C                     	;# 
  1014  1E1D                     	;# 
  1015  1E1E                     	;# 
  1016  1E1F                     	;# 
  1017  1E20                     	;# 
  1018  1E21                     	;# 
  1019  1E22                     	;# 
  1020  1E23                     	;# 
  1021  1E24                     	;# 
  1022  1E25                     	;# 
  1023  1E26                     	;# 
  1024  1E27                     	;# 
  1025  1E28                     	;# 
  1026  1E29                     	;# 
  1027  1E2A                     	;# 
  1028  1E2B                     	;# 
  1029  1E2C                     	;# 
  1030  1E2D                     	;# 
  1031  1E2E                     	;# 
  1032  1E2F                     	;# 
  1033  1E30                     	;# 
  1034  1E31                     	;# 
  1035  1E32                     	;# 
  1036  1E33                     	;# 
  1037  1E34                     	;# 
  1038  1E35                     	;# 
  1039  1E36                     	;# 
  1040  1E37                     	;# 
  1041  1E8F                     	;# 
  1042  1E90                     	;# 
  1043  1E91                     	;# 
  1044  1E92                     	;# 
  1045  1E93                     	;# 
  1046  1E9C                     	;# 
  1047  1EA1                     	;# 
  1048  1EA2                     	;# 
  1049  1EB1                     	;# 
  1050  1EBB                     	;# 
  1051  1EBC                     	;# 
  1052  1EBD                     	;# 
  1053  1EBE                     	;# 
  1054  1EC3                     	;# 
  1055  1EC5                     	;# 
  1056  1EC6                     	;# 
  1057  1EC7                     	;# 
  1058  1ECB                     	;# 
  1059  1ECC                     	;# 
  1060  1ECD                     	;# 
  1061  1ECE                     	;# 
  1062  1F10                     	;# 
  1063  1F11                     	;# 
  1064  1F12                     	;# 
  1065  1F13                     	;# 
  1066  1F14                     	;# 
  1067  1F15                     	;# 
  1068  1F1C                     	;# 
  1069  1F1D                     	;# 
  1070  1F1E                     	;# 
  1071  1F1F                     	;# 
  1072  1F20                     	;# 
  1073  1F21                     	;# 
  1074  1F22                     	;# 
  1075  1F23                     	;# 
  1076  1F24                     	;# 
  1077  1F25                     	;# 
  1078  1F26                     	;# 
  1079  1F27                     	;# 
  1080  1F38                     	;# 
  1081  1F39                     	;# 
  1082  1F3A                     	;# 
  1083  1F3B                     	;# 
  1084  1F3C                     	;# 
  1085  1F3D                     	;# 
  1086  1F3E                     	;# 
  1087  1F3F                     	;# 
  1088  1F43                     	;# 
  1089  1F44                     	;# 
  1090  1F45                     	;# 
  1091  1F46                     	;# 
  1092  1F47                     	;# 
  1093  1F48                     	;# 
  1094  1F49                     	;# 
  1095  1F4A                     	;# 
  1096  1F4E                     	;# 
  1097  1F4F                     	;# 
  1098  1F50                     	;# 
  1099  1F51                     	;# 
  1100  1F52                     	;# 
  1101  1F53                     	;# 
  1102  1F54                     	;# 
  1103  1F55                     	;# 
  1104  1FE4                     	;# 
  1105  1FE5                     	;# 
  1106  1FE6                     	;# 
  1107  1FE7                     	;# 
  1108  1FE8                     	;# 
  1109  1FE8                     	;# 
  1110  1FE9                     	;# 
  1111  1FEA                     	;# 
  1112  1FEA                     	;# 
  1113  1FEB                     	;# 
  1114  1FED                     	;# 
  1115  1FEE                     	;# 
  1116  1FEF                     	;# 
  1117  0000                     	;# 
  1118  0001                     	;# 
  1119  0002                     	;# 
  1120  0003                     	;# 
  1121  0004                     	;# 
  1122  0005                     	;# 
  1123  0006                     	;# 
  1124  0007                     	;# 
  1125  0008                     	;# 
  1126  0009                     	;# 
  1127  000A                     	;# 
  1128  000B                     	;# 
  1129  000C                     	;# 
  1130  000D                     	;# 
  1131  000E                     	;# 
  1132  0012                     	;# 
  1133  0013                     	;# 
  1134  0014                     	;# 
  1135  0018                     	;# 
  1136  0019                     	;# 
  1137  001A                     	;# 
  1138  009B                     	;# 
  1139  009B                     	;# 
  1140  009C                     	;# 
  1141  009D                     	;# 
  1142  009E                     	;# 
  1143  009F                     	;# 
  1144  0119                     	;# 
  1145  0119                     	;# 
  1146  0119                     	;# 
  1147  011A                     	;# 
  1148  011A                     	;# 
  1149  011A                     	;# 
  1150  011B                     	;# 
  1151  011B                     	;# 
  1152  011B                     	;# 
  1153  011B                     	;# 
  1154  011B                     	;# 
  1155  011C                     	;# 
  1156  011C                     	;# 
  1157  011C                     	;# 
  1158  011D                     	;# 
  1159  011D                     	;# 
  1160  011D                     	;# 
  1161  011E                     	;# 
  1162  011E                     	;# 
  1163  011E                     	;# 
  1164  011F                     	;# 
  1165  011F                     	;# 
  1166  011F                     	;# 
  1167  011F                     	;# 
  1168  011F                     	;# 
  1169  018C                     	;# 
  1170  018D                     	;# 
  1171  018E                     	;# 
  1172  018F                     	;# 
  1173  0190                     	;# 
  1174  0191                     	;# 
  1175  0192                     	;# 
  1176  020C                     	;# 
  1177  020C                     	;# 
  1178  020D                     	;# 
  1179  020E                     	;# 
  1180  020F                     	;# 
  1181  020F                     	;# 
  1182  0210                     	;# 
  1183  0210                     	;# 
  1184  0211                     	;# 
  1185  0211                     	;# 
  1186  028C                     	;# 
  1187  028C                     	;# 
  1188  028D                     	;# 
  1189  028D                     	;# 
  1190  028E                     	;# 
  1191  028F                     	;# 
  1192  0290                     	;# 
  1193  0291                     	;# 
  1194  030C                     	;# 
  1195  030C                     	;# 
  1196  030D                     	;# 
  1197  030E                     	;# 
  1198  030F                     	;# 
  1199  0310                     	;# 
  1200  0310                     	;# 
  1201  0311                     	;# 
  1202  0312                     	;# 
  1203  0313                     	;# 
  1204  0314                     	;# 
  1205  0314                     	;# 
  1206  0315                     	;# 
  1207  0316                     	;# 
  1208  0318                     	;# 
  1209  0318                     	;# 
  1210  0319                     	;# 
  1211  031A                     	;# 
  1212  031C                     	;# 
  1213  031C                     	;# 
  1214  031D                     	;# 
  1215  031E                     	;# 
  1216  038C                     	;# 
  1217  038C                     	;# 
  1218  038D                     	;# 
  1219  038E                     	;# 
  1220  058C                     	;# 
  1221  058C                     	;# 
  1222  058D                     	;# 
  1223  058E                     	;# 
  1224  058F                     	;# 
  1225  058F                     	;# 
  1226  0590                     	;# 
  1227  0591                     	;# 
  1228  0592                     	;# 
  1229  0593                     	;# 
  1230  059C                     	;# 
  1231  059C                     	;# 
  1232  059D                     	;# 
  1233  059D                     	;# 
  1234  059E                     	;# 
  1235  059F                     	;# 
  1236  060C                     	;# 
  1237  060D                     	;# 
  1238  060E                     	;# 
  1239  060F                     	;# 
  1240  0610                     	;# 
  1241  0611                     	;# 
  1242  0612                     	;# 
  1243  0613                     	;# 
  1244  0614                     	;# 
  1245  070C                     	;# 
  1246  070D                     	;# 
  1247  070E                     	;# 
  1248  070F                     	;# 
  1249  0710                     	;# 
  1250  0711                     	;# 
  1251  0712                     	;# 
  1252  0713                     	;# 
  1253  0716                     	;# 
  1254  0717                     	;# 
  1255  0718                     	;# 
  1256  0719                     	;# 
  1257  071A                     	;# 
  1258  071B                     	;# 
  1259  071C                     	;# 
  1260  071D                     	;# 
  1261  0796                     	;# 
  1262  0797                     	;# 
  1263  0798                     	;# 
  1264  0799                     	;# 
  1265  079A                     	;# 
  1266  079B                     	;# 
  1267  080C                     	;# 
  1268  080D                     	;# 
  1269  080E                     	;# 
  1270  080F                     	;# 
  1271  0810                     	;# 
  1272  0811                     	;# 
  1273  0812                     	;# 
  1274  0813                     	;# 
  1275  0814                     	;# 
  1276  081A                     	;# 
  1277  081A                     	;# 
  1278  081B                     	;# 
  1279  081C                     	;# 
  1280  081C                     	;# 
  1281  081D                     	;# 
  1282  081E                     	;# 
  1283  081F                     	;# 
  1284  088C                     	;# 
  1285  088D                     	;# 
  1286  088E                     	;# 
  1287  088F                     	;# 
  1288  0890                     	;# 
  1289  0891                     	;# 
  1290  0892                     	;# 
  1291  0893                     	;# 
  1292  0895                     	;# 
  1293  0896                     	;# 
  1294  090C                     	;# 
  1295  090E                     	;# 
  1296  090F                     	;# 
  1297  091F                     	;# 
  1298  098F                     	;# 
  1299  098F                     	;# 
  1300  0990                     	;# 
  1301  0991                     	;# 
  1302  0992                     	;# 
  1303  0993                     	;# 
  1304  0994                     	;# 
  1305  0995                     	;# 
  1306  0996                     	;# 
  1307  0997                     	;# 
  1308  0A19                     	;# 
  1309  0A19                     	;# 
  1310  0A1A                     	;# 
  1311  0A1A                     	;# 
  1312  0A1B                     	;# 
  1313  0A1B                     	;# 
  1314  0A1B                     	;# 
  1315  0A1C                     	;# 
  1316  0A1C                     	;# 
  1317  0A1D                     	;# 
  1318  0A1D                     	;# 
  1319  0A1E                     	;# 
  1320  0A1E                     	;# 
  1321  0A1F                     	;# 
  1322  0A1F                     	;# 
  1323  0A1F                     	;# 
  1324  1E0F                     	;# 
  1325  1E10                     	;# 
  1326  1E11                     	;# 
  1327  1E12                     	;# 
  1328  1E13                     	;# 
  1329  1E14                     	;# 
  1330  1E15                     	;# 
  1331  1E16                     	;# 
  1332  1E17                     	;# 
  1333  1E18                     	;# 
  1334  1E19                     	;# 
  1335  1E1A                     	;# 
  1336  1E1B                     	;# 
  1337  1E1C                     	;# 
  1338  1E1D                     	;# 
  1339  1E1E                     	;# 
  1340  1E1F                     	;# 
  1341  1E20                     	;# 
  1342  1E21                     	;# 
  1343  1E22                     	;# 
  1344  1E23                     	;# 
  1345  1E24                     	;# 
  1346  1E25                     	;# 
  1347  1E26                     	;# 
  1348  1E27                     	;# 
  1349  1E28                     	;# 
  1350  1E29                     	;# 
  1351  1E2A                     	;# 
  1352  1E2B                     	;# 
  1353  1E2C                     	;# 
  1354  1E2D                     	;# 
  1355  1E2E                     	;# 
  1356  1E2F                     	;# 
  1357  1E30                     	;# 
  1358  1E31                     	;# 
  1359  1E32                     	;# 
  1360  1E33                     	;# 
  1361  1E34                     	;# 
  1362  1E35                     	;# 
  1363  1E36                     	;# 
  1364  1E37                     	;# 
  1365  1E8F                     	;# 
  1366  1E90                     	;# 
  1367  1E91                     	;# 
  1368  1E92                     	;# 
  1369  1E93                     	;# 
  1370  1E9C                     	;# 
  1371  1EA1                     	;# 
  1372  1EA2                     	;# 
  1373  1EB1                     	;# 
  1374  1EBB                     	;# 
  1375  1EBC                     	;# 
  1376  1EBD                     	;# 
  1377  1EBE                     	;# 
  1378  1EC3                     	;# 
  1379  1EC5                     	;# 
  1380  1EC6                     	;# 
  1381  1EC7                     	;# 
  1382  1ECB                     	;# 
  1383  1ECC                     	;# 
  1384  1ECD                     	;# 
  1385  1ECE                     	;# 
  1386  1F10                     	;# 
  1387  1F11                     	;# 
  1388  1F12                     	;# 
  1389  1F13                     	;# 
  1390  1F14                     	;# 
  1391  1F15                     	;# 
  1392  1F1C                     	;# 
  1393  1F1D                     	;# 
  1394  1F1E                     	;# 
  1395  1F1F                     	;# 
  1396  1F20                     	;# 
  1397  1F21                     	;# 
  1398  1F22                     	;# 
  1399  1F23                     	;# 
  1400  1F24                     	;# 
  1401  1F25                     	;# 
  1402  1F26                     	;# 
  1403  1F27                     	;# 
  1404  1F38                     	;# 
  1405  1F39                     	;# 
  1406  1F3A                     	;# 
  1407  1F3B                     	;# 
  1408  1F3C                     	;# 
  1409  1F3D                     	;# 
  1410  1F3E                     	;# 
  1411  1F3F                     	;# 
  1412  1F43                     	;# 
  1413  1F44                     	;# 
  1414  1F45                     	;# 
  1415  1F46                     	;# 
  1416  1F47                     	;# 
  1417  1F48                     	;# 
  1418  1F49                     	;# 
  1419  1F4A                     	;# 
  1420  1F4E                     	;# 
  1421  1F4F                     	;# 
  1422  1F50                     	;# 
  1423  1F51                     	;# 
  1424  1F52                     	;# 
  1425  1F53                     	;# 
  1426  1F54                     	;# 
  1427  1F55                     	;# 
  1428  1FE4                     	;# 
  1429  1FE5                     	;# 
  1430  1FE6                     	;# 
  1431  1FE7                     	;# 
  1432  1FE8                     	;# 
  1433  1FE8                     	;# 
  1434  1FE9                     	;# 
  1435  1FEA                     	;# 
  1436  1FEA                     	;# 
  1437  1FEB                     	;# 
  1438  1FED                     	;# 
  1439  1FEE                     	;# 
  1440  1FEF                     	;# 
  1441  0000                     	;# 
  1442  0001                     	;# 
  1443  0002                     	;# 
  1444  0003                     	;# 
  1445  0004                     	;# 
  1446  0005                     	;# 
  1447  0006                     	;# 
  1448  0007                     	;# 
  1449  0008                     	;# 
  1450  0009                     	;# 
  1451  000A                     	;# 
  1452  000B                     	;# 
  1453  000C                     	;# 
  1454  000D                     	;# 
  1455  000E                     	;# 
  1456  0012                     	;# 
  1457  0013                     	;# 
  1458  0014                     	;# 
  1459  0018                     	;# 
  1460  0019                     	;# 
  1461  001A                     	;# 
  1462  009B                     	;# 
  1463  009B                     	;# 
  1464  009C                     	;# 
  1465  009D                     	;# 
  1466  009E                     	;# 
  1467  009F                     	;# 
  1468  0119                     	;# 
  1469  0119                     	;# 
  1470  0119                     	;# 
  1471  011A                     	;# 
  1472  011A                     	;# 
  1473  011A                     	;# 
  1474  011B                     	;# 
  1475  011B                     	;# 
  1476  011B                     	;# 
  1477  011B                     	;# 
  1478  011B                     	;# 
  1479  011C                     	;# 
  1480  011C                     	;# 
  1481  011C                     	;# 
  1482  011D                     	;# 
  1483  011D                     	;# 
  1484  011D                     	;# 
  1485  011E                     	;# 
  1486  011E                     	;# 
  1487  011E                     	;# 
  1488  011F                     	;# 
  1489  011F                     	;# 
  1490  011F                     	;# 
  1491  011F                     	;# 
  1492  011F                     	;# 
  1493  018C                     	;# 
  1494  018D                     	;# 
  1495  018E                     	;# 
  1496  018F                     	;# 
  1497  0190                     	;# 
  1498  0191                     	;# 
  1499  0192                     	;# 
  1500  020C                     	;# 
  1501  020C                     	;# 
  1502  020D                     	;# 
  1503  020E                     	;# 
  1504  020F                     	;# 
  1505  020F                     	;# 
  1506  0210                     	;# 
  1507  0210                     	;# 
  1508  0211                     	;# 
  1509  0211                     	;# 
  1510  028C                     	;# 
  1511  028C                     	;# 
  1512  028D                     	;# 
  1513  028D                     	;# 
  1514  028E                     	;# 
  1515  028F                     	;# 
  1516  0290                     	;# 
  1517  0291                     	;# 
  1518  030C                     	;# 
  1519  030C                     	;# 
  1520  030D                     	;# 
  1521  030E                     	;# 
  1522  030F                     	;# 
  1523  0310                     	;# 
  1524  0310                     	;# 
  1525  0311                     	;# 
  1526  0312                     	;# 
  1527  0313                     	;# 
  1528  0314                     	;# 
  1529  0314                     	;# 
  1530  0315                     	;# 
  1531  0316                     	;# 
  1532  0318                     	;# 
  1533  0318                     	;# 
  1534  0319                     	;# 
  1535  031A                     	;# 
  1536  031C                     	;# 
  1537  031C                     	;# 
  1538  031D                     	;# 
  1539  031E                     	;# 
  1540  038C                     	;# 
  1541  038C                     	;# 
  1542  038D                     	;# 
  1543  038E                     	;# 
  1544  058C                     	;# 
  1545  058C                     	;# 
  1546  058D                     	;# 
  1547  058E                     	;# 
  1548  058F                     	;# 
  1549  058F                     	;# 
  1550  0590                     	;# 
  1551  0591                     	;# 
  1552  0592                     	;# 
  1553  0593                     	;# 
  1554  059C                     	;# 
  1555  059C                     	;# 
  1556  059D                     	;# 
  1557  059D                     	;# 
  1558  059E                     	;# 
  1559  059F                     	;# 
  1560  060C                     	;# 
  1561  060D                     	;# 
  1562  060E                     	;# 
  1563  060F                     	;# 
  1564  0610                     	;# 
  1565  0611                     	;# 
  1566  0612                     	;# 
  1567  0613                     	;# 
  1568  0614                     	;# 
  1569  070C                     	;# 
  1570  070D                     	;# 
  1571  070E                     	;# 
  1572  070F                     	;# 
  1573  0710                     	;# 
  1574  0711                     	;# 
  1575  0712                     	;# 
  1576  0713                     	;# 
  1577  0716                     	;# 
  1578  0717                     	;# 
  1579  0718                     	;# 
  1580  0719                     	;# 
  1581  071A                     	;# 
  1582  071B                     	;# 
  1583  071C                     	;# 
  1584  071D                     	;# 
  1585  0796                     	;# 
  1586  0797                     	;# 
  1587  0798                     	;# 
  1588  0799                     	;# 
  1589  079A                     	;# 
  1590  079B                     	;# 
  1591  080C                     	;# 
  1592  080D                     	;# 
  1593  080E                     	;# 
  1594  080F                     	;# 
  1595  0810                     	;# 
  1596  0811                     	;# 
  1597  0812                     	;# 
  1598  0813                     	;# 
  1599  0814                     	;# 
  1600  081A                     	;# 
  1601  081A                     	;# 
  1602  081B                     	;# 
  1603  081C                     	;# 
  1604  081C                     	;# 
  1605  081D                     	;# 
  1606  081E                     	;# 
  1607  081F                     	;# 
  1608  088C                     	;# 
  1609  088D                     	;# 
  1610  088E                     	;# 
  1611  088F                     	;# 
  1612  0890                     	;# 
  1613  0891                     	;# 
  1614  0892                     	;# 
  1615  0893                     	;# 
  1616  0895                     	;# 
  1617  0896                     	;# 
  1618  090C                     	;# 
  1619  090E                     	;# 
  1620  090F                     	;# 
  1621  091F                     	;# 
  1622  098F                     	;# 
  1623  098F                     	;# 
  1624  0990                     	;# 
  1625  0991                     	;# 
  1626  0992                     	;# 
  1627  0993                     	;# 
  1628  0994                     	;# 
  1629  0995                     	;# 
  1630  0996                     	;# 
  1631  0997                     	;# 
  1632  0A19                     	;# 
  1633  0A19                     	;# 
  1634  0A1A                     	;# 
  1635  0A1A                     	;# 
  1636  0A1B                     	;# 
  1637  0A1B                     	;# 
  1638  0A1B                     	;# 
  1639  0A1C                     	;# 
  1640  0A1C                     	;# 
  1641  0A1D                     	;# 
  1642  0A1D                     	;# 
  1643  0A1E                     	;# 
  1644  0A1E                     	;# 
  1645  0A1F                     	;# 
  1646  0A1F                     	;# 
  1647  0A1F                     	;# 
  1648  1E0F                     	;# 
  1649  1E10                     	;# 
  1650  1E11                     	;# 
  1651  1E12                     	;# 
  1652  1E13                     	;# 
  1653  1E14                     	;# 
  1654  1E15                     	;# 
  1655  1E16                     	;# 
  1656  1E17                     	;# 
  1657  1E18                     	;# 
  1658  1E19                     	;# 
  1659  1E1A                     	;# 
  1660  1E1B                     	;# 
  1661  1E1C                     	;# 
  1662  1E1D                     	;# 
  1663  1E1E                     	;# 
  1664  1E1F                     	;# 
  1665  1E20                     	;# 
  1666  1E21                     	;# 
  1667  1E22                     	;# 
  1668  1E23                     	;# 
  1669  1E24                     	;# 
  1670  1E25                     	;# 
  1671  1E26                     	;# 
  1672  1E27                     	;# 
  1673  1E28                     	;# 
  1674  1E29                     	;# 
  1675  1E2A                     	;# 
  1676  1E2B                     	;# 
  1677  1E2C                     	;# 
  1678  1E2D                     	;# 
  1679  1E2E                     	;# 
  1680  1E2F                     	;# 
  1681  1E30                     	;# 
  1682  1E31                     	;# 
  1683  1E32                     	;# 
  1684  1E33                     	;# 
  1685  1E34                     	;# 
  1686  1E35                     	;# 
  1687  1E36                     	;# 
  1688  1E37                     	;# 
  1689  1E8F                     	;# 
  1690  1E90                     	;# 
  1691  1E91                     	;# 
  1692  1E92                     	;# 
  1693  1E93                     	;# 
  1694  1E9C                     	;# 
  1695  1EA1                     	;# 
  1696  1EA2                     	;# 
  1697  1EB1                     	;# 
  1698  1EBB                     	;# 
  1699  1EBC                     	;# 
  1700  1EBD                     	;# 
  1701  1EBE                     	;# 
  1702  1EC3                     	;# 
  1703  1EC5                     	;# 
  1704  1EC6                     	;# 
  1705  1EC7                     	;# 
  1706  1ECB                     	;# 
  1707  1ECC                     	;# 
  1708  1ECD                     	;# 
  1709  1ECE                     	;# 
  1710  1F10                     	;# 
  1711  1F11                     	;# 
  1712  1F12                     	;# 
  1713  1F13                     	;# 
  1714  1F14                     	;# 
  1715  1F15                     	;# 
  1716  1F1C                     	;# 
  1717  1F1D                     	;# 
  1718  1F1E                     	;# 
  1719  1F1F                     	;# 
  1720  1F20                     	;# 
  1721  1F21                     	;# 
  1722  1F22                     	;# 
  1723  1F23                     	;# 
  1724  1F24                     	;# 
  1725  1F25                     	;# 
  1726  1F26                     	;# 
  1727  1F27                     	;# 
  1728  1F38                     	;# 
  1729  1F39                     	;# 
  1730  1F3A                     	;# 
  1731  1F3B                     	;# 
  1732  1F3C                     	;# 
  1733  1F3D                     	;# 
  1734  1F3E                     	;# 
  1735  1F3F                     	;# 
  1736  1F43                     	;# 
  1737  1F44                     	;# 
  1738  1F45                     	;# 
  1739  1F46                     	;# 
  1740  1F47                     	;# 
  1741  1F48                     	;# 
  1742  1F49                     	;# 
  1743  1F4A                     	;# 
  1744  1F4E                     	;# 
  1745  1F4F                     	;# 
  1746  1F50                     	;# 
  1747  1F51                     	;# 
  1748  1F52                     	;# 
  1749  1F53                     	;# 
  1750  1F54                     	;# 
  1751  1F55                     	;# 
  1752  1FE4                     	;# 
  1753  1FE5                     	;# 
  1754  1FE6                     	;# 
  1755  1FE7                     	;# 
  1756  1FE8                     	;# 
  1757  1FE8                     	;# 
  1758  1FE9                     	;# 
  1759  1FEA                     	;# 
  1760  1FEA                     	;# 
  1761  1FEB                     	;# 
  1762  1FED                     	;# 
  1763  1FEE                     	;# 
  1764  1FEF                     	;# 
  1765  0000                     	;# 
  1766  0001                     	;# 
  1767  0002                     	;# 
  1768  0003                     	;# 
  1769  0004                     	;# 
  1770  0005                     	;# 
  1771  0006                     	;# 
  1772  0007                     	;# 
  1773  0008                     	;# 
  1774  0009                     	;# 
  1775  000A                     	;# 
  1776  000B                     	;# 
  1777  000C                     	;# 
  1778  000D                     	;# 
  1779  000E                     	;# 
  1780  0012                     	;# 
  1781  0013                     	;# 
  1782  0014                     	;# 
  1783  0018                     	;# 
  1784  0019                     	;# 
  1785  001A                     	;# 
  1786  009B                     	;# 
  1787  009B                     	;# 
  1788  009C                     	;# 
  1789  009D                     	;# 
  1790  009E                     	;# 
  1791  009F                     	;# 
  1792  0119                     	;# 
  1793  0119                     	;# 
  1794  0119                     	;# 
  1795  011A                     	;# 
  1796  011A                     	;# 
  1797  011A                     	;# 
  1798  011B                     	;# 
  1799  011B                     	;# 
  1800  011B                     	;# 
  1801  011B                     	;# 
  1802  011B                     	;# 
  1803  011C                     	;# 
  1804  011C                     	;# 
  1805  011C                     	;# 
  1806  011D                     	;# 
  1807  011D                     	;# 
  1808  011D                     	;# 
  1809  011E                     	;# 
  1810  011E                     	;# 
  1811  011E                     	;# 
  1812  011F                     	;# 
  1813  011F                     	;# 
  1814  011F                     	;# 
  1815  011F                     	;# 
  1816  011F                     	;# 
  1817  018C                     	;# 
  1818  018D                     	;# 
  1819  018E                     	;# 
  1820  018F                     	;# 
  1821  0190                     	;# 
  1822  0191                     	;# 
  1823  0192                     	;# 
  1824  020C                     	;# 
  1825  020C                     	;# 
  1826  020D                     	;# 
  1827  020E                     	;# 
  1828  020F                     	;# 
  1829  020F                     	;# 
  1830  0210                     	;# 
  1831  0210                     	;# 
  1832  0211                     	;# 
  1833  0211                     	;# 
  1834  028C                     	;# 
  1835  028C                     	;# 
  1836  028D                     	;# 
  1837  028D                     	;# 
  1838  028E                     	;# 
  1839  028F                     	;# 
  1840  0290                     	;# 
  1841  0291                     	;# 
  1842  030C                     	;# 
  1843  030C                     	;# 
  1844  030D                     	;# 
  1845  030E                     	;# 
  1846  030F                     	;# 
  1847  0310                     	;# 
  1848  0310                     	;# 
  1849  0311                     	;# 
  1850  0312                     	;# 
  1851  0313                     	;# 
  1852  0314                     	;# 
  1853  0314                     	;# 
  1854  0315                     	;# 
  1855  0316                     	;# 
  1856  0318                     	;# 
  1857  0318                     	;# 
  1858  0319                     	;# 
  1859  031A                     	;# 
  1860  031C                     	;# 
  1861  031C                     	;# 
  1862  031D                     	;# 
  1863  031E                     	;# 
  1864  038C                     	;# 
  1865  038C                     	;# 
  1866  038D                     	;# 
  1867  038E                     	;# 
  1868  058C                     	;# 
  1869  058C                     	;# 
  1870  058D                     	;# 
  1871  058E                     	;# 
  1872  058F                     	;# 
  1873  058F                     	;# 
  1874  0590                     	;# 
  1875  0591                     	;# 
  1876  0592                     	;# 
  1877  0593                     	;# 
  1878  059C                     	;# 
  1879  059C                     	;# 
  1880  059D                     	;# 
  1881  059D                     	;# 
  1882  059E                     	;# 
  1883  059F                     	;# 
  1884  060C                     	;# 
  1885  060D                     	;# 
  1886  060E                     	;# 
  1887  060F                     	;# 
  1888  0610                     	;# 
  1889  0611                     	;# 
  1890  0612                     	;# 
  1891  0613                     	;# 
  1892  0614                     	;# 
  1893  070C                     	;# 
  1894  070D                     	;# 
  1895  070E                     	;# 
  1896  070F                     	;# 
  1897  0710                     	;# 
  1898  0711                     	;# 
  1899  0712                     	;# 
  1900  0713                     	;# 
  1901  0716                     	;# 
  1902  0717                     	;# 
  1903  0718                     	;# 
  1904  0719                     	;# 
  1905  071A                     	;# 
  1906  071B                     	;# 
  1907  071C                     	;# 
  1908  071D                     	;# 
  1909  0796                     	;# 
  1910  0797                     	;# 
  1911  0798                     	;# 
  1912  0799                     	;# 
  1913  079A                     	;# 
  1914  079B                     	;# 
  1915  080C                     	;# 
  1916  080D                     	;# 
  1917  080E                     	;# 
  1918  080F                     	;# 
  1919  0810                     	;# 
  1920  0811                     	;# 
  1921  0812                     	;# 
  1922  0813                     	;# 
  1923  0814                     	;# 
  1924  081A                     	;# 
  1925  081A                     	;# 
  1926  081B                     	;# 
  1927  081C                     	;# 
  1928  081C                     	;# 
  1929  081D                     	;# 
  1930  081E                     	;# 
  1931  081F                     	;# 
  1932  088C                     	;# 
  1933  088D                     	;# 
  1934  088E                     	;# 
  1935  088F                     	;# 
  1936  0890                     	;# 
  1937  0891                     	;# 
  1938  0892                     	;# 
  1939  0893                     	;# 
  1940  0895                     	;# 
  1941  0896                     	;# 
  1942  090C                     	;# 
  1943  090E                     	;# 
  1944  090F                     	;# 
  1945  091F                     	;# 
  1946  098F                     	;# 
  1947  098F                     	;# 
  1948  0990                     	;# 
  1949  0991                     	;# 
  1950  0992                     	;# 
  1951  0993                     	;# 
  1952  0994                     	;# 
  1953  0995                     	;# 
  1954  0996                     	;# 
  1955  0997                     	;# 
  1956  0A19                     	;# 
  1957  0A19                     	;# 
  1958  0A1A                     	;# 
  1959  0A1A                     	;# 
  1960  0A1B                     	;# 
  1961  0A1B                     	;# 
  1962  0A1B                     	;# 
  1963  0A1C                     	;# 
  1964  0A1C                     	;# 
  1965  0A1D                     	;# 
  1966  0A1D                     	;# 
  1967  0A1E                     	;# 
  1968  0A1E                     	;# 
  1969  0A1F                     	;# 
  1970  0A1F                     	;# 
  1971  0A1F                     	;# 
  1972  1E0F                     	;# 
  1973  1E10                     	;# 
  1974  1E11                     	;# 
  1975  1E12                     	;# 
  1976  1E13                     	;# 
  1977  1E14                     	;# 
  1978  1E15                     	;# 
  1979  1E16                     	;# 
  1980  1E17                     	;# 
  1981  1E18                     	;# 
  1982  1E19                     	;# 
  1983  1E1A                     	;# 
  1984  1E1B                     	;# 
  1985  1E1C                     	;# 
  1986  1E1D                     	;# 
  1987  1E1E                     	;# 
  1988  1E1F                     	;# 
  1989  1E20                     	;# 
  1990  1E21                     	;# 
  1991  1E22                     	;# 
  1992  1E23                     	;# 
  1993  1E24                     	;# 
  1994  1E25                     	;# 
  1995  1E26                     	;# 
  1996  1E27                     	;# 
  1997  1E28                     	;# 
  1998  1E29                     	;# 
  1999  1E2A                     	;# 
  2000  1E2B                     	;# 
  2001  1E2C                     	;# 
  2002  1E2D                     	;# 
  2003  1E2E                     	;# 
  2004  1E2F                     	;# 
  2005  1E30                     	;# 
  2006  1E31                     	;# 
  2007  1E32                     	;# 
  2008  1E33                     	;# 
  2009  1E34                     	;# 
  2010  1E35                     	;# 
  2011  1E36                     	;# 
  2012  1E37                     	;# 
  2013  1E8F                     	;# 
  2014  1E90                     	;# 
  2015  1E91                     	;# 
  2016  1E92                     	;# 
  2017  1E93                     	;# 
  2018  1E9C                     	;# 
  2019  1EA1                     	;# 
  2020  1EA2                     	;# 
  2021  1EB1                     	;# 
  2022  1EBB                     	;# 
  2023  1EBC                     	;# 
  2024  1EBD                     	;# 
  2025  1EBE                     	;# 
  2026  1EC3                     	;# 
  2027  1EC5                     	;# 
  2028  1EC6                     	;# 
  2029  1EC7                     	;# 
  2030  1ECB                     	;# 
  2031  1ECC                     	;# 
  2032  1ECD                     	;# 
  2033  1ECE                     	;# 
  2034  1F10                     	;# 
  2035  1F11                     	;# 
  2036  1F12                     	;# 
  2037  1F13                     	;# 
  2038  1F14                     	;# 
  2039  1F15                     	;# 
  2040  1F1C                     	;# 
  2041  1F1D                     	;# 
  2042  1F1E                     	;# 
  2043  1F1F                     	;# 
  2044  1F20                     	;# 
  2045  1F21                     	;# 
  2046  1F22                     	;# 
  2047  1F23                     	;# 
  2048  1F24                     	;# 
  2049  1F25                     	;# 
  2050  1F26                     	;# 
  2051  1F27                     	;# 
  2052  1F38                     	;# 
  2053  1F39                     	;# 
  2054  1F3A                     	;# 
  2055  1F3B                     	;# 
  2056  1F3C                     	;# 
  2057  1F3D                     	;# 
  2058  1F3E                     	;# 
  2059  1F3F                     	;# 
  2060  1F43                     	;# 
  2061  1F44                     	;# 
  2062  1F45                     	;# 
  2063  1F46                     	;# 
  2064  1F47                     	;# 
  2065  1F48                     	;# 
  2066  1F49                     	;# 
  2067  1F4A                     	;# 
  2068  1F4E                     	;# 
  2069  1F4F                     	;# 
  2070  1F50                     	;# 
  2071  1F51                     	;# 
  2072  1F52                     	;# 
  2073  1F53                     	;# 
  2074  1F54                     	;# 
  2075  1F55                     	;# 
  2076  1FE4                     	;# 
  2077  1FE5                     	;# 
  2078  1FE6                     	;# 
  2079  1FE7                     	;# 
  2080  1FE8                     	;# 
  2081  1FE8                     	;# 
  2082  1FE9                     	;# 
  2083  1FEA                     	;# 
  2084  1FEA                     	;# 
  2085  1FEB                     	;# 
  2086  1FED                     	;# 
  2087  1FEE                     	;# 
  2088  1FEF                     	;# 
  2089  0000                     	;# 
  2090  0001                     	;# 
  2091  0002                     	;# 
  2092  0003                     	;# 
  2093  0004                     	;# 
  2094  0005                     	;# 
  2095  0006                     	;# 
  2096  0007                     	;# 
  2097  0008                     	;# 
  2098  0009                     	;# 
  2099  000A                     	;# 
  2100  000B                     	;# 
  2101  000C                     	;# 
  2102  000D                     	;# 
  2103  000E                     	;# 
  2104  0012                     	;# 
  2105  0013                     	;# 
  2106  0014                     	;# 
  2107  0018                     	;# 
  2108  0019                     	;# 
  2109  001A                     	;# 
  2110  009B                     	;# 
  2111  009B                     	;# 
  2112  009C                     	;# 
  2113  009D                     	;# 
  2114  009E                     	;# 
  2115  009F                     	;# 
  2116  0119                     	;# 
  2117  0119                     	;# 
  2118  0119                     	;# 
  2119  011A                     	;# 
  2120  011A                     	;# 
  2121  011A                     	;# 
  2122  011B                     	;# 
  2123  011B                     	;# 
  2124  011B                     	;# 
  2125  011B                     	;# 
  2126  011B                     	;# 
  2127  011C                     	;# 
  2128  011C                     	;# 
  2129  011C                     	;# 
  2130  011D                     	;# 
  2131  011D                     	;# 
  2132  011D                     	;# 
  2133  011E                     	;# 
  2134  011E                     	;# 
  2135  011E                     	;# 
  2136  011F                     	;# 
  2137  011F                     	;# 
  2138  011F                     	;# 
  2139  011F                     	;# 
  2140  011F                     	;# 
  2141  018C                     	;# 
  2142  018D                     	;# 
  2143  018E                     	;# 
  2144  018F                     	;# 
  2145  0190                     	;# 
  2146  0191                     	;# 
  2147  0192                     	;# 
  2148  020C                     	;# 
  2149  020C                     	;# 
  2150  020D                     	;# 
  2151  020E                     	;# 
  2152  020F                     	;# 
  2153  020F                     	;# 
  2154  0210                     	;# 
  2155  0210                     	;# 
  2156  0211                     	;# 
  2157  0211                     	;# 
  2158  028C                     	;# 
  2159  028C                     	;# 
  2160  028D                     	;# 
  2161  028D                     	;# 
  2162  028E                     	;# 
  2163  028F                     	;# 
  2164  0290                     	;# 
  2165  0291                     	;# 
  2166  030C                     	;# 
  2167  030C                     	;# 
  2168  030D                     	;# 
  2169  030E                     	;# 
  2170  030F                     	;# 
  2171  0310                     	;# 
  2172  0310                     	;# 
  2173  0311                     	;# 
  2174  0312                     	;# 
  2175  0313                     	;# 
  2176  0314                     	;# 
  2177  0314                     	;# 
  2178  0315                     	;# 
  2179  0316                     	;# 
  2180  0318                     	;# 
  2181  0318                     	;# 
  2182  0319                     	;# 
  2183  031A                     	;# 
  2184  031C                     	;# 
  2185  031C                     	;# 
  2186  031D                     	;# 
  2187  031E                     	;# 
  2188  038C                     	;# 
  2189  038C                     	;# 
  2190  038D                     	;# 
  2191  038E                     	;# 
  2192  058C                     	;# 
  2193  058C                     	;# 
  2194  058D                     	;# 
  2195  058E                     	;# 
  2196  058F                     	;# 
  2197  058F                     	;# 
  2198  0590                     	;# 
  2199  0591                     	;# 
  2200  0592                     	;# 
  2201  0593                     	;# 
  2202  059C                     	;# 
  2203  059C                     	;# 
  2204  059D                     	;# 
  2205  059D                     	;# 
  2206  059E                     	;# 
  2207  059F                     	;# 
  2208  060C                     	;# 
  2209  060D                     	;# 
  2210  060E                     	;# 
  2211  060F                     	;# 
  2212  0610                     	;# 
  2213  0611                     	;# 
  2214  0612                     	;# 
  2215  0613                     	;# 
  2216  0614                     	;# 
  2217  070C                     	;# 
  2218  070D                     	;# 
  2219  070E                     	;# 
  2220  070F                     	;# 
  2221  0710                     	;# 
  2222  0711                     	;# 
  2223  0712                     	;# 
  2224  0713                     	;# 
  2225  0716                     	;# 
  2226  0717                     	;# 
  2227  0718                     	;# 
  2228  0719                     	;# 
  2229  071A                     	;# 
  2230  071B                     	;# 
  2231  071C                     	;# 
  2232  071D                     	;# 
  2233  0796                     	;# 
  2234  0797                     	;# 
  2235  0798                     	;# 
  2236  0799                     	;# 
  2237  079A                     	;# 
  2238  079B                     	;# 
  2239  080C                     	;# 
  2240  080D                     	;# 
  2241  080E                     	;# 
  2242  080F                     	;# 
  2243  0810                     	;# 
  2244  0811                     	;# 
  2245  0812                     	;# 
  2246  0813                     	;# 
  2247  0814                     	;# 
  2248  081A                     	;# 
  2249  081A                     	;# 
  2250  081B                     	;# 
  2251  081C                     	;# 
  2252  081C                     	;# 
  2253  081D                     	;# 
  2254  081E                     	;# 
  2255  081F                     	;# 
  2256  088C                     	;# 
  2257  088D                     	;# 
  2258  088E                     	;# 
  2259  088F                     	;# 
  2260  0890                     	;# 
  2261  0891                     	;# 
  2262  0892                     	;# 
  2263  0893                     	;# 
  2264  0895                     	;# 
  2265  0896                     	;# 
  2266  090C                     	;# 
  2267  090E                     	;# 
  2268  090F                     	;# 
  2269  091F                     	;# 
  2270  098F                     	;# 
  2271  098F                     	;# 
  2272  0990                     	;# 
  2273  0991                     	;# 
  2274  0992                     	;# 
  2275  0993                     	;# 
  2276  0994                     	;# 
  2277  0995                     	;# 
  2278  0996                     	;# 
  2279  0997                     	;# 
  2280  0A19                     	;# 
  2281  0A19                     	;# 
  2282  0A1A                     	;# 
  2283  0A1A                     	;# 
  2284  0A1B                     	;# 
  2285  0A1B                     	;# 
  2286  0A1B                     	;# 
  2287  0A1C                     	;# 
  2288  0A1C                     	;# 
  2289  0A1D                     	;# 
  2290  0A1D                     	;# 
  2291  0A1E                     	;# 
  2292  0A1E                     	;# 
  2293  0A1F                     	;# 
  2294  0A1F                     	;# 
  2295  0A1F                     	;# 
  2296  1E0F                     	;# 
  2297  1E10                     	;# 
  2298  1E11                     	;# 
  2299  1E12                     	;# 
  2300  1E13                     	;# 
  2301  1E14                     	;# 
  2302  1E15                     	;# 
  2303  1E16                     	;# 
  2304  1E17                     	;# 
  2305  1E18                     	;# 
  2306  1E19                     	;# 
  2307  1E1A                     	;# 
  2308  1E1B                     	;# 
  2309  1E1C                     	;# 
  2310  1E1D                     	;# 
  2311  1E1E                     	;# 
  2312  1E1F                     	;# 
  2313  1E20                     	;# 
  2314  1E21                     	;# 
  2315  1E22                     	;# 
  2316  1E23                     	;# 
  2317  1E24                     	;# 
  2318  1E25                     	;# 
  2319  1E26                     	;# 
  2320  1E27                     	;# 
  2321  1E28                     	;# 
  2322  1E29                     	;# 
  2323  1E2A                     	;# 
  2324  1E2B                     	;# 
  2325  1E2C                     	;# 
  2326  1E2D                     	;# 
  2327  1E2E                     	;# 
  2328  1E2F                     	;# 
  2329  1E30                     	;# 
  2330  1E31                     	;# 
  2331  1E32                     	;# 
  2332  1E33                     	;# 
  2333  1E34                     	;# 
  2334  1E35                     	;# 
  2335  1E36                     	;# 
  2336  1E37                     	;# 
  2337  1E8F                     	;# 
  2338  1E90                     	;# 
  2339  1E91                     	;# 
  2340  1E92                     	;# 
  2341  1E93                     	;# 
  2342  1E9C                     	;# 
  2343  1EA1                     	;# 
  2344  1EA2                     	;# 
  2345  1EB1                     	;# 
  2346  1EBB                     	;# 
  2347  1EBC                     	;# 
  2348  1EBD                     	;# 
  2349  1EBE                     	;# 
  2350  1EC3                     	;# 
  2351  1EC5                     	;# 
  2352  1EC6                     	;# 
  2353  1EC7                     	;# 
  2354  1ECB                     	;# 
  2355  1ECC                     	;# 
  2356  1ECD                     	;# 
  2357  1ECE                     	;# 
  2358  1F10                     	;# 
  2359  1F11                     	;# 
  2360  1F12                     	;# 
  2361  1F13                     	;# 
  2362  1F14                     	;# 
  2363  1F15                     	;# 
  2364  1F1C                     	;# 
  2365  1F1D                     	;# 
  2366  1F1E                     	;# 
  2367  1F1F                     	;# 
  2368  1F20                     	;# 
  2369  1F21                     	;# 
  2370  1F22                     	;# 
  2371  1F23                     	;# 
  2372  1F24                     	;# 
  2373  1F25                     	;# 
  2374  1F26                     	;# 
  2375  1F27                     	;# 
  2376  1F38                     	;# 
  2377  1F39                     	;# 
  2378  1F3A                     	;# 
  2379  1F3B                     	;# 
  2380  1F3C                     	;# 
  2381  1F3D                     	;# 
  2382  1F3E                     	;# 
  2383  1F3F                     	;# 
  2384  1F43                     	;# 
  2385  1F44                     	;# 
  2386  1F45                     	;# 
  2387  1F46                     	;# 
  2388  1F47                     	;# 
  2389  1F48                     	;# 
  2390  1F49                     	;# 
  2391  1F4A                     	;# 
  2392  1F4E                     	;# 
  2393  1F4F                     	;# 
  2394  1F50                     	;# 
  2395  1F51                     	;# 
  2396  1F52                     	;# 
  2397  1F53                     	;# 
  2398  1F54                     	;# 
  2399  1F55                     	;# 
  2400  1FE4                     	;# 
  2401  1FE5                     	;# 
  2402  1FE6                     	;# 
  2403  1FE7                     	;# 
  2404  1FE8                     	;# 
  2405  1FE8                     	;# 
  2406  1FE9                     	;# 
  2407  1FEA                     	;# 
  2408  1FEA                     	;# 
  2409  1FEB                     	;# 
  2410  1FED                     	;# 
  2411  1FEE                     	;# 
  2412  1FEF                     	;# 
  2413  0000                     	;# 
  2414  0001                     	;# 
  2415  0002                     	;# 
  2416  0003                     	;# 
  2417  0004                     	;# 
  2418  0005                     	;# 
  2419  0006                     	;# 
  2420  0007                     	;# 
  2421  0008                     	;# 
  2422  0009                     	;# 
  2423  000A                     	;# 
  2424  000B                     	;# 
  2425  000C                     	;# 
  2426  000D                     	;# 
  2427  000E                     	;# 
  2428  0012                     	;# 
  2429  0013                     	;# 
  2430  0014                     	;# 
  2431  0018                     	;# 
  2432  0019                     	;# 
  2433  001A                     	;# 
  2434  009B                     	;# 
  2435  009B                     	;# 
  2436  009C                     	;# 
  2437  009D                     	;# 
  2438  009E                     	;# 
  2439  009F                     	;# 
  2440  0119                     	;# 
  2441  0119                     	;# 
  2442  0119                     	;# 
  2443  011A                     	;# 
  2444  011A                     	;# 
  2445  011A                     	;# 
  2446  011B                     	;# 
  2447  011B                     	;# 
  2448  011B                     	;# 
  2449  011B                     	;# 
  2450  011B                     	;# 
  2451  011C                     	;# 
  2452  011C                     	;# 
  2453  011C                     	;# 
  2454  011D                     	;# 
  2455  011D                     	;# 
  2456  011D                     	;# 
  2457  011E                     	;# 
  2458  011E                     	;# 
  2459  011E                     	;# 
  2460  011F                     	;# 
  2461  011F                     	;# 
  2462  011F                     	;# 
  2463  011F                     	;# 
  2464  011F                     	;# 
  2465  018C                     	;# 
  2466  018D                     	;# 
  2467  018E                     	;# 
  2468  018F                     	;# 
  2469  0190                     	;# 
  2470  0191                     	;# 
  2471  0192                     	;# 
  2472  020C                     	;# 
  2473  020C                     	;# 
  2474  020D                     	;# 
  2475  020E                     	;# 
  2476  020F                     	;# 
  2477  020F                     	;# 
  2478  0210                     	;# 
  2479  0210                     	;# 
  2480  0211                     	;# 
  2481  0211                     	;# 
  2482  028C                     	;# 
  2483  028C                     	;# 
  2484  028D                     	;# 
  2485  028D                     	;# 
  2486  028E                     	;# 
  2487  028F                     	;# 
  2488  0290                     	;# 
  2489  0291                     	;# 
  2490  030C                     	;# 
  2491  030C                     	;# 
  2492  030D                     	;# 
  2493  030E                     	;# 
  2494  030F                     	;# 
  2495  0310                     	;# 
  2496  0310                     	;# 
  2497  0311                     	;# 
  2498  0312                     	;# 
  2499  0313                     	;# 
  2500  0314                     	;# 
  2501  0314                     	;# 
  2502  0315                     	;# 
  2503  0316                     	;# 
  2504  0318                     	;# 
  2505  0318                     	;# 
  2506  0319                     	;# 
  2507  031A                     	;# 
  2508  031C                     	;# 
  2509  031C                     	;# 
  2510  031D                     	;# 
  2511  031E                     	;# 
  2512  038C                     	;# 
  2513  038C                     	;# 
  2514  038D                     	;# 
  2515  038E                     	;# 
  2516  058C                     	;# 
  2517  058C                     	;# 
  2518  058D                     	;# 
  2519  058E                     	;# 
  2520  058F                     	;# 
  2521  058F                     	;# 
  2522  0590                     	;# 
  2523  0591                     	;# 
  2524  0592                     	;# 
  2525  0593                     	;# 
  2526  059C                     	;# 
  2527  059C                     	;# 
  2528  059D                     	;# 
  2529  059D                     	;# 
  2530  059E                     	;# 
  2531  059F                     	;# 
  2532  060C                     	;# 
  2533  060D                     	;# 
  2534  060E                     	;# 
  2535  060F                     	;# 
  2536  0610                     	;# 
  2537  0611                     	;# 
  2538  0612                     	;# 
  2539  0613                     	;# 
  2540  0614                     	;# 
  2541  070C                     	;# 
  2542  070D                     	;# 
  2543  070E                     	;# 
  2544  070F                     	;# 
  2545  0710                     	;# 
  2546  0711                     	;# 
  2547  0712                     	;# 
  2548  0713                     	;# 
  2549  0716                     	;# 
  2550  0717                     	;# 
  2551  0718                     	;# 
  2552  0719                     	;# 
  2553  071A                     	;# 
  2554  071B                     	;# 
  2555  071C                     	;# 
  2556  071D                     	;# 
  2557  0796                     	;# 
  2558  0797                     	;# 
  2559  0798                     	;# 
  2560  0799                     	;# 
  2561  079A                     	;# 
  2562  079B                     	;# 
  2563  080C                     	;# 
  2564  080D                     	;# 
  2565  080E                     	;# 
  2566  080F                     	;# 
  2567  0810                     	;# 
  2568  0811                     	;# 
  2569  0812                     	;# 
  2570  0813                     	;# 
  2571  0814                     	;# 
  2572  081A                     	;# 
  2573  081A                     	;# 
  2574  081B                     	;# 
  2575  081C                     	;# 
  2576  081C                     	;# 
  2577  081D                     	;# 
  2578  081E                     	;# 
  2579  081F                     	;# 
  2580  088C                     	;# 
  2581  088D                     	;# 
  2582  088E                     	;# 
  2583  088F                     	;# 
  2584  0890                     	;# 
  2585  0891                     	;# 
  2586  0892                     	;# 
  2587  0893                     	;# 
  2588  0895                     	;# 
  2589  0896                     	;# 
  2590  090C                     	;# 
  2591  090E                     	;# 
  2592  090F                     	;# 
  2593  091F                     	;# 
  2594  098F                     	;# 
  2595  098F                     	;# 
  2596  0990                     	;# 
  2597  0991                     	;# 
  2598  0992                     	;# 
  2599  0993                     	;# 
  2600  0994                     	;# 
  2601  0995                     	;# 
  2602  0996                     	;# 
  2603  0997                     	;# 
  2604  0A19                     	;# 
  2605  0A19                     	;# 
  2606  0A1A                     	;# 
  2607  0A1A                     	;# 
  2608  0A1B                     	;# 
  2609  0A1B                     	;# 
  2610  0A1B                     	;# 
  2611  0A1C                     	;# 
  2612  0A1C                     	;# 
  2613  0A1D                     	;# 
  2614  0A1D                     	;# 
  2615  0A1E                     	;# 
  2616  0A1E                     	;# 
  2617  0A1F                     	;# 
  2618  0A1F                     	;# 
  2619  0A1F                     	;# 
  2620  1E0F                     	;# 
  2621  1E10                     	;# 
  2622  1E11                     	;# 
  2623  1E12                     	;# 
  2624  1E13                     	;# 
  2625  1E14                     	;# 
  2626  1E15                     	;# 
  2627  1E16                     	;# 
  2628  1E17                     	;# 
  2629  1E18                     	;# 
  2630  1E19                     	;# 
  2631  1E1A                     	;# 
  2632  1E1B                     	;# 
  2633  1E1C                     	;# 
  2634  1E1D                     	;# 
  2635  1E1E                     	;# 
  2636  1E1F                     	;# 
  2637  1E20                     	;# 
  2638  1E21                     	;# 
  2639  1E22                     	;# 
  2640  1E23                     	;# 
  2641  1E24                     	;# 
  2642  1E25                     	;# 
  2643  1E26                     	;# 
  2644  1E27                     	;# 
  2645  1E28                     	;# 
  2646  1E29                     	;# 
  2647  1E2A                     	;# 
  2648  1E2B                     	;# 
  2649  1E2C                     	;# 
  2650  1E2D                     	;# 
  2651  1E2E                     	;# 
  2652  1E2F                     	;# 
  2653  1E30                     	;# 
  2654  1E31                     	;# 
  2655  1E32                     	;# 
  2656  1E33                     	;# 
  2657  1E34                     	;# 
  2658  1E35                     	;# 
  2659  1E36                     	;# 
  2660  1E37                     	;# 
  2661  1E8F                     	;# 
  2662  1E90                     	;# 
  2663  1E91                     	;# 
  2664  1E92                     	;# 
  2665  1E93                     	;# 
  2666  1E9C                     	;# 
  2667  1EA1                     	;# 
  2668  1EA2                     	;# 
  2669  1EB1                     	;# 
  2670  1EBB                     	;# 
  2671  1EBC                     	;# 
  2672  1EBD                     	;# 
  2673  1EBE                     	;# 
  2674  1EC3                     	;# 
  2675  1EC5                     	;# 
  2676  1EC6                     	;# 
  2677  1EC7                     	;# 
  2678  1ECB                     	;# 
  2679  1ECC                     	;# 
  2680  1ECD                     	;# 
  2681  1ECE                     	;# 
  2682  1F10                     	;# 
  2683  1F11                     	;# 
  2684  1F12                     	;# 
  2685  1F13                     	;# 
  2686  1F14                     	;# 
  2687  1F15                     	;# 
  2688  1F1C                     	;# 
  2689  1F1D                     	;# 
  2690  1F1E                     	;# 
  2691  1F1F                     	;# 
  2692  1F20                     	;# 
  2693  1F21                     	;# 
  2694  1F22                     	;# 
  2695  1F23                     	;# 
  2696  1F24                     	;# 
  2697  1F25                     	;# 
  2698  1F26                     	;# 
  2699  1F27                     	;# 
  2700  1F38                     	;# 
  2701  1F39                     	;# 
  2702  1F3A                     	;# 
  2703  1F3B                     	;# 
  2704  1F3C                     	;# 
  2705  1F3D                     	;# 
  2706  1F3E                     	;# 
  2707  1F3F                     	;# 
  2708  1F43                     	;# 
  2709  1F44                     	;# 
  2710  1F45                     	;# 
  2711  1F46                     	;# 
  2712  1F47                     	;# 
  2713  1F48                     	;# 
  2714  1F49                     	;# 
  2715  1F4A                     	;# 
  2716  1F4E                     	;# 
  2717  1F4F                     	;# 
  2718  1F50                     	;# 
  2719  1F51                     	;# 
  2720  1F52                     	;# 
  2721  1F53                     	;# 
  2722  1F54                     	;# 
  2723  1F55                     	;# 
  2724  1FE4                     	;# 
  2725  1FE5                     	;# 
  2726  1FE6                     	;# 
  2727  1FE7                     	;# 
  2728  1FE8                     	;# 
  2729  1FE8                     	;# 
  2730  1FE9                     	;# 
  2731  1FEA                     	;# 
  2732  1FEA                     	;# 
  2733  1FEB                     	;# 
  2734  1FED                     	;# 
  2735  1FEE                     	;# 
  2736  1FEF                     	;# 
  2737  0000                     	;# 
  2738  0001                     	;# 
  2739  0002                     	;# 
  2740  0003                     	;# 
  2741  0004                     	;# 
  2742  0005                     	;# 
  2743  0006                     	;# 
  2744  0007                     	;# 
  2745  0008                     	;# 
  2746  0009                     	;# 
  2747  000A                     	;# 
  2748  000B                     	;# 
  2749  000C                     	;# 
  2750  000D                     	;# 
  2751  000E                     	;# 
  2752  0012                     	;# 
  2753  0013                     	;# 
  2754  0014                     	;# 
  2755  0018                     	;# 
  2756  0019                     	;# 
  2757  001A                     	;# 
  2758  009B                     	;# 
  2759  009B                     	;# 
  2760  009C                     	;# 
  2761  009D                     	;# 
  2762  009E                     	;# 
  2763  009F                     	;# 
  2764  0119                     	;# 
  2765  0119                     	;# 
  2766  0119                     	;# 
  2767  011A                     	;# 
  2768  011A                     	;# 
  2769  011A                     	;# 
  2770  011B                     	;# 
  2771  011B                     	;# 
  2772  011B                     	;# 
  2773  011B                     	;# 
  2774  011B                     	;# 
  2775  011C                     	;# 
  2776  011C                     	;# 
  2777  011C                     	;# 
  2778  011D                     	;# 
  2779  011D                     	;# 
  2780  011D                     	;# 
  2781  011E                     	;# 
  2782  011E                     	;# 
  2783  011E                     	;# 
  2784  011F                     	;# 
  2785  011F                     	;# 
  2786  011F                     	;# 
  2787  011F                     	;# 
  2788  011F                     	;# 
  2789  018C                     	;# 
  2790  018D                     	;# 
  2791  018E                     	;# 
  2792  018F                     	;# 
  2793  0190                     	;# 
  2794  0191                     	;# 
  2795  0192                     	;# 
  2796  020C                     	;# 
  2797  020C                     	;# 
  2798  020D                     	;# 
  2799  020E                     	;# 
  2800  020F                     	;# 
  2801  020F                     	;# 
  2802  0210                     	;# 
  2803  0210                     	;# 
  2804  0211                     	;# 
  2805  0211                     	;# 
  2806  028C                     	;# 
  2807  028C                     	;# 
  2808  028D                     	;# 
  2809  028D                     	;# 
  2810  028E                     	;# 
  2811  028F                     	;# 
  2812  0290                     	;# 
  2813  0291                     	;# 
  2814  030C                     	;# 
  2815  030C                     	;# 
  2816  030D                     	;# 
  2817  030E                     	;# 
  2818  030F                     	;# 
  2819  0310                     	;# 
  2820  0310                     	;# 
  2821  0311                     	;# 
  2822  0312                     	;# 
  2823  0313                     	;# 
  2824  0314                     	;# 
  2825  0314                     	;# 
  2826  0315                     	;# 
  2827  0316                     	;# 
  2828  0318                     	;# 
  2829  0318                     	;# 
  2830  0319                     	;# 
  2831  031A                     	;# 
  2832  031C                     	;# 
  2833  031C                     	;# 
  2834  031D                     	;# 
  2835  031E                     	;# 
  2836  038C                     	;# 
  2837  038C                     	;# 
  2838  038D                     	;# 
  2839  038E                     	;# 
  2840  058C                     	;# 
  2841  058C                     	;# 
  2842  058D                     	;# 
  2843  058E                     	;# 
  2844  058F                     	;# 
  2845  058F                     	;# 
  2846  0590                     	;# 
  2847  0591                     	;# 
  2848  0592                     	;# 
  2849  0593                     	;# 
  2850  059C                     	;# 
  2851  059C                     	;# 
  2852  059D                     	;# 
  2853  059D                     	;# 
  2854  059E                     	;# 
  2855  059F                     	;# 
  2856  060C                     	;# 
  2857  060D                     	;# 
  2858  060E                     	;# 
  2859  060F                     	;# 
  2860  0610                     	;# 
  2861  0611                     	;# 
  2862  0612                     	;# 
  2863  0613                     	;# 
  2864  0614                     	;# 
  2865  070C                     	;# 
  2866  070D                     	;# 
  2867  070E                     	;# 
  2868  070F                     	;# 
  2869  0710                     	;# 
  2870  0711                     	;# 
  2871  0712                     	;# 
  2872  0713                     	;# 
  2873  0716                     	;# 
  2874  0717                     	;# 
  2875  0718                     	;# 
  2876  0719                     	;# 
  2877  071A                     	;# 
  2878  071B                     	;# 
  2879  071C                     	;# 
  2880  071D                     	;# 
  2881  0796                     	;# 
  2882  0797                     	;# 
  2883  0798                     	;# 
  2884  0799                     	;# 
  2885  079A                     	;# 
  2886  079B                     	;# 
  2887  080C                     	;# 
  2888  080D                     	;# 
  2889  080E                     	;# 
  2890  080F                     	;# 
  2891  0810                     	;# 
  2892  0811                     	;# 
  2893  0812                     	;# 
  2894  0813                     	;# 
  2895  0814                     	;# 
  2896  081A                     	;# 
  2897  081A                     	;# 
  2898  081B                     	;# 
  2899  081C                     	;# 
  2900  081C                     	;# 
  2901  081D                     	;# 
  2902  081E                     	;# 
  2903  081F                     	;# 
  2904  088C                     	;# 
  2905  088D                     	;# 
  2906  088E                     	;# 
  2907  088F                     	;# 
  2908  0890                     	;# 
  2909  0891                     	;# 
  2910  0892                     	;# 
  2911  0893                     	;# 
  2912  0895                     	;# 
  2913  0896                     	;# 
  2914  090C                     	;# 
  2915  090E                     	;# 
  2916  090F                     	;# 
  2917  091F                     	;# 
  2918  098F                     	;# 
  2919  098F                     	;# 
  2920  0990                     	;# 
  2921  0991                     	;# 
  2922  0992                     	;# 
  2923  0993                     	;# 
  2924  0994                     	;# 
  2925  0995                     	;# 
  2926  0996                     	;# 
  2927  0997                     	;# 
  2928  0A19                     	;# 
  2929  0A19                     	;# 
  2930  0A1A                     	;# 
  2931  0A1A                     	;# 
  2932  0A1B                     	;# 
  2933  0A1B                     	;# 
  2934  0A1B                     	;# 
  2935  0A1C                     	;# 
  2936  0A1C                     	;# 
  2937  0A1D                     	;# 
  2938  0A1D                     	;# 
  2939  0A1E                     	;# 
  2940  0A1E                     	;# 
  2941  0A1F                     	;# 
  2942  0A1F                     	;# 
  2943  0A1F                     	;# 
  2944  1E0F                     	;# 
  2945  1E10                     	;# 
  2946  1E11                     	;# 
  2947  1E12                     	;# 
  2948  1E13                     	;# 
  2949  1E14                     	;# 
  2950  1E15                     	;# 
  2951  1E16                     	;# 
  2952  1E17                     	;# 
  2953  1E18                     	;# 
  2954  1E19                     	;# 
  2955  1E1A                     	;# 
  2956  1E1B                     	;# 
  2957  1E1C                     	;# 
  2958  1E1D                     	;# 
  2959  1E1E                     	;# 
  2960  1E1F                     	;# 
  2961  1E20                     	;# 
  2962  1E21                     	;# 
  2963  1E22                     	;# 
  2964  1E23                     	;# 
  2965  1E24                     	;# 
  2966  1E25                     	;# 
  2967  1E26                     	;# 
  2968  1E27                     	;# 
  2969  1E28                     	;# 
  2970  1E29                     	;# 
  2971  1E2A                     	;# 
  2972  1E2B                     	;# 
  2973  1E2C                     	;# 
  2974  1E2D                     	;# 
  2975  1E2E                     	;# 
  2976  1E2F                     	;# 
  2977  1E30                     	;# 
  2978  1E31                     	;# 
  2979  1E32                     	;# 
  2980  1E33                     	;# 
  2981  1E34                     	;# 
  2982  1E35                     	;# 
  2983  1E36                     	;# 
  2984  1E37                     	;# 
  2985  1E8F                     	;# 
  2986  1E90                     	;# 
  2987  1E91                     	;# 
  2988  1E92                     	;# 
  2989  1E93                     	;# 
  2990  1E9C                     	;# 
  2991  1EA1                     	;# 
  2992  1EA2                     	;# 
  2993  1EB1                     	;# 
  2994  1EBB                     	;# 
  2995  1EBC                     	;# 
  2996  1EBD                     	;# 
  2997  1EBE                     	;# 
  2998  1EC3                     	;# 
  2999  1EC5                     	;# 
  3000  1EC6                     	;# 
  3001  1EC7                     	;# 
  3002  1ECB                     	;# 
  3003  1ECC                     	;# 
  3004  1ECD                     	;# 
  3005  1ECE                     	;# 
  3006  1F10                     	;# 
  3007  1F11                     	;# 
  3008  1F12                     	;# 
  3009  1F13                     	;# 
  3010  1F14                     	;# 
  3011  1F15                     	;# 
  3012  1F1C                     	;# 
  3013  1F1D                     	;# 
  3014  1F1E                     	;# 
  3015  1F1F                     	;# 
  3016  1F20                     	;# 
  3017  1F21                     	;# 
  3018  1F22                     	;# 
  3019  1F23                     	;# 
  3020  1F24                     	;# 
  3021  1F25                     	;# 
  3022  1F26                     	;# 
  3023  1F27                     	;# 
  3024  1F38                     	;# 
  3025  1F39                     	;# 
  3026  1F3A                     	;# 
  3027  1F3B                     	;# 
  3028  1F3C                     	;# 
  3029  1F3D                     	;# 
  3030  1F3E                     	;# 
  3031  1F3F                     	;# 
  3032  1F43                     	;# 
  3033  1F44                     	;# 
  3034  1F45                     	;# 
  3035  1F46                     	;# 
  3036  1F47                     	;# 
  3037  1F48                     	;# 
  3038  1F49                     	;# 
  3039  1F4A                     	;# 
  3040  1F4E                     	;# 
  3041  1F4F                     	;# 
  3042  1F50                     	;# 
  3043  1F51                     	;# 
  3044  1F52                     	;# 
  3045  1F53                     	;# 
  3046  1F54                     	;# 
  3047  1F55                     	;# 
  3048  1FE4                     	;# 
  3049  1FE5                     	;# 
  3050  1FE6                     	;# 
  3051  1FE7                     	;# 
  3052  1FE8                     	;# 
  3053  1FE8                     	;# 
  3054  1FE9                     	;# 
  3055  1FEA                     	;# 
  3056  1FEA                     	;# 
  3057  1FEB                     	;# 
  3058  1FED                     	;# 
  3059  1FEE                     	;# 
  3060  1FEF                     	;# 
  3061  0000                     	;# 
  3062  0001                     	;# 
  3063  0002                     	;# 
  3064  0003                     	;# 
  3065  0004                     	;# 
  3066  0005                     	;# 
  3067  0006                     	;# 
  3068  0007                     	;# 
  3069  0008                     	;# 
  3070  0009                     	;# 
  3071  000A                     	;# 
  3072  000B                     	;# 
  3073  000C                     	;# 
  3074  000D                     	;# 
  3075  000E                     	;# 
  3076  0012                     	;# 
  3077  0013                     	;# 
  3078  0014                     	;# 
  3079  0018                     	;# 
  3080  0019                     	;# 
  3081  001A                     	;# 
  3082  009B                     	;# 
  3083  009B                     	;# 
  3084  009C                     	;# 
  3085  009D                     	;# 
  3086  009E                     	;# 
  3087  009F                     	;# 
  3088  0119                     	;# 
  3089  0119                     	;# 
  3090  0119                     	;# 
  3091  011A                     	;# 
  3092  011A                     	;# 
  3093  011A                     	;# 
  3094  011B                     	;# 
  3095  011B                     	;# 
  3096  011B                     	;# 
  3097  011B                     	;# 
  3098  011B                     	;# 
  3099  011C                     	;# 
  3100  011C                     	;# 
  3101  011C                     	;# 
  3102  011D                     	;# 
  3103  011D                     	;# 
  3104  011D                     	;# 
  3105  011E                     	;# 
  3106  011E                     	;# 
  3107  011E                     	;# 
  3108  011F                     	;# 
  3109  011F                     	;# 
  3110  011F                     	;# 
  3111  011F                     	;# 
  3112  011F                     	;# 
  3113  018C                     	;# 
  3114  018D                     	;# 
  3115  018E                     	;# 
  3116  018F                     	;# 
  3117  0190                     	;# 
  3118  0191                     	;# 
  3119  0192                     	;# 
  3120  020C                     	;# 
  3121  020C                     	;# 
  3122  020D                     	;# 
  3123  020E                     	;# 
  3124  020F                     	;# 
  3125  020F                     	;# 
  3126  0210                     	;# 
  3127  0210                     	;# 
  3128  0211                     	;# 
  3129  0211                     	;# 
  3130  028C                     	;# 
  3131  028C                     	;# 
  3132  028D                     	;# 
  3133  028D                     	;# 
  3134  028E                     	;# 
  3135  028F                     	;# 
  3136  0290                     	;# 
  3137  0291                     	;# 
  3138  030C                     	;# 
  3139  030C                     	;# 
  3140  030D                     	;# 
  3141  030E                     	;# 
  3142  030F                     	;# 
  3143  0310                     	;# 
  3144  0310                     	;# 
  3145  0311                     	;# 
  3146  0312                     	;# 
  3147  0313                     	;# 
  3148  0314                     	;# 
  3149  0314                     	;# 
  3150  0315                     	;# 
  3151  0316                     	;# 
  3152  0318                     	;# 
  3153  0318                     	;# 
  3154  0319                     	;# 
  3155  031A                     	;# 
  3156  031C                     	;# 
  3157  031C                     	;# 
  3158  031D                     	;# 
  3159  031E                     	;# 
  3160  038C                     	;# 
  3161  038C                     	;# 
  3162  038D                     	;# 
  3163  038E                     	;# 
  3164  058C                     	;# 
  3165  058C                     	;# 
  3166  058D                     	;# 
  3167  058E                     	;# 
  3168  058F                     	;# 
  3169  058F                     	;# 
  3170  0590                     	;# 
  3171  0591                     	;# 
  3172  0592                     	;# 
  3173  0593                     	;# 
  3174  059C                     	;# 
  3175  059C                     	;# 
  3176  059D                     	;# 
  3177  059D                     	;# 
  3178  059E                     	;# 
  3179  059F                     	;# 
  3180  060C                     	;# 
  3181  060D                     	;# 
  3182  060E                     	;# 
  3183  060F                     	;# 
  3184  0610                     	;# 
  3185  0611                     	;# 
  3186  0612                     	;# 
  3187  0613                     	;# 
  3188  0614                     	;# 
  3189  070C                     	;# 
  3190  070D                     	;# 
  3191  070E                     	;# 
  3192  070F                     	;# 
  3193  0710                     	;# 
  3194  0711                     	;# 
  3195  0712                     	;# 
  3196  0713                     	;# 
  3197  0716                     	;# 
  3198  0717                     	;# 
  3199  0718                     	;# 
  3200  0719                     	;# 
  3201  071A                     	;# 
  3202  071B                     	;# 
  3203  071C                     	;# 
  3204  071D                     	;# 
  3205  0796                     	;# 
  3206  0797                     	;# 
  3207  0798                     	;# 
  3208  0799                     	;# 
  3209  079A                     	;# 
  3210  079B                     	;# 
  3211  080C                     	;# 
  3212  080D                     	;# 
  3213  080E                     	;# 
  3214  080F                     	;# 
  3215  0810                     	;# 
  3216  0811                     	;# 
  3217  0812                     	;# 
  3218  0813                     	;# 
  3219  0814                     	;# 
  3220  081A                     	;# 
  3221  081A                     	;# 
  3222  081B                     	;# 
  3223  081C                     	;# 
  3224  081C                     	;# 
  3225  081D                     	;# 
  3226  081E                     	;# 
  3227  081F                     	;# 
  3228  088C                     	;# 
  3229  088D                     	;# 
  3230  088E                     	;# 
  3231  088F                     	;# 
  3232  0890                     	;# 
  3233  0891                     	;# 
  3234  0892                     	;# 
  3235  0893                     	;# 
  3236  0895                     	;# 
  3237  0896                     	;# 
  3238  090C                     	;# 
  3239  090E                     	;# 
  3240  090F                     	;# 
  3241  091F                     	;# 
  3242  098F                     	;# 
  3243  098F                     	;# 
  3244  0990                     	;# 
  3245  0991                     	;# 
  3246  0992                     	;# 
  3247  0993                     	;# 
  3248  0994                     	;# 
  3249  0995                     	;# 
  3250  0996                     	;# 
  3251  0997                     	;# 
  3252  0A19                     	;# 
  3253  0A19                     	;# 
  3254  0A1A                     	;# 
  3255  0A1A                     	;# 
  3256  0A1B                     	;# 
  3257  0A1B                     	;# 
  3258  0A1B                     	;# 
  3259  0A1C                     	;# 
  3260  0A1C                     	;# 
  3261  0A1D                     	;# 
  3262  0A1D                     	;# 
  3263  0A1E                     	;# 
  3264  0A1E                     	;# 
  3265  0A1F                     	;# 
  3266  0A1F                     	;# 
  3267  0A1F                     	;# 
  3268  1E0F                     	;# 
  3269  1E10                     	;# 
  3270  1E11                     	;# 
  3271  1E12                     	;# 
  3272  1E13                     	;# 
  3273  1E14                     	;# 
  3274  1E15                     	;# 
  3275  1E16                     	;# 
  3276  1E17                     	;# 
  3277  1E18                     	;# 
  3278  1E19                     	;# 
  3279  1E1A                     	;# 
  3280  1E1B                     	;# 
  3281  1E1C                     	;# 
  3282  1E1D                     	;# 
  3283  1E1E                     	;# 
  3284  1E1F                     	;# 
  3285  1E20                     	;# 
  3286  1E21                     	;# 
  3287  1E22                     	;# 
  3288  1E23                     	;# 
  3289  1E24                     	;# 
  3290  1E25                     	;# 
  3291  1E26                     	;# 
  3292  1E27                     	;# 
  3293  1E28                     	;# 
  3294  1E29                     	;# 
  3295  1E2A                     	;# 
  3296  1E2B                     	;# 
  3297  1E2C                     	;# 
  3298  1E2D                     	;# 
  3299  1E2E                     	;# 
  3300  1E2F                     	;# 
  3301  1E30                     	;# 
  3302  1E31                     	;# 
  3303  1E32                     	;# 
  3304  1E33                     	;# 
  3305  1E34                     	;# 
  3306  1E35                     	;# 
  3307  1E36                     	;# 
  3308  1E37                     	;# 
  3309  1E8F                     	;# 
  3310  1E90                     	;# 
  3311  1E91                     	;# 
  3312  1E92                     	;# 
  3313  1E93                     	;# 
  3314  1E9C                     	;# 
  3315  1EA1                     	;# 
  3316  1EA2                     	;# 
  3317  1EB1                     	;# 
  3318  1EBB                     	;# 
  3319  1EBC                     	;# 
  3320  1EBD                     	;# 
  3321  1EBE                     	;# 
  3322  1EC3                     	;# 
  3323  1EC5                     	;# 
  3324  1EC6                     	;# 
  3325  1EC7                     	;# 
  3326  1ECB                     	;# 
  3327  1ECC                     	;# 
  3328  1ECD                     	;# 
  3329  1ECE                     	;# 
  3330  1F10                     	;# 
  3331  1F11                     	;# 
  3332  1F12                     	;# 
  3333  1F13                     	;# 
  3334  1F14                     	;# 
  3335  1F15                     	;# 
  3336  1F1C                     	;# 
  3337  1F1D                     	;# 
  3338  1F1E                     	;# 
  3339  1F1F                     	;# 
  3340  1F20                     	;# 
  3341  1F21                     	;# 
  3342  1F22                     	;# 
  3343  1F23                     	;# 
  3344  1F24                     	;# 
  3345  1F25                     	;# 
  3346  1F26                     	;# 
  3347  1F27                     	;# 
  3348  1F38                     	;# 
  3349  1F39                     	;# 
  3350  1F3A                     	;# 
  3351  1F3B                     	;# 
  3352  1F3C                     	;# 
  3353  1F3D                     	;# 
  3354  1F3E                     	;# 
  3355  1F3F                     	;# 
  3356  1F43                     	;# 
  3357  1F44                     	;# 
  3358  1F45                     	;# 
  3359  1F46                     	;# 
  3360  1F47                     	;# 
  3361  1F48                     	;# 
  3362  1F49                     	;# 
  3363  1F4A                     	;# 
  3364  1F4E                     	;# 
  3365  1F4F                     	;# 
  3366  1F50                     	;# 
  3367  1F51                     	;# 
  3368  1F52                     	;# 
  3369  1F53                     	;# 
  3370  1F54                     	;# 
  3371  1F55                     	;# 
  3372  1FE4                     	;# 
  3373  1FE5                     	;# 
  3374  1FE6                     	;# 
  3375  1FE7                     	;# 
  3376  1FE8                     	;# 
  3377  1FE8                     	;# 
  3378  1FE9                     	;# 
  3379  1FEA                     	;# 
  3380  1FEA                     	;# 
  3381  1FEB                     	;# 
  3382  1FED                     	;# 
  3383  1FEE                     	;# 
  3384  1FEF                     	;# 
  3385  0000                     	;# 
  3386  0001                     	;# 
  3387  0002                     	;# 
  3388  0003                     	;# 
  3389  0004                     	;# 
  3390  0005                     	;# 
  3391  0006                     	;# 
  3392  0007                     	;# 
  3393  0008                     	;# 
  3394  0009                     	;# 
  3395  000A                     	;# 
  3396  000B                     	;# 
  3397  000C                     	;# 
  3398  000D                     	;# 
  3399  000E                     	;# 
  3400  0012                     	;# 
  3401  0013                     	;# 
  3402  0014                     	;# 
  3403  0018                     	;# 
  3404  0019                     	;# 
  3405  001A                     	;# 
  3406  009B                     	;# 
  3407  009B                     	;# 
  3408  009C                     	;# 
  3409  009D                     	;# 
  3410  009E                     	;# 
  3411  009F                     	;# 
  3412  0119                     	;# 
  3413  0119                     	;# 
  3414  0119                     	;# 
  3415  011A                     	;# 
  3416  011A                     	;# 
  3417  011A                     	;# 
  3418  011B                     	;# 
  3419  011B                     	;# 
  3420  011B                     	;# 
  3421  011B                     	;# 
  3422  011B                     	;# 
  3423  011C                     	;# 
  3424  011C                     	;# 
  3425  011C                     	;# 
  3426  011D                     	;# 
  3427  011D                     	;# 
  3428  011D                     	;# 
  3429  011E                     	;# 
  3430  011E                     	;# 
  3431  011E                     	;# 
  3432  011F                     	;# 
  3433  011F                     	;# 
  3434  011F                     	;# 
  3435  011F                     	;# 
  3436  011F                     	;# 
  3437  018C                     	;# 
  3438  018D                     	;# 
  3439  018E                     	;# 
  3440  018F                     	;# 
  3441  0190                     	;# 
  3442  0191                     	;# 
  3443  0192                     	;# 
  3444  020C                     	;# 
  3445  020C                     	;# 
  3446  020D                     	;# 
  3447  020E                     	;# 
  3448  020F                     	;# 
  3449  020F                     	;# 
  3450  0210                     	;# 
  3451  0210                     	;# 
  3452  0211                     	;# 
  3453  0211                     	;# 
  3454  028C                     	;# 
  3455  028C                     	;# 
  3456  028D                     	;# 
  3457  028D                     	;# 
  3458  028E                     	;# 
  3459  028F                     	;# 
  3460  0290                     	;# 
  3461  0291                     	;# 
  3462  030C                     	;# 
  3463  030C                     	;# 
  3464  030D                     	;# 
  3465  030E                     	;# 
  3466  030F                     	;# 
  3467  0310                     	;# 
  3468  0310                     	;# 
  3469  0311                     	;# 
  3470  0312                     	;# 
  3471  0313                     	;# 
  3472  0314                     	;# 
  3473  0314                     	;# 
  3474  0315                     	;# 
  3475  0316                     	;# 
  3476  0318                     	;# 
  3477  0318                     	;# 
  3478  0319                     	;# 
  3479  031A                     	;# 
  3480  031C                     	;# 
  3481  031C                     	;# 
  3482  031D                     	;# 
  3483  031E                     	;# 
  3484  038C                     	;# 
  3485  038C                     	;# 
  3486  038D                     	;# 
  3487  038E                     	;# 
  3488  058C                     	;# 
  3489  058C                     	;# 
  3490  058D                     	;# 
  3491  058E                     	;# 
  3492  058F                     	;# 
  3493  058F                     	;# 
  3494  0590                     	;# 
  3495  0591                     	;# 
  3496  0592                     	;# 
  3497  0593                     	;# 
  3498  059C                     	;# 
  3499  059C                     	;# 
  3500  059D                     	;# 
  3501  059D                     	;# 
  3502  059E                     	;# 
  3503  059F                     	;# 
  3504  060C                     	;# 
  3505  060D                     	;# 
  3506  060E                     	;# 
  3507  060F                     	;# 
  3508  0610                     	;# 
  3509  0611                     	;# 
  3510  0612                     	;# 
  3511  0613                     	;# 
  3512  0614                     	;# 
  3513  070C                     	;# 
  3514  070D                     	;# 
  3515  070E                     	;# 
  3516  070F                     	;# 
  3517  0710                     	;# 
  3518  0711                     	;# 
  3519  0712                     	;# 
  3520  0713                     	;# 
  3521  0716                     	;# 
  3522  0717                     	;# 
  3523  0718                     	;# 
  3524  0719                     	;# 
  3525  071A                     	;# 
  3526  071B                     	;# 
  3527  071C                     	;# 
  3528  071D                     	;# 
  3529  0796                     	;# 
  3530  0797                     	;# 
  3531  0798                     	;# 
  3532  0799                     	;# 
  3533  079A                     	;# 
  3534  079B                     	;# 
  3535  080C                     	;# 
  3536  080D                     	;# 
  3537  080E                     	;# 
  3538  080F                     	;# 
  3539  0810                     	;# 
  3540  0811                     	;# 
  3541  0812                     	;# 
  3542  0813                     	;# 
  3543  0814                     	;# 
  3544  081A                     	;# 
  3545  081A                     	;# 
  3546  081B                     	;# 
  3547  081C                     	;# 
  3548  081C                     	;# 
  3549  081D                     	;# 
  3550  081E                     	;# 
  3551  081F                     	;# 
  3552  088C                     	;# 
  3553  088D                     	;# 
  3554  088E                     	;# 
  3555  088F                     	;# 
  3556  0890                     	;# 
  3557  0891                     	;# 
  3558  0892                     	;# 
  3559  0893                     	;# 
  3560  0895                     	;# 
  3561  0896                     	;# 
  3562  090C                     	;# 
  3563  090E                     	;# 
  3564  090F                     	;# 
  3565  091F                     	;# 
  3566  098F                     	;# 
  3567  098F                     	;# 
  3568  0990                     	;# 
  3569  0991                     	;# 
  3570  0992                     	;# 
  3571  0993                     	;# 
  3572  0994                     	;# 
  3573  0995                     	;# 
  3574  0996                     	;# 
  3575  0997                     	;# 
  3576  0A19                     	;# 
  3577  0A19                     	;# 
  3578  0A1A                     	;# 
  3579  0A1A                     	;# 
  3580  0A1B                     	;# 
  3581  0A1B                     	;# 
  3582  0A1B                     	;# 
  3583  0A1C                     	;# 
  3584  0A1C                     	;# 
  3585  0A1D                     	;# 
  3586  0A1D                     	;# 
  3587  0A1E                     	;# 
  3588  0A1E                     	;# 
  3589  0A1F                     	;# 
  3590  0A1F                     	;# 
  3591  0A1F                     	;# 
  3592  1E0F                     	;# 
  3593  1E10                     	;# 
  3594  1E11                     	;# 
  3595  1E12                     	;# 
  3596  1E13                     	;# 
  3597  1E14                     	;# 
  3598  1E15                     	;# 
  3599  1E16                     	;# 
  3600  1E17                     	;# 
  3601  1E18                     	;# 
  3602  1E19                     	;# 
  3603  1E1A                     	;# 
  3604  1E1B                     	;# 
  3605  1E1C                     	;# 
  3606  1E1D                     	;# 
  3607  1E1E                     	;# 
  3608  1E1F                     	;# 
  3609  1E20                     	;# 
  3610  1E21                     	;# 
  3611  1E22                     	;# 
  3612  1E23                     	;# 
  3613  1E24                     	;# 
  3614  1E25                     	;# 
  3615  1E26                     	;# 
  3616  1E27                     	;# 
  3617  1E28                     	;# 
  3618  1E29                     	;# 
  3619  1E2A                     	;# 
  3620  1E2B                     	;# 
  3621  1E2C                     	;# 
  3622  1E2D                     	;# 
  3623  1E2E                     	;# 
  3624  1E2F                     	;# 
  3625  1E30                     	;# 
  3626  1E31                     	;# 
  3627  1E32                     	;# 
  3628  1E33                     	;# 
  3629  1E34                     	;# 
  3630  1E35                     	;# 
  3631  1E36                     	;# 
  3632  1E37                     	;# 
  3633  1E8F                     	;# 
  3634  1E90                     	;# 
  3635  1E91                     	;# 
  3636  1E92                     	;# 
  3637  1E93                     	;# 
  3638  1E9C                     	;# 
  3639  1EA1                     	;# 
  3640  1EA2                     	;# 
  3641  1EB1                     	;# 
  3642  1EBB                     	;# 
  3643  1EBC                     	;# 
  3644  1EBD                     	;# 
  3645  1EBE                     	;# 
  3646  1EC3                     	;# 
  3647  1EC5                     	;# 
  3648  1EC6                     	;# 
  3649  1EC7                     	;# 
  3650  1ECB                     	;# 
  3651  1ECC                     	;# 
  3652  1ECD                     	;# 
  3653  1ECE                     	;# 
  3654  1F10                     	;# 
  3655  1F11                     	;# 
  3656  1F12                     	;# 
  3657  1F13                     	;# 
  3658  1F14                     	;# 
  3659  1F15                     	;# 
  3660  1F1C                     	;# 
  3661  1F1D                     	;# 
  3662  1F1E                     	;# 
  3663  1F1F                     	;# 
  3664  1F20                     	;# 
  3665  1F21                     	;# 
  3666  1F22                     	;# 
  3667  1F23                     	;# 
  3668  1F24                     	;# 
  3669  1F25                     	;# 
  3670  1F26                     	;# 
  3671  1F27                     	;# 
  3672  1F38                     	;# 
  3673  1F39                     	;# 
  3674  1F3A                     	;# 
  3675  1F3B                     	;# 
  3676  1F3C                     	;# 
  3677  1F3D                     	;# 
  3678  1F3E                     	;# 
  3679  1F3F                     	;# 
  3680  1F43                     	;# 
  3681  1F44                     	;# 
  3682  1F45                     	;# 
  3683  1F46                     	;# 
  3684  1F47                     	;# 
  3685  1F48                     	;# 
  3686  1F49                     	;# 
  3687  1F4A                     	;# 
  3688  1F4E                     	;# 
  3689  1F4F                     	;# 
  3690  1F50                     	;# 
  3691  1F51                     	;# 
  3692  1F52                     	;# 
  3693  1F53                     	;# 
  3694  1F54                     	;# 
  3695  1F55                     	;# 
  3696  1FE4                     	;# 
  3697  1FE5                     	;# 
  3698  1FE6                     	;# 
  3699  1FE7                     	;# 
  3700  1FE8                     	;# 
  3701  1FE8                     	;# 
  3702  1FE9                     	;# 
  3703  1FEA                     	;# 
  3704  1FEA                     	;# 
  3705  1FEB                     	;# 
  3706  1FED                     	;# 
  3707  1FEE                     	;# 
  3708  1FEF                     	;# 
  3709  0000                     	;# 
  3710  0001                     	;# 
  3711  0002                     	;# 
  3712  0003                     	;# 
  3713  0004                     	;# 
  3714  0005                     	;# 
  3715  0006                     	;# 
  3716  0007                     	;# 
  3717  0008                     	;# 
  3718  0009                     	;# 
  3719  000A                     	;# 
  3720  000B                     	;# 
  3721  000C                     	;# 
  3722  000D                     	;# 
  3723  000E                     	;# 
  3724  0012                     	;# 
  3725  0013                     	;# 
  3726  0014                     	;# 
  3727  0018                     	;# 
  3728  0019                     	;# 
  3729  001A                     	;# 
  3730  009B                     	;# 
  3731  009B                     	;# 
  3732  009C                     	;# 
  3733  009D                     	;# 
  3734  009E                     	;# 
  3735  009F                     	;# 
  3736  0119                     	;# 
  3737  0119                     	;# 
  3738  0119                     	;# 
  3739  011A                     	;# 
  3740  011A                     	;# 
  3741  011A                     	;# 
  3742  011B                     	;# 
  3743  011B                     	;# 
  3744  011B                     	;# 
  3745  011B                     	;# 
  3746  011B                     	;# 
  3747  011C                     	;# 
  3748  011C                     	;# 
  3749  011C                     	;# 
  3750  011D                     	;# 
  3751  011D                     	;# 
  3752  011D                     	;# 
  3753  011E                     	;# 
  3754  011E                     	;# 
  3755  011E                     	;# 
  3756  011F                     	;# 
  3757  011F                     	;# 
  3758  011F                     	;# 
  3759  011F                     	;# 
  3760  011F                     	;# 
  3761  018C                     	;# 
  3762  018D                     	;# 
  3763  018E                     	;# 
  3764  018F                     	;# 
  3765  0190                     	;# 
  3766  0191                     	;# 
  3767  0192                     	;# 
  3768  020C                     	;# 
  3769  020C                     	;# 
  3770  020D                     	;# 
  3771  020E                     	;# 
  3772  020F                     	;# 
  3773  020F                     	;# 
  3774  0210                     	;# 
  3775  0210                     	;# 
  3776  0211                     	;# 
  3777  0211                     	;# 
  3778  028C                     	;# 
  3779  028C                     	;# 
  3780  028D                     	;# 
  3781  028D                     	;# 
  3782  028E                     	;# 
  3783  028F                     	;# 
  3784  0290                     	;# 
  3785  0291                     	;# 
  3786  030C                     	;# 
  3787  030C                     	;# 
  3788  030D                     	;# 
  3789  030E                     	;# 
  3790  030F                     	;# 
  3791  0310                     	;# 
  3792  0310                     	;# 
  3793  0311                     	;# 
  3794  0312                     	;# 
  3795  0313                     	;# 
  3796  0314                     	;# 
  3797  0314                     	;# 
  3798  0315                     	;# 
  3799  0316                     	;# 
  3800  0318                     	;# 
  3801  0318                     	;# 
  3802  0319                     	;# 
  3803  031A                     	;# 
  3804  031C                     	;# 
  3805  031C                     	;# 
  3806  031D                     	;# 
  3807  031E                     	;# 
  3808  038C                     	;# 
  3809  038C                     	;# 
  3810  038D                     	;# 
  3811  038E                     	;# 
  3812  058C                     	;# 
  3813  058C                     	;# 
  3814  058D                     	;# 
  3815  058E                     	;# 
  3816  058F                     	;# 
  3817  058F                     	;# 
  3818  0590                     	;# 
  3819  0591                     	;# 
  3820  0592                     	;# 
  3821  0593                     	;# 
  3822  059C                     	;# 
  3823  059C                     	;# 
  3824  059D                     	;# 
  3825  059D                     	;# 
  3826  059E                     	;# 
  3827  059F                     	;# 
  3828  060C                     	;# 
  3829  060D                     	;# 
  3830  060E                     	;# 
  3831  060F                     	;# 
  3832  0610                     	;# 
  3833  0611                     	;# 
  3834  0612                     	;# 
  3835  0613                     	;# 
  3836  0614                     	;# 
  3837  070C                     	;# 
  3838  070D                     	;# 
  3839  070E                     	;# 
  3840  070F                     	;# 
  3841  0710                     	;# 
  3842  0711                     	;# 
  3843  0712                     	;# 
  3844  0713                     	;# 
  3845  0716                     	;# 
  3846  0717                     	;# 
  3847  0718                     	;# 
  3848  0719                     	;# 
  3849  071A                     	;# 
  3850  071B                     	;# 
  3851  071C                     	;# 
  3852  071D                     	;# 
  3853  0796                     	;# 
  3854  0797                     	;# 
  3855  0798                     	;# 
  3856  0799                     	;# 
  3857  079A                     	;# 
  3858  079B                     	;# 
  3859  080C                     	;# 
  3860  080D                     	;# 
  3861  080E                     	;# 
  3862  080F                     	;# 
  3863  0810                     	;# 
  3864  0811                     	;# 
  3865  0812                     	;# 
  3866  0813                     	;# 
  3867  0814                     	;# 
  3868  081A                     	;# 
  3869  081A                     	;# 
  3870  081B                     	;# 
  3871  081C                     	;# 
  3872  081C                     	;# 
  3873  081D                     	;# 
  3874  081E                     	;# 
  3875  081F                     	;# 
  3876  088C                     	;# 
  3877  088D                     	;# 
  3878  088E                     	;# 
  3879  088F                     	;# 
  3880  0890                     	;# 
  3881  0891                     	;# 
  3882  0892                     	;# 
  3883  0893                     	;# 
  3884  0895                     	;# 
  3885  0896                     	;# 
  3886  090C                     	;# 
  3887  090E                     	;# 
  3888  090F                     	;# 
  3889  091F                     	;# 
  3890  098F                     	;# 
  3891  098F                     	;# 
  3892  0990                     	;# 
  3893  0991                     	;# 
  3894  0992                     	;# 
  3895  0993                     	;# 
  3896  0994                     	;# 
  3897  0995                     	;# 
  3898  0996                     	;# 
  3899  0997                     	;# 
  3900  0A19                     	;# 
  3901  0A19                     	;# 
  3902  0A1A                     	;# 
  3903  0A1A                     	;# 
  3904  0A1B                     	;# 
  3905  0A1B                     	;# 
  3906  0A1B                     	;# 
  3907  0A1C                     	;# 
  3908  0A1C                     	;# 
  3909  0A1D                     	;# 
  3910  0A1D                     	;# 
  3911  0A1E                     	;# 
  3912  0A1E                     	;# 
  3913  0A1F                     	;# 
  3914  0A1F                     	;# 
  3915  0A1F                     	;# 
  3916  1E0F                     	;# 
  3917  1E10                     	;# 
  3918  1E11                     	;# 
  3919  1E12                     	;# 
  3920  1E13                     	;# 
  3921  1E14                     	;# 
  3922  1E15                     	;# 
  3923  1E16                     	;# 
  3924  1E17                     	;# 
  3925  1E18                     	;# 
  3926  1E19                     	;# 
  3927  1E1A                     	;# 
  3928  1E1B                     	;# 
  3929  1E1C                     	;# 
  3930  1E1D                     	;# 
  3931  1E1E                     	;# 
  3932  1E1F                     	;# 
  3933  1E20                     	;# 
  3934  1E21                     	;# 
  3935  1E22                     	;# 
  3936  1E23                     	;# 
  3937  1E24                     	;# 
  3938  1E25                     	;# 
  3939  1E26                     	;# 
  3940  1E27                     	;# 
  3941  1E28                     	;# 
  3942  1E29                     	;# 
  3943  1E2A                     	;# 
  3944  1E2B                     	;# 
  3945  1E2C                     	;# 
  3946  1E2D                     	;# 
  3947  1E2E                     	;# 
  3948  1E2F                     	;# 
  3949  1E30                     	;# 
  3950  1E31                     	;# 
  3951  1E32                     	;# 
  3952  1E33                     	;# 
  3953  1E34                     	;# 
  3954  1E35                     	;# 
  3955  1E36                     	;# 
  3956  1E37                     	;# 
  3957  1E8F                     	;# 
  3958  1E90                     	;# 
  3959  1E91                     	;# 
  3960  1E92                     	;# 
  3961  1E93                     	;# 
  3962  1E9C                     	;# 
  3963  1EA1                     	;# 
  3964  1EA2                     	;# 
  3965  1EB1                     	;# 
  3966  1EBB                     	;# 
  3967  1EBC                     	;# 
  3968  1EBD                     	;# 
  3969  1EBE                     	;# 
  3970  1EC3                     	;# 
  3971  1EC5                     	;# 
  3972  1EC6                     	;# 
  3973  1EC7                     	;# 
  3974  1ECB                     	;# 
  3975  1ECC                     	;# 
  3976  1ECD                     	;# 
  3977  1ECE                     	;# 
  3978  1F10                     	;# 
  3979  1F11                     	;# 
  3980  1F12                     	;# 
  3981  1F13                     	;# 
  3982  1F14                     	;# 
  3983  1F15                     	;# 
  3984  1F1C                     	;# 
  3985  1F1D                     	;# 
  3986  1F1E                     	;# 
  3987  1F1F                     	;# 
  3988  1F20                     	;# 
  3989  1F21                     	;# 
  3990  1F22                     	;# 
  3991  1F23                     	;# 
  3992  1F24                     	;# 
  3993  1F25                     	;# 
  3994  1F26                     	;# 
  3995  1F27                     	;# 
  3996  1F38                     	;# 
  3997  1F39                     	;# 
  3998  1F3A                     	;# 
  3999  1F3B                     	;# 
  4000  1F3C                     	;# 
  4001  1F3D                     	;# 
  4002  1F3E                     	;# 
  4003  1F3F                     	;# 
  4004  1F43                     	;# 
  4005  1F44                     	;# 
  4006  1F45                     	;# 
  4007  1F46                     	;# 
  4008  1F47                     	;# 
  4009  1F48                     	;# 
  4010  1F49                     	;# 
  4011  1F4A                     	;# 
  4012  1F4E                     	;# 
  4013  1F4F                     	;# 
  4014  1F50                     	;# 
  4015  1F51                     	;# 
  4016  1F52                     	;# 
  4017  1F53                     	;# 
  4018  1F54                     	;# 
  4019  1F55                     	;# 
  4020  1FE4                     	;# 
  4021  1FE5                     	;# 
  4022  1FE6                     	;# 
  4023  1FE7                     	;# 
  4024  1FE8                     	;# 
  4025  1FE8                     	;# 
  4026  1FE9                     	;# 
  4027  1FEA                     	;# 
  4028  1FEA                     	;# 
  4029  1FEB                     	;# 
  4030  1FED                     	;# 
  4031  1FEE                     	;# 
  4032  1FEF                     	;# 
  4033  0000                     	;# 
  4034  0001                     	;# 
  4035  0002                     	;# 
  4036  0003                     	;# 
  4037  0004                     	;# 
  4038  0005                     	;# 
  4039  0006                     	;# 
  4040  0007                     	;# 
  4041  0008                     	;# 
  4042  0009                     	;# 
  4043  000A                     	;# 
  4044  000B                     	;# 
  4045  000C                     	;# 
  4046  000D                     	;# 
  4047  000E                     	;# 
  4048  0012                     	;# 
  4049  0013                     	;# 
  4050  0014                     	;# 
  4051  0018                     	;# 
  4052  0019                     	;# 
  4053  001A                     	;# 
  4054  009B                     	;# 
  4055  009B                     	;# 
  4056  009C                     	;# 
  4057  009D                     	;# 
  4058  009E                     	;# 
  4059  009F                     	;# 
  4060  0119                     	;# 
  4061  0119                     	;# 
  4062  0119                     	;# 
  4063  011A                     	;# 
  4064  011A                     	;# 
  4065  011A                     	;# 
  4066  011B                     	;# 
  4067  011B                     	;# 
  4068  011B                     	;# 
  4069  011B                     	;# 
  4070  011B                     	;# 
  4071  011C                     	;# 
  4072  011C                     	;# 
  4073  011C                     	;# 
  4074  011D                     	;# 
  4075  011D                     	;# 
  4076  011D                     	;# 
  4077  011E                     	;# 
  4078  011E                     	;# 
  4079  011E                     	;# 
  4080  011F                     	;# 
  4081  011F                     	;# 
  4082  011F                     	;# 
  4083  011F                     	;# 
  4084  011F                     	;# 
  4085  018C                     	;# 
  4086  018D                     	;# 
  4087  018E                     	;# 
  4088  018F                     	;# 
  4089  0190                     	;# 
  4090  0191                     	;# 
  4091  0192                     	;# 
  4092  020C                     	;# 
  4093  020C                     	;# 
  4094  020D                     	;# 
  4095  020E                     	;# 
  4096  020F                     	;# 
  4097  020F                     	;# 
  4098  0210                     	;# 
  4099  0210                     	;# 
  4100  0211                     	;# 
  4101  0211                     	;# 
  4102  028C                     	;# 
  4103  028C                     	;# 
  4104  028D                     	;# 
  4105  028D                     	;# 
  4106  028E                     	;# 
  4107  028F                     	;# 
  4108  0290                     	;# 
  4109  0291                     	;# 
  4110  030C                     	;# 
  4111  030C                     	;# 
  4112  030D                     	;# 
  4113  030E                     	;# 
  4114  030F                     	;# 
  4115  0310                     	;# 
  4116  0310                     	;# 
  4117  0311                     	;# 
  4118  0312                     	;# 
  4119  0313                     	;# 
  4120  0314                     	;# 
  4121  0314                     	;# 
  4122  0315                     	;# 
  4123  0316                     	;# 
  4124  0318                     	;# 
  4125  0318                     	;# 
  4126  0319                     	;# 
  4127  031A                     	;# 
  4128  031C                     	;# 
  4129  031C                     	;# 
  4130  031D                     	;# 
  4131  031E                     	;# 
  4132  038C                     	;# 
  4133  038C                     	;# 
  4134  038D                     	;# 
  4135  038E                     	;# 
  4136  058C                     	;# 
  4137  058C                     	;# 
  4138  058D                     	;# 
  4139  058E                     	;# 
  4140  058F                     	;# 
  4141  058F                     	;# 
  4142  0590                     	;# 
  4143  0591                     	;# 
  4144  0592                     	;# 
  4145  0593                     	;# 
  4146  059C                     	;# 
  4147  059C                     	;# 
  4148  059D                     	;# 
  4149  059D                     	;# 
  4150  059E                     	;# 
  4151  059F                     	;# 
  4152  060C                     	;# 
  4153  060D                     	;# 
  4154  060E                     	;# 
  4155  060F                     	;# 
  4156  0610                     	;# 
  4157  0611                     	;# 
  4158  0612                     	;# 
  4159  0613                     	;# 
  4160  0614                     	;# 
  4161  070C                     	;# 
  4162  070D                     	;# 
  4163  070E                     	;# 
  4164  070F                     	;# 
  4165  0710                     	;# 
  4166  0711                     	;# 
  4167  0712                     	;# 
  4168  0713                     	;# 
  4169  0716                     	;# 
  4170  0717                     	;# 
  4171  0718                     	;# 
  4172  0719                     	;# 
  4173  071A                     	;# 
  4174  071B                     	;# 
  4175  071C                     	;# 
  4176  071D                     	;# 
  4177  0796                     	;# 
  4178  0797                     	;# 
  4179  0798                     	;# 
  4180  0799                     	;# 
  4181  079A                     	;# 
  4182  079B                     	;# 
  4183  080C                     	;# 
  4184  080D                     	;# 
  4185  080E                     	;# 
  4186  080F                     	;# 
  4187  0810                     	;# 
  4188  0811                     	;# 
  4189  0812                     	;# 
  4190  0813                     	;# 
  4191  0814                     	;# 
  4192  081A                     	;# 
  4193  081A                     	;# 
  4194  081B                     	;# 
  4195  081C                     	;# 
  4196  081C                     	;# 
  4197  081D                     	;# 
  4198  081E                     	;# 
  4199  081F                     	;# 
  4200  088C                     	;# 
  4201  088D                     	;# 
  4202  088E                     	;# 
  4203  088F                     	;# 
  4204  0890                     	;# 
  4205  0891                     	;# 
  4206  0892                     	;# 
  4207  0893                     	;# 
  4208  0895                     	;# 
  4209  0896                     	;# 
  4210  090C                     	;# 
  4211  090E                     	;# 
  4212  090F                     	;# 
  4213  091F                     	;# 
  4214  098F                     	;# 
  4215  098F                     	;# 
  4216  0990                     	;# 
  4217  0991                     	;# 
  4218  0992                     	;# 
  4219  0993                     	;# 
  4220  0994                     	;# 
  4221  0995                     	;# 
  4222  0996                     	;# 
  4223  0997                     	;# 
  4224  0A19                     	;# 
  4225  0A19                     	;# 
  4226  0A1A                     	;# 
  4227  0A1A                     	;# 
  4228  0A1B                     	;# 
  4229  0A1B                     	;# 
  4230  0A1B                     	;# 
  4231  0A1C                     	;# 
  4232  0A1C                     	;# 
  4233  0A1D                     	;# 
  4234  0A1D                     	;# 
  4235  0A1E                     	;# 
  4236  0A1E                     	;# 
  4237  0A1F                     	;# 
  4238  0A1F                     	;# 
  4239  0A1F                     	;# 
  4240  1E0F                     	;# 
  4241  1E10                     	;# 
  4242  1E11                     	;# 
  4243  1E12                     	;# 
  4244  1E13                     	;# 
  4245  1E14                     	;# 
  4246  1E15                     	;# 
  4247  1E16                     	;# 
  4248  1E17                     	;# 
  4249  1E18                     	;# 
  4250  1E19                     	;# 
  4251  1E1A                     	;# 
  4252  1E1B                     	;# 
  4253  1E1C                     	;# 
  4254  1E1D                     	;# 
  4255  1E1E                     	;# 
  4256  1E1F                     	;# 
  4257  1E20                     	;# 
  4258  1E21                     	;# 
  4259  1E22                     	;# 
  4260  1E23                     	;# 
  4261  1E24                     	;# 
  4262  1E25                     	;# 
  4263  1E26                     	;# 
  4264  1E27                     	;# 
  4265  1E28                     	;# 
  4266  1E29                     	;# 
  4267  1E2A                     	;# 
  4268  1E2B                     	;# 
  4269  1E2C                     	;# 
  4270  1E2D                     	;# 
  4271  1E2E                     	;# 
  4272  1E2F                     	;# 
  4273  1E30                     	;# 
  4274  1E31                     	;# 
  4275  1E32                     	;# 
  4276  1E33                     	;# 
  4277  1E34                     	;# 
  4278  1E35                     	;# 
  4279  1E36                     	;# 
  4280  1E37                     	;# 
  4281  1E8F                     	;# 
  4282  1E90                     	;# 
  4283  1E91                     	;# 
  4284  1E92                     	;# 
  4285  1E93                     	;# 
  4286  1E9C                     	;# 
  4287  1EA1                     	;# 
  4288  1EA2                     	;# 
  4289  1EB1                     	;# 
  4290  1EBB                     	;# 
  4291  1EBC                     	;# 
  4292  1EBD                     	;# 
  4293  1EBE                     	;# 
  4294  1EC3                     	;# 
  4295  1EC5                     	;# 
  4296  1EC6                     	;# 
  4297  1EC7                     	;# 
  4298  1ECB                     	;# 
  4299  1ECC                     	;# 
  4300  1ECD                     	;# 
  4301  1ECE                     	;# 
  4302  1F10                     	;# 
  4303  1F11                     	;# 
  4304  1F12                     	;# 
  4305  1F13                     	;# 
  4306  1F14                     	;# 
  4307  1F15                     	;# 
  4308  1F1C                     	;# 
  4309  1F1D                     	;# 
  4310  1F1E                     	;# 
  4311  1F1F                     	;# 
  4312  1F20                     	;# 
  4313  1F21                     	;# 
  4314  1F22                     	;# 
  4315  1F23                     	;# 
  4316  1F24                     	;# 
  4317  1F25                     	;# 
  4318  1F26                     	;# 
  4319  1F27                     	;# 
  4320  1F38                     	;# 
  4321  1F39                     	;# 
  4322  1F3A                     	;# 
  4323  1F3B                     	;# 
  4324  1F3C                     	;# 
  4325  1F3D                     	;# 
  4326  1F3E                     	;# 
  4327  1F3F                     	;# 
  4328  1F43                     	;# 
  4329  1F44                     	;# 
  4330  1F45                     	;# 
  4331  1F46                     	;# 
  4332  1F47                     	;# 
  4333  1F48                     	;# 
  4334  1F49                     	;# 
  4335  1F4A                     	;# 
  4336  1F4E                     	;# 
  4337  1F4F                     	;# 
  4338  1F50                     	;# 
  4339  1F51                     	;# 
  4340  1F52                     	;# 
  4341  1F53                     	;# 
  4342  1F54                     	;# 
  4343  1F55                     	;# 
  4344  1FE4                     	;# 
  4345  1FE5                     	;# 
  4346  1FE6                     	;# 
  4347  1FE7                     	;# 
  4348  1FE8                     	;# 
  4349  1FE8                     	;# 
  4350  1FE9                     	;# 
  4351  1FEA                     	;# 
  4352  1FEA                     	;# 
  4353  1FEB                     	;# 
  4354  1FED                     	;# 
  4355  1FEE                     	;# 
  4356  1FEF                     	;# 
  4357  0000                     	;# 
  4358  0001                     	;# 
  4359  0002                     	;# 
  4360  0003                     	;# 
  4361  0004                     	;# 
  4362  0005                     	;# 
  4363  0006                     	;# 
  4364  0007                     	;# 
  4365  0008                     	;# 
  4366  0009                     	;# 
  4367  000A                     	;# 
  4368  000B                     	;# 
  4369  000C                     	;# 
  4370  000D                     	;# 
  4371  000E                     	;# 
  4372  0012                     	;# 
  4373  0013                     	;# 
  4374  0014                     	;# 
  4375  0018                     	;# 
  4376  0019                     	;# 
  4377  001A                     	;# 
  4378  009B                     	;# 
  4379  009B                     	;# 
  4380  009C                     	;# 
  4381  009D                     	;# 
  4382  009E                     	;# 
  4383  009F                     	;# 
  4384  0119                     	;# 
  4385  0119                     	;# 
  4386  0119                     	;# 
  4387  011A                     	;# 
  4388  011A                     	;# 
  4389  011A                     	;# 
  4390  011B                     	;# 
  4391  011B                     	;# 
  4392  011B                     	;# 
  4393  011B                     	;# 
  4394  011B                     	;# 
  4395  011C                     	;# 
  4396  011C                     	;# 
  4397  011C                     	;# 
  4398  011D                     	;# 
  4399  011D                     	;# 
  4400  011D                     	;# 
  4401  011E                     	;# 
  4402  011E                     	;# 
  4403  011E                     	;# 
  4404  011F                     	;# 
  4405  011F                     	;# 
  4406  011F                     	;# 
  4407  011F                     	;# 
  4408  011F                     	;# 
  4409  018C                     	;# 
  4410  018D                     	;# 
  4411  018E                     	;# 
  4412  018F                     	;# 
  4413  0190                     	;# 
  4414  0191                     	;# 
  4415  0192                     	;# 
  4416  020C                     	;# 
  4417  020C                     	;# 
  4418  020D                     	;# 
  4419  020E                     	;# 
  4420  020F                     	;# 
  4421  020F                     	;# 
  4422  0210                     	;# 
  4423  0210                     	;# 
  4424  0211                     	;# 
  4425  0211                     	;# 
  4426  028C                     	;# 
  4427  028C                     	;# 
  4428  028D                     	;# 
  4429  028D                     	;# 
  4430  028E                     	;# 
  4431  028F                     	;# 
  4432  0290                     	;# 
  4433  0291                     	;# 
  4434  030C                     	;# 
  4435  030C                     	;# 
  4436  030D                     	;# 
  4437  030E                     	;# 
  4438  030F                     	;# 
  4439  0310                     	;# 
  4440  0310                     	;# 
  4441  0311                     	;# 
  4442  0312                     	;# 
  4443  0313                     	;# 
  4444  0314                     	;# 
  4445  0314                     	;# 
  4446  0315                     	;# 
  4447  0316                     	;# 
  4448  0318                     	;# 
  4449  0318                     	;# 
  4450  0319                     	;# 
  4451  031A                     	;# 
  4452  031C                     	;# 
  4453  031C                     	;# 
  4454  031D                     	;# 
  4455  031E                     	;# 
  4456  038C                     	;# 
  4457  038C                     	;# 
  4458  038D                     	;# 
  4459  038E                     	;# 
  4460  058C                     	;# 
  4461  058C                     	;# 
  4462  058D                     	;# 
  4463  058E                     	;# 
  4464  058F                     	;# 
  4465  058F                     	;# 
  4466  0590                     	;# 
  4467  0591                     	;# 
  4468  0592                     	;# 
  4469  0593                     	;# 
  4470  059C                     	;# 
  4471  059C                     	;# 
  4472  059D                     	;# 
  4473  059D                     	;# 
  4474  059E                     	;# 
  4475  059F                     	;# 
  4476  060C                     	;# 
  4477  060D                     	;# 
  4478  060E                     	;# 
  4479  060F                     	;# 
  4480  0610                     	;# 
  4481  0611                     	;# 
  4482  0612                     	;# 
  4483  0613                     	;# 
  4484  0614                     	;# 
  4485  070C                     	;# 
  4486  070D                     	;# 
  4487  070E                     	;# 
  4488  070F                     	;# 
  4489  0710                     	;# 
  4490  0711                     	;# 
  4491  0712                     	;# 
  4492  0713                     	;# 
  4493  0716                     	;# 
  4494  0717                     	;# 
  4495  0718                     	;# 
  4496  0719                     	;# 
  4497  071A                     	;# 
  4498  071B                     	;# 
  4499  071C                     	;# 
  4500  071D                     	;# 
  4501  0796                     	;# 
  4502  0797                     	;# 
  4503  0798                     	;# 
  4504  0799                     	;# 
  4505  079A                     	;# 
  4506  079B                     	;# 
  4507  080C                     	;# 
  4508  080D                     	;# 
  4509  080E                     	;# 
  4510  080F                     	;# 
  4511  0810                     	;# 
  4512  0811                     	;# 
  4513  0812                     	;# 
  4514  0813                     	;# 
  4515  0814                     	;# 
  4516  081A                     	;# 
  4517  081A                     	;# 
  4518  081B                     	;# 
  4519  081C                     	;# 
  4520  081C                     	;# 
  4521  081D                     	;# 
  4522  081E                     	;# 
  4523  081F                     	;# 
  4524  088C                     	;# 
  4525  088D                     	;# 
  4526  088E                     	;# 
  4527  088F                     	;# 
  4528  0890                     	;# 
  4529  0891                     	;# 
  4530  0892                     	;# 
  4531  0893                     	;# 
  4532  0895                     	;# 
  4533  0896                     	;# 
  4534  090C                     	;# 
  4535  090E                     	;# 
  4536  090F                     	;# 
  4537  091F                     	;# 
  4538  098F                     	;# 
  4539  098F                     	;# 
  4540  0990                     	;# 
  4541  0991                     	;# 
  4542  0992                     	;# 
  4543  0993                     	;# 
  4544  0994                     	;# 
  4545  0995                     	;# 
  4546  0996                     	;# 
  4547  0997                     	;# 
  4548  0A19                     	;# 
  4549  0A19                     	;# 
  4550  0A1A                     	;# 
  4551  0A1A                     	;# 
  4552  0A1B                     	;# 
  4553  0A1B                     	;# 
  4554  0A1B                     	;# 
  4555  0A1C                     	;# 
  4556  0A1C                     	;# 
  4557  0A1D                     	;# 
  4558  0A1D                     	;# 
  4559  0A1E                     	;# 
  4560  0A1E                     	;# 
  4561  0A1F                     	;# 
  4562  0A1F                     	;# 
  4563  0A1F                     	;# 
  4564  1E0F                     	;# 
  4565  1E10                     	;# 
  4566  1E11                     	;# 
  4567  1E12                     	;# 
  4568  1E13                     	;# 
  4569  1E14                     	;# 
  4570  1E15                     	;# 
  4571  1E16                     	;# 
  4572  1E17                     	;# 
  4573  1E18                     	;# 
  4574  1E19                     	;# 
  4575  1E1A                     	;# 
  4576  1E1B                     	;# 
  4577  1E1C                     	;# 
  4578  1E1D                     	;# 
  4579  1E1E                     	;# 
  4580  1E1F                     	;# 
  4581  1E20                     	;# 
  4582  1E21                     	;# 
  4583  1E22                     	;# 
  4584  1E23                     	;# 
  4585  1E24                     	;# 
  4586  1E25                     	;# 
  4587  1E26                     	;# 
  4588  1E27                     	;# 
  4589  1E28                     	;# 
  4590  1E29                     	;# 
  4591  1E2A                     	;# 
  4592  1E2B                     	;# 
  4593  1E2C                     	;# 
  4594  1E2D                     	;# 
  4595  1E2E                     	;# 
  4596  1E2F                     	;# 
  4597  1E30                     	;# 
  4598  1E31                     	;# 
  4599  1E32                     	;# 
  4600  1E33                     	;# 
  4601  1E34                     	;# 
  4602  1E35                     	;# 
  4603  1E36                     	;# 
  4604  1E37                     	;# 
  4605  1E8F                     	;# 
  4606  1E90                     	;# 
  4607  1E91                     	;# 
  4608  1E92                     	;# 
  4609  1E93                     	;# 
  4610  1E9C                     	;# 
  4611  1EA1                     	;# 
  4612  1EA2                     	;# 
  4613  1EB1                     	;# 
  4614  1EBB                     	;# 
  4615  1EBC                     	;# 
  4616  1EBD                     	;# 
  4617  1EBE                     	;# 
  4618  1EC3                     	;# 
  4619  1EC5                     	;# 
  4620  1EC6                     	;# 
  4621  1EC7                     	;# 
  4622  1ECB                     	;# 
  4623  1ECC                     	;# 
  4624  1ECD                     	;# 
  4625  1ECE                     	;# 
  4626  1F10                     	;# 
  4627  1F11                     	;# 
  4628  1F12                     	;# 
  4629  1F13                     	;# 
  4630  1F14                     	;# 
  4631  1F15                     	;# 
  4632  1F1C                     	;# 
  4633  1F1D                     	;# 
  4634  1F1E                     	;# 
  4635  1F1F                     	;# 
  4636  1F20                     	;# 
  4637  1F21                     	;# 
  4638  1F22                     	;# 
  4639  1F23                     	;# 
  4640  1F24                     	;# 
  4641  1F25                     	;# 
  4642  1F26                     	;# 
  4643  1F27                     	;# 
  4644  1F38                     	;# 
  4645  1F39                     	;# 
  4646  1F3A                     	;# 
  4647  1F3B                     	;# 
  4648  1F3C                     	;# 
  4649  1F3D                     	;# 
  4650  1F3E                     	;# 
  4651  1F3F                     	;# 
  4652  1F43                     	;# 
  4653  1F44                     	;# 
  4654  1F45                     	;# 
  4655  1F46                     	;# 
  4656  1F47                     	;# 
  4657  1F48                     	;# 
  4658  1F49                     	;# 
  4659  1F4A                     	;# 
  4660  1F4E                     	;# 
  4661  1F4F                     	;# 
  4662  1F50                     	;# 
  4663  1F51                     	;# 
  4664  1F52                     	;# 
  4665  1F53                     	;# 
  4666  1F54                     	;# 
  4667  1F55                     	;# 
  4668  1FE4                     	;# 
  4669  1FE5                     	;# 
  4670  1FE6                     	;# 
  4671  1FE7                     	;# 
  4672  1FE8                     	;# 
  4673  1FE8                     	;# 
  4674  1FE9                     	;# 
  4675  1FEA                     	;# 
  4676  1FEA                     	;# 
  4677  1FEB                     	;# 
  4678  1FED                     	;# 
  4679  1FEE                     	;# 
  4680  1FEF                     	;# 
  4681  0000                     	;# 
  4682  0001                     	;# 
  4683  0002                     	;# 
  4684  0003                     	;# 
  4685  0004                     	;# 
  4686  0005                     	;# 
  4687  0006                     	;# 
  4688  0007                     	;# 
  4689  0008                     	;# 
  4690  0009                     	;# 
  4691  000A                     	;# 
  4692  000B                     	;# 
  4693  000C                     	;# 
  4694  000D                     	;# 
  4695  000E                     	;# 
  4696  0012                     	;# 
  4697  0013                     	;# 
  4698  0014                     	;# 
  4699  0018                     	;# 
  4700  0019                     	;# 
  4701  001A                     	;# 
  4702  009B                     	;# 
  4703  009B                     	;# 
  4704  009C                     	;# 
  4705  009D                     	;# 
  4706  009E                     	;# 
  4707  009F                     	;# 
  4708  0119                     	;# 
  4709  0119                     	;# 
  4710  0119                     	;# 
  4711  011A                     	;# 
  4712  011A                     	;# 
  4713  011A                     	;# 
  4714  011B                     	;# 
  4715  011B                     	;# 
  4716  011B                     	;# 
  4717  011B                     	;# 
  4718  011B                     	;# 
  4719  011C                     	;# 
  4720  011C                     	;# 
  4721  011C                     	;# 
  4722  011D                     	;# 
  4723  011D                     	;# 
  4724  011D                     	;# 
  4725  011E                     	;# 
  4726  011E                     	;# 
  4727  011E                     	;# 
  4728  011F                     	;# 
  4729  011F                     	;# 
  4730  011F                     	;# 
  4731  011F                     	;# 
  4732  011F                     	;# 
  4733  018C                     	;# 
  4734  018D                     	;# 
  4735  018E                     	;# 
  4736  018F                     	;# 
  4737  0190                     	;# 
  4738  0191                     	;# 
  4739  0192                     	;# 
  4740  020C                     	;# 
  4741  020C                     	;# 
  4742  020D                     	;# 
  4743  020E                     	;# 
  4744  020F                     	;# 
  4745  020F                     	;# 
  4746  0210                     	;# 
  4747  0210                     	;# 
  4748  0211                     	;# 
  4749  0211                     	;# 
  4750  028C                     	;# 
  4751  028C                     	;# 
  4752  028D                     	;# 
  4753  028D                     	;# 
  4754  028E                     	;# 
  4755  028F                     	;# 
  4756  0290                     	;# 
  4757  0291                     	;# 
  4758  030C                     	;# 
  4759  030C                     	;# 
  4760  030D                     	;# 
  4761  030E                     	;# 
  4762  030F                     	;# 
  4763  0310                     	;# 
  4764  0310                     	;# 
  4765  0311                     	;# 
  4766  0312                     	;# 
  4767  0313                     	;# 
  4768  0314                     	;# 
  4769  0314                     	;# 
  4770  0315                     	;# 
  4771  0316                     	;# 
  4772  0318                     	;# 
  4773  0318                     	;# 
  4774  0319                     	;# 
  4775  031A                     	;# 
  4776  031C                     	;# 
  4777  031C                     	;# 
  4778  031D                     	;# 
  4779  031E                     	;# 
  4780  038C                     	;# 
  4781  038C                     	;# 
  4782  038D                     	;# 
  4783  038E                     	;# 
  4784  058C                     	;# 
  4785  058C                     	;# 
  4786  058D                     	;# 
  4787  058E                     	;# 
  4788  058F                     	;# 
  4789  058F                     	;# 
  4790  0590                     	;# 
  4791  0591                     	;# 
  4792  0592                     	;# 
  4793  0593                     	;# 
  4794  059C                     	;# 
  4795  059C                     	;# 
  4796  059D                     	;# 
  4797  059D                     	;# 
  4798  059E                     	;# 
  4799  059F                     	;# 
  4800  060C                     	;# 
  4801  060D                     	;# 
  4802  060E                     	;# 
  4803  060F                     	;# 
  4804  0610                     	;# 
  4805  0611                     	;# 
  4806  0612                     	;# 
  4807  0613                     	;# 
  4808  0614                     	;# 
  4809  070C                     	;# 
  4810  070D                     	;# 
  4811  070E                     	;# 
  4812  070F                     	;# 
  4813  0710                     	;# 
  4814  0711                     	;# 
  4815  0712                     	;# 
  4816  0713                     	;# 
  4817  0716                     	;# 
  4818  0717                     	;# 
  4819  0718                     	;# 
  4820  0719                     	;# 
  4821  071A                     	;# 
  4822  071B                     	;# 
  4823  071C                     	;# 
  4824  071D                     	;# 
  4825  0796                     	;# 
  4826  0797                     	;# 
  4827  0798                     	;# 
  4828  0799                     	;# 
  4829  079A                     	;# 
  4830  079B                     	;# 
  4831  080C                     	;# 
  4832  080D                     	;# 
  4833  080E                     	;# 
  4834  080F                     	;# 
  4835  0810                     	;# 
  4836  0811                     	;# 
  4837  0812                     	;# 
  4838  0813                     	;# 
  4839  0814                     	;# 
  4840  081A                     	;# 
  4841  081A                     	;# 
  4842  081B                     	;# 
  4843  081C                     	;# 
  4844  081C                     	;# 
  4845  081D                     	;# 
  4846  081E                     	;# 
  4847  081F                     	;# 
  4848  088C                     	;# 
  4849  088D                     	;# 
  4850  088E                     	;# 
  4851  088F                     	;# 
  4852  0890                     	;# 
  4853  0891                     	;# 
  4854  0892                     	;# 
  4855  0893                     	;# 
  4856  0895                     	;# 
  4857  0896                     	;# 
  4858  090C                     	;# 
  4859  090E                     	;# 
  4860  090F                     	;# 
  4861  091F                     	;# 
  4862  098F                     	;# 
  4863  098F                     	;# 
  4864  0990                     	;# 
  4865  0991                     	;# 
  4866  0992                     	;# 
  4867  0993                     	;# 
  4868  0994                     	;# 
  4869  0995                     	;# 
  4870  0996                     	;# 
  4871  0997                     	;# 
  4872  0A19                     	;# 
  4873  0A19                     	;# 
  4874  0A1A                     	;# 
  4875  0A1A                     	;# 
  4876  0A1B                     	;# 
  4877  0A1B                     	;# 
  4878  0A1B                     	;# 
  4879  0A1C                     	;# 
  4880  0A1C                     	;# 
  4881  0A1D                     	;# 
  4882  0A1D                     	;# 
  4883  0A1E                     	;# 
  4884  0A1E                     	;# 
  4885  0A1F                     	;# 
  4886  0A1F                     	;# 
  4887  0A1F                     	;# 
  4888  1E0F                     	;# 
  4889  1E10                     	;# 
  4890  1E11                     	;# 
  4891  1E12                     	;# 
  4892  1E13                     	;# 
  4893  1E14                     	;# 
  4894  1E15                     	;# 
  4895  1E16                     	;# 
  4896  1E17                     	;# 
  4897  1E18                     	;# 
  4898  1E19                     	;# 
  4899  1E1A                     	;# 
  4900  1E1B                     	;# 
  4901  1E1C                     	;# 
  4902  1E1D                     	;# 
  4903  1E1E                     	;# 
  4904  1E1F                     	;# 
  4905  1E20                     	;# 
  4906  1E21                     	;# 
  4907  1E22                     	;# 
  4908  1E23                     	;# 
  4909  1E24                     	;# 
  4910  1E25                     	;# 
  4911  1E26                     	;# 
  4912  1E27                     	;# 
  4913  1E28                     	;# 
  4914  1E29                     	;# 
  4915  1E2A                     	;# 
  4916  1E2B                     	;# 
  4917  1E2C                     	;# 
  4918  1E2D                     	;# 
  4919  1E2E                     	;# 
  4920  1E2F                     	;# 
  4921  1E30                     	;# 
  4922  1E31                     	;# 
  4923  1E32                     	;# 
  4924  1E33                     	;# 
  4925  1E34                     	;# 
  4926  1E35                     	;# 
  4927  1E36                     	;# 
  4928  1E37                     	;# 
  4929  1E8F                     	;# 
  4930  1E90                     	;# 
  4931  1E91                     	;# 
  4932  1E92                     	;# 
  4933  1E93                     	;# 
  4934  1E9C                     	;# 
  4935  1EA1                     	;# 
  4936  1EA2                     	;# 
  4937  1EB1                     	;# 
  4938  1EBB                     	;# 
  4939  1EBC                     	;# 
  4940  1EBD                     	;# 
  4941  1EBE                     	;# 
  4942  1EC3                     	;# 
  4943  1EC5                     	;# 
  4944  1EC6                     	;# 
  4945  1EC7                     	;# 
  4946  1ECB                     	;# 
  4947  1ECC                     	;# 
  4948  1ECD                     	;# 
  4949  1ECE                     	;# 
  4950  1F10                     	;# 
  4951  1F11                     	;# 
  4952  1F12                     	;# 
  4953  1F13                     	;# 
  4954  1F14                     	;# 
  4955  1F15                     	;# 
  4956  1F1C                     	;# 
  4957  1F1D                     	;# 
  4958  1F1E                     	;# 
  4959  1F1F                     	;# 
  4960  1F20                     	;# 
  4961  1F21                     	;# 
  4962  1F22                     	;# 
  4963  1F23                     	;# 
  4964  1F24                     	;# 
  4965  1F25                     	;# 
  4966  1F26                     	;# 
  4967  1F27                     	;# 
  4968  1F38                     	;# 
  4969  1F39                     	;# 
  4970  1F3A                     	;# 
  4971  1F3B                     	;# 
  4972  1F3C                     	;# 
  4973  1F3D                     	;# 
  4974  1F3E                     	;# 
  4975  1F3F                     	;# 
  4976  1F43                     	;# 
  4977  1F44                     	;# 
  4978  1F45                     	;# 
  4979  1F46                     	;# 
  4980  1F47                     	;# 
  4981  1F48                     	;# 
  4982  1F49                     	;# 
  4983  1F4A                     	;# 
  4984  1F4E                     	;# 
  4985  1F4F                     	;# 
  4986  1F50                     	;# 
  4987  1F51                     	;# 
  4988  1F52                     	;# 
  4989  1F53                     	;# 
  4990  1F54                     	;# 
  4991  1F55                     	;# 
  4992  1FE4                     	;# 
  4993  1FE5                     	;# 
  4994  1FE6                     	;# 
  4995  1FE7                     	;# 
  4996  1FE8                     	;# 
  4997  1FE8                     	;# 
  4998  1FE9                     	;# 
  4999  1FEA                     	;# 
  5000  1FEA                     	;# 
  5001  1FEB                     	;# 
  5002  1FED                     	;# 
  5003  1FEE                     	;# 
  5004  1FEF                     	;# 
  5005  0000                     	;# 
  5006  0001                     	;# 
  5007  0002                     	;# 
  5008  0003                     	;# 
  5009  0004                     	;# 
  5010  0005                     	;# 
  5011  0006                     	;# 
  5012  0007                     	;# 
  5013  0008                     	;# 
  5014  0009                     	;# 
  5015  000A                     	;# 
  5016  000B                     	;# 
  5017  000C                     	;# 
  5018  000D                     	;# 
  5019  000E                     	;# 
  5020  0012                     	;# 
  5021  0013                     	;# 
  5022  0014                     	;# 
  5023  0018                     	;# 
  5024  0019                     	;# 
  5025  001A                     	;# 
  5026  009B                     	;# 
  5027  009B                     	;# 
  5028  009C                     	;# 
  5029  009D                     	;# 
  5030  009E                     	;# 
  5031  009F                     	;# 
  5032  0119                     	;# 
  5033  0119                     	;# 
  5034  0119                     	;# 
  5035  011A                     	;# 
  5036  011A                     	;# 
  5037  011A                     	;# 
  5038  011B                     	;# 
  5039  011B                     	;# 
  5040  011B                     	;# 
  5041  011B                     	;# 
  5042  011B                     	;# 
  5043  011C                     	;# 
  5044  011C                     	;# 
  5045  011C                     	;# 
  5046  011D                     	;# 
  5047  011D                     	;# 
  5048  011D                     	;# 
  5049  011E                     	;# 
  5050  011E                     	;# 
  5051  011E                     	;# 
  5052  011F                     	;# 
  5053  011F                     	;# 
  5054  011F                     	;# 
  5055  011F                     	;# 
  5056  011F                     	;# 
  5057  018C                     	;# 
  5058  018D                     	;# 
  5059  018E                     	;# 
  5060  018F                     	;# 
  5061  0190                     	;# 
  5062  0191                     	;# 
  5063  0192                     	;# 
  5064  020C                     	;# 
  5065  020C                     	;# 
  5066  020D                     	;# 
  5067  020E                     	;# 
  5068  020F                     	;# 
  5069  020F                     	;# 
  5070  0210                     	;# 
  5071  0210                     	;# 
  5072  0211                     	;# 
  5073  0211                     	;# 
  5074  028C                     	;# 
  5075  028C                     	;# 
  5076  028D                     	;# 
  5077  028D                     	;# 
  5078  028E                     	;# 
  5079  028F                     	;# 
  5080  0290                     	;# 
  5081  0291                     	;# 
  5082  030C                     	;# 
  5083  030C                     	;# 
  5084  030D                     	;# 
  5085  030E                     	;# 
  5086  030F                     	;# 
  5087  0310                     	;# 
  5088  0310                     	;# 
  5089  0311                     	;# 
  5090  0312                     	;# 
  5091  0313                     	;# 
  5092  0314                     	;# 
  5093  0314                     	;# 
  5094  0315                     	;# 
  5095  0316                     	;# 
  5096  0318                     	;# 
  5097  0318                     	;# 
  5098  0319                     	;# 
  5099  031A                     	;# 
  5100  031C                     	;# 
  5101  031C                     	;# 
  5102  031D                     	;# 
  5103  031E                     	;# 
  5104  038C                     	;# 
  5105  038C                     	;# 
  5106  038D                     	;# 
  5107  038E                     	;# 
  5108  058C                     	;# 
  5109  058C                     	;# 
  5110  058D                     	;# 
  5111  058E                     	;# 
  5112  058F                     	;# 
  5113  058F                     	;# 
  5114  0590                     	;# 
  5115  0591                     	;# 
  5116  0592                     	;# 
  5117  0593                     	;# 
  5118  059C                     	;# 
  5119  059C                     	;# 
  5120  059D                     	;# 
  5121  059D                     	;# 
  5122  059E                     	;# 
  5123  059F                     	;# 
  5124  060C                     	;# 
  5125  060D                     	;# 
  5126  060E                     	;# 
  5127  060F                     	;# 
  5128  0610                     	;# 
  5129  0611                     	;# 
  5130  0612                     	;# 
  5131  0613                     	;# 
  5132  0614                     	;# 
  5133  070C                     	;# 
  5134  070D                     	;# 
  5135  070E                     	;# 
  5136  070F                     	;# 
  5137  0710                     	;# 
  5138  0711                     	;# 
  5139  0712                     	;# 
  5140  0713                     	;# 
  5141  0716                     	;# 
  5142  0717                     	;# 
  5143  0718                     	;# 
  5144  0719                     	;# 
  5145  071A                     	;# 
  5146  071B                     	;# 
  5147  071C                     	;# 
  5148  071D                     	;# 
  5149  0796                     	;# 
  5150  0797                     	;# 
  5151  0798                     	;# 
  5152  0799                     	;# 
  5153  079A                     	;# 
  5154  079B                     	;# 
  5155  080C                     	;# 
  5156  080D                     	;# 
  5157  080E                     	;# 
  5158  080F                     	;# 
  5159  0810                     	;# 
  5160  0811                     	;# 
  5161  0812                     	;# 
  5162  0813                     	;# 
  5163  0814                     	;# 
  5164  081A                     	;# 
  5165  081A                     	;# 
  5166  081B                     	;# 
  5167  081C                     	;# 
  5168  081C                     	;# 
  5169  081D                     	;# 
  5170  081E                     	;# 
  5171  081F                     	;# 
  5172  088C                     	;# 
  5173  088D                     	;# 
  5174  088E                     	;# 
  5175  088F                     	;# 
  5176  0890                     	;# 
  5177  0891                     	;# 
  5178  0892                     	;# 
  5179  0893                     	;# 
  5180  0895                     	;# 
  5181  0896                     	;# 
  5182  090C                     	;# 
  5183  090E                     	;# 
  5184  090F                     	;# 
  5185  091F                     	;# 
  5186  098F                     	;# 
  5187  098F                     	;# 
  5188  0990                     	;# 
  5189  0991                     	;# 
  5190  0992                     	;# 
  5191  0993                     	;# 
  5192  0994                     	;# 
  5193  0995                     	;# 
  5194  0996                     	;# 
  5195  0997                     	;# 
  5196  0A19                     	;# 
  5197  0A19                     	;# 
  5198  0A1A                     	;# 
  5199  0A1A                     	;# 
  5200  0A1B                     	;# 
  5201  0A1B                     	;# 
  5202  0A1B                     	;# 
  5203  0A1C                     	;# 
  5204  0A1C                     	;# 
  5205  0A1D                     	;# 
  5206  0A1D                     	;# 
  5207  0A1E                     	;# 
  5208  0A1E                     	;# 
  5209  0A1F                     	;# 
  5210  0A1F                     	;# 
  5211  0A1F                     	;# 
  5212  1E0F                     	;# 
  5213  1E10                     	;# 
  5214  1E11                     	;# 
  5215  1E12                     	;# 
  5216  1E13                     	;# 
  5217  1E14                     	;# 
  5218  1E15                     	;# 
  5219  1E16                     	;# 
  5220  1E17                     	;# 
  5221  1E18                     	;# 
  5222  1E19                     	;# 
  5223  1E1A                     	;# 
  5224  1E1B                     	;# 
  5225  1E1C                     	;# 
  5226  1E1D                     	;# 
  5227  1E1E                     	;# 
  5228  1E1F                     	;# 
  5229  1E20                     	;# 
  5230  1E21                     	;# 
  5231  1E22                     	;# 
  5232  1E23                     	;# 
  5233  1E24                     	;# 
  5234  1E25                     	;# 
  5235  1E26                     	;# 
  5236  1E27                     	;# 
  5237  1E28                     	;# 
  5238  1E29                     	;# 
  5239  1E2A                     	;# 
  5240  1E2B                     	;# 
  5241  1E2C                     	;# 
  5242  1E2D                     	;# 
  5243  1E2E                     	;# 
  5244  1E2F                     	;# 
  5245  1E30                     	;# 
  5246  1E31                     	;# 
  5247  1E32                     	;# 
  5248  1E33                     	;# 
  5249  1E34                     	;# 
  5250  1E35                     	;# 
  5251  1E36                     	;# 
  5252  1E37                     	;# 
  5253  1E8F                     	;# 
  5254  1E90                     	;# 
  5255  1E91                     	;# 
  5256  1E92                     	;# 
  5257  1E93                     	;# 
  5258  1E9C                     	;# 
  5259  1EA1                     	;# 
  5260  1EA2                     	;# 
  5261  1EB1                     	;# 
  5262  1EBB                     	;# 
  5263  1EBC                     	;# 
  5264  1EBD                     	;# 
  5265  1EBE                     	;# 
  5266  1EC3                     	;# 
  5267  1EC5                     	;# 
  5268  1EC6                     	;# 
  5269  1EC7                     	;# 
  5270  1ECB                     	;# 
  5271  1ECC                     	;# 
  5272  1ECD                     	;# 
  5273  1ECE                     	;# 
  5274  1F10                     	;# 
  5275  1F11                     	;# 
  5276  1F12                     	;# 
  5277  1F13                     	;# 
  5278  1F14                     	;# 
  5279  1F15                     	;# 
  5280  1F1C                     	;# 
  5281  1F1D                     	;# 
  5282  1F1E                     	;# 
  5283  1F1F                     	;# 
  5284  1F20                     	;# 
  5285  1F21                     	;# 
  5286  1F22                     	;# 
  5287  1F23                     	;# 
  5288  1F24                     	;# 
  5289  1F25                     	;# 
  5290  1F26                     	;# 
  5291  1F27                     	;# 
  5292  1F38                     	;# 
  5293  1F39                     	;# 
  5294  1F3A                     	;# 
  5295  1F3B                     	;# 
  5296  1F3C                     	;# 
  5297  1F3D                     	;# 
  5298  1F3E                     	;# 
  5299  1F3F                     	;# 
  5300  1F43                     	;# 
  5301  1F44                     	;# 
  5302  1F45                     	;# 
  5303  1F46                     	;# 
  5304  1F47                     	;# 
  5305  1F48                     	;# 
  5306  1F49                     	;# 
  5307  1F4A                     	;# 
  5308  1F4E                     	;# 
  5309  1F4F                     	;# 
  5310  1F50                     	;# 
  5311  1F51                     	;# 
  5312  1F52                     	;# 
  5313  1F53                     	;# 
  5314  1F54                     	;# 
  5315  1F55                     	;# 
  5316  1FE4                     	;# 
  5317  1FE5                     	;# 
  5318  1FE6                     	;# 
  5319  1FE7                     	;# 
  5320  1FE8                     	;# 
  5321  1FE8                     	;# 
  5322  1FE9                     	;# 
  5323  1FEA                     	;# 
  5324  1FEA                     	;# 
  5325  1FEB                     	;# 
  5326  1FED                     	;# 
  5327  1FEE                     	;# 
  5328  1FEF                     	;# 
  5329  0000                     	;# 
  5330  0001                     	;# 
  5331  0002                     	;# 
  5332  0003                     	;# 
  5333  0004                     	;# 
  5334  0005                     	;# 
  5335  0006                     	;# 
  5336  0007                     	;# 
  5337  0008                     	;# 
  5338  0009                     	;# 
  5339  000A                     	;# 
  5340  000B                     	;# 
  5341  000C                     	;# 
  5342  000D                     	;# 
  5343  000E                     	;# 
  5344  0012                     	;# 
  5345  0013                     	;# 
  5346  0014                     	;# 
  5347  0018                     	;# 
  5348  0019                     	;# 
  5349  001A                     	;# 
  5350  009B                     	;# 
  5351  009B                     	;# 
  5352  009C                     	;# 
  5353  009D                     	;# 
  5354  009E                     	;# 
  5355  009F                     	;# 
  5356  0119                     	;# 
  5357  0119                     	;# 
  5358  0119                     	;# 
  5359  011A                     	;# 
  5360  011A                     	;# 
  5361  011A                     	;# 
  5362  011B                     	;# 
  5363  011B                     	;# 
  5364  011B                     	;# 
  5365  011B                     	;# 
  5366  011B                     	;# 
  5367  011C                     	;# 
  5368  011C                     	;# 
  5369  011C                     	;# 
  5370  011D                     	;# 
  5371  011D                     	;# 
  5372  011D                     	;# 
  5373  011E                     	;# 
  5374  011E                     	;# 
  5375  011E                     	;# 
  5376  011F                     	;# 
  5377  011F                     	;# 
  5378  011F                     	;# 
  5379  011F                     	;# 
  5380  011F                     	;# 
  5381  018C                     	;# 
  5382  018D                     	;# 
  5383  018E                     	;# 
  5384  018F                     	;# 
  5385  0190                     	;# 
  5386  0191                     	;# 
  5387  0192                     	;# 
  5388  020C                     	;# 
  5389  020C                     	;# 
  5390  020D                     	;# 
  5391  020E                     	;# 
  5392  020F                     	;# 
  5393  020F                     	;# 
  5394  0210                     	;# 
  5395  0210                     	;# 
  5396  0211                     	;# 
  5397  0211                     	;# 
  5398  028C                     	;# 
  5399  028C                     	;# 
  5400  028D                     	;# 
  5401  028D                     	;# 
  5402  028E                     	;# 
  5403  028F                     	;# 
  5404  0290                     	;# 
  5405  0291                     	;# 
  5406  030C                     	;# 
  5407  030C                     	;# 
  5408  030D                     	;# 
  5409  030E                     	;# 
  5410  030F                     	;# 
  5411  0310                     	;# 
  5412  0310                     	;# 
  5413  0311                     	;# 
  5414  0312                     	;# 
  5415  0313                     	;# 
  5416  0314                     	;# 
  5417  0314                     	;# 
  5418  0315                     	;# 
  5419  0316                     	;# 
  5420  0318                     	;# 
  5421  0318                     	;# 
  5422  0319                     	;# 
  5423  031A                     	;# 
  5424  031C                     	;# 
  5425  031C                     	;# 
  5426  031D                     	;# 
  5427  031E                     	;# 
  5428  038C                     	;# 
  5429  038C                     	;# 
  5430  038D                     	;# 
  5431  038E                     	;# 
  5432  058C                     	;# 
  5433  058C                     	;# 
  5434  058D                     	;# 
  5435  058E                     	;# 
  5436  058F                     	;# 
  5437  058F                     	;# 
  5438  0590                     	;# 
  5439  0591                     	;# 
  5440  0592                     	;# 
  5441  0593                     	;# 
  5442  059C                     	;# 
  5443  059C                     	;# 
  5444  059D                     	;# 
  5445  059D                     	;# 
  5446  059E                     	;# 
  5447  059F                     	;# 
  5448  060C                     	;# 
  5449  060D                     	;# 
  5450  060E                     	;# 
  5451  060F                     	;# 
  5452  0610                     	;# 
  5453  0611                     	;# 
  5454  0612                     	;# 
  5455  0613                     	;# 
  5456  0614                     	;# 
  5457  070C                     	;# 
  5458  070D                     	;# 
  5459  070E                     	;# 
  5460  070F                     	;# 
  5461  0710                     	;# 
  5462  0711                     	;# 
  5463  0712                     	;# 
  5464  0713                     	;# 
  5465  0716                     	;# 
  5466  0717                     	;# 
  5467  0718                     	;# 
  5468  0719                     	;# 
  5469  071A                     	;# 
  5470  071B                     	;# 
  5471  071C                     	;# 
  5472  071D                     	;# 
  5473  0796                     	;# 
  5474  0797                     	;# 
  5475  0798                     	;# 
  5476  0799                     	;# 
  5477  079A                     	;# 
  5478  079B                     	;# 
  5479  080C                     	;# 
  5480  080D                     	;# 
  5481  080E                     	;# 
  5482  080F                     	;# 
  5483  0810                     	;# 
  5484  0811                     	;# 
  5485  0812                     	;# 
  5486  0813                     	;# 
  5487  0814                     	;# 
  5488  081A                     	;# 
  5489  081A                     	;# 
  5490  081B                     	;# 
  5491  081C                     	;# 
  5492  081C                     	;# 
  5493  081D                     	;# 
  5494  081E                     	;# 
  5495  081F                     	;# 
  5496  088C                     	;# 
  5497  088D                     	;# 
  5498  088E                     	;# 
  5499  088F                     	;# 
  5500  0890                     	;# 
  5501  0891                     	;# 
  5502  0892                     	;# 
  5503  0893                     	;# 
  5504  0895                     	;# 
  5505  0896                     	;# 
  5506  090C                     	;# 
  5507  090E                     	;# 
  5508  090F                     	;# 
  5509  091F                     	;# 
  5510  098F                     	;# 
  5511  098F                     	;# 
  5512  0990                     	;# 
  5513  0991                     	;# 
  5514  0992                     	;# 
  5515  0993                     	;# 
  5516  0994                     	;# 
  5517  0995                     	;# 
  5518  0996                     	;# 
  5519  0997                     	;# 
  5520  0A19                     	;# 
  5521  0A19                     	;# 
  5522  0A1A                     	;# 
  5523  0A1A                     	;# 
  5524  0A1B                     	;# 
  5525  0A1B                     	;# 
  5526  0A1B                     	;# 
  5527  0A1C                     	;# 
  5528  0A1C                     	;# 
  5529  0A1D                     	;# 
  5530  0A1D                     	;# 
  5531  0A1E                     	;# 
  5532  0A1E                     	;# 
  5533  0A1F                     	;# 
  5534  0A1F                     	;# 
  5535  0A1F                     	;# 
  5536  1E0F                     	;# 
  5537  1E10                     	;# 
  5538  1E11                     	;# 
  5539  1E12                     	;# 
  5540  1E13                     	;# 
  5541  1E14                     	;# 
  5542  1E15                     	;# 
  5543  1E16                     	;# 
  5544  1E17                     	;# 
  5545  1E18                     	;# 
  5546  1E19                     	;# 
  5547  1E1A                     	;# 
  5548  1E1B                     	;# 
  5549  1E1C                     	;# 
  5550  1E1D                     	;# 
  5551  1E1E                     	;# 
  5552  1E1F                     	;# 
  5553  1E20                     	;# 
  5554  1E21                     	;# 
  5555  1E22                     	;# 
  5556  1E23                     	;# 
  5557  1E24                     	;# 
  5558  1E25                     	;# 
  5559  1E26                     	;# 
  5560  1E27                     	;# 
  5561  1E28                     	;# 
  5562  1E29                     	;# 
  5563  1E2A                     	;# 
  5564  1E2B                     	;# 
  5565  1E2C                     	;# 
  5566  1E2D                     	;# 
  5567  1E2E                     	;# 
  5568  1E2F                     	;# 
  5569  1E30                     	;# 
  5570  1E31                     	;# 
  5571  1E32                     	;# 
  5572  1E33                     	;# 
  5573  1E34                     	;# 
  5574  1E35                     	;# 
  5575  1E36                     	;# 
  5576  1E37                     	;# 
  5577  1E8F                     	;# 
  5578  1E90                     	;# 
  5579  1E91                     	;# 
  5580  1E92                     	;# 
  5581  1E93                     	;# 
  5582  1E9C                     	;# 
  5583  1EA1                     	;# 
  5584  1EA2                     	;# 
  5585  1EB1                     	;# 
  5586  1EBB                     	;# 
  5587  1EBC                     	;# 
  5588  1EBD                     	;# 
  5589  1EBE                     	;# 
  5590  1EC3                     	;# 
  5591  1EC5                     	;# 
  5592  1EC6                     	;# 
  5593  1EC7                     	;# 
  5594  1ECB                     	;# 
  5595  1ECC                     	;# 
  5596  1ECD                     	;# 
  5597  1ECE                     	;# 
  5598  1F10                     	;# 
  5599  1F11                     	;# 
  5600  1F12                     	;# 
  5601  1F13                     	;# 
  5602  1F14                     	;# 
  5603  1F15                     	;# 
  5604  1F1C                     	;# 
  5605  1F1D                     	;# 
  5606  1F1E                     	;# 
  5607  1F1F                     	;# 
  5608  1F20                     	;# 
  5609  1F21                     	;# 
  5610  1F22                     	;# 
  5611  1F23                     	;# 
  5612  1F24                     	;# 
  5613  1F25                     	;# 
  5614  1F26                     	;# 
  5615  1F27                     	;# 
  5616  1F38                     	;# 
  5617  1F39                     	;# 
  5618  1F3A                     	;# 
  5619  1F3B                     	;# 
  5620  1F3C                     	;# 
  5621  1F3D                     	;# 
  5622  1F3E                     	;# 
  5623  1F3F                     	;# 
  5624  1F43                     	;# 
  5625  1F44                     	;# 
  5626  1F45                     	;# 
  5627  1F46                     	;# 
  5628  1F47                     	;# 
  5629  1F48                     	;# 
  5630  1F49                     	;# 
  5631  1F4A                     	;# 
  5632  1F4E                     	;# 
  5633  1F4F                     	;# 
  5634  1F50                     	;# 
  5635  1F51                     	;# 
  5636  1F52                     	;# 
  5637  1F53                     	;# 
  5638  1F54                     	;# 
  5639  1F55                     	;# 
  5640  1FE4                     	;# 
  5641  1FE5                     	;# 
  5642  1FE6                     	;# 
  5643  1FE7                     	;# 
  5644  1FE8                     	;# 
  5645  1FE8                     	;# 
  5646  1FE9                     	;# 
  5647  1FEA                     	;# 
  5648  1FEA                     	;# 
  5649  1FEB                     	;# 
  5650  1FED                     	;# 
  5651  1FEE                     	;# 
  5652  1FEF                     	;# 
  5653  0000                     	;# 
  5654  0001                     	;# 
  5655  0002                     	;# 
  5656  0003                     	;# 
  5657  0004                     	;# 
  5658  0005                     	;# 
  5659  0006                     	;# 
  5660  0007                     	;# 
  5661  0008                     	;# 
  5662  0009                     	;# 
  5663  000A                     	;# 
  5664  000B                     	;# 
  5665  000C                     	;# 
  5666  000D                     	;# 
  5667  000E                     	;# 
  5668  0012                     	;# 
  5669  0013                     	;# 
  5670  0014                     	;# 
  5671  0018                     	;# 
  5672  0019                     	;# 
  5673  001A                     	;# 
  5674  009B                     	;# 
  5675  009B                     	;# 
  5676  009C                     	;# 
  5677  009D                     	;# 
  5678  009E                     	;# 
  5679  009F                     	;# 
  5680  0119                     	;# 
  5681  0119                     	;# 
  5682  0119                     	;# 
  5683  011A                     	;# 
  5684  011A                     	;# 
  5685  011A                     	;# 
  5686  011B                     	;# 
  5687  011B                     	;# 
  5688  011B                     	;# 
  5689  011B                     	;# 
  5690  011B                     	;# 
  5691  011C                     	;# 
  5692  011C                     	;# 
  5693  011C                     	;# 
  5694  011D                     	;# 
  5695  011D                     	;# 
  5696  011D                     	;# 
  5697  011E                     	;# 
  5698  011E                     	;# 
  5699  011E                     	;# 
  5700  011F                     	;# 
  5701  011F                     	;# 
  5702  011F                     	;# 
  5703  011F                     	;# 
  5704  011F                     	;# 
  5705  018C                     	;# 
  5706  018D                     	;# 
  5707  018E                     	;# 
  5708  018F                     	;# 
  5709  0190                     	;# 
  5710  0191                     	;# 
  5711  0192                     	;# 
  5712  020C                     	;# 
  5713  020C                     	;# 
  5714  020D                     	;# 
  5715  020E                     	;# 
  5716  020F                     	;# 
  5717  020F                     	;# 
  5718  0210                     	;# 
  5719  0210                     	;# 
  5720  0211                     	;# 
  5721  0211                     	;# 
  5722  028C                     	;# 
  5723  028C                     	;# 
  5724  028D                     	;# 
  5725  028D                     	;# 
  5726  028E                     	;# 
  5727  028F                     	;# 
  5728  0290                     	;# 
  5729  0291                     	;# 
  5730  030C                     	;# 
  5731  030C                     	;# 
  5732  030D                     	;# 
  5733  030E                     	;# 
  5734  030F                     	;# 
  5735  0310                     	;# 
  5736  0310                     	;# 
  5737  0311                     	;# 
  5738  0312                     	;# 
  5739  0313                     	;# 
  5740  0314                     	;# 
  5741  0314                     	;# 
  5742  0315                     	;# 
  5743  0316                     	;# 
  5744  0318                     	;# 
  5745  0318                     	;# 
  5746  0319                     	;# 
  5747  031A                     	;# 
  5748  031C                     	;# 
  5749  031C                     	;# 
  5750  031D                     	;# 
  5751  031E                     	;# 
  5752  038C                     	;# 
  5753  038C                     	;# 
  5754  038D                     	;# 
  5755  038E                     	;# 
  5756  058C                     	;# 
  5757  058C                     	;# 
  5758  058D                     	;# 
  5759  058E                     	;# 
  5760  058F                     	;# 
  5761  058F                     	;# 
  5762  0590                     	;# 
  5763  0591                     	;# 
  5764  0592                     	;# 
  5765  0593                     	;# 
  5766  059C                     	;# 
  5767  059C                     	;# 
  5768  059D                     	;# 
  5769  059D                     	;# 
  5770  059E                     	;# 
  5771  059F                     	;# 
  5772  060C                     	;# 
  5773  060D                     	;# 
  5774  060E                     	;# 
  5775  060F                     	;# 
  5776  0610                     	;# 
  5777  0611                     	;# 
  5778  0612                     	;# 
  5779  0613                     	;# 
  5780  0614                     	;# 
  5781  070C                     	;# 
  5782  070D                     	;# 
  5783  070E                     	;# 
  5784  070F                     	;# 
  5785  0710                     	;# 
  5786  0711                     	;# 
  5787  0712                     	;# 
  5788  0713                     	;# 
  5789  0716                     	;# 
  5790  0717                     	;# 
  5791  0718                     	;# 
  5792  0719                     	;# 
  5793  071A                     	;# 
  5794  071B                     	;# 
  5795  071C                     	;# 
  5796  071D                     	;# 
  5797  0796                     	;# 
  5798  0797                     	;# 
  5799  0798                     	;# 
  5800  0799                     	;# 
  5801  079A                     	;# 
  5802  079B                     	;# 
  5803  080C                     	;# 
  5804  080D                     	;# 
  5805  080E                     	;# 
  5806  080F                     	;# 
  5807  0810                     	;# 
  5808  0811                     	;# 
  5809  0812                     	;# 
  5810  0813                     	;# 
  5811  0814                     	;# 
  5812  081A                     	;# 
  5813  081A                     	;# 
  5814  081B                     	;# 
  5815  081C                     	;# 
  5816  081C                     	;# 
  5817  081D                     	;# 
  5818  081E                     	;# 
  5819  081F                     	;# 
  5820  088C                     	;# 
  5821  088D                     	;# 
  5822  088E                     	;# 
  5823  088F                     	;# 
  5824  0890                     	;# 
  5825  0891                     	;# 
  5826  0892                     	;# 
  5827  0893                     	;# 
  5828  0895                     	;# 
  5829  0896                     	;# 
  5830  090C                     	;# 
  5831  090E                     	;# 
  5832  090F                     	;# 
  5833  091F                     	;# 
  5834  098F                     	;# 
  5835  098F                     	;# 
  5836  0990                     	;# 
  5837  0991                     	;# 
  5838  0992                     	;# 
  5839  0993                     	;# 
  5840  0994                     	;# 
  5841  0995                     	;# 
  5842  0996                     	;# 
  5843  0997                     	;# 
  5844  0A19                     	;# 
  5845  0A19                     	;# 
  5846  0A1A                     	;# 
  5847  0A1A                     	;# 
  5848  0A1B                     	;# 
  5849  0A1B                     	;# 
  5850  0A1B                     	;# 
  5851  0A1C                     	;# 
  5852  0A1C                     	;# 
  5853  0A1D                     	;# 
  5854  0A1D                     	;# 
  5855  0A1E                     	;# 
  5856  0A1E                     	;# 
  5857  0A1F                     	;# 
  5858  0A1F                     	;# 
  5859  0A1F                     	;# 
  5860  1E0F                     	;# 
  5861  1E10                     	;# 
  5862  1E11                     	;# 
  5863  1E12                     	;# 
  5864  1E13                     	;# 
  5865  1E14                     	;# 
  5866  1E15                     	;# 
  5867  1E16                     	;# 
  5868  1E17                     	;# 
  5869  1E18                     	;# 
  5870  1E19                     	;# 
  5871  1E1A                     	;# 
  5872  1E1B                     	;# 
  5873  1E1C                     	;# 
  5874  1E1D                     	;# 
  5875  1E1E                     	;# 
  5876  1E1F                     	;# 
  5877  1E20                     	;# 
  5878  1E21                     	;# 
  5879  1E22                     	;# 
  5880  1E23                     	;# 
  5881  1E24                     	;# 
  5882  1E25                     	;# 
  5883  1E26                     	;# 
  5884  1E27                     	;# 
  5885  1E28                     	;# 
  5886  1E29                     	;# 
  5887  1E2A                     	;# 
  5888  1E2B                     	;# 
  5889  1E2C                     	;# 
  5890  1E2D                     	;# 
  5891  1E2E                     	;# 
  5892  1E2F                     	;# 
  5893  1E30                     	;# 
  5894  1E31                     	;# 
  5895  1E32                     	;# 
  5896  1E33                     	;# 
  5897  1E34                     	;# 
  5898  1E35                     	;# 
  5899  1E36                     	;# 
  5900  1E37                     	;# 
  5901  1E8F                     	;# 
  5902  1E90                     	;# 
  5903  1E91                     	;# 
  5904  1E92                     	;# 
  5905  1E93                     	;# 
  5906  1E9C                     	;# 
  5907  1EA1                     	;# 
  5908  1EA2                     	;# 
  5909  1EB1                     	;# 
  5910  1EBB                     	;# 
  5911  1EBC                     	;# 
  5912  1EBD                     	;# 
  5913  1EBE                     	;# 
  5914  1EC3                     	;# 
  5915  1EC5                     	;# 
  5916  1EC6                     	;# 
  5917  1EC7                     	;# 
  5918  1ECB                     	;# 
  5919  1ECC                     	;# 
  5920  1ECD                     	;# 
  5921  1ECE                     	;# 
  5922  1F10                     	;# 
  5923  1F11                     	;# 
  5924  1F12                     	;# 
  5925  1F13                     	;# 
  5926  1F14                     	;# 
  5927  1F15                     	;# 
  5928  1F1C                     	;# 
  5929  1F1D                     	;# 
  5930  1F1E                     	;# 
  5931  1F1F                     	;# 
  5932  1F20                     	;# 
  5933  1F21                     	;# 
  5934  1F22                     	;# 
  5935  1F23                     	;# 
  5936  1F24                     	;# 
  5937  1F25                     	;# 
  5938  1F26                     	;# 
  5939  1F27                     	;# 
  5940  1F38                     	;# 
  5941  1F39                     	;# 
  5942  1F3A                     	;# 
  5943  1F3B                     	;# 
  5944  1F3C                     	;# 
  5945  1F3D                     	;# 
  5946  1F3E                     	;# 
  5947  1F3F                     	;# 
  5948  1F43                     	;# 
  5949  1F44                     	;# 
  5950  1F45                     	;# 
  5951  1F46                     	;# 
  5952  1F47                     	;# 
  5953  1F48                     	;# 
  5954  1F49                     	;# 
  5955  1F4A                     	;# 
  5956  1F4E                     	;# 
  5957  1F4F                     	;# 
  5958  1F50                     	;# 
  5959  1F51                     	;# 
  5960  1F52                     	;# 
  5961  1F53                     	;# 
  5962  1F54                     	;# 
  5963  1F55                     	;# 
  5964  1FE4                     	;# 
  5965  1FE5                     	;# 
  5966  1FE6                     	;# 
  5967  1FE7                     	;# 
  5968  1FE8                     	;# 
  5969  1FE8                     	;# 
  5970  1FE9                     	;# 
  5971  1FEA                     	;# 
  5972  1FEA                     	;# 
  5973  1FEB                     	;# 
  5974  1FED                     	;# 
  5975  1FEE                     	;# 
  5976  1FEF                     	;# 
  5977  0000                     	;# 
  5978  0001                     	;# 
  5979  0002                     	;# 
  5980  0003                     	;# 
  5981  0004                     	;# 
  5982  0005                     	;# 
  5983  0006                     	;# 
  5984  0007                     	;# 
  5985  0008                     	;# 
  5986  0009                     	;# 
  5987  000A                     	;# 
  5988  000B                     	;# 
  5989  000C                     	;# 
  5990  000D                     	;# 
  5991  000E                     	;# 
  5992  0012                     	;# 
  5993  0013                     	;# 
  5994  0014                     	;# 
  5995  0018                     	;# 
  5996  0019                     	;# 
  5997  001A                     	;# 
  5998  009B                     	;# 
  5999  009B                     	;# 
  6000  009C                     	;# 
  6001  009D                     	;# 
  6002  009E                     	;# 
  6003  009F                     	;# 
  6004  0119                     	;# 
  6005  0119                     	;# 
  6006  0119                     	;# 
  6007  011A                     	;# 
  6008  011A                     	;# 
  6009  011A                     	;# 
  6010  011B                     	;# 
  6011  011B                     	;# 
  6012  011B                     	;# 
  6013  011B                     	;# 
  6014  011B                     	;# 
  6015  011C                     	;# 
  6016  011C                     	;# 
  6017  011C                     	;# 
  6018  011D                     	;# 
  6019  011D                     	;# 
  6020  011D                     	;# 
  6021  011E                     	;# 
  6022  011E                     	;# 
  6023  011E                     	;# 
  6024  011F                     	;# 
  6025  011F                     	;# 
  6026  011F                     	;# 
  6027  011F                     	;# 
  6028  011F                     	;# 
  6029  018C                     	;# 
  6030  018D                     	;# 
  6031  018E                     	;# 
  6032  018F                     	;# 
  6033  0190                     	;# 
  6034  0191                     	;# 
  6035  0192                     	;# 
  6036  020C                     	;# 
  6037  020C                     	;# 
  6038  020D                     	;# 
  6039  020E                     	;# 
  6040  020F                     	;# 
  6041  020F                     	;# 
  6042  0210                     	;# 
  6043  0210                     	;# 
  6044  0211                     	;# 
  6045  0211                     	;# 
  6046  028C                     	;# 
  6047  028C                     	;# 
  6048  028D                     	;# 
  6049  028D                     	;# 
  6050  028E                     	;# 
  6051  028F                     	;# 
  6052  0290                     	;# 
  6053  0291                     	;# 
  6054  030C                     	;# 
  6055  030C                     	;# 
  6056  030D                     	;# 
  6057  030E                     	;# 
  6058  030F                     	;# 
  6059  0310                     	;# 
  6060  0310                     	;# 
  6061  0311                     	;# 
  6062  0312                     	;# 
  6063  0313                     	;# 
  6064  0314                     	;# 
  6065  0314                     	;# 
  6066  0315                     	;# 
  6067  0316                     	;# 
  6068  0318                     	;# 
  6069  0318                     	;# 
  6070  0319                     	;# 
  6071  031A                     	;# 
  6072  031C                     	;# 
  6073  031C                     	;# 
  6074  031D                     	;# 
  6075  031E                     	;# 
  6076  038C                     	;# 
  6077  038C                     	;# 
  6078  038D                     	;# 
  6079  038E                     	;# 
  6080  058C                     	;# 
  6081  058C                     	;# 
  6082  058D                     	;# 
  6083  058E                     	;# 
  6084  058F                     	;# 
  6085  058F                     	;# 
  6086  0590                     	;# 
  6087  0591                     	;# 
  6088  0592                     	;# 
  6089  0593                     	;# 
  6090  059C                     	;# 
  6091  059C                     	;# 
  6092  059D                     	;# 
  6093  059D                     	;# 
  6094  059E                     	;# 
  6095  059F                     	;# 
  6096  060C                     	;# 
  6097  060D                     	;# 
  6098  060E                     	;# 
  6099  060F                     	;# 
  6100  0610                     	;# 
  6101  0611                     	;# 
  6102  0612                     	;# 
  6103  0613                     	;# 
  6104  0614                     	;# 
  6105  070C                     	;# 
  6106  070D                     	;# 
  6107  070E                     	;# 
  6108  070F                     	;# 
  6109  0710                     	;# 
  6110  0711                     	;# 
  6111  0712                     	;# 
  6112  0713                     	;# 
  6113  0716                     	;# 
  6114  0717                     	;# 
  6115  0718                     	;# 
  6116  0719                     	;# 
  6117  071A                     	;# 
  6118  071B                     	;# 
  6119  071C                     	;# 
  6120  071D                     	;# 
  6121  0796                     	;# 
  6122  0797                     	;# 
  6123  0798                     	;# 
  6124  0799                     	;# 
  6125  079A                     	;# 
  6126  079B                     	;# 
  6127  080C                     	;# 
  6128  080D                     	;# 
  6129  080E                     	;# 
  6130  080F                     	;# 
  6131  0810                     	;# 
  6132  0811                     	;# 
  6133  0812                     	;# 
  6134  0813                     	;# 
  6135  0814                     	;# 
  6136  081A                     	;# 
  6137  081A                     	;# 
  6138  081B                     	;# 
  6139  081C                     	;# 
  6140  081C                     	;# 
  6141  081D                     	;# 
  6142  081E                     	;# 
  6143  081F                     	;# 
  6144  088C                     	;# 
  6145  088D                     	;# 
  6146  088E                     	;# 
  6147  088F                     	;# 
  6148  0890                     	;# 
  6149  0891                     	;# 
  6150  0892                     	;# 
  6151  0893                     	;# 
  6152  0895                     	;# 
  6153  0896                     	;# 
  6154  090C                     	;# 
  6155  090E                     	;# 
  6156  090F                     	;# 
  6157  091F                     	;# 
  6158  098F                     	;# 
  6159  098F                     	;# 
  6160  0990                     	;# 
  6161  0991                     	;# 
  6162  0992                     	;# 
  6163  0993                     	;# 
  6164  0994                     	;# 
  6165  0995                     	;# 
  6166  0996                     	;# 
  6167  0997                     	;# 
  6168  0A19                     	;# 
  6169  0A19                     	;# 
  6170  0A1A                     	;# 
  6171  0A1A                     	;# 
  6172  0A1B                     	;# 
  6173  0A1B                     	;# 
  6174  0A1B                     	;# 
  6175  0A1C                     	;# 
  6176  0A1C                     	;# 
  6177  0A1D                     	;# 
  6178  0A1D                     	;# 
  6179  0A1E                     	;# 
  6180  0A1E                     	;# 
  6181  0A1F                     	;# 
  6182  0A1F                     	;# 
  6183  0A1F                     	;# 
  6184  1E0F                     	;# 
  6185  1E10                     	;# 
  6186  1E11                     	;# 
  6187  1E12                     	;# 
  6188  1E13                     	;# 
  6189  1E14                     	;# 
  6190  1E15                     	;# 
  6191  1E16                     	;# 
  6192  1E17                     	;# 
  6193  1E18                     	;# 
  6194  1E19                     	;# 
  6195  1E1A                     	;# 
  6196  1E1B                     	;# 
  6197  1E1C                     	;# 
  6198  1E1D                     	;# 
  6199  1E1E                     	;# 
  6200  1E1F                     	;# 
  6201  1E20                     	;# 
  6202  1E21                     	;# 
  6203  1E22                     	;# 
  6204  1E23                     	;# 
  6205  1E24                     	;# 
  6206  1E25                     	;# 
  6207  1E26                     	;# 
  6208  1E27                     	;# 
  6209  1E28                     	;# 
  6210  1E29                     	;# 
  6211  1E2A                     	;# 
  6212  1E2B                     	;# 
  6213  1E2C                     	;# 
  6214  1E2D                     	;# 
  6215  1E2E                     	;# 
  6216  1E2F                     	;# 
  6217  1E30                     	;# 
  6218  1E31                     	;# 
  6219  1E32                     	;# 
  6220  1E33                     	;# 
  6221  1E34                     	;# 
  6222  1E35                     	;# 
  6223  1E36                     	;# 
  6224  1E37                     	;# 
  6225  1E8F                     	;# 
  6226  1E90                     	;# 
  6227  1E91                     	;# 
  6228  1E92                     	;# 
  6229  1E93                     	;# 
  6230  1E9C                     	;# 
  6231  1EA1                     	;# 
  6232  1EA2                     	;# 
  6233  1EB1                     	;# 
  6234  1EBB                     	;# 
  6235  1EBC                     	;# 
  6236  1EBD                     	;# 
  6237  1EBE                     	;# 
  6238  1EC3                     	;# 
  6239  1EC5                     	;# 
  6240  1EC6                     	;# 
  6241  1EC7                     	;# 
  6242  1ECB                     	;# 
  6243  1ECC                     	;# 
  6244  1ECD                     	;# 
  6245  1ECE                     	;# 
  6246  1F10                     	;# 
  6247  1F11                     	;# 
  6248  1F12                     	;# 
  6249  1F13                     	;# 
  6250  1F14                     	;# 
  6251  1F15                     	;# 
  6252  1F1C                     	;# 
  6253  1F1D                     	;# 
  6254  1F1E                     	;# 
  6255  1F1F                     	;# 
  6256  1F20                     	;# 
  6257  1F21                     	;# 
  6258  1F22                     	;# 
  6259  1F23                     	;# 
  6260  1F24                     	;# 
  6261  1F25                     	;# 
  6262  1F26                     	;# 
  6263  1F27                     	;# 
  6264  1F38                     	;# 
  6265  1F39                     	;# 
  6266  1F3A                     	;# 
  6267  1F3B                     	;# 
  6268  1F3C                     	;# 
  6269  1F3D                     	;# 
  6270  1F3E                     	;# 
  6271  1F3F                     	;# 
  6272  1F43                     	;# 
  6273  1F44                     	;# 
  6274  1F45                     	;# 
  6275  1F46                     	;# 
  6276  1F47                     	;# 
  6277  1F48                     	;# 
  6278  1F49                     	;# 
  6279  1F4A                     	;# 
  6280  1F4E                     	;# 
  6281  1F4F                     	;# 
  6282  1F50                     	;# 
  6283  1F51                     	;# 
  6284  1F52                     	;# 
  6285  1F53                     	;# 
  6286  1F54                     	;# 
  6287  1F55                     	;# 
  6288  1FE4                     	;# 
  6289  1FE5                     	;# 
  6290  1FE6                     	;# 
  6291  1FE7                     	;# 
  6292  1FE8                     	;# 
  6293  1FE8                     	;# 
  6294  1FE9                     	;# 
  6295  1FEA                     	;# 
  6296  1FEA                     	;# 
  6297  1FEB                     	;# 
  6298  1FED                     	;# 
  6299  1FEE                     	;# 
  6300  1FEF                     	;# 
  6301                           
  6302                           	psect	idataBANK0
  6303  17E5                     __pidataBANK0:
  6304                           
  6305                           ;initializer for _isense_max
  6306  17E5  349B               	retlw	155
  6307  17E6  3400               	retlw	0
  6308                           
  6309                           ;initializer for _LIN_timeout
  6310  17E7  340A               	retlw	10
  6311                           
  6312                           ;initializer for _b1_coef
  6313  17E8  347A               	retlw	122
  6314                           
  6315                           ;initializer for _dac_i_hw_trip
  6316  17E9  3403               	retlw	3
  6317                           
  6318                           ;initializer for _tj_limit
  6319  17EA  34AF               	retlw	175
  6320                           
  6321                           ;initializer for _Tambient
  6322  17EB  3455               	retlw	85
  6323  17EC  3400               	retlw	0
  6324                           
  6325                           	psect	idataBANK1
  6326  087D                     __pidataBANK1:
  6327                           
  6328                           ;initializer for _tcc_sample_time
  6329  087D  34E8               	retlw	232
  6330  087E  3403               	retlw	3
  6331                           
  6332                           ;initializer for _a1_coef
  6333  087F  340C               	retlw	12
  6334  0880  34FF               	retlw	255
  6335                           
  6336                           ;initializer for _current2counts_squared
  6337  0881  349E               	retlw	158
  6338  0882  3402               	retlw	2
  6339                           
  6340                           ;initializer for _factor_rdson_rthsa
  6341  0883  34DC               	retlw	220
  6342  0884  3420               	retlw	32
  6343                           
  6344                           ;initializer for _factor_rdson_rthjs
  6345  0885  34A4               	retlw	164
  6346  0886  3405               	retlw	5
  6347                           
  6348                           	psect	stringtext1
  6349  0252                     __pstringtext1:
  6350  0252                     _temperatureLUT:
  6351  0252  3468               	retlw	104
  6352  0253  3400               	retlw	0
  6353  0254  346A               	retlw	106
  6354  0255  3400               	retlw	0
  6355  0256  346C               	retlw	108
  6356  0257  3400               	retlw	0
  6357  0258  346F               	retlw	111
  6358  0259  3400               	retlw	0
  6359  025A  3471               	retlw	113
  6360  025B  3400               	retlw	0
  6361  025C  3473               	retlw	115
  6362  025D  3400               	retlw	0
  6363  025E  3476               	retlw	118
  6364  025F  3400               	retlw	0
  6365  0260  3478               	retlw	120
  6366  0261  3400               	retlw	0
  6367  0262  347B               	retlw	123
  6368  0263  3400               	retlw	0
  6369  0264  347D               	retlw	125
  6370  0265  3400               	retlw	0
  6371  0266  3480               	retlw	128
  6372  0267  3400               	retlw	0
  6373  0268  3483               	retlw	131
  6374  0269  3400               	retlw	0
  6375  026A  3485               	retlw	133
  6376  026B  3400               	retlw	0
  6377  026C  3488               	retlw	136
  6378  026D  3400               	retlw	0
  6379  026E  348B               	retlw	139
  6380  026F  3400               	retlw	0
  6381  0270  348E               	retlw	142
  6382  0271  3400               	retlw	0
  6383  0272  3491               	retlw	145
  6384  0273  3400               	retlw	0
  6385  0274  3494               	retlw	148
  6386  0275  3400               	retlw	0
  6387  0276  3497               	retlw	151
  6388  0277  3400               	retlw	0
  6389  0278  349B               	retlw	155
  6390  0279  3400               	retlw	0
  6391  027A  349E               	retlw	158
  6392  027B  3400               	retlw	0
  6393  027C  34A1               	retlw	161
  6394  027D  3400               	retlw	0
  6395  027E  34A5               	retlw	165
  6396  027F  3400               	retlw	0
  6397  0280  34A8               	retlw	168
  6398  0281  3400               	retlw	0
  6399  0282  34AC               	retlw	172
  6400  0283  3400               	retlw	0
  6401  0284  34B0               	retlw	176
  6402  0285  3400               	retlw	0
  6403  0286  34B3               	retlw	179
  6404  0287  3400               	retlw	0
  6405  0288  34B7               	retlw	183
  6406  0289  3400               	retlw	0
  6407  028A  34BB               	retlw	187
  6408  028B  3400               	retlw	0
  6409  028C  34BF               	retlw	191
  6410  028D  3400               	retlw	0
  6411  028E  34C3               	retlw	195
  6412  028F  3400               	retlw	0
  6413  0290  34C8               	retlw	200
  6414  0291  3400               	retlw	0
  6415  0292  34CC               	retlw	204
  6416  0293  3400               	retlw	0
  6417  0294  34D0               	retlw	208
  6418  0295  3400               	retlw	0
  6419  0296  34D5               	retlw	213
  6420  0297  3400               	retlw	0
  6421  0298  34D9               	retlw	217
  6422  0299  3400               	retlw	0
  6423  029A  34DE               	retlw	222
  6424  029B  3400               	retlw	0
  6425  029C  34E3               	retlw	227
  6426  029D  3400               	retlw	0
  6427  029E  34E8               	retlw	232
  6428  029F  3400               	retlw	0
  6429  02A0  34EC               	retlw	236
  6430  02A1  3400               	retlw	0
  6431  02A2  34F1               	retlw	241
  6432  02A3  3400               	retlw	0
  6433  02A4  34F7               	retlw	247
  6434  02A5  3400               	retlw	0
  6435  02A6  34FC               	retlw	252
  6436  02A7  3400               	retlw	0
  6437  02A8  3401               	retlw	1
  6438  02A9  3401               	retlw	1
  6439  02AA  3407               	retlw	7
  6440  02AB  3401               	retlw	1
  6441  02AC  340C               	retlw	12
  6442  02AD  3401               	retlw	1
  6443  02AE  3412               	retlw	18
  6444  02AF  3401               	retlw	1
  6445  02B0  3417               	retlw	23
  6446  02B1  3401               	retlw	1
  6447  02B2  341D               	retlw	29
  6448  02B3  3401               	retlw	1
  6449  02B4  3423               	retlw	35
  6450  02B5  3401               	retlw	1
  6451  02B6  3429               	retlw	41
  6452  02B7  3401               	retlw	1
  6453  02B8  342F               	retlw	47
  6454  02B9  3401               	retlw	1
  6455  02BA  3436               	retlw	54
  6456  02BB  3401               	retlw	1
  6457  02BC  343C               	retlw	60
  6458  02BD  3401               	retlw	1
  6459  02BE  3442               	retlw	66
  6460  02BF  3401               	retlw	1
  6461  02C0  3449               	retlw	73
  6462  02C1  3401               	retlw	1
  6463  02C2  3450               	retlw	80
  6464  02C3  3401               	retlw	1
  6465  02C4  3456               	retlw	86
  6466  02C5  3401               	retlw	1
  6467  02C6  345D               	retlw	93
  6468  02C7  3401               	retlw	1
  6469  02C8  3464               	retlw	100
  6470  02C9  3401               	retlw	1
  6471  02CA  346B               	retlw	107
  6472  02CB  3401               	retlw	1
  6473  02CC  3472               	retlw	114
  6474  02CD  3401               	retlw	1
  6475  02CE  3479               	retlw	121
  6476  02CF  3401               	retlw	1
  6477  02D0  3481               	retlw	129
  6478  02D1  3401               	retlw	1
  6479  02D2  3488               	retlw	136
  6480  02D3  3401               	retlw	1
  6481  02D4  3490               	retlw	144
  6482  02D5  3401               	retlw	1
  6483  02D6  3497               	retlw	151
  6484  02D7  3401               	retlw	1
  6485  02D8  349F               	retlw	159
  6486  02D9  3401               	retlw	1
  6487  02DA  34A7               	retlw	167
  6488  02DB  3401               	retlw	1
  6489  02DC  34AF               	retlw	175
  6490  02DD  3401               	retlw	1
  6491  02DE  34B7               	retlw	183
  6492  02DF  3401               	retlw	1
  6493  02E0  34BF               	retlw	191
  6494  02E1  3401               	retlw	1
  6495  02E2  34C7               	retlw	199
  6496  02E3  3401               	retlw	1
  6497  02E4  34D0               	retlw	208
  6498  02E5  3401               	retlw	1
  6499  02E6  34D8               	retlw	216
  6500  02E7  3401               	retlw	1
  6501  02E8  34E0               	retlw	224
  6502  02E9  3401               	retlw	1
  6503  02EA  34E9               	retlw	233
  6504  02EB  3401               	retlw	1
  6505  02EC  34F1               	retlw	241
  6506  02ED  3401               	retlw	1
  6507  02EE  34FA               	retlw	250
  6508  02EF  3401               	retlw	1
  6509  02F0  3402               	retlw	2
  6510  02F1  3402               	retlw	2
  6511  02F2  340B               	retlw	11
  6512  02F3  3402               	retlw	2
  6513  02F4  3414               	retlw	20
  6514  02F5  3402               	retlw	2
  6515  02F6  341C               	retlw	28
  6516  02F7  3402               	retlw	2
  6517  02F8  3425               	retlw	37
  6518  02F9  3402               	retlw	2
  6519  02FA  342E               	retlw	46
  6520  02FB  3402               	retlw	2
  6521  02FC  3437               	retlw	55
  6522  02FD  3402               	retlw	2
  6523  02FE  343F               	retlw	63
  6524  02FF  3402               	retlw	2
  6525  0300  3448               	retlw	72
  6526  0301  3402               	retlw	2
  6527  0302  3451               	retlw	81
  6528  0303  3402               	retlw	2
  6529  0304  3459               	retlw	89
  6530  0305  3402               	retlw	2
  6531  0306  3462               	retlw	98
  6532  0307  3402               	retlw	2
  6533  0308  346B               	retlw	107
  6534  0309  3402               	retlw	2
  6535  030A  3474               	retlw	116
  6536  030B  3402               	retlw	2
  6537  030C  347C               	retlw	124
  6538  030D  3402               	retlw	2
  6539  030E  3485               	retlw	133
  6540  030F  3402               	retlw	2
  6541  0310  348E               	retlw	142
  6542  0311  3402               	retlw	2
  6543  0312  3496               	retlw	150
  6544  0313  3402               	retlw	2
  6545  0314  349F               	retlw	159
  6546  0315  3402               	retlw	2
  6547  0316  34A7               	retlw	167
  6548  0317  3402               	retlw	2
  6549  0318  34B0               	retlw	176
  6550  0319  3402               	retlw	2
  6551  031A  34B8               	retlw	184
  6552  031B  3402               	retlw	2
  6553  031C  34C0               	retlw	192
  6554  031D  3402               	retlw	2
  6555  031E  34C8               	retlw	200
  6556  031F  3402               	retlw	2
  6557  0320  34D1               	retlw	209
  6558  0321  3402               	retlw	2
  6559  0322  34D9               	retlw	217
  6560  0323  3402               	retlw	2
  6561  0324  34E0               	retlw	224
  6562  0325  3402               	retlw	2
  6563  0326  34E8               	retlw	232
  6564  0327  3402               	retlw	2
  6565  0328  34F0               	retlw	240
  6566  0329  3402               	retlw	2
  6567  032A  34F8               	retlw	248
  6568  032B  3402               	retlw	2
  6569  032C  34FF               	retlw	255
  6570  032D  3402               	retlw	2
  6571  032E  3407               	retlw	7
  6572  032F  3403               	retlw	3
  6573  0330  340E               	retlw	14
  6574  0331  3403               	retlw	3
  6575  0332  3415               	retlw	21
  6576  0333  3403               	retlw	3
  6577  0334  341D               	retlw	29
  6578  0335  3403               	retlw	3
  6579  0336  3424               	retlw	36
  6580  0337  3403               	retlw	3
  6581  0338  342A               	retlw	42
  6582  0339  3403               	retlw	3
  6583  033A  3431               	retlw	49
  6584  033B  3403               	retlw	3
  6585  033C  3438               	retlw	56
  6586  033D  3403               	retlw	3
  6587  033E  343E               	retlw	62
  6588  033F  3403               	retlw	3
  6589  0340  3445               	retlw	69
  6590  0341  3403               	retlw	3
  6591  0342  344B               	retlw	75
  6592  0343  3403               	retlw	3
  6593  0344  3451               	retlw	81
  6594  0345  3403               	retlw	3
  6595  0346  3457               	retlw	87
  6596  0347  3403               	retlw	3
  6597  0348  345D               	retlw	93
  6598  0349  3403               	retlw	3
  6599  034A  3463               	retlw	99
  6600  034B  3403               	retlw	3
  6601  034C  3468               	retlw	104
  6602  034D  3403               	retlw	3
  6603  034E  346E               	retlw	110
  6604  034F  3403               	retlw	3
  6605  0350  3473               	retlw	115
  6606  0351  3403               	retlw	3
  6607  0352  3478               	retlw	120
  6608  0353  3403               	retlw	3
  6609  0354  347D               	retlw	125
  6610  0355  3403               	retlw	3
  6611  0356  3482               	retlw	130
  6612  0357  3403               	retlw	3
  6613  0358  3487               	retlw	135
  6614  0359  3403               	retlw	3
  6615  035A  348C               	retlw	140
  6616  035B  3403               	retlw	3
  6617  035C  3490               	retlw	144
  6618  035D  3403               	retlw	3
  6619  035E  3495               	retlw	149
  6620  035F  3403               	retlw	3
  6621  0360  3499               	retlw	153
  6622  0361  3403               	retlw	3
  6623  0362  349D               	retlw	157
  6624  0363  3403               	retlw	3
  6625  0364  34A1               	retlw	161
  6626  0365  3403               	retlw	3
  6627  0366  34A5               	retlw	165
  6628  0367  3403               	retlw	3
  6629  0368  34A9               	retlw	169
  6630  0369  3403               	retlw	3
  6631  036A  34AD               	retlw	173
  6632  036B  3403               	retlw	3
  6633  036C  34B0               	retlw	176
  6634  036D  3403               	retlw	3
  6635  036E  34B4               	retlw	180
  6636  036F  3403               	retlw	3
  6637  0370  34B7               	retlw	183
  6638  0371  3403               	retlw	3
  6639  0372  34BA               	retlw	186
  6640  0373  3403               	retlw	3
  6641  0374  34BD               	retlw	189
  6642  0375  3403               	retlw	3
  6643  0376  34C0               	retlw	192
  6644  0377  3403               	retlw	3
  6645  0378  34C3               	retlw	195
  6646  0379  3403               	retlw	3
  6647  037A  34C6               	retlw	198
  6648  037B  3403               	retlw	3
  6649  037C  34C8               	retlw	200
  6650  037D  3403               	retlw	3
  6651  037E  34CB               	retlw	203
  6652  037F  3403               	retlw	3
  6653  0380  34CD               	retlw	205
  6654  0381  3403               	retlw	3
  6655  0382  34D0               	retlw	208
  6656  0383  3403               	retlw	3
  6657  0384  34D2               	retlw	210
  6658  0385  3403               	retlw	3
  6659  0386  34D4               	retlw	212
  6660  0387  3403               	retlw	3
  6661  0388  34D6               	retlw	214
  6662  0389  3403               	retlw	3
  6663  038A  34D8               	retlw	216
  6664  038B  3403               	retlw	3
  6665  038C  34DA               	retlw	218
  6666  038D  3403               	retlw	3
  6667  038E  34DC               	retlw	220
  6668  038F  3403               	retlw	3
  6669  0390  34DE               	retlw	222
  6670  0391  3403               	retlw	3
  6671  0392  34E0               	retlw	224
  6672  0393  3403               	retlw	3
  6673  0394  34E1               	retlw	225
  6674  0395  3403               	retlw	3
  6675  0396  34E3               	retlw	227
  6676  0397  3403               	retlw	3
  6677  0398  34E4               	retlw	228
  6678  0399  3403               	retlw	3
  6679  039A  34E6               	retlw	230
  6680  039B  3403               	retlw	3
  6681  039C  34E7               	retlw	231
  6682  039D  3403               	retlw	3
  6683  039E                     __end_of_temperatureLUT:
  6684                           
  6685                           	psect	stringtext2
  6686  07E3                     __pstringtext2:
  6687  07E3                     _scheduleTable:
  6688  07E3  3400               	retlw	0
  6689  07E4  3401               	retlw	1
  6690  07E5  3401               	retlw	1
  6691  07E6  344A               	retlw	low (_LIN_COMMAND_Data| 0)
  6692  07E7  3400               	retlw	high (_LIN_COMMAND_Data| 0)
  6693  07E8  3401               	retlw	1
  6694  07E9  3401               	retlw	1
  6695  07EA  3401               	retlw	1
  6696  07EB  3449               	retlw	low (_LIN_TRIGGER_TYPE_Data| 0)
  6697  07EC  3400               	retlw	high (_LIN_TRIGGER_TYPE_Data| 0)
  6698  07ED  3402               	retlw	2
  6699  07EE  3401               	retlw	1
  6700  07EF  3401               	retlw	1
  6701  07F0  3448               	retlw	low (_LIN_ENTER_SLEEP_MODE_Data| 0)
  6702  07F1  3400               	retlw	high (_LIN_ENTER_SLEEP_MODE_Data| 0)
  6703  07F2  3410               	retlw	16
  6704  07F3  3401               	retlw	1
  6705  07F4  3401               	retlw	1
  6706  07F5  3447               	retlw	low (_LIN_TJ_LIMIT_Data| 0)
  6707  07F6  3400               	retlw	high (_LIN_TJ_LIMIT_Data| 0)
  6708  07F7  3411               	retlw	17
  6709  07F8  3401               	retlw	1
  6710  07F9  3402               	retlw	2
  6711  07FA  34DF               	retlw	low (_LIN_FACTOR_RDSON_RTHJS_Data| 0)
  6712  07FB  3400               	retlw	high (_LIN_FACTOR_RDSON_RTHJS_Data| 0)
  6713  07FC  3412               	retlw	18
  6714  07FD  3401               	retlw	1
  6715  07FE  3402               	retlw	2
  6716  07FF  34DD               	retlw	low (_LIN_FACTOR_RDSON_RTHSA_Data| 0)
  6717  0800  3400               	retlw	high (_LIN_FACTOR_RDSON_RTHSA_Data| 0)
  6718  0801  3413               	retlw	19
  6719  0802  3401               	retlw	1
  6720  0803  3402               	retlw	2
  6721  0804  34DB               	retlw	low (_LIN_CURRENT2COUNTS_SQUARED_Data| 0)
  6722  0805  3400               	retlw	high (_LIN_CURRENT2COUNTS_SQUARED_Data| 0)
  6723  0806  3414               	retlw	20
  6724  0807  3401               	retlw	1
  6725  0808  3402               	retlw	2
  6726  0809  34D9               	retlw	low (_LIN_ISENSE_MAX_Data| 0)
  6727  080A  3400               	retlw	high (_LIN_ISENSE_MAX_Data| 0)
  6728  080B  3415               	retlw	21
  6729  080C  3401               	retlw	1
  6730  080D  3401               	retlw	1
  6731  080E  3446               	retlw	low (_LIN_DAC_I_HW_TRIP_Data| 0)
  6732  080F  3400               	retlw	high (_LIN_DAC_I_HW_TRIP_Data| 0)
  6733  0810  3416               	retlw	22
  6734  0811  3401               	retlw	1
  6735  0812  3401               	retlw	1
  6736  0813  3445               	retlw	low (_LIN_B1_COEF_Data| 0)
  6737  0814  3400               	retlw	high (_LIN_B1_COEF_Data| 0)
  6738  0815  3417               	retlw	23
  6739  0816  3401               	retlw	1
  6740  0817  3401               	retlw	1
  6741  0818  3444               	retlw	low (_LIN_REDUCED_DRIVE_TIME_Data| 0)
  6742  0819  3400               	retlw	high (_LIN_REDUCED_DRIVE_TIME_Data| 0)
  6743  081A  3418               	retlw	24
  6744  081B  3401               	retlw	1
  6745  081C  3402               	retlw	2
  6746  081D  34D7               	retlw	low (_LIN_TCC_SAMPLE_TIME_Data| 0)
  6747  081E  3400               	retlw	high (_LIN_TCC_SAMPLE_TIME_Data| 0)
  6748  081F  3420               	retlw	32
  6749  0820  3400               	retlw	0
  6750  0821  3401               	retlw	1
  6751  0822  3443               	retlw	low (_LIN_OUTPUT_STATE_Data| 0)
  6752  0823  3400               	retlw	high (_LIN_OUTPUT_STATE_Data| 0)
  6753  0824  3421               	retlw	33
  6754  0825  3400               	retlw	0
  6755  0826  3401               	retlw	1
  6756  0827  3442               	retlw	low (_LIN_GET_TRIGGER_TYPE_Data| 0)
  6757  0828  3400               	retlw	high (_LIN_GET_TRIGGER_TYPE_Data| 0)
  6758  0829  3422               	retlw	34
  6759  082A  3400               	retlw	0
  6760  082B  3401               	retlw	1
  6761  082C  3441               	retlw	low (_LIN_OVER_CURRENT_FAULT_Data| 0)
  6762  082D  3400               	retlw	high (_LIN_OVER_CURRENT_FAULT_Data| 0)
  6763  082E  3423               	retlw	35
  6764  082F  3400               	retlw	0
  6765  0830  3401               	retlw	1
  6766  0831  3440               	retlw	low (_LIN_UVLO_FAULT_Data| 0)
  6767  0832  3400               	retlw	high (_LIN_UVLO_FAULT_Data| 0)
  6768  0833  3424               	retlw	36
  6769  0834  3400               	retlw	0
  6770  0835  3401               	retlw	1
  6771  0836  343F               	retlw	low (_LIN_OVER_TEMP_FAULT_Data| 0)
  6772  0837  3400               	retlw	high (_LIN_OVER_TEMP_FAULT_Data| 0)
  6773  0838  3425               	retlw	37
  6774  0839  3400               	retlw	0
  6775  083A  3402               	retlw	2
  6776  083B  34D5               	retlw	low (_LIN_ADC_VCC_SENSE_Data| 0)
  6777  083C  3400               	retlw	high (_LIN_ADC_VCC_SENSE_Data| 0)
  6778  083D  3426               	retlw	38
  6779  083E  3400               	retlw	0
  6780  083F  3402               	retlw	2
  6781  0840  34D3               	retlw	low (_LIN_ADC_CURRENT_SENSE_UNCORRECTED_Data| 0)
  6782  0841  3400               	retlw	high (_LIN_ADC_CURRENT_SENSE_UNCORRECTED_Data| 0)
  6783  0842  3427               	retlw	39
  6784  0843  3400               	retlw	0
  6785  0844  3402               	retlw	2
  6786  0845  34D1               	retlw	low (_LIN_ADC_TEMP_SENSE_Data| 0)
  6787  0846  3400               	retlw	high (_LIN_ADC_TEMP_SENSE_Data| 0)
  6788  0847  3428               	retlw	40
  6789  0848  3400               	retlw	0
  6790  0849  3402               	retlw	2
  6791  084A  34CF               	retlw	low (_LIN_ADC_CURRENT_SENSE_CORRECTED_Data| 0)
  6792  084B  3400               	retlw	high (_LIN_ADC_CURRENT_SENSE_CORRECTED_Data| 0)
  6793  084C  3429               	retlw	41
  6794  084D  3400               	retlw	0
  6795  084E  3402               	retlw	2
  6796  084F  34CD               	retlw	low (_LIN_CURRENT_SENSE_OFFSET_Data| 0)
  6797  0850  3400               	retlw	high (_LIN_CURRENT_SENSE_OFFSET_Data| 0)
  6798  0851  342A               	retlw	42
  6799  0852  3400               	retlw	0
  6800  0853  3402               	retlw	2
  6801  0854  34CB               	retlw	low (_LIN_AMBIENT_TEMPERATURE_Data| 0)
  6802  0855  3400               	retlw	high (_LIN_AMBIENT_TEMPERATURE_Data| 0)
  6803  0856  342B               	retlw	43
  6804  0857  3400               	retlw	0
  6805  0858  3402               	retlw	2
  6806  0859  34C9               	retlw	low (_LIN_HEATSINK_TEMPERATURE_Data| 0)
  6807  085A  3400               	retlw	high (_LIN_HEATSINK_TEMPERATURE_Data| 0)
  6808  085B  342C               	retlw	44
  6809  085C  3400               	retlw	0
  6810  085D  3402               	retlw	2
  6811  085E  34C7               	retlw	low (_LIN_JUNCTION_TEMPERATURE_Data| 0)
  6812  085F  3400               	retlw	high (_LIN_JUNCTION_TEMPERATURE_Data| 0)
  6813  0860  342D               	retlw	45
  6814  0861  3400               	retlw	0
  6815  0862  3402               	retlw	2
  6816  0863  34C5               	retlw	low (_LIN_TEMPERATURE_RISE_JS_Data| 0)
  6817  0864  3400               	retlw	high (_LIN_TEMPERATURE_RISE_JS_Data| 0)
  6818  0865  342E               	retlw	46
  6819  0866  3400               	retlw	0
  6820  0867  3402               	retlw	2
  6821  0868  34C3               	retlw	low (_LIN_TEMPERATURE_RISE_SA_Data| 0)
  6822  0869  3400               	retlw	high (_LIN_TEMPERATURE_RISE_SA_Data| 0)
  6823  086A  342F               	retlw	47
  6824  086B  3400               	retlw	0
  6825  086C  3408               	retlw	8
  6826  086D  3438               	retlw	low (_LIN_DIAGNOSTIC_Data| (0+256))
  6827  086E  3401               	retlw	high (_LIN_DIAGNOSTIC_Data| (0+256))
  6828  086F                     __end_of_scheduleTable:
  6829                           
  6830                           	psect	nvBANK0
  6831  006E                     __pnvBANK0:
  6832  006E                     _timer0ReloadVal16bit:
  6833  006E                     	ds	2
  6834                           
  6835                           	psect	nvBANK1
  6836  00EB                     __pnvBANK1:
  6837  00EB                     _LIN_rxCommand:
  6838  00EB                     	ds	2
  6839  00ED                     _eusart1TxBufferRemaining:
  6840  00ED                     	ds	1
  6841  00EE                     _LIN_rxCommandLength:
  6842  00EE                     	ds	1
  6843                           
  6844                           	psect	nvBANK2
  6845  015A                     __pnvBANK2:
  6846  015A                     _timer1ReloadVal:
  6847  015A                     	ds	2
  6848  015C                     _TMR0_InterruptHandler:
  6849  015C                     	ds	2
  6850  015E                     _EUSART1_ErrorHandler:
  6851  015E                     	ds	2
  6852  0160                     _EUSART1_OverrunErrorHandler:
  6853  0160                     	ds	2
  6854  0162                     _EUSART1_FramingErrorHandler:
  6855  0162                     	ds	2
  6856  0164                     _EUSART1_RxDefaultInterruptHandler:
  6857  0164                     	ds	2
  6858  0166                     _EUSART1_TxDefaultInterruptHandler:
  6859  0166                     	ds	2
  6860  0168                     _LIN_processData:
  6861  0168                     	ds	2
  6862  0014                     _TRISCbits	set	20
  6863  0014                     _TRISC	set	20
  6864  0013                     _TRISB	set	19
  6865  0012                     _TRISA	set	18
  6866  001A                     _LATC	set	26
  6867  0019                     _LATB	set	25
  6868  0018                     _LATA	set	24
  6869  000B                     _INTCONbits	set	11
  6870  0019                     _LATBbits	set	25
  6871  009D                     _ADCON0bits	set	157
  6872  009D                     _ADCON0	set	157
  6873  009C                     _ADRESH	set	156
  6874  009B                     _ADRESL	set	155
  6875  009E                     _ADCON1	set	158
  6876  0119                     _RC1REG	set	281
  6877  011A                     _TX1REG	set	282
  6878  011C                     _SP1BRGH	set	284
  6879  011B                     _SP1BRGL	set	283
  6880  011E                     _TX1STA	set	286
  6881  011D                     _RC1STA	set	285
  6882  011F                     _BAUD1CON	set	287
  6883  011D                     _RC1STAbits	set	285
  6884  011E                     _TX1STAbits	set	286
  6885  020E                     _T1CONbits	set	526
  6886  020E                     _T1CON	set	526
  6887  020C                     _TMR1L	set	524
  6888  020D                     _TMR1H	set	525
  6889  0211                     _T1CLK	set	529
  6890  0210                     _T1GATE	set	528
  6891  020F                     _T1GCON	set	527
  6892  028E                     _T2CONbits	set	654
  6893  028E                     _T2CON	set	654
  6894  028C                     _T2TMR	set	652
  6895  028D                     _T2PR	set	653
  6896  0291                     _T2RST	set	657
  6897  028F                     _T2HLT	set	655
  6898  0290                     _T2CLKCON	set	656
  6899  059E                     _T0CON0	set	1438
  6900  059C                     _TMR0L	set	1436
  6901  059D                     _TMR0H	set	1437
  6902  059F                     _T0CON1	set	1439
  6903  070E                     _PIR2bits	set	1806
  6904  070F                     _PIR3bits	set	1807
  6905  0710                     _PIR4bits	set	1808
  6906  0716                     _PIE0bits	set	1814
  6907  070C                     _PIR0bits	set	1804
  6908  071B                     _PIE5bits	set	1819
  6909  0711                     _PIR5bits	set	1809
  6910  0719                     _PIE3bits	set	1817
  6911  079B                     _PMD5	set	1947
  6912  079A                     _PMD4	set	1946
  6913  0799                     _PMD3	set	1945
  6914  0798                     _PMD2	set	1944
  6915  0797                     _PMD1	set	1943
  6916  0796                     _PMD0	set	1942
  6917  0892                     _OSCTUNE	set	2194
  6918  0890                     _OSCSTAT	set	2192
  6919  0893                     _OSCFRQ	set	2195
  6920  0891                     _OSCEN	set	2193
  6921  088F                     _OSCCON3	set	2191
  6922  088D                     _OSCCON1	set	2189
  6923  090F                     _DAC1CON1bits	set	2319
  6924  090C                     _FVRCON	set	2316
  6925  090F                     _DAC1CON1	set	2319
  6926  090E                     _DAC1CON0	set	2318
  6927  0994                     _CM2CON0bits	set	2452
  6928  0997                     _CM2PCH	set	2455
  6929  0996                     _CM2NCH	set	2454
  6930  0995                     _CM2CON1	set	2453
  6931  0994                     _CM2CON0	set	2452
  6932  1E1B                     _CLC2POLbits	set	7707
  6933  1E19                     _CLC1GLS3bits	set	7705
  6934  1E11                     _CLC1POLbits	set	7697
  6935  1E0F                     _CLCDATAbits	set	7695
  6936  1E17                     _CLC1GLS1bits	set	7703
  6937  1E10                     _CLC1CONbits	set	7696
  6938  1E10                     _CLC1CON	set	7696
  6939  1E19                     _CLC1GLS3	set	7705
  6940  1E18                     _CLC1GLS2	set	7704
  6941  1E17                     _CLC1GLS1	set	7703
  6942  1E16                     _CLC1GLS0	set	7702
  6943  1E15                     _CLC1SEL3	set	7701
  6944  1E14                     _CLC1SEL2	set	7700
  6945  1E13                     _CLC1SEL1	set	7699
  6946  1E12                     _CLC1SEL0	set	7698
  6947  1E11                     _CLC1POL	set	7697
  6948  1E24                     _CLC3CONbits	set	7716
  6949  1E24                     _CLC3CON	set	7716
  6950  1E2D                     _CLC3GLS3	set	7725
  6951  1E2C                     _CLC3GLS2	set	7724
  6952  1E2B                     _CLC3GLS1	set	7723
  6953  1E2A                     _CLC3GLS0	set	7722
  6954  1E29                     _CLC3SEL3	set	7721
  6955  1E28                     _CLC3SEL2	set	7720
  6956  1E27                     _CLC3SEL1	set	7719
  6957  1E26                     _CLC3SEL0	set	7718
  6958  1E25                     _CLC3POL	set	7717
  6959  1E1A                     _CLC2CON	set	7706
  6960  1E23                     _CLC2GLS3	set	7715
  6961  1E22                     _CLC2GLS2	set	7714
  6962  1E21                     _CLC2GLS1	set	7713
  6963  1E20                     _CLC2GLS0	set	7712
  6964  1E1F                     _CLC2SEL3	set	7711
  6965  1E1E                     _CLC2SEL2	set	7710
  6966  1E1D                     _CLC2SEL1	set	7709
  6967  1E1C                     _CLC2SEL0	set	7708
  6968  1E1B                     _CLC2POL	set	7707
  6969  1E2E                     _CLC4CON	set	7726
  6970  1E37                     _CLC4GLS3	set	7735
  6971  1E36                     _CLC4GLS2	set	7734
  6972  1E35                     _CLC4GLS1	set	7733
  6973  1E34                     _CLC4GLS0	set	7732
  6974  1E33                     _CLC4SEL3	set	7731
  6975  1E32                     _CLC4SEL2	set	7730
  6976  1E31                     _CLC4SEL1	set	7729
  6977  1E30                     _CLC4SEL0	set	7728
  6978  1E2F                     _CLC4POL	set	7727
  6979  1ECB                     _RX1DTPPS	set	7883
  6980  1EBB                     _CLCIN0PPS	set	7867
  6981  1F27                     _RC7PPS	set	7975
  6982  1F26                     _RC6PPS	set	7974
  6983  1F1F                     _RB7PPS	set	7967
  6984  1F52                     _INLVLC	set	8018
  6985  1F47                     _INLVLB	set	8007
  6986  1F3C                     _INLVLA	set	7996
  6987  1F51                     _SLRCONC	set	8017
  6988  1F46                     _SLRCONB	set	8006
  6989  1F3B                     _SLRCONA	set	7995
  6990  1F50                     _ODCONC	set	8016
  6991  1F45                     _ODCONB	set	8005
  6992  1F3A                     _ODCONA	set	7994
  6993  1F4F                     _WPUC	set	8015
  6994  1F39                     _WPUA	set	7993
  6995  1F44                     _WPUB	set	8004
  6996  1F38                     _ANSELA	set	7992
  6997  1F43                     _ANSELB	set	8003
  6998  1F4E                     _ANSELC	set	8014
  6999                           
  7000                           	psect	cinit
  7001  002E                     start_initialization:	
  7002                           ; #config settings
  7003                           
  7004  002E                     __initialization:
  7005                           
  7006                           ; Initialize objects allocated to BANK0
  7007  002E  30E5               	movlw	low __pidataBANK0
  7008  002F  0084               	movwf	4
  7009  0030  3097               	movlw	(high __pidataBANK0)| (0+128)
  7010  0031  0085               	movwf	5
  7011  0032  3066               	movlw	low __pdataBANK0
  7012  0033  0086               	movwf	6
  7013  0034  3000               	movlw	high __pdataBANK0
  7014  0035  0087               	movwf	7
  7015  0036  3008               	movlw	8
  7016  0037  3197  2787  3180   	fcall	init_ram
  7017                           
  7018                           ; Initialize objects allocated to BANK1
  7019  003A  307D               	movlw	low __pidataBANK1
  7020  003B  0084               	movwf	4
  7021  003C  3088               	movlw	(high __pidataBANK1)| (0+128)
  7022  003D  0085               	movwf	5
  7023  003E  30E1               	movlw	low __pdataBANK1
  7024  003F  0086               	movwf	6
  7025  0040  3000               	movlw	high __pdataBANK1
  7026  0041  0087               	movwf	7
  7027  0042  300A               	movlw	10
  7028  0043  3197  2787  3180   	fcall	init_ram
  7029                           
  7030                           ; Clear objects allocated to COMMON
  7031  0046  01F0               	clrf	__pbssCOMMON& (0+127)
  7032  0047  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  7033  0048  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  7034  0049  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  7035  004A  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  7036  004B  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  7037                           
  7038                           ; Clear objects allocated to BANK0
  7039  004C  3020               	movlw	low __pbssBANK0
  7040  004D  0084               	movwf	4
  7041  004E  3000               	movlw	high __pbssBANK0
  7042  004F  0085               	movwf	5
  7043  0050  302B               	movlw	43
  7044  0051  3197  2781  3180   	fcall	clear_ram0
  7045                           
  7046                           ; Clear objects allocated to BANK1
  7047  0054  30A0               	movlw	low __pbssBANK1
  7048  0055  0084               	movwf	4
  7049  0056  3000               	movlw	high __pbssBANK1
  7050  0057  0085               	movwf	5
  7051  0058  3041               	movlw	65
  7052  0059  3197  2781  3180   	fcall	clear_ram0
  7053                           
  7054                           ; Clear objects allocated to BANK2
  7055  005C  3020               	movlw	low __pbssBANK2
  7056  005D  0084               	movwf	4
  7057  005E  3001               	movlw	high __pbssBANK2
  7058  005F  0085               	movwf	5
  7059  0060  3020               	movlw	32
  7060  0061  3197  2781         	fcall	clear_ram0
  7061  0063                     end_of_initialization:	
  7062                           ;End of C runtime variable initialization code
  7063                           
  7064  0063                     __end_of__initialization:
  7065  0063  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  7066  0064  0140               	movlb	0
  7067  0065  318B  2B0C         	ljmp	_main	;jump to C main() function
  7068                           
  7069                           	psect	bssCOMMON
  7070  0070                     __pbssCOMMON:
  7071  0070                     _eusart1RxTail:
  7072  0070                     	ds	1
  7073  0071                     _eusart1RxHead:
  7074  0071                     	ds	1
  7075  0072                     _eusart1TxTail:
  7076  0072                     	ds	1
  7077  0073                     _eusart1TxHead:
  7078  0073                     	ds	1
  7079  0074                     _adcTSense_curr:
  7080  0074                     	ds	2
  7081                           
  7082                           	psect	bssBANK0
  7083  0020                     __pbssBANK0:
  7084  0020                     _adcTSense_prev:
  7085  0020                     	ds	2
  7086  0022                     _eusart1RxLastError:
  7087  0022                     	ds	1
  7088  0023                     _eusart1RxCount:
  7089  0023                     	ds	1
  7090  0024                     LIN_handler@rxDataIndex:
  7091  0024                     	ds	1
  7092  0025                     LIN_handler@LIN_rxState:
  7093  0025                     	ds	1
  7094  0026                     _CountCallBack:
  7095  0026                     	ds	1
  7096  0027                     _LIN_timerRunning:
  7097  0027                     	ds	1
  7098  0028                     _LIN_rxInProgress:
  7099  0028                     	ds	1
  7100  0029                     _overTempFault:
  7101  0029                     	ds	1
  7102  002A                     _uvloFault:
  7103  002A                     	ds	1
  7104  002B                     _overCurrentFault:
  7105  002B                     	ds	1
  7106  002C                     _outputState:
  7107  002C                     	ds	1
  7108  002D                     _reduced_drive_time:
  7109  002D                     	ds	1
  7110  002E                     _triggerType:
  7111  002E                     	ds	1
  7112  002F                     _Trise_sa:
  7113  002F                     	ds	2
  7114  0031                     _Trise_js:
  7115  0031                     	ds	2
  7116  0033                     _Tjunction:
  7117  0033                     	ds	2
  7118  0035                     _Tsink:
  7119  0035                     	ds	2
  7120  0037                     _iSenseOffset:
  7121  0037                     	ds	2
  7122  0039                     _adcISense_corr:
  7123  0039                     	ds	2
  7124  003B                     _adcISense_curr:
  7125  003B                     	ds	2
  7126  003D                     _adcVccSense_curr:
  7127  003D                     	ds	2
  7128  003F                     _LIN_OVER_TEMP_FAULT_Data:
  7129  003F                     	ds	1
  7130  0040                     _LIN_UVLO_FAULT_Data:
  7131  0040                     	ds	1
  7132  0041                     _LIN_OVER_CURRENT_FAULT_Data:
  7133  0041                     	ds	1
  7134  0042                     _LIN_GET_TRIGGER_TYPE_Data:
  7135  0042                     	ds	1
  7136  0043                     _LIN_OUTPUT_STATE_Data:
  7137  0043                     	ds	1
  7138  0044                     _LIN_REDUCED_DRIVE_TIME_Data:
  7139  0044                     	ds	1
  7140  0045                     _LIN_B1_COEF_Data:
  7141  0045                     	ds	1
  7142  0046                     _LIN_DAC_I_HW_TRIP_Data:
  7143  0046                     	ds	1
  7144  0047                     _LIN_TJ_LIMIT_Data:
  7145  0047                     	ds	1
  7146  0048                     _LIN_ENTER_SLEEP_MODE_Data:
  7147  0048                     	ds	1
  7148  0049                     _LIN_TRIGGER_TYPE_Data:
  7149  0049                     	ds	1
  7150  004A                     _LIN_COMMAND_Data:
  7151  004A                     	ds	1
  7152                           
  7153                           	psect	dataBANK0
  7154  0066                     __pdataBANK0:
  7155  0066                     _isense_max:
  7156  0066                     	ds	2
  7157  0068                     _LIN_timeout:
  7158  0068                     	ds	1
  7159  0069                     _b1_coef:
  7160  0069                     	ds	1
  7161  006A                     _dac_i_hw_trip:
  7162  006A                     	ds	1
  7163  006B                     _tj_limit:
  7164  006B                     	ds	1
  7165  006C                     _Tambient:
  7166  006C                     	ds	2
  7167                           
  7168                           	psect	bssBANK1
  7169  00A0                     __pbssBANK1:
  7170  00A0                     _Trise_raw_prev:
  7171  00A0                     	ds	4
  7172  00A4                     _Trise_raw_curr:
  7173  00A4                     	ds	4
  7174  00A8                     _Trise_filtered:
  7175  00A8                     	ds	4
  7176  00AC                     _adcISense_prev:
  7177  00AC                     	ds	2
  7178  00AE                     _adcISense_OneMOSFET:
  7179  00AE                     	ds	2
  7180  00B0                     _adcVccSense_prev:
  7181  00B0                     	ds	2
  7182  00B2                     _ADC_InterruptHandler:
  7183  00B2                     	ds	2
  7184  00B4                     _ticks_1ms:
  7185  00B4                     	ds	2
  7186  00B6                     _LIN_packet:
  7187  00B6                     	ds	13
  7188  00C3                     _LIN_TEMPERATURE_RISE_SA_Data:
  7189  00C3                     	ds	2
  7190  00C5                     _LIN_TEMPERATURE_RISE_JS_Data:
  7191  00C5                     	ds	2
  7192  00C7                     _LIN_JUNCTION_TEMPERATURE_Data:
  7193  00C7                     	ds	2
  7194  00C9                     _LIN_HEATSINK_TEMPERATURE_Data:
  7195  00C9                     	ds	2
  7196  00CB                     _LIN_AMBIENT_TEMPERATURE_Data:
  7197  00CB                     	ds	2
  7198  00CD                     _LIN_CURRENT_SENSE_OFFSET_Data:
  7199  00CD                     	ds	2
  7200  00CF                     _LIN_ADC_CURRENT_SENSE_CORRECTED_Data:
  7201  00CF                     	ds	2
  7202  00D1                     _LIN_ADC_TEMP_SENSE_Data:
  7203  00D1                     	ds	2
  7204  00D3                     _LIN_ADC_CURRENT_SENSE_UNCORRECTED_Data:
  7205  00D3                     	ds	2
  7206  00D5                     _LIN_ADC_VCC_SENSE_Data:
  7207  00D5                     	ds	2
  7208  00D7                     _LIN_TCC_SAMPLE_TIME_Data:
  7209  00D7                     	ds	2
  7210  00D9                     _LIN_ISENSE_MAX_Data:
  7211  00D9                     	ds	2
  7212  00DB                     _LIN_CURRENT2COUNTS_SQUARED_Data:
  7213  00DB                     	ds	2
  7214  00DD                     _LIN_FACTOR_RDSON_RTHSA_Data:
  7215  00DD                     	ds	2
  7216  00DF                     _LIN_FACTOR_RDSON_RTHJS_Data:
  7217  00DF                     	ds	2
  7218                           
  7219                           	psect	dataBANK1
  7220  00E1                     __pdataBANK1:
  7221  00E1                     _tcc_sample_time:
  7222  00E1                     	ds	2
  7223  00E3                     _a1_coef:
  7224  00E3                     	ds	2
  7225  00E5                     _current2counts_squared:
  7226  00E5                     	ds	2
  7227  00E7                     _factor_rdson_rthsa:
  7228  00E7                     	ds	2
  7229  00E9                     _factor_rdson_rthjs:
  7230  00E9                     	ds	2
  7231                           
  7232                           	psect	bssBANK2
  7233  0120                     __pbssBANK2:
  7234  0120                     _eusart1RxStatusBuffer:
  7235  0120                     	ds	8
  7236  0128                     _eusart1RxBuffer:
  7237  0128                     	ds	8
  7238  0130                     _eusart1TxBuffer:
  7239  0130                     	ds	8
  7240  0138                     _LIN_DIAGNOSTIC_Data:
  7241  0138                     	ds	8
  7242                           
  7243                           	psect	inittext
  7244  1787                     init_ram:
  7245  1787  00FE               	movwf	126
  7246  1788                     initloop:
  7247  1788  0012               	moviw fsr0++
  7248  1789  001E               	movwi fsr1++
  7249  178A  0BFE               	decfsz	126,f
  7250  178B  2F88               	goto	initloop
  7251  178C  3400               	retlw	0
  7252                           
  7253                           	psect	clrtext
  7254  1781                     clear_ram0:	
  7255                           ;	Called with FSR0 containing the base address, and
  7256                           ;	WREG with the size to clear
  7257                           
  7258  1781  0064               	clrwdt	;clear the watchdog before getting into this loop
  7259  1782                     clrloop0:
  7260  1782  0180               	clrf	0	;clear RAM location pointed to by FSR
  7261  1783  3101               	addfsr 0,1
  7262  1784  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  7263  1785  2F82               	goto	clrloop0	;have we reached the end yet?
  7264  1786  3400               	retlw	0	;all done for this memory range, return
  7265                           
  7266                           	psect	cstackBANK2
  7267  0140                     __pcstackBANK2:
  7268  0140                     ??_TCC_Curve:
  7269  0140                     ??_LIN_handler:	
  7270                           ; 1 bytes @ 0x0
  7271                           
  7272                           
  7273                           ; 1 bytes @ 0x0
  7274  0140                     	ds	12
  7275  014C                     _TCC_Curve$3311:
  7276                           
  7277                           ; 8 bytes @ 0xC
  7278  014C                     	ds	8
  7279  0154                     _TCC_Curve$3312:
  7280                           
  7281                           ; 4 bytes @ 0x14
  7282  0154                     	ds	4
  7283  0158                     ??_main:
  7284                           
  7285                           ; 1 bytes @ 0x18
  7286  0158                     	ds	2
  7287                           
  7288                           	psect	cstackCOMMON
  7289  0076                     __pcstackCOMMON:
  7290  0076                     ?_processLIN:
  7291  0076                     ?_LIN_getPacket:	
  7292                           ; 1 bytes @ 0x0
  7293                           
  7294  0076                     ?_CmdOutput:	
  7295                           ; 1 bytes @ 0x0
  7296                           
  7297  0076                     ?_EFuseInit:	
  7298                           ; 1 bytes @ 0x0
  7299                           
  7300  0076                     ?_LIN_stopTimer:	
  7301                           ; 1 bytes @ 0x0
  7302                           
  7303  0076                     ?_LIN_enableRx:	
  7304                           ; 1 bytes @ 0x0
  7305                           
  7306  0076                     ?_LIN_setTimerHandler:	
  7307                           ; 1 bytes @ 0x0
  7308                           
  7309  0076                     ?_EUSART1_is_rx_ready:	
  7310                           ; 1 bytes @ 0x0
  7311                           
  7312  0076                     ?_LIN_startTimer:	
  7313                           ; 1 bytes @ 0x0
  7314                           
  7315  0076                     ?_LIN_breakCheck:	
  7316                           ; 1 bytes @ 0x0
  7317                           
  7318  0076                     ?_EUSART1_Read:	
  7319                           ; 1 bytes @ 0x0
  7320                           
  7321  0076                     ?_LIN_checkPID:	
  7322                           ; 1 bytes @ 0x0
  7323                           
  7324  0076                     ?_LIN_disableRx:	
  7325                           ; 1 bytes @ 0x0
  7326                           
  7327  0076                     ?_EUSART1_Write:	
  7328                           ; 1 bytes @ 0x0
  7329                           
  7330  0076                     ?_LIN_calcParity:	
  7331                           ; 1 bytes @ 0x0
  7332                           
  7333  0076                     ?_EUSART1_get_last_status:	
  7334                           ; 1 bytes @ 0x0
  7335                           
  7336  0076                     ?_PMD_Initialize:	
  7337                           ; 1 bytes @ 0x0
  7338                           
  7339  0076                     ?_PIN_MANAGER_Initialize:	
  7340                           ; 1 bytes @ 0x0
  7341                           
  7342  0076                     ?_OSCILLATOR_Initialize:	
  7343                           ; 1 bytes @ 0x0
  7344                           
  7345  0076                     ?_FVR_Initialize:	
  7346                           ; 1 bytes @ 0x0
  7347                           
  7348  0076                     ?_TMR2_Initialize:	
  7349                           ; 1 bytes @ 0x0
  7350                           
  7351  0076                     ?_TMR0_Initialize:	
  7352                           ; 1 bytes @ 0x0
  7353                           
  7354  0076                     ?_CLC1_Initialize:	
  7355                           ; 1 bytes @ 0x0
  7356                           
  7357  0076                     ?_ADC_Initialize:	
  7358                           ; 1 bytes @ 0x0
  7359                           
  7360  0076                     ?_CLC3_Initialize:	
  7361                           ; 1 bytes @ 0x0
  7362                           
  7363  0076                     ?_DAC1_Initialize:	
  7364                           ; 1 bytes @ 0x0
  7365                           
  7366  0076                     ?_TMR1_Initialize:	
  7367                           ; 1 bytes @ 0x0
  7368                           
  7369  0076                     ?_EUSART1_Initialize:	
  7370                           ; 1 bytes @ 0x0
  7371                           
  7372  0076                     ?_EUSART1_Receive_ISR:	
  7373                           ; 1 bytes @ 0x0
  7374                           
  7375  0076                     ?_EUSART1_Transmit_ISR:	
  7376                           ; 1 bytes @ 0x0
  7377                           
  7378  0076                     ??_EUSART1_Transmit_ISR:	
  7379                           ; 1 bytes @ 0x0
  7380                           
  7381  0076                     ?_EUSART1_DefaultFramingErrorHandler:	
  7382                           ; 1 bytes @ 0x0
  7383                           
  7384  0076                     ??_EUSART1_DefaultFramingErrorHandler:	
  7385                           ; 1 bytes @ 0x0
  7386                           
  7387  0076                     ?_EUSART1_DefaultOverrunErrorHandler:	
  7388                           ; 1 bytes @ 0x0
  7389                           
  7390  0076                     ??_EUSART1_DefaultOverrunErrorHandler:	
  7391                           ; 1 bytes @ 0x0
  7392                           
  7393  0076                     ?_EUSART1_DefaultErrorHandler:	
  7394                           ; 1 bytes @ 0x0
  7395                           
  7396  0076                     ?_EUSART1_RxDataHandler:	
  7397                           ; 1 bytes @ 0x0
  7398                           
  7399  0076                     ??_EUSART1_RxDataHandler:	
  7400                           ; 1 bytes @ 0x0
  7401                           
  7402  0076                     ?_TMR0_DefaultInterruptHandler:	
  7403                           ; 1 bytes @ 0x0
  7404                           
  7405  0076                     ??_TMR0_DefaultInterruptHandler:	
  7406                           ; 1 bytes @ 0x0
  7407                           
  7408  0076                     ?_ProcessAnalogInputs:	
  7409                           ; 1 bytes @ 0x0
  7410                           
  7411  0076                     ?_EFuse:	
  7412                           ; 1 bytes @ 0x0
  7413                           
  7414  0076                     ?_TCC_Curve:	
  7415                           ; 1 bytes @ 0x0
  7416                           
  7417  0076                     ?_LIN_Slave_Initialize:	
  7418                           ; 1 bytes @ 0x0
  7419                           
  7420  0076                     ?_Update_LIN_Data:	
  7421                           ; 1 bytes @ 0x0
  7422                           
  7423  0076                     ?_LIN_queuePacket:	
  7424                           ; 1 bytes @ 0x0
  7425                           
  7426  0076                     ?_LIN_handler:	
  7427                           ; 1 bytes @ 0x0
  7428                           
  7429  0076                     ?_LIN_timerHandler:	
  7430                           ; 1 bytes @ 0x0
  7431                           
  7432  0076                     ??_LIN_timerHandler:	
  7433                           ; 1 bytes @ 0x0
  7434                           
  7435  0076                     ?_CLC4_Initialize:	
  7436                           ; 1 bytes @ 0x0
  7437                           
  7438  0076                     ?_CMP2_Initialize:	
  7439                           ; 1 bytes @ 0x0
  7440                           
  7441  0076                     ?_CLC2_Initialize:	
  7442                           ; 1 bytes @ 0x0
  7443                           
  7444  0076                     ?_CLC2_ISR:	
  7445                           ; 1 bytes @ 0x0
  7446                           
  7447  0076                     ??_CLC2_ISR:	
  7448                           ; 1 bytes @ 0x0
  7449                           
  7450  0076                     ?_SYSTEM_Initialize:	
  7451                           ; 1 bytes @ 0x0
  7452                           
  7453  0076                     ?_TMR0_Reload:	
  7454                           ; 1 bytes @ 0x0
  7455                           
  7456  0076                     ?_TMR0_ISR:	
  7457                           ; 1 bytes @ 0x0
  7458                           
  7459  0076                     ?_TMR2_Start:	
  7460                           ; 1 bytes @ 0x0
  7461                           
  7462  0076                     ?_TMR2_Stop:	
  7463                           ; 1 bytes @ 0x0
  7464                           
  7465  0076                     ?_TMR1_StartTimer:	
  7466                           ; 1 bytes @ 0x0
  7467                           
  7468  0076                     ?_TMR1_StopTimer:	
  7469                           ; 1 bytes @ 0x0
  7470                           
  7471  0076                     ?_INTERRUPT_InterruptManager:	
  7472                           ; 1 bytes @ 0x0
  7473                           
  7474  0076                     ?_ADC_SelectChannel:	
  7475                           ; 1 bytes @ 0x0
  7476                           
  7477  0076                     ??_ADC_SelectChannel:	
  7478                           ; 1 bytes @ 0x0
  7479                           
  7480  0076                     ?_main:	
  7481                           ; 1 bytes @ 0x0
  7482                           
  7483  0076                     ?i1_LIN_stopTimer:	
  7484                           ; 1 bytes @ 0x0
  7485                           
  7486  0076                     ??i1_LIN_stopTimer:	
  7487                           ; 1 bytes @ 0x0
  7488                           
  7489  0076                     ?i1_TMR2_Initialize:	
  7490                           ; 1 bytes @ 0x0
  7491                           
  7492  0076                     ??i1_TMR2_Initialize:	
  7493                           ; 1 bytes @ 0x0
  7494                           
  7495  0076                     ?i1_TMR2_Start:	
  7496                           ; 1 bytes @ 0x0
  7497                           
  7498  0076                     ??i1_TMR2_Start:	
  7499                           ; 1 bytes @ 0x0
  7500                           
  7501  0076                     ?i1_TMR2_Stop:	
  7502                           ; 1 bytes @ 0x0
  7503                           
  7504  0076                     ??i1_TMR2_Stop:	
  7505                           ; 1 bytes @ 0x0
  7506                           
  7507  0076                     ?i1_TMR1_StartTimer:	
  7508                           ; 1 bytes @ 0x0
  7509                           
  7510  0076                     ??i1_TMR1_StartTimer:	
  7511                           ; 1 bytes @ 0x0
  7512                           
  7513  0076                     ?i1_TMR1_StopTimer:	
  7514                           ; 1 bytes @ 0x0
  7515                           
  7516  0076                     ??i1_TMR1_StopTimer:	
  7517                           ; 1 bytes @ 0x0
  7518                           
  7519  0076                     ?i1_TMR1_WriteTimer:	
  7520                           ; 1 bytes @ 0x0
  7521                           
  7522  0076                     ?i1_CmdOutput:	
  7523                           ; 1 bytes @ 0x0
  7524                           
  7525  0076                     ?_ADC_GetConversion:	
  7526                           ; 1 bytes @ 0x0
  7527                           
  7528  0076                     i1TMR1_WriteTimer@timerVal:	
  7529                           ; 2 bytes @ 0x0
  7530                           
  7531                           
  7532                           ; 2 bytes @ 0x0
  7533  0076                     	ds	1
  7534  0077                     ??_EUSART1_Receive_ISR:
  7535  0077                     ??_EUSART1_DefaultErrorHandler:	
  7536                           ; 1 bytes @ 0x1
  7537                           
  7538  0077                     ADC_SelectChannel@channel:	
  7539                           ; 1 bytes @ 0x1
  7540                           
  7541                           
  7542                           ; 1 bytes @ 0x1
  7543  0077                     	ds	1
  7544  0078                     ??_ADC_GetConversion:
  7545  0078                     ??i1_TMR1_WriteTimer:	
  7546                           ; 1 bytes @ 0x2
  7547                           
  7548  0078                     ??i1_CmdOutput:	
  7549                           ; 1 bytes @ 0x2
  7550                           
  7551                           
  7552                           ; 1 bytes @ 0x2
  7553  0078                     	ds	1
  7554  0079                     ADC_GetConversion@channel:
  7555                           
  7556                           ; 1 bytes @ 0x3
  7557  0079                     	ds	1
  7558  007A                     i1CmdOutput@enable:
  7559                           
  7560                           ; 1 bytes @ 0x4
  7561  007A                     	ds	1
  7562  007B                     ??_ProcessAnalogInputs:
  7563                           
  7564                           ; 1 bytes @ 0x5
  7565  007B                     	ds	1
  7566  007C                     ??_TMR0_ISR:
  7567  007C                     ??_INTERRUPT_InterruptManager:	
  7568                           ; 1 bytes @ 0x6
  7569                           
  7570                           
  7571                           	psect	cstackBANK0
  7572  004B                     __pcstackBANK0:	
  7573                           ; 1 bytes @ 0x6
  7574                           
  7575  004B                     ??_LIN_stopTimer:
  7576  004B                     ??_LIN_enableRx:	
  7577                           ; 1 bytes @ 0x0
  7578                           
  7579  004B                     ?_memcpy:	
  7580                           ; 1 bytes @ 0x0
  7581                           
  7582  004B                     ?_LIN_getChecksum:	
  7583                           ; 1 bytes @ 0x0
  7584                           
  7585  004B                     ??_EUSART1_is_rx_ready:	
  7586                           ; 1 bytes @ 0x0
  7587                           
  7588  004B                     ??_EUSART1_Read:	
  7589                           ; 1 bytes @ 0x0
  7590                           
  7591  004B                     ?_LIN_getFromTable:	
  7592                           ; 1 bytes @ 0x0
  7593                           
  7594  004B                     ??_LIN_disableRx:	
  7595                           ; 1 bytes @ 0x0
  7596                           
  7597  004B                     ?_memset:	
  7598                           ; 1 bytes @ 0x0
  7599                           
  7600  004B                     ??_EUSART1_Write:	
  7601                           ; 1 bytes @ 0x0
  7602                           
  7603  004B                     ??_LIN_calcParity:	
  7604                           ; 1 bytes @ 0x0
  7605                           
  7606  004B                     ?_TMR0_WriteTimer:	
  7607                           ; 1 bytes @ 0x0
  7608                           
  7609  004B                     ?_TMR0_SetInterruptHandler:	
  7610                           ; 1 bytes @ 0x0
  7611                           
  7612  004B                     ??_EUSART1_get_last_status:	
  7613                           ; 1 bytes @ 0x0
  7614                           
  7615  004B                     ??_PMD_Initialize:	
  7616                           ; 1 bytes @ 0x0
  7617                           
  7618  004B                     ??_PIN_MANAGER_Initialize:	
  7619                           ; 1 bytes @ 0x0
  7620                           
  7621  004B                     ??_OSCILLATOR_Initialize:	
  7622                           ; 1 bytes @ 0x0
  7623                           
  7624  004B                     ??_FVR_Initialize:	
  7625                           ; 1 bytes @ 0x0
  7626                           
  7627  004B                     ??_TMR2_Initialize:	
  7628                           ; 1 bytes @ 0x0
  7629                           
  7630  004B                     ??_CLC1_Initialize:	
  7631                           ; 1 bytes @ 0x0
  7632                           
  7633  004B                     ??_ADC_Initialize:	
  7634                           ; 1 bytes @ 0x0
  7635                           
  7636  004B                     ??_CLC3_Initialize:	
  7637                           ; 1 bytes @ 0x0
  7638                           
  7639  004B                     ??_DAC1_Initialize:	
  7640                           ; 1 bytes @ 0x0
  7641                           
  7642  004B                     ??_TMR1_Initialize:	
  7643                           ; 1 bytes @ 0x0
  7644                           
  7645  004B                     ?_EUSART1_SetRxInterruptHandler:	
  7646                           ; 1 bytes @ 0x0
  7647                           
  7648  004B                     ?_EUSART1_SetTxInterruptHandler:	
  7649                           ; 1 bytes @ 0x0
  7650                           
  7651  004B                     ?_EUSART1_SetFramingErrorHandler:	
  7652                           ; 1 bytes @ 0x0
  7653                           
  7654  004B                     ?_EUSART1_SetOverrunErrorHandler:	
  7655                           ; 1 bytes @ 0x0
  7656                           
  7657  004B                     ?_EUSART1_SetErrorHandler:	
  7658                           ; 1 bytes @ 0x0
  7659                           
  7660  004B                     ??_Update_LIN_Data:	
  7661                           ; 1 bytes @ 0x0
  7662                           
  7663  004B                     ??_CLC4_Initialize:	
  7664                           ; 1 bytes @ 0x0
  7665                           
  7666  004B                     ??_CMP2_Initialize:	
  7667                           ; 1 bytes @ 0x0
  7668                           
  7669  004B                     ??_CLC2_Initialize:	
  7670                           ; 1 bytes @ 0x0
  7671                           
  7672  004B                     ??_TMR0_Reload:	
  7673                           ; 1 bytes @ 0x0
  7674                           
  7675  004B                     ??_TMR2_Start:	
  7676                           ; 1 bytes @ 0x0
  7677                           
  7678  004B                     ??_TMR2_Stop:	
  7679                           ; 1 bytes @ 0x0
  7680                           
  7681  004B                     ??_TMR1_StartTimer:	
  7682                           ; 1 bytes @ 0x0
  7683                           
  7684  004B                     ??_TMR1_StopTimer:	
  7685                           ; 1 bytes @ 0x0
  7686                           
  7687  004B                     ?_TMR1_WriteTimer:	
  7688                           ; 1 bytes @ 0x0
  7689                           
  7690  004B                     ?_GetAmbientTemperature:	
  7691                           ; 1 bytes @ 0x0
  7692                           
  7693  004B                     ?___lmul:	
  7694                           ; 2 bytes @ 0x0
  7695                           
  7696  004B                     ?___omul:	
  7697                           ; 4 bytes @ 0x0
  7698                           
  7699  004B                     LIN_getFromTable@param:	
  7700                           ; 8 bytes @ 0x0
  7701                           
  7702  004B                     LIN_getChecksum@pid:	
  7703                           ; 1 bytes @ 0x0
  7704                           
  7705  004B                     EUSART1_SetFramingErrorHandler@interruptHandler:	
  7706                           ; 1 bytes @ 0x0
  7707                           
  7708  004B                     EUSART1_SetOverrunErrorHandler@interruptHandler:	
  7709                           ; 2 bytes @ 0x0
  7710                           
  7711  004B                     EUSART1_SetErrorHandler@interruptHandler:	
  7712                           ; 2 bytes @ 0x0
  7713                           
  7714  004B                     EUSART1_SetTxInterruptHandler@interruptHandler:	
  7715                           ; 2 bytes @ 0x0
  7716                           
  7717  004B                     EUSART1_SetRxInterruptHandler@interruptHandler:	
  7718                           ; 2 bytes @ 0x0
  7719                           
  7720  004B                     TMR0_WriteTimer@timerVal:	
  7721                           ; 2 bytes @ 0x0
  7722                           
  7723  004B                     TMR0_SetInterruptHandler@InterruptHandler:	
  7724                           ; 2 bytes @ 0x0
  7725                           
  7726  004B                     TMR1_WriteTimer@timerVal:	
  7727                           ; 2 bytes @ 0x0
  7728                           
  7729  004B                     memcpy@s1:	
  7730                           ; 2 bytes @ 0x0
  7731                           
  7732  004B                     memset@c:	
  7733                           ; 2 bytes @ 0x0
  7734                           
  7735  004B                     ___lmul@multiplier:	
  7736                           ; 2 bytes @ 0x0
  7737                           
  7738  004B                     ___omul@multiplier:	
  7739                           ; 4 bytes @ 0x0
  7740                           
  7741                           
  7742                           ; 8 bytes @ 0x0
  7743  004B                     	ds	1
  7744  004C                     ??_LIN_getFromTable:
  7745  004C                     LIN_calcParity@CMD:	
  7746                           ; 1 bytes @ 0x1
  7747                           
  7748  004C                     LIN_getChecksum@data:	
  7749                           ; 1 bytes @ 0x1
  7750                           
  7751  004C                     EUSART1_Read@readValue:	
  7752                           ; 1 bytes @ 0x1
  7753                           
  7754  004C                     EUSART1_Write@txData:	
  7755                           ; 1 bytes @ 0x1
  7756                           
  7757                           
  7758                           ; 1 bytes @ 0x1
  7759  004C                     	ds	1
  7760  004D                     ?_LIN_init:
  7761  004D                     ??_CmdOutput:	
  7762                           ; 1 bytes @ 0x2
  7763                           
  7764  004D                     ??_LIN_setTimerHandler:	
  7765                           ; 1 bytes @ 0x2
  7766                           
  7767  004D                     ??_LIN_getChecksum:	
  7768                           ; 1 bytes @ 0x2
  7769                           
  7770  004D                     ??_LIN_startTimer:	
  7771                           ; 1 bytes @ 0x2
  7772                           
  7773  004D                     ??_LIN_breakCheck:	
  7774                           ; 1 bytes @ 0x2
  7775                           
  7776  004D                     ??_TMR0_WriteTimer:	
  7777                           ; 1 bytes @ 0x2
  7778                           
  7779  004D                     ??_TMR0_SetInterruptHandler:	
  7780                           ; 1 bytes @ 0x2
  7781                           
  7782  004D                     ??_TMR0_Initialize:	
  7783                           ; 1 bytes @ 0x2
  7784                           
  7785  004D                     ??_EUSART1_Initialize:	
  7786                           ; 1 bytes @ 0x2
  7787                           
  7788  004D                     ??_EUSART1_SetRxInterruptHandler:	
  7789                           ; 1 bytes @ 0x2
  7790                           
  7791  004D                     ??_EUSART1_SetTxInterruptHandler:	
  7792                           ; 1 bytes @ 0x2
  7793                           
  7794  004D                     ??_EUSART1_SetFramingErrorHandler:	
  7795                           ; 1 bytes @ 0x2
  7796                           
  7797  004D                     ??_EUSART1_SetOverrunErrorHandler:	
  7798                           ; 1 bytes @ 0x2
  7799                           
  7800  004D                     ??_EUSART1_SetErrorHandler:	
  7801                           ; 1 bytes @ 0x2
  7802                           
  7803  004D                     ??_GetAmbientTemperature:	
  7804                           ; 1 bytes @ 0x2
  7805                           
  7806  004D                     ??_TMR1_WriteTimer:	
  7807                           ; 1 bytes @ 0x2
  7808                           
  7809  004D                     LIN_calcParity@PID:	
  7810                           ; 1 bytes @ 0x2
  7811                           
  7812  004D                     LIN_init@command:	
  7813                           ; 1 bytes @ 0x2
  7814                           
  7815  004D                     memcpy@n:	
  7816                           ; 2 bytes @ 0x2
  7817                           
  7818  004D                     memset@n:	
  7819                           ; 2 bytes @ 0x2
  7820                           
  7821                           
  7822                           ; 2 bytes @ 0x2
  7823  004D                     	ds	1
  7824  004E                     LIN_getFromTable@cmd:
  7825  004E                     LIN_startTimer@timeout:	
  7826                           ; 1 bytes @ 0x3
  7827                           
  7828                           
  7829                           ; 1 bytes @ 0x3
  7830  004E                     	ds	1
  7831  004F                     ??_memcpy:
  7832  004F                     ??_memset:	
  7833                           ; 1 bytes @ 0x4
  7834                           
  7835  004F                     LIN_getFromTable@length:	
  7836                           ; 1 bytes @ 0x4
  7837                           
  7838  004F                     LIN_getChecksum@length:	
  7839                           ; 1 bytes @ 0x4
  7840                           
  7841  004F                     CmdOutput@enable:	
  7842                           ; 1 bytes @ 0x4
  7843                           
  7844  004F                     LIN_init@processData:	
  7845                           ; 1 bytes @ 0x4
  7846                           
  7847  004F                     ___lmul@multiplicand:	
  7848                           ; 2 bytes @ 0x4
  7849                           
  7850                           
  7851                           ; 4 bytes @ 0x4
  7852  004F                     	ds	1
  7853  0050                     ??_EFuseInit:
  7854  0050                     LIN_getChecksum@i:	
  7855                           ; 1 bytes @ 0x5
  7856                           
  7857  0050                     memcpy@tmp:	
  7858                           ; 1 bytes @ 0x5
  7859                           
  7860  0050                     LIN_getFromTable@rxCommand:	
  7861                           ; 1 bytes @ 0x5
  7862                           
  7863                           
  7864                           ; 2 bytes @ 0x5
  7865  0050                     	ds	1
  7866  0051                     ??_LIN_init:
  7867  0051                     LIN_getChecksum@checksum:	
  7868                           ; 1 bytes @ 0x6
  7869                           
  7870  0051                     GetAmbientTemperature@adcTemp:	
  7871                           ; 2 bytes @ 0x6
  7872                           
  7873  0051                     memcpy@s:	
  7874                           ; 2 bytes @ 0x6
  7875                           
  7876  0051                     memset@k:	
  7877                           ; 2 bytes @ 0x6
  7878                           
  7879                           
  7880                           ; 2 bytes @ 0x6
  7881  0051                     	ds	1
  7882  0052                     ??_LIN_checkPID:
  7883  0052                     LIN_init@tableLength:	
  7884                           ; 1 bytes @ 0x7
  7885                           
  7886  0052                     LIN_checkPID@pid:	
  7887                           ; 1 bytes @ 0x7
  7888                           
  7889                           
  7890                           ; 1 bytes @ 0x7
  7891  0052                     	ds	1
  7892  0053                     ?_LIN_sendPacket:
  7893  0053                     ??_LIN_Slave_Initialize:	
  7894                           ; 1 bytes @ 0x8
  7895                           
  7896  0053                     ??_SYSTEM_Initialize:	
  7897                           ; 1 bytes @ 0x8
  7898                           
  7899  0053                     ??___lmul:	
  7900                           ; 1 bytes @ 0x8
  7901                           
  7902  0053                     LIN_sendPacket@pid:	
  7903                           ; 1 bytes @ 0x8
  7904                           
  7905  0053                     GetAmbientTemperature@i:	
  7906                           ; 1 bytes @ 0x8
  7907                           
  7908  0053                     memcpy@d:	
  7909                           ; 1 bytes @ 0x8
  7910                           
  7911  0053                     memset@dest:	
  7912                           ; 1 bytes @ 0x8
  7913                           
  7914  0053                     ___lmul@product:	
  7915                           ; 1 bytes @ 0x8
  7916                           
  7917  0053                     ___omul@multiplicand:	
  7918                           ; 4 bytes @ 0x8
  7919                           
  7920                           
  7921                           ; 8 bytes @ 0x8
  7922  0053                     	ds	1
  7923  0054                     LIN_sendPacket@data:
  7924  0054                     memcpy@d1:	
  7925                           ; 1 bytes @ 0x9
  7926                           
  7927  0054                     memset@s:	
  7928                           ; 1 bytes @ 0x9
  7929                           
  7930  0054                     GetAmbientTemperature@temperature:	
  7931                           ; 1 bytes @ 0x9
  7932                           
  7933                           
  7934                           ; 2 bytes @ 0x9
  7935  0054                     	ds	1
  7936  0055                     ??_LIN_getPacket:
  7937  0055                     ??_LIN_sendPacket:	
  7938                           ; 1 bytes @ 0xA
  7939                           
  7940                           
  7941                           ; 1 bytes @ 0xA
  7942  0055                     	ds	1
  7943  0056                     LIN_getPacket@data:
  7944                           
  7945                           ; 1 bytes @ 0xB
  7946  0056                     	ds	1
  7947  0057                     ?___lldiv:
  7948  0057                     LIN_sendPacket@length:	
  7949                           ; 4 bytes @ 0xC
  7950                           
  7951  0057                     LIN_getPacket@cmd:	
  7952                           ; 1 bytes @ 0xC
  7953                           
  7954  0057                     ___lldiv@divisor:	
  7955                           ; 1 bytes @ 0xC
  7956                           
  7957                           
  7958                           ; 4 bytes @ 0xC
  7959  0057                     	ds	1
  7960  0058                     ??_processLIN:
  7961  0058                     LIN_sendPacket@i:	
  7962                           ; 1 bytes @ 0xD
  7963                           
  7964                           
  7965                           ; 1 bytes @ 0xD
  7966  0058                     	ds	1
  7967  0059                     ??_LIN_queuePacket:
  7968                           
  7969                           ; 1 bytes @ 0xE
  7970  0059                     	ds	2
  7971  005B                     ??___omul:
  7972  005B                     ___lldiv@dividend:	
  7973                           ; 1 bytes @ 0x10
  7974                           
  7975                           
  7976                           ; 4 bytes @ 0x10
  7977  005B                     	ds	1
  7978  005C                     LIN_queuePacket@cmd:
  7979  005C                     ___omul@product:	
  7980                           ; 1 bytes @ 0x11
  7981                           
  7982                           
  7983                           ; 8 bytes @ 0x11
  7984  005C                     	ds	1
  7985  005D                     processLIN@cmd:
  7986  005D                     LIN_queuePacket@i:	
  7987                           ; 1 bytes @ 0x12
  7988                           
  7989                           
  7990                           ; 1 bytes @ 0x12
  7991  005D                     	ds	1
  7992  005E                     LIN_queuePacket@tempSchedule:
  7993  005E                     processLIN@tempRxData:	
  7994                           ; 2 bytes @ 0x13
  7995                           
  7996                           
  7997                           ; 8 bytes @ 0x13
  7998  005E                     	ds	1
  7999  005F                     ??___lldiv:
  8000                           
  8001                           ; 1 bytes @ 0x14
  8002  005F                     	ds	1
  8003  0060                     ___lldiv@quotient:
  8004                           
  8005                           ; 4 bytes @ 0x15
  8006  0060                     	ds	4
  8007  0064                     ___lldiv@counter:
  8008                           
  8009                           ; 1 bytes @ 0x19
  8010  0064                     	ds	1
  8011  0065                     ??_EFuse:
  8012                           
  8013                           ; 1 bytes @ 0x1A
  8014  0065                     	ds	1
  8015                           
  8016                           	psect	maintext
  8017  0B0C                     __pmaintext:	
  8018 ;;
  8019 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  8020 ;;
  8021 ;; *************** function _main *****************
  8022 ;; Defined at:
  8023 ;;		line 55 in file "main.c"
  8024 ;; Parameters:    Size  Location     Type
  8025 ;;		None
  8026 ;; Auto vars:     Size  Location     Type
  8027 ;;		None
  8028 ;; Return value:  Size  Location     Type
  8029 ;;                  1    wreg      void 
  8030 ;; Registers used:
  8031 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8032 ;; Tracked objects:
  8033 ;;		On entry : B3F/0
  8034 ;;		On exit  : 3C/0
  8035 ;;		Unchanged: 0/0
  8036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8039 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  8040 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  8041 ;;Total ram usage:        2 bytes
  8042 ;; Hardware stack levels required when called: 10
  8043 ;; This function calls:
  8044 ;;		_CmdOutput
  8045 ;;		_EFuse
  8046 ;;		_EFuseInit
  8047 ;;		_LIN_handler
  8048 ;;		_SYSTEM_Initialize
  8049 ;; This function is called by:
  8050 ;;		Startup code after reset
  8051 ;; This function uses a non-reentrant model
  8052 ;;
  8053                           
  8054                           
  8055                           ;psect for function _main
  8056  0B0C                     _main:
  8057                           
  8058                           ;main.c: 57:     SYSTEM_Initialize();
  8059                           
  8060                           ;incstack = 0
  8061                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8062  0B0C  318B  23C6  318B   	fcall	_SYSTEM_Initialize
  8063                           
  8064                           ;main.c: 59:     EFuseInit();
  8065  0B0F  318A  224C  318B   	fcall	_EFuseInit
  8066  0B12  1719               	bsf	25,6	;volatile
  8067                           
  8068                           ;main.c: 61:     _delay((unsigned long)((1000)*(32000000/4000.0)));
  8069  0B13  3029               	movlw	41
  8070  0B14  0142               	movlb	2	; select bank2
  8071  0B15  00D9               	movwf	(??_main^(0+256)+1)
  8072  0B16  3096               	movlw	150
  8073  0B17  00D8               	movwf	??_main^(0+256)
  8074  0B18  307F               	movlw	127
  8075  0B19                     u3417:
  8076  0B19  0B89               	decfsz	9,f
  8077  0B1A  2B19               	goto	u3417
  8078  0B1B  0BD8               	decfsz	??_main^(0+256),f
  8079  0B1C  2B19               	goto	u3417
  8080  0B1D  0BD9               	decfsz	(??_main^(0+256)+1),f
  8081  0B1E  2B19               	goto	u3417
  8082                           
  8083                           ;main.c: 63:     (INTCONbits.GIE = 1);
  8084  0B1F  178B               	bsf	11,7	;volatile
  8085                           
  8086                           ;main.c: 64:     (INTCONbits.PEIE = 1);
  8087  0B20  170B               	bsf	11,6	;volatile
  8088                           
  8089                           ;main.c: 66:     _delay((unsigned long)((100)*(32000000/4000.0)));
  8090  0B21  3005               	movlw	5
  8091  0B22  0142               	movlb	2	; select bank2
  8092  0B23  00D9               	movwf	(??_main^(0+256)+1)
  8093  0B24  300F               	movlw	15
  8094  0B25  00D8               	movwf	??_main^(0+256)
  8095  0B26  30F1               	movlw	241
  8096  0B27                     u3427:
  8097  0B27  0B89               	decfsz	9,f
  8098  0B28  2B27               	goto	u3427
  8099  0B29  0BD8               	decfsz	??_main^(0+256),f
  8100  0B2A  2B27               	goto	u3427
  8101  0B2B  0BD9               	decfsz	(??_main^(0+256)+1),f
  8102  0B2C  2B27               	goto	u3427
  8103                           
  8104                           ;main.c: 67:     CmdOutput(OUTPUT_ON);
  8105  0B2D  3001               	movlw	1
  8106  0B2E  318D  25B1  318B   	fcall	_CmdOutput
  8107  0B31                     l5424:
  8108                           
  8109                           ;main.c: 70:     {;main.c: 71:         LIN_handler();
  8110  0B31  3183  239E  318B   	fcall	_LIN_handler
  8111                           
  8112                           ;main.c: 72:         EFuse();
  8113  0B34  318E  2678  318B   	fcall	_EFuse
  8114  0B37  2B31               	goto	l5424
  8115  0B38                     __end_of_main:
  8116                           
  8117                           	psect	text1
  8118  0BC6                     __ptext1:	
  8119 ;; *************** function _SYSTEM_Initialize *****************
  8120 ;; Defined at:
  8121 ;;		line 50 in file "mcc_generated_files/mcc.c"
  8122 ;; Parameters:    Size  Location     Type
  8123 ;;		None
  8124 ;; Auto vars:     Size  Location     Type
  8125 ;;		None
  8126 ;; Return value:  Size  Location     Type
  8127 ;;                  1    wreg      void 
  8128 ;; Registers used:
  8129 ;;		wreg, status,2, status,0, pclath, cstack
  8130 ;; Tracked objects:
  8131 ;;		On entry : B3F/0
  8132 ;;		On exit  : 3F/2
  8133 ;;		Unchanged: 0/0
  8134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8138 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8139 ;;Total ram usage:        0 bytes
  8140 ;; Hardware stack levels used: 1
  8141 ;; Hardware stack levels required when called: 9
  8142 ;; This function calls:
  8143 ;;		_ADC_Initialize
  8144 ;;		_CLC1_Initialize
  8145 ;;		_CLC2_Initialize
  8146 ;;		_CLC3_Initialize
  8147 ;;		_CLC4_Initialize
  8148 ;;		_CMP2_Initialize
  8149 ;;		_DAC1_Initialize
  8150 ;;		_EUSART1_Initialize
  8151 ;;		_FVR_Initialize
  8152 ;;		_LIN_Slave_Initialize
  8153 ;;		_OSCILLATOR_Initialize
  8154 ;;		_PIN_MANAGER_Initialize
  8155 ;;		_PMD_Initialize
  8156 ;;		_TMR0_Initialize
  8157 ;;		_TMR1_Initialize
  8158 ;;		_TMR2_Initialize
  8159 ;; This function is called by:
  8160 ;;		_main
  8161 ;; This function uses a non-reentrant model
  8162 ;;
  8163                           
  8164                           
  8165                           ;psect for function _SYSTEM_Initialize
  8166  0BC6                     _SYSTEM_Initialize:
  8167                           
  8168                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
  8169                           
  8170                           ;incstack = 0
  8171                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8172  0BC6  3197  27DD  318B   	fcall	_PMD_Initialize
  8173                           
  8174                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  8175  0BC9  318B  2367  318B   	fcall	_PIN_MANAGER_Initialize
  8176                           
  8177                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  8178  0BCC  3188  2073  318B   	fcall	_OSCILLATOR_Initialize
  8179                           
  8180                           ;mcc_generated_files/mcc.c: 55:     CMP2_Initialize();
  8181  0BCF  3197  27F6  318B   	fcall	_CMP2_Initialize
  8182                           
  8183                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
  8184  0BD2  3188  206F  318B   	fcall	_FVR_Initialize
  8185                           
  8186                           ;mcc_generated_files/mcc.c: 57:     CLC2_Initialize();
  8187  0BD5  3189  212A  318B   	fcall	_CLC2_Initialize
  8188                           
  8189                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
  8190  0BD8  3188  20BB  318B   	fcall	_TMR2_Initialize
  8191                           
  8192                           ;mcc_generated_files/mcc.c: 59:     TMR0_Initialize();
  8193  0BDB  3189  21D2  318B   	fcall	_TMR0_Initialize
  8194                           
  8195                           ;mcc_generated_files/mcc.c: 60:     CLC1_Initialize();
  8196  0BDE  3189  2116  318B   	fcall	_CLC1_Initialize
  8197                           
  8198                           ;mcc_generated_files/mcc.c: 61:     CLC4_Initialize();
  8199  0BE1  3188  20F6  318B   	fcall	_CLC4_Initialize
  8200                           
  8201                           ;mcc_generated_files/mcc.c: 62:     ADC_Initialize();
  8202  0BE4  3197  279D  318B   	fcall	_ADC_Initialize
  8203                           
  8204                           ;mcc_generated_files/mcc.c: 63:     CLC3_Initialize();
  8205  0BE7  3189  2105  318B   	fcall	_CLC3_Initialize
  8206                           
  8207                           ;mcc_generated_files/mcc.c: 64:     DAC1_Initialize();
  8208  0BEA  3197  277B  318B   	fcall	_DAC1_Initialize
  8209                           
  8210                           ;mcc_generated_files/mcc.c: 65:     TMR1_Initialize();
  8211  0BED  3189  219E  318B   	fcall	_TMR1_Initialize
  8212                           
  8213                           ;mcc_generated_files/mcc.c: 66:     EUSART1_Initialize();
  8214  0BF0  318C  2429  318B   	fcall	_EUSART1_Initialize
  8215                           
  8216                           ;mcc_generated_files/mcc.c: 67:     LIN_Slave_Initialize();
  8217  0BF3  3188  20A0         	fcall	_LIN_Slave_Initialize
  8218  0BF5  0008               	return
  8219  0BF6                     __end_of_SYSTEM_Initialize:
  8220                           
  8221                           	psect	text2
  8222  099E                     __ptext2:	
  8223 ;; *************** function _TMR1_Initialize *****************
  8224 ;; Defined at:
  8225 ;;		line 63 in file "mcc_generated_files/tmr1.c"
  8226 ;; Parameters:    Size  Location     Type
  8227 ;;		None
  8228 ;; Auto vars:     Size  Location     Type
  8229 ;;		None
  8230 ;; Return value:  Size  Location     Type
  8231 ;;                  1    wreg      void 
  8232 ;; Registers used:
  8233 ;;		wreg
  8234 ;; Tracked objects:
  8235 ;;		On entry : 3F/12
  8236 ;;		On exit  : 3F/4
  8237 ;;		Unchanged: 0/0
  8238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8242 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8243 ;;Total ram usage:        0 bytes
  8244 ;; Hardware stack levels used: 1
  8245 ;; Hardware stack levels required when called: 5
  8246 ;; This function calls:
  8247 ;;		Nothing
  8248 ;; This function is called by:
  8249 ;;		_SYSTEM_Initialize
  8250 ;; This function uses a non-reentrant model
  8251 ;;
  8252                           
  8253                           
  8254                           ;psect for function _TMR1_Initialize
  8255  099E                     _TMR1_Initialize:
  8256                           
  8257                           ;mcc_generated_files/tmr1.c: 68:     T1GCON = 0x80;
  8258                           
  8259                           ;incstack = 0
  8260                           ; Regs used in _TMR1_Initialize: [wreg]
  8261  099E  3080               	movlw	128
  8262  099F  0144               	movlb	4	; select bank4
  8263  09A0  008F               	movwf	15	;volatile
  8264                           
  8265                           ;mcc_generated_files/tmr1.c: 71:     T1GATE = 0x0D;
  8266  09A1  300D               	movlw	13
  8267  09A2  0090               	movwf	16	;volatile
  8268                           
  8269                           ;mcc_generated_files/tmr1.c: 74:     T1CLK = 0x03;
  8270  09A3  3003               	movlw	3
  8271  09A4  0091               	movwf	17	;volatile
  8272                           
  8273                           ;mcc_generated_files/tmr1.c: 77:     TMR1H = 0xFF;
  8274  09A5  30FF               	movlw	255
  8275  09A6  008D               	movwf	13	;volatile
  8276                           
  8277                           ;mcc_generated_files/tmr1.c: 80:     TMR1L = 0xD8;
  8278  09A7  30D8               	movlw	216
  8279  09A8  008C               	movwf	12	;volatile
  8280                           
  8281                           ;mcc_generated_files/tmr1.c: 83:     PIR4bits.TMR1IF = 0;
  8282  09A9  014E               	movlb	14	; select bank14
  8283  09AA  1010               	bcf	16,0	;volatile
  8284                           
  8285                           ;mcc_generated_files/tmr1.c: 86:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  8286  09AB  0144               	movlb	4	; select bank4
  8287  09AC  080D               	movf	13,w	;volatile
  8288  09AD  0142               	movlb	2	; select bank2
  8289  09AE  00DB               	movwf	(_timer1ReloadVal+1)^(0+256)	;volatile
  8290  09AF  0144               	movlb	4	; select bank4
  8291  09B0  080C               	movf	12,w	;volatile
  8292  09B1  0142               	movlb	2	; select bank2
  8293  09B2  00DA               	movwf	_timer1ReloadVal^(0+256)	;volatile
  8294                           
  8295                           ;mcc_generated_files/tmr1.c: 89:     T1CON = 0x35;
  8296  09B3  3035               	movlw	53
  8297  09B4  0144               	movlb	4	; select bank4
  8298  09B5  008E               	movwf	14	;volatile
  8299  09B6  0008               	return
  8300  09B7                     __end_of_TMR1_Initialize:
  8301                           
  8302                           	psect	text3
  8303  09D2                     __ptext3:	
  8304 ;; *************** function _TMR0_Initialize *****************
  8305 ;; Defined at:
  8306 ;;		line 68 in file "mcc_generated_files/tmr0.c"
  8307 ;; Parameters:    Size  Location     Type
  8308 ;;		None
  8309 ;; Auto vars:     Size  Location     Type
  8310 ;;		None
  8311 ;; Return value:  Size  Location     Type
  8312 ;;                  1    wreg      void 
  8313 ;; Registers used:
  8314 ;;		wreg, status,2, status,0, pclath, cstack
  8315 ;; Tracked objects:
  8316 ;;		On entry : 3F/5
  8317 ;;		On exit  : 3F/B
  8318 ;;		Unchanged: 0/0
  8319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8324 ;;Total ram usage:        0 bytes
  8325 ;; Hardware stack levels used: 1
  8326 ;; Hardware stack levels required when called: 6
  8327 ;; This function calls:
  8328 ;;		_TMR0_SetInterruptHandler
  8329 ;; This function is called by:
  8330 ;;		_SYSTEM_Initialize
  8331 ;; This function uses a non-reentrant model
  8332 ;;
  8333                           
  8334                           
  8335                           ;psect for function _TMR0_Initialize
  8336  09D2                     _TMR0_Initialize:
  8337                           
  8338                           ;mcc_generated_files/tmr0.c: 73:     T0CON1 = 0x56;
  8339                           
  8340                           ;incstack = 0
  8341                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8342  09D2  3056               	movlw	86
  8343  09D3  014B               	movlb	11	; select bank11
  8344  09D4  009F               	movwf	31	;volatile
  8345                           
  8346                           ;mcc_generated_files/tmr0.c: 76:     TMR0H = 0xFF;
  8347  09D5  30FF               	movlw	255
  8348  09D6  009D               	movwf	29	;volatile
  8349                           
  8350                           ;mcc_generated_files/tmr0.c: 79:     TMR0L = 0x83;
  8351  09D7  3083               	movlw	131
  8352  09D8  009C               	movwf	28	;volatile
  8353                           
  8354                           ;mcc_generated_files/tmr0.c: 82:     timer0ReloadVal16bit = (uint16_t) (TMR0H << 8) | TM
      +                          R0L;
  8355  09D9  081D               	movf	29,w	;volatile
  8356  09DA  0140               	movlb	0	; select bank0
  8357  09DB  00EF               	movwf	_timer0ReloadVal16bit+1	;volatile
  8358  09DC  014B               	movlb	11	; select bank11
  8359  09DD  081C               	movf	28,w	;volatile
  8360  09DE  0140               	movlb	0	; select bank0
  8361  09DF  00EE               	movwf	_timer0ReloadVal16bit	;volatile
  8362                           
  8363                           ;mcc_generated_files/tmr0.c: 85:     PIR0bits.TMR0IF = 0;
  8364  09E0  014E               	movlb	14	; select bank14
  8365  09E1  128C               	bcf	12,5	;volatile
  8366                           
  8367                           ;mcc_generated_files/tmr0.c: 88:     PIE0bits.TMR0IE = 1;
  8368  09E2  1696               	bsf	22,5	;volatile
  8369                           
  8370                           ;mcc_generated_files/tmr0.c: 91:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  8371  09E3  3048               	movlw	low _TMR0_DefaultInterruptHandler
  8372  09E4  0140               	movlb	0	; select bank0
  8373  09E5  00CB               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  8374  09E6  3017               	movlw	high _TMR0_DefaultInterruptHandler
  8375  09E7  00CC               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  8376  09E8  3197  27CD         	fcall	_TMR0_SetInterruptHandler
  8377                           
  8378                           ;mcc_generated_files/tmr0.c: 94:     T0CON0 = 0x90;
  8379  09EA  3090               	movlw	144
  8380  09EB  014B               	movlb	11	; select bank11
  8381  09EC  009E               	movwf	30	;volatile
  8382  09ED  0008               	return
  8383  09EE                     __end_of_TMR0_Initialize:
  8384                           
  8385                           	psect	text4
  8386  17DD                     __ptext4:	
  8387 ;; *************** function _PMD_Initialize *****************
  8388 ;; Defined at:
  8389 ;;		line 86 in file "mcc_generated_files/mcc.c"
  8390 ;; Parameters:    Size  Location     Type
  8391 ;;		None
  8392 ;; Auto vars:     Size  Location     Type
  8393 ;;		None
  8394 ;; Return value:  Size  Location     Type
  8395 ;;                  1    wreg      void 
  8396 ;; Registers used:
  8397 ;;		status,2
  8398 ;; Tracked objects:
  8399 ;;		On entry : B3F/0
  8400 ;;		On exit  : B3F/F
  8401 ;;		Unchanged: B00/0
  8402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8406 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8407 ;;Total ram usage:        0 bytes
  8408 ;; Hardware stack levels used: 1
  8409 ;; Hardware stack levels required when called: 5
  8410 ;; This function calls:
  8411 ;;		Nothing
  8412 ;; This function is called by:
  8413 ;;		_SYSTEM_Initialize
  8414 ;; This function uses a non-reentrant model
  8415 ;;
  8416                           
  8417                           
  8418                           ;psect for function _PMD_Initialize
  8419  17DD                     _PMD_Initialize:
  8420                           
  8421                           ;mcc_generated_files/mcc.c: 89:     PMD0 = 0x00;
  8422                           
  8423                           ;incstack = 0
  8424                           ; Regs used in _PMD_Initialize: [status,2]
  8425  17DD  014F               	movlb	15	; select bank15
  8426  17DE  0196               	clrf	22	;volatile
  8427                           
  8428                           ;mcc_generated_files/mcc.c: 91:     PMD1 = 0x00;
  8429  17DF  0197               	clrf	23	;volatile
  8430                           
  8431                           ;mcc_generated_files/mcc.c: 93:     PMD2 = 0x00;
  8432  17E0  0198               	clrf	24	;volatile
  8433                           
  8434                           ;mcc_generated_files/mcc.c: 95:     PMD3 = 0x00;
  8435  17E1  0199               	clrf	25	;volatile
  8436                           
  8437                           ;mcc_generated_files/mcc.c: 97:     PMD4 = 0x00;
  8438  17E2  019A               	clrf	26	;volatile
  8439                           
  8440                           ;mcc_generated_files/mcc.c: 99:     PMD5 = 0x00;
  8441  17E3  019B               	clrf	27	;volatile
  8442  17E4  0008               	return
  8443  17E5                     __end_of_PMD_Initialize:
  8444                           
  8445                           	psect	text5
  8446  0B67                     __ptext5:	
  8447 ;; *************** function _PIN_MANAGER_Initialize *****************
  8448 ;; Defined at:
  8449 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  8450 ;; Parameters:    Size  Location     Type
  8451 ;;		None
  8452 ;; Auto vars:     Size  Location     Type
  8453 ;;		None
  8454 ;; Return value:  Size  Location     Type
  8455 ;;                  1    wreg      void 
  8456 ;; Registers used:
  8457 ;;		wreg, status,2
  8458 ;; Tracked objects:
  8459 ;;		On entry : B3F/F
  8460 ;;		On exit  : B3F/3D
  8461 ;;		Unchanged: B00/0
  8462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8466 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8467 ;;Total ram usage:        0 bytes
  8468 ;; Hardware stack levels used: 1
  8469 ;; Hardware stack levels required when called: 5
  8470 ;; This function calls:
  8471 ;;		Nothing
  8472 ;; This function is called by:
  8473 ;;		_SYSTEM_Initialize
  8474 ;; This function uses a non-reentrant model
  8475 ;;
  8476                           
  8477                           
  8478                           ;psect for function _PIN_MANAGER_Initialize
  8479  0B67                     _PIN_MANAGER_Initialize:
  8480                           
  8481                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  8482                           
  8483                           ;incstack = 0
  8484                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  8485  0B67  0140               	movlb	0	; select bank0
  8486  0B68  0198               	clrf	24	;volatile
  8487                           
  8488                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  8489  0B69  0199               	clrf	25	;volatile
  8490                           
  8491                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  8492  0B6A  019A               	clrf	26	;volatile
  8493                           
  8494                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x37;
  8495  0B6B  3037               	movlw	55
  8496  0B6C  0092               	movwf	18	;volatile
  8497                           
  8498                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0x30;
  8499  0B6D  3030               	movlw	48
  8500  0B6E  0093               	movwf	19	;volatile
  8501                           
  8502                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xBF;
  8503  0B6F  30BF               	movlw	191
  8504  0B70  0094               	movwf	20	;volatile
  8505                           
  8506                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x1F;
  8507  0B71  301F               	movlw	31
  8508  0B72  017E               	movlb	62	; select bank62
  8509  0B73  00CE               	movwf	78	;volatile
  8510                           
  8511                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x10;
  8512  0B74  3010               	movlw	16
  8513  0B75  00C3               	movwf	67	;volatile
  8514                           
  8515                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x07;
  8516  0B76  3007               	movlw	7
  8517  0B77  00B8               	movwf	56	;volatile
  8518                           
  8519                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  8520  0B78  01C4               	clrf	68	;volatile
  8521                           
  8522                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
  8523  0B79  01B9               	clrf	57	;volatile
  8524                           
  8525                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x00;
  8526  0B7A  01CF               	clrf	79	;volatile
  8527                           
  8528                           ;mcc_generated_files/pin_manager.c: 88:     ODCONA = 0x00;
  8529  0B7B  01BA               	clrf	58	;volatile
  8530                           
  8531                           ;mcc_generated_files/pin_manager.c: 89:     ODCONB = 0x00;
  8532  0B7C  01C5               	clrf	69	;volatile
  8533                           
  8534                           ;mcc_generated_files/pin_manager.c: 90:     ODCONC = 0x00;
  8535  0B7D  01D0               	clrf	80	;volatile
  8536                           
  8537                           ;mcc_generated_files/pin_manager.c: 95:     SLRCONA = 0x1F;
  8538  0B7E  301F               	movlw	31
  8539  0B7F  00BB               	movwf	59	;volatile
  8540                           
  8541                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONB = 0x00;
  8542  0B80  01C6               	clrf	70	;volatile
  8543                           
  8544                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONC = 0x3F;
  8545  0B81  303F               	movlw	63
  8546  0B82  00D1               	movwf	81	;volatile
  8547                           
  8548                           ;mcc_generated_files/pin_manager.c: 102:     INLVLA = 0x3F;
  8549  0B83  303F               	movlw	63
  8550  0B84  00BC               	movwf	60	;volatile
  8551                           
  8552                           ;mcc_generated_files/pin_manager.c: 103:     INLVLB = 0x00;
  8553  0B85  01C7               	clrf	71	;volatile
  8554                           
  8555                           ;mcc_generated_files/pin_manager.c: 104:     INLVLC = 0x3F;
  8556  0B86  303F               	movlw	63
  8557  0B87  00D2               	movwf	82	;volatile
  8558                           
  8559                           ;mcc_generated_files/pin_manager.c: 113:     CLCIN0PPS = 0x17;
  8560  0B88  3017               	movlw	23
  8561  0B89  017D               	movlb	61	; select bank61
  8562  0B8A  00BB               	movwf	59	;volatile
  8563                           
  8564                           ;mcc_generated_files/pin_manager.c: 114:     RB7PPS = 0x0F;
  8565  0B8B  300F               	movlw	15
  8566  0B8C  017E               	movlb	62	; select bank62
  8567  0B8D  009F               	movwf	31	;volatile
  8568                           
  8569                           ;mcc_generated_files/pin_manager.c: 115:     RC6PPS = 0x02;
  8570  0B8E  3002               	movlw	2
  8571  0B8F  00A6               	movwf	38	;volatile
  8572                           
  8573                           ;mcc_generated_files/pin_manager.c: 116:     RC7PPS = 0x01;
  8574  0B90  3001               	movlw	1
  8575  0B91  00A7               	movwf	39	;volatile
  8576                           
  8577                           ;mcc_generated_files/pin_manager.c: 117:     RX1DTPPS = 0x0D;
  8578  0B92  300D               	movlw	13
  8579  0B93  017D               	movlb	61	; select bank61
  8580  0B94  00CB               	movwf	75	;volatile
  8581  0B95  0008               	return
  8582  0B96                     __end_of_PIN_MANAGER_Initialize:
  8583                           
  8584                           	psect	text6
  8585  0873                     __ptext6:	
  8586 ;; *************** function _OSCILLATOR_Initialize *****************
  8587 ;; Defined at:
  8588 ;;		line 70 in file "mcc_generated_files/mcc.c"
  8589 ;; Parameters:    Size  Location     Type
  8590 ;;		None
  8591 ;; Auto vars:     Size  Location     Type
  8592 ;;		None
  8593 ;; Return value:  Size  Location     Type
  8594 ;;                  1    wreg      void 
  8595 ;; Registers used:
  8596 ;;		wreg, status,2
  8597 ;; Tracked objects:
  8598 ;;		On entry : B3F/3D
  8599 ;;		On exit  : B3F/11
  8600 ;;		Unchanged: B00/0
  8601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8606 ;;Total ram usage:        0 bytes
  8607 ;; Hardware stack levels used: 1
  8608 ;; Hardware stack levels required when called: 5
  8609 ;; This function calls:
  8610 ;;		Nothing
  8611 ;; This function is called by:
  8612 ;;		_SYSTEM_Initialize
  8613 ;; This function uses a non-reentrant model
  8614 ;;
  8615                           
  8616                           
  8617                           ;psect for function _OSCILLATOR_Initialize
  8618  0873                     _OSCILLATOR_Initialize:
  8619                           
  8620                           ;mcc_generated_files/mcc.c: 73:     OSCCON1 = 0x60;
  8621                           
  8622                           ;incstack = 0
  8623                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  8624  0873  3060               	movlw	96
  8625  0874  0151               	movlb	17	; select bank17
  8626  0875  008D               	movwf	13	;volatile
  8627                           
  8628                           ;mcc_generated_files/mcc.c: 75:     OSCCON3 = 0x00;
  8629  0876  018F               	clrf	15	;volatile
  8630                           
  8631                           ;mcc_generated_files/mcc.c: 77:     OSCEN = 0x00;
  8632  0877  0191               	clrf	17	;volatile
  8633                           
  8634                           ;mcc_generated_files/mcc.c: 79:     OSCFRQ = 0x06;
  8635  0878  3006               	movlw	6
  8636  0879  0093               	movwf	19	;volatile
  8637                           
  8638                           ;mcc_generated_files/mcc.c: 81:     OSCSTAT = 0x00;
  8639  087A  0190               	clrf	16	;volatile
  8640                           
  8641                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
  8642  087B  0192               	clrf	18	;volatile
  8643  087C  0008               	return
  8644  087D                     __end_of_OSCILLATOR_Initialize:
  8645                           
  8646                           	psect	text7
  8647  08A0                     __ptext7:	
  8648 ;; *************** function _LIN_Slave_Initialize *****************
  8649 ;; Defined at:
  8650 ;;		line 45 in file "mcc_generated_files/LINDrivers/lin_app.c"
  8651 ;; Parameters:    Size  Location     Type
  8652 ;;		None
  8653 ;; Auto vars:     Size  Location     Type
  8654 ;;		None
  8655 ;; Return value:  Size  Location     Type
  8656 ;;                  1    wreg      void 
  8657 ;; Registers used:
  8658 ;;		wreg, status,2, status,0, pclath, cstack
  8659 ;; Tracked objects:
  8660 ;;		On entry : 3F/E
  8661 ;;		On exit  : 3F/2
  8662 ;;		Unchanged: 0/0
  8663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8667 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8668 ;;Total ram usage:        0 bytes
  8669 ;; Hardware stack levels used: 1
  8670 ;; Hardware stack levels required when called: 8
  8671 ;; This function calls:
  8672 ;;		_LIN_init
  8673 ;; This function is called by:
  8674 ;;		_SYSTEM_Initialize
  8675 ;; This function uses a non-reentrant model
  8676 ;;
  8677                           
  8678                           
  8679                           ;psect for function _LIN_Slave_Initialize
  8680  08A0                     _LIN_Slave_Initialize:
  8681                           
  8682                           ;mcc_generated_files/LINDrivers/lin_app.c: 47:     LIN_init((sizeof(scheduleTable)/sizeo
      +                          f(lin_rx_cmd_t)), scheduleTable, processLIN);
  8683                           
  8684                           ;incstack = 0
  8685                           ; Regs used in _LIN_Slave_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8686  08A0  30E3               	movlw	low (_scheduleTable| (0+32768))
  8687  08A1  0140               	movlb	0	; select bank0
  8688  08A2  00CD               	movwf	LIN_init@command
  8689  08A3  3087               	movlw	high (_scheduleTable| (0+32768))
  8690  08A4  00CE               	movwf	LIN_init@command+1
  8691  08A5  30E0               	movlw	low _processLIN
  8692  08A6  00CF               	movwf	LIN_init@processData
  8693  08A7  3004               	movlw	high _processLIN
  8694  08A8  00D0               	movwf	LIN_init@processData+1
  8695  08A9  301C               	movlw	28
  8696  08AA  318A  220C         	fcall	_LIN_init
  8697  08AC  0008               	return
  8698  08AD                     __end_of_LIN_Slave_Initialize:
  8699                           
  8700                           	psect	text8
  8701  0A0C                     __ptext8:	
  8702 ;; *************** function _LIN_init *****************
  8703 ;; Defined at:
  8704 ;;		line 57 in file "mcc_generated_files/LINDrivers/lin_slave.c"
  8705 ;; Parameters:    Size  Location     Type
  8706 ;;  tableLength     1    wreg     unsigned char 
  8707 ;;  command         2    2[BANK0 ] const PTR const struct .
  8708 ;;		 -> scheduleTable(140), 
  8709 ;;  processData     2    4[BANK0 ] PTR FTN()void 
  8710 ;;		 -> processLIN(1), 
  8711 ;; Auto vars:     Size  Location     Type
  8712 ;;  tableLength     1    7[BANK0 ] unsigned char 
  8713 ;; Return value:  Size  Location     Type
  8714 ;;                  1    wreg      void 
  8715 ;; Registers used:
  8716 ;;		wreg, status,2, status,0, pclath, cstack
  8717 ;; Tracked objects:
  8718 ;;		On entry : 3F/0
  8719 ;;		On exit  : 3F/2
  8720 ;;		Unchanged: 0/0
  8721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8722 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8723 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8724 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8725 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8726 ;;Total ram usage:        6 bytes
  8727 ;; Hardware stack levels used: 1
  8728 ;; Hardware stack levels required when called: 7
  8729 ;; This function calls:
  8730 ;;		_LIN_enableRx
  8731 ;;		_LIN_setTimerHandler
  8732 ;;		_LIN_stopTimer
  8733 ;; This function is called by:
  8734 ;;		_LIN_Slave_Initialize
  8735 ;; This function uses a non-reentrant model
  8736 ;;
  8737                           
  8738                           
  8739                           ;psect for function _LIN_init
  8740  0A0C                     _LIN_init:
  8741                           
  8742                           ;incstack = 0
  8743                           ; Regs used in _LIN_init: [wreg+status,2+status,0+pclath+cstack]
  8744                           ;LIN_init@tableLength stored from wreg
  8745  0A0C  00D2               	movwf	LIN_init@tableLength
  8746                           
  8747                           ;mcc_generated_files/LINDrivers/lin_slave.c: 58:     LIN_rxCommand = command;
  8748  0A0D  084E               	movf	LIN_init@command+1,w
  8749  0A0E  0141               	movlb	1	; select bank1
  8750  0A0F  00EC               	movwf	(_LIN_rxCommand+1)^(0+128)
  8751  0A10  0140               	movlb	0	; select bank0
  8752  0A11  084D               	movf	LIN_init@command,w
  8753  0A12  0141               	movlb	1	; select bank1
  8754  0A13  00EB               	movwf	_LIN_rxCommand^(0+128)
  8755                           
  8756                           ;mcc_generated_files/LINDrivers/lin_slave.c: 59:     LIN_rxCommandLength = tableLength;
  8757  0A14  0140               	movlb	0	; select bank0
  8758  0A15  0852               	movf	LIN_init@tableLength,w
  8759  0A16  00D1               	movwf	??_LIN_init
  8760  0A17  0851               	movf	??_LIN_init,w
  8761  0A18  0141               	movlb	1	; select bank1
  8762  0A19  00EE               	movwf	_LIN_rxCommandLength^(0+128)
  8763                           
  8764                           ;mcc_generated_files/LINDrivers/lin_slave.c: 60:     LIN_processData = processData;
  8765  0A1A  0140               	movlb	0	; select bank0
  8766  0A1B  0850               	movf	LIN_init@processData+1,w
  8767  0A1C  0142               	movlb	2	; select bank2
  8768  0A1D  00E9               	movwf	(_LIN_processData+1)^(0+256)
  8769  0A1E  0140               	movlb	0	; select bank0
  8770  0A1F  084F               	movf	LIN_init@processData,w
  8771  0A20  0142               	movlb	2	; select bank2
  8772  0A21  00E8               	movwf	_LIN_processData^(0+256)
  8773                           
  8774                           ;mcc_generated_files/LINDrivers/lin_slave.c: 61:     LIN_stopTimer();
  8775  0A22  3197  2776  318A   	fcall	_LIN_stopTimer
  8776                           
  8777                           ;mcc_generated_files/LINDrivers/lin_slave.c: 62:     LIN_enableRx();
  8778  0A25  3197  2771  318A   	fcall	_LIN_enableRx
  8779                           
  8780                           ;mcc_generated_files/LINDrivers/lin_slave.c: 63:     LIN_setTimerHandler();
  8781  0A28  3197  27D5         	fcall	_LIN_setTimerHandler
  8782  0A2A  0008               	return
  8783  0A2B                     __end_of_LIN_init:
  8784                           
  8785                           	psect	text9
  8786  17D5                     __ptext9:	
  8787 ;; *************** function _LIN_setTimerHandler *****************
  8788 ;; Defined at:
  8789 ;;		line 300 in file "mcc_generated_files/LINDrivers/lin_slave.c"
  8790 ;; Parameters:    Size  Location     Type
  8791 ;;		None
  8792 ;; Auto vars:     Size  Location     Type
  8793 ;;		None
  8794 ;; Return value:  Size  Location     Type
  8795 ;;                  1    wreg      void 
  8796 ;; Registers used:
  8797 ;;		wreg, status,2, status,0, pclath, cstack
  8798 ;; Tracked objects:
  8799 ;;		On entry : 3F/E
  8800 ;;		On exit  : 3F/2
  8801 ;;		Unchanged: 0/0
  8802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8807 ;;Total ram usage:        0 bytes
  8808 ;; Hardware stack levels used: 1
  8809 ;; Hardware stack levels required when called: 6
  8810 ;; This function calls:
  8811 ;;		_TMR0_SetInterruptHandler
  8812 ;; This function is called by:
  8813 ;;		_LIN_init
  8814 ;; This function uses a non-reentrant model
  8815 ;;
  8816                           
  8817                           
  8818                           ;psect for function _LIN_setTimerHandler
  8819  17D5                     _LIN_setTimerHandler:
  8820                           
  8821                           ;mcc_generated_files/LINDrivers/lin_slave.c: 301:     TMR0_SetInterruptHandler(LIN_timer
      +                          Handler);
  8822                           
  8823                           ;incstack = 0
  8824                           ; Regs used in _LIN_setTimerHandler: [wreg+status,2+status,0+pclath+cstack]
  8825  17D5  3087               	movlw	low _LIN_timerHandler
  8826  17D6  0140               	movlb	0	; select bank0
  8827  17D7  00CB               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  8828  17D8  3008               	movlw	high _LIN_timerHandler
  8829  17D9  00CC               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  8830  17DA  3197  27CD         	fcall	_TMR0_SetInterruptHandler
  8831  17DC  0008               	return
  8832  17DD                     __end_of_LIN_setTimerHandler:
  8833                           
  8834                           	psect	text10
  8835  17CD                     __ptext10:	
  8836 ;; *************** function _TMR0_SetInterruptHandler *****************
  8837 ;; Defined at:
  8838 ;;		line 155 in file "mcc_generated_files/tmr0.c"
  8839 ;; Parameters:    Size  Location     Type
  8840 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  8841 ;;		 -> TMR0_DefaultInterruptHandler(1), LIN_timerHandler(1), 
  8842 ;; Auto vars:     Size  Location     Type
  8843 ;;		None
  8844 ;; Return value:  Size  Location     Type
  8845 ;;                  1    wreg      void 
  8846 ;; Registers used:
  8847 ;;		wreg
  8848 ;; Tracked objects:
  8849 ;;		On entry : 3F/0
  8850 ;;		On exit  : 3F/2
  8851 ;;		Unchanged: 0/0
  8852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8853 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8856 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8857 ;;Total ram usage:        2 bytes
  8858 ;; Hardware stack levels used: 1
  8859 ;; Hardware stack levels required when called: 5
  8860 ;; This function calls:
  8861 ;;		Nothing
  8862 ;; This function is called by:
  8863 ;;		_LIN_setTimerHandler
  8864 ;;		_TMR0_Initialize
  8865 ;; This function uses a non-reentrant model
  8866 ;;
  8867                           
  8868                           
  8869                           ;psect for function _TMR0_SetInterruptHandler
  8870  17CD                     _TMR0_SetInterruptHandler:
  8871                           
  8872                           ;mcc_generated_files/tmr0.c: 156:     TMR0_InterruptHandler = InterruptHandler;
  8873                           
  8874                           ;incstack = 0
  8875                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  8876  17CD  084C               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  8877  17CE  0142               	movlb	2	; select bank2
  8878  17CF  00DD               	movwf	(_TMR0_InterruptHandler+1)^(0+256)
  8879  17D0  0140               	movlb	0	; select bank0
  8880  17D1  084B               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  8881  17D2  0142               	movlb	2	; select bank2
  8882  17D3  00DC               	movwf	_TMR0_InterruptHandler^(0+256)
  8883  17D4  0008               	return
  8884  17D5                     __end_of_TMR0_SetInterruptHandler:
  8885                           
  8886                           	psect	text11
  8887  086F                     __ptext11:	
  8888 ;; *************** function _FVR_Initialize *****************
  8889 ;; Defined at:
  8890 ;;		line 58 in file "mcc_generated_files/fvr.c"
  8891 ;; Parameters:    Size  Location     Type
  8892 ;;		None
  8893 ;; Auto vars:     Size  Location     Type
  8894 ;;		None
  8895 ;; Return value:  Size  Location     Type
  8896 ;;                  1    wreg      void 
  8897 ;; Registers used:
  8898 ;;		wreg
  8899 ;; Tracked objects:
  8900 ;;		On entry : B3F/13
  8901 ;;		On exit  : B3F/12
  8902 ;;		Unchanged: B00/0
  8903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8907 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8908 ;;Total ram usage:        0 bytes
  8909 ;; Hardware stack levels used: 1
  8910 ;; Hardware stack levels required when called: 5
  8911 ;; This function calls:
  8912 ;;		Nothing
  8913 ;; This function is called by:
  8914 ;;		_SYSTEM_Initialize
  8915 ;; This function uses a non-reentrant model
  8916 ;;
  8917                           
  8918                           
  8919                           ;psect for function _FVR_Initialize
  8920  086F                     _FVR_Initialize:
  8921                           
  8922                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0x84;
  8923                           
  8924                           ;incstack = 0
  8925                           ; Regs used in _FVR_Initialize: [wreg]
  8926  086F  3084               	movlw	132
  8927  0870  0152               	movlb	18	; select bank18
  8928  0871  008C               	movwf	12	;volatile
  8929  0872  0008               	return
  8930  0873                     __end_of_FVR_Initialize:
  8931                           
  8932                           	psect	text12
  8933  0C29                     __ptext12:	
  8934 ;; *************** function _EUSART1_Initialize *****************
  8935 ;; Defined at:
  8936 ;;		line 88 in file "mcc_generated_files/eusart1.c"
  8937 ;; Parameters:    Size  Location     Type
  8938 ;;		None
  8939 ;; Auto vars:     Size  Location     Type
  8940 ;;		None
  8941 ;; Return value:  Size  Location     Type
  8942 ;;                  1    wreg      void 
  8943 ;; Registers used:
  8944 ;;		wreg, status,2, status,0, pclath, cstack
  8945 ;; Tracked objects:
  8946 ;;		On entry : 3F/4
  8947 ;;		On exit  : 3F/E
  8948 ;;		Unchanged: 0/0
  8949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8952 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8953 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8954 ;;Total ram usage:        1 bytes
  8955 ;; Hardware stack levels used: 1
  8956 ;; Hardware stack levels required when called: 6
  8957 ;; This function calls:
  8958 ;;		_EUSART1_SetErrorHandler
  8959 ;;		_EUSART1_SetFramingErrorHandler
  8960 ;;		_EUSART1_SetOverrunErrorHandler
  8961 ;;		_EUSART1_SetRxInterruptHandler
  8962 ;;		_EUSART1_SetTxInterruptHandler
  8963 ;; This function is called by:
  8964 ;;		_SYSTEM_Initialize
  8965 ;; This function uses a non-reentrant model
  8966 ;;
  8967                           
  8968                           
  8969                           ;psect for function _EUSART1_Initialize
  8970  0C29                     _EUSART1_Initialize:
  8971                           
  8972                           ;mcc_generated_files/eusart1.c: 91:     PIE3bits.RC1IE = 0;
  8973                           
  8974                           ;incstack = 0
  8975                           ; Regs used in _EUSART1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8976  0C29  014E               	movlb	14	; select bank14
  8977  0C2A  1299               	bcf	25,5	;volatile
  8978                           
  8979                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
  8980  0C2B  30F6               	movlw	low _EUSART1_Receive_ISR
  8981  0C2C  0140               	movlb	0	; select bank0
  8982  0C2D  00CB               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
  8983  0C2E  300B               	movlw	high _EUSART1_Receive_ISR
  8984  0C2F  00CC               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
  8985  0C30  3197  27BD  318C   	fcall	_EUSART1_SetRxInterruptHandler
  8986                           
  8987                           ;mcc_generated_files/eusart1.c: 93:     PIE3bits.TX1IE = 0;
  8988  0C33  014E               	movlb	14	; select bank14
  8989  0C34  1219               	bcf	25,4	;volatile
  8990                           
  8991                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
  8992  0C35  30EE               	movlw	low _EUSART1_Transmit_ISR
  8993  0C36  0140               	movlb	0	; select bank0
  8994  0C37  00CB               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler
  8995  0C38  3009               	movlw	high _EUSART1_Transmit_ISR
  8996  0C39  00CC               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler+1
  8997  0C3A  3197  27C5  318C   	fcall	_EUSART1_SetTxInterruptHandler
  8998                           
  8999                           ;mcc_generated_files/eusart1.c: 98:     BAUD1CON = 0x08;
  9000  0C3D  3008               	movlw	8
  9001  0C3E  009F               	movwf	31	;volatile
  9002                           
  9003                           ;mcc_generated_files/eusart1.c: 101:     RC1STA = 0x90;
  9004  0C3F  3090               	movlw	144
  9005  0C40  009D               	movwf	29	;volatile
  9006                           
  9007                           ;mcc_generated_files/eusart1.c: 104:     TX1STA = 0x24;
  9008  0C41  3024               	movlw	36
  9009  0C42  009E               	movwf	30	;volatile
  9010                           
  9011                           ;mcc_generated_files/eusart1.c: 107:     SP1BRGL = 0xA0;
  9012  0C43  30A0               	movlw	160
  9013  0C44  009B               	movwf	27	;volatile
  9014                           
  9015                           ;mcc_generated_files/eusart1.c: 110:     SP1BRGH = 0x01;
  9016  0C45  3001               	movlw	1
  9017  0C46  009C               	movwf	28	;volatile
  9018                           
  9019                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
  9020  0C47  3047               	movlw	low _EUSART1_DefaultFramingErrorHandler
  9021  0C48  0140               	movlb	0	; select bank0
  9022  0C49  00CB               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler
  9023  0C4A  3017               	movlw	high _EUSART1_DefaultFramingErrorHandler
  9024  0C4B  00CC               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1
  9025  0C4C  3197  27AD  318C   	fcall	_EUSART1_SetFramingErrorHandler
  9026                           
  9027                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
  9028  0C4F  3052               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  9029  0C50  0140               	movlb	0	; select bank0
  9030  0C51  00CB               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler
  9031  0C52  3017               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  9032  0C53  00CC               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1
  9033  0C54  3197  27B5  318C   	fcall	_EUSART1_SetOverrunErrorHandler
  9034                           
  9035                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
  9036  0C57  304F               	movlw	low _EUSART1_DefaultErrorHandler
  9037  0C58  0140               	movlb	0	; select bank0
  9038  0C59  00CB               	movwf	EUSART1_SetErrorHandler@interruptHandler
  9039  0C5A  3017               	movlw	high _EUSART1_DefaultErrorHandler
  9040  0C5B  00CC               	movwf	EUSART1_SetErrorHandler@interruptHandler+1
  9041  0C5C  3197  27A5         	fcall	_EUSART1_SetErrorHandler
  9042                           
  9043                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
  9044  0C5E  0140               	movlb	0	; select bank0
  9045  0C5F  01A2               	clrf	_eusart1RxLastError	;volatile
  9046                           
  9047                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
  9048  0C60  01F3               	clrf	_eusart1TxHead	;volatile
  9049                           
  9050                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
  9051  0C61  01F2               	clrf	_eusart1TxTail	;volatile
  9052                           
  9053                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
  9054  0C62  3008               	movlw	8
  9055  0C63  00CD               	movwf	??_EUSART1_Initialize
  9056  0C64  084D               	movf	??_EUSART1_Initialize,w
  9057  0C65  0141               	movlb	1	; select bank1
  9058  0C66  00ED               	movwf	_eusart1TxBufferRemaining^(0+128)	;volatile
  9059                           
  9060                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
  9061  0C67  01F1               	clrf	_eusart1RxHead	;volatile
  9062                           
  9063                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
  9064  0C68  01F0               	clrf	_eusart1RxTail	;volatile
  9065                           
  9066                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
  9067  0C69  0140               	movlb	0	; select bank0
  9068  0C6A  01A3               	clrf	_eusart1RxCount	;volatile
  9069                           
  9070                           ;mcc_generated_files/eusart1.c: 129:     PIE3bits.RC1IE = 1;
  9071  0C6B  014E               	movlb	14	; select bank14
  9072  0C6C  1699               	bsf	25,5	;volatile
  9073  0C6D  0008               	return
  9074  0C6E                     __end_of_EUSART1_Initialize:
  9075                           
  9076                           	psect	text13
  9077  17C5                     __ptext13:	
  9078 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  9079 ;; Defined at:
  9080 ;;		line 276 in file "mcc_generated_files/eusart1.c"
  9081 ;; Parameters:    Size  Location     Type
  9082 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9083 ;;		 -> EUSART1_Transmit_ISR(1), 
  9084 ;; Auto vars:     Size  Location     Type
  9085 ;;		None
  9086 ;; Return value:  Size  Location     Type
  9087 ;;                  1    wreg      void 
  9088 ;; Registers used:
  9089 ;;		wreg
  9090 ;; Tracked objects:
  9091 ;;		On entry : 3F/0
  9092 ;;		On exit  : 3F/2
  9093 ;;		Unchanged: 0/0
  9094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9095 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9098 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9099 ;;Total ram usage:        2 bytes
  9100 ;; Hardware stack levels used: 1
  9101 ;; Hardware stack levels required when called: 5
  9102 ;; This function calls:
  9103 ;;		Nothing
  9104 ;; This function is called by:
  9105 ;;		_EUSART1_Initialize
  9106 ;; This function uses a non-reentrant model
  9107 ;;
  9108                           
  9109                           
  9110                           ;psect for function _EUSART1_SetTxInterruptHandler
  9111  17C5                     _EUSART1_SetTxInterruptHandler:
  9112                           
  9113                           ;mcc_generated_files/eusart1.c: 277:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  9114                           
  9115                           ;incstack = 0
  9116                           ; Regs used in _EUSART1_SetTxInterruptHandler: [wreg]
  9117  17C5  084C               	movf	EUSART1_SetTxInterruptHandler@interruptHandler+1,w
  9118  17C6  0142               	movlb	2	; select bank2
  9119  17C7  00E7               	movwf	(_EUSART1_TxDefaultInterruptHandler+1)^(0+256)
  9120  17C8  0140               	movlb	0	; select bank0
  9121  17C9  084B               	movf	EUSART1_SetTxInterruptHandler@interruptHandler,w
  9122  17CA  0142               	movlb	2	; select bank2
  9123  17CB  00E6               	movwf	_EUSART1_TxDefaultInterruptHandler^(0+256)
  9124  17CC  0008               	return
  9125  17CD                     __end_of_EUSART1_SetTxInterruptHandler:
  9126                           
  9127                           	psect	text14
  9128  17BD                     __ptext14:	
  9129 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  9130 ;; Defined at:
  9131 ;;		line 280 in file "mcc_generated_files/eusart1.c"
  9132 ;; Parameters:    Size  Location     Type
  9133 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9134 ;;		 -> EUSART1_Receive_ISR(1), 
  9135 ;; Auto vars:     Size  Location     Type
  9136 ;;		None
  9137 ;; Return value:  Size  Location     Type
  9138 ;;                  1    wreg      void 
  9139 ;; Registers used:
  9140 ;;		wreg
  9141 ;; Tracked objects:
  9142 ;;		On entry : 3F/0
  9143 ;;		On exit  : 3F/2
  9144 ;;		Unchanged: 0/0
  9145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9146 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9149 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9150 ;;Total ram usage:        2 bytes
  9151 ;; Hardware stack levels used: 1
  9152 ;; Hardware stack levels required when called: 5
  9153 ;; This function calls:
  9154 ;;		Nothing
  9155 ;; This function is called by:
  9156 ;;		_EUSART1_Initialize
  9157 ;; This function uses a non-reentrant model
  9158 ;;
  9159                           
  9160                           
  9161                           ;psect for function _EUSART1_SetRxInterruptHandler
  9162  17BD                     _EUSART1_SetRxInterruptHandler:
  9163                           
  9164                           ;mcc_generated_files/eusart1.c: 281:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  9165                           
  9166                           ;incstack = 0
  9167                           ; Regs used in _EUSART1_SetRxInterruptHandler: [wreg]
  9168  17BD  084C               	movf	EUSART1_SetRxInterruptHandler@interruptHandler+1,w
  9169  17BE  0142               	movlb	2	; select bank2
  9170  17BF  00E5               	movwf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+256)
  9171  17C0  0140               	movlb	0	; select bank0
  9172  17C1  084B               	movf	EUSART1_SetRxInterruptHandler@interruptHandler,w
  9173  17C2  0142               	movlb	2	; select bank2
  9174  17C3  00E4               	movwf	_EUSART1_RxDefaultInterruptHandler^(0+256)
  9175  17C4  0008               	return
  9176  17C5                     __end_of_EUSART1_SetRxInterruptHandler:
  9177                           
  9178                           	psect	text15
  9179  17B5                     __ptext15:	
  9180 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  9181 ;; Defined at:
  9182 ;;		line 268 in file "mcc_generated_files/eusart1.c"
  9183 ;; Parameters:    Size  Location     Type
  9184 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9185 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  9186 ;; Auto vars:     Size  Location     Type
  9187 ;;		None
  9188 ;; Return value:  Size  Location     Type
  9189 ;;                  1    wreg      void 
  9190 ;; Registers used:
  9191 ;;		wreg
  9192 ;; Tracked objects:
  9193 ;;		On entry : 3F/0
  9194 ;;		On exit  : 3F/2
  9195 ;;		Unchanged: 0/0
  9196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9197 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9200 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9201 ;;Total ram usage:        2 bytes
  9202 ;; Hardware stack levels used: 1
  9203 ;; Hardware stack levels required when called: 5
  9204 ;; This function calls:
  9205 ;;		Nothing
  9206 ;; This function is called by:
  9207 ;;		_EUSART1_Initialize
  9208 ;; This function uses a non-reentrant model
  9209 ;;
  9210                           
  9211                           
  9212                           ;psect for function _EUSART1_SetOverrunErrorHandler
  9213  17B5                     _EUSART1_SetOverrunErrorHandler:
  9214                           
  9215                           ;mcc_generated_files/eusart1.c: 269:     EUSART1_OverrunErrorHandler = interruptHandler;
  9216                           
  9217                           ;incstack = 0
  9218                           ; Regs used in _EUSART1_SetOverrunErrorHandler: [wreg]
  9219  17B5  084C               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,w
  9220  17B6  0142               	movlb	2	; select bank2
  9221  17B7  00E1               	movwf	(_EUSART1_OverrunErrorHandler+1)^(0+256)
  9222  17B8  0140               	movlb	0	; select bank0
  9223  17B9  084B               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler,w
  9224  17BA  0142               	movlb	2	; select bank2
  9225  17BB  00E0               	movwf	_EUSART1_OverrunErrorHandler^(0+256)
  9226  17BC  0008               	return
  9227  17BD                     __end_of_EUSART1_SetOverrunErrorHandler:
  9228                           
  9229                           	psect	text16
  9230  17AD                     __ptext16:	
  9231 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  9232 ;; Defined at:
  9233 ;;		line 264 in file "mcc_generated_files/eusart1.c"
  9234 ;; Parameters:    Size  Location     Type
  9235 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9236 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  9237 ;; Auto vars:     Size  Location     Type
  9238 ;;		None
  9239 ;; Return value:  Size  Location     Type
  9240 ;;                  1    wreg      void 
  9241 ;; Registers used:
  9242 ;;		wreg
  9243 ;; Tracked objects:
  9244 ;;		On entry : 3F/0
  9245 ;;		On exit  : 3F/2
  9246 ;;		Unchanged: 0/0
  9247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9248 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9251 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9252 ;;Total ram usage:        2 bytes
  9253 ;; Hardware stack levels used: 1
  9254 ;; Hardware stack levels required when called: 5
  9255 ;; This function calls:
  9256 ;;		Nothing
  9257 ;; This function is called by:
  9258 ;;		_EUSART1_Initialize
  9259 ;; This function uses a non-reentrant model
  9260 ;;
  9261                           
  9262                           
  9263                           ;psect for function _EUSART1_SetFramingErrorHandler
  9264  17AD                     _EUSART1_SetFramingErrorHandler:
  9265                           
  9266                           ;mcc_generated_files/eusart1.c: 265:     EUSART1_FramingErrorHandler = interruptHandler;
  9267                           
  9268                           ;incstack = 0
  9269                           ; Regs used in _EUSART1_SetFramingErrorHandler: [wreg]
  9270  17AD  084C               	movf	EUSART1_SetFramingErrorHandler@interruptHandler+1,w
  9271  17AE  0142               	movlb	2	; select bank2
  9272  17AF  00E3               	movwf	(_EUSART1_FramingErrorHandler+1)^(0+256)
  9273  17B0  0140               	movlb	0	; select bank0
  9274  17B1  084B               	movf	EUSART1_SetFramingErrorHandler@interruptHandler,w
  9275  17B2  0142               	movlb	2	; select bank2
  9276  17B3  00E2               	movwf	_EUSART1_FramingErrorHandler^(0+256)
  9277  17B4  0008               	return
  9278  17B5                     __end_of_EUSART1_SetFramingErrorHandler:
  9279                           
  9280                           	psect	text17
  9281  17A5                     __ptext17:	
  9282 ;; *************** function _EUSART1_SetErrorHandler *****************
  9283 ;; Defined at:
  9284 ;;		line 272 in file "mcc_generated_files/eusart1.c"
  9285 ;; Parameters:    Size  Location     Type
  9286 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9287 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  9288 ;; Auto vars:     Size  Location     Type
  9289 ;;		None
  9290 ;; Return value:  Size  Location     Type
  9291 ;;                  1    wreg      void 
  9292 ;; Registers used:
  9293 ;;		wreg
  9294 ;; Tracked objects:
  9295 ;;		On entry : 3F/0
  9296 ;;		On exit  : 3F/2
  9297 ;;		Unchanged: 0/0
  9298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9299 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9302 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9303 ;;Total ram usage:        2 bytes
  9304 ;; Hardware stack levels used: 1
  9305 ;; Hardware stack levels required when called: 5
  9306 ;; This function calls:
  9307 ;;		Nothing
  9308 ;; This function is called by:
  9309 ;;		_EUSART1_Initialize
  9310 ;; This function uses a non-reentrant model
  9311 ;;
  9312                           
  9313                           
  9314                           ;psect for function _EUSART1_SetErrorHandler
  9315  17A5                     _EUSART1_SetErrorHandler:
  9316                           
  9317                           ;mcc_generated_files/eusart1.c: 273:     EUSART1_ErrorHandler = interruptHandler;
  9318                           
  9319                           ;incstack = 0
  9320                           ; Regs used in _EUSART1_SetErrorHandler: [wreg]
  9321  17A5  084C               	movf	EUSART1_SetErrorHandler@interruptHandler+1,w
  9322  17A6  0142               	movlb	2	; select bank2
  9323  17A7  00DF               	movwf	(_EUSART1_ErrorHandler+1)^(0+256)
  9324  17A8  0140               	movlb	0	; select bank0
  9325  17A9  084B               	movf	EUSART1_SetErrorHandler@interruptHandler,w
  9326  17AA  0142               	movlb	2	; select bank2
  9327  17AB  00DE               	movwf	_EUSART1_ErrorHandler^(0+256)
  9328  17AC  0008               	return
  9329  17AD                     __end_of_EUSART1_SetErrorHandler:
  9330                           
  9331                           	psect	text18
  9332  177B                     __ptext18:	
  9333 ;; *************** function _DAC1_Initialize *****************
  9334 ;; Defined at:
  9335 ;;		line 58 in file "mcc_generated_files/dac1.c"
  9336 ;; Parameters:    Size  Location     Type
  9337 ;;		None
  9338 ;; Auto vars:     Size  Location     Type
  9339 ;;		None
  9340 ;; Return value:  Size  Location     Type
  9341 ;;                  1    wreg      void 
  9342 ;; Registers used:
  9343 ;;		wreg
  9344 ;; Tracked objects:
  9345 ;;		On entry : 3F/3C
  9346 ;;		On exit  : 3F/12
  9347 ;;		Unchanged: 0/0
  9348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9352 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9353 ;;Total ram usage:        0 bytes
  9354 ;; Hardware stack levels used: 1
  9355 ;; Hardware stack levels required when called: 5
  9356 ;; This function calls:
  9357 ;;		Nothing
  9358 ;; This function is called by:
  9359 ;;		_SYSTEM_Initialize
  9360 ;; This function uses a non-reentrant model
  9361 ;;
  9362                           
  9363                           
  9364                           ;psect for function _DAC1_Initialize
  9365  177B                     _DAC1_Initialize:
  9366                           
  9367                           ;mcc_generated_files/dac1.c: 61:     DAC1CON0 = 0x88;
  9368                           
  9369                           ;incstack = 0
  9370                           ; Regs used in _DAC1_Initialize: [wreg]
  9371  177B  3088               	movlw	136
  9372  177C  0152               	movlb	18	; select bank18
  9373  177D  008E               	movwf	14	;volatile
  9374                           
  9375                           ;mcc_generated_files/dac1.c: 63:     DAC1CON1 = 0x02;
  9376  177E  3002               	movlw	2
  9377  177F  008F               	movwf	15	;volatile
  9378  1780  0008               	return
  9379  1781                     __end_of_DAC1_Initialize:
  9380                           
  9381                           	psect	text19
  9382  17F6                     __ptext19:	
  9383 ;; *************** function _CMP2_Initialize *****************
  9384 ;; Defined at:
  9385 ;;		line 58 in file "mcc_generated_files/cmp2.c"
  9386 ;; Parameters:    Size  Location     Type
  9387 ;;		None
  9388 ;; Auto vars:     Size  Location     Type
  9389 ;;		None
  9390 ;; Return value:  Size  Location     Type
  9391 ;;                  1    wreg      void 
  9392 ;; Registers used:
  9393 ;;		wreg
  9394 ;; Tracked objects:
  9395 ;;		On entry : B3F/11
  9396 ;;		On exit  : B3F/13
  9397 ;;		Unchanged: B00/0
  9398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9402 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9403 ;;Total ram usage:        0 bytes
  9404 ;; Hardware stack levels used: 1
  9405 ;; Hardware stack levels required when called: 5
  9406 ;; This function calls:
  9407 ;;		Nothing
  9408 ;; This function is called by:
  9409 ;;		_SYSTEM_Initialize
  9410 ;; This function uses a non-reentrant model
  9411 ;;
  9412                           
  9413                           
  9414                           ;psect for function _CMP2_Initialize
  9415  17F6                     _CMP2_Initialize:
  9416                           
  9417                           ;mcc_generated_files/cmp2.c: 62:     CM2CON0 = 0x90;
  9418                           
  9419                           ;incstack = 0
  9420                           ; Regs used in _CMP2_Initialize: [wreg]
  9421  17F6  3090               	movlw	144
  9422  17F7  0153               	movlb	19	; select bank19
  9423  17F8  0094               	movwf	20	;volatile
  9424                           
  9425                           ;mcc_generated_files/cmp2.c: 65:     CM2CON1 = 0x02;
  9426  17F9  3002               	movlw	2
  9427  17FA  0095               	movwf	21	;volatile
  9428                           
  9429                           ;mcc_generated_files/cmp2.c: 68:     CM2NCH = 0x03;
  9430  17FB  3003               	movlw	3
  9431  17FC  0096               	movwf	22	;volatile
  9432                           
  9433                           ;mcc_generated_files/cmp2.c: 71:     CM2PCH = 0x05;
  9434  17FD  3005               	movlw	5
  9435  17FE  0097               	movwf	23	;volatile
  9436  17FF  0008               	return
  9437  1800                     __end_of_CMP2_Initialize:
  9438                           
  9439                           	psect	text20
  9440  08F6                     __ptext20:	
  9441 ;; *************** function _CLC4_Initialize *****************
  9442 ;; Defined at:
  9443 ;;		line 58 in file "mcc_generated_files/clc4.c"
  9444 ;; Parameters:    Size  Location     Type
  9445 ;;		None
  9446 ;; Auto vars:     Size  Location     Type
  9447 ;;		None
  9448 ;; Return value:  Size  Location     Type
  9449 ;;                  1    wreg      void 
  9450 ;; Registers used:
  9451 ;;		wreg, status,2
  9452 ;; Tracked objects:
  9453 ;;		On entry : 3F/3C
  9454 ;;		On exit  : 3F/3C
  9455 ;;		Unchanged: 0/0
  9456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9460 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9461 ;;Total ram usage:        0 bytes
  9462 ;; Hardware stack levels used: 1
  9463 ;; Hardware stack levels required when called: 5
  9464 ;; This function calls:
  9465 ;;		Nothing
  9466 ;; This function is called by:
  9467 ;;		_SYSTEM_Initialize
  9468 ;; This function uses a non-reentrant model
  9469 ;;
  9470                           
  9471                           
  9472                           ;psect for function _CLC4_Initialize
  9473  08F6                     _CLC4_Initialize:
  9474                           
  9475                           ;mcc_generated_files/clc4.c: 63:     CLC4POL = 0x00;
  9476                           
  9477                           ;incstack = 0
  9478                           ; Regs used in _CLC4_Initialize: [wreg+status,2]
  9479  08F6  01AF               	clrf	47	;volatile
  9480                           
  9481                           ;mcc_generated_files/clc4.c: 65:     CLC4SEL0 = 0x0E;
  9482  08F7  300E               	movlw	14
  9483  08F8  00B0               	movwf	48	;volatile
  9484                           
  9485                           ;mcc_generated_files/clc4.c: 67:     CLC4SEL1 = 0x00;
  9486  08F9  01B1               	clrf	49	;volatile
  9487                           
  9488                           ;mcc_generated_files/clc4.c: 69:     CLC4SEL2 = 0x00;
  9489  08FA  01B2               	clrf	50	;volatile
  9490                           
  9491                           ;mcc_generated_files/clc4.c: 71:     CLC4SEL3 = 0x00;
  9492  08FB  01B3               	clrf	51	;volatile
  9493                           
  9494                           ;mcc_generated_files/clc4.c: 73:     CLC4GLS0 = 0x02;
  9495  08FC  3002               	movlw	2
  9496  08FD  00B4               	movwf	52	;volatile
  9497                           
  9498                           ;mcc_generated_files/clc4.c: 75:     CLC4GLS1 = 0x02;
  9499  08FE  3002               	movlw	2
  9500  08FF  00B5               	movwf	53	;volatile
  9501                           
  9502                           ;mcc_generated_files/clc4.c: 77:     CLC4GLS2 = 0x00;
  9503  0900  01B6               	clrf	54	;volatile
  9504                           
  9505                           ;mcc_generated_files/clc4.c: 79:     CLC4GLS3 = 0x00;
  9506  0901  01B7               	clrf	55	;volatile
  9507                           
  9508                           ;mcc_generated_files/clc4.c: 81:     CLC4CON = 0x80;
  9509  0902  3080               	movlw	128
  9510  0903  00AE               	movwf	46	;volatile
  9511  0904  0008               	return
  9512  0905                     __end_of_CLC4_Initialize:
  9513                           
  9514                           	psect	text21
  9515  0905                     __ptext21:	
  9516 ;; *************** function _CLC3_Initialize *****************
  9517 ;; Defined at:
  9518 ;;		line 58 in file "mcc_generated_files/clc3.c"
  9519 ;; Parameters:    Size  Location     Type
  9520 ;;		None
  9521 ;; Auto vars:     Size  Location     Type
  9522 ;;		None
  9523 ;; Return value:  Size  Location     Type
  9524 ;;                  1    wreg      void 
  9525 ;; Registers used:
  9526 ;;		wreg, status,2
  9527 ;; Tracked objects:
  9528 ;;		On entry : 3F/1
  9529 ;;		On exit  : 3F/3C
  9530 ;;		Unchanged: 0/0
  9531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9535 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9536 ;;Total ram usage:        0 bytes
  9537 ;; Hardware stack levels used: 1
  9538 ;; Hardware stack levels required when called: 5
  9539 ;; This function calls:
  9540 ;;		Nothing
  9541 ;; This function is called by:
  9542 ;;		_SYSTEM_Initialize
  9543 ;; This function uses a non-reentrant model
  9544 ;;
  9545                           
  9546                           
  9547                           ;psect for function _CLC3_Initialize
  9548  0905                     _CLC3_Initialize:
  9549                           
  9550                           ;mcc_generated_files/clc3.c: 63:     CLC3POL = 0x00;
  9551                           
  9552                           ;incstack = 0
  9553                           ; Regs used in _CLC3_Initialize: [wreg+status,2]
  9554  0905  017C               	movlb	60	; select bank60
  9555  0906  01A5               	clrf	37	;volatile
  9556                           
  9557                           ;mcc_generated_files/clc3.c: 65:     CLC3SEL0 = 0x1A;
  9558  0907  301A               	movlw	26
  9559  0908  00A6               	movwf	38	;volatile
  9560                           
  9561                           ;mcc_generated_files/clc3.c: 67:     CLC3SEL1 = 0x05;
  9562  0909  3005               	movlw	5
  9563  090A  00A7               	movwf	39	;volatile
  9564                           
  9565                           ;mcc_generated_files/clc3.c: 69:     CLC3SEL2 = 0x00;
  9566  090B  01A8               	clrf	40	;volatile
  9567                           
  9568                           ;mcc_generated_files/clc3.c: 71:     CLC3SEL3 = 0x00;
  9569  090C  01A9               	clrf	41	;volatile
  9570                           
  9571                           ;mcc_generated_files/clc3.c: 73:     CLC3GLS0 = 0x01;
  9572  090D  3001               	movlw	1
  9573  090E  00AA               	movwf	42	;volatile
  9574                           
  9575                           ;mcc_generated_files/clc3.c: 75:     CLC3GLS1 = 0x08;
  9576  090F  3008               	movlw	8
  9577  0910  00AB               	movwf	43	;volatile
  9578                           
  9579                           ;mcc_generated_files/clc3.c: 77:     CLC3GLS2 = 0x00;
  9580  0911  01AC               	clrf	44	;volatile
  9581                           
  9582                           ;mcc_generated_files/clc3.c: 79:     CLC3GLS3 = 0x00;
  9583  0912  01AD               	clrf	45	;volatile
  9584                           
  9585                           ;mcc_generated_files/clc3.c: 81:     CLC3CON = 0x80;
  9586  0913  3080               	movlw	128
  9587  0914  00A4               	movwf	36	;volatile
  9588  0915  0008               	return
  9589  0916                     __end_of_CLC3_Initialize:
  9590                           
  9591                           	psect	text22
  9592  092A                     __ptext22:	
  9593 ;; *************** function _CLC2_Initialize *****************
  9594 ;; Defined at:
  9595 ;;		line 58 in file "mcc_generated_files/clc2.c"
  9596 ;; Parameters:    Size  Location     Type
  9597 ;;		None
  9598 ;; Auto vars:     Size  Location     Type
  9599 ;;		None
  9600 ;; Return value:  Size  Location     Type
  9601 ;;                  1    wreg      void 
  9602 ;; Registers used:
  9603 ;;		wreg, status,2
  9604 ;; Tracked objects:
  9605 ;;		On entry : B3F/12
  9606 ;;		On exit  : B3F/E
  9607 ;;		Unchanged: B00/0
  9608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9612 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9613 ;;Total ram usage:        0 bytes
  9614 ;; Hardware stack levels used: 1
  9615 ;; Hardware stack levels required when called: 5
  9616 ;; This function calls:
  9617 ;;		Nothing
  9618 ;; This function is called by:
  9619 ;;		_SYSTEM_Initialize
  9620 ;; This function uses a non-reentrant model
  9621 ;;
  9622                           
  9623                           
  9624                           ;psect for function _CLC2_Initialize
  9625  092A                     _CLC2_Initialize:
  9626                           
  9627                           ;mcc_generated_files/clc2.c: 63:     CLC2POL = 0x00;
  9628                           
  9629                           ;incstack = 0
  9630                           ; Regs used in _CLC2_Initialize: [wreg+status,2]
  9631  092A  017C               	movlb	60	; select bank60
  9632  092B  019B               	clrf	27	;volatile
  9633                           
  9634                           ;mcc_generated_files/clc2.c: 65:     CLC2SEL0 = 0x0D;
  9635  092C  300D               	movlw	13
  9636  092D  009C               	movwf	28	;volatile
  9637                           
  9638                           ;mcc_generated_files/clc2.c: 67:     CLC2SEL1 = 0x0D;
  9639  092E  300D               	movlw	13
  9640  092F  009D               	movwf	29	;volatile
  9641                           
  9642                           ;mcc_generated_files/clc2.c: 69:     CLC2SEL2 = 0x0D;
  9643  0930  300D               	movlw	13
  9644  0931  009E               	movwf	30	;volatile
  9645                           
  9646                           ;mcc_generated_files/clc2.c: 71:     CLC2SEL3 = 0x0D;
  9647  0932  300D               	movlw	13
  9648  0933  009F               	movwf	31	;volatile
  9649                           
  9650                           ;mcc_generated_files/clc2.c: 73:     CLC2GLS0 = 0x02;
  9651  0934  3002               	movlw	2
  9652  0935  00A0               	movwf	32	;volatile
  9653                           
  9654                           ;mcc_generated_files/clc2.c: 75:     CLC2GLS1 = 0x00;
  9655  0936  01A1               	clrf	33	;volatile
  9656                           
  9657                           ;mcc_generated_files/clc2.c: 77:     CLC2GLS2 = 0x00;
  9658  0937  01A2               	clrf	34	;volatile
  9659                           
  9660                           ;mcc_generated_files/clc2.c: 79:     CLC2GLS3 = 0x00;
  9661  0938  01A3               	clrf	35	;volatile
  9662                           
  9663                           ;mcc_generated_files/clc2.c: 81:     CLC2CON = 0x83;
  9664  0939  3083               	movlw	131
  9665  093A  009A               	movwf	26	;volatile
  9666                           
  9667                           ;mcc_generated_files/clc2.c: 84:     PIR5bits.CLC2IF = 0;
  9668  093B  014E               	movlb	14	; select bank14
  9669  093C  1291               	bcf	17,5	;volatile
  9670                           
  9671                           ;mcc_generated_files/clc2.c: 86:     PIE5bits.CLC2IE = 1;
  9672  093D  169B               	bsf	27,5	;volatile
  9673  093E  0008               	return
  9674  093F                     __end_of_CLC2_Initialize:
  9675                           
  9676                           	psect	text23
  9677  0916                     __ptext23:	
  9678 ;; *************** function _CLC1_Initialize *****************
  9679 ;; Defined at:
  9680 ;;		line 58 in file "mcc_generated_files/clc1.c"
  9681 ;; Parameters:    Size  Location     Type
  9682 ;;		None
  9683 ;; Auto vars:     Size  Location     Type
  9684 ;;		None
  9685 ;; Return value:  Size  Location     Type
  9686 ;;                  1    wreg      void 
  9687 ;; Registers used:
  9688 ;;		wreg, status,2
  9689 ;; Tracked objects:
  9690 ;;		On entry : 3F/B
  9691 ;;		On exit  : 3F/3C
  9692 ;;		Unchanged: 0/0
  9693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9698 ;;Total ram usage:        0 bytes
  9699 ;; Hardware stack levels used: 1
  9700 ;; Hardware stack levels required when called: 5
  9701 ;; This function calls:
  9702 ;;		Nothing
  9703 ;; This function is called by:
  9704 ;;		_SYSTEM_Initialize
  9705 ;; This function uses a non-reentrant model
  9706 ;;
  9707                           
  9708                           
  9709                           ;psect for function _CLC1_Initialize
  9710  0916                     _CLC1_Initialize:
  9711                           
  9712                           ;mcc_generated_files/clc1.c: 63:     CLC1POL = 0x88;
  9713                           
  9714                           ;incstack = 0
  9715                           ; Regs used in _CLC1_Initialize: [wreg+status,2]
  9716  0916  3088               	movlw	136
  9717  0917  017C               	movlb	60	; select bank60
  9718  0918  0091               	movwf	17	;volatile
  9719                           
  9720                           ;mcc_generated_files/clc1.c: 65:     CLC1SEL0 = 0x17;
  9721  0919  3017               	movlw	23
  9722  091A  0092               	movwf	18	;volatile
  9723                           
  9724                           ;mcc_generated_files/clc1.c: 67:     CLC1SEL1 = 0x17;
  9725  091B  3017               	movlw	23
  9726  091C  0093               	movwf	19	;volatile
  9727                           
  9728                           ;mcc_generated_files/clc1.c: 69:     CLC1SEL2 = 0x0E;
  9729  091D  300E               	movlw	14
  9730  091E  0094               	movwf	20	;volatile
  9731                           
  9732                           ;mcc_generated_files/clc1.c: 71:     CLC1SEL3 = 0x1B;
  9733  091F  301B               	movlw	27
  9734  0920  0095               	movwf	21	;volatile
  9735                           
  9736                           ;mcc_generated_files/clc1.c: 73:     CLC1GLS0 = 0x02;
  9737  0921  3002               	movlw	2
  9738  0922  0096               	movwf	22	;volatile
  9739                           
  9740                           ;mcc_generated_files/clc1.c: 75:     CLC1GLS1 = 0x00;
  9741  0923  0197               	clrf	23	;volatile
  9742                           
  9743                           ;mcc_generated_files/clc1.c: 77:     CLC1GLS2 = 0x00;
  9744  0924  0198               	clrf	24	;volatile
  9745                           
  9746                           ;mcc_generated_files/clc1.c: 79:     CLC1GLS3 = 0x90;
  9747  0925  3090               	movlw	144
  9748  0926  0099               	movwf	25	;volatile
  9749                           
  9750                           ;mcc_generated_files/clc1.c: 81:     CLC1CON = 0x03;
  9751  0927  3003               	movlw	3
  9752  0928  0090               	movwf	16	;volatile
  9753  0929  0008               	return
  9754  092A                     __end_of_CLC1_Initialize:
  9755                           
  9756                           	psect	text24
  9757  179D                     __ptext24:	
  9758 ;; *************** function _ADC_Initialize *****************
  9759 ;; Defined at:
  9760 ;;		line 67 in file "mcc_generated_files/adc.c"
  9761 ;; Parameters:    Size  Location     Type
  9762 ;;		None
  9763 ;; Auto vars:     Size  Location     Type
  9764 ;;		None
  9765 ;; Return value:  Size  Location     Type
  9766 ;;                  1    wreg      void 
  9767 ;; Registers used:
  9768 ;;		wreg, status,2
  9769 ;; Tracked objects:
  9770 ;;		On entry : 3F/3C
  9771 ;;		On exit  : 3F/1
  9772 ;;		Unchanged: 0/0
  9773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9777 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9778 ;;Total ram usage:        0 bytes
  9779 ;; Hardware stack levels used: 1
  9780 ;; Hardware stack levels required when called: 5
  9781 ;; This function calls:
  9782 ;;		Nothing
  9783 ;; This function is called by:
  9784 ;;		_SYSTEM_Initialize
  9785 ;; This function uses a non-reentrant model
  9786 ;;
  9787                           
  9788                           
  9789                           ;psect for function _ADC_Initialize
  9790  179D                     _ADC_Initialize:
  9791                           
  9792                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0xF0;
  9793                           
  9794                           ;incstack = 0
  9795                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  9796  179D  30F0               	movlw	240
  9797  179E  0141               	movlb	1	; select bank1
  9798  179F  009E               	movwf	30	;volatile
  9799                           
  9800                           ;mcc_generated_files/adc.c: 75:     ADRESL = 0x00;
  9801  17A0  019B               	clrf	27	;volatile
  9802                           
  9803                           ;mcc_generated_files/adc.c: 78:     ADRESH = 0x00;
  9804  17A1  019C               	clrf	28	;volatile
  9805                           
  9806                           ;mcc_generated_files/adc.c: 81:     ADCON0 = 0x01;
  9807  17A2  3001               	movlw	1
  9808  17A3  009D               	movwf	29	;volatile
  9809  17A4  0008               	return
  9810  17A5                     __end_of_ADC_Initialize:
  9811                           
  9812                           	psect	text25
  9813  039E                     __ptext25:	
  9814 ;; *************** function _LIN_handler *****************
  9815 ;; Defined at:
  9816 ;;		line 91 in file "mcc_generated_files/LINDrivers/lin_slave.c"
  9817 ;; Parameters:    Size  Location     Type
  9818 ;;		None
  9819 ;; Auto vars:     Size  Location     Type
  9820 ;;		None
  9821 ;; Return value:  Size  Location     Type
  9822 ;;                  1    wreg      enum E204
  9823 ;; Registers used:
  9824 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9825 ;; Tracked objects:
  9826 ;;		On entry : 3C/0
  9827 ;;		On exit  : 0/0
  9828 ;;		Unchanged: 0/0
  9829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9832 ;;      Temps:          0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  9833 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  9834 ;;Total ram usage:        3 bytes
  9835 ;; Hardware stack levels used: 1
  9836 ;; Hardware stack levels required when called: 9
  9837 ;; This function calls:
  9838 ;;		Absolute function
  9839 ;;		_EUSART1_Read
  9840 ;;		_EUSART1_is_rx_ready
  9841 ;;		_LIN_breakCheck
  9842 ;;		_LIN_checkPID
  9843 ;;		_LIN_disableRx
  9844 ;;		_LIN_enableRx
  9845 ;;		_LIN_getChecksum
  9846 ;;		_LIN_getFromTable
  9847 ;;		_LIN_queuePacket
  9848 ;;		_LIN_startTimer
  9849 ;;		_LIN_stopTimer
  9850 ;;		_memset
  9851 ;;		_processLIN
  9852 ;; This function is called by:
  9853 ;;		_main
  9854 ;; This function uses a non-reentrant model
  9855 ;;
  9856                           
  9857                           
  9858                           ;psect for function _LIN_handler
  9859  039E                     _LIN_handler:
  9860                           
  9861                           ;mcc_generated_files/LINDrivers/lin_slave.c: 92:     static lin_rx_state_t LIN_rxState =
      +                           LIN_RX_IDLE;;mcc_generated_files/LINDrivers/lin_slave.c: 93:     static uint8_t rxDataI
      +                          ndex = 0;;mcc_generated_files/LINDrivers/lin_slave.c: 95:     if(LIN_rxInProgress == 1){
  9862                           
  9863                           ;incstack = 0
  9864                           ; Regs used in _LIN_handler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9865  039E  0140               	movlb	0	; select bank0
  9866  039F  0328               	decf	_LIN_rxInProgress,w
  9867  03A0  1D03               	btfss	3,2
  9868  03A1  2CB6               	goto	l5146
  9869                           
  9870                           ;mcc_generated_files/LINDrivers/lin_slave.c: 96:         if(LIN_timerRunning == 0){
  9871  03A2  0827               	movf	_LIN_timerRunning,w
  9872  03A3  1D03               	btfss	3,2
  9873  03A4  2CB6               	goto	l5146
  9874                           
  9875                           ;mcc_generated_files/LINDrivers/lin_slave.c: 98:             LIN_rxState = LIN_RX_ERROR;
  9876  03A5  3008               	movlw	8
  9877  03A6  0142               	movlb	2	; select bank2
  9878  03A7  00C0               	movwf	??_LIN_handler^(0+256)
  9879  03A8  0840               	movf	??_LIN_handler^(0+256),w
  9880  03A9  0140               	movlb	0	; select bank0
  9881  03AA  00A5               	movwf	LIN_handler@LIN_rxState
  9882  03AB  2CB6               	goto	l5146
  9883  03AC                     l5060:
  9884                           
  9885                           ;mcc_generated_files/LINDrivers/lin_slave.c: 104:             if(EUSART1_is_rx_ready() >
      +                           0){
  9886  03AC  3197  278D  3183   	fcall	_EUSART1_is_rx_ready
  9887  03AF  3A00               	xorlw	0
  9888  03B0  1903               	skipnz
  9889  03B1  0008               	return
  9890                           
  9891                           ;mcc_generated_files/LINDrivers/lin_slave.c: 106:                 LIN_startTimer(15);
  9892  03B2  300F               	movlw	15
  9893  03B3  3188  20E7         	fcall	_LIN_startTimer
  9894                           
  9895                           ;mcc_generated_files/LINDrivers/lin_slave.c: 107:                 LIN_rxInProgress = 1;
  9896  03B5  01A8               	clrf	_LIN_rxInProgress
  9897  03B6  0AA8               	incf	_LIN_rxInProgress,f
  9898                           
  9899                           ;mcc_generated_files/LINDrivers/lin_slave.c: 108:                 LIN_rxState = LIN_RX_B
      +                          REAK;
  9900  03B7  01A5               	clrf	LIN_handler@LIN_rxState
  9901  03B8  0AA5               	incf	LIN_handler@LIN_rxState,f
  9902  03B9  0008               	return
  9903  03BA                     l5068:
  9904                           
  9905                           ;mcc_generated_files/LINDrivers/lin_slave.c: 112:             if(EUSART1_is_rx_ready() >
      +                           0){
  9906  03BA  3197  278D  3183   	fcall	_EUSART1_is_rx_ready
  9907  03BD  3A00               	xorlw	0
  9908  03BE  1903               	skipnz
  9909  03BF  0008               	return
  9910                           
  9911                           ;mcc_generated_files/LINDrivers/lin_slave.c: 113:                 if(LIN_breakCheck() ==
      +                           1){
  9912  03C0  3188  20D8  3183   	fcall	_LIN_breakCheck
  9913  03C3  3A01               	xorlw	1
  9914  03C4  1D03               	skipz
  9915  03C5  2BCD               	goto	l5074
  9916                           
  9917                           ;mcc_generated_files/LINDrivers/lin_slave.c: 114:                     LIN_rxState = LIN_
      +                          RX_SYNC;
  9918  03C6  3002               	movlw	2
  9919  03C7  0142               	movlb	2	; select bank2
  9920  03C8  00C0               	movwf	??_LIN_handler^(0+256)
  9921  03C9  0840               	movf	??_LIN_handler^(0+256),w
  9922  03CA  0140               	movlb	0	; select bank0
  9923  03CB  00A5               	movwf	LIN_handler@LIN_rxState
  9924                           
  9925                           ;mcc_generated_files/LINDrivers/lin_slave.c: 115:                 } else {
  9926  03CC  0008               	return
  9927  03CD                     l5074:
  9928                           
  9929                           ;mcc_generated_files/LINDrivers/lin_slave.c: 116:                     LIN_rxState = LIN_
      +                          RX_ERROR;
  9930  03CD  3008               	movlw	8
  9931  03CE  0142               	movlb	2	; select bank2
  9932  03CF  00C0               	movwf	??_LIN_handler^(0+256)
  9933  03D0  0840               	movf	??_LIN_handler^(0+256),w
  9934  03D1  0140               	movlb	0	; select bank0
  9935  03D2  00A5               	movwf	LIN_handler@LIN_rxState
  9936  03D3  0008               	return
  9937  03D4                     l5076:
  9938                           
  9939                           ;mcc_generated_files/LINDrivers/lin_slave.c: 121:             if(EUSART1_is_rx_ready() >
      +                           0){
  9940  03D4  3197  278D  3183   	fcall	_EUSART1_is_rx_ready
  9941  03D7  3A00               	xorlw	0
  9942  03D8  1903               	skipnz
  9943  03D9  0008               	return
  9944                           
  9945                           ;mcc_generated_files/LINDrivers/lin_slave.c: 122:                 if(EUSART1_Read() == 0
      +                          x55){
  9946  03DA  318A  22BB  3183   	fcall	_EUSART1_Read
  9947  03DD  3A55               	xorlw	85
  9948  03DE  1D03               	skipz
  9949  03DF  2BCD               	goto	l5074
  9950                           
  9951                           ;mcc_generated_files/LINDrivers/lin_slave.c: 123:                     LIN_rxState = LIN_
      +                          RX_PID;
  9952  03E0  3003               	movlw	3
  9953  03E1  0142               	movlb	2	; select bank2
  9954  03E2  00C0               	movwf	??_LIN_handler^(0+256)
  9955  03E3  0840               	movf	??_LIN_handler^(0+256),w
  9956  03E4  0140               	movlb	0	; select bank0
  9957  03E5  00A5               	movwf	LIN_handler@LIN_rxState
  9958                           
  9959                           ;mcc_generated_files/LINDrivers/lin_slave.c: 124:                 } else {
  9960  03E6  0008               	return
  9961  03E7                     l5084:
  9962                           
  9963                           ;mcc_generated_files/LINDrivers/lin_slave.c: 130:             if(EUSART1_is_rx_ready() >
      +                           0){
  9964  03E7  3197  278D  3183   	fcall	_EUSART1_is_rx_ready
  9965  03EA  3A00               	xorlw	0
  9966  03EB  1903               	skipnz
  9967  03EC  0008               	return
  9968                           
  9969                           ;mcc_generated_files/LINDrivers/lin_slave.c: 131:                 LIN_packet.PID = EUSAR
      +                          T1_Read();
  9970  03ED  318A  22BB  3183   	fcall	_EUSART1_Read
  9971  03F0  0142               	movlb	2	; select bank2
  9972  03F1  00C0               	movwf	??_LIN_handler^(0+256)
  9973  03F2  0840               	movf	??_LIN_handler^(0+256),w
  9974  03F3  0141               	movlb	1	; select bank1
  9975  03F4  00B6               	movwf	_LIN_packet^(0+128)
  9976                           
  9977                           ;mcc_generated_files/LINDrivers/lin_slave.c: 134:                 if(LIN_checkPID(LIN_pa
      +                          cket.PID) == 0){
  9978  03F5  0836               	movf	_LIN_packet^(0+128),w
  9979  03F6  3189  2156  3183   	fcall	_LIN_checkPID
  9980  03F9  3A00               	xorlw	0
  9981  03FA  1903               	btfsc	3,2
  9982  03FB  2BCD               	goto	l5074
  9983                           
  9984                           ;mcc_generated_files/LINDrivers/lin_slave.c: 138:                 LIN_packet.type = LIN_
      +                          getFromTable(LIN_packet.PID, TYPE);
  9985  03FC  01CB               	clrf	LIN_getFromTable@param
  9986  03FD  0ACB               	incf	LIN_getFromTable@param,f
  9987  03FE  0141               	movlb	1	; select bank1
  9988  03FF  0836               	movf	_LIN_packet^(0+128),w
  9989  0400  318E  260E  3183   	fcall	_LIN_getFromTable
  9990  0403  0142               	movlb	2	; select bank2
  9991  0404  00C0               	movwf	??_LIN_handler^(0+256)
  9992  0405  0840               	movf	??_LIN_handler^(0+256),w
  9993  0406  0141               	movlb	1	; select bank1
  9994  0407  00C0               	movwf	(_LIN_packet^(0+128)+10)
  9995                           
  9996                           ;mcc_generated_files/LINDrivers/lin_slave.c: 139:                 if(LIN_packet.type == 
      +                          RECEIVE){
  9997  0408  0340               	decf	(_LIN_packet^(0+128)+10),w
  9998  0409  1D03               	btfss	3,2
  9999  040A  2C21               	goto	l5100
 10000                           
 10001                           ;mcc_generated_files/LINDrivers/lin_slave.c: 140:                     LIN_packet.length 
      +                          = LIN_getFromTable(LIN_packet.PID, LENGTH);
 10002  040B  3002               	movlw	2
 10003  040C  0142               	movlb	2	; select bank2
 10004  040D  00C0               	movwf	??_LIN_handler^(0+256)
 10005  040E  0840               	movf	??_LIN_handler^(0+256),w
 10006  040F  0140               	movlb	0	; select bank0
 10007  0410  00CB               	movwf	LIN_getFromTable@param
 10008  0411  0141               	movlb	1	; select bank1
 10009  0412  0836               	movf	_LIN_packet^(0+128),w
 10010  0413  318E  260E         	fcall	_LIN_getFromTable
 10011  0415  0142               	movlb	2	; select bank2
 10012  0416  00C1               	movwf	(??_LIN_handler+1)^(0+256)
 10013  0417  0841               	movf	(??_LIN_handler+1)^(0+256),w
 10014  0418  0141               	movlb	1	; select bank1
 10015  0419  00C1               	movwf	(_LIN_packet^(0+128)+11)
 10016                           
 10017                           ;mcc_generated_files/LINDrivers/lin_slave.c: 141:                     LIN_rxState = LIN_
      +                          RX_DATA;
 10018  041A  3004               	movlw	4
 10019  041B  0142               	movlb	2	; select bank2
 10020  041C  00C0               	movwf	??_LIN_handler^(0+256)
 10021  041D  0840               	movf	??_LIN_handler^(0+256),w
 10022  041E  0140               	movlb	0	; select bank0
 10023  041F  00A5               	movwf	LIN_handler@LIN_rxState
 10024                           
 10025                           ;mcc_generated_files/LINDrivers/lin_slave.c: 142:                 }
 10026  0420  0008               	return
 10027  0421                     l5100:
 10028                           
 10029                           ;mcc_generated_files/LINDrivers/lin_slave.c: 144:                     LIN_disableRx();
 10030  0421  3197  276C         	fcall	_LIN_disableRx
 10031                           
 10032                           ;mcc_generated_files/LINDrivers/lin_slave.c: 145:                     LIN_rxState = LIN_
      +                          RX_TX_DATA;
 10033  0423  3006               	movlw	6
 10034  0424  0142               	movlb	2	; select bank2
 10035  0425  00C0               	movwf	??_LIN_handler^(0+256)
 10036  0426  0840               	movf	??_LIN_handler^(0+256),w
 10037  0427  0140               	movlb	0	; select bank0
 10038  0428  00A5               	movwf	LIN_handler@LIN_rxState
 10039  0429  0008               	return
 10040  042A                     l5104:
 10041                           
 10042                           ;mcc_generated_files/LINDrivers/lin_slave.c: 150:             if(EUSART1_is_rx_ready() >
      +                           0){
 10043  042A  3197  278D  3183   	fcall	_EUSART1_is_rx_ready
 10044  042D  3A00               	xorlw	0
 10045  042E  1903               	skipnz
 10046  042F  0008               	return
 10047                           
 10048                           ;mcc_generated_files/LINDrivers/lin_slave.c: 151:                 LIN_packet.data[rxData
      +                          Index] = EUSART1_Read();
 10049  0430  318A  22BB  3183   	fcall	_EUSART1_Read
 10050  0433  0142               	movlb	2	; select bank2
 10051  0434  00C0               	movwf	??_LIN_handler^(0+256)
 10052  0435  0140               	movlb	0	; select bank0
 10053  0436  0824               	movf	LIN_handler@rxDataIndex,w
 10054  0437  3EB7               	addlw	(low ((_LIN_packet| 0+1)))& (0+255)
 10055  0438  0086               	movwf	6
 10056  0439  0187               	clrf	7
 10057  043A  0142               	movlb	2	; select bank2
 10058  043B  0840               	movf	??_LIN_handler^(0+256),w
 10059  043C  0081               	movwf	1
 10060                           
 10061                           ;mcc_generated_files/LINDrivers/lin_slave.c: 152:                 if(++rxDataIndex >= LI
      +                          N_packet.length){
 10062  043D  0141               	movlb	1	; select bank1
 10063  043E  0841               	movf	(_LIN_packet^(0+128)+11),w
 10064  043F  0142               	movlb	2	; select bank2
 10065  0440  00C0               	movwf	??_LIN_handler^(0+256)
 10066  0441  01C1               	clrf	(??_LIN_handler^(0+256)+1)
 10067  0442  1BC0               	btfsc	??_LIN_handler^(0+256),7
 10068  0443  03C1               	decf	(??_LIN_handler^(0+256)+1),f
 10069  0444  3001               	movlw	1
 10070  0445  00C2               	movwf	(??_LIN_handler+2)^(0+256)
 10071  0446  0842               	movf	(??_LIN_handler+2)^(0+256),w
 10072  0447  0140               	movlb	0	; select bank0
 10073  0448  07A4               	addwf	LIN_handler@rxDataIndex,f
 10074  0449  0142               	movlb	2	; select bank2
 10075  044A  0841               	movf	(??_LIN_handler+1)^(0+256),w
 10076  044B  3A80               	xorlw	128
 10077  044C  3C80               	sublw	128
 10078  044D  1D03               	skipz
 10079  044E  2C52               	goto	u3065
 10080  044F  0840               	movf	??_LIN_handler^(0+256),w
 10081  0450  0140               	movlb	0	; select bank0
 10082  0451  0224               	subwf	LIN_handler@rxDataIndex,w
 10083  0452                     u3065:
 10084  0452  1C03               	skipc
 10085  0453  0008               	return
 10086                           
 10087                           ;mcc_generated_files/LINDrivers/lin_slave.c: 154:                     rxDataIndex = 0;
 10088  0454  0140               	movlb	0	; select bank0
 10089  0455  01A4               	clrf	LIN_handler@rxDataIndex
 10090                           
 10091                           ;mcc_generated_files/LINDrivers/lin_slave.c: 155:                     LIN_rxState = LIN_
      +                          RX_CHECKSUM;
 10092  0456  3005               	movlw	5
 10093  0457  0142               	movlb	2	; select bank2
 10094  0458  00C0               	movwf	??_LIN_handler^(0+256)
 10095  0459  0840               	movf	??_LIN_handler^(0+256),w
 10096  045A  0140               	movlb	0	; select bank0
 10097  045B  00A5               	movwf	LIN_handler@LIN_rxState
 10098  045C  0008               	return
 10099  045D                     l5114:
 10100                           
 10101                           ;mcc_generated_files/LINDrivers/lin_slave.c: 160:             if(EUSART1_is_rx_ready() >
      +                           0){
 10102  045D  3197  278D  3183   	fcall	_EUSART1_is_rx_ready
 10103  0460  3A00               	xorlw	0
 10104  0461  1903               	skipnz
 10105  0462  0008               	return
 10106                           
 10107                           ;mcc_generated_files/LINDrivers/lin_slave.c: 161:                 LIN_packet.checksum = 
      +                          EUSART1_Read();
 10108  0463  318A  22BB  3183   	fcall	_EUSART1_Read
 10109  0466  0142               	movlb	2	; select bank2
 10110  0467  00C0               	movwf	??_LIN_handler^(0+256)
 10111  0468  0840               	movf	??_LIN_handler^(0+256),w
 10112  0469  0141               	movlb	1	; select bank1
 10113  046A  00BF               	movwf	(_LIN_packet^(0+128)+9)
 10114                           
 10115                           ;mcc_generated_files/LINDrivers/lin_slave.c: 162:                 if(LIN_packet.checksum
      +                           != LIN_getChecksum(LIN_packet.length, LIN_packet.PID, LIN_packet.data)) {
 10116  046B  0836               	movf	_LIN_packet^(0+128),w
 10117  046C  0142               	movlb	2	; select bank2
 10118  046D  00C0               	movwf	??_LIN_handler^(0+256)
 10119  046E  0840               	movf	??_LIN_handler^(0+256),w
 10120  046F  0140               	movlb	0	; select bank0
 10121  0470  00CB               	movwf	LIN_getChecksum@pid
 10122  0471  30B7               	movlw	(low ((_LIN_packet| 0+1)))& (0+255)
 10123  0472  0142               	movlb	2	; select bank2
 10124  0473  00C1               	movwf	(??_LIN_handler+1)^(0+256)
 10125  0474  0841               	movf	(??_LIN_handler+1)^(0+256),w
 10126  0475  0140               	movlb	0	; select bank0
 10127  0476  00CC               	movwf	LIN_getChecksum@data
 10128  0477  0141               	movlb	1	; select bank1
 10129  0478  0841               	movf	(_LIN_packet^(0+128)+11),w
 10130  0479  318B  2396  3183   	fcall	_LIN_getChecksum
 10131  047C  0141               	movlb	1	; select bank1
 10132  047D  063F               	xorwf	(_LIN_packet^(0+128)+9),w
 10133  047E  1D03               	btfss	3,2
 10134  047F  2BCD               	goto	l5074
 10135                           
 10136                           ;mcc_generated_files/LINDrivers/lin_slave.c: 166:                     LIN_rxState = LIN_
      +                          RX_RDY;
 10137  0480  3007               	movlw	7
 10138  0481  0142               	movlb	2	; select bank2
 10139  0482  00C0               	movwf	??_LIN_handler^(0+256)
 10140  0483  0840               	movf	??_LIN_handler^(0+256),w
 10141  0484  0140               	movlb	0	; select bank0
 10142  0485  00A5               	movwf	LIN_handler@LIN_rxState
 10143  0486  0008               	return
 10144  0487                     l5122:
 10145                           
 10146                           ;mcc_generated_files/LINDrivers/lin_slave.c: 171:             LIN_queuePacket(LIN_packet
      +                          .PID);
 10147  0487  0141               	movlb	1	; select bank1
 10148  0488  0836               	movf	_LIN_packet^(0+128),w
 10149  0489  318F  277D  3183   	fcall	_LIN_queuePacket
 10150                           
 10151                           ;mcc_generated_files/LINDrivers/lin_slave.c: 172:             LIN_rxState = LIN_RX_RDY;
 10152  048C  3007               	movlw	7
 10153  048D  0142               	movlb	2	; select bank2
 10154  048E  00C0               	movwf	??_LIN_handler^(0+256)
 10155  048F  0840               	movf	??_LIN_handler^(0+256),w
 10156  0490  0140               	movlb	0	; select bank0
 10157  0491  00A5               	movwf	LIN_handler@LIN_rxState
 10158  0492                     l5126:
 10159                           
 10160                           ;mcc_generated_files/LINDrivers/lin_slave.c: 174:             LIN_processData();
 10161  0492  0142               	movlb	2	; select bank2
 10162  0493  0869               	movf	(_LIN_processData+1)^(0+256),w
 10163  0494  008A               	movwf	10
 10164  0495  0868               	movf	_LIN_processData^(0+256),w
 10165  0496  000A               	callw
 10166  0497  3183               	pagesel	$
 10167  0498                     l5128:
 10168                           
 10169                           ;mcc_generated_files/LINDrivers/lin_slave.c: 176:             LIN_stopTimer();
 10170  0498  3197  2776  3183   	fcall	_LIN_stopTimer
 10171                           
 10172                           ;mcc_generated_files/LINDrivers/lin_slave.c: 177:             rxDataIndex = 0;
 10173  049B  01A4               	clrf	LIN_handler@rxDataIndex
 10174                           
 10175                           ;mcc_generated_files/LINDrivers/lin_slave.c: 178:             LIN_rxInProgress = 0;
 10176  049C  01A8               	clrf	_LIN_rxInProgress
 10177                           
 10178                           ;mcc_generated_files/LINDrivers/lin_slave.c: 179:             memset(LIN_packet.rawPacke
      +                          t, 0, sizeof(LIN_packet.rawPacket));
 10179  049D  3000               	movlw	0
 10180  049E  00CB               	movwf	memset@c
 10181  049F  00CC               	movwf	memset@c+1
 10182  04A0  300D               	movlw	13
 10183  04A1  00CD               	movwf	memset@n
 10184  04A2  3000               	movlw	0
 10185  04A3  00CE               	movwf	memset@n+1
 10186  04A4  30B6               	movlw	(low (_LIN_packet| 0))& (0+255)
 10187  04A5  3187  274E  3183   	fcall	_memset
 10188  04A8                     l5136:
 10189                           
 10190                           ;mcc_generated_files/LINDrivers/lin_slave.c: 181:             if(TX1STAbits.TRMT){
 10191  04A8  0142               	movlb	2	; select bank2
 10192  04A9  1C9E               	btfss	30,1	;volatile
 10193  04AA  2CB0               	goto	l5142
 10194                           
 10195                           ;mcc_generated_files/LINDrivers/lin_slave.c: 182:                 LIN_enableRx();
 10196  04AB  3197  2771         	fcall	_LIN_enableRx
 10197                           
 10198                           ;mcc_generated_files/LINDrivers/lin_slave.c: 183:                 LIN_rxState = LIN_RX_I
      +                          DLE;
 10199  04AD  0140               	movlb	0	; select bank0
 10200  04AE  01A5               	clrf	LIN_handler@LIN_rxState
 10201                           
 10202                           ;mcc_generated_files/LINDrivers/lin_slave.c: 184:             } else {
 10203  04AF  0008               	return
 10204  04B0                     l5142:
 10205                           
 10206                           ;mcc_generated_files/LINDrivers/lin_slave.c: 185:                 LIN_rxState = LIN_RX_W
      +                          AIT;
 10207  04B0  3009               	movlw	9
 10208  04B1  00C0               	movwf	??_LIN_handler^(0+256)
 10209  04B2  0840               	movf	??_LIN_handler^(0+256),w
 10210  04B3  0140               	movlb	0	; select bank0
 10211  04B4  00A5               	movwf	LIN_handler@LIN_rxState
 10212  04B5  0008               	return
 10213  04B6                     l5146:
 10214  04B6  0825               	movf	LIN_handler@LIN_rxState,w
 10215  04B7  0142               	movlb	2	; select bank2
 10216  04B8  00C0               	movwf	??_LIN_handler^(0+256)
 10217  04B9  01C1               	clrf	(??_LIN_handler^(0+256)+1)
 10218                           
 10219                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10220                           ; Switch size 1, requested type "simple"
 10221                           ; Number of cases is 1, Range of values is 0 to 0
 10222                           ; switch strategies available:
 10223                           ; Name         Instructions Cycles
 10224                           ; simple_byte            4     3 (average)
 10225                           ; direct_byte            8     6 (fixed)
 10226                           ; jumptable            260     6 (fixed)
 10227                           ;	Chosen strategy is simple_byte
 10228  04BA  0841               	movf	(??_LIN_handler+1)^(0+256),w
 10229  04BB  3A00               	xorlw	0	; case 0
 10230  04BC  1903               	skipnz
 10231  04BD  2CBF               	goto	l5488
 10232  04BE  2CDF               	goto	l273
 10233  04BF                     l5488:
 10234                           
 10235                           ; Switch size 1, requested type "simple"
 10236                           ; Number of cases is 10, Range of values is 0 to 9
 10237                           ; switch strategies available:
 10238                           ; Name         Instructions Cycles
 10239                           ; direct_byte           26     6 (fixed)
 10240                           ; simple_byte           31    16 (average)
 10241                           ; jumptable            260     6 (fixed)
 10242                           ;	Chosen strategy is simple_byte
 10243  04BF  0840               	movf	??_LIN_handler^(0+256),w
 10244  04C0  3A00               	xorlw	0	; case 0
 10245  04C1  1903               	skipnz
 10246  04C2  2BAC               	goto	l5060
 10247  04C3  3A01               	xorlw	1	; case 1
 10248  04C4  1903               	skipnz
 10249  04C5  2BBA               	goto	l5068
 10250  04C6  3A03               	xorlw	3	; case 2
 10251  04C7  1903               	skipnz
 10252  04C8  2BD4               	goto	l5076
 10253  04C9  3A01               	xorlw	1	; case 3
 10254  04CA  1903               	skipnz
 10255  04CB  2BE7               	goto	l5084
 10256  04CC  3A07               	xorlw	7	; case 4
 10257  04CD  1903               	skipnz
 10258  04CE  2C2A               	goto	l5104
 10259  04CF  3A01               	xorlw	1	; case 5
 10260  04D0  1903               	skipnz
 10261  04D1  2C5D               	goto	l5114
 10262  04D2  3A03               	xorlw	3	; case 6
 10263  04D3  1903               	skipnz
 10264  04D4  2C87               	goto	l5122
 10265  04D5  3A01               	xorlw	1	; case 7
 10266  04D6  1903               	skipnz
 10267  04D7  2C92               	goto	l5126
 10268  04D8  3A0F               	xorlw	15	; case 8
 10269  04D9  1903               	skipnz
 10270  04DA  2C98               	goto	l5128
 10271  04DB  3A01               	xorlw	1	; case 9
 10272  04DC  1903               	skipnz
 10273  04DD  2CA8               	goto	l5136
 10274  04DE  2CDF               	goto	l273
 10275  04DF                     l273:
 10276  04DF  0008               	return
 10277  04E0                     __end_of_LIN_handler:
 10278                           
 10279                           	psect	text26
 10280  04E0                     __ptext26:	
 10281 ;; *************** function _processLIN *****************
 10282 ;; Defined at:
 10283 ;;		line 51 in file "mcc_generated_files/LINDrivers/lin_app.c"
 10284 ;; Parameters:    Size  Location     Type
 10285 ;;		None
 10286 ;; Auto vars:     Size  Location     Type
 10287 ;;  tempRxData      8   19[BANK0 ] unsigned char [8]
 10288 ;;  cmd             1   18[BANK0 ] unsigned char 
 10289 ;; Return value:  Size  Location     Type
 10290 ;;                  1    wreg      void 
 10291 ;; Registers used:
 10292 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10293 ;; Tracked objects:
 10294 ;;		On entry : 3F/2
 10295 ;;		On exit  : 3E/0
 10296 ;;		Unchanged: 0/0
 10297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10299 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10300 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10301 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10302 ;;Total ram usage:       14 bytes
 10303 ;; Hardware stack levels used: 1
 10304 ;; Hardware stack levels required when called: 8
 10305 ;; This function calls:
 10306 ;;		_CmdOutput
 10307 ;;		_EFuseInit
 10308 ;;		_LIN_getPacket
 10309 ;; This function is called by:
 10310 ;;		_LIN_Slave_Initialize
 10311 ;;		_LIN_handler
 10312 ;; This function uses a non-reentrant model
 10313 ;;
 10314                           
 10315                           
 10316                           ;psect for function _processLIN
 10317  04E0                     _processLIN:
 10318                           
 10319                           ;mcc_generated_files/LINDrivers/lin_app.c: 52:     uint8_t tempRxData[8];;mcc_generated_
      +                          files/LINDrivers/lin_app.c: 53:     uint8_t cmd;;mcc_generated_files/LINDrivers/lin_app.
      +                          c: 55:     cmd = LIN_getPacket(tempRxData);
 10320                           
 10321                           ;incstack = 0
 10322                           ; Regs used in _processLIN: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10323  04E0  305E               	movlw	(low (processLIN@tempRxData| 0))& (0+255)
 10324  04E1  318A  222B  3184   	fcall	_LIN_getPacket
 10325  04E4  00D8               	movwf	??_processLIN
 10326  04E5  0858               	movf	??_processLIN,w
 10327  04E6  00DD               	movwf	processLIN@cmd
 10328                           
 10329                           ;mcc_generated_files/LINDrivers/lin_app.c: 56:     switch(cmd){
 10330  04E7  2D79               	goto	l4756
 10331  04E8                     l4724:
 10332                           
 10333                           ;mcc_generated_files/LINDrivers/lin_app.c: 58:             CmdOutput(tempRxData[0]);
 10334  04E8  085E               	movf	processLIN@tempRxData,w
 10335  04E9  318D  25B1         	fcall	_CmdOutput
 10336                           
 10337                           ;mcc_generated_files/LINDrivers/lin_app.c: 59:             break;
 10338  04EB  0008               	return
 10339  04EC                     l4726:
 10340                           
 10341                           ;mcc_generated_files/LINDrivers/lin_app.c: 61:             triggerType = tempRxData[0];
 10342  04EC  085E               	movf	processLIN@tempRxData,w
 10343  04ED  00D8               	movwf	??_processLIN
 10344  04EE  0858               	movf	??_processLIN,w
 10345  04EF  00AE               	movwf	_triggerType
 10346                           
 10347                           ;mcc_generated_files/LINDrivers/lin_app.c: 62:             break;
 10348  04F0  0008               	return
 10349  04F1                     l4728:
 10350                           
 10351                           ;mcc_generated_files/LINDrivers/lin_app.c: 64:             CmdOutput(0);
 10352  04F1  3000               	movlw	0
 10353  04F2  318D  25B1         	fcall	_CmdOutput
 10354  04F4  1319               	bcf	25,6	;volatile
 10355  04F5  0008               	return
 10356  04F6                     l4732:
 10357                           
 10358                           ;mcc_generated_files/LINDrivers/lin_app.c: 68:             tj_limit = tempRxData[0];
 10359  04F6  085E               	movf	processLIN@tempRxData,w
 10360  04F7  00D8               	movwf	??_processLIN
 10361  04F8  0858               	movf	??_processLIN,w
 10362  04F9  00EB               	movwf	_tj_limit
 10363                           
 10364                           ;mcc_generated_files/LINDrivers/lin_app.c: 69:             break;
 10365  04FA  0008               	return
 10366  04FB                     l4734:
 10367                           
 10368                           ;mcc_generated_files/LINDrivers/lin_app.c: 71:             factor_rdson_rthjs = (uint16_
      +                          t) (tempRxData[1] << 8) | tempRxData[0];
 10369  04FB  085E               	movf	processLIN@tempRxData,w
 10370  04FC  00D8               	movwf	??_processLIN
 10371  04FD  01D9               	clrf	??_processLIN+1
 10372  04FE  085F               	movf	processLIN@tempRxData+1,w
 10373  04FF  00DA               	movwf	??_processLIN+2
 10374  0500  01DB               	clrf	??_processLIN+3
 10375  0501  085A               	movf	??_processLIN+2,w
 10376  0502  00DB               	movwf	??_processLIN+3
 10377  0503  01DA               	clrf	??_processLIN+2
 10378  0504  0858               	movf	??_processLIN,w
 10379  0505  045A               	iorwf	??_processLIN+2,w
 10380  0506  0141               	movlb	1	; select bank1
 10381  0507  00E9               	movwf	_factor_rdson_rthjs^(0+128)
 10382  0508  0140               	movlb	0	; select bank0
 10383  0509  0859               	movf	??_processLIN+1,w
 10384  050A  045B               	iorwf	??_processLIN+3,w
 10385  050B  0141               	movlb	1	; select bank1
 10386  050C  00EA               	movwf	(_factor_rdson_rthjs+1)^(0+128)
 10387                           
 10388                           ;mcc_generated_files/LINDrivers/lin_app.c: 72:             break;
 10389  050D  0008               	return
 10390  050E                     l4736:
 10391                           
 10392                           ;mcc_generated_files/LINDrivers/lin_app.c: 74:             factor_rdson_rthsa = (uint16_
      +                          t) (tempRxData[1] << 8) | tempRxData[0];
 10393  050E  085E               	movf	processLIN@tempRxData,w
 10394  050F  00D8               	movwf	??_processLIN
 10395  0510  01D9               	clrf	??_processLIN+1
 10396  0511  085F               	movf	processLIN@tempRxData+1,w
 10397  0512  00DA               	movwf	??_processLIN+2
 10398  0513  01DB               	clrf	??_processLIN+3
 10399  0514  085A               	movf	??_processLIN+2,w
 10400  0515  00DB               	movwf	??_processLIN+3
 10401  0516  01DA               	clrf	??_processLIN+2
 10402  0517  0858               	movf	??_processLIN,w
 10403  0518  045A               	iorwf	??_processLIN+2,w
 10404  0519  0141               	movlb	1	; select bank1
 10405  051A  00E7               	movwf	_factor_rdson_rthsa^(0+128)
 10406  051B  0140               	movlb	0	; select bank0
 10407  051C  0859               	movf	??_processLIN+1,w
 10408  051D  045B               	iorwf	??_processLIN+3,w
 10409  051E  0141               	movlb	1	; select bank1
 10410  051F  00E8               	movwf	(_factor_rdson_rthsa+1)^(0+128)
 10411                           
 10412                           ;mcc_generated_files/LINDrivers/lin_app.c: 75:             break;
 10413  0520  0008               	return
 10414  0521                     l4738:
 10415                           
 10416                           ;mcc_generated_files/LINDrivers/lin_app.c: 77:             current2counts_squared = (uin
      +                          t16_t) (tempRxData[1] << 8) | tempRxData[0];
 10417  0521  085E               	movf	processLIN@tempRxData,w
 10418  0522  00D8               	movwf	??_processLIN
 10419  0523  01D9               	clrf	??_processLIN+1
 10420  0524  085F               	movf	processLIN@tempRxData+1,w
 10421  0525  00DA               	movwf	??_processLIN+2
 10422  0526  01DB               	clrf	??_processLIN+3
 10423  0527  085A               	movf	??_processLIN+2,w
 10424  0528  00DB               	movwf	??_processLIN+3
 10425  0529  01DA               	clrf	??_processLIN+2
 10426  052A  0858               	movf	??_processLIN,w
 10427  052B  045A               	iorwf	??_processLIN+2,w
 10428  052C  0141               	movlb	1	; select bank1
 10429  052D  00E5               	movwf	_current2counts_squared^(0+128)
 10430  052E  0140               	movlb	0	; select bank0
 10431  052F  0859               	movf	??_processLIN+1,w
 10432  0530  045B               	iorwf	??_processLIN+3,w
 10433  0531  0141               	movlb	1	; select bank1
 10434  0532  00E6               	movwf	(_current2counts_squared+1)^(0+128)
 10435                           
 10436                           ;mcc_generated_files/LINDrivers/lin_app.c: 78:             break;
 10437  0533  0008               	return
 10438  0534                     l4740:
 10439                           
 10440                           ;mcc_generated_files/LINDrivers/lin_app.c: 80:             isense_max = (uint16_t) (temp
      +                          RxData[1] << 8) | tempRxData[0];
 10441  0534  085E               	movf	processLIN@tempRxData,w
 10442  0535  00D8               	movwf	??_processLIN
 10443  0536  01D9               	clrf	??_processLIN+1
 10444  0537  085F               	movf	processLIN@tempRxData+1,w
 10445  0538  00DA               	movwf	??_processLIN+2
 10446  0539  01DB               	clrf	??_processLIN+3
 10447  053A  085A               	movf	??_processLIN+2,w
 10448  053B  00DB               	movwf	??_processLIN+3
 10449  053C  01DA               	clrf	??_processLIN+2
 10450  053D  0858               	movf	??_processLIN,w
 10451  053E  045A               	iorwf	??_processLIN+2,w
 10452  053F  00E6               	movwf	_isense_max
 10453  0540  0859               	movf	??_processLIN+1,w
 10454  0541  045B               	iorwf	??_processLIN+3,w
 10455  0542  00E7               	movwf	_isense_max+1
 10456                           
 10457                           ;mcc_generated_files/LINDrivers/lin_app.c: 81:             break;
 10458  0543  0008               	return
 10459  0544                     l4742:
 10460                           
 10461                           ;mcc_generated_files/LINDrivers/lin_app.c: 83:             dac_i_hw_trip = tempRxData[0]
      +                          ;
 10462  0544  085E               	movf	processLIN@tempRxData,w
 10463  0545  00D8               	movwf	??_processLIN
 10464  0546  0858               	movf	??_processLIN,w
 10465  0547  00EA               	movwf	_dac_i_hw_trip
 10466                           
 10467                           ;mcc_generated_files/LINDrivers/lin_app.c: 84:             EFuseInit();
 10468  0548  318A  224C         	fcall	_EFuseInit
 10469                           
 10470                           ;mcc_generated_files/LINDrivers/lin_app.c: 85:             break;
 10471  054A  0008               	return
 10472  054B                     l4746:
 10473                           
 10474                           ;mcc_generated_files/LINDrivers/lin_app.c: 87:             b1_coef = tempRxData[0];
 10475  054B  085E               	movf	processLIN@tempRxData,w
 10476  054C  00D8               	movwf	??_processLIN
 10477  054D  0858               	movf	??_processLIN,w
 10478  054E  00E9               	movwf	_b1_coef
 10479                           
 10480                           ;mcc_generated_files/LINDrivers/lin_app.c: 88:             a1_coef = 0xffff - (2 * b1_co
      +                          ef) + 1;
 10481  054F  0869               	movf	_b1_coef,w
 10482  0550  00D8               	movwf	??_processLIN
 10483  0551  01D9               	clrf	??_processLIN+1
 10484  0552  35D8               	lslf	??_processLIN,f
 10485  0553  0DD9               	rlf	??_processLIN+1,f
 10486  0554  09D8               	comf	??_processLIN,f
 10487  0555  09D9               	comf	??_processLIN+1,f
 10488  0556  0AD8               	incf	??_processLIN,f
 10489  0557  1903               	skipnz
 10490  0558  0AD9               	incf	??_processLIN+1,f
 10491  0559  0858               	movf	??_processLIN,w
 10492  055A  0141               	movlb	1	; select bank1
 10493  055B  00E3               	movwf	_a1_coef^(0+128)
 10494  055C  0140               	movlb	0	; select bank0
 10495  055D  0859               	movf	??_processLIN+1,w
 10496  055E  0141               	movlb	1	; select bank1
 10497  055F  00E4               	movwf	(_a1_coef+1)^(0+128)
 10498                           
 10499                           ;mcc_generated_files/LINDrivers/lin_app.c: 89:             break;
 10500  0560  0008               	return
 10501  0561                     l4750:
 10502                           
 10503                           ;mcc_generated_files/LINDrivers/lin_app.c: 91:             reduced_drive_time = tempRxDa
      +                          ta[0];
 10504  0561  085E               	movf	processLIN@tempRxData,w
 10505  0562  00D8               	movwf	??_processLIN
 10506  0563  0858               	movf	??_processLIN,w
 10507  0564  00AD               	movwf	_reduced_drive_time
 10508                           
 10509                           ;mcc_generated_files/LINDrivers/lin_app.c: 92:             break;
 10510  0565  0008               	return
 10511  0566                     l4752:
 10512                           
 10513                           ;mcc_generated_files/LINDrivers/lin_app.c: 94:             tcc_sample_time = (uint16_t) 
      +                          (tempRxData[1] << 8) | tempRxData[0];
 10514  0566  085E               	movf	processLIN@tempRxData,w
 10515  0567  00D8               	movwf	??_processLIN
 10516  0568  01D9               	clrf	??_processLIN+1
 10517  0569  085F               	movf	processLIN@tempRxData+1,w
 10518  056A  00DA               	movwf	??_processLIN+2
 10519  056B  01DB               	clrf	??_processLIN+3
 10520  056C  085A               	movf	??_processLIN+2,w
 10521  056D  00DB               	movwf	??_processLIN+3
 10522  056E  01DA               	clrf	??_processLIN+2
 10523  056F  0858               	movf	??_processLIN,w
 10524  0570  045A               	iorwf	??_processLIN+2,w
 10525  0571  0141               	movlb	1	; select bank1
 10526  0572  00E1               	movwf	_tcc_sample_time^(0+128)
 10527  0573  0140               	movlb	0	; select bank0
 10528  0574  0859               	movf	??_processLIN+1,w
 10529  0575  045B               	iorwf	??_processLIN+3,w
 10530  0576  0141               	movlb	1	; select bank1
 10531  0577  00E2               	movwf	(_tcc_sample_time+1)^(0+128)
 10532                           
 10533                           ;mcc_generated_files/LINDrivers/lin_app.c: 95:             break;
 10534  0578  0008               	return
 10535  0579                     l4756:
 10536  0579  085D               	movf	processLIN@cmd,w
 10537  057A  00D8               	movwf	??_processLIN
 10538  057B  01D9               	clrf	??_processLIN+1
 10539                           
 10540                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10541                           ; Switch size 1, requested type "simple"
 10542                           ; Number of cases is 1, Range of values is 0 to 0
 10543                           ; switch strategies available:
 10544                           ; Name         Instructions Cycles
 10545                           ; simple_byte            4     3 (average)
 10546                           ; direct_byte            8     6 (fixed)
 10547                           ; jumptable            260     6 (fixed)
 10548                           ;	Chosen strategy is simple_byte
 10549  057C  0859               	movf	??_processLIN+1,w
 10550  057D  3A00               	xorlw	0	; case 0
 10551  057E  1903               	skipnz
 10552  057F  2D81               	goto	l5490
 10553  0580  2DD7               	goto	l159
 10554  0581                     l5490:
 10555                           
 10556                           ; Switch size 1, requested type "simple"
 10557                           ; Number of cases is 28, Range of values is 0 to 47
 10558                           ; switch strategies available:
 10559                           ; Name         Instructions Cycles
 10560                           ; simple_byte           85    43 (average)
 10561                           ; direct_byte          102     6 (fixed)
 10562                           ; jumptable            260     6 (fixed)
 10563                           ;	Chosen strategy is simple_byte
 10564  0581  0858               	movf	??_processLIN,w
 10565  0582  3A00               	xorlw	0	; case 0
 10566  0583  1903               	skipnz
 10567  0584  2CE8               	goto	l4724
 10568  0585  3A01               	xorlw	1	; case 1
 10569  0586  1903               	skipnz
 10570  0587  2CEC               	goto	l4726
 10571  0588  3A03               	xorlw	3	; case 2
 10572  0589  1903               	skipnz
 10573  058A  2CF1               	goto	l4728
 10574  058B  3A12               	xorlw	18	; case 16
 10575  058C  1903               	skipnz
 10576  058D  2CF6               	goto	l4732
 10577  058E  3A01               	xorlw	1	; case 17
 10578  058F  1903               	skipnz
 10579  0590  2CFB               	goto	l4734
 10580  0591  3A03               	xorlw	3	; case 18
 10581  0592  1903               	skipnz
 10582  0593  2D0E               	goto	l4736
 10583  0594  3A01               	xorlw	1	; case 19
 10584  0595  1903               	skipnz
 10585  0596  2D21               	goto	l4738
 10586  0597  3A07               	xorlw	7	; case 20
 10587  0598  1903               	skipnz
 10588  0599  2D34               	goto	l4740
 10589  059A  3A01               	xorlw	1	; case 21
 10590  059B  1903               	skipnz
 10591  059C  2D44               	goto	l4742
 10592  059D  3A03               	xorlw	3	; case 22
 10593  059E  1903               	skipnz
 10594  059F  2D4B               	goto	l4746
 10595  05A0  3A01               	xorlw	1	; case 23
 10596  05A1  1903               	skipnz
 10597  05A2  2D61               	goto	l4750
 10598  05A3  3A0F               	xorlw	15	; case 24
 10599  05A4  1903               	skipnz
 10600  05A5  2D66               	goto	l4752
 10601  05A6  3A38               	xorlw	56	; case 32
 10602  05A7  1903               	skipnz
 10603  05A8  2DD7               	goto	l159
 10604  05A9  3A01               	xorlw	1	; case 33
 10605  05AA  1903               	skipnz
 10606  05AB  2DD7               	goto	l159
 10607  05AC  3A03               	xorlw	3	; case 34
 10608  05AD  1903               	skipnz
 10609  05AE  2DD7               	goto	l159
 10610  05AF  3A01               	xorlw	1	; case 35
 10611  05B0  1903               	skipnz
 10612  05B1  2DD7               	goto	l159
 10613  05B2  3A07               	xorlw	7	; case 36
 10614  05B3  1903               	skipnz
 10615  05B4  2DD7               	goto	l159
 10616  05B5  3A01               	xorlw	1	; case 37
 10617  05B6  1903               	skipnz
 10618  05B7  2DD7               	goto	l159
 10619  05B8  3A03               	xorlw	3	; case 38
 10620  05B9  1903               	skipnz
 10621  05BA  2DD7               	goto	l159
 10622  05BB  3A01               	xorlw	1	; case 39
 10623  05BC  1903               	skipnz
 10624  05BD  2DD7               	goto	l159
 10625  05BE  3A0F               	xorlw	15	; case 40
 10626  05BF  1903               	skipnz
 10627  05C0  2DD7               	goto	l159
 10628  05C1  3A01               	xorlw	1	; case 41
 10629  05C2  1903               	skipnz
 10630  05C3  2DD7               	goto	l159
 10631  05C4  3A03               	xorlw	3	; case 42
 10632  05C5  1903               	skipnz
 10633  05C6  2DD7               	goto	l159
 10634  05C7  3A01               	xorlw	1	; case 43
 10635  05C8  1903               	skipnz
 10636  05C9  2DD7               	goto	l159
 10637  05CA  3A07               	xorlw	7	; case 44
 10638  05CB  1903               	skipnz
 10639  05CC  2DD7               	goto	l159
 10640  05CD  3A01               	xorlw	1	; case 45
 10641  05CE  1903               	skipnz
 10642  05CF  2DD7               	goto	l159
 10643  05D0  3A03               	xorlw	3	; case 46
 10644  05D1  1903               	skipnz
 10645  05D2  2DD7               	goto	l159
 10646  05D3  3A01               	xorlw	1	; case 47
 10647  05D4  1903               	skipnz
 10648  05D5  2DD7               	goto	l159
 10649  05D6  2DD7               	goto	l159
 10650  05D7                     l159:
 10651  05D7  0008               	return
 10652  05D8                     __end_of_processLIN:
 10653                           
 10654                           	psect	text27
 10655  0A2B                     __ptext27:	
 10656 ;; *************** function _LIN_getPacket *****************
 10657 ;; Defined at:
 10658 ;;		line 202 in file "mcc_generated_files/LINDrivers/lin_slave.c"
 10659 ;; Parameters:    Size  Location     Type
 10660 ;;  data            1    wreg     PTR unsigned char 
 10661 ;;		 -> processLIN@tempRxData(8), 
 10662 ;; Auto vars:     Size  Location     Type
 10663 ;;  data            1   11[BANK0 ] PTR unsigned char 
 10664 ;;		 -> processLIN@tempRxData(8), 
 10665 ;;  cmd             1   12[BANK0 ] unsigned char 
 10666 ;; Return value:  Size  Location     Type
 10667 ;;                  1    wreg      unsigned char 
 10668 ;; Registers used:
 10669 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10670 ;; Tracked objects:
 10671 ;;		On entry : 3F/2
 10672 ;;		On exit  : 3F/0
 10673 ;;		Unchanged: 0/0
 10674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10676 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10677 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10678 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10679 ;;Total ram usage:        3 bytes
 10680 ;; Hardware stack levels used: 1
 10681 ;; Hardware stack levels required when called: 6
 10682 ;; This function calls:
 10683 ;;		_memcpy
 10684 ;;		_memset
 10685 ;; This function is called by:
 10686 ;;		_processLIN
 10687 ;; This function uses a non-reentrant model
 10688 ;;
 10689                           
 10690                           
 10691                           ;psect for function _LIN_getPacket
 10692  0A2B                     _LIN_getPacket:
 10693                           
 10694                           ;incstack = 0
 10695                           ; Regs used in _LIN_getPacket: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10696                           ;LIN_getPacket@data stored from wreg
 10697  0A2B  0140               	movlb	0	; select bank0
 10698  0A2C  00D6               	movwf	LIN_getPacket@data
 10699                           
 10700                           ;mcc_generated_files/LINDrivers/lin_slave.c: 203:     uint8_t cmd = LIN_packet.PID & 0x3
      +                          F;
 10701  0A2D  0141               	movlb	1	; select bank1
 10702  0A2E  0836               	movf	_LIN_packet^(0+128),w
 10703  0A2F  393F               	andlw	63
 10704  0A30  0140               	movlb	0	; select bank0
 10705  0A31  00D5               	movwf	??_LIN_getPacket
 10706  0A32  0855               	movf	??_LIN_getPacket,w
 10707  0A33  00D7               	movwf	LIN_getPacket@cmd
 10708                           
 10709                           ;mcc_generated_files/LINDrivers/lin_slave.c: 205:     memcpy(data, LIN_packet.data, size
      +                          of(LIN_packet.data));
 10710  0A34  30B7               	movlw	low (_LIN_packet+1)
 10711  0A35  00CB               	movwf	memcpy@s1
 10712  0A36  3000               	movlw	high (_LIN_packet+1)
 10713  0A37  00CC               	movwf	memcpy@s1+1
 10714  0A38  3008               	movlw	8
 10715  0A39  00CD               	movwf	memcpy@n
 10716  0A3A  3000               	movlw	0
 10717  0A3B  00CE               	movwf	memcpy@n+1
 10718  0A3C  0856               	movf	LIN_getPacket@data,w
 10719  0A3D  318A  22E2  318A   	fcall	_memcpy
 10720                           
 10721                           ;mcc_generated_files/LINDrivers/lin_slave.c: 206:     memset(LIN_packet.rawPacket, 0, si
      +                          zeof(LIN_packet.rawPacket));
 10722  0A40  3000               	movlw	0
 10723  0A41  00CB               	movwf	memset@c
 10724  0A42  00CC               	movwf	memset@c+1
 10725  0A43  300D               	movlw	13
 10726  0A44  00CD               	movwf	memset@n
 10727  0A45  3000               	movlw	0
 10728  0A46  00CE               	movwf	memset@n+1
 10729  0A47  30B6               	movlw	(low (_LIN_packet| 0))& (0+255)
 10730  0A48  3187  274E         	fcall	_memset
 10731                           
 10732                           ;mcc_generated_files/LINDrivers/lin_slave.c: 208:     return cmd;
 10733  0A4A  0857               	movf	LIN_getPacket@cmd,w
 10734  0A4B  0008               	return
 10735  0A4C                     __end_of_LIN_getPacket:
 10736                           
 10737                           	psect	text28
 10738  074E                     __ptext28:	
 10739 ;; *************** function _memset *****************
 10740 ;; Defined at:
 10741 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\memset.c"
 10742 ;; Parameters:    Size  Location     Type
 10743 ;;  dest            1    wreg     PTR void 
 10744 ;;		 -> LIN_packet(13), 
 10745 ;;  c               2    0[BANK0 ] int 
 10746 ;;  n               2    2[BANK0 ] unsigned int 
 10747 ;; Auto vars:     Size  Location     Type
 10748 ;;  dest            1    8[BANK0 ] PTR void 
 10749 ;;		 -> LIN_packet(13), 
 10750 ;;  k               2    6[BANK0 ] unsigned int 
 10751 ;;  s               1    9[BANK0 ] PTR unsigned char 
 10752 ;;		 -> LIN_packet(13), 
 10753 ;; Return value:  Size  Location     Type
 10754 ;;                  1    wreg      PTR void 
 10755 ;; Registers used:
 10756 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10757 ;; Tracked objects:
 10758 ;;		On entry : 3F/0
 10759 ;;		On exit  : 3F/0
 10760 ;;		Unchanged: 0/0
 10761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10762 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10763 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10764 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10765 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10766 ;;Total ram usage:       10 bytes
 10767 ;; Hardware stack levels used: 1
 10768 ;; Hardware stack levels required when called: 5
 10769 ;; This function calls:
 10770 ;;		Nothing
 10771 ;; This function is called by:
 10772 ;;		_LIN_handler
 10773 ;;		_LIN_getPacket
 10774 ;; This function uses a non-reentrant model
 10775 ;;
 10776                           
 10777                           
 10778                           ;psect for function _memset
 10779  074E                     _memset:
 10780                           
 10781                           ;incstack = 0
 10782                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
 10783                           ;memset@dest stored from wreg
 10784  074E  00D3               	movwf	memset@dest
 10785  074F  0853               	movf	memset@dest,w
 10786  0750  00CF               	movwf	??_memset
 10787  0751  084F               	movf	??_memset,w
 10788  0752  00D4               	movwf	memset@s
 10789  0753  084D               	movf	memset@n,w
 10790  0754  044E               	iorwf	memset@n+1,w
 10791  0755  1903               	btfsc	3,2
 10792  0756  0008               	return
 10793  0757  084B               	movf	memset@c,w
 10794  0758  00CF               	movwf	??_memset
 10795  0759  0854               	movf	memset@s,w
 10796  075A  0086               	movwf	6
 10797  075B  0187               	clrf	7
 10798  075C  084F               	movf	??_memset,w
 10799  075D  0081               	movwf	1
 10800  075E  084B               	movf	memset@c,w
 10801  075F  00CF               	movwf	??_memset
 10802  0760  084D               	movf	memset@n,w
 10803  0761  0754               	addwf	memset@s,w
 10804  0762  00D0               	movwf	??_memset+1
 10805  0763  0850               	movf	??_memset+1,w
 10806  0764  3EFF               	addlw	255
 10807  0765  0086               	movwf	6
 10808  0766  0187               	clrf	7
 10809  0767  084F               	movf	??_memset,w
 10810  0768  0081               	movwf	1
 10811  0769  3000               	movlw	0
 10812  076A  024E               	subwf	memset@n+1,w
 10813  076B  3003               	movlw	3
 10814  076C  1903               	skipnz
 10815  076D  024D               	subwf	memset@n,w
 10816  076E  1C03               	btfss	3,0
 10817  076F  0008               	return
 10818  0770  084B               	movf	memset@c,w
 10819  0771  00CF               	movwf	??_memset
 10820  0772  0A54               	incf	memset@s,w
 10821  0773  0086               	movwf	6
 10822  0774  0187               	clrf	7
 10823  0775  084F               	movf	??_memset,w
 10824  0776  0081               	movwf	1
 10825  0777  084B               	movf	memset@c,w
 10826  0778  00CF               	movwf	??_memset
 10827  0779  0854               	movf	memset@s,w
 10828  077A  3E02               	addlw	2
 10829  077B  0086               	movwf	6
 10830  077C  0187               	clrf	7
 10831  077D  084F               	movf	??_memset,w
 10832  077E  0081               	movwf	1
 10833  077F  084B               	movf	memset@c,w
 10834  0780  00CF               	movwf	??_memset
 10835  0781  084D               	movf	memset@n,w
 10836  0782  0754               	addwf	memset@s,w
 10837  0783  00D0               	movwf	??_memset+1
 10838  0784  0850               	movf	??_memset+1,w
 10839  0785  3EFE               	addlw	254
 10840  0786  0086               	movwf	6
 10841  0787  0187               	clrf	7
 10842  0788  084F               	movf	??_memset,w
 10843  0789  0081               	movwf	1
 10844  078A  084B               	movf	memset@c,w
 10845  078B  00CF               	movwf	??_memset
 10846  078C  084D               	movf	memset@n,w
 10847  078D  0754               	addwf	memset@s,w
 10848  078E  00D0               	movwf	??_memset+1
 10849  078F  0850               	movf	??_memset+1,w
 10850  0790  3EFD               	addlw	253
 10851  0791  0086               	movwf	6
 10852  0792  0187               	clrf	7
 10853  0793  084F               	movf	??_memset,w
 10854  0794  0081               	movwf	1
 10855  0795  3000               	movlw	0
 10856  0796  024E               	subwf	memset@n+1,w
 10857  0797  3007               	movlw	7
 10858  0798  1903               	skipnz
 10859  0799  024D               	subwf	memset@n,w
 10860  079A  1C03               	btfss	3,0
 10861  079B  0008               	return
 10862  079C  084B               	movf	memset@c,w
 10863  079D  00CF               	movwf	??_memset
 10864  079E  0854               	movf	memset@s,w
 10865  079F  3E03               	addlw	3
 10866  07A0  0086               	movwf	6
 10867  07A1  0187               	clrf	7
 10868  07A2  084F               	movf	??_memset,w
 10869  07A3  0081               	movwf	1
 10870  07A4  084B               	movf	memset@c,w
 10871  07A5  00CF               	movwf	??_memset
 10872  07A6  084D               	movf	memset@n,w
 10873  07A7  0754               	addwf	memset@s,w
 10874  07A8  00D0               	movwf	??_memset+1
 10875  07A9  0850               	movf	??_memset+1,w
 10876  07AA  3EFC               	addlw	252
 10877  07AB  0086               	movwf	6
 10878  07AC  0187               	clrf	7
 10879  07AD  084F               	movf	??_memset,w
 10880  07AE  0081               	movwf	1
 10881  07AF  3000               	movlw	0
 10882  07B0  024E               	subwf	memset@n+1,w
 10883  07B1  3009               	movlw	9
 10884  07B2  1903               	skipnz
 10885  07B3  024D               	subwf	memset@n,w
 10886  07B4  1C03               	btfss	3,0
 10887  07B5  0008               	return
 10888  07B6  0954               	comf	memset@s,w
 10889  07B7  00CF               	movwf	??_memset
 10890  07B8  0955               	comf	memset@s+1,w
 10891  07B9  00D0               	movwf	??_memset+1
 10892  07BA  0ACF               	incf	??_memset,f
 10893  07BB  1903               	skipnz
 10894  07BC  0AD0               	incf	??_memset+1,f
 10895  07BD  3003               	movlw	3
 10896  07BE  054F               	andwf	??_memset,w
 10897  07BF  00D1               	movwf	memset@k
 10898  07C0  3000               	movlw	0
 10899  07C1  0550               	andwf	??_memset+1,w
 10900  07C2  00D2               	movwf	memset@k+1
 10901  07C3  0851               	movf	memset@k,w
 10902  07C4  00CF               	movwf	??_memset
 10903  07C5  084F               	movf	??_memset,w
 10904  07C6  07D4               	addwf	memset@s,f
 10905  07C7  0851               	movf	memset@k,w
 10906  07C8  02CD               	subwf	memset@n,f
 10907  07C9  0852               	movf	memset@k+1,w
 10908  07CA  3BCE               	subwfb	memset@n+1,f
 10909  07CB  30FC               	movlw	252
 10910  07CC  05CD               	andwf	memset@n,f
 10911  07CD  30FF               	movlw	255
 10912  07CE  05CE               	andwf	memset@n+1,f
 10913  07CF                     l4506:
 10914  07CF  084D               	movf	memset@n,w
 10915  07D0  044E               	iorwf	memset@n+1,w
 10916  07D1  1903               	btfsc	3,2
 10917  07D2  0008               	return
 10918  07D3  084B               	movf	memset@c,w
 10919  07D4  00CF               	movwf	??_memset
 10920  07D5  0854               	movf	memset@s,w
 10921  07D6  0086               	movwf	6
 10922  07D7  0187               	clrf	7
 10923  07D8  084F               	movf	??_memset,w
 10924  07D9  0081               	movwf	1
 10925  07DA  3001               	movlw	1
 10926  07DB  02CD               	subwf	memset@n,f
 10927  07DC  3000               	movlw	0
 10928  07DD  3BCE               	subwfb	memset@n+1,f
 10929  07DE  3001               	movlw	1
 10930  07DF  00CF               	movwf	??_memset
 10931  07E0  084F               	movf	??_memset,w
 10932  07E1  07D4               	addwf	memset@s,f
 10933  07E2  2FCF               	goto	l4506
 10934  07E3                     __end_of_memset:
 10935                           
 10936                           	psect	text29
 10937  0A4C                     __ptext29:	
 10938 ;; *************** function _EFuseInit *****************
 10939 ;; Defined at:
 10940 ;;		line 247 in file "efuse.c"
 10941 ;; Parameters:    Size  Location     Type
 10942 ;;		None
 10943 ;; Auto vars:     Size  Location     Type
 10944 ;;		None
 10945 ;; Return value:  Size  Location     Type
 10946 ;;                  1    wreg      void 
 10947 ;; Registers used:
 10948 ;;		wreg, status,2, status,0, pclath, cstack
 10949 ;; Tracked objects:
 10950 ;;		On entry : 3D/2
 10951 ;;		On exit  : 3F/0
 10952 ;;		Unchanged: 0/0
 10953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10957 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10958 ;;Total ram usage:        0 bytes
 10959 ;; Hardware stack levels used: 1
 10960 ;; Hardware stack levels required when called: 7
 10961 ;; This function calls:
 10962 ;;		_CmdOutput
 10963 ;;		_TMR0_Reload
 10964 ;; This function is called by:
 10965 ;;		_processLIN
 10966 ;;		_main
 10967 ;; This function uses a non-reentrant model
 10968 ;;
 10969                           
 10970                           
 10971                           ;psect for function _EFuseInit
 10972  0A4C                     _EFuseInit:
 10973                           
 10974                           ;efuse.c: 249:     CmdOutput(OUTPUT_OFF);
 10975                           
 10976                           ;incstack = 0
 10977                           ; Regs used in _EFuseInit: [wreg+status,2+status,0+pclath+cstack]
 10978  0A4C  3000               	movlw	0
 10979  0A4D  318D  25B1  318A   	fcall	_CmdOutput
 10980                           
 10981                           ;efuse.c: 252:     CM2CON0bits.C2EN = 1;
 10982  0A50  0153               	movlb	19	; select bank19
 10983  0A51  1794               	bsf	20,7	;volatile
 10984                           
 10985                           ;efuse.c: 253:     CLC1GLS1bits.LC1G2D2T = 1;
 10986  0A52  017C               	movlb	60	; select bank60
 10987  0A53  1597               	bsf	23,3	;volatile
 10988                           
 10989                           ;efuse.c: 254:     PIR2bits.C2IF = 0;
 10990  0A54  014E               	movlb	14	; select bank14
 10991  0A55  108E               	bcf	14,1	;volatile
 10992                           
 10993                           ;efuse.c: 256:     DAC1CON1bits.DAC1R = dac_i_hw_trip;
 10994  0A56  0152               	movlb	18	; select bank18
 10995  0A57  080F               	movf	15,w	;volatile
 10996  0A58  0140               	movlb	0	; select bank0
 10997  0A59  066A               	xorwf	_dac_i_hw_trip,w
 10998  0A5A  39E0               	andlw	-32
 10999  0A5B  066A               	xorwf	_dac_i_hw_trip,w
 11000  0A5C  0152               	movlb	18	; select bank18
 11001  0A5D  008F               	movwf	15	;volatile
 11002                           
 11003                           ;efuse.c: 257:     _delay((unsigned long)((20)*(32000000/4000000.0)));
 11004  0A5E  3035               	movlw	53
 11005  0A5F                     u3437:
 11006  0A5F  0B89               	decfsz	9,f
 11007  0A60  2A5F               	goto	u3437
 11008  0A61  0000               	nop
 11009                           
 11010                           ;efuse.c: 260:     TMR0_Reload();
 11011  0A62  3197  27ED         	fcall	_TMR0_Reload
 11012                           
 11013                           ;efuse.c: 261:     PIR0bits.TMR0IF = 0;
 11014  0A64  014E               	movlb	14	; select bank14
 11015  0A65  128C               	bcf	12,5	;volatile
 11016                           
 11017                           ;efuse.c: 262:     PIR5bits.CLC2IF = 0;
 11018  0A66  1291               	bcf	17,5	;volatile
 11019                           
 11020                           ;efuse.c: 263:     PIR2bits.C1IF = 0;
 11021  0A67  100E               	bcf	14,0	;volatile
 11022                           
 11023                           ;efuse.c: 264:     PIR2bits.C2IF = 0;
 11024  0A68  108E               	bcf	14,1	;volatile
 11025                           
 11026                           ;efuse.c: 266:     ticks_1ms = 0;
 11027  0A69  0141               	movlb	1	; select bank1
 11028  0A6A  01B4               	clrf	_ticks_1ms^(0+128)
 11029  0A6B  01B5               	clrf	(_ticks_1ms+1)^(0+128)
 11030                           
 11031                           ;efuse.c: 268:     triggerType = TRIGGER_EDGE;
 11032  0A6C  0140               	movlb	0	; select bank0
 11033  0A6D  01AE               	clrf	_triggerType
 11034  0A6E  0008               	return
 11035  0A6F                     __end_of_EFuseInit:
 11036                           
 11037                           	psect	text30
 11038  17ED                     __ptext30:	
 11039 ;; *************** function _TMR0_Reload *****************
 11040 ;; Defined at:
 11041 ;;		line 129 in file "mcc_generated_files/tmr0.c"
 11042 ;; Parameters:    Size  Location     Type
 11043 ;;		None
 11044 ;; Auto vars:     Size  Location     Type
 11045 ;;		None
 11046 ;; Return value:  Size  Location     Type
 11047 ;;                  1    wreg      void 
 11048 ;; Registers used:
 11049 ;;		wreg
 11050 ;; Tracked objects:
 11051 ;;		On entry : 0/12
 11052 ;;		On exit  : 3F/B
 11053 ;;		Unchanged: 0/0
 11054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11058 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11059 ;;Total ram usage:        0 bytes
 11060 ;; Hardware stack levels used: 1
 11061 ;; Hardware stack levels required when called: 5
 11062 ;; This function calls:
 11063 ;;		Nothing
 11064 ;; This function is called by:
 11065 ;;		_EFuseInit
 11066 ;; This function uses a non-reentrant model
 11067 ;;
 11068                           
 11069                           
 11070                           ;psect for function _TMR0_Reload
 11071  17ED                     _TMR0_Reload:
 11072                           
 11073                           ;mcc_generated_files/tmr0.c: 132:     TMR0H = timer0ReloadVal16bit >> 8;
 11074                           
 11075                           ;incstack = 0
 11076                           ; Regs used in _TMR0_Reload: [wreg]
 11077  17ED  0140               	movlb	0	; select bank0
 11078  17EE  086F               	movf	_timer0ReloadVal16bit+1,w	;volatile
 11079  17EF  014B               	movlb	11	; select bank11
 11080  17F0  009D               	movwf	29	;volatile
 11081                           
 11082                           ;mcc_generated_files/tmr0.c: 133:     TMR0L = (uint8_t) timer0ReloadVal16bit;
 11083  17F1  0140               	movlb	0	; select bank0
 11084  17F2  086E               	movf	_timer0ReloadVal16bit,w	;volatile
 11085  17F3  014B               	movlb	11	; select bank11
 11086  17F4  009C               	movwf	28	;volatile
 11087  17F5  0008               	return
 11088  17F6                     __end_of_TMR0_Reload:
 11089                           
 11090                           	psect	text31
 11091  1776                     __ptext31:	
 11092 ;; *************** function _LIN_stopTimer *****************
 11093 ;; Defined at:
 11094 ;;		line 304 in file "mcc_generated_files/LINDrivers/lin_slave.c"
 11095 ;; Parameters:    Size  Location     Type
 11096 ;;		None
 11097 ;; Auto vars:     Size  Location     Type
 11098 ;;		None
 11099 ;; Return value:  Size  Location     Type
 11100 ;;                  1    wreg      void 
 11101 ;; Registers used:
 11102 ;;		status,2
 11103 ;; Tracked objects:
 11104 ;;		On entry : 0/2
 11105 ;;		On exit  : 3F/0
 11106 ;;		Unchanged: 0/0
 11107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11111 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11112 ;;Total ram usage:        0 bytes
 11113 ;; Hardware stack levels used: 1
 11114 ;; Hardware stack levels required when called: 5
 11115 ;; This function calls:
 11116 ;;		Nothing
 11117 ;; This function is called by:
 11118 ;;		_LIN_init
 11119 ;;		_LIN_handler
 11120 ;; This function uses a non-reentrant model
 11121 ;;
 11122                           
 11123                           
 11124                           ;psect for function _LIN_stopTimer
 11125  1776                     _LIN_stopTimer:
 11126                           
 11127                           ;mcc_generated_files/LINDrivers/lin_slave.c: 305:     __nop();
 11128                           
 11129                           ;incstack = 0
 11130                           ; Regs used in _LIN_stopTimer: [status,2]
 11131  1776  0000               	nop
 11132                           
 11133                           ;mcc_generated_files/LINDrivers/lin_slave.c: 307:     CountCallBack = 0;
 11134  1777  0140               	movlb	0	; select bank0
 11135  1778  01A6               	clrf	_CountCallBack	;volatile
 11136                           
 11137                           ;mcc_generated_files/LINDrivers/lin_slave.c: 308:     LIN_timerRunning = 0;
 11138  1779  01A7               	clrf	_LIN_timerRunning
 11139  177A  0008               	return
 11140  177B                     __end_of_LIN_stopTimer:
 11141                           
 11142                           	psect	text32
 11143  08E7                     __ptext32:	
 11144 ;; *************** function _LIN_startTimer *****************
 11145 ;; Defined at:
 11146 ;;		line 283 in file "mcc_generated_files/LINDrivers/lin_slave.c"
 11147 ;; Parameters:    Size  Location     Type
 11148 ;;  timeout         1    wreg     unsigned char 
 11149 ;; Auto vars:     Size  Location     Type
 11150 ;;  timeout         1    3[BANK0 ] unsigned char 
 11151 ;; Return value:  Size  Location     Type
 11152 ;;                  1    wreg      void 
 11153 ;; Registers used:
 11154 ;;		wreg, status,2, status,0, pclath, cstack
 11155 ;; Tracked objects:
 11156 ;;		On entry : 3F/0
 11157 ;;		On exit  : 3F/0
 11158 ;;		Unchanged: 0/0
 11159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11161 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11162 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11163 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11164 ;;Total ram usage:        2 bytes
 11165 ;; Hardware stack levels used: 1
 11166 ;; Hardware stack levels required when called: 6
 11167 ;; This function calls:
 11168 ;;		_TMR0_WriteTimer
 11169 ;; This function is called by:
 11170 ;;		_LIN_handler
 11171 ;; This function uses a non-reentrant model
 11172 ;;
 11173                           
 11174                           
 11175                           ;psect for function _LIN_startTimer
 11176  08E7                     _LIN_startTimer:
 11177                           
 11178                           ;incstack = 0
 11179                           ; Regs used in _LIN_startTimer: [wreg+status,2+status,0+pclath+cstack]
 11180                           ;LIN_startTimer@timeout stored from wreg
 11181  08E7  00CE               	movwf	LIN_startTimer@timeout
 11182                           
 11183                           ;mcc_generated_files/LINDrivers/lin_slave.c: 284:     LIN_timeout = timeout;
 11184  08E8  084E               	movf	LIN_startTimer@timeout,w
 11185  08E9  00CD               	movwf	??_LIN_startTimer
 11186  08EA  084D               	movf	??_LIN_startTimer,w
 11187  08EB  00E8               	movwf	_LIN_timeout
 11188                           
 11189                           ;mcc_generated_files/LINDrivers/lin_slave.c: 285:     TMR0_WriteTimer(0);
 11190  08EC  3000               	movlw	0
 11191  08ED  00CB               	movwf	TMR0_WriteTimer@timerVal
 11192  08EE  00CC               	movwf	TMR0_WriteTimer@timerVal+1
 11193  08EF  3197  2795         	fcall	_TMR0_WriteTimer
 11194                           
 11195                           ;mcc_generated_files/LINDrivers/lin_slave.c: 286:     __nop();
 11196  08F1  0000               	nop
 11197                           
 11198                           ;mcc_generated_files/LINDrivers/lin_slave.c: 287:     LIN_timerRunning = 1;
 11199  08F2  0140               	movlb	0	; select bank0
 11200  08F3  01A7               	clrf	_LIN_timerRunning
 11201  08F4  0AA7               	incf	_LIN_timerRunning,f
 11202  08F5  0008               	return
 11203  08F6                     __end_of_LIN_startTimer:
 11204                           
 11205                           	psect	text33
 11206  1795                     __ptext33:	
 11207 ;; *************** function _TMR0_WriteTimer *****************
 11208 ;; Defined at:
 11209 ;;		line 122 in file "mcc_generated_files/tmr0.c"
 11210 ;; Parameters:    Size  Location     Type
 11211 ;;  timerVal        2    0[BANK0 ] unsigned short 
 11212 ;; Auto vars:     Size  Location     Type
 11213 ;;		None
 11214 ;; Return value:  Size  Location     Type
 11215 ;;                  1    wreg      void 
 11216 ;; Registers used:
 11217 ;;		wreg
 11218 ;; Tracked objects:
 11219 ;;		On entry : 3F/0
 11220 ;;		On exit  : 3F/B
 11221 ;;		Unchanged: 0/0
 11222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11223 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11226 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11227 ;;Total ram usage:        2 bytes
 11228 ;; Hardware stack levels used: 1
 11229 ;; Hardware stack levels required when called: 5
 11230 ;; This function calls:
 11231 ;;		Nothing
 11232 ;; This function is called by:
 11233 ;;		_LIN_startTimer
 11234 ;; This function uses a non-reentrant model
 11235 ;;
 11236                           
 11237                           
 11238                           ;psect for function _TMR0_WriteTimer
 11239  1795                     _TMR0_WriteTimer:
 11240                           
 11241                           ;mcc_generated_files/tmr0.c: 122: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr0.c: 123: {;mcc_generated_files/tmr0.c: 125:     TMR0H = timerVal >> 8;
 11242                           
 11243                           ;incstack = 0
 11244                           ; Regs used in _TMR0_WriteTimer: [wreg]
 11245  1795  084C               	movf	TMR0_WriteTimer@timerVal+1,w
 11246  1796  014B               	movlb	11	; select bank11
 11247  1797  009D               	movwf	29	;volatile
 11248                           
 11249                           ;mcc_generated_files/tmr0.c: 126:     TMR0L = (uint8_t) timerVal;
 11250  1798  0140               	movlb	0	; select bank0
 11251  1799  084B               	movf	TMR0_WriteTimer@timerVal,w
 11252  179A  014B               	movlb	11	; select bank11
 11253  179B  009C               	movwf	28	;volatile
 11254  179C  0008               	return
 11255  179D                     __end_of_TMR0_WriteTimer:
 11256                           
 11257                           	psect	text34
 11258  0F7D                     __ptext34:	
 11259 ;; *************** function _LIN_queuePacket *****************
 11260 ;; Defined at:
 11261 ;;		line 66 in file "mcc_generated_files/LINDrivers/lin_slave.c"
 11262 ;; Parameters:    Size  Location     Type
 11263 ;;  cmd             1    wreg     unsigned char 
 11264 ;; Auto vars:     Size  Location     Type
 11265 ;;  cmd             1   17[BANK0 ] unsigned char 
 11266 ;;  i               1   18[BANK0 ] unsigned char 
 11267 ;;  tempSchedule    2   19[BANK0 ] PTR const struct .
 11268 ;;		 -> NULL(0), scheduleTable(140), 
 11269 ;; Return value:  Size  Location     Type
 11270 ;;                  1    wreg      void 
 11271 ;; Registers used:
 11272 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11273 ;; Tracked objects:
 11274 ;;		On entry : 3F/1
 11275 ;;		On exit  : 3F/E
 11276 ;;		Unchanged: 0/0
 11277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11279 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11280 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11281 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11282 ;;Total ram usage:        7 bytes
 11283 ;; Hardware stack levels used: 1
 11284 ;; Hardware stack levels required when called: 7
 11285 ;; This function calls:
 11286 ;;		_LIN_getChecksum
 11287 ;;		_LIN_sendPacket
 11288 ;;		_memcpy
 11289 ;; This function is called by:
 11290 ;;		_LIN_handler
 11291 ;; This function uses a non-reentrant model
 11292 ;;
 11293                           
 11294                           
 11295                           ;psect for function _LIN_queuePacket
 11296  0F7D                     _LIN_queuePacket:
 11297                           
 11298                           ;incstack = 0
 11299                           ; Regs used in _LIN_queuePacket: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11300                           ;LIN_queuePacket@cmd stored from wreg
 11301  0F7D  0140               	movlb	0	; select bank0
 11302  0F7E  00DC               	movwf	LIN_queuePacket@cmd
 11303                           
 11304                           ;mcc_generated_files/LINDrivers/lin_slave.c: 67:     const lin_rx_cmd_t* tempSchedule = 
      +                          LIN_rxCommand;
 11305  0F7F  0141               	movlb	1	; select bank1
 11306  0F80  086C               	movf	(_LIN_rxCommand+1)^(0+128),w
 11307  0F81  0140               	movlb	0	; select bank0
 11308  0F82  00DF               	movwf	LIN_queuePacket@tempSchedule+1
 11309  0F83  0141               	movlb	1	; select bank1
 11310  0F84  086B               	movf	_LIN_rxCommand^(0+128),w
 11311  0F85  0140               	movlb	0	; select bank0
 11312  0F86  00DE               	movwf	LIN_queuePacket@tempSchedule
 11313                           
 11314                           ;mcc_generated_files/LINDrivers/lin_slave.c: 69:     cmd &= 0x3F;
 11315  0F87  303F               	movlw	63
 11316  0F88  00D9               	movwf	??_LIN_queuePacket
 11317  0F89  0859               	movf	??_LIN_queuePacket,w
 11318  0F8A  05DC               	andwf	LIN_queuePacket@cmd,f
 11319                           
 11320                           ;mcc_generated_files/LINDrivers/lin_slave.c: 70:     for(uint8_t i = 0; i < LIN_rxComman
      +                          dLength; i++){
 11321  0F8B  01DD               	clrf	LIN_queuePacket@i
 11322  0F8C                     l4802:
 11323  0F8C  0141               	movlb	1	; select bank1
 11324  0F8D  086E               	movf	_LIN_rxCommandLength^(0+128),w
 11325  0F8E  0140               	movlb	0	; select bank0
 11326  0F8F  025D               	subwf	LIN_queuePacket@i,w
 11327  0F90  1803               	btfsc	3,0
 11328  0F91  2FA3               	goto	l4804
 11329                           
 11330                           ;mcc_generated_files/LINDrivers/lin_slave.c: 71:         if(cmd == tempSchedule->cmd){
 11331  0F92  085E               	movf	LIN_queuePacket@tempSchedule,w
 11332  0F93  0084               	movwf	4
 11333  0F94  085F               	movf	LIN_queuePacket@tempSchedule+1,w
 11334  0F95  0085               	movwf	5
 11335  0F96  0800               	movf	0,w	;code access
 11336  0F97  065C               	xorwf	LIN_queuePacket@cmd,w
 11337  0F98  1903               	btfsc	3,2
 11338  0F99  2FA3               	goto	l4804
 11339                           
 11340                           ;mcc_generated_files/LINDrivers/lin_slave.c: 74:         tempSchedule++;
 11341  0F9A  3005               	movlw	5
 11342  0F9B  07DE               	addwf	LIN_queuePacket@tempSchedule,f
 11343  0F9C  3000               	movlw	0
 11344  0F9D  3DDF               	addwfc	LIN_queuePacket@tempSchedule+1,f
 11345                           
 11346                           ;mcc_generated_files/LINDrivers/lin_slave.c: 75:     }
 11347  0F9E  3001               	movlw	1
 11348  0F9F  00D9               	movwf	??_LIN_queuePacket
 11349  0FA0  0859               	movf	??_LIN_queuePacket,w
 11350  0FA1  07DD               	addwf	LIN_queuePacket@i,f
 11351  0FA2  2F8C               	goto	l4802
 11352  0FA3                     l4804:
 11353                           
 11354                           ;mcc_generated_files/LINDrivers/lin_slave.c: 77:     LIN_packet.type = tempSchedule->typ
      +                          e;
 11355  0FA3  085F               	movf	LIN_queuePacket@tempSchedule+1,w
 11356  0FA4  00DA               	movwf	??_LIN_queuePacket+1
 11357  0FA5  085E               	movf	LIN_queuePacket@tempSchedule,w
 11358  0FA6  00D9               	movwf	??_LIN_queuePacket
 11359  0FA7  3001               	movlw	1
 11360  0FA8  0759               	addwf	??_LIN_queuePacket,w
 11361  0FA9  0084               	movwf	4
 11362  0FAA  085A               	movf	??_LIN_queuePacket+1,w
 11363  0FAB  1803               	skipnc
 11364  0FAC  0A5A               	incf	??_LIN_queuePacket+1,w
 11365  0FAD  0085               	movwf	5
 11366  0FAE  0800               	movf	0,w	;code access
 11367  0FAF  00DB               	movwf	??_LIN_queuePacket+2
 11368  0FB0  085B               	movf	??_LIN_queuePacket+2,w
 11369  0FB1  0141               	movlb	1	; select bank1
 11370  0FB2  00C0               	movwf	(_LIN_packet^(0+128)+10)
 11371                           
 11372                           ;mcc_generated_files/LINDrivers/lin_slave.c: 78:     LIN_packet.length = tempSchedule->l
      +                          ength;
 11373  0FB3  0140               	movlb	0	; select bank0
 11374  0FB4  085F               	movf	LIN_queuePacket@tempSchedule+1,w
 11375  0FB5  00DA               	movwf	??_LIN_queuePacket+1
 11376  0FB6  085E               	movf	LIN_queuePacket@tempSchedule,w
 11377  0FB7  00D9               	movwf	??_LIN_queuePacket
 11378  0FB8  3002               	movlw	2
 11379  0FB9  0759               	addwf	??_LIN_queuePacket,w
 11380  0FBA  0084               	movwf	4
 11381  0FBB  085A               	movf	??_LIN_queuePacket+1,w
 11382  0FBC  1803               	skipnc
 11383  0FBD  0A5A               	incf	??_LIN_queuePacket+1,w
 11384  0FBE  0085               	movwf	5
 11385  0FBF  0800               	movf	0,w	;code access
 11386  0FC0  00DB               	movwf	??_LIN_queuePacket+2
 11387  0FC1  085B               	movf	??_LIN_queuePacket+2,w
 11388  0FC2  0141               	movlb	1	; select bank1
 11389  0FC3  00C1               	movwf	(_LIN_packet^(0+128)+11)
 11390                           
 11391                           ;mcc_generated_files/LINDrivers/lin_slave.c: 82:     memcpy(LIN_packet.data, tempSchedul
      +                          e->data, LIN_packet.length);
 11392  0FC4  0140               	movlb	0	; select bank0
 11393  0FC5  085F               	movf	LIN_queuePacket@tempSchedule+1,w
 11394  0FC6  00DA               	movwf	??_LIN_queuePacket+1
 11395  0FC7  085E               	movf	LIN_queuePacket@tempSchedule,w
 11396  0FC8  00D9               	movwf	??_LIN_queuePacket
 11397  0FC9  3003               	movlw	3
 11398  0FCA  0759               	addwf	??_LIN_queuePacket,w
 11399  0FCB  0084               	movwf	4
 11400  0FCC  085A               	movf	??_LIN_queuePacket+1,w
 11401  0FCD  1803               	skipnc
 11402  0FCE  0A5A               	incf	??_LIN_queuePacket+1,w
 11403  0FCF  0085               	movwf	5
 11404  0FD0  3F00               	moviw [0]fsr0
 11405  0FD1  00CB               	movwf	memcpy@s1
 11406  0FD2  3F01               	moviw [1]fsr0
 11407  0FD3  00CC               	movwf	memcpy@s1+1
 11408  0FD4  0141               	movlb	1	; select bank1
 11409  0FD5  0841               	movf	(_LIN_packet^(0+128)+11),w
 11410  0FD6  0140               	movlb	0	; select bank0
 11411  0FD7  00CD               	movwf	memcpy@n
 11412  0FD8  01CE               	clrf	memcpy@n+1
 11413  0FD9  1BCD               	btfsc	memcpy@n,7
 11414  0FDA  03CE               	decf	memcpy@n+1,f
 11415  0FDB  30B7               	movlw	(low ((_LIN_packet| 0+1)))& (0+255)
 11416  0FDC  318A  22E2  318F   	fcall	_memcpy
 11417                           
 11418                           ;mcc_generated_files/LINDrivers/lin_slave.c: 85:     LIN_packet.checksum = LIN_getChecks
      +                          um(LIN_packet.length, LIN_packet.PID, LIN_packet.data);
 11419  0FDF  0141               	movlb	1	; select bank1
 11420  0FE0  0836               	movf	_LIN_packet^(0+128),w
 11421  0FE1  0140               	movlb	0	; select bank0
 11422  0FE2  00D9               	movwf	??_LIN_queuePacket
 11423  0FE3  0859               	movf	??_LIN_queuePacket,w
 11424  0FE4  00CB               	movwf	LIN_getChecksum@pid
 11425  0FE5  30B7               	movlw	(low ((_LIN_packet| 0+1)))& (0+255)
 11426  0FE6  00DA               	movwf	??_LIN_queuePacket+1
 11427  0FE7  085A               	movf	??_LIN_queuePacket+1,w
 11428  0FE8  00CC               	movwf	LIN_getChecksum@data
 11429  0FE9  0141               	movlb	1	; select bank1
 11430  0FEA  0841               	movf	(_LIN_packet^(0+128)+11),w
 11431  0FEB  318B  2396  318F   	fcall	_LIN_getChecksum
 11432  0FEE  00DB               	movwf	??_LIN_queuePacket+2
 11433  0FEF  085B               	movf	??_LIN_queuePacket+2,w
 11434  0FF0  0141               	movlb	1	; select bank1
 11435  0FF1  00BF               	movwf	(_LIN_packet^(0+128)+9)
 11436                           
 11437                           ;mcc_generated_files/LINDrivers/lin_slave.c: 86:     LIN_sendPacket(LIN_packet.length, L
      +                          IN_packet.PID, LIN_packet.data);
 11438  0FF2  0836               	movf	_LIN_packet^(0+128),w
 11439  0FF3  0140               	movlb	0	; select bank0
 11440  0FF4  00D9               	movwf	??_LIN_queuePacket
 11441  0FF5  0859               	movf	??_LIN_queuePacket,w
 11442  0FF6  00D3               	movwf	LIN_sendPacket@pid
 11443  0FF7  30B7               	movlw	(low ((_LIN_packet| 0+1)))& (0+255)
 11444  0FF8  00DA               	movwf	??_LIN_queuePacket+1
 11445  0FF9  085A               	movf	??_LIN_queuePacket+1,w
 11446  0FFA  00D4               	movwf	LIN_sendPacket@data
 11447  0FFB  0141               	movlb	1	; select bank1
 11448  0FFC  0841               	movf	(_LIN_packet^(0+128)+11),w
 11449  0FFD  318A  2295         	fcall	_LIN_sendPacket
 11450  0FFF  0008               	return
 11451  1000                     __end_of_LIN_queuePacket:
 11452                           
 11453                           	psect	text35
 11454  0AE2                     __ptext35:	
 11455 ;; *************** function _memcpy *****************
 11456 ;; Defined at:
 11457 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\memcpy.c"
 11458 ;; Parameters:    Size  Location     Type
 11459 ;;  d1              1    wreg     PTR void 
 11460 ;;		 -> LIN_packet(13), processLIN@tempRxData(8), 
 11461 ;;  s1              2    0[BANK0 ] PTR const void 
 11462 ;;		 -> LIN_packet.data(8), LIN_packet(13), LIN_DIAGNOSTIC_Data(8), LIN_TEMPERATURE_RISE_SA_Data(2), 
 11463 ;;		 -> LIN_TEMPERATURE_RISE_JS_Data(2), LIN_JUNCTION_TEMPERATURE_Data(2), LIN_HEATSINK_TEMPERATURE_Data(2), LIN_AMBIENT
      +_TEMPERATURE_Data(2), 
 11464 ;;		 -> LIN_CURRENT_SENSE_OFFSET_Data(2), LIN_ADC_CURRENT_SENSE_CORRECTED_Data(2), LIN_ADC_TEMP_SENSE_Data(2), LIN_ADC_C
      +URRENT_SENSE_UNCORRECTED_Data(2), 
 11465 ;;		 -> LIN_ADC_VCC_SENSE_Data(2), LIN_OVER_TEMP_FAULT_Data(1), LIN_UVLO_FAULT_Data(1), LIN_OVER_CURRENT_FAULT_Data(1), 
 11466 ;;		 -> LIN_GET_TRIGGER_TYPE_Data(1), LIN_OUTPUT_STATE_Data(1), LIN_TCC_SAMPLE_TIME_Data(2), LIN_REDUCED_DRIVE_TIME_Data
      +(1), 
 11467 ;;		 -> LIN_B1_COEF_Data(1), LIN_DAC_I_HW_TRIP_Data(1), LIN_ISENSE_MAX_Data(2), LIN_CURRENT2COUNTS_SQUARED_Data(2), 
 11468 ;;		 -> LIN_FACTOR_RDSON_RTHSA_Data(2), LIN_FACTOR_RDSON_RTHJS_Data(2), LIN_TJ_LIMIT_Data(1), LIN_ENTER_SLEEP_MODE_Data(
      +1), 
 11469 ;;		 -> LIN_TRIGGER_TYPE_Data(1), LIN_COMMAND_Data(1), 
 11470 ;;  n               2    2[BANK0 ] unsigned int 
 11471 ;; Auto vars:     Size  Location     Type
 11472 ;;  d1              1    9[BANK0 ] PTR void 
 11473 ;;		 -> LIN_packet(13), processLIN@tempRxData(8), 
 11474 ;;  s               2    6[BANK0 ] PTR const unsigned char 
 11475 ;;		 -> LIN_packet.data(8), LIN_packet(13), LIN_DIAGNOSTIC_Data(8), LIN_TEMPERATURE_RISE_SA_Data(2), 
 11476 ;;		 -> LIN_TEMPERATURE_RISE_JS_Data(2), LIN_JUNCTION_TEMPERATURE_Data(2), LIN_HEATSINK_TEMPERATURE_Data(2), LIN_AMBIENT
      +_TEMPERATURE_Data(2), 
 11477 ;;		 -> LIN_CURRENT_SENSE_OFFSET_Data(2), LIN_ADC_CURRENT_SENSE_CORRECTED_Data(2), LIN_ADC_TEMP_SENSE_Data(2), LIN_ADC_C
      +URRENT_SENSE_UNCORRECTED_Data(2), 
 11478 ;;		 -> LIN_ADC_VCC_SENSE_Data(2), LIN_OVER_TEMP_FAULT_Data(1), LIN_UVLO_FAULT_Data(1), LIN_OVER_CURRENT_FAULT_Data(1), 
 11479 ;;		 -> LIN_GET_TRIGGER_TYPE_Data(1), LIN_OUTPUT_STATE_Data(1), LIN_TCC_SAMPLE_TIME_Data(2), LIN_REDUCED_DRIVE_TIME_Data
      +(1), 
 11480 ;;		 -> LIN_B1_COEF_Data(1), LIN_DAC_I_HW_TRIP_Data(1), LIN_ISENSE_MAX_Data(2), LIN_CURRENT2COUNTS_SQUARED_Data(2), 
 11481 ;;		 -> LIN_FACTOR_RDSON_RTHSA_Data(2), LIN_FACTOR_RDSON_RTHJS_Data(2), LIN_TJ_LIMIT_Data(1), LIN_ENTER_SLEEP_MODE_Data(
      +1), 
 11482 ;;		 -> LIN_TRIGGER_TYPE_Data(1), LIN_COMMAND_Data(1), 
 11483 ;;  d               1    8[BANK0 ] PTR unsigned char 
 11484 ;;		 -> LIN_packet(13), processLIN@tempRxData(8), 
 11485 ;;  tmp             1    5[BANK0 ] unsigned char 
 11486 ;; Return value:  Size  Location     Type
 11487 ;;                  1    wreg      PTR void 
 11488 ;; Registers used:
 11489 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11490 ;; Tracked objects:
 11491 ;;		On entry : 3F/0
 11492 ;;		On exit  : 3F/0
 11493 ;;		Unchanged: 0/0
 11494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11495 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11496 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11497 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11498 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11499 ;;Total ram usage:       10 bytes
 11500 ;; Hardware stack levels used: 1
 11501 ;; Hardware stack levels required when called: 5
 11502 ;; This function calls:
 11503 ;;		Nothing
 11504 ;; This function is called by:
 11505 ;;		_LIN_queuePacket
 11506 ;;		_LIN_getPacket
 11507 ;; This function uses a non-reentrant model
 11508 ;;
 11509                           
 11510                           
 11511                           ;psect for function _memcpy
 11512  0AE2                     _memcpy:
 11513                           
 11514                           ;incstack = 0
 11515                           ; Regs used in _memcpy: [wreg+fsr1l+fsr1h+status,2+status,0]
 11516                           ;memcpy@d1 stored from wreg
 11517  0AE2  00D4               	movwf	memcpy@d1
 11518  0AE3  084C               	movf	memcpy@s1+1,w
 11519  0AE4  00D2               	movwf	memcpy@s+1
 11520  0AE5  084B               	movf	memcpy@s1,w
 11521  0AE6  00D1               	movwf	memcpy@s
 11522  0AE7  0854               	movf	memcpy@d1,w
 11523  0AE8  00CF               	movwf	??_memcpy
 11524  0AE9  084F               	movf	??_memcpy,w
 11525  0AEA  00D3               	movwf	memcpy@d
 11526  0AEB                     l4440:
 11527  0AEB  3001               	movlw	1
 11528  0AEC  02CD               	subwf	memcpy@n,f
 11529  0AED  3000               	movlw	0
 11530  0AEE  3BCE               	subwfb	memcpy@n+1,f
 11531  0AEF  0A4D               	incf	memcpy@n,w
 11532  0AF0  1903               	btfsc	3,2
 11533  0AF1  0A4E               	incf	memcpy@n+1,w
 11534  0AF2  1903               	btfsc	3,2
 11535  0AF3  0008               	return
 11536  0AF4  0851               	movf	memcpy@s,w
 11537  0AF5  0086               	movwf	6
 11538  0AF6  0852               	movf	memcpy@s+1,w
 11539  0AF7  0087               	movwf	7
 11540  0AF8  0801               	movf	1,w
 11541  0AF9  00CF               	movwf	??_memcpy
 11542  0AFA  084F               	movf	??_memcpy,w
 11543  0AFB  00D0               	movwf	memcpy@tmp
 11544  0AFC  3001               	movlw	1
 11545  0AFD  07D1               	addwf	memcpy@s,f
 11546  0AFE  3000               	movlw	0
 11547  0AFF  3DD2               	addwfc	memcpy@s+1,f
 11548  0B00  0850               	movf	memcpy@tmp,w
 11549  0B01  00CF               	movwf	??_memcpy
 11550  0B02  0853               	movf	memcpy@d,w
 11551  0B03  0086               	movwf	6
 11552  0B04  0187               	clrf	7
 11553  0B05  084F               	movf	??_memcpy,w
 11554  0B06  0081               	movwf	1
 11555  0B07  3001               	movlw	1
 11556  0B08  00CF               	movwf	??_memcpy
 11557  0B09  084F               	movf	??_memcpy,w
 11558  0B0A  07D3               	addwf	memcpy@d,f
 11559  0B0B  2AEB               	goto	l4440
 11560  0B0C                     __end_of_memcpy:
 11561                           
 11562                           	psect	text36
 11563  0A95                     __ptext36:	
 11564 ;; *************** function _LIN_sendPacket *****************
 11565 ;; Defined at:
 11566 ;;		line 192 in file "mcc_generated_files/LINDrivers/lin_slave.c"
 11567 ;; Parameters:    Size  Location     Type
 11568 ;;  length          1    wreg     unsigned char 
 11569 ;;  pid             1    8[BANK0 ] unsigned char 
 11570 ;;  data            1    9[BANK0 ] PTR unsigned char 
 11571 ;;		 -> LIN_packet(13), 
 11572 ;; Auto vars:     Size  Location     Type
 11573 ;;  length          1   12[BANK0 ] unsigned char 
 11574 ;;  i               1   13[BANK0 ] unsigned char 
 11575 ;; Return value:  Size  Location     Type
 11576 ;;                  1    wreg      void 
 11577 ;; Registers used:
 11578 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11579 ;; Tracked objects:
 11580 ;;		On entry : 3F/1
 11581 ;;		On exit  : 3F/E
 11582 ;;		Unchanged: 0/0
 11583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11584 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11585 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11586 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11587 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11588 ;;Total ram usage:        6 bytes
 11589 ;; Hardware stack levels used: 1
 11590 ;; Hardware stack levels required when called: 6
 11591 ;; This function calls:
 11592 ;;		_EUSART1_Write
 11593 ;;		_LIN_getChecksum
 11594 ;; This function is called by:
 11595 ;;		_LIN_queuePacket
 11596 ;; This function uses a non-reentrant model
 11597 ;;
 11598                           
 11599                           
 11600                           ;psect for function _LIN_sendPacket
 11601  0A95                     _LIN_sendPacket:
 11602                           
 11603                           ;incstack = 0
 11604                           ; Regs used in _LIN_sendPacket: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11605                           ;LIN_sendPacket@length stored from wreg
 11606  0A95  0140               	movlb	0	; select bank0
 11607  0A96  00D7               	movwf	LIN_sendPacket@length
 11608                           
 11609                           ;mcc_generated_files/LINDrivers/lin_slave.c: 195:     for(uint8_t i = 0; i < length; i++
      +                          ){
 11610  0A97  01D8               	clrf	LIN_sendPacket@i
 11611  0A98                     l4578:
 11612  0A98  0857               	movf	LIN_sendPacket@length,w
 11613  0A99  0258               	subwf	LIN_sendPacket@i,w
 11614  0A9A  1803               	btfsc	3,0
 11615  0A9B  2AAC               	goto	l4580
 11616                           
 11617                           ;mcc_generated_files/LINDrivers/lin_slave.c: 196:         EUSART1_Write(*(data + i));
 11618  0A9C  0858               	movf	LIN_sendPacket@i,w
 11619  0A9D  0754               	addwf	LIN_sendPacket@data,w
 11620  0A9E  00D5               	movwf	??_LIN_sendPacket
 11621  0A9F  0855               	movf	??_LIN_sendPacket,w
 11622  0AA0  0086               	movwf	6
 11623  0AA1  0187               	clrf	7
 11624  0AA2  0801               	movf	1,w
 11625  0AA3  318A  226F  318A   	fcall	_EUSART1_Write
 11626                           
 11627                           ;mcc_generated_files/LINDrivers/lin_slave.c: 197:     }
 11628  0AA6  3001               	movlw	1
 11629  0AA7  0140               	movlb	0	; select bank0
 11630  0AA8  00D5               	movwf	??_LIN_sendPacket
 11631  0AA9  0855               	movf	??_LIN_sendPacket,w
 11632  0AAA  07D8               	addwf	LIN_sendPacket@i,f
 11633  0AAB  2A98               	goto	l4578
 11634  0AAC                     l4580:
 11635                           
 11636                           ;mcc_generated_files/LINDrivers/lin_slave.c: 199:     EUSART1_Write(LIN_getChecksum(leng
      +                          th, pid, data));
 11637  0AAC  0853               	movf	LIN_sendPacket@pid,w
 11638  0AAD  00D5               	movwf	??_LIN_sendPacket
 11639  0AAE  0855               	movf	??_LIN_sendPacket,w
 11640  0AAF  00CB               	movwf	LIN_getChecksum@pid
 11641  0AB0  0854               	movf	LIN_sendPacket@data,w
 11642  0AB1  00D6               	movwf	??_LIN_sendPacket+1
 11643  0AB2  0856               	movf	??_LIN_sendPacket+1,w
 11644  0AB3  00CC               	movwf	LIN_getChecksum@data
 11645  0AB4  0857               	movf	LIN_sendPacket@length,w
 11646  0AB5  318B  2396  318A   	fcall	_LIN_getChecksum
 11647  0AB8  318A  226F         	fcall	_EUSART1_Write
 11648  0ABA  0008               	return
 11649  0ABB                     __end_of_LIN_sendPacket:
 11650                           
 11651                           	psect	text37
 11652  0B96                     __ptext37:	
 11653 ;; *************** function _LIN_getChecksum *****************
 11654 ;; Defined at:
 11655 ;;		line 270 in file "mcc_generated_files/LINDrivers/lin_slave.c"
 11656 ;; Parameters:    Size  Location     Type
 11657 ;;  length          1    wreg     unsigned char 
 11658 ;;  pid             1    0[BANK0 ] unsigned char 
 11659 ;;  data            1    1[BANK0 ] PTR unsigned char 
 11660 ;;		 -> LIN_packet(13), 
 11661 ;; Auto vars:     Size  Location     Type
 11662 ;;  length          1    4[BANK0 ] unsigned char 
 11663 ;;  i               1    5[BANK0 ] unsigned char 
 11664 ;;  checksum        2    6[BANK0 ] unsigned short 
 11665 ;; Return value:  Size  Location     Type
 11666 ;;                  1    wreg      unsigned char 
 11667 ;; Registers used:
 11668 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11669 ;; Tracked objects:
 11670 ;;		On entry : 3E/1
 11671 ;;		On exit  : 3F/0
 11672 ;;		Unchanged: 0/0
 11673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11674 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11675 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11676 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11677 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11678 ;;Total ram usage:        8 bytes
 11679 ;; Hardware stack levels used: 1
 11680 ;; Hardware stack levels required when called: 5
 11681 ;; This function calls:
 11682 ;;		Nothing
 11683 ;; This function is called by:
 11684 ;;		_LIN_queuePacket
 11685 ;;		_LIN_handler
 11686 ;;		_LIN_sendPacket
 11687 ;; This function uses a non-reentrant model
 11688 ;;
 11689                           
 11690                           
 11691                           ;psect for function _LIN_getChecksum
 11692  0B96                     _LIN_getChecksum:
 11693                           
 11694                           ;incstack = 0
 11695                           ; Regs used in _LIN_getChecksum: [wreg+fsr1l+fsr1h+status,2+status,0]
 11696                           ;LIN_getChecksum@length stored from wreg
 11697  0B96  0140               	movlb	0	; select bank0
 11698  0B97  00CF               	movwf	LIN_getChecksum@length
 11699                           
 11700                           ;mcc_generated_files/LINDrivers/lin_slave.c: 271:     uint16_t checksum = pid;
 11701  0B98  084B               	movf	LIN_getChecksum@pid,w
 11702  0B99  00CD               	movwf	??_LIN_getChecksum
 11703  0B9A  01CE               	clrf	??_LIN_getChecksum+1
 11704  0B9B  084D               	movf	??_LIN_getChecksum,w
 11705  0B9C  00D1               	movwf	LIN_getChecksum@checksum
 11706  0B9D  084E               	movf	??_LIN_getChecksum+1,w
 11707  0B9E  00D2               	movwf	LIN_getChecksum@checksum+1
 11708                           
 11709                           ;mcc_generated_files/LINDrivers/lin_slave.c: 273:     for (uint8_t i = 0; i < length; i+
      +                          +){
 11710  0B9F  01D0               	clrf	LIN_getChecksum@i
 11711  0BA0                     l4456:
 11712  0BA0  084F               	movf	LIN_getChecksum@length,w
 11713  0BA1  0250               	subwf	LIN_getChecksum@i,w
 11714  0BA2  1803               	btfsc	3,0
 11715  0BA3  2BC2               	goto	l310
 11716                           
 11717                           ;mcc_generated_files/LINDrivers/lin_slave.c: 274:         checksum = checksum + *data++;
 11718  0BA4  084C               	movf	LIN_getChecksum@data,w
 11719  0BA5  0086               	movwf	6
 11720  0BA6  0187               	clrf	7
 11721  0BA7  0801               	movf	1,w
 11722  0BA8  0751               	addwf	LIN_getChecksum@checksum,w
 11723  0BA9  00D1               	movwf	LIN_getChecksum@checksum
 11724  0BAA  0852               	movf	LIN_getChecksum@checksum+1,w
 11725  0BAB  1803               	skipnc
 11726  0BAC  0A52               	incf	LIN_getChecksum@checksum+1,w
 11727  0BAD  00D2               	movwf	LIN_getChecksum@checksum+1
 11728  0BAE  3001               	movlw	1
 11729  0BAF  00CD               	movwf	??_LIN_getChecksum
 11730  0BB0  084D               	movf	??_LIN_getChecksum,w
 11731  0BB1  07CC               	addwf	LIN_getChecksum@data,f
 11732                           
 11733                           ;mcc_generated_files/LINDrivers/lin_slave.c: 275:         if(checksum > 0xFF)
 11734  0BB2  3001               	movlw	1
 11735  0BB3  0252               	subwf	LIN_getChecksum@checksum+1,w
 11736  0BB4  3000               	movlw	0
 11737  0BB5  1903               	skipnz
 11738  0BB6  0251               	subwf	LIN_getChecksum@checksum,w
 11739  0BB7  1C03               	skipc
 11740  0BB8  2BBD               	goto	l4454
 11741                           
 11742                           ;mcc_generated_files/LINDrivers/lin_slave.c: 276:             checksum -= 0xFF;
 11743  0BB9  30FF               	movlw	255
 11744  0BBA  02D1               	subwf	LIN_getChecksum@checksum,f
 11745  0BBB  3000               	movlw	0
 11746  0BBC  3BD2               	subwfb	LIN_getChecksum@checksum+1,f
 11747  0BBD                     l4454:
 11748                           
 11749                           ;mcc_generated_files/LINDrivers/lin_slave.c: 277:     }
 11750  0BBD  3001               	movlw	1
 11751  0BBE  00CD               	movwf	??_LIN_getChecksum
 11752  0BBF  084D               	movf	??_LIN_getChecksum,w
 11753  0BC0  07D0               	addwf	LIN_getChecksum@i,f
 11754  0BC1  2BA0               	goto	l4456
 11755  0BC2                     l310:
 11756                           
 11757                           ;mcc_generated_files/LINDrivers/lin_slave.c: 278:     checksum = ~checksum;
 11758  0BC2  09D1               	comf	LIN_getChecksum@checksum,f
 11759  0BC3  09D2               	comf	LIN_getChecksum@checksum+1,f
 11760                           
 11761                           ;mcc_generated_files/LINDrivers/lin_slave.c: 280:     return (uint8_t)checksum;
 11762  0BC4  0851               	movf	LIN_getChecksum@checksum,w
 11763  0BC5  0008               	return
 11764  0BC6                     __end_of_LIN_getChecksum:
 11765                           
 11766                           	psect	text38
 11767  0A6F                     __ptext38:	
 11768 ;; *************** function _EUSART1_Write *****************
 11769 ;; Defined at:
 11770 ;;		line 173 in file "mcc_generated_files/eusart1.c"
 11771 ;; Parameters:    Size  Location     Type
 11772 ;;  txData          1    wreg     unsigned char 
 11773 ;; Auto vars:     Size  Location     Type
 11774 ;;  txData          1    1[BANK0 ] unsigned char 
 11775 ;; Return value:  Size  Location     Type
 11776 ;;                  1    wreg      void 
 11777 ;; Registers used:
 11778 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11779 ;; Tracked objects:
 11780 ;;		On entry : 3F/0
 11781 ;;		On exit  : 3F/E
 11782 ;;		Unchanged: 0/0
 11783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11785 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11786 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11787 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11788 ;;Total ram usage:        2 bytes
 11789 ;; Hardware stack levels used: 1
 11790 ;; Hardware stack levels required when called: 5
 11791 ;; This function calls:
 11792 ;;		Nothing
 11793 ;; This function is called by:
 11794 ;;		_LIN_sendPacket
 11795 ;; This function uses a non-reentrant model
 11796 ;;
 11797                           
 11798                           
 11799                           ;psect for function _EUSART1_Write
 11800  0A6F                     _EUSART1_Write:
 11801                           
 11802                           ;incstack = 0
 11803                           ; Regs used in _EUSART1_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
 11804                           ;EUSART1_Write@txData stored from wreg
 11805  0A6F  00CC               	movwf	EUSART1_Write@txData
 11806  0A70                     l4510:	
 11807                           ;mcc_generated_files/eusart1.c: 173: void EUSART1_Write(uint8_t txData);mcc_generated_fi
      +                          les/eusart1.c: 174: {;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBuffer
      +                          Remaining)
 11808                           
 11809                           
 11810                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
 11811  0A70  0141               	movlb	1	; select bank1
 11812  0A71  086D               	movf	_eusart1TxBufferRemaining^(0+128),w	;volatile
 11813  0A72  1903               	btfsc	3,2
 11814  0A73  2A70               	goto	l4510
 11815                           
 11816                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE3bits.TX1IE)
 11817  0A74  014E               	movlb	14	; select bank14
 11818  0A75  1A19               	btfsc	25,4	;volatile
 11819  0A76  2A7C               	goto	l705
 11820                           
 11821                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          X1REG = txData;
 11822  0A77  0140               	movlb	0	; select bank0
 11823  0A78  084C               	movf	EUSART1_Write@txData,w
 11824  0A79  0142               	movlb	2	; select bank2
 11825  0A7A  009A               	movwf	26	;volatile
 11826                           
 11827                           ;mcc_generated_files/eusart1.c: 182:     }
 11828  0A7B  2A92               	goto	l4524
 11829  0A7C                     l705:	
 11830                           ;mcc_generated_files/eusart1.c: 183:     else
 11831                           
 11832                           
 11833                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE3bits.TX1IE = 0;
 11834  0A7C  1219               	bcf	25,4	;volatile
 11835                           
 11836                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
 11837  0A7D  0140               	movlb	0	; select bank0
 11838  0A7E  084C               	movf	EUSART1_Write@txData,w
 11839  0A7F  00CB               	movwf	??_EUSART1_Write
 11840  0A80  0873               	movf	_eusart1TxHead,w
 11841  0A81  3E30               	addlw	(low (_eusart1TxBuffer| (0+256)))& (0+255)
 11842  0A82  0086               	movwf	6
 11843  0A83  3001               	movlw	1	; select bank2/3
 11844  0A84  0087               	movwf	7
 11845  0A85  084B               	movf	??_EUSART1_Write,w
 11846  0A86  0081               	movwf	1
 11847  0A87  3001               	movlw	1
 11848  0A88  00CB               	movwf	??_EUSART1_Write
 11849  0A89  084B               	movf	??_EUSART1_Write,w
 11850  0A8A  07F3               	addwf	_eusart1TxHead,f	;volatile
 11851                           
 11852                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
 11853  0A8B  3008               	movlw	8
 11854  0A8C  0273               	subwf	_eusart1TxHead,w
 11855  0A8D  1803               	btfsc	3,0
 11856                           
 11857                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
 11858  0A8E  01F3               	clrf	_eusart1TxHead	;volatile
 11859                           
 11860                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
 11861  0A8F  3001               	movlw	1
 11862  0A90  0141               	movlb	1	; select bank1
 11863  0A91  02ED               	subwf	_eusart1TxBufferRemaining^(0+128),f	;volatile
 11864  0A92                     l4524:
 11865                           
 11866                           ;mcc_generated_files/eusart1.c: 193:     PIE3bits.TX1IE = 1;
 11867  0A92  014E               	movlb	14	; select bank14
 11868  0A93  1619               	bsf	25,4	;volatile
 11869  0A94  0008               	return
 11870  0A95                     __end_of_EUSART1_Write:
 11871                           
 11872                           	psect	text39
 11873  1771                     __ptext39:	
 11874 ;; *************** function _LIN_enableRx *****************
 11875 ;; Defined at:
 11876 ;;		line 311 in file "mcc_generated_files/LINDrivers/lin_slave.c"
 11877 ;; Parameters:    Size  Location     Type
 11878 ;;		None
 11879 ;; Auto vars:     Size  Location     Type
 11880 ;;		None
 11881 ;; Return value:  Size  Location     Type
 11882 ;;                  1    wreg      void 
 11883 ;; Registers used:
 11884 ;;		None
 11885 ;; Tracked objects:
 11886 ;;		On entry : 3D/0
 11887 ;;		On exit  : 3F/E
 11888 ;;		Unchanged: 0/0
 11889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11893 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11894 ;;Total ram usage:        0 bytes
 11895 ;; Hardware stack levels used: 1
 11896 ;; Hardware stack levels required when called: 5
 11897 ;; This function calls:
 11898 ;;		Nothing
 11899 ;; This function is called by:
 11900 ;;		_LIN_init
 11901 ;;		_LIN_handler
 11902 ;; This function uses a non-reentrant model
 11903 ;;
 11904                           
 11905                           
 11906                           ;psect for function _LIN_enableRx
 11907  1771                     _LIN_enableRx:
 11908                           
 11909                           ;mcc_generated_files/LINDrivers/lin_slave.c: 312:     RC1STAbits.CREN = 1;
 11910                           
 11911                           ;incstack = 0
 11912                           ; Regs used in _LIN_enableRx: []
 11913  1771  0142               	movlb	2	; select bank2
 11914  1772  161D               	bsf	29,4	;volatile
 11915                           
 11916                           ;mcc_generated_files/LINDrivers/lin_slave.c: 313:     PIE3bits.RC1IE = 1;
 11917  1773  014E               	movlb	14	; select bank14
 11918  1774  1699               	bsf	25,5	;volatile
 11919  1775  0008               	return
 11920  1776                     __end_of_LIN_enableRx:
 11921                           
 11922                           	psect	text40
 11923  176C                     __ptext40:	
 11924 ;; *************** function _LIN_disableRx *****************
 11925 ;; Defined at:
 11926 ;;		line 316 in file "mcc_generated_files/LINDrivers/lin_slave.c"
 11927 ;; Parameters:    Size  Location     Type
 11928 ;;		None
 11929 ;; Auto vars:     Size  Location     Type
 11930 ;;		None
 11931 ;; Return value:  Size  Location     Type
 11932 ;;                  1    wreg      void 
 11933 ;; Registers used:
 11934 ;;		None
 11935 ;; Tracked objects:
 11936 ;;		On entry : 3F/1
 11937 ;;		On exit  : 3F/E
 11938 ;;		Unchanged: 0/0
 11939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11944 ;;Total ram usage:        0 bytes
 11945 ;; Hardware stack levels used: 1
 11946 ;; Hardware stack levels required when called: 5
 11947 ;; This function calls:
 11948 ;;		Nothing
 11949 ;; This function is called by:
 11950 ;;		_LIN_handler
 11951 ;; This function uses a non-reentrant model
 11952 ;;
 11953                           
 11954                           
 11955                           ;psect for function _LIN_disableRx
 11956  176C                     _LIN_disableRx:
 11957                           
 11958                           ;mcc_generated_files/LINDrivers/lin_slave.c: 317:     RC1STAbits.CREN = 0;
 11959                           
 11960                           ;incstack = 0
 11961                           ; Regs used in _LIN_disableRx: []
 11962  176C  0142               	movlb	2	; select bank2
 11963  176D  121D               	bcf	29,4	;volatile
 11964                           
 11965                           ;mcc_generated_files/LINDrivers/lin_slave.c: 318:     PIE3bits.RC1IE = 0;
 11966  176E  014E               	movlb	14	; select bank14
 11967  176F  1299               	bcf	25,5	;volatile
 11968  1770  0008               	return
 11969  1771                     __end_of_LIN_disableRx:
 11970                           
 11971                           	psect	text41
 11972  0956                     __ptext41:	
 11973 ;; *************** function _LIN_checkPID *****************
 11974 ;; Defined at:
 11975 ;;		line 241 in file "mcc_generated_files/LINDrivers/lin_slave.c"
 11976 ;; Parameters:    Size  Location     Type
 11977 ;;  pid             1    wreg     unsigned char 
 11978 ;; Auto vars:     Size  Location     Type
 11979 ;;  pid             1    7[BANK0 ] unsigned char 
 11980 ;; Return value:  Size  Location     Type
 11981 ;;                  1    wreg      _Bool 
 11982 ;; Registers used:
 11983 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11984 ;; Tracked objects:
 11985 ;;		On entry : 3F/1
 11986 ;;		On exit  : 3F/0
 11987 ;;		Unchanged: 0/0
 11988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11990 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11992 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11993 ;;Total ram usage:        1 bytes
 11994 ;; Hardware stack levels used: 1
 11995 ;; Hardware stack levels required when called: 6
 11996 ;; This function calls:
 11997 ;;		_LIN_calcParity
 11998 ;;		_LIN_getFromTable
 11999 ;; This function is called by:
 12000 ;;		_LIN_handler
 12001 ;; This function uses a non-reentrant model
 12002 ;;
 12003                           
 12004                           
 12005                           ;psect for function _LIN_checkPID
 12006  0956                     _LIN_checkPID:
 12007                           
 12008                           ;incstack = 0
 12009                           ; Regs used in _LIN_checkPID: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12010                           ;LIN_checkPID@pid stored from wreg
 12011  0956  0140               	movlb	0	; select bank0
 12012  0957  00D2               	movwf	LIN_checkPID@pid
 12013                           
 12014                           ;mcc_generated_files/LINDrivers/lin_slave.c: 242:     if(LIN_getFromTable(pid, TYPE) == 
      +                          ERROR)
 12015  0958  01CB               	clrf	LIN_getFromTable@param
 12016  0959  0ACB               	incf	LIN_getFromTable@param,f
 12017  095A  0852               	movf	LIN_checkPID@pid,w
 12018  095B  318E  260E  3189   	fcall	_LIN_getFromTable
 12019  095E  3A02               	xorlw	2
 12020  095F  1D03               	skipz
 12021  0960  2963               	goto	l4842
 12022  0961                     l4838:
 12023                           
 12024                           ;mcc_generated_files/LINDrivers/lin_slave.c: 243:         return 0;
 12025  0961  3000               	movlw	0
 12026  0962  0008               	return
 12027  0963                     l4842:
 12028                           
 12029                           ;mcc_generated_files/LINDrivers/lin_slave.c: 245:     if(pid == LIN_calcParity(pid & 0x3
      +                          F))
 12030  0963  0852               	movf	LIN_checkPID@pid,w
 12031  0964  393F               	andlw	63
 12032  0965  318E  26FA  3189   	fcall	_LIN_calcParity
 12033  0968  0652               	xorwf	LIN_checkPID@pid,w
 12034  0969  1D03               	skipz
 12035  096A  2961               	goto	l4838
 12036                           
 12037                           ;mcc_generated_files/LINDrivers/lin_slave.c: 246:         return 1;
 12038  096B  3001               	movlw	1
 12039  096C  0008               	return
 12040  096D                     __end_of_LIN_checkPID:
 12041                           
 12042                           	psect	text42
 12043  0E0E                     __ptext42:	
 12044 ;; *************** function _LIN_getFromTable *****************
 12045 ;; Defined at:
 12046 ;;		line 211 in file "mcc_generated_files/LINDrivers/lin_slave.c"
 12047 ;; Parameters:    Size  Location     Type
 12048 ;;  cmd             1    wreg     unsigned char 
 12049 ;;  param           1    0[BANK0 ] enum E221
 12050 ;; Auto vars:     Size  Location     Type
 12051 ;;  cmd             1    3[BANK0 ] unsigned char 
 12052 ;;  length          1    4[BANK0 ] unsigned char 
 12053 ;;  rxCommand       2    5[BANK0 ] PTR const struct .
 12054 ;;		 -> NULL(0), scheduleTable(140), 
 12055 ;; Return value:  Size  Location     Type
 12056 ;;                  1    wreg      unsigned char 
 12057 ;; Registers used:
 12058 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
 12059 ;; Tracked objects:
 12060 ;;		On entry : 3E/1
 12061 ;;		On exit  : 3F/0
 12062 ;;		Unchanged: 0/0
 12063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12064 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12065 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12066 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12067 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12068 ;;Total ram usage:        7 bytes
 12069 ;; Hardware stack levels used: 1
 12070 ;; Hardware stack levels required when called: 5
 12071 ;; This function calls:
 12072 ;;		Nothing
 12073 ;; This function is called by:
 12074 ;;		_LIN_handler
 12075 ;;		_LIN_checkPID
 12076 ;; This function uses a non-reentrant model
 12077 ;;
 12078                           
 12079                           
 12080                           ;psect for function _LIN_getFromTable
 12081  0E0E                     _LIN_getFromTable:
 12082                           
 12083                           ;incstack = 0
 12084                           ; Regs used in _LIN_getFromTable: [wreg-fsr0h+status,2+status,0+pclath]
 12085                           ;LIN_getFromTable@cmd stored from wreg
 12086  0E0E  0140               	movlb	0	; select bank0
 12087  0E0F  00CE               	movwf	LIN_getFromTable@cmd
 12088                           
 12089                           ;mcc_generated_files/LINDrivers/lin_slave.c: 212:     const lin_rx_cmd_t* rxCommand = LI
      +                          N_rxCommand;
 12090  0E10  0141               	movlb	1	; select bank1
 12091  0E11  086C               	movf	(_LIN_rxCommand+1)^(0+128),w
 12092  0E12  0140               	movlb	0	; select bank0
 12093  0E13  00D1               	movwf	LIN_getFromTable@rxCommand+1
 12094  0E14  0141               	movlb	1	; select bank1
 12095  0E15  086B               	movf	_LIN_rxCommand^(0+128),w
 12096  0E16  0140               	movlb	0	; select bank0
 12097  0E17  00D0               	movwf	LIN_getFromTable@rxCommand
 12098                           
 12099                           ;mcc_generated_files/LINDrivers/lin_slave.c: 214:     cmd &= 0x3F;
 12100  0E18  303F               	movlw	63
 12101  0E19  00CC               	movwf	??_LIN_getFromTable
 12102  0E1A  084C               	movf	??_LIN_getFromTable,w
 12103  0E1B  05CE               	andwf	LIN_getFromTable@cmd,f
 12104                           
 12105                           ;mcc_generated_files/LINDrivers/lin_slave.c: 216:     for(uint8_t length = 0; length < L
      +                          IN_rxCommandLength; length++){
 12106  0E1C  01CF               	clrf	LIN_getFromTable@length
 12107  0E1D                     l4622:
 12108  0E1D  0141               	movlb	1	; select bank1
 12109  0E1E  086E               	movf	_LIN_rxCommandLength^(0+128),w
 12110  0E1F  0140               	movlb	0	; select bank0
 12111  0E20  024F               	subwf	LIN_getFromTable@length,w
 12112  0E21  1803               	btfsc	3,0
 12113  0E22  2E64               	goto	l4638
 12114                           
 12115                           ;mcc_generated_files/LINDrivers/lin_slave.c: 217:         if(cmd == rxCommand->cmd){
 12116  0E23  0850               	movf	LIN_getFromTable@rxCommand,w
 12117  0E24  0084               	movwf	4
 12118  0E25  0851               	movf	LIN_getFromTable@rxCommand+1,w
 12119  0E26  0085               	movwf	5
 12120  0E27  0800               	movf	0,w	;code access
 12121  0E28  064E               	xorwf	LIN_getFromTable@cmd,w
 12122  0E29  1903               	btfsc	3,2
 12123  0E2A  2E64               	goto	l4638
 12124                           
 12125                           ;mcc_generated_files/LINDrivers/lin_slave.c: 220:         rxCommand++;
 12126  0E2B  3005               	movlw	5
 12127  0E2C  07D0               	addwf	LIN_getFromTable@rxCommand,f
 12128  0E2D  3000               	movlw	0
 12129  0E2E  3DD1               	addwfc	LIN_getFromTable@rxCommand+1,f
 12130                           
 12131                           ;mcc_generated_files/LINDrivers/lin_slave.c: 222:         if(length == (LIN_rxCommandLen
      +                          gth-1)){
 12132  0E2F  0141               	movlb	1	; select bank1
 12133  0E30  086E               	movf	_LIN_rxCommandLength^(0+128),w
 12134  0E31  3EFF               	addlw	255
 12135  0E32  0140               	movlb	0	; select bank0
 12136  0E33  00CC               	movwf	??_LIN_getFromTable
 12137  0E34  30FF               	movlw	255
 12138  0E35  1803               	skipnc
 12139  0E36  3000               	movlw	0
 12140  0E37  00CD               	movwf	??_LIN_getFromTable+1
 12141  0E38  084F               	movf	LIN_getFromTable@length,w
 12142  0E39  064C               	xorwf	??_LIN_getFromTable,w
 12143  0E3A  044D               	iorwf	??_LIN_getFromTable+1,w
 12144  0E3B  1D03               	skipz
 12145  0E3C  2E3F               	goto	l4620
 12146  0E3D                     l4616:
 12147                           
 12148                           ;mcc_generated_files/LINDrivers/lin_slave.c: 223:             return ERROR;
 12149  0E3D  3002               	movlw	2
 12150  0E3E  0008               	return
 12151  0E3F                     l4620:
 12152                           
 12153                           ;mcc_generated_files/LINDrivers/lin_slave.c: 225:     }
 12154  0E3F  3001               	movlw	1
 12155  0E40  00CC               	movwf	??_LIN_getFromTable
 12156  0E41  084C               	movf	??_LIN_getFromTable,w
 12157  0E42  07CF               	addwf	LIN_getFromTable@length,f
 12158  0E43  2E1D               	goto	l4622
 12159  0E44                     l4624:
 12160                           
 12161                           ;mcc_generated_files/LINDrivers/lin_slave.c: 229:             return rxCommand->cmd;
 12162  0E44  0850               	movf	LIN_getFromTable@rxCommand,w
 12163  0E45  0084               	movwf	4
 12164  0E46  0851               	movf	LIN_getFromTable@rxCommand+1,w
 12165  0E47  0085               	movwf	5
 12166  0E48  0800               	movf	0,w	;code access
 12167  0E49  0008               	return
 12168  0E4A                     l4628:
 12169                           
 12170                           ;mcc_generated_files/LINDrivers/lin_slave.c: 231:             return rxCommand->type;
 12171  0E4A  0851               	movf	LIN_getFromTable@rxCommand+1,w
 12172  0E4B  00CD               	movwf	??_LIN_getFromTable+1
 12173  0E4C  0850               	movf	LIN_getFromTable@rxCommand,w
 12174  0E4D  00CC               	movwf	??_LIN_getFromTable
 12175  0E4E  3001               	movlw	1
 12176  0E4F  074C               	addwf	??_LIN_getFromTable,w
 12177  0E50  0084               	movwf	4
 12178  0E51  084D               	movf	??_LIN_getFromTable+1,w
 12179  0E52  1803               	skipnc
 12180  0E53  0A4D               	incf	??_LIN_getFromTable+1,w
 12181  0E54  0085               	movwf	5
 12182  0E55  0800               	movf	0,w	;code access
 12183  0E56  0008               	return
 12184  0E57                     l4632:
 12185                           
 12186                           ;mcc_generated_files/LINDrivers/lin_slave.c: 233:             return rxCommand->length;
 12187  0E57  0851               	movf	LIN_getFromTable@rxCommand+1,w
 12188  0E58  00CD               	movwf	??_LIN_getFromTable+1
 12189  0E59  0850               	movf	LIN_getFromTable@rxCommand,w
 12190  0E5A  00CC               	movwf	??_LIN_getFromTable
 12191  0E5B  3002               	movlw	2
 12192  0E5C  074C               	addwf	??_LIN_getFromTable,w
 12193  0E5D  0084               	movwf	4
 12194  0E5E  084D               	movf	??_LIN_getFromTable+1,w
 12195  0E5F  1803               	skipnc
 12196  0E60  0A4D               	incf	??_LIN_getFromTable+1,w
 12197  0E61  0085               	movwf	5
 12198  0E62  0800               	movf	0,w	;code access
 12199  0E63  0008               	return
 12200  0E64                     l4638:
 12201  0E64  084B               	movf	LIN_getFromTable@param,w
 12202  0E65  00CC               	movwf	??_LIN_getFromTable
 12203  0E66  01CD               	clrf	??_LIN_getFromTable+1
 12204                           
 12205                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12206                           ; Switch size 1, requested type "simple"
 12207                           ; Number of cases is 1, Range of values is 0 to 0
 12208                           ; switch strategies available:
 12209                           ; Name         Instructions Cycles
 12210                           ; simple_byte            4     3 (average)
 12211                           ; direct_byte            8     6 (fixed)
 12212                           ; jumptable            260     6 (fixed)
 12213                           ;	Chosen strategy is simple_byte
 12214  0E67  084D               	movf	??_LIN_getFromTable+1,w
 12215  0E68  3A00               	xorlw	0	; case 0
 12216  0E69  1903               	skipnz
 12217  0E6A  2E6C               	goto	l5492
 12218  0E6B  2E3D               	goto	l4616
 12219  0E6C                     l5492:
 12220                           
 12221                           ; Switch size 1, requested type "simple"
 12222                           ; Number of cases is 3, Range of values is 0 to 2
 12223                           ; switch strategies available:
 12224                           ; Name         Instructions Cycles
 12225                           ; simple_byte           10     6 (average)
 12226                           ; direct_byte           12     6 (fixed)
 12227                           ; jumptable            260     6 (fixed)
 12228                           ;	Chosen strategy is simple_byte
 12229  0E6C  084C               	movf	??_LIN_getFromTable,w
 12230  0E6D  3A00               	xorlw	0	; case 0
 12231  0E6E  1903               	skipnz
 12232  0E6F  2E44               	goto	l4624
 12233  0E70  3A01               	xorlw	1	; case 1
 12234  0E71  1903               	skipnz
 12235  0E72  2E4A               	goto	l4628
 12236  0E73  3A03               	xorlw	3	; case 2
 12237  0E74  1903               	skipnz
 12238  0E75  2E57               	goto	l4632
 12239  0E76  2E3D               	goto	l4616
 12240  0E77  0008               	return
 12241  0E78                     __end_of_LIN_getFromTable:
 12242                           
 12243                           	psect	text43
 12244  0EFA                     __ptext43:	
 12245 ;; *************** function _LIN_calcParity *****************
 12246 ;; Defined at:
 12247 ;;		line 252 in file "mcc_generated_files/LINDrivers/lin_slave.c"
 12248 ;; Parameters:    Size  Location     Type
 12249 ;;  CMD             1    wreg     unsigned char 
 12250 ;; Auto vars:     Size  Location     Type
 12251 ;;  CMD             1    1[BANK0 ] unsigned char 
 12252 ;;  PID             1    2[BANK0 ] struct .
 12253 ;; Return value:  Size  Location     Type
 12254 ;;                  1    wreg      unsigned char 
 12255 ;; Registers used:
 12256 ;;		wreg, status,0
 12257 ;; Tracked objects:
 12258 ;;		On entry : 3F/0
 12259 ;;		On exit  : 3F/0
 12260 ;;		Unchanged: 0/0
 12261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12263 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12264 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12265 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12266 ;;Total ram usage:        3 bytes
 12267 ;; Hardware stack levels used: 1
 12268 ;; Hardware stack levels required when called: 5
 12269 ;; This function calls:
 12270 ;;		Nothing
 12271 ;; This function is called by:
 12272 ;;		_LIN_checkPID
 12273 ;; This function uses a non-reentrant model
 12274 ;;
 12275                           
 12276                           
 12277                           ;psect for function _LIN_calcParity
 12278  0EFA                     _LIN_calcParity:
 12279                           
 12280                           ;incstack = 0
 12281                           ; Regs used in _LIN_calcParity: [wreg+status,0]
 12282                           ;LIN_calcParity@CMD stored from wreg
 12283  0EFA  00CC               	movwf	LIN_calcParity@CMD
 12284                           
 12285                           ;mcc_generated_files/LINDrivers/lin_slave.c: 253:     lin_pid_t PID;;mcc_generated_files
      +                          /LINDrivers/lin_slave.c: 254:     PID.rawPID = CMD;
 12286  0EFB  084C               	movf	LIN_calcParity@CMD,w
 12287  0EFC  00CB               	movwf	??_LIN_calcParity
 12288  0EFD  084B               	movf	??_LIN_calcParity,w
 12289  0EFE  00CD               	movwf	LIN_calcParity@PID
 12290                           
 12291                           ;mcc_generated_files/LINDrivers/lin_slave.c: 259:     PID.P0 = PID.ID0 ^ PID.ID1;
 12292  0EFF  1CCD               	btfss	LIN_calcParity@PID,1
 12293  0F00  2F03               	goto	u2410
 12294  0F01  3001               	movlw	1
 12295  0F02  2F04               	goto	u2412
 12296  0F03                     u2410:
 12297  0F03  3000               	movlw	0
 12298  0F04                     u2412:
 12299  0F04  00CB               	movwf	??_LIN_calcParity
 12300  0F05  1C4D               	btfss	LIN_calcParity@PID,0
 12301  0F06  2F09               	goto	u2420
 12302  0F07  3001               	movlw	1
 12303  0F08  2F0A               	goto	u2422
 12304  0F09                     u2420:
 12305  0F09  3000               	movlw	0
 12306  0F0A                     u2422:
 12307  0F0A  064B               	xorwf	??_LIN_calcParity,w
 12308  0F0B  1903               	btfsc	3,2
 12309  0F0C  2F10               	goto	u2430
 12310  0F0D  0140               	movlb	0	; select bank0
 12311  0F0E  174D               	bsf	LIN_calcParity@PID,6
 12312  0F0F  2F12               	goto	u2444
 12313  0F10                     u2430:
 12314  0F10  0140               	movlb	0	; select bank0
 12315  0F11  134D               	bcf	LIN_calcParity@PID,6
 12316  0F12                     u2444:
 12317                           
 12318                           ;mcc_generated_files/LINDrivers/lin_slave.c: 260:     PID.P0 = PID.P0 ^ PID.ID2;
 12319  0F12  1D4D               	btfss	LIN_calcParity@PID,2
 12320  0F13  2F16               	goto	u2450
 12321  0F14  3001               	movlw	1
 12322  0F15  2F17               	goto	u2452
 12323  0F16                     u2450:
 12324  0F16  3000               	movlw	0
 12325  0F17                     u2452:
 12326  0F17  00CB               	movwf	??_LIN_calcParity
 12327  0F18  1F4D               	btfss	LIN_calcParity@PID,6
 12328  0F19  2F1C               	goto	u2460
 12329  0F1A  3001               	movlw	1
 12330  0F1B  2F1D               	goto	u2462
 12331  0F1C                     u2460:
 12332  0F1C  3000               	movlw	0
 12333  0F1D                     u2462:
 12334  0F1D  064B               	xorwf	??_LIN_calcParity,w
 12335  0F1E  1903               	btfsc	3,2
 12336  0F1F  2F23               	goto	u2470
 12337  0F20  0140               	movlb	0	; select bank0
 12338  0F21  174D               	bsf	LIN_calcParity@PID,6
 12339  0F22  2F25               	goto	u2484
 12340  0F23                     u2470:
 12341  0F23  0140               	movlb	0	; select bank0
 12342  0F24  134D               	bcf	LIN_calcParity@PID,6
 12343  0F25                     u2484:
 12344                           
 12345                           ;mcc_generated_files/LINDrivers/lin_slave.c: 261:     PID.P0 = PID.P0 ^ PID.ID4;
 12346  0F25  1E4D               	btfss	LIN_calcParity@PID,4
 12347  0F26  2F29               	goto	u2490
 12348  0F27  3001               	movlw	1
 12349  0F28  2F2A               	goto	u2492
 12350  0F29                     u2490:
 12351  0F29  3000               	movlw	0
 12352  0F2A                     u2492:
 12353  0F2A  00CB               	movwf	??_LIN_calcParity
 12354  0F2B  1F4D               	btfss	LIN_calcParity@PID,6
 12355  0F2C  2F2F               	goto	u2500
 12356  0F2D  3001               	movlw	1
 12357  0F2E  2F30               	goto	u2502
 12358  0F2F                     u2500:
 12359  0F2F  3000               	movlw	0
 12360  0F30                     u2502:
 12361  0F30  064B               	xorwf	??_LIN_calcParity,w
 12362  0F31  1903               	btfsc	3,2
 12363  0F32  2F36               	goto	u2510
 12364  0F33  0140               	movlb	0	; select bank0
 12365  0F34  174D               	bsf	LIN_calcParity@PID,6
 12366  0F35  2F38               	goto	u2524
 12367  0F36                     u2510:
 12368  0F36  0140               	movlb	0	; select bank0
 12369  0F37  134D               	bcf	LIN_calcParity@PID,6
 12370  0F38                     u2524:
 12371                           
 12372                           ;mcc_generated_files/LINDrivers/lin_slave.c: 262:     PID.P1 = PID.ID1 ^ PID.ID3;
 12373  0F38  1DCD               	btfss	LIN_calcParity@PID,3
 12374  0F39  2F3C               	goto	u2530
 12375  0F3A  3001               	movlw	1
 12376  0F3B  2F3D               	goto	u2532
 12377  0F3C                     u2530:
 12378  0F3C  3000               	movlw	0
 12379  0F3D                     u2532:
 12380  0F3D  00CB               	movwf	??_LIN_calcParity
 12381  0F3E  1CCD               	btfss	LIN_calcParity@PID,1
 12382  0F3F  2F42               	goto	u2540
 12383  0F40  3001               	movlw	1
 12384  0F41  2F43               	goto	u2542
 12385  0F42                     u2540:
 12386  0F42  3000               	movlw	0
 12387  0F43                     u2542:
 12388  0F43  064B               	xorwf	??_LIN_calcParity,w
 12389  0F44  1903               	btfsc	3,2
 12390  0F45  2F49               	goto	u2550
 12391  0F46  0140               	movlb	0	; select bank0
 12392  0F47  17CD               	bsf	LIN_calcParity@PID,7
 12393  0F48  2F4B               	goto	u2564
 12394  0F49                     u2550:
 12395  0F49  0140               	movlb	0	; select bank0
 12396  0F4A  13CD               	bcf	LIN_calcParity@PID,7
 12397  0F4B                     u2564:
 12398                           
 12399                           ;mcc_generated_files/LINDrivers/lin_slave.c: 263:     PID.P1 = PID.P1 ^ PID.ID4;
 12400  0F4B  1E4D               	btfss	LIN_calcParity@PID,4
 12401  0F4C  2F4F               	goto	u2570
 12402  0F4D  3001               	movlw	1
 12403  0F4E  2F50               	goto	u2572
 12404  0F4F                     u2570:
 12405  0F4F  3000               	movlw	0
 12406  0F50                     u2572:
 12407  0F50  00CB               	movwf	??_LIN_calcParity
 12408  0F51  1FCD               	btfss	LIN_calcParity@PID,7
 12409  0F52  2F55               	goto	u2580
 12410  0F53  3001               	movlw	1
 12411  0F54  2F56               	goto	u2582
 12412  0F55                     u2580:
 12413  0F55  3000               	movlw	0
 12414  0F56                     u2582:
 12415  0F56  064B               	xorwf	??_LIN_calcParity,w
 12416  0F57  1903               	btfsc	3,2
 12417  0F58  2F5C               	goto	u2590
 12418  0F59  0140               	movlb	0	; select bank0
 12419  0F5A  17CD               	bsf	LIN_calcParity@PID,7
 12420  0F5B  2F5E               	goto	u2604
 12421  0F5C                     u2590:
 12422  0F5C  0140               	movlb	0	; select bank0
 12423  0F5D  13CD               	bcf	LIN_calcParity@PID,7
 12424  0F5E                     u2604:
 12425                           
 12426                           ;mcc_generated_files/LINDrivers/lin_slave.c: 264:     PID.P1 = PID.P1 ^ PID.ID5;
 12427  0F5E  1ECD               	btfss	LIN_calcParity@PID,5
 12428  0F5F  2F62               	goto	u2610
 12429  0F60  3001               	movlw	1
 12430  0F61  2F63               	goto	u2612
 12431  0F62                     u2610:
 12432  0F62  3000               	movlw	0
 12433  0F63                     u2612:
 12434  0F63  00CB               	movwf	??_LIN_calcParity
 12435  0F64  1FCD               	btfss	LIN_calcParity@PID,7
 12436  0F65  2F68               	goto	u2620
 12437  0F66  3001               	movlw	1
 12438  0F67  2F69               	goto	u2622
 12439  0F68                     u2620:
 12440  0F68  3000               	movlw	0
 12441  0F69                     u2622:
 12442  0F69  064B               	xorwf	??_LIN_calcParity,w
 12443  0F6A  1903               	btfsc	3,2
 12444  0F6B  2F6F               	goto	u2630
 12445  0F6C  0140               	movlb	0	; select bank0
 12446  0F6D  17CD               	bsf	LIN_calcParity@PID,7
 12447  0F6E  2F71               	goto	l4650
 12448  0F6F                     u2630:
 12449  0F6F  0140               	movlb	0	; select bank0
 12450  0F70  13CD               	bcf	LIN_calcParity@PID,7
 12451  0F71                     l4650:
 12452                           
 12453                           ;mcc_generated_files/LINDrivers/lin_slave.c: 265:     PID.P1 = ~PID.P1;
 12454  0F71  1003               	clrc
 12455  0F72  1FCD               	btfss	LIN_calcParity@PID,7
 12456  0F73  1403               	setc
 12457  0F74  1C03               	btfss	3,0
 12458  0F75  2F79               	goto	u2650
 12459  0F76  0140               	movlb	0	; select bank0
 12460  0F77  17CD               	bsf	LIN_calcParity@PID,7
 12461  0F78  2F7B               	goto	l4652
 12462  0F79                     u2650:
 12463  0F79  0140               	movlb	0	; select bank0
 12464  0F7A  13CD               	bcf	LIN_calcParity@PID,7
 12465  0F7B                     l4652:
 12466                           
 12467                           ;mcc_generated_files/LINDrivers/lin_slave.c: 267:     return PID.rawPID;
 12468  0F7B  084D               	movf	LIN_calcParity@PID,w
 12469  0F7C  0008               	return
 12470  0F7D                     __end_of_LIN_calcParity:
 12471                           
 12472                           	psect	text44
 12473  08D8                     __ptext44:	
 12474 ;; *************** function _LIN_breakCheck *****************
 12475 ;; Defined at:
 12476 ;;		line 321 in file "mcc_generated_files/LINDrivers/lin_slave.c"
 12477 ;; Parameters:    Size  Location     Type
 12478 ;;		None
 12479 ;; Auto vars:     Size  Location     Type
 12480 ;;		None
 12481 ;; Return value:  Size  Location     Type
 12482 ;;                  1    wreg      _Bool 
 12483 ;; Registers used:
 12484 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12485 ;; Tracked objects:
 12486 ;;		On entry : 3F/0
 12487 ;;		On exit  : 3F/0
 12488 ;;		Unchanged: 0/0
 12489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12493 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12494 ;;Total ram usage:        0 bytes
 12495 ;; Hardware stack levels used: 1
 12496 ;; Hardware stack levels required when called: 6
 12497 ;; This function calls:
 12498 ;;		_EUSART1_Read
 12499 ;;		_EUSART1_get_last_status
 12500 ;; This function is called by:
 12501 ;;		_LIN_handler
 12502 ;; This function uses a non-reentrant model
 12503 ;;
 12504                           
 12505                           
 12506                           ;psect for function _LIN_breakCheck
 12507  08D8                     _LIN_breakCheck:
 12508                           
 12509                           ;mcc_generated_files/LINDrivers/lin_slave.c: 323:     if((EUSART1_Read() == 0x00) && (EU
      +                          SART1_get_last_status().ferr == 1)){
 12510                           
 12511                           ;incstack = 0
 12512                           ; Regs used in _LIN_breakCheck: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12513  08D8  318A  22BB  3188   	fcall	_EUSART1_Read
 12514  08DB  3A00               	xorlw	0
 12515  08DC  1D03               	skipz
 12516  08DD  28E5               	goto	l4832
 12517  08DE  3180  2002  3188   	fcall	_EUSART1_get_last_status
 12518  08E1  1C89               	btfss	9,1
 12519  08E2  28E5               	goto	l4832
 12520                           
 12521                           ;mcc_generated_files/LINDrivers/lin_slave.c: 324:         return 1;
 12522  08E3  3001               	movlw	1
 12523  08E4  0008               	return
 12524  08E5                     l4832:
 12525                           
 12526                           ;mcc_generated_files/LINDrivers/lin_slave.c: 327:     return 0;
 12527  08E5  3000               	movlw	0
 12528  08E6  0008               	return
 12529  08E7                     __end_of_LIN_breakCheck:
 12530                           
 12531                           	psect	text45
 12532  0002                     __ptext45:	
 12533 ;; *************** function _EUSART1_get_last_status *****************
 12534 ;; Defined at:
 12535 ;;		line 147 in file "mcc_generated_files/eusart1.c"
 12536 ;; Parameters:    Size  Location     Type
 12537 ;;		None
 12538 ;; Auto vars:     Size  Location     Type
 12539 ;;		None
 12540 ;; Return value:  Size  Location     Type
 12541 ;;                  1    wreg      struct .
 12542 ;; Registers used:
 12543 ;;		wreg
 12544 ;; Tracked objects:
 12545 ;;		On entry : 3F/0
 12546 ;;		On exit  : 3F/0
 12547 ;;		Unchanged: 0/0
 12548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12552 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12553 ;;Total ram usage:        0 bytes
 12554 ;; Hardware stack levels used: 1
 12555 ;; Hardware stack levels required when called: 5
 12556 ;; This function calls:
 12557 ;;		Nothing
 12558 ;; This function is called by:
 12559 ;;		_LIN_breakCheck
 12560 ;; This function uses a non-reentrant model
 12561 ;;
 12562                           
 12563                           
 12564                           ;psect for function _EUSART1_get_last_status
 12565  0002                     _EUSART1_get_last_status:
 12566                           
 12567                           ;mcc_generated_files/eusart1.c: 148:     return eusart1RxLastError;
 12568                           
 12569                           ;incstack = 0
 12570                           ; Regs used in _EUSART1_get_last_status: [wreg]
 12571  0002  0822               	movf	_eusart1RxLastError,w	;volatile
 12572  0003  0008               	return
 12573  0004                     __end_of_EUSART1_get_last_status:
 12574                           
 12575                           	psect	text46
 12576  0ABB                     __ptext46:	
 12577 ;; *************** function _EUSART1_Read *****************
 12578 ;; Defined at:
 12579 ;;		line 151 in file "mcc_generated_files/eusart1.c"
 12580 ;; Parameters:    Size  Location     Type
 12581 ;;		None
 12582 ;; Auto vars:     Size  Location     Type
 12583 ;;  readValue       1    1[BANK0 ] unsigned char 
 12584 ;; Return value:  Size  Location     Type
 12585 ;;                  1    wreg      unsigned char 
 12586 ;; Registers used:
 12587 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12588 ;; Tracked objects:
 12589 ;;		On entry : 3F/0
 12590 ;;		On exit  : 3F/0
 12591 ;;		Unchanged: 0/0
 12592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12594 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12595 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12596 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12597 ;;Total ram usage:        2 bytes
 12598 ;; Hardware stack levels used: 1
 12599 ;; Hardware stack levels required when called: 5
 12600 ;; This function calls:
 12601 ;;		Nothing
 12602 ;; This function is called by:
 12603 ;;		_LIN_handler
 12604 ;;		_LIN_breakCheck
 12605 ;; This function uses a non-reentrant model
 12606 ;;
 12607                           
 12608                           
 12609                           ;psect for function _EUSART1_Read
 12610  0ABB                     _EUSART1_Read:
 12611  0ABB                     l4584:	
 12612                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
 12613                           
 12614                           ;incstack = 0
 12615                           ; Regs used in _EUSART1_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
 12616                           
 12617                           
 12618                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
 12619  0ABB  0823               	movf	_eusart1RxCount,w	;volatile
 12620  0ABC  1903               	btfsc	3,2
 12621  0ABD  2ABB               	goto	l4584
 12622                           
 12623                           ;mcc_generated_files/eusart1.c: 159:     eusart1RxLastError = eusart1RxStatusBuffer[eusa
      +                          rt1RxTail];
 12624  0ABE  0870               	movf	_eusart1RxTail,w	;volatile
 12625  0ABF  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 12626  0AC0  0086               	movwf	6
 12627  0AC1  3001               	movlw	1	; select bank2/3
 12628  0AC2  0087               	movwf	7
 12629  0AC3  0801               	movf	1,w
 12630  0AC4  00CB               	movwf	??_EUSART1_Read
 12631  0AC5  084B               	movf	??_EUSART1_Read,w
 12632  0AC6  00A2               	movwf	_eusart1RxLastError	;volatile
 12633                           
 12634                           ;mcc_generated_files/eusart1.c: 161:     readValue = eusart1RxBuffer[eusart1RxTail++];
 12635  0AC7  0870               	movf	_eusart1RxTail,w
 12636  0AC8  3E28               	addlw	(low (_eusart1RxBuffer| (0+256)))& (0+255)
 12637  0AC9  0086               	movwf	6
 12638  0ACA  3001               	movlw	1	; select bank2/3
 12639  0ACB  0087               	movwf	7
 12640  0ACC  0801               	movf	1,w
 12641  0ACD  00CB               	movwf	??_EUSART1_Read
 12642  0ACE  084B               	movf	??_EUSART1_Read,w
 12643  0ACF  00CC               	movwf	EUSART1_Read@readValue
 12644  0AD0  3001               	movlw	1
 12645  0AD1  00CB               	movwf	??_EUSART1_Read
 12646  0AD2  084B               	movf	??_EUSART1_Read,w
 12647  0AD3  07F0               	addwf	_eusart1RxTail,f	;volatile
 12648                           
 12649                           ;mcc_generated_files/eusart1.c: 162:     if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
 12650  0AD4  3008               	movlw	8
 12651  0AD5  0270               	subwf	_eusart1RxTail,w
 12652  0AD6  1803               	btfsc	3,0
 12653                           
 12654                           ;mcc_generated_files/eusart1.c: 163:     {;mcc_generated_files/eusart1.c: 164:         e
      +                          usart1RxTail = 0;
 12655  0AD7  01F0               	clrf	_eusart1RxTail	;volatile
 12656                           
 12657                           ;mcc_generated_files/eusart1.c: 166:     PIE3bits.RC1IE = 0;
 12658  0AD8  014E               	movlb	14	; select bank14
 12659  0AD9  1299               	bcf	25,5	;volatile
 12660                           
 12661                           ;mcc_generated_files/eusart1.c: 167:     eusart1RxCount--;
 12662  0ADA  3001               	movlw	1
 12663  0ADB  0140               	movlb	0	; select bank0
 12664  0ADC  02A3               	subwf	_eusart1RxCount,f	;volatile
 12665                           
 12666                           ;mcc_generated_files/eusart1.c: 168:     PIE3bits.RC1IE = 1;
 12667  0ADD  014E               	movlb	14	; select bank14
 12668  0ADE  1699               	bsf	25,5	;volatile
 12669                           
 12670                           ;mcc_generated_files/eusart1.c: 170:     return readValue;
 12671  0ADF  0140               	movlb	0	; select bank0
 12672  0AE0  084C               	movf	EUSART1_Read@readValue,w
 12673  0AE1  0008               	return
 12674  0AE2                     __end_of_EUSART1_Read:
 12675                           
 12676                           	psect	text47
 12677  178D                     __ptext47:	
 12678 ;; *************** function _EUSART1_is_rx_ready *****************
 12679 ;; Defined at:
 12680 ;;		line 137 in file "mcc_generated_files/eusart1.c"
 12681 ;; Parameters:    Size  Location     Type
 12682 ;;		None
 12683 ;; Auto vars:     Size  Location     Type
 12684 ;;		None
 12685 ;; Return value:  Size  Location     Type
 12686 ;;                  1    wreg      _Bool 
 12687 ;; Registers used:
 12688 ;;		wreg, status,2, status,0
 12689 ;; Tracked objects:
 12690 ;;		On entry : 3C/2
 12691 ;;		On exit  : 3F/0
 12692 ;;		Unchanged: 0/0
 12693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12698 ;;Total ram usage:        0 bytes
 12699 ;; Hardware stack levels used: 1
 12700 ;; Hardware stack levels required when called: 5
 12701 ;; This function calls:
 12702 ;;		Nothing
 12703 ;; This function is called by:
 12704 ;;		_LIN_handler
 12705 ;; This function uses a non-reentrant model
 12706 ;;
 12707                           
 12708                           
 12709                           ;psect for function _EUSART1_is_rx_ready
 12710  178D                     _EUSART1_is_rx_ready:
 12711                           
 12712                           ;mcc_generated_files/eusart1.c: 139:     return (eusart1RxCount ? 1 : 0);
 12713                           
 12714                           ;incstack = 0
 12715                           ; Regs used in _EUSART1_is_rx_ready: [wreg+status,2+status,0]
 12716  178D  0140               	movlb	0	; select bank0
 12717  178E  0823               	movf	_eusart1RxCount,w	;volatile
 12718  178F  1903               	btfsc	3,2
 12719  1790  2F93               	goto	u2830
 12720  1791  3001               	movlw	1
 12721  1792  0008               	return
 12722  1793                     u2830:
 12723  1793  3000               	movlw	0
 12724  1794  0008               	return
 12725  1795                     __end_of_EUSART1_is_rx_ready:
 12726                           
 12727                           	psect	text48
 12728  0E78                     __ptext48:	
 12729 ;; *************** function _EFuse *****************
 12730 ;; Defined at:
 12731 ;;		line 271 in file "efuse.c"
 12732 ;; Parameters:    Size  Location     Type
 12733 ;;		None
 12734 ;; Auto vars:     Size  Location     Type
 12735 ;;		None
 12736 ;; Return value:  Size  Location     Type
 12737 ;;                  1    wreg      void 
 12738 ;; Registers used:
 12739 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12740 ;; Tracked objects:
 12741 ;;		On entry : 0/0
 12742 ;;		On exit  : 3C/0
 12743 ;;		Unchanged: 0/0
 12744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12747 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12748 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12749 ;;Total ram usage:        1 bytes
 12750 ;; Hardware stack levels used: 1
 12751 ;; Hardware stack levels required when called: 7
 12752 ;; This function calls:
 12753 ;;		_CmdOutput
 12754 ;;		_GetAmbientTemperature
 12755 ;;		_TCC_Curve
 12756 ;;		_Update_LIN_Data
 12757 ;; This function is called by:
 12758 ;;		_main
 12759 ;; This function uses a non-reentrant model
 12760 ;;
 12761                           
 12762                           
 12763                           ;psect for function _EFuse
 12764  0E78                     _EFuse:
 12765                           
 12766                           ;efuse.c: 274:     if(PIR4bits.TMR1IF && (outputState == OUTPUT_ON))
 12767                           
 12768                           ;incstack = 0
 12769                           ; Regs used in _EFuse: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12770  0E78  014E               	movlb	14	; select bank14
 12771  0E79  1C10               	btfss	16,0	;volatile
 12772  0E7A  2E89               	goto	l5372
 12773  0E7B  0140               	movlb	0	; select bank0
 12774  0E7C  032C               	decf	_outputState,w
 12775  0E7D  1D03               	btfss	3,2
 12776  0E7E  2E89               	goto	l5372
 12777                           
 12778                           ;efuse.c: 275:     {;efuse.c: 276:        overCurrentFault = SHORT_CIRCUIT;
 12779  0E7F  3003               	movlw	3
 12780  0E80  00E5               	movwf	??_EFuse
 12781  0E81  0865               	movf	??_EFuse,w
 12782  0E82  00AB               	movwf	_overCurrentFault
 12783                           
 12784                           ;efuse.c: 277:        CmdOutput(OUTPUT_OFF);
 12785  0E83  3000               	movlw	0
 12786  0E84  318D  25B1  318E   	fcall	_CmdOutput
 12787                           
 12788                           ;efuse.c: 278:        PIR4bits.TMR1IF = 0;
 12789  0E87  014E               	movlb	14	; select bank14
 12790  0E88  1010               	bcf	16,0	;volatile
 12791  0E89                     l5372:
 12792                           
 12793                           ;efuse.c: 281:     if(ticks_1ms >= tcc_sample_time)
 12794  0E89  0141               	movlb	1	; select bank1
 12795  0E8A  0862               	movf	(_tcc_sample_time+1)^(0+128),w
 12796  0E8B  0235               	subwf	(_ticks_1ms+1)^(0+128),w
 12797  0E8C  1D03               	skipz
 12798  0E8D  2E90               	goto	u3345
 12799  0E8E  0861               	movf	_tcc_sample_time^(0+128),w
 12800  0E8F  0234               	subwf	_ticks_1ms^(0+128),w
 12801  0E90                     u3345:
 12802  0E90  1C03               	skipc
 12803  0E91  0008               	return
 12804                           
 12805                           ;efuse.c: 282:     {;efuse.c: 283:         ticks_1ms = 0;
 12806  0E92  01B4               	clrf	_ticks_1ms^(0+128)
 12807  0E93  01B5               	clrf	(_ticks_1ms+1)^(0+128)
 12808                           
 12809                           ;efuse.c: 286:         if(CLCDATAbits.MLC4OUT && (outputState == OUTPUT_ON))
 12810  0E94  017C               	movlb	60	; select bank60
 12811  0E95  1D8F               	btfss	15,3	;volatile
 12812  0E96  2EA6               	goto	l5386
 12813  0E97  0140               	movlb	0	; select bank0
 12814  0E98  032C               	decf	_outputState,w
 12815  0E99  1D03               	btfss	3,2
 12816  0E9A  2EA6               	goto	l5386
 12817                           
 12818                           ;efuse.c: 287:         {;efuse.c: 289:             CLC3GLS1 = 0x00;
 12819  0E9B  017C               	movlb	60	; select bank60
 12820  0E9C  01AB               	clrf	43	;volatile
 12821                           
 12822                           ;efuse.c: 290:             T2TMR = 0x00;
 12823  0E9D  0145               	movlb	5	; select bank5
 12824  0E9E  018C               	clrf	12	;volatile
 12825                           
 12826                           ;efuse.c: 291:             CLC3POL = 0x00;
 12827  0E9F  017C               	movlb	60	; select bank60
 12828  0EA0  01A5               	clrf	37	;volatile
 12829                           
 12830                           ;efuse.c: 292:             CLC3POL = 0x03;
 12831  0EA1  3003               	movlw	3
 12832  0EA2  00A5               	movwf	37	;volatile
 12833                           
 12834                           ;efuse.c: 293:             CLC3POL = 0x00;
 12835  0EA3  01A5               	clrf	37	;volatile
 12836                           
 12837                           ;efuse.c: 294:             CLC3GLS1 = 0x08;
 12838  0EA4  3008               	movlw	8
 12839  0EA5  00AB               	movwf	43	;volatile
 12840  0EA6                     l5386:
 12841                           
 12842                           ;efuse.c: 296:         Tambient=GetAmbientTemperature();
 12843  0EA6  318C  24B5  318E   	fcall	_GetAmbientTemperature
 12844  0EA9  084C               	movf	?_GetAmbientTemperature+1,w
 12845  0EAA  00ED               	movwf	_Tambient+1
 12846  0EAB  084B               	movf	?_GetAmbientTemperature,w
 12847  0EAC  00EC               	movwf	_Tambient
 12848                           
 12849                           ;efuse.c: 297:         if(Tambient >= 115)
 12850  0EAD  086D               	movf	_Tambient+1,w
 12851  0EAE  3A80               	xorlw	128
 12852  0EAF  00E5               	movwf	??_EFuse
 12853  0EB0  3080               	movlw	128
 12854  0EB1  0265               	subwf	??_EFuse,w
 12855  0EB2  1D03               	skipz
 12856  0EB3  2EB6               	goto	u3375
 12857  0EB4  3073               	movlw	115
 12858  0EB5  026C               	subwf	_Tambient,w
 12859  0EB6                     u3375:
 12860  0EB6  1C03               	skipc
 12861  0EB7  2EC0               	goto	l5396
 12862                           
 12863                           ;efuse.c: 298:         {;efuse.c: 299:             Tambient = 115;
 12864  0EB8  3073               	movlw	115
 12865  0EB9  0140               	movlb	0	; select bank0
 12866  0EBA  00EC               	movwf	_Tambient
 12867  0EBB  3000               	movlw	0
 12868  0EBC  00ED               	movwf	_Tambient+1
 12869                           
 12870                           ;efuse.c: 300:             overTempFault = TEMP_FAULT;
 12871  0EBD  01A9               	clrf	_overTempFault
 12872  0EBE  0AA9               	incf	_overTempFault,f
 12873  0EBF  2EF3               	goto	l5410
 12874  0EC0                     l5396:	
 12875                           ;efuse.c: 302:         }
 12876                           
 12877                           ;efuse.c: 301:             CmdOutput(OUTPUT_OFF);
 12878                           
 12879                           
 12880                           ;efuse.c: 304:         {;efuse.c: 305:             if((adcISense_curr >= iSenseOffset) &
      +                          & (iSenseOffset < 10))
 12881  0EC0  0140               	movlb	0	; select bank0
 12882  0EC1  0838               	movf	_iSenseOffset+1,w
 12883  0EC2  023C               	subwf	_adcISense_curr+1,w
 12884  0EC3  1D03               	skipz
 12885  0EC4  2EC7               	goto	u3385
 12886  0EC5  0837               	movf	_iSenseOffset,w
 12887  0EC6  023B               	subwf	_adcISense_curr,w
 12888  0EC7                     u3385:
 12889  0EC7  1C03               	skipc
 12890  0EC8  2ED7               	goto	l5402
 12891  0EC9  3000               	movlw	0
 12892  0ECA  0238               	subwf	_iSenseOffset+1,w
 12893  0ECB  300A               	movlw	10
 12894  0ECC  1903               	skipnz
 12895  0ECD  0237               	subwf	_iSenseOffset,w
 12896  0ECE  1803               	skipnc
 12897  0ECF  2ED7               	goto	l5402
 12898                           
 12899                           ;efuse.c: 306:             {;efuse.c: 307:                 adcISense_corr = adcISense_cu
      +                          rr - iSenseOffset;
 12900  0ED0  0837               	movf	_iSenseOffset,w
 12901  0ED1  023B               	subwf	_adcISense_curr,w
 12902  0ED2  00B9               	movwf	_adcISense_corr
 12903  0ED3  0838               	movf	_iSenseOffset+1,w
 12904  0ED4  3B3C               	subwfb	_adcISense_curr+1,w
 12905  0ED5  00BA               	movwf	_adcISense_corr+1
 12906                           
 12907                           ;efuse.c: 308:             }
 12908  0ED6  2EDB               	goto	l1466
 12909  0ED7                     l5402:
 12910                           
 12911                           ;efuse.c: 310:             {;efuse.c: 311:                 adcISense_corr = adcISense_cu
      +                          rr;
 12912  0ED7  083C               	movf	_adcISense_curr+1,w
 12913  0ED8  00BA               	movwf	_adcISense_corr+1
 12914  0ED9  083B               	movf	_adcISense_curr,w
 12915  0EDA  00B9               	movwf	_adcISense_corr
 12916  0EDB                     l1466:	
 12917                           ;efuse.c: 312:             }
 12918                           
 12919                           
 12920                           ;efuse.c: 313:             adcISense_OneMOSFET = adcISense_corr / 1;
 12921  0EDB  083A               	movf	_adcISense_corr+1,w
 12922  0EDC  0141               	movlb	1	; select bank1
 12923  0EDD  00AF               	movwf	(_adcISense_OneMOSFET+1)^(0+128)
 12924  0EDE  0140               	movlb	0	; select bank0
 12925  0EDF  0839               	movf	_adcISense_corr,w
 12926  0EE0  0141               	movlb	1	; select bank1
 12927  0EE1  00AE               	movwf	_adcISense_OneMOSFET^(0+128)
 12928                           
 12929                           ;efuse.c: 314:             TCC_Curve();
 12930  0EE2  3180  2067  318E   	fcall	_TCC_Curve
 12931                           
 12932                           ;efuse.c: 315:             if(Tjunction >= tj_limit)
 12933  0EE5  0834               	movf	_Tjunction+1,w
 12934  0EE6  3A80               	xorlw	128
 12935  0EE7  00E5               	movwf	??_EFuse
 12936  0EE8  3080               	movlw	128
 12937  0EE9  0265               	subwf	??_EFuse,w
 12938  0EEA  1D03               	skipz
 12939  0EEB  2EEE               	goto	u3405
 12940  0EEC  086B               	movf	_tj_limit,w
 12941  0EED  0233               	subwf	_Tjunction,w
 12942  0EEE                     u3405:
 12943  0EEE  1C03               	skipc
 12944  0EEF  2EF7               	goto	l1464
 12945                           
 12946                           ;efuse.c: 316:             {;efuse.c: 317:                 overCurrentFault = SLOW_OVER_
      +                          CURRENT_FAULT;
 12947  0EF0  0140               	movlb	0	; select bank0
 12948  0EF1  01AB               	clrf	_overCurrentFault
 12949  0EF2  0AAB               	incf	_overCurrentFault,f
 12950  0EF3                     l5410:
 12951                           
 12952                           ;efuse.c: 318:                 CmdOutput(OUTPUT_OFF);
 12953  0EF3  3000               	movlw	0
 12954  0EF4  318D  25B1  318E   	fcall	_CmdOutput
 12955  0EF7                     l1464:	
 12956                           ;efuse.c: 320:         }
 12957                           
 12958                           
 12959                           ;efuse.c: 321:         Update_LIN_Data();
 12960  0EF7  3185  25D8         	fcall	_Update_LIN_Data
 12961  0EF9  0008               	return
 12962  0EFA                     __end_of_EFuse:
 12963                           
 12964                           	psect	text49
 12965  05D8                     __ptext49:	
 12966 ;; *************** function _Update_LIN_Data *****************
 12967 ;; Defined at:
 12968 ;;		line 133 in file "mcc_generated_files/LINDrivers/lin_app.c"
 12969 ;; Parameters:    Size  Location     Type
 12970 ;;		None
 12971 ;; Auto vars:     Size  Location     Type
 12972 ;;		None
 12973 ;; Return value:  Size  Location     Type
 12974 ;;                  1    wreg      void 
 12975 ;; Registers used:
 12976 ;;		wreg, status,2
 12977 ;; Tracked objects:
 12978 ;;		On entry : 0/0
 12979 ;;		On exit  : 3F/2
 12980 ;;		Unchanged: 0/0
 12981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12984 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12985 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12986 ;;Total ram usage:        1 bytes
 12987 ;; Hardware stack levels used: 1
 12988 ;; Hardware stack levels required when called: 5
 12989 ;; This function calls:
 12990 ;;		Nothing
 12991 ;; This function is called by:
 12992 ;;		_EFuse
 12993 ;; This function uses a non-reentrant model
 12994 ;;
 12995                           
 12996                           
 12997                           ;psect for function _Update_LIN_Data
 12998  05D8                     _Update_LIN_Data:
 12999                           
 13000                           ;mcc_generated_files/LINDrivers/lin_app.c: 135:             LIN_OUTPUT_STATE_Data[0] = o
      +                          utputState;
 13001                           
 13002                           ;incstack = 0
 13003                           ; Regs used in _Update_LIN_Data: [wreg+status,2]
 13004  05D8  0140               	movlb	0	; select bank0
 13005  05D9  082C               	movf	_outputState,w
 13006  05DA  00CB               	movwf	??_Update_LIN_Data
 13007  05DB  084B               	movf	??_Update_LIN_Data,w
 13008  05DC  00C3               	movwf	_LIN_OUTPUT_STATE_Data
 13009                           
 13010                           ;mcc_generated_files/LINDrivers/lin_app.c: 137:             LIN_GET_TRIGGER_TYPE_Data[0]
      +                           = triggerType;
 13011  05DD  082E               	movf	_triggerType,w
 13012  05DE  00CB               	movwf	??_Update_LIN_Data
 13013  05DF  084B               	movf	??_Update_LIN_Data,w
 13014  05E0  00C2               	movwf	_LIN_GET_TRIGGER_TYPE_Data
 13015                           
 13016                           ;mcc_generated_files/LINDrivers/lin_app.c: 139:             LIN_OVER_CURRENT_FAULT_Data[
      +                          0] = overCurrentFault;
 13017  05E1  082B               	movf	_overCurrentFault,w
 13018  05E2  00CB               	movwf	??_Update_LIN_Data
 13019  05E3  084B               	movf	??_Update_LIN_Data,w
 13020  05E4  00C1               	movwf	_LIN_OVER_CURRENT_FAULT_Data
 13021                           
 13022                           ;mcc_generated_files/LINDrivers/lin_app.c: 141:             LIN_UVLO_FAULT_Data[0] = uvl
      +                          oFault;
 13023  05E5  082A               	movf	_uvloFault,w
 13024  05E6  00CB               	movwf	??_Update_LIN_Data
 13025  05E7  084B               	movf	??_Update_LIN_Data,w
 13026  05E8  00C0               	movwf	_LIN_UVLO_FAULT_Data
 13027                           
 13028                           ;mcc_generated_files/LINDrivers/lin_app.c: 143:             LIN_OVER_TEMP_FAULT_Data[0] 
      +                          = overTempFault;
 13029  05E9  0829               	movf	_overTempFault,w
 13030  05EA  00CB               	movwf	??_Update_LIN_Data
 13031  05EB  084B               	movf	??_Update_LIN_Data,w
 13032  05EC  00BF               	movwf	_LIN_OVER_TEMP_FAULT_Data
 13033                           
 13034                           ;mcc_generated_files/LINDrivers/lin_app.c: 145:             LIN_ADC_VCC_SENSE_Data[0] = 
      +                          0xff & adcVccSense_curr;
 13035  05ED  083D               	movf	_adcVccSense_curr,w
 13036  05EE  00CB               	movwf	??_Update_LIN_Data
 13037  05EF  084B               	movf	??_Update_LIN_Data,w
 13038  05F0  0141               	movlb	1	; select bank1
 13039  05F1  00D5               	movwf	_LIN_ADC_VCC_SENSE_Data^(0+128)
 13040                           
 13041                           ;mcc_generated_files/LINDrivers/lin_app.c: 146:             LIN_ADC_VCC_SENSE_Data[1] = 
      +                          0xff & (adcVccSense_curr >> 8);
 13042  05F2  0140               	movlb	0	; select bank0
 13043  05F3  083E               	movf	_adcVccSense_curr+1,w
 13044  05F4  00CB               	movwf	??_Update_LIN_Data
 13045  05F5  084B               	movf	??_Update_LIN_Data,w
 13046  05F6  0141               	movlb	1	; select bank1
 13047  05F7  00D6               	movwf	(_LIN_ADC_VCC_SENSE_Data^(0+128)+1)
 13048                           
 13049                           ;mcc_generated_files/LINDrivers/lin_app.c: 148:             LIN_ADC_CURRENT_SENSE_UNCORR
      +                          ECTED_Data[0] = 0xff & adcISense_curr;
 13050  05F8  0140               	movlb	0	; select bank0
 13051  05F9  083B               	movf	_adcISense_curr,w
 13052  05FA  00CB               	movwf	??_Update_LIN_Data
 13053  05FB  084B               	movf	??_Update_LIN_Data,w
 13054  05FC  0141               	movlb	1	; select bank1
 13055  05FD  00D3               	movwf	_LIN_ADC_CURRENT_SENSE_UNCORRECTED_Data^(0+128)
 13056                           
 13057                           ;mcc_generated_files/LINDrivers/lin_app.c: 149:             LIN_ADC_CURRENT_SENSE_UNCORR
      +                          ECTED_Data[1] = 0xff & (adcISense_curr >> 8);
 13058  05FE  0140               	movlb	0	; select bank0
 13059  05FF  083C               	movf	_adcISense_curr+1,w
 13060  0600  00CB               	movwf	??_Update_LIN_Data
 13061  0601  084B               	movf	??_Update_LIN_Data,w
 13062  0602  0141               	movlb	1	; select bank1
 13063  0603  00D4               	movwf	(_LIN_ADC_CURRENT_SENSE_UNCORRECTED_Data^(0+128)+1)
 13064                           
 13065                           ;mcc_generated_files/LINDrivers/lin_app.c: 151:             LIN_ADC_TEMP_SENSE_Data[0] =
      +                           0xff & adcTSense_curr;
 13066  0604  0874               	movf	_adcTSense_curr,w
 13067  0605  0140               	movlb	0	; select bank0
 13068  0606  00CB               	movwf	??_Update_LIN_Data
 13069  0607  084B               	movf	??_Update_LIN_Data,w
 13070  0608  0141               	movlb	1	; select bank1
 13071  0609  00D1               	movwf	_LIN_ADC_TEMP_SENSE_Data^(0+128)
 13072                           
 13073                           ;mcc_generated_files/LINDrivers/lin_app.c: 152:             LIN_ADC_TEMP_SENSE_Data[1] =
      +                           0xff & (adcTSense_curr >> 8);
 13074  060A  0875               	movf	_adcTSense_curr+1,w
 13075  060B  0140               	movlb	0	; select bank0
 13076  060C  00CB               	movwf	??_Update_LIN_Data
 13077  060D  084B               	movf	??_Update_LIN_Data,w
 13078  060E  0141               	movlb	1	; select bank1
 13079  060F  00D2               	movwf	(_LIN_ADC_TEMP_SENSE_Data^(0+128)+1)
 13080                           
 13081                           ;mcc_generated_files/LINDrivers/lin_app.c: 154:             LIN_ADC_CURRENT_SENSE_CORREC
      +                          TED_Data[0] = 0xff & adcISense_corr;
 13082  0610  0140               	movlb	0	; select bank0
 13083  0611  0839               	movf	_adcISense_corr,w
 13084  0612  00CB               	movwf	??_Update_LIN_Data
 13085  0613  084B               	movf	??_Update_LIN_Data,w
 13086  0614  0141               	movlb	1	; select bank1
 13087  0615  00CF               	movwf	_LIN_ADC_CURRENT_SENSE_CORRECTED_Data^(0+128)
 13088                           
 13089                           ;mcc_generated_files/LINDrivers/lin_app.c: 155:             LIN_ADC_CURRENT_SENSE_CORREC
      +                          TED_Data[1] = 0xff & (adcISense_corr >> 8);
 13090  0616  0140               	movlb	0	; select bank0
 13091  0617  083A               	movf	_adcISense_corr+1,w
 13092  0618  00CB               	movwf	??_Update_LIN_Data
 13093  0619  084B               	movf	??_Update_LIN_Data,w
 13094  061A  0141               	movlb	1	; select bank1
 13095  061B  00D0               	movwf	(_LIN_ADC_CURRENT_SENSE_CORRECTED_Data^(0+128)+1)
 13096                           
 13097                           ;mcc_generated_files/LINDrivers/lin_app.c: 157:             LIN_CURRENT_SENSE_OFFSET_Dat
      +                          a[0] = 0xff & iSenseOffset;
 13098  061C  0140               	movlb	0	; select bank0
 13099  061D  0837               	movf	_iSenseOffset,w
 13100  061E  00CB               	movwf	??_Update_LIN_Data
 13101  061F  084B               	movf	??_Update_LIN_Data,w
 13102  0620  0141               	movlb	1	; select bank1
 13103  0621  00CD               	movwf	_LIN_CURRENT_SENSE_OFFSET_Data^(0+128)
 13104                           
 13105                           ;mcc_generated_files/LINDrivers/lin_app.c: 158:             LIN_CURRENT_SENSE_OFFSET_Dat
      +                          a[1] = 0xff & (iSenseOffset >> 8);
 13106  0622  0140               	movlb	0	; select bank0
 13107  0623  0838               	movf	_iSenseOffset+1,w
 13108  0624  00CB               	movwf	??_Update_LIN_Data
 13109  0625  084B               	movf	??_Update_LIN_Data,w
 13110  0626  0141               	movlb	1	; select bank1
 13111  0627  00CE               	movwf	(_LIN_CURRENT_SENSE_OFFSET_Data^(0+128)+1)
 13112                           
 13113                           ;mcc_generated_files/LINDrivers/lin_app.c: 160:             LIN_AMBIENT_TEMPERATURE_Data
      +                          [0] = 0xff & Tambient;
 13114  0628  0140               	movlb	0	; select bank0
 13115  0629  086C               	movf	_Tambient,w
 13116  062A  00CB               	movwf	??_Update_LIN_Data
 13117  062B  084B               	movf	??_Update_LIN_Data,w
 13118  062C  0141               	movlb	1	; select bank1
 13119  062D  00CB               	movwf	_LIN_AMBIENT_TEMPERATURE_Data^(0+128)
 13120                           
 13121                           ;mcc_generated_files/LINDrivers/lin_app.c: 161:             LIN_AMBIENT_TEMPERATURE_Data
      +                          [1] = 0xff & (Tambient >> 8);
 13122  062E  0140               	movlb	0	; select bank0
 13123  062F  086D               	movf	_Tambient+1,w
 13124  0630  00CB               	movwf	??_Update_LIN_Data
 13125  0631  084B               	movf	??_Update_LIN_Data,w
 13126  0632  0141               	movlb	1	; select bank1
 13127  0633  00CC               	movwf	(_LIN_AMBIENT_TEMPERATURE_Data^(0+128)+1)
 13128                           
 13129                           ;mcc_generated_files/LINDrivers/lin_app.c: 163:             LIN_HEATSINK_TEMPERATURE_Dat
      +                          a[0] = 0xff & Tsink;
 13130  0634  0140               	movlb	0	; select bank0
 13131  0635  0835               	movf	_Tsink,w
 13132  0636  00CB               	movwf	??_Update_LIN_Data
 13133  0637  084B               	movf	??_Update_LIN_Data,w
 13134  0638  0141               	movlb	1	; select bank1
 13135  0639  00C9               	movwf	_LIN_HEATSINK_TEMPERATURE_Data^(0+128)
 13136                           
 13137                           ;mcc_generated_files/LINDrivers/lin_app.c: 164:             LIN_HEATSINK_TEMPERATURE_Dat
      +                          a[1] = 0xff & (Tsink >> 8);
 13138  063A  0140               	movlb	0	; select bank0
 13139  063B  0836               	movf	_Tsink+1,w
 13140  063C  00CB               	movwf	??_Update_LIN_Data
 13141  063D  084B               	movf	??_Update_LIN_Data,w
 13142  063E  0141               	movlb	1	; select bank1
 13143  063F  00CA               	movwf	(_LIN_HEATSINK_TEMPERATURE_Data^(0+128)+1)
 13144                           
 13145                           ;mcc_generated_files/LINDrivers/lin_app.c: 166:             LIN_JUNCTION_TEMPERATURE_Dat
      +                          a[0] = 0xff & Tjunction;
 13146  0640  0140               	movlb	0	; select bank0
 13147  0641  0833               	movf	_Tjunction,w
 13148  0642  00CB               	movwf	??_Update_LIN_Data
 13149  0643  084B               	movf	??_Update_LIN_Data,w
 13150  0644  0141               	movlb	1	; select bank1
 13151  0645  00C7               	movwf	_LIN_JUNCTION_TEMPERATURE_Data^(0+128)
 13152                           
 13153                           ;mcc_generated_files/LINDrivers/lin_app.c: 167:             LIN_JUNCTION_TEMPERATURE_Dat
      +                          a[1] = 0xff & (Tjunction >> 8);
 13154  0646  0140               	movlb	0	; select bank0
 13155  0647  0834               	movf	_Tjunction+1,w
 13156  0648  00CB               	movwf	??_Update_LIN_Data
 13157  0649  084B               	movf	??_Update_LIN_Data,w
 13158  064A  0141               	movlb	1	; select bank1
 13159  064B  00C8               	movwf	(_LIN_JUNCTION_TEMPERATURE_Data^(0+128)+1)
 13160                           
 13161                           ;mcc_generated_files/LINDrivers/lin_app.c: 169:             LIN_TEMPERATURE_RISE_JS_Data
      +                          [0] = 0xff & Trise_js;
 13162  064C  0140               	movlb	0	; select bank0
 13163  064D  0831               	movf	_Trise_js,w
 13164  064E  00CB               	movwf	??_Update_LIN_Data
 13165  064F  084B               	movf	??_Update_LIN_Data,w
 13166  0650  0141               	movlb	1	; select bank1
 13167  0651  00C5               	movwf	_LIN_TEMPERATURE_RISE_JS_Data^(0+128)
 13168                           
 13169                           ;mcc_generated_files/LINDrivers/lin_app.c: 170:             LIN_TEMPERATURE_RISE_JS_Data
      +                          [1] = 0xff & (Trise_js >> 8);
 13170  0652  0140               	movlb	0	; select bank0
 13171  0653  0832               	movf	_Trise_js+1,w
 13172  0654  00CB               	movwf	??_Update_LIN_Data
 13173  0655  084B               	movf	??_Update_LIN_Data,w
 13174  0656  0141               	movlb	1	; select bank1
 13175  0657  00C6               	movwf	(_LIN_TEMPERATURE_RISE_JS_Data^(0+128)+1)
 13176                           
 13177                           ;mcc_generated_files/LINDrivers/lin_app.c: 172:             LIN_TEMPERATURE_RISE_SA_Data
      +                          [0] = 0xff & Trise_sa;
 13178  0658  0140               	movlb	0	; select bank0
 13179  0659  082F               	movf	_Trise_sa,w
 13180  065A  00CB               	movwf	??_Update_LIN_Data
 13181  065B  084B               	movf	??_Update_LIN_Data,w
 13182  065C  0141               	movlb	1	; select bank1
 13183  065D  00C3               	movwf	_LIN_TEMPERATURE_RISE_SA_Data^(0+128)
 13184                           
 13185                           ;mcc_generated_files/LINDrivers/lin_app.c: 173:             LIN_TEMPERATURE_RISE_SA_Data
      +                          [1] = 0xff & (Trise_sa >> 8);
 13186  065E  0140               	movlb	0	; select bank0
 13187  065F  0830               	movf	_Trise_sa+1,w
 13188  0660  00CB               	movwf	??_Update_LIN_Data
 13189  0661  084B               	movf	??_Update_LIN_Data,w
 13190  0662  0141               	movlb	1	; select bank1
 13191  0663  00C4               	movwf	(_LIN_TEMPERATURE_RISE_SA_Data^(0+128)+1)
 13192                           
 13193                           ;mcc_generated_files/LINDrivers/lin_app.c: 175:             LIN_DIAGNOSTIC_Data[0] = 0xf
      +                          f & adcISense_corr;
 13194  0664  0140               	movlb	0	; select bank0
 13195  0665  0839               	movf	_adcISense_corr,w
 13196  0666  00CB               	movwf	??_Update_LIN_Data
 13197  0667  084B               	movf	??_Update_LIN_Data,w
 13198  0668  0142               	movlb	2	; select bank2
 13199  0669  00B8               	movwf	_LIN_DIAGNOSTIC_Data^(0+256)
 13200                           
 13201                           ;mcc_generated_files/LINDrivers/lin_app.c: 176:             LIN_DIAGNOSTIC_Data[1] = 0xf
      +                          f & (adcISense_corr >> 8);
 13202  066A  0140               	movlb	0	; select bank0
 13203  066B  083A               	movf	_adcISense_corr+1,w
 13204  066C  00CB               	movwf	??_Update_LIN_Data
 13205  066D  084B               	movf	??_Update_LIN_Data,w
 13206  066E  0142               	movlb	2	; select bank2
 13207  066F  00B9               	movwf	(_LIN_DIAGNOSTIC_Data^(0+256)+1)
 13208                           
 13209                           ;mcc_generated_files/LINDrivers/lin_app.c: 177:             LIN_DIAGNOSTIC_Data[2] = 0xf
      +                          f & Tambient;
 13210  0670  0140               	movlb	0	; select bank0
 13211  0671  086C               	movf	_Tambient,w
 13212  0672  00CB               	movwf	??_Update_LIN_Data
 13213  0673  084B               	movf	??_Update_LIN_Data,w
 13214  0674  0142               	movlb	2	; select bank2
 13215  0675  00BA               	movwf	(_LIN_DIAGNOSTIC_Data^(0+256)+2)
 13216                           
 13217                           ;mcc_generated_files/LINDrivers/lin_app.c: 178:             LIN_DIAGNOSTIC_Data[3] = 0xf
      +                          f & (Tambient >> 8);
 13218  0676  0140               	movlb	0	; select bank0
 13219  0677  086D               	movf	_Tambient+1,w
 13220  0678  00CB               	movwf	??_Update_LIN_Data
 13221  0679  084B               	movf	??_Update_LIN_Data,w
 13222  067A  0142               	movlb	2	; select bank2
 13223  067B  00BB               	movwf	(_LIN_DIAGNOSTIC_Data^(0+256)+3)
 13224                           
 13225                           ;mcc_generated_files/LINDrivers/lin_app.c: 179:             LIN_DIAGNOSTIC_Data[4] = 0xf
      +                          f & Tsink;
 13226  067C  0140               	movlb	0	; select bank0
 13227  067D  0835               	movf	_Tsink,w
 13228  067E  00CB               	movwf	??_Update_LIN_Data
 13229  067F  084B               	movf	??_Update_LIN_Data,w
 13230  0680  0142               	movlb	2	; select bank2
 13231  0681  00BC               	movwf	(_LIN_DIAGNOSTIC_Data^(0+256)+4)
 13232                           
 13233                           ;mcc_generated_files/LINDrivers/lin_app.c: 180:             LIN_DIAGNOSTIC_Data[5] = 0xf
      +                          f & (Tsink >> 8);
 13234  0682  0140               	movlb	0	; select bank0
 13235  0683  0836               	movf	_Tsink+1,w
 13236  0684  00CB               	movwf	??_Update_LIN_Data
 13237  0685  084B               	movf	??_Update_LIN_Data,w
 13238  0686  0142               	movlb	2	; select bank2
 13239  0687  00BD               	movwf	(_LIN_DIAGNOSTIC_Data^(0+256)+5)
 13240                           
 13241                           ;mcc_generated_files/LINDrivers/lin_app.c: 181:             LIN_DIAGNOSTIC_Data[6] = 0xf
      +                          f & Tjunction;
 13242  0688  0140               	movlb	0	; select bank0
 13243  0689  0833               	movf	_Tjunction,w
 13244  068A  00CB               	movwf	??_Update_LIN_Data
 13245  068B  084B               	movf	??_Update_LIN_Data,w
 13246  068C  0142               	movlb	2	; select bank2
 13247  068D  00BE               	movwf	(_LIN_DIAGNOSTIC_Data^(0+256)+6)
 13248                           
 13249                           ;mcc_generated_files/LINDrivers/lin_app.c: 182:             LIN_DIAGNOSTIC_Data[7] = 0xf
      +                          f & (Tjunction >> 8);
 13250  068E  0140               	movlb	0	; select bank0
 13251  068F  0834               	movf	_Tjunction+1,w
 13252  0690  00CB               	movwf	??_Update_LIN_Data
 13253  0691  084B               	movf	??_Update_LIN_Data,w
 13254  0692  0142               	movlb	2	; select bank2
 13255  0693  00BF               	movwf	(_LIN_DIAGNOSTIC_Data^(0+256)+7)
 13256  0694  0008               	return
 13257  0695                     __end_of_Update_LIN_Data:
 13258                           
 13259                           	psect	text50
 13260  0067                     __ptext50:	
 13261 ;; *************** function _TCC_Curve *****************
 13262 ;; Defined at:
 13263 ;;		line 476 in file "efuse.c"
 13264 ;; Parameters:    Size  Location     Type
 13265 ;;		None
 13266 ;; Auto vars:     Size  Location     Type
 13267 ;;		None
 13268 ;; Return value:  Size  Location     Type
 13269 ;;                  1    wreg      void 
 13270 ;; Registers used:
 13271 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13272 ;; Tracked objects:
 13273 ;;		On entry : 3F/1
 13274 ;;		On exit  : 3F/0
 13275 ;;		Unchanged: 0/0
 13276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13278 ;;      Locals:         0       0       0      12       0       0       0       0       0       0       0       0       
      +0       0
 13279 ;;      Temps:          0       0       0      12       0       0       0       0       0       0       0       0       
      +0       0
 13280 ;;      Totals:         0       0       0      24       0       0       0       0       0       0       0       0       
      +0       0
 13281 ;;Total ram usage:       24 bytes
 13282 ;; Hardware stack levels used: 1
 13283 ;; Hardware stack levels required when called: 6
 13284 ;; This function calls:
 13285 ;;		___lldiv
 13286 ;;		___lmul
 13287 ;;		___omul
 13288 ;; This function is called by:
 13289 ;;		_EFuse
 13290 ;; This function uses a non-reentrant model
 13291 ;;
 13292                           
 13293                           
 13294                           ;psect for function _TCC_Curve
 13295  0067                     _TCC_Curve:
 13296                           
 13297                           ;efuse.c: 478:     Trise_raw_prev = Trise_raw_curr;
 13298                           
 13299                           ;incstack = 0
 13300                           ; Regs used in _TCC_Curve: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13301  0067  0827               	movf	(_Trise_raw_curr+3)^(0+128),w
 13302  0068  00A3               	movwf	(_Trise_raw_prev+3)^(0+128)
 13303  0069  0826               	movf	(_Trise_raw_curr+2)^(0+128),w
 13304  006A  00A2               	movwf	(_Trise_raw_prev+2)^(0+128)
 13305  006B  0825               	movf	(_Trise_raw_curr+1)^(0+128),w
 13306  006C  00A1               	movwf	(_Trise_raw_prev+1)^(0+128)
 13307  006D  0824               	movf	_Trise_raw_curr^(0+128),w
 13308  006E  00A0               	movwf	_Trise_raw_prev^(0+128)
 13309                           
 13310                           ;efuse.c: 479:     Trise_raw_curr = (uint32_t) ((((uint64_t) adcISense_corr * (uint64_t)
      +                           adcISense_corr) * factor_rdson_rthsa) >> 10);
 13311  006F  0140               	movlb	0	; select bank0
 13312  0070  083A               	movf	_adcISense_corr+1,w
 13313  0071  0142               	movlb	2	; select bank2
 13314  0072  00C1               	movwf	(??_TCC_Curve^(0+256)+1)
 13315  0073  0140               	movlb	0	; select bank0
 13316  0074  0839               	movf	_adcISense_corr,w
 13317  0075  0142               	movlb	2	; select bank2
 13318  0076  00C0               	movwf	??_TCC_Curve^(0+256)
 13319  0077  0840               	movf	??_TCC_Curve^(0+256),w
 13320  0078  0140               	movlb	0	; select bank0
 13321  0079  00CB               	movwf	___omul@multiplier
 13322  007A  0142               	movlb	2	; select bank2
 13323  007B  0841               	movf	(??_TCC_Curve^(0+256)+1),w
 13324  007C  0140               	movlb	0	; select bank0
 13325  007D  00CC               	movwf	___omul@multiplier+1
 13326  007E  01CD               	clrf	___omul@multiplier+2
 13327  007F  01CE               	clrf	___omul@multiplier+3
 13328  0080  01CF               	clrf	___omul@multiplier+4
 13329  0081  01D0               	clrf	___omul@multiplier+5
 13330  0082  01D1               	clrf	___omul@multiplier+6
 13331  0083  01D2               	clrf	___omul@multiplier+7
 13332  0084  083A               	movf	_adcISense_corr+1,w
 13333  0085  0142               	movlb	2	; select bank2
 13334  0086  00C3               	movwf	((??_TCC_Curve+2)^(0+256)+1)
 13335  0087  0140               	movlb	0	; select bank0
 13336  0088  0839               	movf	_adcISense_corr,w
 13337  0089  0142               	movlb	2	; select bank2
 13338  008A  00C2               	movwf	(??_TCC_Curve+2)^(0+256)
 13339  008B  0842               	movf	(??_TCC_Curve+2)^(0+256),w
 13340  008C  0140               	movlb	0	; select bank0
 13341  008D  00D3               	movwf	___omul@multiplicand
 13342  008E  0142               	movlb	2	; select bank2
 13343  008F  0843               	movf	((??_TCC_Curve+2)^(0+256)+1),w
 13344  0090  0140               	movlb	0	; select bank0
 13345  0091  00D4               	movwf	___omul@multiplicand+1
 13346  0092  01D5               	clrf	___omul@multiplicand+2
 13347  0093  01D6               	clrf	___omul@multiplicand+3
 13348  0094  01D7               	clrf	___omul@multiplicand+4
 13349  0095  01D8               	clrf	___omul@multiplicand+5
 13350  0096  01D9               	clrf	___omul@multiplicand+6
 13351  0097  01DA               	clrf	___omul@multiplicand+7
 13352  0098  318C  246E  3180   	fcall	___omul
 13353  009B  084B               	movf	?___omul,w
 13354  009C  0142               	movlb	2	; select bank2
 13355  009D  00CC               	movwf	_TCC_Curve$3311^(0+256)
 13356  009E  0140               	movlb	0	; select bank0
 13357  009F  084C               	movf	?___omul+1,w
 13358  00A0  0142               	movlb	2	; select bank2
 13359  00A1  00CD               	movwf	(_TCC_Curve$3311+1)^(0+256)
 13360  00A2  0140               	movlb	0	; select bank0
 13361  00A3  084D               	movf	?___omul+2,w
 13362  00A4  0142               	movlb	2	; select bank2
 13363  00A5  00CE               	movwf	(_TCC_Curve$3311+2)^(0+256)
 13364  00A6  0140               	movlb	0	; select bank0
 13365  00A7  084E               	movf	?___omul+3,w
 13366  00A8  0142               	movlb	2	; select bank2
 13367  00A9  00CF               	movwf	(_TCC_Curve$3311+3)^(0+256)
 13368  00AA  0140               	movlb	0	; select bank0
 13369  00AB  084F               	movf	?___omul+4,w
 13370  00AC  0142               	movlb	2	; select bank2
 13371  00AD  00D0               	movwf	(_TCC_Curve$3311+4)^(0+256)
 13372  00AE  0140               	movlb	0	; select bank0
 13373  00AF  0850               	movf	?___omul+5,w
 13374  00B0  0142               	movlb	2	; select bank2
 13375  00B1  00D1               	movwf	(_TCC_Curve$3311+5)^(0+256)
 13376  00B2  0140               	movlb	0	; select bank0
 13377  00B3  0851               	movf	?___omul+6,w
 13378  00B4  0142               	movlb	2	; select bank2
 13379  00B5  00D2               	movwf	(_TCC_Curve$3311+6)^(0+256)
 13380  00B6  0140               	movlb	0	; select bank0
 13381  00B7  0852               	movf	?___omul+7,w
 13382  00B8  0142               	movlb	2	; select bank2
 13383  00B9  00D3               	movwf	(_TCC_Curve$3311+7)^(0+256)
 13384                           
 13385                           ;efuse.c: 479:     Trise_raw_curr = (uint32_t) ((((uint64_t) adcISense_corr * (uint64_t)
      +                           adcISense_corr) * factor_rdson_rthsa) >> 10);
 13386  00BA  084C               	movf	_TCC_Curve$3311^(0+256),w
 13387  00BB  0140               	movlb	0	; select bank0
 13388  00BC  00CB               	movwf	___omul@multiplier
 13389  00BD  0142               	movlb	2	; select bank2
 13390  00BE  084D               	movf	(_TCC_Curve$3311+1)^(0+256),w
 13391  00BF  0140               	movlb	0	; select bank0
 13392  00C0  00CC               	movwf	___omul@multiplier+1
 13393  00C1  0142               	movlb	2	; select bank2
 13394  00C2  084E               	movf	(_TCC_Curve$3311+2)^(0+256),w
 13395  00C3  0140               	movlb	0	; select bank0
 13396  00C4  00CD               	movwf	___omul@multiplier+2
 13397  00C5  0142               	movlb	2	; select bank2
 13398  00C6  084F               	movf	(_TCC_Curve$3311+3)^(0+256),w
 13399  00C7  0140               	movlb	0	; select bank0
 13400  00C8  00CE               	movwf	___omul@multiplier+3
 13401  00C9  0142               	movlb	2	; select bank2
 13402  00CA  0850               	movf	(_TCC_Curve$3311+4)^(0+256),w
 13403  00CB  0140               	movlb	0	; select bank0
 13404  00CC  00CF               	movwf	___omul@multiplier+4
 13405  00CD  0142               	movlb	2	; select bank2
 13406  00CE  0851               	movf	(_TCC_Curve$3311+5)^(0+256),w
 13407  00CF  0140               	movlb	0	; select bank0
 13408  00D0  00D0               	movwf	___omul@multiplier+5
 13409  00D1  0142               	movlb	2	; select bank2
 13410  00D2  0852               	movf	(_TCC_Curve$3311+6)^(0+256),w
 13411  00D3  0140               	movlb	0	; select bank0
 13412  00D4  00D1               	movwf	___omul@multiplier+6
 13413  00D5  0142               	movlb	2	; select bank2
 13414  00D6  0853               	movf	(_TCC_Curve$3311+7)^(0+256),w
 13415  00D7  0140               	movlb	0	; select bank0
 13416  00D8  00D2               	movwf	___omul@multiplier+7
 13417  00D9  0141               	movlb	1	; select bank1
 13418  00DA  0868               	movf	(_factor_rdson_rthsa+1)^(0+128),w
 13419  00DB  0142               	movlb	2	; select bank2
 13420  00DC  00C1               	movwf	(??_TCC_Curve^(0+256)+1)
 13421  00DD  0141               	movlb	1	; select bank1
 13422  00DE  0867               	movf	_factor_rdson_rthsa^(0+128),w
 13423  00DF  0142               	movlb	2	; select bank2
 13424  00E0  00C0               	movwf	??_TCC_Curve^(0+256)
 13425  00E1  0840               	movf	??_TCC_Curve^(0+256),w
 13426  00E2  0140               	movlb	0	; select bank0
 13427  00E3  00D3               	movwf	___omul@multiplicand
 13428  00E4  0142               	movlb	2	; select bank2
 13429  00E5  0841               	movf	(??_TCC_Curve^(0+256)+1),w
 13430  00E6  0140               	movlb	0	; select bank0
 13431  00E7  00D4               	movwf	___omul@multiplicand+1
 13432  00E8  01D5               	clrf	___omul@multiplicand+2
 13433  00E9  01D6               	clrf	___omul@multiplicand+3
 13434  00EA  01D7               	clrf	___omul@multiplicand+4
 13435  00EB  01D8               	clrf	___omul@multiplicand+5
 13436  00EC  01D9               	clrf	___omul@multiplicand+6
 13437  00ED  01DA               	clrf	___omul@multiplicand+7
 13438  00EE  318C  246E  3180   	fcall	___omul
 13439  00F1  304B               	movlw	low ?___omul
 13440  00F2  0086               	movwf	6
 13441  00F3  3000               	movlw	high ?___omul
 13442  00F4  0087               	movwf	7
 13443  00F5  3F40               	moviw [0]fsr1
 13444  00F6  0142               	movlb	2	; select bank2
 13445  00F7  00C2               	movwf	(??_TCC_Curve+2)^(0+256)
 13446  00F8  3F41               	moviw [1]fsr1
 13447  00F9  00C3               	movwf	((??_TCC_Curve+2)^(0+256)+1)
 13448  00FA  3F42               	moviw [2]fsr1
 13449  00FB  00C4               	movwf	((??_TCC_Curve+2)^(0+256)+2)
 13450  00FC  3F43               	moviw [3]fsr1
 13451  00FD  00C5               	movwf	((??_TCC_Curve+2)^(0+256)+3)
 13452  00FE  3F44               	moviw [4]fsr1
 13453  00FF  00C6               	movwf	((??_TCC_Curve+2)^(0+256)+4)
 13454  0100  3F45               	moviw [5]fsr1
 13455  0101  00C7               	movwf	((??_TCC_Curve+2)^(0+256)+5)
 13456  0102  3F46               	moviw [6]fsr1
 13457  0103  00C8               	movwf	((??_TCC_Curve+2)^(0+256)+6)
 13458  0104  3F47               	moviw [7]fsr1
 13459  0105  00C9               	movwf	((??_TCC_Curve+2)^(0+256)+7)
 13460  0106  300A               	movlw	10
 13461  0107                     u3295:
 13462  0107  0142               	movlb	2	; select bank2
 13463  0108  36C9               	lsrf	((??_TCC_Curve+2)^(0+256)+7),f
 13464  0109  0CC8               	rrf	((??_TCC_Curve+2)^(0+256)+6),f
 13465  010A  0CC7               	rrf	((??_TCC_Curve+2)^(0+256)+5),f
 13466  010B  0CC6               	rrf	((??_TCC_Curve+2)^(0+256)+4),f
 13467  010C  0CC5               	rrf	((??_TCC_Curve+2)^(0+256)+3),f
 13468  010D  0CC4               	rrf	((??_TCC_Curve+2)^(0+256)+2),f
 13469  010E  0CC3               	rrf	((??_TCC_Curve+2)^(0+256)+1),f
 13470  010F  0CC2               	rrf	(??_TCC_Curve+2)^(0+256),f
 13471  0110  0B89               	decfsz	9,f
 13472  0111  2907               	goto	u3295
 13473  0112  0142               	movlb	2	; select bank2
 13474  0113  0845               	movf	((??_TCC_Curve+2)^(0+256)+3),w
 13475  0114  0141               	movlb	1	; select bank1
 13476  0115  00A7               	movwf	(_Trise_raw_curr+3)^(0+128)
 13477  0116  0142               	movlb	2	; select bank2
 13478  0117  0844               	movf	((??_TCC_Curve+2)^(0+256)+2),w
 13479  0118  0141               	movlb	1	; select bank1
 13480  0119  00A6               	movwf	(_Trise_raw_curr+2)^(0+128)
 13481  011A  0142               	movlb	2	; select bank2
 13482  011B  0843               	movf	((??_TCC_Curve+2)^(0+256)+1),w
 13483  011C  0141               	movlb	1	; select bank1
 13484  011D  00A5               	movwf	(_Trise_raw_curr+1)^(0+128)
 13485  011E  0142               	movlb	2	; select bank2
 13486  011F  0842               	movf	(??_TCC_Curve+2)^(0+256),w
 13487  0120  0141               	movlb	1	; select bank1
 13488  0121  00A4               	movwf	_Trise_raw_curr^(0+128)
 13489                           
 13490                           ;efuse.c: 480:     Trise_filtered = (uint32_t) ((uint64_t) a1_coef * Trise_filtered + (u
      +                          int32_t) b1_coef * (Trise_raw_prev + Trise_raw_curr)) >> 16;
 13491  0122  0820               	movf	_Trise_raw_prev^(0+128),w
 13492  0123  0724               	addwf	_Trise_raw_curr^(0+128),w
 13493  0124  0142               	movlb	2	; select bank2
 13494  0125  00C0               	movwf	??_TCC_Curve^(0+256)
 13495  0126  0141               	movlb	1	; select bank1
 13496  0127  0821               	movf	(_Trise_raw_prev+1)^(0+128),w
 13497  0128  3D25               	addwfc	(_Trise_raw_curr+1)^(0+128),w
 13498  0129  0142               	movlb	2	; select bank2
 13499  012A  00C1               	movwf	(??_TCC_Curve^(0+256)+1)
 13500  012B  0141               	movlb	1	; select bank1
 13501  012C  0822               	movf	(_Trise_raw_prev+2)^(0+128),w
 13502  012D  3D26               	addwfc	(_Trise_raw_curr+2)^(0+128),w
 13503  012E  0142               	movlb	2	; select bank2
 13504  012F  00C2               	movwf	(??_TCC_Curve^(0+256)+2)
 13505  0130  0141               	movlb	1	; select bank1
 13506  0131  0823               	movf	(_Trise_raw_prev+3)^(0+128),w
 13507  0132  3D27               	addwfc	(_Trise_raw_curr+3)^(0+128),w
 13508  0133  0142               	movlb	2	; select bank2
 13509  0134  00C3               	movwf	(??_TCC_Curve^(0+256)+3)
 13510  0135  0843               	movf	(??_TCC_Curve+3)^(0+256),w
 13511  0136  0140               	movlb	0	; select bank0
 13512  0137  00CE               	movwf	___lmul@multiplier+3
 13513  0138  0142               	movlb	2	; select bank2
 13514  0139  0842               	movf	(??_TCC_Curve+2)^(0+256),w
 13515  013A  0140               	movlb	0	; select bank0
 13516  013B  00CD               	movwf	___lmul@multiplier+2
 13517  013C  0142               	movlb	2	; select bank2
 13518  013D  0841               	movf	(??_TCC_Curve+1)^(0+256),w
 13519  013E  0140               	movlb	0	; select bank0
 13520  013F  00CC               	movwf	___lmul@multiplier+1
 13521  0140  0142               	movlb	2	; select bank2
 13522  0141  0840               	movf	??_TCC_Curve^(0+256),w
 13523  0142  0140               	movlb	0	; select bank0
 13524  0143  00CB               	movwf	___lmul@multiplier
 13525  0144  0869               	movf	_b1_coef,w
 13526  0145  0142               	movlb	2	; select bank2
 13527  0146  00C4               	movwf	(??_TCC_Curve+4)^(0+256)
 13528  0147  01C5               	clrf	((??_TCC_Curve+4)^(0+256)+1)
 13529  0148  01C6               	clrf	((??_TCC_Curve+4)^(0+256)+2)
 13530  0149  01C7               	clrf	((??_TCC_Curve+4)^(0+256)+3)
 13531  014A  0847               	movf	(??_TCC_Curve+7)^(0+256),w
 13532  014B  0140               	movlb	0	; select bank0
 13533  014C  00D2               	movwf	___lmul@multiplicand+3
 13534  014D  0142               	movlb	2	; select bank2
 13535  014E  0846               	movf	(??_TCC_Curve+6)^(0+256),w
 13536  014F  0140               	movlb	0	; select bank0
 13537  0150  00D1               	movwf	___lmul@multiplicand+2
 13538  0151  0142               	movlb	2	; select bank2
 13539  0152  0845               	movf	(??_TCC_Curve+5)^(0+256),w
 13540  0153  0140               	movlb	0	; select bank0
 13541  0154  00D0               	movwf	___lmul@multiplicand+1
 13542  0155  0142               	movlb	2	; select bank2
 13543  0156  0844               	movf	(??_TCC_Curve+4)^(0+256),w
 13544  0157  0140               	movlb	0	; select bank0
 13545  0158  00CF               	movwf	___lmul@multiplicand
 13546  0159  318B  2338  3180   	fcall	___lmul
 13547  015C  084B               	movf	?___lmul,w
 13548  015D  0142               	movlb	2	; select bank2
 13549  015E  00C8               	movwf	(??_TCC_Curve+8)^(0+256)
 13550  015F  0140               	movlb	0	; select bank0
 13551  0160  084C               	movf	?___lmul+1,w
 13552  0161  0142               	movlb	2	; select bank2
 13553  0162  00C9               	movwf	((??_TCC_Curve+8)^(0+256)+1)
 13554  0163  0140               	movlb	0	; select bank0
 13555  0164  084D               	movf	?___lmul+2,w
 13556  0165  0142               	movlb	2	; select bank2
 13557  0166  00CA               	movwf	((??_TCC_Curve+8)^(0+256)+2)
 13558  0167  0140               	movlb	0	; select bank0
 13559  0168  084E               	movf	?___lmul+3,w
 13560  0169  0142               	movlb	2	; select bank2
 13561  016A  00CB               	movwf	((??_TCC_Curve+8)^(0+256)+3)
 13562  016B  0141               	movlb	1	; select bank1
 13563  016C  0863               	movf	_a1_coef^(0+128),w
 13564  016D  0140               	movlb	0	; select bank0
 13565  016E  00CB               	movwf	___lmul@multiplier
 13566  016F  0141               	movlb	1	; select bank1
 13567  0170  0864               	movf	(_a1_coef+1)^(0+128),w
 13568  0171  0140               	movlb	0	; select bank0
 13569  0172  00CC               	movwf	___lmul@multiplier+1
 13570  0173  01CD               	clrf	___lmul@multiplier+2
 13571  0174  01CE               	clrf	___lmul@multiplier+3
 13572  0175  0141               	movlb	1	; select bank1
 13573  0176  082B               	movf	(_Trise_filtered+3)^(0+128),w
 13574  0177  0140               	movlb	0	; select bank0
 13575  0178  00D2               	movwf	___lmul@multiplicand+3
 13576  0179  0141               	movlb	1	; select bank1
 13577  017A  082A               	movf	(_Trise_filtered+2)^(0+128),w
 13578  017B  0140               	movlb	0	; select bank0
 13579  017C  00D1               	movwf	___lmul@multiplicand+2
 13580  017D  0141               	movlb	1	; select bank1
 13581  017E  0829               	movf	(_Trise_filtered+1)^(0+128),w
 13582  017F  0140               	movlb	0	; select bank0
 13583  0180  00D0               	movwf	___lmul@multiplicand+1
 13584  0181  0141               	movlb	1	; select bank1
 13585  0182  0828               	movf	_Trise_filtered^(0+128),w
 13586  0183  0140               	movlb	0	; select bank0
 13587  0184  00CF               	movwf	___lmul@multiplicand
 13588  0185  318B  2338  3180   	fcall	___lmul
 13589  0188  084B               	movf	?___lmul,w
 13590  0189  0142               	movlb	2	; select bank2
 13591  018A  07C8               	addwf	(??_TCC_Curve+8)^(0+256),f
 13592  018B  0140               	movlb	0	; select bank0
 13593  018C  084C               	movf	?___lmul+1,w
 13594  018D  0142               	movlb	2	; select bank2
 13595  018E  3DC9               	addwfc	((??_TCC_Curve+8)^(0+256)+1),f
 13596  018F  0140               	movlb	0	; select bank0
 13597  0190  084D               	movf	?___lmul+2,w
 13598  0191  0142               	movlb	2	; select bank2
 13599  0192  3DCA               	addwfc	((??_TCC_Curve+8)^(0+256)+2),f
 13600  0193  0140               	movlb	0	; select bank0
 13601  0194  084E               	movf	?___lmul+3,w
 13602  0195  0142               	movlb	2	; select bank2
 13603  0196  3DCB               	addwfc	((??_TCC_Curve+8)^(0+256)+3),f
 13604  0197  3010               	movlw	16
 13605  0198                     u3305:
 13606  0198  36CB               	lsrf	((??_TCC_Curve+8)^(0+256)+3),f
 13607  0199  0CCA               	rrf	((??_TCC_Curve+8)^(0+256)+2),f
 13608  019A  0CC9               	rrf	((??_TCC_Curve+8)^(0+256)+1),f
 13609  019B  0CC8               	rrf	(??_TCC_Curve+8)^(0+256),f
 13610  019C  0B89               	decfsz	9,f
 13611  019D  2998               	goto	u3305
 13612  019E  084B               	movf	(??_TCC_Curve+11)^(0+256),w
 13613  019F  0141               	movlb	1	; select bank1
 13614  01A0  00AB               	movwf	(_Trise_filtered+3)^(0+128)
 13615  01A1  0142               	movlb	2	; select bank2
 13616  01A2  084A               	movf	(??_TCC_Curve+10)^(0+256),w
 13617  01A3  0141               	movlb	1	; select bank1
 13618  01A4  00AA               	movwf	(_Trise_filtered+2)^(0+128)
 13619  01A5  0142               	movlb	2	; select bank2
 13620  01A6  0849               	movf	(??_TCC_Curve+9)^(0+256),w
 13621  01A7  0141               	movlb	1	; select bank1
 13622  01A8  00A9               	movwf	(_Trise_filtered+1)^(0+128)
 13623  01A9  0142               	movlb	2	; select bank2
 13624  01AA  0848               	movf	(??_TCC_Curve+8)^(0+256),w
 13625  01AB  0141               	movlb	1	; select bank1
 13626  01AC  00A8               	movwf	_Trise_filtered^(0+128)
 13627                           
 13628                           ;efuse.c: 482:     Trise_sa = (int16_t) (Trise_filtered / current2counts_squared);
 13629  01AD  0865               	movf	_current2counts_squared^(0+128),w
 13630  01AE  0140               	movlb	0	; select bank0
 13631  01AF  00D7               	movwf	___lldiv@divisor
 13632  01B0  0141               	movlb	1	; select bank1
 13633  01B1  0866               	movf	(_current2counts_squared+1)^(0+128),w
 13634  01B2  0140               	movlb	0	; select bank0
 13635  01B3  00D8               	movwf	___lldiv@divisor+1
 13636  01B4  01D9               	clrf	___lldiv@divisor+2
 13637  01B5  01DA               	clrf	___lldiv@divisor+3
 13638  01B6  0141               	movlb	1	; select bank1
 13639  01B7  082B               	movf	(_Trise_filtered+3)^(0+128),w
 13640  01B8  0140               	movlb	0	; select bank0
 13641  01B9  00DE               	movwf	___lldiv@dividend+3
 13642  01BA  0141               	movlb	1	; select bank1
 13643  01BB  082A               	movf	(_Trise_filtered+2)^(0+128),w
 13644  01BC  0140               	movlb	0	; select bank0
 13645  01BD  00DD               	movwf	___lldiv@dividend+2
 13646  01BE  0141               	movlb	1	; select bank1
 13647  01BF  0829               	movf	(_Trise_filtered+1)^(0+128),w
 13648  01C0  0140               	movlb	0	; select bank0
 13649  01C1  00DC               	movwf	___lldiv@dividend+1
 13650  01C2  0141               	movlb	1	; select bank1
 13651  01C3  0828               	movf	_Trise_filtered^(0+128),w
 13652  01C4  0140               	movlb	0	; select bank0
 13653  01C5  00DB               	movwf	___lldiv@dividend
 13654  01C6  318D  2503  3180   	fcall	___lldiv
 13655  01C9  0858               	movf	?___lldiv+1,w
 13656  01CA  00B0               	movwf	_Trise_sa+1
 13657  01CB  0857               	movf	?___lldiv,w
 13658  01CC  00AF               	movwf	_Trise_sa
 13659                           
 13660                           ;efuse.c: 483:     Tsink = Tambient + Trise_sa;
 13661  01CD  082F               	movf	_Trise_sa,w
 13662  01CE  076C               	addwf	_Tambient,w
 13663  01CF  00B5               	movwf	_Tsink
 13664  01D0  0830               	movf	_Trise_sa+1,w
 13665  01D1  3D6D               	addwfc	_Tambient+1,w
 13666  01D2  00B6               	movwf	_Tsink+1
 13667                           
 13668                           ;efuse.c: 485:     Trise_js = (int16_t) (((((uint32_t) adcISense_OneMOSFET * (uint32_t) 
      +                          adcISense_OneMOSFET) * factor_rdson_rthjs) >> 10) / current2counts_squared);
 13669  01D3  0141               	movlb	1	; select bank1
 13670  01D4  082E               	movf	_adcISense_OneMOSFET^(0+128),w
 13671  01D5  0140               	movlb	0	; select bank0
 13672  01D6  00CF               	movwf	___lmul@multiplicand
 13673  01D7  0141               	movlb	1	; select bank1
 13674  01D8  082F               	movf	(_adcISense_OneMOSFET+1)^(0+128),w
 13675  01D9  0140               	movlb	0	; select bank0
 13676  01DA  00D0               	movwf	___lmul@multiplicand+1
 13677  01DB  01D1               	clrf	___lmul@multiplicand+2
 13678  01DC  01D2               	clrf	___lmul@multiplicand+3
 13679  01DD  0141               	movlb	1	; select bank1
 13680  01DE  082E               	movf	_adcISense_OneMOSFET^(0+128),w
 13681  01DF  0140               	movlb	0	; select bank0
 13682  01E0  00CB               	movwf	___lmul@multiplier
 13683  01E1  0141               	movlb	1	; select bank1
 13684  01E2  082F               	movf	(_adcISense_OneMOSFET+1)^(0+128),w
 13685  01E3  0140               	movlb	0	; select bank0
 13686  01E4  00CC               	movwf	___lmul@multiplier+1
 13687  01E5  01CD               	clrf	___lmul@multiplier+2
 13688  01E6  01CE               	clrf	___lmul@multiplier+3
 13689  01E7  318B  2338  3180   	fcall	___lmul
 13690  01EA  084E               	movf	?___lmul+3,w
 13691  01EB  0142               	movlb	2	; select bank2
 13692  01EC  00D7               	movwf	(_TCC_Curve$3312+3)^(0+256)
 13693  01ED  0140               	movlb	0	; select bank0
 13694  01EE  084D               	movf	?___lmul+2,w
 13695  01EF  0142               	movlb	2	; select bank2
 13696  01F0  00D6               	movwf	(_TCC_Curve$3312+2)^(0+256)
 13697  01F1  0140               	movlb	0	; select bank0
 13698  01F2  084C               	movf	?___lmul+1,w
 13699  01F3  0142               	movlb	2	; select bank2
 13700  01F4  00D5               	movwf	(_TCC_Curve$3312+1)^(0+256)
 13701  01F5  0140               	movlb	0	; select bank0
 13702  01F6  084B               	movf	?___lmul,w
 13703  01F7  0142               	movlb	2	; select bank2
 13704  01F8  00D4               	movwf	_TCC_Curve$3312^(0+256)
 13705                           
 13706                           ;efuse.c: 485:     Trise_js = (int16_t) (((((uint32_t) adcISense_OneMOSFET * (uint32_t) 
      +                          adcISense_OneMOSFET) * factor_rdson_rthjs) >> 10) / current2counts_squared);
 13707  01F9  0141               	movlb	1	; select bank1
 13708  01FA  0865               	movf	_current2counts_squared^(0+128),w
 13709  01FB  0140               	movlb	0	; select bank0
 13710  01FC  00D7               	movwf	___lldiv@divisor
 13711  01FD  0141               	movlb	1	; select bank1
 13712  01FE  0866               	movf	(_current2counts_squared+1)^(0+128),w
 13713  01FF  0140               	movlb	0	; select bank0
 13714  0200  00D8               	movwf	___lldiv@divisor+1
 13715  0201  01D9               	clrf	___lldiv@divisor+2
 13716  0202  01DA               	clrf	___lldiv@divisor+3
 13717  0203  0141               	movlb	1	; select bank1
 13718  0204  0869               	movf	_factor_rdson_rthjs^(0+128),w
 13719  0205  0140               	movlb	0	; select bank0
 13720  0206  00CF               	movwf	___lmul@multiplicand
 13721  0207  0141               	movlb	1	; select bank1
 13722  0208  086A               	movf	(_factor_rdson_rthjs+1)^(0+128),w
 13723  0209  0140               	movlb	0	; select bank0
 13724  020A  00D0               	movwf	___lmul@multiplicand+1
 13725  020B  01D1               	clrf	___lmul@multiplicand+2
 13726  020C  01D2               	clrf	___lmul@multiplicand+3
 13727  020D  0142               	movlb	2	; select bank2
 13728  020E  0857               	movf	(_TCC_Curve$3312+3)^(0+256),w
 13729  020F  0140               	movlb	0	; select bank0
 13730  0210  00CE               	movwf	___lmul@multiplier+3
 13731  0211  0142               	movlb	2	; select bank2
 13732  0212  0856               	movf	(_TCC_Curve$3312+2)^(0+256),w
 13733  0213  0140               	movlb	0	; select bank0
 13734  0214  00CD               	movwf	___lmul@multiplier+2
 13735  0215  0142               	movlb	2	; select bank2
 13736  0216  0855               	movf	(_TCC_Curve$3312+1)^(0+256),w
 13737  0217  0140               	movlb	0	; select bank0
 13738  0218  00CC               	movwf	___lmul@multiplier+1
 13739  0219  0142               	movlb	2	; select bank2
 13740  021A  0854               	movf	_TCC_Curve$3312^(0+256),w
 13741  021B  0140               	movlb	0	; select bank0
 13742  021C  00CB               	movwf	___lmul@multiplier
 13743  021D  318B  2338  3180   	fcall	___lmul
 13744  0220  084B               	movf	?___lmul,w
 13745  0221  0142               	movlb	2	; select bank2
 13746  0222  00C0               	movwf	??_TCC_Curve^(0+256)
 13747  0223  0140               	movlb	0	; select bank0
 13748  0224  084C               	movf	?___lmul+1,w
 13749  0225  0142               	movlb	2	; select bank2
 13750  0226  00C1               	movwf	(??_TCC_Curve^(0+256)+1)
 13751  0227  0140               	movlb	0	; select bank0
 13752  0228  084D               	movf	?___lmul+2,w
 13753  0229  0142               	movlb	2	; select bank2
 13754  022A  00C2               	movwf	(??_TCC_Curve^(0+256)+2)
 13755  022B  0140               	movlb	0	; select bank0
 13756  022C  084E               	movf	?___lmul+3,w
 13757  022D  0142               	movlb	2	; select bank2
 13758  022E  00C3               	movwf	(??_TCC_Curve^(0+256)+3)
 13759  022F  300A               	movlw	10
 13760  0230                     u3315:
 13761  0230  36C3               	lsrf	(??_TCC_Curve^(0+256)+3),f
 13762  0231  0CC2               	rrf	(??_TCC_Curve^(0+256)+2),f
 13763  0232  0CC1               	rrf	(??_TCC_Curve^(0+256)+1),f
 13764  0233  0CC0               	rrf	??_TCC_Curve^(0+256),f
 13765  0234  0B89               	decfsz	9,f
 13766  0235  2A30               	goto	u3315
 13767  0236  0843               	movf	(??_TCC_Curve+3)^(0+256),w
 13768  0237  0140               	movlb	0	; select bank0
 13769  0238  00DE               	movwf	___lldiv@dividend+3
 13770  0239  0142               	movlb	2	; select bank2
 13771  023A  0842               	movf	(??_TCC_Curve+2)^(0+256),w
 13772  023B  0140               	movlb	0	; select bank0
 13773  023C  00DD               	movwf	___lldiv@dividend+2
 13774  023D  0142               	movlb	2	; select bank2
 13775  023E  0841               	movf	(??_TCC_Curve+1)^(0+256),w
 13776  023F  0140               	movlb	0	; select bank0
 13777  0240  00DC               	movwf	___lldiv@dividend+1
 13778  0241  0142               	movlb	2	; select bank2
 13779  0242  0840               	movf	??_TCC_Curve^(0+256),w
 13780  0243  0140               	movlb	0	; select bank0
 13781  0244  00DB               	movwf	___lldiv@dividend
 13782  0245  318D  2503         	fcall	___lldiv
 13783  0247  0858               	movf	?___lldiv+1,w
 13784  0248  00B2               	movwf	_Trise_js+1
 13785  0249  0857               	movf	?___lldiv,w
 13786  024A  00B1               	movwf	_Trise_js
 13787                           
 13788                           ;efuse.c: 486:     Tjunction = Tsink + Trise_js;
 13789  024B  0831               	movf	_Trise_js,w
 13790  024C  0735               	addwf	_Tsink,w
 13791  024D  00B3               	movwf	_Tjunction
 13792  024E  0832               	movf	_Trise_js+1,w
 13793  024F  3D36               	addwfc	_Tsink+1,w
 13794  0250  00B4               	movwf	_Tjunction+1
 13795  0251  0008               	return
 13796  0252                     __end_of_TCC_Curve:
 13797                           
 13798                           	psect	text51
 13799  0C6E                     __ptext51:	
 13800 ;; *************** function ___omul *****************
 13801 ;; Defined at:
 13802 ;;		line 91 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul64.c"
 13803 ;; Parameters:    Size  Location     Type
 13804 ;;  multiplier      8    0[BANK0 ] unsigned long long 
 13805 ;;  multiplicand    8    8[BANK0 ] unsigned long long 
 13806 ;; Auto vars:     Size  Location     Type
 13807 ;;  product         8   17[BANK0 ] unsigned long long 
 13808 ;; Return value:  Size  Location     Type
 13809 ;;                  8    0[BANK0 ] unsigned long long 
 13810 ;; Registers used:
 13811 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13812 ;; Tracked objects:
 13813 ;;		On entry : 3F/0
 13814 ;;		On exit  : 3F/0
 13815 ;;		Unchanged: 0/0
 13816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13817 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13818 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13819 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13820 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13821 ;;Total ram usage:       25 bytes
 13822 ;; Hardware stack levels used: 1
 13823 ;; Hardware stack levels required when called: 5
 13824 ;; This function calls:
 13825 ;;		Nothing
 13826 ;; This function is called by:
 13827 ;;		_TCC_Curve
 13828 ;; This function uses a non-reentrant model
 13829 ;;
 13830                           
 13831                           
 13832                           ;psect for function ___omul
 13833  0C6E                     ___omul:
 13834                           
 13835                           ;incstack = 0
 13836                           ; Regs used in ___omul: [wreg+fsr1l+fsr1h+status,2+status,0]
 13837  0C6E  305C               	movlw	low ___omul@product
 13838  0C6F  0086               	movwf	6
 13839  0C70  3000               	movlw	high ___omul@product
 13840  0C71  0087               	movwf	7
 13841  0C72  3008               	movlw	8
 13842  0C73  00DB               	movwf	??___omul
 13843  0C74  3000               	movlw	0
 13844  0C75                     u3190:
 13845  0C75  001E               	movwi fsr1++
 13846  0C76  0BDB               	decfsz	??___omul,f
 13847  0C77  2C75               	goto	u3190
 13848  0C78                     l5312:
 13849  0C78  1C4B               	btfss	___omul@multiplier,0
 13850  0C79  2C8A               	goto	l5316
 13851  0C7A  0853               	movf	___omul@multiplicand,w
 13852  0C7B  07DC               	addwf	___omul@product,f
 13853  0C7C  0854               	movf	___omul@multiplicand+1,w
 13854  0C7D  3DDD               	addwfc	___omul@product+1,f
 13855  0C7E  0855               	movf	___omul@multiplicand+2,w
 13856  0C7F  3DDE               	addwfc	___omul@product+2,f
 13857  0C80  0856               	movf	___omul@multiplicand+3,w
 13858  0C81  3DDF               	addwfc	___omul@product+3,f
 13859  0C82  0857               	movf	___omul@multiplicand+4,w
 13860  0C83  3DE0               	addwfc	___omul@product+4,f
 13861  0C84  0858               	movf	___omul@multiplicand+5,w
 13862  0C85  3DE1               	addwfc	___omul@product+5,f
 13863  0C86  0859               	movf	___omul@multiplicand+6,w
 13864  0C87  3DE2               	addwfc	___omul@product+6,f
 13865  0C88  085A               	movf	___omul@multiplicand+7,w
 13866  0C89  3DE3               	addwfc	___omul@product+7,f
 13867  0C8A                     l5316:
 13868  0C8A  35D3               	lslf	___omul@multiplicand,f
 13869  0C8B  0DD4               	rlf	___omul@multiplicand+1,f
 13870  0C8C  0DD5               	rlf	___omul@multiplicand+2,f
 13871  0C8D  0DD6               	rlf	___omul@multiplicand+3,f
 13872  0C8E  0DD7               	rlf	___omul@multiplicand+4,f
 13873  0C8F  0DD8               	rlf	___omul@multiplicand+5,f
 13874  0C90  0DD9               	rlf	___omul@multiplicand+6,f
 13875  0C91  0DDA               	rlf	___omul@multiplicand+7,f
 13876  0C92  36D2               	lsrf	___omul@multiplier+7,f
 13877  0C93  0CD1               	rrf	___omul@multiplier+6,f
 13878  0C94  0CD0               	rrf	___omul@multiplier+5,f
 13879  0C95  0CCF               	rrf	___omul@multiplier+4,f
 13880  0C96  0CCE               	rrf	___omul@multiplier+3,f
 13881  0C97  0CCD               	rrf	___omul@multiplier+2,f
 13882  0C98  0CCC               	rrf	___omul@multiplier+1,f
 13883  0C99  0CCB               	rrf	___omul@multiplier,f
 13884  0C9A  084B               	movf	___omul@multiplier,w
 13885  0C9B  044C               	iorwf	___omul@multiplier+1,w
 13886  0C9C  044D               	iorwf	___omul@multiplier+2,w
 13887  0C9D  044E               	iorwf	___omul@multiplier+3,w
 13888  0C9E  044F               	iorwf	___omul@multiplier+4,w
 13889  0C9F  0450               	iorwf	___omul@multiplier+5,w
 13890  0CA0  0451               	iorwf	___omul@multiplier+6,w
 13891  0CA1  0452               	iorwf	___omul@multiplier+7,w
 13892  0CA2  1D03               	skipz
 13893  0CA3  2C78               	goto	l5312
 13894  0CA4  085C               	movf	___omul@product,w
 13895  0CA5  00CB               	movwf	?___omul
 13896  0CA6  085D               	movf	___omul@product+1,w
 13897  0CA7  00CC               	movwf	?___omul+1
 13898  0CA8  085E               	movf	___omul@product+2,w
 13899  0CA9  00CD               	movwf	?___omul+2
 13900  0CAA  085F               	movf	___omul@product+3,w
 13901  0CAB  00CE               	movwf	?___omul+3
 13902  0CAC  0860               	movf	___omul@product+4,w
 13903  0CAD  00CF               	movwf	?___omul+4
 13904  0CAE  0861               	movf	___omul@product+5,w
 13905  0CAF  00D0               	movwf	?___omul+5
 13906  0CB0  0862               	movf	___omul@product+6,w
 13907  0CB1  00D1               	movwf	?___omul+6
 13908  0CB2  0863               	movf	___omul@product+7,w
 13909  0CB3  00D2               	movwf	?___omul+7
 13910  0CB4  0008               	return
 13911  0CB5                     __end_of___omul:
 13912                           
 13913                           	psect	text52
 13914  0B38                     __ptext52:	
 13915 ;; *************** function ___lmul *****************
 13916 ;; Defined at:
 13917 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul32.c"
 13918 ;; Parameters:    Size  Location     Type
 13919 ;;  multiplier      4    0[BANK0 ] unsigned long 
 13920 ;;  multiplicand    4    4[BANK0 ] unsigned long 
 13921 ;; Auto vars:     Size  Location     Type
 13922 ;;  product         4    8[BANK0 ] unsigned long 
 13923 ;; Return value:  Size  Location     Type
 13924 ;;                  4    0[BANK0 ] unsigned long 
 13925 ;; Registers used:
 13926 ;;		wreg, status,2, status,0
 13927 ;; Tracked objects:
 13928 ;;		On entry : 3F/0
 13929 ;;		On exit  : 3F/0
 13930 ;;		Unchanged: 0/0
 13931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13932 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13933 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13935 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13936 ;;Total ram usage:       12 bytes
 13937 ;; Hardware stack levels used: 1
 13938 ;; Hardware stack levels required when called: 5
 13939 ;; This function calls:
 13940 ;;		Nothing
 13941 ;; This function is called by:
 13942 ;;		_TCC_Curve
 13943 ;; This function uses a non-reentrant model
 13944 ;;
 13945                           
 13946                           
 13947                           ;psect for function ___lmul
 13948  0B38                     ___lmul:
 13949                           
 13950                           ;incstack = 0
 13951                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 13952  0B38  3000               	movlw	0
 13953  0B39  00D6               	movwf	___lmul@product+3
 13954  0B3A  3000               	movlw	0
 13955  0B3B  00D5               	movwf	___lmul@product+2
 13956  0B3C  3000               	movlw	0
 13957  0B3D  00D4               	movwf	___lmul@product+1
 13958  0B3E  3000               	movlw	0
 13959  0B3F  00D3               	movwf	___lmul@product
 13960  0B40                     l4674:
 13961  0B40  1C4B               	btfss	___lmul@multiplier,0
 13962  0B41  2B4A               	goto	l4678
 13963  0B42  084F               	movf	___lmul@multiplicand,w
 13964  0B43  07D3               	addwf	___lmul@product,f
 13965  0B44  0850               	movf	___lmul@multiplicand+1,w
 13966  0B45  3DD4               	addwfc	___lmul@product+1,f
 13967  0B46  0851               	movf	___lmul@multiplicand+2,w
 13968  0B47  3DD5               	addwfc	___lmul@product+2,f
 13969  0B48  0852               	movf	___lmul@multiplicand+3,w
 13970  0B49  3DD6               	addwfc	___lmul@product+3,f
 13971  0B4A                     l4678:
 13972  0B4A  3001               	movlw	1
 13973  0B4B                     u2685:
 13974  0B4B  35CF               	lslf	___lmul@multiplicand,f
 13975  0B4C  0DD0               	rlf	___lmul@multiplicand+1,f
 13976  0B4D  0DD1               	rlf	___lmul@multiplicand+2,f
 13977  0B4E  0DD2               	rlf	___lmul@multiplicand+3,f
 13978  0B4F  0B89               	decfsz	9,f
 13979  0B50  2B4B               	goto	u2685
 13980  0B51  3001               	movlw	1
 13981  0B52                     u2695:
 13982  0B52  36CE               	lsrf	___lmul@multiplier+3,f
 13983  0B53  0CCD               	rrf	___lmul@multiplier+2,f
 13984  0B54  0CCC               	rrf	___lmul@multiplier+1,f
 13985  0B55  0CCB               	rrf	___lmul@multiplier,f
 13986  0B56  0B89               	decfsz	9,f
 13987  0B57  2B52               	goto	u2695
 13988  0B58  084E               	movf	___lmul@multiplier+3,w
 13989  0B59  044D               	iorwf	___lmul@multiplier+2,w
 13990  0B5A  044C               	iorwf	___lmul@multiplier+1,w
 13991  0B5B  044B               	iorwf	___lmul@multiplier,w
 13992  0B5C  1D03               	skipz
 13993  0B5D  2B40               	goto	l4674
 13994  0B5E  0856               	movf	___lmul@product+3,w
 13995  0B5F  00CE               	movwf	?___lmul+3
 13996  0B60  0855               	movf	___lmul@product+2,w
 13997  0B61  00CD               	movwf	?___lmul+2
 13998  0B62  0854               	movf	___lmul@product+1,w
 13999  0B63  00CC               	movwf	?___lmul+1
 14000  0B64  0853               	movf	___lmul@product,w
 14001  0B65  00CB               	movwf	?___lmul
 14002  0B66  0008               	return
 14003  0B67                     __end_of___lmul:
 14004                           
 14005                           	psect	text53
 14006  0D03                     __ptext53:	
 14007 ;; *************** function ___lldiv *****************
 14008 ;; Defined at:
 14009 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__lldiv.c"
 14010 ;; Parameters:    Size  Location     Type
 14011 ;;  divisor         4   12[BANK0 ] unsigned long 
 14012 ;;  dividend        4   16[BANK0 ] unsigned long 
 14013 ;; Auto vars:     Size  Location     Type
 14014 ;;  quotient        4   21[BANK0 ] unsigned long 
 14015 ;;  counter         1   25[BANK0 ] unsigned char 
 14016 ;; Return value:  Size  Location     Type
 14017 ;;                  4   12[BANK0 ] unsigned long 
 14018 ;; Registers used:
 14019 ;;		wreg, status,2, status,0
 14020 ;; Tracked objects:
 14021 ;;		On entry : 3F/0
 14022 ;;		On exit  : 3F/0
 14023 ;;		Unchanged: 0/0
 14024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14025 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14026 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14027 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14028 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14029 ;;Total ram usage:       14 bytes
 14030 ;; Hardware stack levels used: 1
 14031 ;; Hardware stack levels required when called: 5
 14032 ;; This function calls:
 14033 ;;		Nothing
 14034 ;; This function is called by:
 14035 ;;		_TCC_Curve
 14036 ;; This function uses a non-reentrant model
 14037 ;;
 14038                           
 14039                           
 14040                           ;psect for function ___lldiv
 14041  0D03                     ___lldiv:
 14042                           
 14043                           ;incstack = 0
 14044                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
 14045  0D03  3000               	movlw	0
 14046  0D04  00E3               	movwf	___lldiv@quotient+3
 14047  0D05  3000               	movlw	0
 14048  0D06  00E2               	movwf	___lldiv@quotient+2
 14049  0D07  3000               	movlw	0
 14050  0D08  00E1               	movwf	___lldiv@quotient+1
 14051  0D09  3000               	movlw	0
 14052  0D0A  00E0               	movwf	___lldiv@quotient
 14053  0D0B  085A               	movf	___lldiv@divisor+3,w
 14054  0D0C  0459               	iorwf	___lldiv@divisor+2,w
 14055  0D0D  0458               	iorwf	___lldiv@divisor+1,w
 14056  0D0E  0457               	iorwf	___lldiv@divisor,w
 14057  0D0F  1903               	skipnz
 14058  0D10  2D4C               	goto	l5340
 14059  0D11  01E4               	clrf	___lldiv@counter
 14060  0D12  0AE4               	incf	___lldiv@counter,f
 14061  0D13                     l5326:
 14062  0D13  1BDA               	btfsc	___lldiv@divisor+3,7
 14063  0D14  2D21               	goto	l5328
 14064  0D15  3001               	movlw	1
 14065  0D16                     u3235:
 14066  0D16  35D7               	lslf	___lldiv@divisor,f
 14067  0D17  0DD8               	rlf	___lldiv@divisor+1,f
 14068  0D18  0DD9               	rlf	___lldiv@divisor+2,f
 14069  0D19  0DDA               	rlf	___lldiv@divisor+3,f
 14070  0D1A  0B89               	decfsz	9,f
 14071  0D1B  2D16               	goto	u3235
 14072  0D1C  3001               	movlw	1
 14073  0D1D  00DF               	movwf	??___lldiv
 14074  0D1E  085F               	movf	??___lldiv,w
 14075  0D1F  07E4               	addwf	___lldiv@counter,f
 14076  0D20  2D13               	goto	l5326
 14077  0D21                     l5328:
 14078  0D21  3001               	movlw	1
 14079  0D22                     u3255:
 14080  0D22  35E0               	lslf	___lldiv@quotient,f
 14081  0D23  0DE1               	rlf	___lldiv@quotient+1,f
 14082  0D24  0DE2               	rlf	___lldiv@quotient+2,f
 14083  0D25  0DE3               	rlf	___lldiv@quotient+3,f
 14084  0D26  0B89               	decfsz	9,f
 14085  0D27  2D22               	goto	u3255
 14086  0D28  085A               	movf	___lldiv@divisor+3,w
 14087  0D29  025E               	subwf	___lldiv@dividend+3,w
 14088  0D2A  1D03               	skipz
 14089  0D2B  2D36               	goto	u3265
 14090  0D2C  0859               	movf	___lldiv@divisor+2,w
 14091  0D2D  025D               	subwf	___lldiv@dividend+2,w
 14092  0D2E  1D03               	skipz
 14093  0D2F  2D36               	goto	u3265
 14094  0D30  0858               	movf	___lldiv@divisor+1,w
 14095  0D31  025C               	subwf	___lldiv@dividend+1,w
 14096  0D32  1D03               	skipz
 14097  0D33  2D36               	goto	u3265
 14098  0D34  0857               	movf	___lldiv@divisor,w
 14099  0D35  025B               	subwf	___lldiv@dividend,w
 14100  0D36                     u3265:
 14101  0D36  1C03               	skipc
 14102  0D37  2D41               	goto	l5336
 14103  0D38  0857               	movf	___lldiv@divisor,w
 14104  0D39  02DB               	subwf	___lldiv@dividend,f
 14105  0D3A  0858               	movf	___lldiv@divisor+1,w
 14106  0D3B  3BDC               	subwfb	___lldiv@dividend+1,f
 14107  0D3C  0859               	movf	___lldiv@divisor+2,w
 14108  0D3D  3BDD               	subwfb	___lldiv@dividend+2,f
 14109  0D3E  085A               	movf	___lldiv@divisor+3,w
 14110  0D3F  3BDE               	subwfb	___lldiv@dividend+3,f
 14111  0D40  1460               	bsf	___lldiv@quotient,0
 14112  0D41                     l5336:
 14113  0D41  3001               	movlw	1
 14114  0D42                     u3275:
 14115  0D42  36DA               	lsrf	___lldiv@divisor+3,f
 14116  0D43  0CD9               	rrf	___lldiv@divisor+2,f
 14117  0D44  0CD8               	rrf	___lldiv@divisor+1,f
 14118  0D45  0CD7               	rrf	___lldiv@divisor,f
 14119  0D46  0B89               	decfsz	9,f
 14120  0D47  2D42               	goto	u3275
 14121  0D48  3001               	movlw	1
 14122  0D49  02E4               	subwf	___lldiv@counter,f
 14123  0D4A  1D03               	btfss	3,2
 14124  0D4B  2D21               	goto	l5328
 14125  0D4C                     l5340:
 14126  0D4C  0863               	movf	___lldiv@quotient+3,w
 14127  0D4D  00DA               	movwf	?___lldiv+3
 14128  0D4E  0862               	movf	___lldiv@quotient+2,w
 14129  0D4F  00D9               	movwf	?___lldiv+2
 14130  0D50  0861               	movf	___lldiv@quotient+1,w
 14131  0D51  00D8               	movwf	?___lldiv+1
 14132  0D52  0860               	movf	___lldiv@quotient,w
 14133  0D53  00D7               	movwf	?___lldiv
 14134  0D54  0008               	return
 14135  0D55                     __end_of___lldiv:
 14136                           
 14137                           	psect	text54
 14138  0CB5                     __ptext54:	
 14139 ;; *************** function _GetAmbientTemperature *****************
 14140 ;; Defined at:
 14141 ;;		line 490 in file "efuse.c"
 14142 ;; Parameters:    Size  Location     Type
 14143 ;;		None
 14144 ;; Auto vars:     Size  Location     Type
 14145 ;;  temperature     2    9[BANK0 ] short 
 14146 ;;  adcTemp         2    6[BANK0 ] unsigned short 
 14147 ;;  i               1    8[BANK0 ] unsigned char 
 14148 ;; Return value:  Size  Location     Type
 14149 ;;                  2    0[BANK0 ] short 
 14150 ;; Registers used:
 14151 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
 14152 ;; Tracked objects:
 14153 ;;		On entry : 3/3C
 14154 ;;		On exit  : 3F/0
 14155 ;;		Unchanged: 0/0
 14156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14157 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14158 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14159 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14160 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14161 ;;Total ram usage:       11 bytes
 14162 ;; Hardware stack levels used: 1
 14163 ;; Hardware stack levels required when called: 5
 14164 ;; This function calls:
 14165 ;;		Nothing
 14166 ;; This function is called by:
 14167 ;;		_EFuse
 14168 ;; This function uses a non-reentrant model
 14169 ;;
 14170                           
 14171                           
 14172                           ;psect for function _GetAmbientTemperature
 14173  0CB5                     _GetAmbientTemperature:
 14174                           
 14175                           ;efuse.c: 493:     uint16_t adcTemp = 0;
 14176                           
 14177                           ;incstack = 0
 14178                           ; Regs used in _GetAmbientTemperature: [wreg-fsr0h+status,2+status,0+pclath]
 14179  0CB5  0140               	movlb	0	; select bank0
 14180  0CB6  01D1               	clrf	GetAmbientTemperature@adcTemp
 14181  0CB7  01D2               	clrf	GetAmbientTemperature@adcTemp+1
 14182                           
 14183                           ;efuse.c: 494:     int16_t temperature = 0;
 14184  0CB8  01D4               	clrf	GetAmbientTemperature@temperature
 14185  0CB9  01D5               	clrf	GetAmbientTemperature@temperature+1
 14186                           
 14187                           ;efuse.c: 496:     adcTemp = adcTSense_prev;
 14188  0CBA  0821               	movf	_adcTSense_prev+1,w
 14189  0CBB  00D2               	movwf	GetAmbientTemperature@adcTemp+1
 14190  0CBC  0820               	movf	_adcTSense_prev,w
 14191  0CBD  00D1               	movwf	GetAmbientTemperature@adcTemp
 14192                           
 14193                           ;efuse.c: 497:     if (adcTSense_curr > adcTSense_prev)
 14194  0CBE  0875               	movf	_adcTSense_curr+1,w
 14195  0CBF  0221               	subwf	_adcTSense_prev+1,w
 14196  0CC0  1D03               	skipz
 14197  0CC1  2CC4               	goto	u2895
 14198  0CC2  0874               	movf	_adcTSense_curr,w
 14199  0CC3  0220               	subwf	_adcTSense_prev,w
 14200  0CC4                     u2895:
 14201  0CC4  1803               	skipnc
 14202  0CC5  2CCA               	goto	l1494
 14203                           
 14204                           ;efuse.c: 498:     {;efuse.c: 499:         adcTemp = adcTSense_curr;
 14205  0CC6  0875               	movf	_adcTSense_curr+1,w
 14206  0CC7  00D2               	movwf	GetAmbientTemperature@adcTemp+1
 14207  0CC8  0874               	movf	_adcTSense_curr,w
 14208  0CC9  00D1               	movwf	GetAmbientTemperature@adcTemp
 14209  0CCA                     l1494:	
 14210                           ;efuse.c: 500:     }
 14211                           
 14212                           
 14213                           ;efuse.c: 502:     temperature = 125;
 14214  0CCA  307D               	movlw	125
 14215  0CCB  00D4               	movwf	GetAmbientTemperature@temperature
 14216  0CCC  3000               	movlw	0
 14217  0CCD  00D5               	movwf	GetAmbientTemperature@temperature+1
 14218                           
 14219                           ;efuse.c: 503:     i = 0;
 14220  0CCE  01D3               	clrf	GetAmbientTemperature@i
 14221  0CCF                     l5030:	
 14222                           ;efuse.c: 504:     while(temperature > -40)
 14223                           
 14224                           
 14225                           ;efuse.c: 504:     while(temperature > -40)
 14226  0CCF  0855               	movf	GetAmbientTemperature@temperature+1,w
 14227  0CD0  3A80               	xorlw	128
 14228  0CD1  00CD               	movwf	??_GetAmbientTemperature
 14229  0CD2  307F               	movlw	127
 14230  0CD3  024D               	subwf	??_GetAmbientTemperature,w
 14231  0CD4  1D03               	skipz
 14232  0CD5  2CD8               	goto	u2915
 14233  0CD6  30D9               	movlw	217
 14234  0CD7  0254               	subwf	GetAmbientTemperature@temperature,w
 14235  0CD8                     u2915:
 14236  0CD8  1C03               	btfss	3,0
 14237  0CD9  2CF2               	goto	l5022
 14238                           
 14239                           ;efuse.c: 505:     {;efuse.c: 506:         if(adcTemp <= temperatureLUT[i])
 14240  0CDA  0140               	movlb	0	; select bank0
 14241  0CDB  0853               	movf	GetAmbientTemperature@i,w
 14242  0CDC  00CD               	movwf	??_GetAmbientTemperature
 14243  0CDD  01CE               	clrf	??_GetAmbientTemperature+1
 14244  0CDE  35CD               	lslf	??_GetAmbientTemperature,f
 14245  0CDF  0DCE               	rlf	??_GetAmbientTemperature+1,f
 14246  0CE0  3052               	movlw	low (_temperatureLUT| (0+32768))
 14247  0CE1  074D               	addwf	??_GetAmbientTemperature,w
 14248  0CE2  0084               	movwf	4
 14249  0CE3  3082               	movlw	high (_temperatureLUT| (0+32768))
 14250  0CE4  3D4E               	addwfc	??_GetAmbientTemperature+1,w
 14251  0CE5  0085               	movwf	5
 14252  0CE6  3F00               	moviw [0]fsr0
 14253  0CE7  00CF               	movwf	??_GetAmbientTemperature+2
 14254  0CE8  3F01               	moviw [1]fsr0
 14255  0CE9  00D0               	movwf	??_GetAmbientTemperature+3
 14256  0CEA  0852               	movf	GetAmbientTemperature@adcTemp+1,w
 14257  0CEB  0250               	subwf	??_GetAmbientTemperature+3,w
 14258  0CEC  1D03               	skipz
 14259  0CED  2CF0               	goto	u2905
 14260  0CEE  0851               	movf	GetAmbientTemperature@adcTemp,w
 14261  0CEF  024F               	subwf	??_GetAmbientTemperature+2,w
 14262  0CF0                     u2905:
 14263  0CF0  1C03               	skipc
 14264  0CF1  2CF8               	goto	l5028
 14265  0CF2                     l5022:
 14266                           
 14267                           ;efuse.c: 507:         {;efuse.c: 508:             return temperature;
 14268  0CF2  0140               	movlb	0	; select bank0
 14269  0CF3  0855               	movf	GetAmbientTemperature@temperature+1,w
 14270  0CF4  00CC               	movwf	?_GetAmbientTemperature+1
 14271  0CF5  0854               	movf	GetAmbientTemperature@temperature,w
 14272  0CF6  00CB               	movwf	?_GetAmbientTemperature
 14273  0CF7  0008               	return
 14274  0CF8                     l5028:
 14275                           
 14276                           ;efuse.c: 511:         {;efuse.c: 512:             temperature = temperature + -1;
 14277  0CF8  0854               	movf	GetAmbientTemperature@temperature,w
 14278  0CF9  3EFF               	addlw	255
 14279  0CFA  00D4               	movwf	GetAmbientTemperature@temperature
 14280  0CFB  30FF               	movlw	255
 14281  0CFC  3D55               	addwfc	GetAmbientTemperature@temperature+1,w
 14282  0CFD  00D5               	movwf	GetAmbientTemperature@temperature+1
 14283                           
 14284                           ;efuse.c: 513:             i++;
 14285  0CFE  3001               	movlw	1
 14286  0CFF  00CD               	movwf	??_GetAmbientTemperature
 14287  0D00  084D               	movf	??_GetAmbientTemperature,w
 14288  0D01  07D3               	addwf	GetAmbientTemperature@i,f
 14289  0D02  2CCF               	goto	l5030
 14290  0D03                     __end_of_GetAmbientTemperature:
 14291                           
 14292                           	psect	text55
 14293  0DB1                     __ptext55:	
 14294 ;; *************** function _CmdOutput *****************
 14295 ;; Defined at:
 14296 ;;		line 390 in file "efuse.c"
 14297 ;; Parameters:    Size  Location     Type
 14298 ;;  enable          1    wreg     unsigned char 
 14299 ;; Auto vars:     Size  Location     Type
 14300 ;;  enable          1    4[BANK0 ] unsigned char 
 14301 ;; Return value:  Size  Location     Type
 14302 ;;                  1    wreg      void 
 14303 ;; Registers used:
 14304 ;;		wreg, status,2, status,0, pclath, cstack
 14305 ;; Tracked objects:
 14306 ;;		On entry : 0/0
 14307 ;;		On exit  : 3F/0
 14308 ;;		Unchanged: 0/0
 14309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14311 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14312 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14313 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14314 ;;Total ram usage:        3 bytes
 14315 ;; Hardware stack levels used: 1
 14316 ;; Hardware stack levels required when called: 6
 14317 ;; This function calls:
 14318 ;;		_TMR1_StartTimer
 14319 ;;		_TMR1_StopTimer
 14320 ;;		_TMR1_WriteTimer
 14321 ;;		_TMR2_Initialize
 14322 ;;		_TMR2_Start
 14323 ;;		_TMR2_Stop
 14324 ;; This function is called by:
 14325 ;;		_processLIN
 14326 ;;		_main
 14327 ;;		_EFuseInit
 14328 ;;		_EFuse
 14329 ;; This function uses a non-reentrant model
 14330 ;;
 14331                           
 14332                           
 14333                           ;psect for function _CmdOutput
 14334  0DB1                     _CmdOutput:
 14335                           
 14336                           ;incstack = 0
 14337                           ; Regs used in _CmdOutput: [wreg+status,2+status,0+pclath+cstack]
 14338                           ;CmdOutput@enable stored from wreg
 14339  0DB1  0140               	movlb	0	; select bank0
 14340  0DB2  00CF               	movwf	CmdOutput@enable
 14341                           
 14342                           ;efuse.c: 390: void CmdOutput(uint8_t enable);efuse.c: 391: {;efuse.c: 392:     TMR2_Sto
      +                          p();
 14343  0DB3  3197  2764  318D   	fcall	_TMR2_Stop
 14344                           
 14345                           ;efuse.c: 395:     CLC1POLbits.LC1G4POL = 0;
 14346  0DB6  017C               	movlb	60	; select bank60
 14347  0DB7  1191               	bcf	17,3	;volatile
 14348                           
 14349                           ;efuse.c: 396:     CLC1GLS3bits.LC1G4D3N = 0;
 14350  0DB8  1219               	bcf	25,4	;volatile
 14351                           
 14352                           ;efuse.c: 397:     CLC1GLS3bits.LC1G4D4T = 0;
 14353  0DB9  1399               	bcf	25,7	;volatile
 14354                           
 14355                           ;efuse.c: 401:     T1GCON = 0x80;
 14356  0DBA  3080               	movlw	128
 14357  0DBB  0144               	movlb	4	; select bank4
 14358  0DBC  008F               	movwf	15	;volatile
 14359                           
 14360                           ;efuse.c: 404:     T1GATE = 0x0D;
 14361  0DBD  300D               	movlw	13
 14362  0DBE  0090               	movwf	16	;volatile
 14363                           
 14364                           ;efuse.c: 406:     CLC3CONbits.EN = 0;
 14365  0DBF  017C               	movlb	60	; select bank60
 14366  0DC0  13A4               	bcf	36,7	;volatile
 14367                           
 14368                           ;efuse.c: 409:     CLC1POLbits.LC1G2POL = 1;
 14369  0DC1  1491               	bsf	17,1	;volatile
 14370                           
 14371                           ;efuse.c: 410:     CLC1POLbits.LC1G2POL = 0;
 14372  0DC2  1091               	bcf	17,1	;volatile
 14373                           
 14374                           ;efuse.c: 412:     _delay((unsigned long)((1)*(32000000/4000000.0)));
 14375  0DC3  3200               	nop2	;2 cycle nop
 14376  0DC4  3200               	nop2	;2 cycle nop
 14377  0DC5  3200               	nop2	;2 cycle nop
 14378  0DC6  3200               	nop2	;2 cycle nop
 14379                           
 14380                           ;efuse.c: 415:     CLC2POLbits.LC2G2POL = 1;
 14381  0DC7  017C               	movlb	60	; select bank60
 14382  0DC8  149B               	bsf	27,1	;volatile
 14383                           
 14384                           ;efuse.c: 416:     CLC2POLbits.LC2G2POL = 0;
 14385  0DC9  109B               	bcf	27,1	;volatile
 14386                           
 14387                           ;efuse.c: 418:     outputState = OUTPUT_OFF;
 14388  0DCA  0140               	movlb	0	; select bank0
 14389  0DCB  01AC               	clrf	_outputState
 14390                           
 14391                           ;efuse.c: 421:     if (enable)
 14392  0DCC  084F               	movf	CmdOutput@enable,w
 14393  0DCD  1903               	btfsc	3,2
 14394  0DCE  0008               	return
 14395                           
 14396                           ;efuse.c: 422:     {;efuse.c: 423:         overCurrentFault = NO_OVER_CURRENT_FAULT;
 14397  0DCF  01AB               	clrf	_overCurrentFault
 14398                           
 14399                           ;efuse.c: 424:         uvloFault = NO_UVLO_FAULT;
 14400  0DD0  01AA               	clrf	_uvloFault
 14401                           
 14402                           ;efuse.c: 425:         overTempFault = NO_TEMP_FAULT;
 14403  0DD1  01A9               	clrf	_overTempFault
 14404  0DD2  1794               	bsf	20,7	;volatile
 14405                           
 14406                           ;efuse.c: 430:         CLC1CONbits.LC1EN = 1;
 14407  0DD3  017C               	movlb	60	; select bank60
 14408  0DD4  1790               	bsf	16,7	;volatile
 14409                           
 14410                           ;efuse.c: 431:         CLC1POLbits.LC1G4POL = 0;
 14411  0DD5  1191               	bcf	17,3	;volatile
 14412                           
 14413                           ;efuse.c: 432:         CLC1POLbits.LC1G3POL = 0;
 14414  0DD6  1111               	bcf	17,2	;volatile
 14415                           
 14416                           ;efuse.c: 433:         CLC1POLbits.LC1G3POL = 1;
 14417  0DD7  1511               	bsf	17,2	;volatile
 14418                           
 14419                           ;efuse.c: 434:         CLC1POLbits.LC1G3POL = 0;
 14420  0DD8  1111               	bcf	17,2	;volatile
 14421                           
 14422                           ;efuse.c: 435:         CLC1POLbits.LC1POL = 1;
 14423  0DD9  1791               	bsf	17,7	;volatile
 14424                           
 14425                           ;efuse.c: 438:         CLC2POLbits.LC2G4POL = 0;
 14426  0DDA  119B               	bcf	27,3	;volatile
 14427                           
 14428                           ;efuse.c: 439:         CLC2POLbits.LC2G3POL = 0;
 14429  0DDB  111B               	bcf	27,2	;volatile
 14430                           
 14431                           ;efuse.c: 440:         CLC2POLbits.LC2G3POL = 1;
 14432  0DDC  151B               	bsf	27,2	;volatile
 14433                           
 14434                           ;efuse.c: 441:         CLC2POLbits.LC2G3POL = 0;
 14435  0DDD  111B               	bcf	27,2	;volatile
 14436                           
 14437                           ;efuse.c: 443:         if(triggerType == TRIGGER_TIMER_OVERFLOW)
 14438  0DDE  0140               	movlb	0	; select bank0
 14439  0DDF  032E               	decf	_triggerType,w
 14440  0DE0  1D03               	btfss	3,2
 14441  0DE1  2DF3               	goto	l1485
 14442                           
 14443                           ;efuse.c: 444:         {;efuse.c: 447:             CLC1POLbits.LC1G4POL = 1;
 14444  0DE2  017C               	movlb	60	; select bank60
 14445  0DE3  1591               	bsf	17,3	;volatile
 14446                           
 14447                           ;efuse.c: 448:             CLC1GLS3bits.LC1G4D3N = 1;
 14448  0DE4  1619               	bsf	25,4	;volatile
 14449                           
 14450                           ;efuse.c: 449:             CLC1GLS3bits.LC1G4D4T = 1;
 14451  0DE5  1799               	bsf	25,7	;volatile
 14452                           
 14453                           ;efuse.c: 452:             T1GCON = 0xC0;
 14454  0DE6  30C0               	movlw	192
 14455  0DE7  0144               	movlb	4	; select bank4
 14456  0DE8  008F               	movwf	15	;volatile
 14457                           
 14458                           ;efuse.c: 455:             T1GATE = 0x0B;
 14459  0DE9  300B               	movlw	11
 14460  0DEA  0090               	movwf	16	;volatile
 14461                           
 14462                           ;efuse.c: 457:             TMR2_Initialize();
 14463  0DEB  3188  20BB  318D   	fcall	_TMR2_Initialize
 14464                           
 14465                           ;efuse.c: 458:             TMR2_Start();
 14466  0DEE  3197  274D  318D   	fcall	_TMR2_Start
 14467                           
 14468                           ;efuse.c: 460:             CLC3CONbits.EN = 1;
 14469  0DF1  017C               	movlb	60	; select bank60
 14470  0DF2  17A4               	bsf	36,7	;volatile
 14471  0DF3                     l1485:	
 14472                           ;efuse.c: 461:         }
 14473                           
 14474                           
 14475                           ;efuse.c: 464:         TMR1_StopTimer();
 14476  0DF3  3197  2761  318D   	fcall	_TMR1_StopTimer
 14477                           
 14478                           ;efuse.c: 465:         TMR1_WriteTimer( 0xffff - reduced_drive_time );
 14479  0DF6  0140               	movlb	0	; select bank0
 14480  0DF7  082D               	movf	_reduced_drive_time,w
 14481  0DF8  00CD               	movwf	??_CmdOutput
 14482  0DF9  01CE               	clrf	??_CmdOutput+1
 14483  0DFA  094D               	comf	??_CmdOutput,w
 14484  0DFB  00CB               	movwf	TMR1_WriteTimer@timerVal
 14485  0DFC  094E               	comf	??_CmdOutput+1,w
 14486  0DFD  00CC               	movwf	TMR1_WriteTimer@timerVal+1
 14487  0DFE  3189  213F  318D   	fcall	_TMR1_WriteTimer
 14488                           
 14489                           ;efuse.c: 466:         PIR4bits.TMR1IF = 0;
 14490  0E01  014E               	movlb	14	; select bank14
 14491  0E02  1010               	bcf	16,0	;volatile
 14492                           
 14493                           ;efuse.c: 467:         TMR1_StartTimer();
 14494  0E03  3197  275E         	fcall	_TMR1_StartTimer
 14495                           
 14496                           ;efuse.c: 469:         iSenseOffset = adcISense_curr;
 14497  0E05  0140               	movlb	0	; select bank0
 14498  0E06  083C               	movf	_adcISense_curr+1,w
 14499  0E07  00B8               	movwf	_iSenseOffset+1
 14500  0E08  083B               	movf	_adcISense_curr,w
 14501  0E09  00B7               	movwf	_iSenseOffset
 14502                           
 14503                           ;efuse.c: 470:         outputState = OUTPUT_ON;
 14504  0E0A  01AC               	clrf	_outputState
 14505  0E0B  0AAC               	incf	_outputState,f
 14506  0E0C  1394               	bcf	20,7	;volatile
 14507  0E0D  0008               	return
 14508  0E0E                     __end_of_CmdOutput:
 14509                           
 14510                           	psect	text56
 14511  1764                     __ptext56:	
 14512 ;; *************** function _TMR2_Stop *****************
 14513 ;; Defined at:
 14514 ;;		line 111 in file "mcc_generated_files/tmr2.c"
 14515 ;; Parameters:    Size  Location     Type
 14516 ;;		None
 14517 ;; Auto vars:     Size  Location     Type
 14518 ;;		None
 14519 ;; Return value:  Size  Location     Type
 14520 ;;                  1    wreg      void 
 14521 ;; Registers used:
 14522 ;;		None
 14523 ;; Tracked objects:
 14524 ;;		On entry : 3F/0
 14525 ;;		On exit  : 3F/5
 14526 ;;		Unchanged: 0/0
 14527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14532 ;;Total ram usage:        0 bytes
 14533 ;; Hardware stack levels used: 1
 14534 ;; Hardware stack levels required when called: 5
 14535 ;; This function calls:
 14536 ;;		Nothing
 14537 ;; This function is called by:
 14538 ;;		_CmdOutput
 14539 ;; This function uses a non-reentrant model
 14540 ;;
 14541                           
 14542                           
 14543                           ;psect for function _TMR2_Stop
 14544  1764                     _TMR2_Stop:
 14545                           
 14546                           ;mcc_generated_files/tmr2.c: 114:     T2CONbits.TMR2ON = 0;
 14547                           
 14548                           ;incstack = 0
 14549                           ; Regs used in _TMR2_Stop: []
 14550  1764  0145               	movlb	5	; select bank5
 14551  1765  138E               	bcf	14,7	;volatile
 14552  1766  0008               	return
 14553  1767                     __end_of_TMR2_Stop:
 14554                           
 14555                           	psect	text57
 14556  174D                     __ptext57:	
 14557 ;; *************** function _TMR2_Start *****************
 14558 ;; Defined at:
 14559 ;;		line 100 in file "mcc_generated_files/tmr2.c"
 14560 ;; Parameters:    Size  Location     Type
 14561 ;;		None
 14562 ;; Auto vars:     Size  Location     Type
 14563 ;;		None
 14564 ;; Return value:  Size  Location     Type
 14565 ;;                  1    wreg      void 
 14566 ;; Registers used:
 14567 ;;		None
 14568 ;; Tracked objects:
 14569 ;;		On entry : 3F/5
 14570 ;;		On exit  : 3F/5
 14571 ;;		Unchanged: 0/0
 14572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14576 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14577 ;;Total ram usage:        0 bytes
 14578 ;; Hardware stack levels used: 1
 14579 ;; Hardware stack levels required when called: 5
 14580 ;; This function calls:
 14581 ;;		Nothing
 14582 ;; This function is called by:
 14583 ;;		_CmdOutput
 14584 ;; This function uses a non-reentrant model
 14585 ;;
 14586                           
 14587                           
 14588                           ;psect for function _TMR2_Start
 14589  174D                     _TMR2_Start:
 14590                           
 14591                           ;mcc_generated_files/tmr2.c: 103:     T2CONbits.TMR2ON = 1;
 14592                           
 14593                           ;incstack = 0
 14594                           ; Regs used in _TMR2_Start: []
 14595  174D  178E               	bsf	14,7	;volatile
 14596  174E  0008               	return
 14597  174F                     __end_of_TMR2_Start:
 14598                           
 14599                           	psect	text58
 14600  08BB                     __ptext58:	
 14601 ;; *************** function _TMR2_Initialize *****************
 14602 ;; Defined at:
 14603 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 14604 ;; Parameters:    Size  Location     Type
 14605 ;;		None
 14606 ;; Auto vars:     Size  Location     Type
 14607 ;;		None
 14608 ;; Return value:  Size  Location     Type
 14609 ;;                  1    wreg      void 
 14610 ;; Registers used:
 14611 ;;		wreg, status,2
 14612 ;; Tracked objects:
 14613 ;;		On entry : 35/E
 14614 ;;		On exit  : 3F/5
 14615 ;;		Unchanged: 0/0
 14616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14620 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14621 ;;Total ram usage:        0 bytes
 14622 ;; Hardware stack levels used: 1
 14623 ;; Hardware stack levels required when called: 5
 14624 ;; This function calls:
 14625 ;;		Nothing
 14626 ;; This function is called by:
 14627 ;;		_SYSTEM_Initialize
 14628 ;;		_CmdOutput
 14629 ;; This function uses a non-reentrant model
 14630 ;;
 14631                           
 14632                           
 14633                           ;psect for function _TMR2_Initialize
 14634  08BB                     _TMR2_Initialize:
 14635                           
 14636                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x0D;
 14637                           
 14638                           ;incstack = 0
 14639                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 14640  08BB  300D               	movlw	13
 14641  08BC  0145               	movlb	5	; select bank5
 14642  08BD  0090               	movwf	16	;volatile
 14643                           
 14644                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 14645  08BE  018F               	clrf	15	;volatile
 14646                           
 14647                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 14648  08BF  0191               	clrf	17	;volatile
 14649                           
 14650                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x27;
 14651  08C0  3027               	movlw	39
 14652  08C1  008D               	movwf	13	;volatile
 14653                           
 14654                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 14655  08C2  018C               	clrf	12	;volatile
 14656                           
 14657                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 14658  08C3  014E               	movlb	14	; select bank14
 14659  08C4  1090               	bcf	16,1	;volatile
 14660                           
 14661                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xB0;
 14662  08C5  30B0               	movlw	176
 14663  08C6  0145               	movlb	5	; select bank5
 14664  08C7  008E               	movwf	14	;volatile
 14665  08C8  0008               	return
 14666  08C9                     __end_of_TMR2_Initialize:
 14667                           
 14668                           	psect	text59
 14669  093F                     __ptext59:	
 14670 ;; *************** function _TMR1_WriteTimer *****************
 14671 ;; Defined at:
 14672 ;;		line 120 in file "mcc_generated_files/tmr1.c"
 14673 ;; Parameters:    Size  Location     Type
 14674 ;;  timerVal        2    0[BANK0 ] unsigned short 
 14675 ;; Auto vars:     Size  Location     Type
 14676 ;;		None
 14677 ;; Return value:  Size  Location     Type
 14678 ;;                  1    wreg      void 
 14679 ;; Registers used:
 14680 ;;		wreg
 14681 ;; Tracked objects:
 14682 ;;		On entry : 3F/0
 14683 ;;		On exit  : 3F/4
 14684 ;;		Unchanged: 0/0
 14685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14686 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14689 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14690 ;;Total ram usage:        2 bytes
 14691 ;; Hardware stack levels used: 1
 14692 ;; Hardware stack levels required when called: 5
 14693 ;; This function calls:
 14694 ;;		Nothing
 14695 ;; This function is called by:
 14696 ;;		_CmdOutput
 14697 ;; This function uses a non-reentrant model
 14698 ;;
 14699                           
 14700                           
 14701                           ;psect for function _TMR1_WriteTimer
 14702  093F                     _TMR1_WriteTimer:
 14703                           
 14704                           ;mcc_generated_files/tmr1.c: 120: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 121: {;mcc_generated_files/tmr1.c: 122:     if (T1CONbits.nT1SYNC == 1)
 14705                           
 14706                           ;incstack = 0
 14707                           ; Regs used in _TMR1_WriteTimer: [wreg]
 14708  093F  0144               	movlb	4	; select bank4
 14709  0940  1D0E               	btfss	14,2	;volatile
 14710  0941  294D               	goto	l4346
 14711                           
 14712                           ;mcc_generated_files/tmr1.c: 123:     {;mcc_generated_files/tmr1.c: 125:         T1CONbi
      +                          ts.TMR1ON = 0;
 14713  0942  100E               	bcf	14,0	;volatile
 14714                           
 14715                           ;mcc_generated_files/tmr1.c: 128:         TMR1H = (uint8_t)(timerVal >> 8);
 14716  0943  0140               	movlb	0	; select bank0
 14717  0944  084C               	movf	TMR1_WriteTimer@timerVal+1,w
 14718  0945  0144               	movlb	4	; select bank4
 14719  0946  008D               	movwf	13	;volatile
 14720                           
 14721                           ;mcc_generated_files/tmr1.c: 129:         TMR1L = (uint8_t)timerVal;
 14722  0947  0140               	movlb	0	; select bank0
 14723  0948  084B               	movf	TMR1_WriteTimer@timerVal,w
 14724  0949  0144               	movlb	4	; select bank4
 14725  094A  008C               	movwf	12	;volatile
 14726                           
 14727                           ;mcc_generated_files/tmr1.c: 132:         T1CONbits.TMR1ON =1;
 14728  094B  140E               	bsf	14,0	;volatile
 14729                           
 14730                           ;mcc_generated_files/tmr1.c: 133:     }
 14731  094C  0008               	return
 14732  094D                     l4346:
 14733                           
 14734                           ;mcc_generated_files/tmr1.c: 135:     {;mcc_generated_files/tmr1.c: 137:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
 14735  094D  0140               	movlb	0	; select bank0
 14736  094E  084C               	movf	TMR1_WriteTimer@timerVal+1,w
 14737  094F  0144               	movlb	4	; select bank4
 14738  0950  008D               	movwf	13	;volatile
 14739                           
 14740                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = (uint8_t)timerVal;
 14741  0951  0140               	movlb	0	; select bank0
 14742  0952  084B               	movf	TMR1_WriteTimer@timerVal,w
 14743  0953  0144               	movlb	4	; select bank4
 14744  0954  008C               	movwf	12	;volatile
 14745  0955  0008               	return
 14746  0956                     __end_of_TMR1_WriteTimer:
 14747                           
 14748                           	psect	text60
 14749  1761                     __ptext60:	
 14750 ;; *************** function _TMR1_StopTimer *****************
 14751 ;; Defined at:
 14752 ;;		line 98 in file "mcc_generated_files/tmr1.c"
 14753 ;; Parameters:    Size  Location     Type
 14754 ;;		None
 14755 ;; Auto vars:     Size  Location     Type
 14756 ;;		None
 14757 ;; Return value:  Size  Location     Type
 14758 ;;                  1    wreg      void 
 14759 ;; Registers used:
 14760 ;;		None
 14761 ;; Tracked objects:
 14762 ;;		On entry : 3/0
 14763 ;;		On exit  : 3F/4
 14764 ;;		Unchanged: 0/0
 14765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14769 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14770 ;;Total ram usage:        0 bytes
 14771 ;; Hardware stack levels used: 1
 14772 ;; Hardware stack levels required when called: 5
 14773 ;; This function calls:
 14774 ;;		Nothing
 14775 ;; This function is called by:
 14776 ;;		_CmdOutput
 14777 ;; This function uses a non-reentrant model
 14778 ;;
 14779                           
 14780                           
 14781                           ;psect for function _TMR1_StopTimer
 14782  1761                     _TMR1_StopTimer:
 14783                           
 14784                           ;mcc_generated_files/tmr1.c: 101:     T1CONbits.TMR1ON = 0;
 14785                           
 14786                           ;incstack = 0
 14787                           ; Regs used in _TMR1_StopTimer: []
 14788  1761  0144               	movlb	4	; select bank4
 14789  1762  100E               	bcf	14,0	;volatile
 14790  1763  0008               	return
 14791  1764                     __end_of_TMR1_StopTimer:
 14792                           
 14793                           	psect	text61
 14794  175E                     __ptext61:	
 14795 ;; *************** function _TMR1_StartTimer *****************
 14796 ;; Defined at:
 14797 ;;		line 92 in file "mcc_generated_files/tmr1.c"
 14798 ;; Parameters:    Size  Location     Type
 14799 ;;		None
 14800 ;; Auto vars:     Size  Location     Type
 14801 ;;		None
 14802 ;; Return value:  Size  Location     Type
 14803 ;;                  1    wreg      void 
 14804 ;; Registers used:
 14805 ;;		None
 14806 ;; Tracked objects:
 14807 ;;		On entry : 3F/E
 14808 ;;		On exit  : 3F/4
 14809 ;;		Unchanged: 0/0
 14810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14814 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14815 ;;Total ram usage:        0 bytes
 14816 ;; Hardware stack levels used: 1
 14817 ;; Hardware stack levels required when called: 5
 14818 ;; This function calls:
 14819 ;;		Nothing
 14820 ;; This function is called by:
 14821 ;;		_CmdOutput
 14822 ;; This function uses a non-reentrant model
 14823 ;;
 14824                           
 14825                           
 14826                           ;psect for function _TMR1_StartTimer
 14827  175E                     _TMR1_StartTimer:
 14828                           
 14829                           ;mcc_generated_files/tmr1.c: 95:     T1CONbits.TMR1ON = 1;
 14830                           
 14831                           ;incstack = 0
 14832                           ; Regs used in _TMR1_StartTimer: []
 14833  175E  0144               	movlb	4	; select bank4
 14834  175F  140E               	bsf	14,0	;volatile
 14835  1760  0008               	return
 14836  1761                     __end_of_TMR1_StartTimer:
 14837                           
 14838                           	psect	intentry
 14839  0004                     __pintentry:	
 14840 ;; *************** function _INTERRUPT_InterruptManager *****************
 14841 ;; Defined at:
 14842 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 14843 ;; Parameters:    Size  Location     Type
 14844 ;;		None
 14845 ;; Auto vars:     Size  Location     Type
 14846 ;;		None
 14847 ;; Return value:  Size  Location     Type
 14848 ;;                  1    wreg      void 
 14849 ;; Registers used:
 14850 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14851 ;; Tracked objects:
 14852 ;;		On entry : 0/0
 14853 ;;		On exit  : 0/0
 14854 ;;		Unchanged: 0/0
 14855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14859 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14860 ;;Total ram usage:        0 bytes
 14861 ;; Hardware stack levels used: 1
 14862 ;; Hardware stack levels required when called: 4
 14863 ;; This function calls:
 14864 ;;		Absolute function
 14865 ;;		_CLC2_ISR
 14866 ;;		_EUSART1_Receive_ISR
 14867 ;;		_EUSART1_Transmit_ISR
 14868 ;;		_TMR0_ISR
 14869 ;; This function is called by:
 14870 ;;		Interrupt level 1
 14871 ;; This function uses a non-reentrant model
 14872 ;;
 14873                           
 14874  0004                     _INTERRUPT_InterruptManager:
 14875                           
 14876                           ;incstack = 0
 14877  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 14878                           
 14879                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 14880  0005  3180               	pagesel	$
 14881                           
 14882                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
 14883  0006  014E               	movlb	14	; select bank14
 14884  0007  1A96               	btfsc	22,5	;volatile
 14885  0008  1E8C               	btfss	12,5	;volatile
 14886  0009  280E               	goto	i1l1062
 14887                           
 14888                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
 14889  000A  3189  21B7  3180   	fcall	_TMR0_ISR
 14890                           
 14891                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 14892  000D  282A               	goto	i1l1072
 14893  000E                     i1l1062:	
 14894                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
 14895                           
 14896  000E  1F0B               	btfss	11,6	;volatile
 14897  000F  282A               	goto	i1l1072
 14898                           
 14899                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE5bits.CLC2IE == 1 && PIR5bits.CLC2IF == 1)
 14900  0010  1A9B               	btfsc	27,5	;volatile
 14901  0011  1E91               	btfss	17,5	;volatile
 14902  0012  2817               	goto	i1l1065
 14903                           
 14904                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             CLC2_ISR();
 14905  0013  3197  2749  3180   	fcall	_CLC2_ISR
 14906                           
 14907                           ;mcc_generated_files/interrupt_manager.c: 64:         }
 14908  0016  282A               	goto	i1l1072
 14909  0017                     i1l1065:	
 14910                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE3bits.TX1IE == 1 && PIR
      +                          3bits.TX1IF == 1)
 14911                           
 14912  0017  1A19               	btfsc	25,4	;volatile
 14913  0018  1E0F               	btfss	15,4	;volatile
 14914  0019  2821               	goto	i1l1067
 14915                           
 14916                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             EUSART1_TxDefaultInterruptHandler();
 14917  001A  0142               	movlb	2	; select bank2
 14918  001B  0867               	movf	(_EUSART1_TxDefaultInterruptHandler+1)^(0+256),w
 14919  001C  008A               	movwf	10
 14920  001D  0866               	movf	_EUSART1_TxDefaultInterruptHandler^(0+256),w
 14921  001E  000A               	callw
 14922  001F  3180               	pagesel	$
 14923                           
 14924                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 14925  0020  282A               	goto	i1l1072
 14926  0021                     i1l1067:	
 14927                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE3bits.RC1IE == 1 && PIR
      +                          3bits.RC1IF == 1)
 14928                           
 14929  0021  1A99               	btfsc	25,5	;volatile
 14930  0022  1E8F               	btfss	15,5	;volatile
 14931  0023  282A               	goto	i1l1072
 14932                           
 14933                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             EUSART1_RxDefaultInterruptHandler();
 14934  0024  0142               	movlb	2	; select bank2
 14935  0025  0865               	movf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+256),w
 14936  0026  008A               	movwf	10
 14937  0027  0864               	movf	_EUSART1_RxDefaultInterruptHandler^(0+256),w
 14938  0028  000A               	callw
 14939  0029  3180               	pagesel	$
 14940  002A                     i1l1072:	
 14941                           ;mcc_generated_files/interrupt_manager.c: 77:     }
 14942                           
 14943                           ;mcc_generated_files/interrupt_manager.c: 72:         }
 14944                           
 14945  002A  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 14946  002B  0009               	retfie
 14947  002C                     __end_of_INTERRUPT_InterruptManager:
 14948                           
 14949                           	psect	text63
 14950  09B7                     __ptext63:	
 14951 ;; *************** function _TMR0_ISR *****************
 14952 ;; Defined at:
 14953 ;;		line 136 in file "mcc_generated_files/tmr0.c"
 14954 ;; Parameters:    Size  Location     Type
 14955 ;;		None
 14956 ;; Auto vars:     Size  Location     Type
 14957 ;;		None
 14958 ;; Return value:  Size  Location     Type
 14959 ;;                  1    wreg      void 
 14960 ;; Registers used:
 14961 ;;		wreg, status,2, status,0, pclath, cstack
 14962 ;; Tracked objects:
 14963 ;;		On entry : 3F/E
 14964 ;;		On exit  : 3F/1
 14965 ;;		Unchanged: 0/0
 14966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14970 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14971 ;;Total ram usage:        0 bytes
 14972 ;; Hardware stack levels used: 1
 14973 ;; Hardware stack levels required when called: 3
 14974 ;; This function calls:
 14975 ;;		Absolute function
 14976 ;;		_LIN_timerHandler
 14977 ;;		_ProcessAnalogInputs
 14978 ;;		_TMR0_DefaultInterruptHandler
 14979 ;; This function is called by:
 14980 ;;		_INTERRUPT_InterruptManager
 14981 ;; This function uses a non-reentrant model
 14982 ;;
 14983                           
 14984                           
 14985                           ;psect for function _TMR0_ISR
 14986  09B7                     _TMR0_ISR:
 14987                           
 14988                           ;mcc_generated_files/tmr0.c: 139:     PIR0bits.TMR0IF = 0;
 14989                           
 14990                           ;incstack = 0
 14991                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 14992  09B7  128C               	bcf	12,5	;volatile
 14993                           
 14994                           ;mcc_generated_files/tmr0.c: 141:     TMR0H = timer0ReloadVal16bit >> 8;
 14995  09B8  0140               	movlb	0	; select bank0
 14996  09B9  086F               	movf	_timer0ReloadVal16bit+1,w	;volatile
 14997  09BA  014B               	movlb	11	; select bank11
 14998  09BB  009D               	movwf	29	;volatile
 14999                           
 15000                           ;mcc_generated_files/tmr0.c: 142:     TMR0L = (uint8_t) timer0ReloadVal16bit;
 15001  09BC  0140               	movlb	0	; select bank0
 15002  09BD  086E               	movf	_timer0ReloadVal16bit,w	;volatile
 15003  09BE  014B               	movlb	11	; select bank11
 15004  09BF  009C               	movwf	28	;volatile
 15005                           
 15006                           ;mcc_generated_files/tmr0.c: 144:     if(TMR0_InterruptHandler)
 15007  09C0  0142               	movlb	2	; select bank2
 15008  09C1  085C               	movf	_TMR0_InterruptHandler^(0+256),w
 15009  09C2  045D               	iorwf	(_TMR0_InterruptHandler+1)^(0+256),w
 15010  09C3  1903               	btfsc	3,2
 15011  09C4  29CA               	goto	i1l854
 15012                           
 15013                           ;mcc_generated_files/tmr0.c: 145:     {;mcc_generated_files/tmr0.c: 146:         TMR0_In
      +                          terruptHandler();
 15014  09C5  085D               	movf	(_TMR0_InterruptHandler+1)^(0+256),w
 15015  09C6  008A               	movwf	10
 15016  09C7  085C               	movf	_TMR0_InterruptHandler^(0+256),w
 15017  09C8  000A               	callw
 15018  09C9  3189               	pagesel	$
 15019  09CA                     i1l854:	
 15020                           ;mcc_generated_files/tmr0.c: 147:     }
 15021                           
 15022                           
 15023                           ;mcc_generated_files/tmr0.c: 150:     ProcessAnalogInputs();
 15024  09CA  3186  2695         	fcall	_ProcessAnalogInputs
 15025                           
 15026                           ;mcc_generated_files/tmr0.c: 151:     ticks_1ms++;
 15027  09CC  3001               	movlw	1
 15028  09CD  0141               	movlb	1	; select bank1
 15029  09CE  07B4               	addwf	_ticks_1ms^(0+128),f
 15030  09CF  3000               	movlw	0
 15031  09D0  3DB5               	addwfc	(_ticks_1ms+1)^(0+128),f
 15032  09D1  0008               	return
 15033  09D2                     __end_of_TMR0_ISR:
 15034                           
 15035                           	psect	text64
 15036  0887                     __ptext64:	
 15037 ;; *************** function _LIN_timerHandler *****************
 15038 ;; Defined at:
 15039 ;;		line 290 in file "mcc_generated_files/LINDrivers/lin_slave.c"
 15040 ;; Parameters:    Size  Location     Type
 15041 ;;		None
 15042 ;; Auto vars:     Size  Location     Type
 15043 ;;		None
 15044 ;; Return value:  Size  Location     Type
 15045 ;;                  1    wreg      void 
 15046 ;; Registers used:
 15047 ;;		wreg, status,2, status,0, pclath, cstack
 15048 ;; Tracked objects:
 15049 ;;		On entry : 3F/2
 15050 ;;		On exit  : 3F/0
 15051 ;;		Unchanged: 0/0
 15052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15055 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15056 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15057 ;;Total ram usage:        1 bytes
 15058 ;; Hardware stack levels used: 1
 15059 ;; Hardware stack levels required when called: 1
 15060 ;; This function calls:
 15061 ;;		i1_LIN_stopTimer
 15062 ;; This function is called by:
 15063 ;;		_LIN_setTimerHandler
 15064 ;;		_TMR0_ISR
 15065 ;; This function uses a non-reentrant model
 15066 ;;
 15067                           
 15068                           
 15069                           ;psect for function _LIN_timerHandler
 15070  0887                     _LIN_timerHandler:
 15071                           
 15072                           ;mcc_generated_files/LINDrivers/lin_slave.c: 293:     if (++CountCallBack >= LIN_timeout
      +                          )
 15073                           
 15074                           ;incstack = 0
 15075                           ; Regs used in _LIN_timerHandler: [wreg+status,2+status,0+pclath+cstack]
 15076  0887  3001               	movlw	1
 15077  0888  00F6               	movwf	??_LIN_timerHandler
 15078  0889  0876               	movf	??_LIN_timerHandler,w
 15079  088A  0140               	movlb	0	; select bank0
 15080  088B  07A6               	addwf	_CountCallBack,f	;volatile
 15081  088C  0868               	movf	_LIN_timeout,w
 15082  088D  0226               	subwf	_CountCallBack,w	;volatile
 15083  088E  1C03               	skipc
 15084  088F  0008               	return
 15085                           
 15086                           ;mcc_generated_files/LINDrivers/lin_slave.c: 294:     {;mcc_generated_files/LINDrivers/l
      +                          in_slave.c: 296:         LIN_stopTimer();
 15087  0890  3197  2767         	fcall	i1_LIN_stopTimer
 15088  0892  0008               	return
 15089  0893                     __end_of_LIN_timerHandler:
 15090                           
 15091                           	psect	text65
 15092  1748                     __ptext65:	
 15093 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 15094 ;; Defined at:
 15095 ;;		line 159 in file "mcc_generated_files/tmr0.c"
 15096 ;; Parameters:    Size  Location     Type
 15097 ;;		None
 15098 ;; Auto vars:     Size  Location     Type
 15099 ;;		None
 15100 ;; Return value:  Size  Location     Type
 15101 ;;                  1    wreg      void 
 15102 ;; Registers used:
 15103 ;;		None
 15104 ;; Tracked objects:
 15105 ;;		On entry : 3F/2
 15106 ;;		On exit  : 3F/2
 15107 ;;		Unchanged: 3F/0
 15108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15112 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15113 ;;Total ram usage:        0 bytes
 15114 ;; Hardware stack levels used: 1
 15115 ;; This function calls:
 15116 ;;		Nothing
 15117 ;; This function is called by:
 15118 ;;		_TMR0_Initialize
 15119 ;;		_TMR0_ISR
 15120 ;; This function uses a non-reentrant model
 15121 ;;
 15122                           
 15123                           
 15124                           ;psect for function _TMR0_DefaultInterruptHandler
 15125  1748                     _TMR0_DefaultInterruptHandler:
 15126                           
 15127                           ;incstack = 0
 15128                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 15129  1748  0008               	return
 15130  1749                     __end_of_TMR0_DefaultInterruptHandler:
 15131                           
 15132                           	psect	text66
 15133  0695                     __ptext66:	
 15134 ;; *************** function _ProcessAnalogInputs *****************
 15135 ;; Defined at:
 15136 ;;		line 326 in file "efuse.c"
 15137 ;; Parameters:    Size  Location     Type
 15138 ;;		None
 15139 ;; Auto vars:     Size  Location     Type
 15140 ;;		None
 15141 ;; Return value:  Size  Location     Type
 15142 ;;                  1    wreg      void 
 15143 ;; Registers used:
 15144 ;;		wreg, status,2, status,0, pclath, cstack
 15145 ;; Tracked objects:
 15146 ;;		On entry : 0/2
 15147 ;;		On exit  : 3E/0
 15148 ;;		Unchanged: 0/0
 15149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15152 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15153 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15154 ;;Total ram usage:        1 bytes
 15155 ;; Hardware stack levels used: 1
 15156 ;; Hardware stack levels required when called: 2
 15157 ;; This function calls:
 15158 ;;		_ADC_GetConversion
 15159 ;;		_ADC_SelectChannel
 15160 ;;		i1_CmdOutput
 15161 ;; This function is called by:
 15162 ;;		_TMR0_ISR
 15163 ;; This function uses a non-reentrant model
 15164 ;;
 15165                           
 15166                           
 15167                           ;psect for function _ProcessAnalogInputs
 15168  0695                     _ProcessAnalogInputs:
 15169                           
 15170                           ;efuse.c: 339:     adcISense_prev = adcISense_curr;
 15171                           
 15172                           ;incstack = 0
 15173                           ; Regs used in _ProcessAnalogInputs: [wreg+status,2+status,0+pclath+cstack]
 15174  0695  0140               	movlb	0	; select bank0
 15175  0696  083C               	movf	_adcISense_curr+1,w
 15176  0697  0141               	movlb	1	; select bank1
 15177  0698  00AD               	movwf	(_adcISense_prev+1)^(0+128)
 15178  0699  0140               	movlb	0	; select bank0
 15179  069A  083B               	movf	_adcISense_curr,w
 15180  069B  0141               	movlb	1	; select bank1
 15181  069C  00AC               	movwf	_adcISense_prev^(0+128)
 15182                           
 15183                           ;efuse.c: 340:     adcISense_curr = ADC_GetConversion(ISENSE_ANB4);
 15184  069D  300C               	movlw	12
 15185  069E  3189  2185  3186   	fcall	_ADC_GetConversion
 15186  06A1  0877               	movf	?_ADC_GetConversion+1,w
 15187  06A2  0140               	movlb	0	; select bank0
 15188  06A3  00BC               	movwf	_adcISense_curr+1
 15189  06A4  0876               	movf	?_ADC_GetConversion,w
 15190  06A5  00BB               	movwf	_adcISense_curr
 15191                           
 15192                           ;efuse.c: 341:     ADC_SelectChannel(channel_AVSS);
 15193  06A6  303B               	movlw	59
 15194  06A7  3188  2093  3186   	fcall	_ADC_SelectChannel
 15195                           
 15196                           ;efuse.c: 342:     _delay((unsigned long)((5)*(32000000/4000000.0)));
 15197  06AA  300D               	movlw	13
 15198  06AB                     u344_27:
 15199  06AB  0B89               	decfsz	9,f
 15200  06AC  2EAB               	goto	u344_27
 15201  06AD  0000               	nop
 15202                           
 15203                           ;efuse.c: 344:     if (isense_max > 422)
 15204  06AE  3001               	movlw	1
 15205  06AF  0140               	movlb	0	; select bank0
 15206  06B0  0267               	subwf	_isense_max+1,w
 15207  06B1  30A7               	movlw	167
 15208  06B2  1903               	skipnz
 15209  06B3  0266               	subwf	_isense_max,w
 15210  06B4  1C03               	skipc
 15211  06B5  2EBA               	goto	i1l1471
 15212                           
 15213                           ;efuse.c: 345:     {;efuse.c: 346:         isense_max = 422;
 15214  06B6  30A6               	movlw	166
 15215  06B7  00E6               	movwf	_isense_max
 15216  06B8  3001               	movlw	1
 15217  06B9  00E7               	movwf	_isense_max+1
 15218  06BA                     i1l1471:	
 15219                           ;efuse.c: 347:     }
 15220                           
 15221                           
 15222                           ;efuse.c: 349:     if((adcISense_prev > isense_max) && (adcISense_curr > isense_max) && 
      +                          (outputState == OUTPUT_ON))
 15223  06BA  0141               	movlb	1	; select bank1
 15224  06BB  082D               	movf	(_adcISense_prev+1)^(0+128),w
 15225  06BC  0140               	movlb	0	; select bank0
 15226  06BD  0267               	subwf	_isense_max+1,w
 15227  06BE  1D03               	skipz
 15228  06BF  2EC4               	goto	u165_25
 15229  06C0  0141               	movlb	1	; select bank1
 15230  06C1  082C               	movf	_adcISense_prev^(0+128),w
 15231  06C2  0140               	movlb	0	; select bank0
 15232  06C3  0266               	subwf	_isense_max,w
 15233  06C4                     u165_25:
 15234  06C4  1803               	skipnc
 15235  06C5  2ED9               	goto	i1l3916
 15236  06C6  083C               	movf	_adcISense_curr+1,w
 15237  06C7  0267               	subwf	_isense_max+1,w
 15238  06C8  1D03               	skipz
 15239  06C9  2ECC               	goto	u166_25
 15240  06CA  083B               	movf	_adcISense_curr,w
 15241  06CB  0266               	subwf	_isense_max,w
 15242  06CC                     u166_25:
 15243  06CC  1803               	skipnc
 15244  06CD  2ED9               	goto	i1l3916
 15245  06CE  032C               	decf	_outputState,w
 15246  06CF  1D03               	btfss	3,2
 15247  06D0  2ED9               	goto	i1l3916
 15248                           
 15249                           ;efuse.c: 350:     {;efuse.c: 351:         overCurrentFault = FAST_OVER_CURRENT_FAULT;
 15250  06D1  3002               	movlw	2
 15251  06D2  00FB               	movwf	??_ProcessAnalogInputs
 15252  06D3  087B               	movf	??_ProcessAnalogInputs,w
 15253  06D4  00AB               	movwf	_overCurrentFault
 15254                           
 15255                           ;efuse.c: 352:         CmdOutput(OUTPUT_OFF);
 15256  06D5  3000               	movlw	0
 15257  06D6  318D  2555  3186   	fcall	i1_CmdOutput
 15258  06D9                     i1l3916:
 15259                           
 15260                           ;efuse.c: 356:     if(ticks_1ms)
 15261  06D9  0141               	movlb	1	; select bank1
 15262  06DA  0834               	movf	_ticks_1ms^(0+128),w
 15263  06DB  0435               	iorwf	(_ticks_1ms+1)^(0+128),w
 15264  06DC  1903               	btfsc	3,2
 15265  06DD  2F10               	goto	i1l3932
 15266                           
 15267                           ;efuse.c: 357:     {;efuse.c: 358:         adcVccSense_prev = adcVccSense_curr;
 15268  06DE  0140               	movlb	0	; select bank0
 15269  06DF  083E               	movf	_adcVccSense_curr+1,w
 15270  06E0  0141               	movlb	1	; select bank1
 15271  06E1  00B1               	movwf	(_adcVccSense_prev+1)^(0+128)
 15272  06E2  0140               	movlb	0	; select bank0
 15273  06E3  083D               	movf	_adcVccSense_curr,w
 15274  06E4  0141               	movlb	1	; select bank1
 15275  06E5  00B0               	movwf	_adcVccSense_prev^(0+128)
 15276                           
 15277                           ;efuse.c: 359:         adcVccSense_curr = ADC_GetConversion(VCCSENSE_ANA2);
 15278  06E6  3002               	movlw	2
 15279  06E7  3189  2185  3186   	fcall	_ADC_GetConversion
 15280  06EA  0877               	movf	?_ADC_GetConversion+1,w
 15281  06EB  0140               	movlb	0	; select bank0
 15282  06EC  00BE               	movwf	_adcVccSense_curr+1
 15283  06ED  0876               	movf	?_ADC_GetConversion,w
 15284  06EE  00BD               	movwf	_adcVccSense_curr
 15285                           
 15286                           ;efuse.c: 360:         ADC_SelectChannel(channel_AVSS);
 15287  06EF  303B               	movlw	59
 15288  06F0  3188  2093  3186   	fcall	_ADC_SelectChannel
 15289                           
 15290                           ;efuse.c: 361:         _delay((unsigned long)((5)*(32000000/4000000.0)));
 15291  06F3  300D               	movlw	13
 15292  06F4                     u345_27:
 15293  06F4  0B89               	decfsz	9,f
 15294  06F5  2EF4               	goto	u345_27
 15295  06F6  0000               	nop
 15296                           
 15297                           ;efuse.c: 364:         if((adcVccSense_prev < 372) && (adcVccSense_curr < 372) && (outpu
      +                          tState == OUTPUT_ON))
 15298  06F7  3001               	movlw	1
 15299  06F8  0141               	movlb	1	; select bank1
 15300  06F9  0231               	subwf	(_adcVccSense_prev+1)^(0+128),w
 15301  06FA  3074               	movlw	116
 15302  06FB  1903               	skipnz
 15303  06FC  0230               	subwf	_adcVccSense_prev^(0+128),w
 15304  06FD  1803               	skipnc
 15305  06FE  0008               	return
 15306  06FF  3001               	movlw	1
 15307  0700  0140               	movlb	0	; select bank0
 15308  0701  023E               	subwf	_adcVccSense_curr+1,w
 15309  0702  3074               	movlw	116
 15310  0703  1903               	skipnz
 15311  0704  023D               	subwf	_adcVccSense_curr,w
 15312  0705  1803               	skipnc
 15313  0706  0008               	return
 15314  0707  032C               	decf	_outputState,w
 15315  0708  1D03               	btfss	3,2
 15316  0709  0008               	return
 15317                           
 15318                           ;efuse.c: 365:         {;efuse.c: 366:             uvloFault = UVLO_FAULT;
 15319  070A  01AA               	clrf	_uvloFault
 15320  070B  0AAA               	incf	_uvloFault,f
 15321                           
 15322                           ;efuse.c: 367:             CmdOutput(OUTPUT_OFF);
 15323  070C  3000               	movlw	0
 15324  070D  318D  2555         	fcall	i1_CmdOutput
 15325  070F  0008               	return
 15326  0710                     i1l3932:
 15327                           
 15328                           ;efuse.c: 371:     {;efuse.c: 372:         adcTSense_prev = adcTSense_curr;
 15329  0710  0875               	movf	_adcTSense_curr+1,w
 15330  0711  0140               	movlb	0	; select bank0
 15331  0712  00A1               	movwf	_adcTSense_prev+1
 15332  0713  0874               	movf	_adcTSense_curr,w
 15333  0714  00A0               	movwf	_adcTSense_prev
 15334                           
 15335                           ;efuse.c: 373:         adcTSense_curr = ADC_GetConversion(TSENSE_ANC4);
 15336  0715  3014               	movlw	20
 15337  0716  3189  2185  3186   	fcall	_ADC_GetConversion
 15338  0719  0877               	movf	?_ADC_GetConversion+1,w
 15339  071A  00F5               	movwf	_adcTSense_curr+1
 15340  071B  0876               	movf	?_ADC_GetConversion,w
 15341  071C  00F4               	movwf	_adcTSense_curr
 15342                           
 15343                           ;efuse.c: 374:         ADC_SelectChannel(channel_AVSS);
 15344  071D  303B               	movlw	59
 15345  071E  3188  2093  3186   	fcall	_ADC_SelectChannel
 15346                           
 15347                           ;efuse.c: 376:         if((adcTSense_prev < 10) && (adcTSense_curr < 10))
 15348  0721  3000               	movlw	0
 15349  0722  0140               	movlb	0	; select bank0
 15350  0723  0221               	subwf	_adcTSense_prev+1,w
 15351  0724  300A               	movlw	10
 15352  0725  1903               	skipnz
 15353  0726  0220               	subwf	_adcTSense_prev,w
 15354  0727  1803               	skipnc
 15355  0728  2F38               	goto	i1l3944
 15356  0729  3000               	movlw	0
 15357  072A  0275               	subwf	_adcTSense_curr+1,w
 15358  072B  300A               	movlw	10
 15359  072C  1903               	skipnz
 15360  072D  0274               	subwf	_adcTSense_curr,w
 15361  072E  1803               	skipnc
 15362  072F  2F38               	goto	i1l3944
 15363                           
 15364                           ;efuse.c: 377:         {;efuse.c: 378:             overTempFault = TEMP_SENSOR_OORL;
 15365  0730  3002               	movlw	2
 15366  0731  00FB               	movwf	??_ProcessAnalogInputs
 15367  0732  087B               	movf	??_ProcessAnalogInputs,w
 15368  0733  00A9               	movwf	_overTempFault
 15369                           
 15370                           ;efuse.c: 379:             CmdOutput(OUTPUT_OFF);
 15371  0734  3000               	movlw	0
 15372  0735  318D  2555         	fcall	i1_CmdOutput
 15373                           
 15374                           ;efuse.c: 380:         }
 15375  0737  0008               	return
 15376  0738                     i1l3944:
 15377  0738  3003               	movlw	3
 15378  0739  0221               	subwf	_adcTSense_prev+1,w
 15379  073A  30F6               	movlw	246
 15380  073B  1903               	skipnz
 15381  073C  0220               	subwf	_adcTSense_prev,w
 15382  073D  1C03               	skipc
 15383  073E  0008               	return
 15384  073F  3003               	movlw	3
 15385  0740  0275               	subwf	_adcTSense_curr+1,w
 15386  0741  30F6               	movlw	246
 15387  0742  1903               	skipnz
 15388  0743  0274               	subwf	_adcTSense_curr,w
 15389  0744  1C03               	skipc
 15390  0745  0008               	return
 15391                           
 15392                           ;efuse.c: 382:         {;efuse.c: 383:             overTempFault = TEMP_SENSOR_OORH;
 15393  0746  3003               	movlw	3
 15394  0747  00FB               	movwf	??_ProcessAnalogInputs
 15395  0748  087B               	movf	??_ProcessAnalogInputs,w
 15396  0749  00A9               	movwf	_overTempFault
 15397                           
 15398                           ;efuse.c: 384:             CmdOutput(OUTPUT_OFF);
 15399  074A  3000               	movlw	0
 15400  074B  318D  2555         	fcall	i1_CmdOutput
 15401  074D  0008               	return
 15402  074E                     __end_of_ProcessAnalogInputs:
 15403                           
 15404                           	psect	text67
 15405  0D55                     __ptext67:	
 15406 ;; *************** function i1_CmdOutput *****************
 15407 ;; Defined at:
 15408 ;;		line 390 in file "efuse.c"
 15409 ;; Parameters:    Size  Location     Type
 15410 ;;  enable          1    wreg     unsigned char 
 15411 ;; Auto vars:     Size  Location     Type
 15412 ;;  enable          1    4[COMMON] unsigned char 
 15413 ;; Return value:  Size  Location     Type
 15414 ;;                  1    wreg      void 
 15415 ;; Registers used:
 15416 ;;		wreg, status,2, status,0, pclath, cstack
 15417 ;; Tracked objects:
 15418 ;;		On entry : 3F/0
 15419 ;;		On exit  : 3F/0
 15420 ;;		Unchanged: 0/0
 15421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15423 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15424 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15425 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15426 ;;Total ram usage:        3 bytes
 15427 ;; Hardware stack levels used: 1
 15428 ;; Hardware stack levels required when called: 1
 15429 ;; This function calls:
 15430 ;;		i1_TMR1_StartTimer
 15431 ;;		i1_TMR1_StopTimer
 15432 ;;		i1_TMR1_WriteTimer
 15433 ;;		i1_TMR2_Initialize
 15434 ;;		i1_TMR2_Start
 15435 ;;		i1_TMR2_Stop
 15436 ;; This function is called by:
 15437 ;;		_ProcessAnalogInputs
 15438 ;; This function uses a non-reentrant model
 15439 ;;
 15440                           
 15441                           
 15442                           ;psect for function i1_CmdOutput
 15443  0D55                     i1_CmdOutput:
 15444                           
 15445                           ;incstack = 0
 15446                           ; Regs used in i1_CmdOutput: [wreg+status,2+status,0+pclath+cstack]
 15447                           ;i1CmdOutput@enable stored from wreg
 15448  0D55  00FA               	movwf	i1CmdOutput@enable
 15449                           
 15450                           ;efuse.c: 390: void CmdOutput(uint8_t enable);efuse.c: 391: {;efuse.c: 392:     TMR2_Sto
      +                          p();
 15451  0D56  3197  275B  318D   	fcall	i1_TMR2_Stop
 15452                           
 15453                           ;efuse.c: 395:     CLC1POLbits.LC1G4POL = 0;
 15454  0D59  017C               	movlb	60	; select bank60
 15455  0D5A  1191               	bcf	17,3	;volatile
 15456                           
 15457                           ;efuse.c: 396:     CLC1GLS3bits.LC1G4D3N = 0;
 15458  0D5B  1219               	bcf	25,4	;volatile
 15459                           
 15460                           ;efuse.c: 397:     CLC1GLS3bits.LC1G4D4T = 0;
 15461  0D5C  1399               	bcf	25,7	;volatile
 15462                           
 15463                           ;efuse.c: 401:     T1GCON = 0x80;
 15464  0D5D  3080               	movlw	128
 15465  0D5E  0144               	movlb	4	; select bank4
 15466  0D5F  008F               	movwf	15	;volatile
 15467                           
 15468                           ;efuse.c: 404:     T1GATE = 0x0D;
 15469  0D60  300D               	movlw	13
 15470  0D61  0090               	movwf	16	;volatile
 15471                           
 15472                           ;efuse.c: 406:     CLC3CONbits.EN = 0;
 15473  0D62  017C               	movlb	60	; select bank60
 15474  0D63  13A4               	bcf	36,7	;volatile
 15475                           
 15476                           ;efuse.c: 409:     CLC1POLbits.LC1G2POL = 1;
 15477  0D64  1491               	bsf	17,1	;volatile
 15478                           
 15479                           ;efuse.c: 410:     CLC1POLbits.LC1G2POL = 0;
 15480  0D65  1091               	bcf	17,1	;volatile
 15481                           
 15482                           ;efuse.c: 412:     _delay((unsigned long)((1)*(32000000/4000000.0)));
 15483  0D66  3200               	nop2	;2 cycle nop
 15484  0D67  3200               	nop2	;2 cycle nop
 15485  0D68  3200               	nop2	;2 cycle nop
 15486  0D69  3200               	nop2	;2 cycle nop
 15487                           
 15488                           ;efuse.c: 415:     CLC2POLbits.LC2G2POL = 1;
 15489  0D6A  017C               	movlb	60	; select bank60
 15490  0D6B  149B               	bsf	27,1	;volatile
 15491                           
 15492                           ;efuse.c: 416:     CLC2POLbits.LC2G2POL = 0;
 15493  0D6C  109B               	bcf	27,1	;volatile
 15494                           
 15495                           ;efuse.c: 418:     outputState = OUTPUT_OFF;
 15496  0D6D  0140               	movlb	0	; select bank0
 15497  0D6E  01AC               	clrf	_outputState
 15498                           
 15499                           ;efuse.c: 421:     if (enable)
 15500  0D6F  087A               	movf	i1CmdOutput@enable,w
 15501  0D70  1903               	btfsc	3,2
 15502  0D71  0008               	return
 15503                           
 15504                           ;efuse.c: 422:     {;efuse.c: 423:         overCurrentFault = NO_OVER_CURRENT_FAULT;
 15505  0D72  01AB               	clrf	_overCurrentFault
 15506                           
 15507                           ;efuse.c: 424:         uvloFault = NO_UVLO_FAULT;
 15508  0D73  01AA               	clrf	_uvloFault
 15509                           
 15510                           ;efuse.c: 425:         overTempFault = NO_TEMP_FAULT;
 15511  0D74  01A9               	clrf	_overTempFault
 15512  0D75  1794               	bsf	20,7	;volatile
 15513                           
 15514                           ;efuse.c: 430:         CLC1CONbits.LC1EN = 1;
 15515  0D76  017C               	movlb	60	; select bank60
 15516  0D77  1790               	bsf	16,7	;volatile
 15517                           
 15518                           ;efuse.c: 431:         CLC1POLbits.LC1G4POL = 0;
 15519  0D78  1191               	bcf	17,3	;volatile
 15520                           
 15521                           ;efuse.c: 432:         CLC1POLbits.LC1G3POL = 0;
 15522  0D79  1111               	bcf	17,2	;volatile
 15523                           
 15524                           ;efuse.c: 433:         CLC1POLbits.LC1G3POL = 1;
 15525  0D7A  1511               	bsf	17,2	;volatile
 15526                           
 15527                           ;efuse.c: 434:         CLC1POLbits.LC1G3POL = 0;
 15528  0D7B  1111               	bcf	17,2	;volatile
 15529                           
 15530                           ;efuse.c: 435:         CLC1POLbits.LC1POL = 1;
 15531  0D7C  1791               	bsf	17,7	;volatile
 15532                           
 15533                           ;efuse.c: 438:         CLC2POLbits.LC2G4POL = 0;
 15534  0D7D  119B               	bcf	27,3	;volatile
 15535                           
 15536                           ;efuse.c: 439:         CLC2POLbits.LC2G3POL = 0;
 15537  0D7E  111B               	bcf	27,2	;volatile
 15538                           
 15539                           ;efuse.c: 440:         CLC2POLbits.LC2G3POL = 1;
 15540  0D7F  151B               	bsf	27,2	;volatile
 15541                           
 15542                           ;efuse.c: 441:         CLC2POLbits.LC2G3POL = 0;
 15543  0D80  111B               	bcf	27,2	;volatile
 15544                           
 15545                           ;efuse.c: 443:         if(triggerType == TRIGGER_TIMER_OVERFLOW)
 15546  0D81  0140               	movlb	0	; select bank0
 15547  0D82  032E               	decf	_triggerType,w
 15548  0D83  1D03               	btfss	3,2
 15549  0D84  2D96               	goto	i1l1485
 15550                           
 15551                           ;efuse.c: 444:         {;efuse.c: 447:             CLC1POLbits.LC1G4POL = 1;
 15552  0D85  017C               	movlb	60	; select bank60
 15553  0D86  1591               	bsf	17,3	;volatile
 15554                           
 15555                           ;efuse.c: 448:             CLC1GLS3bits.LC1G4D3N = 1;
 15556  0D87  1619               	bsf	25,4	;volatile
 15557                           
 15558                           ;efuse.c: 449:             CLC1GLS3bits.LC1G4D4T = 1;
 15559  0D88  1799               	bsf	25,7	;volatile
 15560                           
 15561                           ;efuse.c: 452:             T1GCON = 0xC0;
 15562  0D89  30C0               	movlw	192
 15563  0D8A  0144               	movlb	4	; select bank4
 15564  0D8B  008F               	movwf	15	;volatile
 15565                           
 15566                           ;efuse.c: 455:             T1GATE = 0x0B;
 15567  0D8C  300B               	movlw	11
 15568  0D8D  0090               	movwf	16	;volatile
 15569                           
 15570                           ;efuse.c: 457:             TMR2_Initialize();
 15571  0D8E  3188  20AD  318D   	fcall	i1_TMR2_Initialize
 15572                           
 15573                           ;efuse.c: 458:             TMR2_Start();
 15574  0D91  3197  274B  318D   	fcall	i1_TMR2_Start
 15575                           
 15576                           ;efuse.c: 460:             CLC3CONbits.EN = 1;
 15577  0D94  017C               	movlb	60	; select bank60
 15578  0D95  17A4               	bsf	36,7	;volatile
 15579  0D96                     i1l1485:	
 15580                           ;efuse.c: 461:         }
 15581                           
 15582                           
 15583                           ;efuse.c: 464:         TMR1_StopTimer();
 15584  0D96  3197  2758  318D   	fcall	i1_TMR1_StopTimer
 15585                           
 15586                           ;efuse.c: 465:         TMR1_WriteTimer( 0xffff - reduced_drive_time );
 15587  0D99  0140               	movlb	0	; select bank0
 15588  0D9A  082D               	movf	_reduced_drive_time,w
 15589  0D9B  00F8               	movwf	??i1_CmdOutput
 15590  0D9C  01F9               	clrf	??i1_CmdOutput+1
 15591  0D9D  0978               	comf	??i1_CmdOutput,w
 15592  0D9E  00F6               	movwf	i1TMR1_WriteTimer@timerVal
 15593  0D9F  0979               	comf	??i1_CmdOutput+1,w
 15594  0DA0  00F7               	movwf	i1TMR1_WriteTimer@timerVal+1
 15595  0DA1  3188  20C9  318D   	fcall	i1_TMR1_WriteTimer
 15596                           
 15597                           ;efuse.c: 466:         PIR4bits.TMR1IF = 0;
 15598  0DA4  014E               	movlb	14	; select bank14
 15599  0DA5  1010               	bcf	16,0	;volatile
 15600                           
 15601                           ;efuse.c: 467:         TMR1_StartTimer();
 15602  0DA6  3197  2755         	fcall	i1_TMR1_StartTimer
 15603                           
 15604                           ;efuse.c: 469:         iSenseOffset = adcISense_curr;
 15605  0DA8  0140               	movlb	0	; select bank0
 15606  0DA9  083C               	movf	_adcISense_curr+1,w
 15607  0DAA  00B8               	movwf	_iSenseOffset+1
 15608  0DAB  083B               	movf	_adcISense_curr,w
 15609  0DAC  00B7               	movwf	_iSenseOffset
 15610                           
 15611                           ;efuse.c: 470:         outputState = OUTPUT_ON;
 15612  0DAD  01AC               	clrf	_outputState
 15613  0DAE  0AAC               	incf	_outputState,f
 15614  0DAF  1394               	bcf	20,7	;volatile
 15615  0DB0  0008               	return
 15616  0DB1                     __end_ofi1_CmdOutput:
 15617                           
 15618                           	psect	text68
 15619  175B                     __ptext68:	
 15620 ;; *************** function i1_TMR2_Stop *****************
 15621 ;; Defined at:
 15622 ;;		line 111 in file "mcc_generated_files/tmr2.c"
 15623 ;; Parameters:    Size  Location     Type
 15624 ;;		None
 15625 ;; Auto vars:     Size  Location     Type
 15626 ;;		None
 15627 ;; Return value:  Size  Location     Type
 15628 ;;                  1    wreg      void 
 15629 ;; Registers used:
 15630 ;;		None
 15631 ;; Tracked objects:
 15632 ;;		On entry : 3F/0
 15633 ;;		On exit  : 3F/5
 15634 ;;		Unchanged: 0/0
 15635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15639 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15640 ;;Total ram usage:        0 bytes
 15641 ;; Hardware stack levels used: 1
 15642 ;; This function calls:
 15643 ;;		Nothing
 15644 ;; This function is called by:
 15645 ;;		i1_CmdOutput
 15646 ;; This function uses a non-reentrant model
 15647 ;;
 15648                           
 15649                           
 15650                           ;psect for function i1_TMR2_Stop
 15651  175B                     i1_TMR2_Stop:
 15652                           
 15653                           ;mcc_generated_files/tmr2.c: 114:     T2CONbits.TMR2ON = 0;
 15654                           
 15655                           ;incstack = 0
 15656                           ; Regs used in i1_TMR2_Stop: []
 15657  175B  0145               	movlb	5	; select bank5
 15658  175C  138E               	bcf	14,7	;volatile
 15659  175D  0008               	return
 15660  175E                     __end_ofi1_TMR2_Stop:
 15661                           
 15662                           	psect	text69
 15663  174B                     __ptext69:	
 15664 ;; *************** function i1_TMR2_Start *****************
 15665 ;; Defined at:
 15666 ;;		line 100 in file "mcc_generated_files/tmr2.c"
 15667 ;; Parameters:    Size  Location     Type
 15668 ;;		None
 15669 ;; Auto vars:     Size  Location     Type
 15670 ;;		None
 15671 ;; Return value:  Size  Location     Type
 15672 ;;                  1    wreg      void 
 15673 ;; Registers used:
 15674 ;;		None
 15675 ;; Tracked objects:
 15676 ;;		On entry : 3F/5
 15677 ;;		On exit  : 3F/5
 15678 ;;		Unchanged: 0/0
 15679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15683 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15684 ;;Total ram usage:        0 bytes
 15685 ;; Hardware stack levels used: 1
 15686 ;; This function calls:
 15687 ;;		Nothing
 15688 ;; This function is called by:
 15689 ;;		i1_CmdOutput
 15690 ;; This function uses a non-reentrant model
 15691 ;;
 15692                           
 15693                           
 15694                           ;psect for function i1_TMR2_Start
 15695  174B                     i1_TMR2_Start:
 15696                           
 15697                           ;mcc_generated_files/tmr2.c: 103:     T2CONbits.TMR2ON = 1;
 15698                           
 15699                           ;incstack = 0
 15700                           ; Regs used in i1_TMR2_Start: []
 15701  174B  178E               	bsf	14,7	;volatile
 15702  174C  0008               	return
 15703  174D                     __end_ofi1_TMR2_Start:
 15704                           
 15705                           	psect	text70
 15706  08AD                     __ptext70:	
 15707 ;; *************** function i1_TMR2_Initialize *****************
 15708 ;; Defined at:
 15709 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 15710 ;; Parameters:    Size  Location     Type
 15711 ;;		None
 15712 ;; Auto vars:     Size  Location     Type
 15713 ;;		None
 15714 ;; Return value:  Size  Location     Type
 15715 ;;                  1    wreg      void 
 15716 ;; Registers used:
 15717 ;;		wreg, status,2
 15718 ;; Tracked objects:
 15719 ;;		On entry : 3F/4
 15720 ;;		On exit  : 3F/5
 15721 ;;		Unchanged: 0/0
 15722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15726 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15727 ;;Total ram usage:        0 bytes
 15728 ;; Hardware stack levels used: 1
 15729 ;; This function calls:
 15730 ;;		Nothing
 15731 ;; This function is called by:
 15732 ;;		i1_CmdOutput
 15733 ;; This function uses a non-reentrant model
 15734 ;;
 15735                           
 15736                           
 15737                           ;psect for function i1_TMR2_Initialize
 15738  08AD                     i1_TMR2_Initialize:
 15739                           
 15740                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x0D;
 15741                           
 15742                           ;incstack = 0
 15743                           ; Regs used in i1_TMR2_Initialize: [wreg+status,2]
 15744  08AD  300D               	movlw	13
 15745  08AE  0145               	movlb	5	; select bank5
 15746  08AF  0090               	movwf	16	;volatile
 15747                           
 15748                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 15749  08B0  018F               	clrf	15	;volatile
 15750                           
 15751                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 15752  08B1  0191               	clrf	17	;volatile
 15753                           
 15754                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x27;
 15755  08B2  3027               	movlw	39
 15756  08B3  008D               	movwf	13	;volatile
 15757                           
 15758                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 15759  08B4  018C               	clrf	12	;volatile
 15760                           
 15761                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 15762  08B5  014E               	movlb	14	; select bank14
 15763  08B6  1090               	bcf	16,1	;volatile
 15764                           
 15765                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xB0;
 15766  08B7  30B0               	movlw	176
 15767  08B8  0145               	movlb	5	; select bank5
 15768  08B9  008E               	movwf	14	;volatile
 15769  08BA  0008               	return
 15770  08BB                     __end_ofi1_TMR2_Initialize:
 15771                           
 15772                           	psect	text71
 15773  08C9                     __ptext71:	
 15774 ;; *************** function i1_TMR1_WriteTimer *****************
 15775 ;; Defined at:
 15776 ;;		line 120 in file "mcc_generated_files/tmr1.c"
 15777 ;; Parameters:    Size  Location     Type
 15778 ;;  timerVal        2    0[COMMON] unsigned short 
 15779 ;; Auto vars:     Size  Location     Type
 15780 ;;		None
 15781 ;; Return value:  Size  Location     Type
 15782 ;;                  1    wreg      void 
 15783 ;; Registers used:
 15784 ;;		wreg
 15785 ;; Tracked objects:
 15786 ;;		On entry : 3F/0
 15787 ;;		On exit  : 3F/4
 15788 ;;		Unchanged: 0/0
 15789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15790 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15793 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15794 ;;Total ram usage:        2 bytes
 15795 ;; Hardware stack levels used: 1
 15796 ;; This function calls:
 15797 ;;		Nothing
 15798 ;; This function is called by:
 15799 ;;		i1_CmdOutput
 15800 ;; This function uses a non-reentrant model
 15801 ;;
 15802                           
 15803                           
 15804                           ;psect for function i1_TMR1_WriteTimer
 15805  08C9                     i1_TMR1_WriteTimer:
 15806                           
 15807                           ;mcc_generated_files/tmr1.c: 120: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 121: {;mcc_generated_files/tmr1.c: 122:     if (T1CONbits.nT1SYNC == 1)
 15808                           
 15809                           ;incstack = 0
 15810                           ; Regs used in i1_TMR1_WriteTimer: [wreg]
 15811  08C9  0144               	movlb	4	; select bank4
 15812  08CA  1D0E               	btfss	14,2	;volatile
 15813  08CB  28D3               	goto	i1l3448
 15814                           
 15815                           ;mcc_generated_files/tmr1.c: 123:     {;mcc_generated_files/tmr1.c: 125:         T1CONbi
      +                          ts.TMR1ON = 0;
 15816  08CC  100E               	bcf	14,0	;volatile
 15817                           
 15818                           ;mcc_generated_files/tmr1.c: 128:         TMR1H = (uint8_t)(timerVal >> 8);
 15819  08CD  0877               	movf	i1TMR1_WriteTimer@timerVal+1,w
 15820  08CE  008D               	movwf	13	;volatile
 15821                           
 15822                           ;mcc_generated_files/tmr1.c: 129:         TMR1L = (uint8_t)timerVal;
 15823  08CF  0876               	movf	i1TMR1_WriteTimer@timerVal,w
 15824  08D0  008C               	movwf	12	;volatile
 15825                           
 15826                           ;mcc_generated_files/tmr1.c: 132:         T1CONbits.TMR1ON =1;
 15827  08D1  140E               	bsf	14,0	;volatile
 15828                           
 15829                           ;mcc_generated_files/tmr1.c: 133:     }
 15830  08D2  0008               	return
 15831  08D3                     i1l3448:
 15832                           
 15833                           ;mcc_generated_files/tmr1.c: 135:     {;mcc_generated_files/tmr1.c: 137:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
 15834  08D3  0877               	movf	i1TMR1_WriteTimer@timerVal+1,w
 15835  08D4  008D               	movwf	13	;volatile
 15836                           
 15837                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = (uint8_t)timerVal;
 15838  08D5  0876               	movf	i1TMR1_WriteTimer@timerVal,w
 15839  08D6  008C               	movwf	12	;volatile
 15840  08D7  0008               	return
 15841  08D8                     __end_ofi1_TMR1_WriteTimer:
 15842                           
 15843                           	psect	text72
 15844  1758                     __ptext72:	
 15845 ;; *************** function i1_TMR1_StopTimer *****************
 15846 ;; Defined at:
 15847 ;;		line 98 in file "mcc_generated_files/tmr1.c"
 15848 ;; Parameters:    Size  Location     Type
 15849 ;;		None
 15850 ;; Auto vars:     Size  Location     Type
 15851 ;;		None
 15852 ;; Return value:  Size  Location     Type
 15853 ;;                  1    wreg      void 
 15854 ;; Registers used:
 15855 ;;		None
 15856 ;; Tracked objects:
 15857 ;;		On entry : 3/0
 15858 ;;		On exit  : 3F/4
 15859 ;;		Unchanged: 0/0
 15860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15864 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15865 ;;Total ram usage:        0 bytes
 15866 ;; Hardware stack levels used: 1
 15867 ;; This function calls:
 15868 ;;		Nothing
 15869 ;; This function is called by:
 15870 ;;		i1_CmdOutput
 15871 ;; This function uses a non-reentrant model
 15872 ;;
 15873                           
 15874                           
 15875                           ;psect for function i1_TMR1_StopTimer
 15876  1758                     i1_TMR1_StopTimer:
 15877                           
 15878                           ;mcc_generated_files/tmr1.c: 101:     T1CONbits.TMR1ON = 0;
 15879                           
 15880                           ;incstack = 0
 15881                           ; Regs used in i1_TMR1_StopTimer: []
 15882  1758  0144               	movlb	4	; select bank4
 15883  1759  100E               	bcf	14,0	;volatile
 15884  175A  0008               	return
 15885  175B                     __end_ofi1_TMR1_StopTimer:
 15886                           
 15887                           	psect	text73
 15888  1755                     __ptext73:	
 15889 ;; *************** function i1_TMR1_StartTimer *****************
 15890 ;; Defined at:
 15891 ;;		line 92 in file "mcc_generated_files/tmr1.c"
 15892 ;; Parameters:    Size  Location     Type
 15893 ;;		None
 15894 ;; Auto vars:     Size  Location     Type
 15895 ;;		None
 15896 ;; Return value:  Size  Location     Type
 15897 ;;                  1    wreg      void 
 15898 ;; Registers used:
 15899 ;;		None
 15900 ;; Tracked objects:
 15901 ;;		On entry : 3F/E
 15902 ;;		On exit  : 3F/4
 15903 ;;		Unchanged: 0/0
 15904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15908 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15909 ;;Total ram usage:        0 bytes
 15910 ;; Hardware stack levels used: 1
 15911 ;; This function calls:
 15912 ;;		Nothing
 15913 ;; This function is called by:
 15914 ;;		i1_CmdOutput
 15915 ;; This function uses a non-reentrant model
 15916 ;;
 15917                           
 15918                           
 15919                           ;psect for function i1_TMR1_StartTimer
 15920  1755                     i1_TMR1_StartTimer:
 15921                           
 15922                           ;mcc_generated_files/tmr1.c: 95:     T1CONbits.TMR1ON = 1;
 15923                           
 15924                           ;incstack = 0
 15925                           ; Regs used in i1_TMR1_StartTimer: []
 15926  1755  0144               	movlb	4	; select bank4
 15927  1756  140E               	bsf	14,0	;volatile
 15928  1757  0008               	return
 15929  1758                     __end_ofi1_TMR1_StartTimer:
 15930                           
 15931                           	psect	text74
 15932  0893                     __ptext74:	
 15933 ;; *************** function _ADC_SelectChannel *****************
 15934 ;; Defined at:
 15935 ;;		line 85 in file "mcc_generated_files/adc.c"
 15936 ;; Parameters:    Size  Location     Type
 15937 ;;  channel         1    wreg     enum E6731
 15938 ;; Auto vars:     Size  Location     Type
 15939 ;;  channel         1    1[COMMON] enum E6731
 15940 ;; Return value:  Size  Location     Type
 15941 ;;                  1    wreg      void 
 15942 ;; Registers used:
 15943 ;;		wreg, status,2, status,0
 15944 ;; Tracked objects:
 15945 ;;		On entry : 3E/0
 15946 ;;		On exit  : 3F/1
 15947 ;;		Unchanged: 0/0
 15948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15950 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15951 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15952 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15953 ;;Total ram usage:        2 bytes
 15954 ;; Hardware stack levels used: 1
 15955 ;; This function calls:
 15956 ;;		Nothing
 15957 ;; This function is called by:
 15958 ;;		_ProcessAnalogInputs
 15959 ;; This function uses a non-reentrant model
 15960 ;;
 15961                           
 15962                           
 15963                           ;psect for function _ADC_SelectChannel
 15964  0893                     _ADC_SelectChannel:
 15965                           
 15966                           ;incstack = 0
 15967                           ; Regs used in _ADC_SelectChannel: [wreg+status,2+status,0]
 15968                           ;ADC_SelectChannel@channel stored from wreg
 15969  0893  00F7               	movwf	ADC_SelectChannel@channel
 15970                           
 15971                           ;mcc_generated_files/adc.c: 85: void ADC_SelectChannel(adc_channel_t channel);mcc_genera
      +                          ted_files/adc.c: 86: {;mcc_generated_files/adc.c: 88:     ADCON0bits.CHS = channel;
 15972  0894  0877               	movf	ADC_SelectChannel@channel,w
 15973  0895  00F6               	movwf	??_ADC_SelectChannel
 15974  0896  0DF6               	rlf	??_ADC_SelectChannel,f
 15975  0897  0DF6               	rlf	??_ADC_SelectChannel,f
 15976  0898  0141               	movlb	1	; select bank1
 15977  0899  081D               	movf	29,w	;volatile
 15978  089A  0676               	xorwf	??_ADC_SelectChannel,w
 15979  089B  3903               	andlw	-253
 15980  089C  0676               	xorwf	??_ADC_SelectChannel,w
 15981  089D  009D               	movwf	29	;volatile
 15982                           
 15983                           ;mcc_generated_files/adc.c: 90:     ADCON0bits.ADON = 1;
 15984  089E  141D               	bsf	29,0	;volatile
 15985  089F  0008               	return
 15986  08A0                     __end_of_ADC_SelectChannel:
 15987                           
 15988                           	psect	text75
 15989  0985                     __ptext75:	
 15990 ;; *************** function _ADC_GetConversion *****************
 15991 ;; Defined at:
 15992 ;;		line 112 in file "mcc_generated_files/adc.c"
 15993 ;; Parameters:    Size  Location     Type
 15994 ;;  channel         1    wreg     enum E6731
 15995 ;; Auto vars:     Size  Location     Type
 15996 ;;  channel         1    3[COMMON] enum E6731
 15997 ;; Return value:  Size  Location     Type
 15998 ;;                  2    0[COMMON] unsigned short 
 15999 ;; Registers used:
 16000 ;;		wreg, status,2, status,0
 16001 ;; Tracked objects:
 16002 ;;		On entry : 3E/1
 16003 ;;		On exit  : 3F/1
 16004 ;;		Unchanged: 0/0
 16005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16006 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16007 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16008 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16009 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16010 ;;Total ram usage:        4 bytes
 16011 ;; Hardware stack levels used: 1
 16012 ;; This function calls:
 16013 ;;		Nothing
 16014 ;; This function is called by:
 16015 ;;		_ProcessAnalogInputs
 16016 ;; This function uses a non-reentrant model
 16017 ;;
 16018                           
 16019                           
 16020                           ;psect for function _ADC_GetConversion
 16021  0985                     _ADC_GetConversion:
 16022                           
 16023                           ;incstack = 0
 16024                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
 16025                           ;ADC_GetConversion@channel stored from wreg
 16026  0985  00F9               	movwf	ADC_GetConversion@channel
 16027                           
 16028                           ;mcc_generated_files/adc.c: 112: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 113: {;mcc_generated_files/adc.c: 115:     ADCON0bits.CHS = ch
      +                          annel;
 16029  0986  0879               	movf	ADC_GetConversion@channel,w
 16030  0987  00F8               	movwf	??_ADC_GetConversion
 16031  0988  0DF8               	rlf	??_ADC_GetConversion,f
 16032  0989  0DF8               	rlf	??_ADC_GetConversion,f
 16033  098A  0141               	movlb	1	; select bank1
 16034  098B  081D               	movf	29,w	;volatile
 16035  098C  0678               	xorwf	??_ADC_GetConversion,w
 16036  098D  3903               	andlw	-253
 16037  098E  0678               	xorwf	??_ADC_GetConversion,w
 16038  098F  009D               	movwf	29	;volatile
 16039                           
 16040                           ;mcc_generated_files/adc.c: 118:     ADCON0bits.ADON = 1;
 16041  0990  141D               	bsf	29,0	;volatile
 16042                           
 16043                           ;mcc_generated_files/adc.c: 121:     _delay((unsigned long)((5)*(32000000/4000000.0)));
 16044  0991  300D               	movlw	13
 16045  0992                     u346_27:
 16046  0992  0B89               	decfsz	9,f
 16047  0993  2992               	goto	u346_27
 16048  0994  0000               	nop
 16049                           
 16050                           ;mcc_generated_files/adc.c: 124:     ADCON0bits.GOnDONE = 1;
 16051  0995  0141               	movlb	1	; select bank1
 16052  0996  149D               	bsf	29,1	;volatile
 16053  0997                     i1l1114:	
 16054                           ;mcc_generated_files/adc.c: 128:     {;mcc_generated_files/adc.c: 129:     }
 16055                           
 16056                           
 16057                           ;mcc_generated_files/adc.c: 127:     while (ADCON0bits.GOnDONE)
 16058  0997  189D               	btfsc	29,1	;volatile
 16059  0998  2997               	goto	i1l1114
 16060                           
 16061                           ;mcc_generated_files/adc.c: 132:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 16062  0999  081C               	movf	28,w	;volatile
 16063  099A  00F7               	movwf	?_ADC_GetConversion+1
 16064  099B  081B               	movf	27,w	;volatile
 16065  099C  00F6               	movwf	?_ADC_GetConversion
 16066  099D  0008               	return
 16067  099E                     __end_of_ADC_GetConversion:
 16068                           
 16069                           	psect	text76
 16070  1767                     __ptext76:	
 16071 ;; *************** function i1_LIN_stopTimer *****************
 16072 ;; Defined at:
 16073 ;;		line 304 in file "mcc_generated_files/LINDrivers/lin_slave.c"
 16074 ;; Parameters:    Size  Location     Type
 16075 ;;		None
 16076 ;; Auto vars:     Size  Location     Type
 16077 ;;		None
 16078 ;; Return value:  Size  Location     Type
 16079 ;;                  1    wreg      void 
 16080 ;; Registers used:
 16081 ;;		status,2
 16082 ;; Tracked objects:
 16083 ;;		On entry : 3F/0
 16084 ;;		On exit  : 3F/0
 16085 ;;		Unchanged: 0/0
 16086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16091 ;;Total ram usage:        0 bytes
 16092 ;; Hardware stack levels used: 1
 16093 ;; This function calls:
 16094 ;;		Nothing
 16095 ;; This function is called by:
 16096 ;;		_LIN_timerHandler
 16097 ;; This function uses a non-reentrant model
 16098 ;;
 16099                           
 16100                           
 16101                           ;psect for function i1_LIN_stopTimer
 16102  1767                     i1_LIN_stopTimer:
 16103                           
 16104                           ;mcc_generated_files/LINDrivers/lin_slave.c: 305:     __nop();
 16105                           
 16106                           ;incstack = 0
 16107                           ; Regs used in i1_LIN_stopTimer: [status,2]
 16108  1767  0000               	nop
 16109                           
 16110                           ;mcc_generated_files/LINDrivers/lin_slave.c: 307:     CountCallBack = 0;
 16111  1768  0140               	movlb	0	; select bank0
 16112  1769  01A6               	clrf	_CountCallBack	;volatile
 16113                           
 16114                           ;mcc_generated_files/LINDrivers/lin_slave.c: 308:     LIN_timerRunning = 0;
 16115  176A  01A7               	clrf	_LIN_timerRunning
 16116  176B  0008               	return
 16117  176C                     __end_ofi1_LIN_stopTimer:
 16118                           
 16119                           	psect	text77
 16120  09EE                     __ptext77:	
 16121 ;; *************** function _EUSART1_Transmit_ISR *****************
 16122 ;; Defined at:
 16123 ;;		line 197 in file "mcc_generated_files/eusart1.c"
 16124 ;; Parameters:    Size  Location     Type
 16125 ;;		None
 16126 ;; Auto vars:     Size  Location     Type
 16127 ;;		None
 16128 ;; Return value:  Size  Location     Type
 16129 ;;                  1    wreg      void 
 16130 ;; Registers used:
 16131 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 16132 ;; Tracked objects:
 16133 ;;		On entry : 3F/2
 16134 ;;		On exit  : 30/0
 16135 ;;		Unchanged: 0/0
 16136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16139 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16140 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16141 ;;Total ram usage:        1 bytes
 16142 ;; Hardware stack levels used: 1
 16143 ;; This function calls:
 16144 ;;		Nothing
 16145 ;; This function is called by:
 16146 ;;		_EUSART1_Initialize
 16147 ;;		_INTERRUPT_InterruptManager
 16148 ;; This function uses a non-reentrant model
 16149 ;;
 16150                           
 16151                           
 16152                           ;psect for function _EUSART1_Transmit_ISR
 16153  09EE                     _EUSART1_Transmit_ISR:
 16154                           
 16155                           ;mcc_generated_files/eusart1.c: 201:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
 16156                           
 16157                           ;incstack = 0
 16158                           ; Regs used in _EUSART1_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 16159  09EE  3008               	movlw	8
 16160  09EF  0141               	movlb	1	; select bank1
 16161  09F0  026D               	subwf	_eusart1TxBufferRemaining^(0+128),w
 16162  09F1  1803               	skipnc
 16163  09F2  2A09               	goto	i1l711
 16164                           
 16165                           ;mcc_generated_files/eusart1.c: 202:     {;mcc_generated_files/eusart1.c: 203:         T
      +                          X1REG = eusart1TxBuffer[eusart1TxTail++];
 16166  09F3  0872               	movf	_eusart1TxTail,w
 16167  09F4  3E30               	addlw	(low (_eusart1TxBuffer| (0+256)))& (0+255)
 16168  09F5  0086               	movwf	6
 16169  09F6  3001               	movlw	1	; select bank2/3
 16170  09F7  0087               	movwf	7
 16171  09F8  0801               	movf	1,w
 16172  09F9  0142               	movlb	2	; select bank2
 16173  09FA  009A               	movwf	26	;volatile
 16174  09FB  3001               	movlw	1
 16175  09FC  00F6               	movwf	??_EUSART1_Transmit_ISR
 16176  09FD  0876               	movf	??_EUSART1_Transmit_ISR,w
 16177  09FE  07F2               	addwf	_eusart1TxTail,f	;volatile
 16178                           
 16179                           ;mcc_generated_files/eusart1.c: 204:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
 16180  09FF  3008               	movlw	8
 16181  0A00  0272               	subwf	_eusart1TxTail,w
 16182  0A01  1803               	btfsc	3,0
 16183                           
 16184                           ;mcc_generated_files/eusart1.c: 205:         {;mcc_generated_files/eusart1.c: 206:      
      +                                 eusart1TxTail = 0;
 16185  0A02  01F2               	clrf	_eusart1TxTail	;volatile
 16186                           
 16187                           ;mcc_generated_files/eusart1.c: 208:         eusart1TxBufferRemaining++;
 16188  0A03  3001               	movlw	1
 16189  0A04  00F6               	movwf	??_EUSART1_Transmit_ISR
 16190  0A05  0876               	movf	??_EUSART1_Transmit_ISR,w
 16191  0A06  0141               	movlb	1	; select bank1
 16192  0A07  07ED               	addwf	_eusart1TxBufferRemaining^(0+128),f	;volatile
 16193                           
 16194                           ;mcc_generated_files/eusart1.c: 209:     }
 16195  0A08  0008               	return
 16196  0A09                     i1l711:	
 16197                           ;mcc_generated_files/eusart1.c: 210:     else
 16198                           
 16199                           
 16200                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         P
      +                          IE3bits.TX1IE = 0;
 16201  0A09  014E               	movlb	14	; select bank14
 16202  0A0A  1219               	bcf	25,4	;volatile
 16203  0A0B  0008               	return
 16204  0A0C                     __end_of_EUSART1_Transmit_ISR:
 16205                           
 16206                           	psect	text78
 16207  0BF6                     __ptext78:	
 16208 ;; *************** function _EUSART1_Receive_ISR *****************
 16209 ;; Defined at:
 16210 ;;		line 216 in file "mcc_generated_files/eusart1.c"
 16211 ;; Parameters:    Size  Location     Type
 16212 ;;		None
 16213 ;; Auto vars:     Size  Location     Type
 16214 ;;		None
 16215 ;; Return value:  Size  Location     Type
 16216 ;;                  1    wreg      void 
 16217 ;; Registers used:
 16218 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16219 ;; Tracked objects:
 16220 ;;		On entry : 3F/2
 16221 ;;		On exit  : 0/0
 16222 ;;		Unchanged: 0/0
 16223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16227 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16228 ;;Total ram usage:        0 bytes
 16229 ;; Hardware stack levels used: 1
 16230 ;; Hardware stack levels required when called: 2
 16231 ;; This function calls:
 16232 ;;		Absolute function
 16233 ;;		_EUSART1_DefaultErrorHandler
 16234 ;;		_EUSART1_DefaultFramingErrorHandler
 16235 ;;		_EUSART1_DefaultOverrunErrorHandler
 16236 ;;		_EUSART1_RxDataHandler
 16237 ;; This function is called by:
 16238 ;;		_EUSART1_Initialize
 16239 ;;		_INTERRUPT_InterruptManager
 16240 ;; This function uses a non-reentrant model
 16241 ;;
 16242                           
 16243                           
 16244                           ;psect for function _EUSART1_Receive_ISR
 16245  0BF6                     _EUSART1_Receive_ISR:
 16246                           
 16247                           ;mcc_generated_files/eusart1.c: 219:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 16248                           
 16249                           ;incstack = 0
 16250                           ; Regs used in _EUSART1_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 16251  0BF6  0871               	movf	_eusart1RxHead,w	;volatile
 16252  0BF7  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 16253  0BF8  0086               	movwf	6
 16254  0BF9  3001               	movlw	1	; select bank2/3
 16255  0BFA  0087               	movwf	7
 16256  0BFB  0181               	clrf	1
 16257                           
 16258                           ;mcc_generated_files/eusart1.c: 221:     if(RC1STAbits.FERR){
 16259  0BFC  1D1D               	btfss	29,2	;volatile
 16260  0BFD  2C09               	goto	i1l4148
 16261                           
 16262                           ;mcc_generated_files/eusart1.c: 222:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 16263  0BFE  0871               	movf	_eusart1RxHead,w	;volatile
 16264  0BFF  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 16265  0C00  0086               	movwf	6
 16266  0C01  3001               	movlw	1	; select bank2/3
 16267  0C02  0087               	movwf	7
 16268  0C03  1481               	bsf	1,1
 16269                           
 16270                           ;mcc_generated_files/eusart1.c: 223:         EUSART1_FramingErrorHandler();
 16271  0C04  0863               	movf	(_EUSART1_FramingErrorHandler+1)^(0+256),w
 16272  0C05  008A               	movwf	10
 16273  0C06  0862               	movf	_EUSART1_FramingErrorHandler^(0+256),w
 16274  0C07  000A               	callw
 16275  0C08  318B               	pagesel	$
 16276  0C09                     i1l4148:
 16277                           
 16278                           ;mcc_generated_files/eusart1.c: 226:     if(RC1STAbits.OERR){
 16279  0C09  0142               	movlb	2	; select bank2
 16280  0C0A  1C9D               	btfss	29,1	;volatile
 16281  0C0B  2C17               	goto	i1l4154
 16282                           
 16283                           ;mcc_generated_files/eusart1.c: 227:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 16284  0C0C  0871               	movf	_eusart1RxHead,w	;volatile
 16285  0C0D  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 16286  0C0E  0086               	movwf	6
 16287  0C0F  3001               	movlw	1	; select bank2/3
 16288  0C10  0087               	movwf	7
 16289  0C11  1501               	bsf	1,2
 16290                           
 16291                           ;mcc_generated_files/eusart1.c: 228:         EUSART1_OverrunErrorHandler();
 16292  0C12  0861               	movf	(_EUSART1_OverrunErrorHandler+1)^(0+256),w
 16293  0C13  008A               	movwf	10
 16294  0C14  0860               	movf	_EUSART1_OverrunErrorHandler^(0+256),w
 16295  0C15  000A               	callw
 16296  0C16  318B               	pagesel	$
 16297  0C17                     i1l4154:
 16298                           
 16299                           ;mcc_generated_files/eusart1.c: 231:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 16300  0C17  0871               	movf	_eusart1RxHead,w	;volatile
 16301  0C18  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 16302  0C19  0086               	movwf	6
 16303  0C1A  3001               	movlw	1	; select bank2/3
 16304  0C1B  0087               	movwf	7
 16305  0C1C  0801               	movf	1,w
 16306  0C1D  1903               	btfsc	3,2
 16307  0C1E  2C26               	goto	i1l4158
 16308                           
 16309                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_ErrorHandler();
 16310  0C1F  0142               	movlb	2	; select bank2
 16311  0C20  085F               	movf	(_EUSART1_ErrorHandler+1)^(0+256),w
 16312  0C21  008A               	movwf	10
 16313  0C22  085E               	movf	_EUSART1_ErrorHandler^(0+256),w
 16314  0C23  000A               	callw
 16315  0C24  318B               	pagesel	$
 16316                           
 16317                           ;mcc_generated_files/eusart1.c: 233:     } else {
 16318  0C25  0008               	return
 16319  0C26                     i1l4158:
 16320                           
 16321                           ;mcc_generated_files/eusart1.c: 234:         EUSART1_RxDataHandler();
 16322  0C26  3189  216D         	fcall	_EUSART1_RxDataHandler
 16323  0C28  0008               	return
 16324  0C29                     __end_of_EUSART1_Receive_ISR:
 16325                           
 16326                           	psect	text79
 16327  1752                     __ptext79:	
 16328 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 16329 ;; Defined at:
 16330 ;;		line 252 in file "mcc_generated_files/eusart1.c"
 16331 ;; Parameters:    Size  Location     Type
 16332 ;;		None
 16333 ;; Auto vars:     Size  Location     Type
 16334 ;;		None
 16335 ;; Return value:  Size  Location     Type
 16336 ;;                  1    wreg      void 
 16337 ;; Registers used:
 16338 ;;		None
 16339 ;; Tracked objects:
 16340 ;;		On entry : 3F/2
 16341 ;;		On exit  : 3F/2
 16342 ;;		Unchanged: 0/0
 16343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16347 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16348 ;;Total ram usage:        0 bytes
 16349 ;; Hardware stack levels used: 1
 16350 ;; This function calls:
 16351 ;;		Nothing
 16352 ;; This function is called by:
 16353 ;;		_EUSART1_Initialize
 16354 ;;		_EUSART1_Receive_ISR
 16355 ;; This function uses a non-reentrant model
 16356 ;;
 16357                           
 16358                           
 16359                           ;psect for function _EUSART1_DefaultOverrunErrorHandler
 16360  1752                     _EUSART1_DefaultOverrunErrorHandler:
 16361                           
 16362                           ;mcc_generated_files/eusart1.c: 255:     RC1STAbits.CREN = 0;
 16363                           
 16364                           ;incstack = 0
 16365                           ; Regs used in _EUSART1_DefaultOverrunErrorHandler: []
 16366  1752  121D               	bcf	29,4	;volatile
 16367                           
 16368                           ;mcc_generated_files/eusart1.c: 256:     RC1STAbits.CREN = 1;
 16369  1753  161D               	bsf	29,4	;volatile
 16370  1754  0008               	return
 16371  1755                     __end_of_EUSART1_DefaultOverrunErrorHandler:
 16372                           
 16373                           	psect	text80
 16374  1747                     __ptext80:	
 16375 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 16376 ;; Defined at:
 16377 ;;		line 250 in file "mcc_generated_files/eusart1.c"
 16378 ;; Parameters:    Size  Location     Type
 16379 ;;		None
 16380 ;; Auto vars:     Size  Location     Type
 16381 ;;		None
 16382 ;; Return value:  Size  Location     Type
 16383 ;;                  1    wreg      void 
 16384 ;; Registers used:
 16385 ;;		None
 16386 ;; Tracked objects:
 16387 ;;		On entry : 3F/2
 16388 ;;		On exit  : 3F/2
 16389 ;;		Unchanged: 3F/0
 16390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16394 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16395 ;;Total ram usage:        0 bytes
 16396 ;; Hardware stack levels used: 1
 16397 ;; This function calls:
 16398 ;;		Nothing
 16399 ;; This function is called by:
 16400 ;;		_EUSART1_Initialize
 16401 ;;		_EUSART1_Receive_ISR
 16402 ;; This function uses a non-reentrant model
 16403 ;;
 16404                           
 16405                           
 16406                           ;psect for function _EUSART1_DefaultFramingErrorHandler
 16407  1747                     _EUSART1_DefaultFramingErrorHandler:
 16408                           
 16409                           ;incstack = 0
 16410                           ; Regs used in _EUSART1_DefaultFramingErrorHandler: []
 16411  1747  0008               	return
 16412  1748                     __end_of_EUSART1_DefaultFramingErrorHandler:
 16413                           
 16414                           	psect	text81
 16415  174F                     __ptext81:	
 16416 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 16417 ;; Defined at:
 16418 ;;		line 260 in file "mcc_generated_files/eusart1.c"
 16419 ;; Parameters:    Size  Location     Type
 16420 ;;		None
 16421 ;; Auto vars:     Size  Location     Type
 16422 ;;		None
 16423 ;; Return value:  Size  Location     Type
 16424 ;;                  1    wreg      void 
 16425 ;; Registers used:
 16426 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16427 ;; Tracked objects:
 16428 ;;		On entry : 3F/2
 16429 ;;		On exit  : 3F/0
 16430 ;;		Unchanged: 0/0
 16431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16435 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16436 ;;Total ram usage:        0 bytes
 16437 ;; Hardware stack levels used: 1
 16438 ;; Hardware stack levels required when called: 1
 16439 ;; This function calls:
 16440 ;;		_EUSART1_RxDataHandler
 16441 ;; This function is called by:
 16442 ;;		_EUSART1_Initialize
 16443 ;;		_EUSART1_Receive_ISR
 16444 ;; This function uses a non-reentrant model
 16445 ;;
 16446                           
 16447                           
 16448                           ;psect for function _EUSART1_DefaultErrorHandler
 16449  174F                     _EUSART1_DefaultErrorHandler:
 16450                           
 16451                           ;mcc_generated_files/eusart1.c: 261:     EUSART1_RxDataHandler();
 16452                           
 16453                           ;incstack = 0
 16454                           ; Regs used in _EUSART1_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 16455  174F  3189  216D         	fcall	_EUSART1_RxDataHandler
 16456  1751  0008               	return
 16457  1752                     __end_of_EUSART1_DefaultErrorHandler:
 16458                           
 16459                           	psect	text82
 16460  096D                     __ptext82:	
 16461 ;; *************** function _EUSART1_RxDataHandler *****************
 16462 ;; Defined at:
 16463 ;;		line 240 in file "mcc_generated_files/eusart1.c"
 16464 ;; Parameters:    Size  Location     Type
 16465 ;;		None
 16466 ;; Auto vars:     Size  Location     Type
 16467 ;;		None
 16468 ;; Return value:  Size  Location     Type
 16469 ;;                  1    wreg      void 
 16470 ;; Registers used:
 16471 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 16472 ;; Tracked objects:
 16473 ;;		On entry : 0/2
 16474 ;;		On exit  : 3F/0
 16475 ;;		Unchanged: 0/0
 16476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16479 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16480 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16481 ;;Total ram usage:        1 bytes
 16482 ;; Hardware stack levels used: 1
 16483 ;; This function calls:
 16484 ;;		Nothing
 16485 ;; This function is called by:
 16486 ;;		_EUSART1_Receive_ISR
 16487 ;;		_EUSART1_DefaultErrorHandler
 16488 ;; This function uses a non-reentrant model
 16489 ;;
 16490                           
 16491                           
 16492                           ;psect for function _EUSART1_RxDataHandler
 16493  096D                     _EUSART1_RxDataHandler:
 16494                           
 16495                           ;mcc_generated_files/eusart1.c: 242:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 16496                           
 16497                           ;incstack = 0
 16498                           ; Regs used in _EUSART1_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 16499  096D  0142               	movlb	2	; select bank2
 16500  096E  0819               	movf	25,w	;volatile
 16501  096F  00F6               	movwf	??_EUSART1_RxDataHandler
 16502  0970  0871               	movf	_eusart1RxHead,w
 16503  0971  3E28               	addlw	(low (_eusart1RxBuffer| (0+256)))& (0+255)
 16504  0972  0086               	movwf	6
 16505  0973  3001               	movlw	1	; select bank2/3
 16506  0974  0087               	movwf	7
 16507  0975  0876               	movf	??_EUSART1_RxDataHandler,w
 16508  0976  0081               	movwf	1
 16509  0977  3001               	movlw	1
 16510  0978  00F6               	movwf	??_EUSART1_RxDataHandler
 16511  0979  0876               	movf	??_EUSART1_RxDataHandler,w
 16512  097A  07F1               	addwf	_eusart1RxHead,f	;volatile
 16513                           
 16514                           ;mcc_generated_files/eusart1.c: 243:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 16515  097B  3008               	movlw	8
 16516  097C  0271               	subwf	_eusart1RxHead,w
 16517  097D  1803               	btfsc	3,0
 16518                           
 16519                           ;mcc_generated_files/eusart1.c: 244:     {;mcc_generated_files/eusart1.c: 245:         e
      +                          usart1RxHead = 0;
 16520  097E  01F1               	clrf	_eusart1RxHead	;volatile
 16521                           
 16522                           ;mcc_generated_files/eusart1.c: 247:     eusart1RxCount++;
 16523  097F  3001               	movlw	1
 16524  0980  00F6               	movwf	??_EUSART1_RxDataHandler
 16525  0981  0876               	movf	??_EUSART1_RxDataHandler,w
 16526  0982  0140               	movlb	0	; select bank0
 16527  0983  07A3               	addwf	_eusart1RxCount,f	;volatile
 16528  0984  0008               	return
 16529  0985                     __end_of_EUSART1_RxDataHandler:
 16530                           
 16531                           	psect	text83
 16532  1749                     __ptext83:	
 16533 ;; *************** function _CLC2_ISR *****************
 16534 ;; Defined at:
 16535 ;;		line 89 in file "mcc_generated_files/clc2.c"
 16536 ;; Parameters:    Size  Location     Type
 16537 ;;		None
 16538 ;; Auto vars:     Size  Location     Type
 16539 ;;		None
 16540 ;; Return value:  Size  Location     Type
 16541 ;;                  1    wreg      void 
 16542 ;; Registers used:
 16543 ;;		None
 16544 ;; Tracked objects:
 16545 ;;		On entry : 3F/E
 16546 ;;		On exit  : 3F/E
 16547 ;;		Unchanged: 0/0
 16548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16552 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16553 ;;Total ram usage:        0 bytes
 16554 ;; Hardware stack levels used: 1
 16555 ;; This function calls:
 16556 ;;		Nothing
 16557 ;; This function is called by:
 16558 ;;		_INTERRUPT_InterruptManager
 16559 ;; This function uses a non-reentrant model
 16560 ;;
 16561                           
 16562                           
 16563                           ;psect for function _CLC2_ISR
 16564  1749                     _CLC2_ISR:
 16565                           
 16566                           ;mcc_generated_files/clc2.c: 92:     PIR5bits.CLC2IF = 0;
 16567                           
 16568                           ;incstack = 0
 16569                           ; Regs used in _CLC2_ISR: []
 16570  1749  1291               	bcf	17,5	;volatile
 16571  174A  0008               	return
 16572  174B                     __end_of_CLC2_ISR:
 16573  007E                     btemp	set	126	;btemp
 16574  007E                     int$flags	set	126
 16575  007E                     wtemp0	set	126
 16576                           
 16577                           	psect	config
 16578                           
 16579                           ;Config register CONFIG1 @ 0x8007
 16580                           ;	External Oscillator mode selection bits
 16581                           ;	FEXTOSC = OFF, Oscillator not enabled
 16582                           ;	Power-up default value for COSC bits
 16583                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
 16584                           ;	Clock Out Enable bit
 16585                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 16586                           ;	Clock Switch Enable bit
 16587                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 16588                           ;	Fail-Safe Clock Monitor Enable bit
 16589                           ;	FCMEN = ON, FSCM timer enabled
 16590  8007                     	org	32775
 16591  8007  3FEC               	dw	16364
 16592                           
 16593                           ;Config register CONFIG2 @ 0x8008
 16594                           ;	Master Clear Enable bit
 16595                           ;	MCLRE = ON, MCLR pin is Master Clear function
 16596                           ;	Power-up Timer Enable bit
 16597                           ;	PWRTE = OFF, PWRT disabled
 16598                           ;	Low-Power BOR enable bit
 16599                           ;	LPBOREN = OFF, ULPBOR disabled
 16600                           ;	Brown-out reset enable bits
 16601                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 16602                           ;	Brown-out Reset Voltage Selection
 16603                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
 16604                           ;	Zero-cross detect disable
 16605                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
 16606                           ;	Peripheral Pin Select one-way control
 16607                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 16608                           ;	Stack Overflow/Underflow Reset Enable bit
 16609                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 16610  8008                     	org	32776
 16611  8008  3FFF               	dw	16383
 16612                           
 16613                           ;Config register CONFIG3 @ 0x8009
 16614                           ;	WDT Period Select bits
 16615                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 16616                           ;	WDT operating mode
 16617                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
 16618                           ;	WDT Window Select bits
 16619                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 16620                           ;	WDT input clock selector
 16621                           ;	WDTCCS = SC, Software Control
 16622  8009                     	org	32777
 16623  8009  3F9F               	dw	16287
 16624                           
 16625                           ;Config register CONFIG4 @ 0x800A
 16626                           ;	Boot Block Size Selection bits
 16627                           ;	BBSIZE = BB512, 512 words boot block size
 16628                           ;	Boot Block Enable bit
 16629                           ;	BBEN = OFF, Boot Block disabled
 16630                           ;	SAF Enable bit
 16631                           ;	SAFEN = OFF, SAF disabled
 16632                           ;	Application Block Write Protection bit
 16633                           ;	WRTAPP = OFF, Application Block not write protected
 16634                           ;	Boot Block Write Protection bit
 16635                           ;	WRTB = OFF, Boot Block not write protected
 16636                           ;	Configuration Register Write Protection bit
 16637                           ;	WRTC = OFF, Configuration Register not write protected
 16638                           ;	Storage Area Flash Write Protection bit
 16639                           ;	WRTSAF = OFF, SAF not write protected
 16640                           ;	Low Voltage Programming Enable bit
 16641                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 16642  800A                     	org	32778
 16643  800A  3FFF               	dw	16383
 16644                           
 16645                           ;Config register CONFIG5 @ 0x800B
 16646                           ;	UserNVM Program memory code protection bit
 16647                           ;	CP = OFF, UserNVM code protection disabled
 16648  800B                     	org	32779
 16649  800B  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    472
    Data        18
    BSS         146
    Persistent  54
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     27      80
    BANK1            80      0      79
    BANK2            80     26      74
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    memset@dest	PTR void  size(1) Largest target is 13
		 -> LIN_packet(BANK1[13]), 

    memset@s	PTR unsigned char  size(1) Largest target is 13
		 -> LIN_packet(BANK1[13]), 

    memcpy@d1	PTR void  size(1) Largest target is 13
		 -> LIN_packet(BANK1[13]), processLIN@tempRxData(BANK0[8]), 

    memcpy@d	PTR unsigned char  size(1) Largest target is 13
		 -> LIN_packet(BANK1[13]), processLIN@tempRxData(BANK0[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 13
		 -> LIN_packet.data(BANK1[8]), LIN_packet(BANK1[13]), LIN_DIAGNOSTIC_Data(BANK2[8]), LIN_TEMPERATURE_RISE_SA_Data(BANK1[2]), 
		 -> LIN_TEMPERATURE_RISE_JS_Data(BANK1[2]), LIN_JUNCTION_TEMPERATURE_Data(BANK1[2]), LIN_HEATSINK_TEMPERATURE_Data(BANK1[2]), LIN_AMBIENT_TEMPERATURE_Data(BANK1[2]), 
		 -> LIN_CURRENT_SENSE_OFFSET_Data(BANK1[2]), LIN_ADC_CURRENT_SENSE_CORRECTED_Data(BANK1[2]), LIN_ADC_TEMP_SENSE_Data(BANK1[2]), LIN_ADC_CURRENT_SENSE_UNCORRECTED_Data(BANK1[2]), 
		 -> LIN_ADC_VCC_SENSE_Data(BANK1[2]), LIN_OVER_TEMP_FAULT_Data(BANK0[1]), LIN_UVLO_FAULT_Data(BANK0[1]), LIN_OVER_CURRENT_FAULT_Data(BANK0[1]), 
		 -> LIN_GET_TRIGGER_TYPE_Data(BANK0[1]), LIN_OUTPUT_STATE_Data(BANK0[1]), LIN_TCC_SAMPLE_TIME_Data(BANK1[2]), LIN_REDUCED_DRIVE_TIME_Data(BANK0[1]), 
		 -> LIN_B1_COEF_Data(BANK0[1]), LIN_DAC_I_HW_TRIP_Data(BANK0[1]), LIN_ISENSE_MAX_Data(BANK1[2]), LIN_CURRENT2COUNTS_SQUARED_Data(BANK1[2]), 
		 -> LIN_FACTOR_RDSON_RTHSA_Data(BANK1[2]), LIN_FACTOR_RDSON_RTHJS_Data(BANK1[2]), LIN_TJ_LIMIT_Data(BANK0[1]), LIN_ENTER_SLEEP_MODE_Data(BANK0[1]), 
		 -> LIN_TRIGGER_TYPE_Data(BANK0[1]), LIN_COMMAND_Data(BANK0[1]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 13
		 -> LIN_packet.data(BANK1[8]), LIN_packet(BANK1[13]), LIN_DIAGNOSTIC_Data(BANK2[8]), LIN_TEMPERATURE_RISE_SA_Data(BANK1[2]), 
		 -> LIN_TEMPERATURE_RISE_JS_Data(BANK1[2]), LIN_JUNCTION_TEMPERATURE_Data(BANK1[2]), LIN_HEATSINK_TEMPERATURE_Data(BANK1[2]), LIN_AMBIENT_TEMPERATURE_Data(BANK1[2]), 
		 -> LIN_CURRENT_SENSE_OFFSET_Data(BANK1[2]), LIN_ADC_CURRENT_SENSE_CORRECTED_Data(BANK1[2]), LIN_ADC_TEMP_SENSE_Data(BANK1[2]), LIN_ADC_CURRENT_SENSE_UNCORRECTED_Data(BANK1[2]), 
		 -> LIN_ADC_VCC_SENSE_Data(BANK1[2]), LIN_OVER_TEMP_FAULT_Data(BANK0[1]), LIN_UVLO_FAULT_Data(BANK0[1]), LIN_OVER_CURRENT_FAULT_Data(BANK0[1]), 
		 -> LIN_GET_TRIGGER_TYPE_Data(BANK0[1]), LIN_OUTPUT_STATE_Data(BANK0[1]), LIN_TCC_SAMPLE_TIME_Data(BANK1[2]), LIN_REDUCED_DRIVE_TIME_Data(BANK0[1]), 
		 -> LIN_B1_COEF_Data(BANK0[1]), LIN_DAC_I_HW_TRIP_Data(BANK0[1]), LIN_ISENSE_MAX_Data(BANK1[2]), LIN_CURRENT2COUNTS_SQUARED_Data(BANK1[2]), 
		 -> LIN_FACTOR_RDSON_RTHSA_Data(BANK1[2]), LIN_FACTOR_RDSON_RTHJS_Data(BANK1[2]), LIN_TJ_LIMIT_Data(BANK0[1]), LIN_ENTER_SLEEP_MODE_Data(BANK0[1]), 
		 -> LIN_TRIGGER_TYPE_Data(BANK0[1]), LIN_COMMAND_Data(BANK0[1]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), LIN_timerHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), LIN_timerHandler(), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 

    LIN_getChecksum@data	PTR unsigned char  size(1) Largest target is 13
		 -> LIN_packet(BANK1[13]), 

    LIN_getFromTable@rxCommand.data	PTR unsigned char  size(2) Largest target is 8
		 -> LIN_DIAGNOSTIC_Data(BANK2[8]), LIN_TEMPERATURE_RISE_SA_Data(BANK1[2]), LIN_TEMPERATURE_RISE_JS_Data(BANK1[2]), LIN_JUNCTION_TEMPERATURE_Data(BANK1[2]), 
		 -> LIN_HEATSINK_TEMPERATURE_Data(BANK1[2]), LIN_AMBIENT_TEMPERATURE_Data(BANK1[2]), LIN_CURRENT_SENSE_OFFSET_Data(BANK1[2]), LIN_ADC_CURRENT_SENSE_CORRECTED_Data(BANK1[2]), 
		 -> LIN_ADC_TEMP_SENSE_Data(BANK1[2]), LIN_ADC_CURRENT_SENSE_UNCORRECTED_Data(BANK1[2]), LIN_ADC_VCC_SENSE_Data(BANK1[2]), LIN_OVER_TEMP_FAULT_Data(BANK0[1]), 
		 -> LIN_UVLO_FAULT_Data(BANK0[1]), LIN_OVER_CURRENT_FAULT_Data(BANK0[1]), LIN_GET_TRIGGER_TYPE_Data(BANK0[1]), LIN_OUTPUT_STATE_Data(BANK0[1]), 
		 -> LIN_TCC_SAMPLE_TIME_Data(BANK1[2]), LIN_REDUCED_DRIVE_TIME_Data(BANK0[1]), LIN_B1_COEF_Data(BANK0[1]), LIN_DAC_I_HW_TRIP_Data(BANK0[1]), 
		 -> LIN_ISENSE_MAX_Data(BANK1[2]), LIN_CURRENT2COUNTS_SQUARED_Data(BANK1[2]), LIN_FACTOR_RDSON_RTHSA_Data(BANK1[2]), LIN_FACTOR_RDSON_RTHJS_Data(BANK1[2]), 
		 -> LIN_TJ_LIMIT_Data(BANK0[1]), LIN_ENTER_SLEEP_MODE_Data(BANK0[1]), LIN_TRIGGER_TYPE_Data(BANK0[1]), LIN_COMMAND_Data(BANK0[1]), 

    LIN_getFromTable@rxCommand	PTR const struct . size(2) Largest target is 140
		 -> NULL(NULL[0]), scheduleTable(CODE[140]), 

    LIN_getPacket@data	PTR unsigned char  size(1) Largest target is 8
		 -> processLIN@tempRxData(BANK0[8]), 

    LIN_sendPacket@data	PTR unsigned char  size(1) Largest target is 13
		 -> LIN_packet(BANK1[13]), 

    sp__memset	PTR void  size(1) Largest target is 13
		 -> LIN_packet(BANK1[13]), 

    sp__memcpy	PTR void  size(1) Largest target is 13
		 -> LIN_packet(BANK1[13]), processLIN@tempRxData(BANK0[8]), 

    LIN_queuePacket@tempSchedule.data	PTR unsigned char  size(2) Largest target is 8
		 -> LIN_DIAGNOSTIC_Data(BANK2[8]), LIN_TEMPERATURE_RISE_SA_Data(BANK1[2]), LIN_TEMPERATURE_RISE_JS_Data(BANK1[2]), LIN_JUNCTION_TEMPERATURE_Data(BANK1[2]), 
		 -> LIN_HEATSINK_TEMPERATURE_Data(BANK1[2]), LIN_AMBIENT_TEMPERATURE_Data(BANK1[2]), LIN_CURRENT_SENSE_OFFSET_Data(BANK1[2]), LIN_ADC_CURRENT_SENSE_CORRECTED_Data(BANK1[2]), 
		 -> LIN_ADC_TEMP_SENSE_Data(BANK1[2]), LIN_ADC_CURRENT_SENSE_UNCORRECTED_Data(BANK1[2]), LIN_ADC_VCC_SENSE_Data(BANK1[2]), LIN_OVER_TEMP_FAULT_Data(BANK0[1]), 
		 -> LIN_UVLO_FAULT_Data(BANK0[1]), LIN_OVER_CURRENT_FAULT_Data(BANK0[1]), LIN_GET_TRIGGER_TYPE_Data(BANK0[1]), LIN_OUTPUT_STATE_Data(BANK0[1]), 
		 -> LIN_TCC_SAMPLE_TIME_Data(BANK1[2]), LIN_REDUCED_DRIVE_TIME_Data(BANK0[1]), LIN_B1_COEF_Data(BANK0[1]), LIN_DAC_I_HW_TRIP_Data(BANK0[1]), 
		 -> LIN_ISENSE_MAX_Data(BANK1[2]), LIN_CURRENT2COUNTS_SQUARED_Data(BANK1[2]), LIN_FACTOR_RDSON_RTHSA_Data(BANK1[2]), LIN_FACTOR_RDSON_RTHJS_Data(BANK1[2]), 
		 -> LIN_TJ_LIMIT_Data(BANK0[1]), LIN_ENTER_SLEEP_MODE_Data(BANK0[1]), LIN_TRIGGER_TYPE_Data(BANK0[1]), LIN_COMMAND_Data(BANK0[1]), 

    LIN_queuePacket@tempSchedule	PTR const struct . size(2) Largest target is 140
		 -> NULL(NULL[0]), scheduleTable(CODE[140]), 

    LIN_init@processData	PTR FTN()void  size(2) Largest target is 1
		 -> processLIN(), 

    LIN_processData	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), processLIN(), 

    LIN_rxCommand.data	PTR unsigned char  size(2) Largest target is 8
		 -> LIN_DIAGNOSTIC_Data(BANK2[8]), LIN_TEMPERATURE_RISE_SA_Data(BANK1[2]), LIN_TEMPERATURE_RISE_JS_Data(BANK1[2]), LIN_JUNCTION_TEMPERATURE_Data(BANK1[2]), 
		 -> LIN_HEATSINK_TEMPERATURE_Data(BANK1[2]), LIN_AMBIENT_TEMPERATURE_Data(BANK1[2]), LIN_CURRENT_SENSE_OFFSET_Data(BANK1[2]), LIN_ADC_CURRENT_SENSE_CORRECTED_Data(BANK1[2]), 
		 -> LIN_ADC_TEMP_SENSE_Data(BANK1[2]), LIN_ADC_CURRENT_SENSE_UNCORRECTED_Data(BANK1[2]), LIN_ADC_VCC_SENSE_Data(BANK1[2]), LIN_OVER_TEMP_FAULT_Data(BANK0[1]), 
		 -> LIN_UVLO_FAULT_Data(BANK0[1]), LIN_OVER_CURRENT_FAULT_Data(BANK0[1]), LIN_GET_TRIGGER_TYPE_Data(BANK0[1]), LIN_OUTPUT_STATE_Data(BANK0[1]), 
		 -> LIN_TCC_SAMPLE_TIME_Data(BANK1[2]), LIN_REDUCED_DRIVE_TIME_Data(BANK0[1]), LIN_B1_COEF_Data(BANK0[1]), LIN_DAC_I_HW_TRIP_Data(BANK0[1]), 
		 -> LIN_ISENSE_MAX_Data(BANK1[2]), LIN_CURRENT2COUNTS_SQUARED_Data(BANK1[2]), LIN_FACTOR_RDSON_RTHSA_Data(BANK1[2]), LIN_FACTOR_RDSON_RTHJS_Data(BANK1[2]), 
		 -> LIN_TJ_LIMIT_Data(BANK0[1]), LIN_ENTER_SLEEP_MODE_Data(BANK0[1]), LIN_TRIGGER_TYPE_Data(BANK0[1]), LIN_COMMAND_Data(BANK0[1]), 

    LIN_init@command	const PTR const struct . size(2) Largest target is 140
		 -> scheduleTable(CODE[140]), 

    LIN_rxCommand	PTR const struct . size(2) Largest target is 140
		 -> NULL(NULL[0]), scheduleTable(CODE[140]), 

    S26$data	PTR unsigned char  size(2) Largest target is 8
		 -> LIN_DIAGNOSTIC_Data(BANK2[8]), LIN_TEMPERATURE_RISE_SA_Data(BANK1[2]), LIN_TEMPERATURE_RISE_JS_Data(BANK1[2]), LIN_JUNCTION_TEMPERATURE_Data(BANK1[2]), 
		 -> LIN_HEATSINK_TEMPERATURE_Data(BANK1[2]), LIN_AMBIENT_TEMPERATURE_Data(BANK1[2]), LIN_CURRENT_SENSE_OFFSET_Data(BANK1[2]), LIN_ADC_CURRENT_SENSE_CORRECTED_Data(BANK1[2]), 
		 -> LIN_ADC_TEMP_SENSE_Data(BANK1[2]), LIN_ADC_CURRENT_SENSE_UNCORRECTED_Data(BANK1[2]), LIN_ADC_VCC_SENSE_Data(BANK1[2]), LIN_OVER_TEMP_FAULT_Data(BANK0[1]), 
		 -> LIN_UVLO_FAULT_Data(BANK0[1]), LIN_OVER_CURRENT_FAULT_Data(BANK0[1]), LIN_GET_TRIGGER_TYPE_Data(BANK0[1]), LIN_OUTPUT_STATE_Data(BANK0[1]), 
		 -> LIN_TCC_SAMPLE_TIME_Data(BANK1[2]), LIN_REDUCED_DRIVE_TIME_Data(BANK0[1]), LIN_B1_COEF_Data(BANK0[1]), LIN_DAC_I_HW_TRIP_Data(BANK0[1]), 
		 -> LIN_ISENSE_MAX_Data(BANK1[2]), LIN_CURRENT2COUNTS_SQUARED_Data(BANK1[2]), LIN_FACTOR_RDSON_RTHSA_Data(BANK1[2]), LIN_FACTOR_RDSON_RTHJS_Data(BANK1[2]), 
		 -> LIN_TJ_LIMIT_Data(BANK0[1]), LIN_ENTER_SLEEP_MODE_Data(BANK0[1]), LIN_TRIGGER_TYPE_Data(BANK0[1]), LIN_COMMAND_Data(BANK0[1]), 

    scheduleTable.data	PTR unsigned char  size(2) Largest target is 8
		 -> LIN_DIAGNOSTIC_Data(BANK2[8]), LIN_TEMPERATURE_RISE_SA_Data(BANK1[2]), LIN_TEMPERATURE_RISE_JS_Data(BANK1[2]), LIN_JUNCTION_TEMPERATURE_Data(BANK1[2]), 
		 -> LIN_HEATSINK_TEMPERATURE_Data(BANK1[2]), LIN_AMBIENT_TEMPERATURE_Data(BANK1[2]), LIN_CURRENT_SENSE_OFFSET_Data(BANK1[2]), LIN_ADC_CURRENT_SENSE_CORRECTED_Data(BANK1[2]), 
		 -> LIN_ADC_TEMP_SENSE_Data(BANK1[2]), LIN_ADC_CURRENT_SENSE_UNCORRECTED_Data(BANK1[2]), LIN_ADC_VCC_SENSE_Data(BANK1[2]), LIN_OVER_TEMP_FAULT_Data(BANK0[1]), 
		 -> LIN_UVLO_FAULT_Data(BANK0[1]), LIN_OVER_CURRENT_FAULT_Data(BANK0[1]), LIN_GET_TRIGGER_TYPE_Data(BANK0[1]), LIN_OUTPUT_STATE_Data(BANK0[1]), 
		 -> LIN_TCC_SAMPLE_TIME_Data(BANK1[2]), LIN_REDUCED_DRIVE_TIME_Data(BANK0[1]), LIN_B1_COEF_Data(BANK0[1]), LIN_DAC_I_HW_TRIP_Data(BANK0[1]), 
		 -> LIN_ISENSE_MAX_Data(BANK1[2]), LIN_CURRENT2COUNTS_SQUARED_Data(BANK1[2]), LIN_FACTOR_RDSON_RTHSA_Data(BANK1[2]), LIN_FACTOR_RDSON_RTHJS_Data(BANK1[2]), 
		 -> LIN_TJ_LIMIT_Data(BANK0[1]), LIN_ENTER_SLEEP_MODE_Data(BANK0[1]), LIN_TRIGGER_TYPE_Data(BANK0[1]), LIN_COMMAND_Data(BANK0[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR0_ISR->_ProcessAnalogInputs
    _ProcessAnalogInputs->i1_CmdOutput
    i1_CmdOutput->i1_TMR1_WriteTimer
    _EUSART1_Receive_ISR->_EUSART1_RxDataHandler
    _EUSART1_DefaultErrorHandler->_EUSART1_RxDataHandler

Critical Paths under _main in BANK0

    _main->_EFuse
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _LIN_Slave_Initialize->_LIN_init
    _LIN_setTimerHandler->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _LIN_handler->_processLIN
    _processLIN->_LIN_getPacket
    _LIN_getPacket->_memcpy
    _LIN_getPacket->_memset
    _EFuseInit->_CmdOutput
    _LIN_startTimer->_TMR0_WriteTimer
    _LIN_queuePacket->_LIN_sendPacket
    _LIN_sendPacket->_LIN_getChecksum
    _LIN_checkPID->_LIN_getFromTable
    _LIN_breakCheck->_EUSART1_Read
    _TCC_Curve->___lldiv
    ___lldiv->___lmul
    _CmdOutput->_TMR1_WriteTimer

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    _EFuse->_TCC_Curve

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   13464
                                             24 BANK2      2     2      0
                          _CmdOutput
                              _EFuse
                          _EFuseInit
                        _LIN_handler
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1300
                     _ADC_Initialize
                    _CLC1_Initialize
                    _CLC2_Initialize
                    _CLC3_Initialize
                    _CLC4_Initialize
                    _CMP2_Initialize
                    _DAC1_Initialize
                 _EUSART1_Initialize
                     _FVR_Initialize
               _LIN_Slave_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LIN_Slave_Initialize                                 0     0      0     484
                           _LIN_init
 ---------------------------------------------------------------------------------
 (3) _LIN_init                                             6     2      4     484
                                              2 BANK0      6     2      4
                       _LIN_enableRx
                _LIN_setTimerHandler
                      _LIN_stopTimer
 ---------------------------------------------------------------------------------
 (4) _LIN_setTimerHandler                                  0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   1     1      0     605
                                              2 BANK0      1     1      0
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _DAC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CMP2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLC4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLC3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLC2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LIN_handler                                          3     3      0   10504
                                              0 BANK2      3     3      0
                   Absolute function *
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                     _LIN_breakCheck
                       _LIN_checkPID
                      _LIN_disableRx
                       _LIN_enableRx
                    _LIN_getChecksum
                   _LIN_getFromTable
                    _LIN_queuePacket
                     _LIN_startTimer
                      _LIN_stopTimer
                             _memset
                         _processLIN *
 ---------------------------------------------------------------------------------
 (2) _processLIN                                          14    14      0    3414
                                             13 BANK0     14    14      0
                          _CmdOutput
                          _EFuseInit
                      _LIN_getPacket
 ---------------------------------------------------------------------------------
 (3) _LIN_getPacket                                        3     3      0    2190
                                             10 BANK0      3     3      0
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                              10     6      4    1449
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (3) _EFuseInit                                            0     0      0     321
                          _CmdOutput
                        _TMR0_Reload
 ---------------------------------------------------------------------------------
 (4) _TMR0_Reload                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _LIN_stopTimer                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LIN_startTimer                                       2     2      0     186
                                              2 BANK0      2     2      0
                    _TMR0_WriteTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_WriteTimer                                      2     0      2     155
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _LIN_queuePacket                                      7     7      0    2924
                                             14 BANK0      7     7      0
                    _LIN_getChecksum
                     _LIN_sendPacket
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     6      4     640
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (3) _LIN_sendPacket                                       6     4      2    1274
                                              8 BANK0      6     4      2
                      _EUSART1_Write
                    _LIN_getChecksum
 ---------------------------------------------------------------------------------
 (4) _LIN_getChecksum                                      8     6      2     809
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (4) _EUSART1_Write                                        2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _LIN_enableRx                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LIN_disableRx                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LIN_checkPID                                         1     1      0    1115
                                              7 BANK0      1     1      0
                     _LIN_calcParity
                   _LIN_getFromTable
 ---------------------------------------------------------------------------------
 (2) _LIN_getFromTable                                     7     6      1     533
                                              0 BANK0      7     6      1
 ---------------------------------------------------------------------------------
 (3) _LIN_calcParity                                       3     3      0     489
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _LIN_breakCheck                                       0     0      0      37
                       _EUSART1_Read
            _EUSART1_get_last_status
 ---------------------------------------------------------------------------------
 (3) _EUSART1_get_last_status                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Read                                         2     2      0      37
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EFuse                                                1     1      0    1018
                                             26 BANK0      1     1      0
                          _CmdOutput
              _GetAmbientTemperature
                          _TCC_Curve
                    _Update_LIN_Data
 ---------------------------------------------------------------------------------
 (2) _Update_LIN_Data                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _TCC_Curve                                           24    24      0     484
                                              0 BANK2     24    24      0
                            ___lldiv
                             ___lmul
                             ___omul
 ---------------------------------------------------------------------------------
 (3) ___omul                                              25     9     16      52
                                              0 BANK0     25     9     16
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     340
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8      68
                                             12 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _GetAmbientTemperature                               11     9      2     213
                                              0 BANK0     11     9      2
 ---------------------------------------------------------------------------------
 (4) _CmdOutput                                            3     3      0     321
                                              2 BANK0      3     3      0
                    _TMR1_StartTimer
                     _TMR1_StopTimer
                    _TMR1_WriteTimer
                    _TMR2_Initialize
                         _TMR2_Start
                          _TMR2_Stop
 ---------------------------------------------------------------------------------
 (5) _TMR2_Stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR2_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR1_WriteTimer                                      2     0      2     290
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _TMR1_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           0     0      0     182
                   Absolute function *
                           _CLC2_ISR
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR0_ISR                                             0     0      0     182
                   Absolute function *
                   _LIN_timerHandler *
                _ProcessAnalogInputs
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _ProcessAnalogInputs                                  1     1      0     182
                                              5 COMMON     1     1      0
                  _ADC_GetConversion
                  _ADC_SelectChannel
                        i1_CmdOutput
 ---------------------------------------------------------------------------------
 (9) i1_CmdOutput                                          3     3      0     138
                                              2 COMMON     3     3      0
                  i1_TMR1_StartTimer
                   i1_TMR1_StopTimer
                  i1_TMR1_WriteTimer
                  i1_TMR2_Initialize
                       i1_TMR2_Start
                        i1_TMR2_Stop
 ---------------------------------------------------------------------------------
 (10) i1_TMR2_Stop                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (10) i1_TMR2_Start                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) i1_TMR2_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (10) i1_TMR1_WriteTimer                                   2     0      2     116
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (10) i1_TMR1_StopTimer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (10) i1_TMR1_StartTimer                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _ADC_SelectChannel                                    2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (9) _ADC_GetConversion                                    4     2      2      22
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (8) _LIN_timerHandler                                     1     1      0       0
                                              0 COMMON     1     1      0
                    i1_LIN_stopTimer
 ---------------------------------------------------------------------------------
 (9) i1_LIN_stopTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _EUSART1_Transmit_ISR                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _EUSART1_Receive_ISR                                  0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (8) _EUSART1_DefaultOverrunErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART1_DefaultFramingErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART1_DefaultErrorHandler                          0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (8) _EUSART1_RxDataHandler                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _CLC2_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CmdOutput
     _TMR1_StartTimer
     _TMR1_StopTimer
     _TMR1_WriteTimer
     _TMR2_Initialize
     _TMR2_Start
     _TMR2_Stop
   _EFuse
     _CmdOutput
     _GetAmbientTemperature
     _TCC_Curve
       ___lldiv
         ___lmul (ARG)
       ___lmul
       ___omul
     _Update_LIN_Data
   _EFuseInit
     _CmdOutput
     _TMR0_Reload
   _LIN_handler
     Absolute function(Fake) *
     _EUSART1_Read *
     _EUSART1_is_rx_ready *
     _LIN_breakCheck *
       _EUSART1_Read
       _EUSART1_get_last_status
     _LIN_checkPID *
       _LIN_calcParity
       _LIN_getFromTable
     _LIN_disableRx *
     _LIN_enableRx *
     _LIN_getChecksum *
     _LIN_getFromTable *
     _LIN_queuePacket *
       _LIN_getChecksum
       _LIN_sendPacket
         _EUSART1_Write
         _LIN_getChecksum
       _memcpy
     _LIN_startTimer *
       _TMR0_WriteTimer
     _LIN_stopTimer *
     _memset *
     _processLIN *
       _CmdOutput
       _EFuseInit
       _LIN_getPacket
         _memcpy
         _memset
   _SYSTEM_Initialize
     _ADC_Initialize
     _CLC1_Initialize
     _CLC2_Initialize
     _CLC3_Initialize
     _CLC4_Initialize
     _CMP2_Initialize
     _DAC1_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _FVR_Initialize
     _LIN_Slave_Initialize
       _LIN_init
         _LIN_enableRx
         _LIN_setTimerHandler
           _TMR0_SetInterruptHandler
         _LIN_stopTimer
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
     _TMR2_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _CLC2_ISR *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _TMR0_ISR *
     Absolute function(Fake) *
     _LIN_timerHandler *
       i1_LIN_stopTimer
     _ProcessAnalogInputs *
       _ADC_GetConversion
       _ADC_SelectChannel
       i1_CmdOutput
         i1_TMR1_StartTimer
         i1_TMR1_StopTimer
         i1_TMR1_WriteTimer
         i1_TMR2_Initialize
         i1_TMR2_Start
         i1_TMR2_Stop
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      F5       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     1B      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      4F       8       98.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50     1A      4A      10       92.5%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      F5      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Jun 07 21:08:19 2022

                        __end_of_LIN_breakCheck 08E7                                  _adcTSense_prev 0020  
                         __end_of_LIN_getPacket 0A4C                           ??_LIN_setTimerHandler 004D  
                      _eusart1TxBufferRemaining 00ED                               ??_Update_LIN_Data 004B  
                         __end_of_LIN_disableRx 1771                          __end_of_FVR_Initialize 0873  
                               ?_LIN_calcParity 0076                                 _DAC1_Initialize 177B  
                                           l310 0BC2                                             l159 05D7  
                                           l273 04DF                                             l705 0A7C  
                                _TCC_Curve$3311 014C                                  _TCC_Curve$3312 0154  
                                _Trise_filtered 00A8                                     _triggerType 002E  
                               _timer1ReloadVal 015A                        __end_of_LIN_getFromTable 0E78  
                       __size_of_PMD_Initialize 0008                                 _TMR2_Initialize 08BB  
                             ??_CLC2_Initialize 004B                                             wreg 0009  
                         __end_of_scheduleTable 086F                                  _Trise_raw_curr 00A4  
                                          l1464 0EF7                                            l1466 0EDB  
                                          l5100 0421                                            l1485 0DF3  
                                          l5022 0CF2                                            l5030 0CCF  
                                          l1494 0CCA                                            l5104 042A  
                                          l5122 0487                                            l5114 045D  
                                          l5028 0CF8                                            l5060 03AC  
                                          l4510 0A70                                            l5142 04B0  
                                          l5126 0492                                            l5312 0C78  
                                          l4440 0AEB                                            l5136 04A8  
                                          l5128 0498                                            l4346 094D  
                                          l5410 0EF3                                            l5402 0ED7  
                                          l4506 07CF                                            l5074 03CD  
                                          l5146 04B6                                            l5340 0D4C  
                                          l5316 0C8A                                            l4620 0E3F  
                                          l4524 0A92                                            l5084 03E7  
                                          l5076 03D4                                            l5068 03BA  
                                          l5326 0D13                                            l4622 0E1D  
                                          l4454 0BBD                                            l5336 0D41  
                                          l5328 0D21                                            l4632 0E57  
                                          l4624 0E44                                            l4616 0E3D  
                                          l4456 0BA0                                            l5424 0B31  
                                          l4650 0F71                                            l4802 0F8C  
                                          l5372 0E89                                            l4652 0F7B  
                                          l4628 0E4A                                            l4580 0AAC  
                                          l4804 0FA3                                            l4740 0534  
                                          l4732 04F6                                            l4724 04E8  
                                          l4638 0E64                                            l4750 0561  
                                          l4742 0544                                            l4734 04FB  
                                          l4726 04EC                                            l4584 0ABB  
                                          l4832 08E5                                            l4752 0566  
                                          l4736 050E                                            l4728 04F1  
                                          l4674 0B40                                            l5386 0EA6  
                                          l4842 0963                                            l4578 0A98  
                                          l5490 0581                                            l4746 054B  
                                          l4738 0521                                            l5396 0EC0  
                                          l5492 0E6C                                            l4756 0579  
                                          l4678 0B4A                                            l4838 0961  
                                          l5488 04BF                                  _Trise_raw_prev 00A0  
                                          _LATA 0018                                            _LATB 0019  
                                          _LATC 001A                                            u2410 0F03  
                                          u2500 0F2F                                            u2420 0F09  
                                          u2412 0F04                                            u2510 0F36  
                                          u2502 0F30                                            u2430 0F10  
                                          u2422 0F0A                                            u3305 0198  
                                          u3065 0452                                            u2610 0F62  
                                          u2530 0F3C                                            u2450 0F16  
                                          _T2PR 028D                                            u3235 0D16  
                                          u3315 0230                                            u2620 0F68  
                                          u2612 0F63                                            u2604 0F5E  
                                          u2540 0F42                                            u2532 0F3D  
                                          u2524 0F38                                            u2460 0F1C  
                                          u2452 0F17                                            u2444 0F12  
                                          u3405 0EEE                                            u3190 0C75  
                                          u2630 0F6F                                            u2622 0F69  
                                          u2550 0F49                                            u2542 0F43  
                                          u2470 0F23                                            u2462 0F1D  
                                          u3255 0D22                                            u3265 0D36  
                                          u3345 0E90                                            u3417 0B19  
                                          u2650 0F79                                            u2570 0F4F  
                                          u2490 0F29                               ??_CMP2_Initialize 004B  
                                          u3275 0D42                                            u3427 0B27  
                                          u2580 0F55                                            u2572 0F50  
                                          u2564 0F4B                                            u2492 0F2A  
                                          u2484 0F25                                            u3437 0A5F  
                                          u2830 1793                                            u2590 0F5C  
                                          u2582 0F56                                            u3295 0107  
                                          u3375 0EB6                                            u2905 0CF0  
                                          u3385 0EC7                                            u2915 0CD8  
                                          _PMD0 0796                                            u2685 0B4B  
                                          _PMD1 0797                                            _PMD2 0798  
                                          u2695 0B52                                            _PMD3 0799  
                                          _PMD4 079A                                            _PMD5 079B  
                                          u2895 0CC4                                            _WPUA 1F39  
                                          _WPUB 1F44                                            _WPUC 1F4F  
                                _LIN_sendPacket 0A95                                   _EUSART1_Write 0A6F  
                                   _outputState 002C                                            _main 0B0C  
                                 ?_EUSART1_Read 0076                                            fsr0h 0005  
                                          fsr1h 0007                                            indf0 0000  
                                          fsr0l 0004                                            indf1 0001  
                                          fsr1l 0006                                            btemp 007E  
                              __end_of_CLC2_ISR 174B                                            start 002C  
                             ??_CLC3_Initialize 004B                                   processLIN@cmd 005D  
                               ?_LIN_breakCheck 0076                                    _CLC1GLS1bits 1E17  
                                  _CLC1GLS3bits 1E19                         __end_of_TMR0_Initialize 09EE  
                ??_TMR0_DefaultInterruptHandler 0076                                 ?_FVR_Initialize 0076  
                __size_of_OSCILLATOR_Initialize 000A                        __end_ofi1_TMR1_StopTimer 175B  
                 __end_of_OSCILLATOR_Initialize 087D                               LIN_sendPacket@pid 0053  
                         _eusart1RxStatusBuffer 0120                                           ?_main 0076  
                               LIN_init@command 004D                               i1CmdOutput@enable 007A  
                               _TMR1_StartTimer 175E                                 __end_of___lldiv 0D55  
                                         _T1CLK 0211                                           _T1CON 020E  
                                         _T2CON 028E                              __size_of_TCC_Curve 01EB  
                                         _T2HLT 028F                                           _T2TMR 028C  
                                         _T2RST 0291                                           i1l711 0A09  
                               _TMR0_WriteTimer 1795                                           i1l854 09CA  
               _LIN_CURRENT2COUNTS_SQUARED_Data 00DB                                           _OSCEN 0891  
                                         _TMR0H 059D                                           _TMR1H 020D  
                                         _TMR0L 059C                                           _TMR1L 020C  
                                         _EFuse 0E78                                           _TRISA 0012  
                                         _TRISB 0013                                           _TRISC 0014  
                              __end_of_LIN_init 0A2B                           __end_of_LIN_stopTimer 177B  
             __size_of_TMR0_SetInterruptHandler 0008                             ___lmul@multiplicand 004F  
                     ?_TMR0_SetInterruptHandler 004B                               ??_CLC4_Initialize 004B  
                            __size_of_EFuseInit 0023                            _EUSART1_Transmit_ISR 09EE  
                              __end_of_TMR0_ISR 09D2                                           _Tsink 0035  
                 __size_of_LIN_Slave_Initialize 000D                          _current2counts_squared 00E5  
                            __size_of_TMR2_Stop 0003                                     ?_TMR2_Start 0076  
                        __end_of_LIN_sendPacket 0ABB                    _LIN_TEMPERATURE_RISE_SA_Data 00C3  
                  _LIN_TEMPERATURE_RISE_JS_Data 00C5                                  ?_EUSART1_Write 0076  
                       __end_of_TMR1_Initialize 09B7                                           pclath 000A  
                                _LIN_startTimer 08E7                                  ??_EUSART1_Read 004B  
                                         status 0003                                           wtemp0 007E  
    __end_of_EUSART1_DefaultFramingErrorHandler 1748     __size_of_EUSART1_DefaultFramingErrorHandler 0001  
          ??_EUSART1_DefaultFramingErrorHandler 0076             ?_EUSART1_DefaultFramingErrorHandler 0076  
            _EUSART1_DefaultFramingErrorHandler 1747                                 _TMR1_WriteTimer 093F  
                         _LIN_OUTPUT_STATE_Data 0043                                ?_LIN_getChecksum 004B  
                   LIN_queuePacket@tempSchedule 005E                                 __initialization 002E  
                     __size_of_LIN_timerHandler 000C                                    ?_LIN_handler 0076  
                                  ?i1_TMR2_Stop 0076                      __end_of_EUSART1_Initialize 0C6E  
                                  __end_of_main 0B38                         __end_of_DAC1_Initialize 1781  
                            __size_of_CmdOutput 005D                         __end_of_TMR2_Initialize 08C9  
                   ?_INTERRUPT_InterruptManager 0076                             _LIN_UVLO_FAULT_Data 0040  
                                        ??_main 0158                                          ?_EFuse 0076  
                                  _iSenseOffset 0037                           ?_EUSART1_Transmit_ISR 0076  
                            LIN_sendPacket@data 0054                                          _ADCON0 009D  
                                        _ADCON1 009E                                          _CM2NCH 0996  
                                        _CM2PCH 0997                          __end_of_LIN_startTimer 08F6  
                                        _ADRESH 009C                                 ?_LIN_sendPacket 0053  
                                        _ADRESL 009B                                          _ANSELA 1F38  
                                        _ANSELB 1F43                                          _ANSELC 1F4E  
                                        _T0CON0 059E                                          _T0CON1 059F  
                                  ?i1_CmdOutput 0076                                          _T1GATE 0210  
                                        _T1GCON 020F                                          _RC1REG 0119  
                                        _RC1STA 011D                                          i1l1114 0997  
                       TMR1_WriteTimer@timerVal 004B                                          i1l1062 000E  
                                        i1l1072 002A                                          i1l1065 0017  
                        _LIN_DAC_I_HW_TRIP_Data 0046                                          i1l1067 0021  
                                        _RB7PPS 1F1F                                          _ODCONA 1F3A  
                                        _ODCONB 1F45                                          _ODCONC 1F50  
                                        _RC6PPS 1F26                                          i1l1471 06BA  
                  __size_of_EUSART1_is_rx_ready 0008                                          _RC7PPS 1F27  
                                        i1l1485 0D96                                          i1l4154 0C17  
                                        i1l4148 0C09                                          i1l4158 0C26  
                                        i1l3448 08D3                                          i1l3932 0710  
                                        i1l3916 06D9                                          i1l3944 0738  
                                        _INLVLA 1F3C                                          _INLVLB 1F47  
                                        _INLVLC 1F52                                          _FVRCON 090C  
                                        u165_25 06C4                                          u166_25 06CC  
                                        u344_27 06AB                                          u345_27 06F4  
                                        u346_27 0992                                          _OSCFRQ 0893  
                  __size_of_ProcessAnalogInputs 00B9                                          _TX1REG 011A  
                                        _TX1STA 011E                                 _LIN_processData 0168  
                         _LIN_TRIGGER_TYPE_Data 0049                               __end_of_TCC_Curve 0252  
                             __end_of_EFuseInit 0A6F                                    ?_TMR0_Reload 0076  
                     i1TMR1_WriteTimer@timerVal 0076                                          ___lmul 0B38  
                       __end_of_TMR1_StartTimer 1761                                          ___omul 0C6E  
                               _LIN_queuePacket 0F7D                               __end_of_TMR2_Stop 1767  
                       __end_of_TMR0_WriteTimer 179D                                       ??___lldiv 005F  
                           __size_of_TMR2_Start 0002                        ?_EUSART1_SetErrorHandler 004B  
                                        _memcpy 0AE2                                ?_TMR0_Initialize 0076  
                                        _memset 074E                ??_EUSART1_SetOverrunErrorHandler 004D  
               ?_EUSART1_SetOverrunErrorHandler 004B                                  _PMD_Initialize 17DD  
                                     ?_CLC2_ISR 0076                                _LIN_rxInProgress 0028  
                      ADC_GetConversion@channel 0079                                 ??_EUSART1_Write 004B  
      TMR0_SetInterruptHandler@InterruptHandler 004B                                 _CLC1_Initialize 0916  
                               ?_LIN_startTimer 0076                         __end_of_TMR1_WriteTimer 0956  
                               _eusart1RxBuffer 0128                                 _eusart1TxBuffer 0130  
                              ?_TMR1_Initialize 0076                               __end_of_CmdOutput 0E0E  
                             _SYSTEM_Initialize 0BC6                                 _Update_LIN_Data 05D8  
                       __end_of__initialization 0063                         ??_GetAmbientTemperature 004D  
                            ?_SYSTEM_Initialize 0076                                   ?_LIN_checkPID 0076  
                                 __end_of_EFuse 0EFA                  __size_of_EUSART1_RxDataHandler 0018  
                 __end_of_EUSART1_RxDataHandler 0985                                       ?_LIN_init 004D  
                                __pcstackCOMMON 0076                                   ?_LIN_enableRx 0076  
                              ??_LIN_calcParity 004B                                 LIN_sendPacket@i 0058  
                                  __pidataBANK0 17E5                                    __pidataBANK1 087D  
                           ??_SYSTEM_Initialize 0053                                   ?i1_TMR2_Start 0076  
                              ?_DAC1_Initialize 0076                                   _dac_i_hw_trip 006A  
                                     ?_TMR0_ISR 0076                                 _CLC2_Initialize 092A  
                              ?_TMR2_Initialize 0076                          __end_of_PMD_Initialize 17E5  
                          __end_of_EUSART1_Read 0AE2                                 _CMP2_Initialize 17F6  
                        LIN_handler@rxDataIndex 0024                          ??_EUSART1_Transmit_ISR 0076  
                                       ??_EFuse 0065                                      ??_CLC2_ISR 0076  
                             ?_LIN_getFromTable 004B                     __end_of_EUSART1_Receive_ISR 0C29  
                        LIN_handler@LIN_rxState 0025                              ??_LIN_getFromTable 004C  
                     __end_of_SYSTEM_Initialize 0BF6                                 _CLC3_Initialize 0905  
                                 _eusart1RxHead 0071                                   _eusart1TxHead 0073  
                                 _eusart1RxTail 0070                                      __pbssBANK0 0020  
                                    __pbssBANK1 00A0                                      __pbssBANK2 0120  
                                 _eusart1TxTail 0072               _EUSART1_TxDefaultInterruptHandler 0166  
               ??_EUSART1_SetRxInterruptHandler 004D                        __size_ofi1_LIN_stopTimer 0005  
                      ?_EUSART1_get_last_status 0076                                ??_LIN_breakCheck 004D  
                                ??_LIN_checkPID 0052                     __end_of_LIN_setTimerHandler 17DD  
                       __end_of_LIN_queuePacket 1000                                _LIN_B1_COEF_Data 0045  
               __end_of_EUSART1_SetErrorHandler 17AD                                  ??_LIN_enableRx 004B  
                              ??_FVR_Initialize 004B                                      __pmaintext 0B0C  
                              _LIN_timerHandler 0887                                      ??_LIN_init 0051  
                                ??i1_TMR2_Start 0076                             LIN_getChecksum@data 004C  
              __end_of_TMR0_SetInterruptHandler 17D5                                         ?___lmul 004B  
                                       ?___omul 004B                                ?_TMR1_StartTimer 0076  
                                    ??_TMR0_ISR 007C                                 _CLC4_Initialize 08F6  
                                    __pintentry 0004                                ?_TMR0_WriteTimer 004B  
                          __size_of_LIN_handler 0142                                         _CM2CON0 0994  
                                       _CM2CON1 0995                            __size_ofi1_TMR2_Stop 0003  
                                       _CLC1CON 1E10                                         _CLC2CON 1E1A  
                                       ?_memcpy 004B                                         _CLC3CON 1E24  
                                       _CLC4CON 1E2E                                         ?_memset 004B  
                                       _CLC1POL 1E11                                         _CLC2POL 1E1B  
                                       _CLC3POL 1E25                             ___omul@multiplicand 0053  
                                ___lmul@product 0053                                         _CLC4POL 1E2F  
                               ?_PMD_Initialize 0076                           LIN_getChecksum@length 004F  
                             ?i1_TMR1_StopTimer 0076                         __size_of_ADC_Initialize 0008  
        __end_of_EUSART1_SetFramingErrorHandler 17B5         __size_of_EUSART1_SetFramingErrorHandler 0008  
                _EUSART1_SetFramingErrorHandler 17AD                         __size_of_TMR1_StopTimer 0003  
                              _LIN_timerRunning 0027                         __end_of_CLC1_Initialize 092A  
                       _LIN_ADC_TEMP_SENSE_Data 00D1                              ??i1_TMR1_StopTimer 0076  
        _LIN_ADC_CURRENT_SENSE_UNCORRECTED_Data 00D3                    ?_EUSART1_DefaultErrorHandler 0076  
                                       _SP1BRGH 011C                                         _SP1BRGL 011B  
                                       _OSCCON1 088D                                         _OSCCON3 088F  
                       __end_of_Update_LIN_Data 0695                                         _OSCSTAT 0890  
                                       _OSCTUNE 0892                                         _SLRCONA 1F3B  
                                       _SLRCONB 1F46                                         _SLRCONC 1F51  
                                  ??_TMR2_Start 004B                          __size_of_LIN_getPacket 0021  
                              ?_TMR1_WriteTimer 004B                          __size_of_LIN_disableRx 0005  
                                       _a1_coef 00E3                                         _b1_coef 0069  
                       LIN_getChecksum@checksum 0051                GetAmbientTemperature@temperature 0054  
                          __size_ofi1_CmdOutput 005C                       _LIN_GET_TRIGGER_TYPE_Data 0042  
                       __end_of_CLC2_Initialize 093F                                _adcVccSense_curr 003D  
                                     _CLCIN0PPS 1EBB                            _ADC_InterruptHandler 00B2  
                              _adcVccSense_prev 00B0                    __end_of_LIN_Slave_Initialize 08AD  
                       __end_of_CMP2_Initialize 1800                                 __size_of___lmul 002F  
                               __size_of___omul 0047                     _LIN_REDUCED_DRIVE_TIME_Data 0044  
                                       ___lldiv 0D03                            __size_of_TMR0_Reload 0009  
                           _EUSART1_is_rx_ready 178D                              __end_of_TMR2_Start 174F  
                               __size_of_memcpy 002A                                 __size_of_memset 0095  
                     _LIN_ENTER_SLEEP_MODE_Data 0048                             _ProcessAnalogInputs 0695  
                                       __ptext1 0BC6                                         __ptext2 099E  
                                       __ptext3 09D2                                         __ptext4 17DD  
                                       __ptext5 0B67                                         __ptext6 0873  
                                       __ptext7 08A0                                         __ptext8 0A0C  
                                       __ptext9 17D5                                       _T1CONbits 020E  
                       __end_of_CLC3_Initialize 0916                           _OSCILLATOR_Initialize 0873  
                              ??_LIN_sendPacket 0055                                       _T2CONbits 028E  
                                    _isense_max 0066                              _EUSART1_Initialize 0C29  
                      ??_PIN_MANAGER_Initialize 004B                   ??_EUSART1_DefaultErrorHandler 0077  
                    __size_of_SYSTEM_Initialize 0030                                         clrloop0 1782  
               __end_of_EUSART1_get_last_status 0004                       LIN_getFromTable@rxCommand 0050  
                          end_of_initialization 0063                            ?_EUSART1_is_rx_ready 0076  
                           ?_EUSART1_Initialize 0076                                  ___omul@product 005C  
                                       memcpy@d 0053                                         memcpy@n 004D  
                                       memcpy@s 0051                            ?_ProcessAnalogInputs 0076  
                                       init_ram 1787                                         memset@c 004B  
                                       memset@k 0051                                         memset@n 004D  
                                       memset@s 0054                     _EUSART1_OverrunErrorHandler 0160  
                                       initloop 1788                         __end_of_CLC4_Initialize 0905  
                              ?_LIN_queuePacket 0076                                 ___lldiv@divisor 0057  
         __end_of_EUSART1_SetRxInterruptHandler 17C5          __size_of_EUSART1_SetRxInterruptHandler 0008  
                 _EUSART1_SetRxInterruptHandler 17BD                                 ___lldiv@counter 0064  
                        __size_of_LIN_stopTimer 0005                               ??i1_LIN_stopTimer 0076  
                                     _TCC_Curve 0067                           __size_of_EUSART1_Read 0027  
                                 _LIN_getPacket 0A2B                                   _LIN_disableRx 176C  
                          ??_EUSART1_Initialize 004D                                       _EFuseInit 0A4C  
                      __size_of_LIN_getChecksum 0030                               LIN_getPacket@data 0056  
                      _TMR0_SetInterruptHandler 17CD                                       _TMR2_Stop 1764  
                                    _processLIN 04E0                            __end_of_LIN_checkPID 096D  
                              ?_CLC1_Initialize 0076            _LIN_ADC_CURRENT_SENSE_CORRECTED_Data 00CF  
                           LIN_init@tableLength 0052                                ??_LIN_startTimer 004D  
                               CmdOutput@enable 004F                                       _TRISCbits 0014  
                          __end_of_LIN_enableRx 1776                                ?_Update_LIN_Data 0076  
                             __size_of_CLC2_ISR 0002                                   _scheduleTable 07E3  
                          __end_ofi1_TMR2_Start 174D                __size_of_EUSART1_SetErrorHandler 0008  
                            _factor_rdson_rthjs 00E9                              _factor_rdson_rthsa 00E7  
                           EUSART1_Write@txData 004C                           ??_EUSART1_is_rx_ready 004B  
                         ??_ProcessAnalogInputs 007B                                     _CM2CON0bits 0994  
                                  _EUSART1_Read 0ABB                                ?_CLC2_Initialize 0076  
                                     _CmdOutput 0DB1                  __size_of_GetAmbientTemperature 004E  
                 __end_of_GetAmbientTemperature 0D03                                   _LIN_rxCommand 00EB  
          __size_of_EUSART1_DefaultErrorHandler 0003                            _timer0ReloadVal16bit 006E  
                              _overCurrentFault 002B                                      ?_TCC_Curve 0076  
                                ?_LIN_getPacket 0076                                ?_CMP2_Initialize 0076  
                                ?_LIN_disableRx 0076                                     _CLC1CONbits 1E10  
                             __size_of_LIN_init 001F                                  __end_of___lmul 0B67  
                                __end_of___omul 0CB5                                     _CLC3CONbits 1E24  
                                    ?_EFuseInit 0076                   _LIN_CURRENT_SENSE_OFFSET_Data 00CD  
                             __size_of_TMR0_ISR 001B                                  _ADC_Initialize 179D  
                                _TMR1_StopTimer 1761                                      ?_TMR2_Stop 0076  
                                __end_of_memcpy 0B0C                          ?_OSCILLATOR_Initialize 0076  
                                __end_of_memset 07E3                                     _CLC1POLbits 1E11  
                                   _CLC2POLbits 1E1B                                ?_CLC3_Initialize 0076  
                           start_initialization 002E                                   _LIN_stopTimer 1776  
                      __size_of_TMR0_Initialize 001C                 __size_of_PIN_MANAGER_Initialize 002F  
                      __end_of_LIN_timerHandler 0893                            _LIN_Slave_Initialize 08A0  
                 _LIN_JUNCTION_TEMPERATURE_Data 00C7   EUSART1_SetRxInterruptHandler@interruptHandler 004B  
 EUSART1_SetTxInterruptHandler@interruptHandler 004B                           __end_of_EUSART1_Write 0A95  
                                   _CLCDATAbits 1E0F                           LIN_startTimer@timeout 004E  
                             ___omul@multiplier 004B                          _LIN_ADC_VCC_SENSE_Data 00D5  
                              ?_CLC4_Initialize 0076                                      ?_CmdOutput 0076  
                     __size_of_LIN_getFromTable 006A                               LIN_calcParity@CMD 004C  
                             LIN_calcParity@PID 004D                        __size_of_TMR1_Initialize 0019  
                              ??_PMD_Initialize 004B                                        ??___lmul 0053  
                                      ??___omul 005B                           _EUSART1_RxDataHandler 096D  
                ?_EUSART1_SetRxInterruptHandler 004B                          __end_of_ADC_Initialize 17A5  
                        __end_of_TMR1_StopTimer 1764                                     __pdataBANK0 0066  
                                   __pdataBANK1 00E1                                        ??_memcpy 004F  
                                      ??_memset 004F                            processLIN@tempRxData 005E  
              __size_of_EUSART1_get_last_status 0002                                      memset@dest 0053  
                           _LIN_DIAGNOSTIC_Data 0138                                     ?_processLIN 0076  
                             i1_TMR2_Initialize 08AD                                       _Tjunction 0033  
                                _eusart1RxCount 0023                             LIN_init@processData 004F  
                      __size_of_DAC1_Initialize 0006                              ?i1_TMR2_Initialize 0076  
                                ?_LIN_stopTimer 0076                                     __pbssCOMMON 0070  
             _EUSART1_RxDefaultInterruptHandler 0164                                       ___latbits 0002  
                 __size_of_EUSART1_Transmit_ISR 001E                                   __pcstackBANK0 004B  
                                 __pcstackBANK2 0140                               ??_LIN_getChecksum 004D  
                         ?_LIN_Slave_Initialize 0076                        __size_of_TMR2_Initialize 000E  
                           ??i1_TMR2_Initialize 0076                                  _temperatureLUT 0252  
               ??_EUSART1_SetTxInterruptHandler 004D                       __size_ofi1_TMR1_StopTimer 0003  
              ??_EUSART1_SetFramingErrorHandler 004D                 ?_EUSART1_SetFramingErrorHandler 004B  
                  __size_of_EUSART1_Receive_ISR 0033                           _TMR0_InterruptHandler 015C  
                                     __pnvBANK0 006E                                       __pnvBANK1 00EB  
                                     __pnvBANK2 015A                                 ??_LIN_getPacket 0055  
                        _PIN_MANAGER_Initialize 0B67                                   ??_LIN_handler 0140  
                              LIN_getChecksum@i 0050                                 ??_LIN_disableRx 004B  
                                 ??i1_TMR2_Stop 0076                              LIN_getChecksum@pid 004B  
                                   ??_TCC_Curve 0140                               _ADC_SelectChannel 0893  
                          LIN_sendPacket@length 0057                                        ?___lldiv 0057  
                  __size_of_LIN_setTimerHandler 0008                                 ?_ADC_Initialize 0076  
                         __size_of_LIN_checkPID 0017                                 ?_TMR1_StopTimer 0076  
                            ?_ADC_SelectChannel 0076                                     ??_EFuseInit 0050  
                     __end_ofi1_TMR2_Initialize 08BB                               i1_TMR1_StartTimer 1755  
                                      _DAC1CON0 090E                                        _DAC1CON1 090F  
                  ??_INTERRUPT_InterruptManager 007C                                     ??_TMR2_Stop 004B  
                            ?i1_TMR1_StartTimer 0076                           __size_of_LIN_enableRx 0005  
                                      _BAUD1CON 011F                           __size_ofi1_TMR2_Start 0002  
                                      _CLC1GLS0 1E16                                        _CLC1GLS1 1E17  
                                      _CLC1GLS2 1E18                                        _CLC1GLS3 1E19  
                                      _CLC2GLS0 1E20                                        _CLC2GLS1 1E21  
                                      _CLC2GLS2 1E22                                        _CLC2GLS3 1E23  
                                      _CLC3GLS0 1E2A                                        _CLC3GLS1 1E2B  
                                      _CLC3GLS2 1E2C                                        _CLC3GLS3 1E2D  
                   _LIN_FACTOR_RDSON_RTHSA_Data 00DD                     _LIN_FACTOR_RDSON_RTHJS_Data 00DF  
                                      _CLC4GLS0 1E34                                        _CLC4GLS1 1E35  
                                      _CLC4GLS2 1E36                                        _CLC4GLS3 1E37  
                                      _CLC1SEL0 1E12                                        _CLC1SEL1 1E13  
                                      _CLC1SEL2 1E14                                        _CLC1SEL3 1E15  
                      __size_of_TMR1_StartTimer 0003                                        _CLC2SEL0 1E1C  
                                      _CLC2SEL1 1E1D      __end_of_EUSART1_DefaultOverrunErrorHandler 1755  
   __size_of_EUSART1_DefaultOverrunErrorHandler 0003            ??_EUSART1_DefaultOverrunErrorHandler 0076  
           ?_EUSART1_DefaultOverrunErrorHandler 0076                                        _CLC2SEL2 1E1E  
            _EUSART1_DefaultOverrunErrorHandler 1752                                        _CLC2SEL3 1E1F  
                                      _CLC3SEL0 1E26                                        _CLC3SEL1 1E27  
                                      _CLC3SEL2 1E28                                        _CLC3SEL3 1E29  
                                __size_of_EFuse 0082                                        _CLC4SEL0 1E30  
                                      _CLC4SEL1 1E31                                        _CLC4SEL2 1E32  
                                      _CLC4SEL3 1E33                             ??_ADC_SelectChannel 0076  
                       __size_of_LIN_calcParity 0083                        __size_of_TMR0_WriteTimer 0008  
                          _EUSART1_ErrorHandler 015E                                        _CLC2_ISR 1749  
                      _LIN_OVER_TEMP_FAULT_Data 003F                         _EUSART1_SetErrorHandler 17A5  
                           ??i1_TMR1_StartTimer 0076                          __end_of_temperatureLUT 039E  
                                      _T2CLKCON 0290                                   ??i1_CmdOutput 0078  
                               LIN_checkPID@pid 0052                                 i1_LIN_stopTimer 1767  
                             i1_TMR1_WriteTimer 08C9                               ??_TMR0_Initialize 004D  
       EUSART1_SetErrorHandler@interruptHandler 004B                                        _LATBbits 0019  
                  _LIN_AMBIENT_TEMPERATURE_Data 00CB                              ?i1_TMR1_WriteTimer 0076  
                                     clear_ram0 1781                                        _PIE0bits 0716  
                           __size_of_processLIN 00F8                                        _PIE3bits 0719  
                                   ??_CmdOutput 004D                                        _PIE5bits 071B  
                                  _LIN_checkPID 0956                       __end_of_ADC_SelectChannel 08A0  
                      __size_of_TMR1_WriteTimer 0017             __size_of_INTERRUPT_InterruptManager 0028  
                    ??_TMR0_SetInterruptHandler 004D                                       _ticks_1ms 00B4  
                                      _PIR0bits 070C                                        _PIR2bits 070E  
                                      _PIR3bits 070F                                        _PIR4bits 0710  
                                      _PIR5bits 0711                                   ??_TMR0_Reload 004B  
                                      _RX1DTPPS 1ECB                                        _LIN_init 0A0C  
                        ?_EUSART1_RxDataHandler 0076                       __end_ofi1_TMR1_StartTimer 1758  
                                  _LIN_enableRx 1771                             ??i1_TMR1_WriteTimer 0078  
                                      _TMR0_ISR 09B7                                _LIN_COMMAND_Data 004A  
                                  i1_TMR2_Start 174B                                LIN_getPacket@cmd 0057  
                       __size_of_LIN_breakCheck 000F                               ??_TMR1_Initialize 004B  
                           __end_of_LIN_handler 04E0                                      _ADCON0bits 009D  
                           __end_ofi1_TMR2_Stop 175E                                 ??_LIN_stopTimer 004B  
                      ADC_SelectChannel@channel 0077                         __size_of_FVR_Initialize 0004  
                        ??_LIN_Slave_Initialize 0053                          GetAmbientTemperature@i 0053  
                                     _uvloFault 002A                        _LIN_TCC_SAMPLE_TIME_Data 00D7  
                     __end_ofi1_TMR1_WriteTimer 08D8                               ___lmul@multiplier 004B  
                             ??_DAC1_Initialize 004B                    GetAmbientTemperature@adcTemp 0051  
                             ??_TMR2_Initialize 004B                           EUSART1_Read@readValue 004C  
                           __end_ofi1_CmdOutput 0DB1                                        _Tambient 006C  
                              _LIN_getFromTable 0E0E                               _LIN_TJ_LIMIT_Data 0047  
         __end_of_EUSART1_SetTxInterruptHandler 17CD          __size_of_EUSART1_SetTxInterruptHandler 0008  
                 _EUSART1_SetTxInterruptHandler 17C5                                       memcpy@tmp 0050  
                             _ADC_GetConversion 0985                         ??_OSCILLATOR_Initialize 004B  
                            ?_ADC_GetConversion 0076                         _EUSART1_get_last_status 0002  
                    __size_ofi1_TMR2_Initialize 000E                        __size_of_LIN_queuePacket 0083  
                              __size_of___lldiv 0052                                        _Trise_js 0031  
                                      _Trise_sa 002F                     __size_of_EUSART1_Initialize 0045  
                                _adcISense_corr 0039                                  _adcISense_curr 003B  
                                _adcISense_prev 00AC                             __end_of_TMR0_Reload 17F6  
                     ??_EUSART1_SetErrorHandler 004D             __end_of_EUSART1_DefaultErrorHandler 1752  
                   _EUSART1_DefaultErrorHandler 174F                             ??_ADC_GetConversion 0078  
                   __end_of_EUSART1_is_rx_ready 1795                         __end_ofi1_LIN_stopTimer 176C  
                   __end_of_ProcessAnalogInputs 074E                                        __ptext10 17CD  
                                      __ptext11 086F                                        __ptext20 08F6  
                                      __ptext12 0C29                                        __ptext21 0905  
                                      __ptext13 17C5                                        __ptext30 17ED  
                                      __ptext22 092A                                        __ptext14 17BD  
                                      __ptext31 1776                                        __ptext23 0916  
                                      __ptext15 17B5                                        __ptext40 176C  
                                      __ptext32 08E7                                        __ptext24 179D  
                                      __ptext16 17AD                                        __ptext41 0956  
                                      __ptext33 1795                                        __ptext25 039E  
                                      __ptext17 17A5                                        __ptext50 0067  
                                      __ptext42 0E0E                                        __ptext34 0F7D  
                                      __ptext26 04E0                                        __ptext18 177B  
                                      __ptext51 0C6E                                        __ptext43 0EFA  
                                      __ptext35 0AE2                                        __ptext27 0A2B  
                                      __ptext19 17F6                                        __ptext60 1761  
                                      __ptext52 0B38                                        __ptext44 08D8  
                                      __ptext36 0A95                                        __ptext28 074E  
                                      __ptext61 175E                                        __ptext53 0D03  
                                      __ptext45 0002                                        __ptext37 0B96  
                                      __ptext29 0A4C                                        __ptext70 08AD  
                                      __ptext54 0CB5                                        __ptext46 0ABB  
                                      __ptext38 0A6F                                        __ptext71 08C9  
                                      __ptext63 09B7                                        __ptext55 0DB1  
                                      __ptext47 178D                                        __ptext39 1771  
                                      __ptext80 1747                                        __ptext72 1758  
                                      __ptext64 0887                                        __ptext56 1764  
                                      __ptext48 0E78                                        __ptext81 174F  
                                      __ptext73 1755                                        __ptext65 1748  
                                      __ptext57 174D                                        __ptext49 05D8  
                                      __ptext82 096D                                        __ptext74 0893  
                                      __ptext66 0695                                        __ptext58 08BB  
                                      __ptext83 1749                                        __ptext75 0985  
                                      __ptext67 0D55                                        __ptext59 093F  
                                      __ptext76 1767                                        __ptext68 175B  
                                      __ptext77 09EE                                        __ptext69 174B  
                                      __ptext78 0BF6                                        __ptext79 1752  
                             ?_LIN_timerHandler 0076                                   _overTempFault 0029  
                             ??_TMR1_StartTimer 004B                        __size_of_CLC1_Initialize 0014  
                       TMR0_WriteTimer@timerVal 004B                              ??_LIN_timerHandler 0076  
                             ??_TMR0_WriteTimer 004D                                i1_TMR1_StopTimer 1758  
                       __size_of_LIN_sendPacket 0026                          LIN_getFromTable@length 004F  
                                 __size_of_main 002C                        __size_of_Update_LIN_Data 00BD  
          __end_of_TMR0_DefaultInterruptHandler 1749           __size_of_TMR0_DefaultInterruptHandler 0001  
                  _TMR0_DefaultInterruptHandler 1748                       __end_of_ADC_GetConversion 099E  
                    __size_of_ADC_SelectChannel 000D                                      _RC1STAbits 011D  
                                      _tj_limit 006B                             _LIN_rxCommandLength 00EE  
EUSART1_SetOverrunErrorHandler@interruptHandler 004B                                     _LIN_handler 039E  
                                   i1_TMR2_Stop 175B                           _GetAmbientTemperature 0CB5  
                    __size_ofi1_TMR1_StartTimer 0003                                        int$flags 007E  
                           _LIN_ISENSE_MAX_Data 00D9                                 _LIN_getChecksum 0B96  
            __end_of_INTERRUPT_InterruptManager 002C                      _INTERRUPT_InterruptManager 0004  
                      __size_of_CLC2_Initialize 0015                               ??_TMR1_WriteTimer 004D  
                   _EUSART1_FramingErrorHandler 0162                             _EUSART1_Receive_ISR 0BF6  
                                  ??_processLIN 0058                                     _LIN_timeout 0068  
                               _tcc_sample_time 00E1                                  _LIN_calcParity 0EFA  
                                    _INTCONbits 000B                        __size_of_CMP2_Initialize 000A  
                                      memcpy@d1 0054                                        memcpy@s1 004B  
                    __size_ofi1_TMR1_WriteTimer 000F                             _LIN_setTimerHandler 17D5  
                                   i1_CmdOutput 0D55                                        intlevel1 0000  
                      __size_of_CLC3_Initialize 0011                                   _CountCallBack 0026  
                          ?_EUSART1_Receive_ISR 0076                                    _DAC1CON1bits 090F  
                       __size_of_LIN_startTimer 000F                                ___lldiv@dividend 005B  
                       ?_PIN_MANAGER_Initialize 0076          __end_of_EUSART1_SetOverrunErrorHandler 17BD  
       __size_of_EUSART1_SetOverrunErrorHandler 0008                  _EUSART1_SetOverrunErrorHandler 17B5  
                         LIN_getFromTable@param 004B                    __end_of_EUSART1_Transmit_ISR 0A0C  
                            __end_of_processLIN 05D8                                ??_ADC_Initialize 004B  
                              ??_TMR1_StopTimer 004B                   ?_TMR0_DefaultInterruptHandler 0076  
                     ??_EUSART1_get_last_status 004B                                     _TMR0_Reload 17ED  
                                    _LIN_packet 00B6                            ?_LIN_setTimerHandler 0076  
                           _adcISense_OneMOSFET 00AE  EUSART1_SetFramingErrorHandler@interruptHandler 004B  
                ?_EUSART1_SetTxInterruptHandler 004B                                  _LIN_breakCheck 08D8  
                   _LIN_OVER_CURRENT_FAULT_Data 0041                        __size_of_CLC4_Initialize 000F  
                        __size_of_EUSART1_Write 0026                              _eusart1RxLastError 0022  
                        __end_of_LIN_calcParity 0F7D                                   __pstringtext1 0252  
                                 __pstringtext2 07E3                              LIN_queuePacket@cmd 005C  
                                _FVR_Initialize 086F                                ___lldiv@quotient 0060  
                               _TMR0_Initialize 09D2                               ??_LIN_queuePacket 0059  
                              ?i1_LIN_stopTimer 0076                                      _TX1STAbits 011E  
                                    _TMR2_Start 174D                           ??_EUSART1_Receive_ISR 0077  
                __end_of_PIN_MANAGER_Initialize 0B96                   _LIN_HEATSINK_TEMPERATURE_Data 00C9  
                           LIN_getFromTable@cmd 004E                              _reduced_drive_time 002D  
                              LIN_queuePacket@i 005D                         ??_EUSART1_RxDataHandler 0076  
                    __size_of_ADC_GetConversion 0019                         __end_of_LIN_getChecksum 0BC6  
                               _TMR1_Initialize 099E                               ??_CLC1_Initialize 004B  
                        ?_GetAmbientTemperature 004B                                  _adcTSense_curr 0074  
